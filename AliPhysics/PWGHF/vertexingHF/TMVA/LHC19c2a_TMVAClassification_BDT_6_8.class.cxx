#include "LHC19c2a_TMVAClassification_BDT_6_8.class.h"

double ReadBDT_LHC19c2a_6_8::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_6_8::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.441144630123264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43088, 1, 1, 0.747935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269094,-99) , 
5, 0.999524, 0, 0, 0.696562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315674,-99) , 
9, -951.286, 0, 0, 0.423333,-99) , 
NN(
0, 
0, 
-1, -1.57558, 1, -1, 0.0474511,-99) , 
5, 0.999524, 0, 0, 0.373632,-99) , 
11, -2.47955, 1, 0, 0.499758,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.250178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.612604, 1, 1, 0.722563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.214052,-99) , 
6, 0.520531, 1, 0, 0.460381,-99) , 
NN(
0, 
0, 
-1, -2.05138, 1, -1, 0.0793586,-99) , 
5, 0.999524, 0, 0, 0.41366,-99) , 
11, -2.97894, 1, 0, 0.492013,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.385328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2979, 1, 1, 0.645726,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.257918,-99) , 
5, 0.999524, 0, 0, 0.601378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292759,-99) , 
9, -951.198, 0, 0, 0.387764,-99) , 
NN(
0, 
0, 
-1, 0.702102, 1, -1, 0.0931902,-99) , 
6, 0.332164, 1, 0, 0.331048,-99) , 
11, -1.95643, 1, 0, 0.472317,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.238766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.616652, 1, 1, 0.691566,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.402267,-99) , 
11, -3.15212, 1, 0, 0.462176,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.236265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42184, 1, 1, 0.64163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299421,-99) , 
5, 0.999977, 0, 0, 0.439995,-99) , 
11, -2.54548, 1, 0, 0.513783,-99) , 
NN(
0, 
0, 
-1, -1.85508, 1, -1, 0.192851,-99) , 
5, 0.999524, 0, 0, 0.478518,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.249041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.67691, 1, 1, 0.603146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290284,-99) , 
11, -3.4301, 1, 0, 0.353495,-99) , 
6, 0.61785, 1, 0, 0.551729,-99) , 
NN(
0, 
0, 
-1, 0.237016, 1, -1, 0.367856,-99) , 
11, -1.90761, 1, 0, 0.466189,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.197679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28042,-99) , 
10, -1.61221, 0, 0, 0.522399,-99) , 
NN(
0, 
0, 
-1, 2.29253, 1, -1, 0.237759,-99) , 
10, 1.85715, 1, 0, 0.499589,-99) , 
NN(
0, 
0, 
-1, -1.9691, 1, -1, 0.207005,-99) , 
5, 0.999524, 0, 0, 0.468892,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.156622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.742657,-99) , 
NN(
0, 
0, 
-1, -1.28563, 0, -1, 0.455463,-99) , 
11, -3.88098, 1, 0, 0.475713,-99) , 
NN(
0, 
0, 
-1, -1.89293, 1, -1, 0.159017,-99) , 
5, 0.999048, 0, 0, 0.454221,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.158263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.426306, 1, 1, 0.629052,-99) , 
NN(
0, 
0, 
-1, -1.28566, 0, -1, 0.457035,-99) , 
11, -3.13021, 1, 0, 0.492376,-99) , 
NN(
0, 
0, 
-1, -0.448576, 1, -1, 0.17251,-99) , 
5, 0.999048, 0, 0, 0.471008,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.215418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489782,-99) , 
9, -949.006, 0, 0, 0.558091,-99) , 
NN(
0, 
0, 
-1, -1.64879, 1, -1, 0.316306,-99) , 
5, 0.999905, 0, 0, 0.522466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348024,-99) , 
3, 5.65693, 0, 0, 0.424138,-99) , 
NN(
0, 
0, 
-1, 0.823758, 1, -1, 0.173694,-99) , 
11, -2.35761, 1, 0, 0.321185,-99) , 
6, 0.520797, 1, 0, 0.481678,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.209624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25863,-99) , 
10, -1.85713, 0, 0, 0.549015,-99) , 
NN(
0, 
0, 
-1, -2.01744, 1, -1, 0.298758,-99) , 
5, 0.999766, 0, 0, 0.526129,-99) , 
NN(
0, 
0, 
-1, -2.01593, 1, -1, 0.298038,-99) , 
6, 0.617628, 1, 0, 0.490985,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.154822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385414,-99) , 
10, -1.04079, 0, 0, 0.512786,-99) , 
NN(
0, 
0, 
-1, -0.462267, 1, -1, 0.242568,-99) , 
5, 0.999048, 0, 0, 0.497035,-99) , 
NN(
0, 
0, 
-1, 0.33201, 1, -1, 0.191873,-99) , 
10, 2.14285, 1, 0, 0.480017,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.215318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450178,-99) , 
11, -1.20998, 1, 0, 0.536608,-99) , 
NN(
0, 
0, 
-1, -1.51312, 1, -1, 0.33528,-99) , 
5, 0.999905, 0, 0, 0.50899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377256,-99) , 
11, -3.52398, 1, 0, 0.424596,-99) , 
NN(
0, 
0, 
-1, 0.94284, 1, -1, 0.180349,-99) , 
11, -2.04835, 1, 0, 0.352083,-99) , 
6, 0.427065, 1, 0, 0.470417,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.170713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.64389, 1, 1, 0.642893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256773,-99) , 
10, -0.99997, 0, 0, 0.48005,-99) , 
11, -3.1426, 1, 0, 0.506921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394394,-99) , 
10, 0.333561, 0, 0, 0.442817,-99) , 
NN(
0, 
0, 
-1, 0.844421, 1, -1, 0.231185,-99) , 
11, -2.35926, 1, 0, 0.359858,-99) , 
6, 0.427511, 1, 0, 0.470994,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.10942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393733,-99) , 
5, 0.999932, 0, 0, 0.486707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212746,-99) , 
5, 0.998571, 0, 0, 0.47645,-99) , 
NN(
0, 
0, 
-1, 2.51023, 1, -1, 0.201027,-99) , 
10, 2.14287, 1, 0, 0.46197,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.141233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.96862, 1, 1, 0.564575,-99) , 
NN(
0, 
0, 
-1, -1.28569, 0, -1, 0.443642,-99) , 
11, -3.13021, 1, 0, 0.469888,-99) , 
NN(
0, 
0, 
-1, 2.5102, 1, -1, 0.215947,-99) , 
10, 2.14285, 1, 0, 0.456388,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.106608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401234,-99) , 
10, -0.795846, 0, 0, 0.48821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219758,-99) , 
5, 0.998571, 0, 0, 0.478486,-99) , 
NN(
0, 
0, 
-1, 2.51023, 1, -1, 0.227052,-99) , 
10, 2.14287, 1, 0, 0.465508,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.158337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380052,-99) , 
6, 0.14201, 1, 0, 0.464345,-99) , 
NN(
0, 
0, 
-1, 1.59986, 0, -1, 0.252908,-99) , 
10, -1.28564, 0, 0, 0.44726,-99) , 
11, -3.97106, 1, 0, 0.461881,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.238718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403459,-99) , 
7, 0.00453, 0, 0, 0.477246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.206876,-99) , 
7, 0.0237843, 1, 0, 0.469383,-99) , 
NN(
0, 
0, 
-1, 2.5102, 1, -1, 0.284265,-99) , 
10, 1.85715, 1, 0, 0.454585,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.119221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677517,-99) , 
NN(
0, 
0, 
-1, -1.57134, 0, -1, 0.449546,-99) , 
11, -3.88098, 1, 0, 0.465469,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.101824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.360939, 0, 1, 0.578019,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.469663,-99) , 
11, -3.07836, 1, 0, 0.493117,-99) , 
NN(
0, 
0, 
-1, -0.462267, 1, -1, 0.281293,-99) , 
5, 0.999048, 0, 0, 0.481126,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.07746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325373,-99) , 
10, -1.70745, 0, 0, 0.503981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272758,-99) , 
5, 0.998572, 0, 0, 0.495665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.202224,-99) , 
10, 2.42856, 1, 0, 0.487321,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0956311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422013,-99) , 
10, -0.673411, 0, 0, 0.494832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268043,-99) , 
5, 0.998571, 0, 0, 0.48687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.193754,-99) , 
10, 2.42857, 1, 0, 0.478782,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.132495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443134,-99) , 
11, -3.98927, 1, 0, 0.510585,-99) , 
10, -0.141415, 0, 0, 0.553158,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.450445,-99) , 
11, -2.99353, 1, 0, 0.47518,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.183138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426727,-99) , 
7, 0.00339691, 0, 0, 0.502192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272707,-99) , 
7, 0.0237791, 1, 0, 0.495715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281226,-99) , 
10, 2.14285, 1, 0, 0.485515,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.112713);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424409,-99) , 
6, 0.235653, 1, 0, 0.49007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254223,-99) , 
10, -1.57132, 0, 0, 0.479059,-99) , 
11, -3.76886, 1, 0, 0.493075,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.139787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86555, 1, 1, 0.680914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447508,-99) , 
11, -3.7796, 1, 0, 0.504796,-99) , 
10, -0.0566815, 0, 0, 0.555891,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.449841,-99) , 
11, -2.63082, 1, 0, 0.486389,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.122218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473838,-99) , 
7, 0.00566159, 0, 0, 0.511899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262269,-99) , 
7, 0.0237791, 1, 0, 0.50528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245262,-99) , 
10, 2.42858, 1, 0, 0.498468,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.121817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.68817, 1, 1, 0.598829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463825,-99) , 
11, -3.60265, 1, 0, 0.508092,-99) , 
10, 0.146228, 0, 0, 0.542859,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.456935,-99) , 
11, -1.83288, 1, 0, 0.505479,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0952824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327459,-99) , 
10, 2.30601, 1, 0, 0.525773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340194,-99) , 
10, -1.85709, 0, 0, 0.518222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308704,-99) , 
5, 0.998571, 0, 0, 0.510725,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0932869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494585,-99) , 
5, 0.999996, 0, 0, 0.531455,-99) , 
NN(
0, 
0, 
-1, -0.912859, 1, -1, 0.449359,-99) , 
5, 0.999955, 0, 0, 0.511055,-99) , 
NN(
0, 
0, 
-1, -0.462267, 1, -1, 0.349952,-99) , 
5, 0.999048, 0, 0, 0.502356,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0971288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83918, 1, 1, 0.629806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465602,-99) , 
11, -4.00482, 1, 0, 0.504782,-99) , 
10, -0.191041, 0, 0, 0.553935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264306,-99) , 
10, -1.57142, 0, 0, 0.491382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243209,-99) , 
5, 0.999048, 0, 0, 0.47985,-99) , 
11, -2.48251, 1, 0, 0.508273,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.143545);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460895,-99) , 
3, 1.71968, 0, 0, 0.551201,-99) , 
NN(
0, 
0, 
-1, 1.85707, 1, -1, 0.434234,-99) , 
7, 0.00226423, 0, 0, 0.506779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27067,-99) , 
7, 0.0237755, 1, 0, 0.500573,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0696223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49743,-99) , 
11, -2.97869, 1, 0, 0.518546,-99) , 
NN(
0, 
0, 
-1, 1.62275, 0, -1, 0.417094,-99) , 
10, -1.19038, 0, 0, 0.506127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28401,-99) , 
10, 2.42858, 1, 0, 0.500445,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.1128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71271, 0, 1, 0.620644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43766,-99) , 
11, -1.83125, 1, 0, 0.48661,-99) , 
7, 0.00679499, 0, 0, 0.512408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291815,-99) , 
7, 0.0237843, 1, 0, 0.506667,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0795072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482651,-99) , 
6, 0.0453672, 1, 0, 0.515665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320407,-99) , 
10, -2.02038, 0, 0, 0.509716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347603,-99) , 
10, 2.14282, 1, 0, 0.502607,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0788496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488285,-99) , 
7, 0.00677301, 0, 0, 0.511926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321021,-99) , 
7, 0.0237147, 1, 0, 0.506792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331525,-99) , 
5, 0.998571, 0, 0, 0.500717,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0813665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659702,-99) , 
NN(
NN(
0, 
0, 
-1, -3.03434, 1, 1, 0.520926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348019,-99) , 
9, -951.286, 0, 0, 0.410867,-99) , 
10, -0.714225, 0, 0, 0.499752,-99) , 
11, -4.08195, 1, 0, 0.507252,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.115481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.80919, 1, 1, 0.634705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473922,-99) , 
11, -4.00481, 1, 0, 0.502206,-99) , 
10, 0.0431101, 0, 0, 0.540011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468215,-99) , 
11, 2.08435, 0, 0, 0.480079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21903,-99) , 
5, 0.999048, 0, 0, 0.468759,-99) , 
11, -2.48251, 1, 0, 0.496274,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0931389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474544,-99) , 
6, 0.235432, 1, 0, 0.530292,-99) , 
NN(
0, 
0, 
-1, 0.749434, 1, -1, 0.459707,-99) , 
5, 0.999932, 0, 0, 0.515338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334827,-99) , 
5, 0.998572, 0, 0, 0.509207,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0886965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47873,-99) , 
6, -0.143857, 1, 0, 0.515724,-99) , 
10, -0.280285, 0, 0, 0.560293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419634,-99) , 
10, -0.42855, 0, 0, 0.4917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3184,-99) , 
5, 0.999048, 0, 0, 0.483546,-99) , 
11, -2.93865, 1, 0, 0.502992,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0788263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484176,-99) , 
11, -3.38899, 1, 0, 0.525689,-99) , 
10, 0.566533, 0, 0, 0.54294,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.474166,-99) , 
11, -2.43926, 1, 0, 0.501462,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.09457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68759, 0, 1, 0.609545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475668,-99) , 
11, -2.99598, 1, 0, 0.495189,-99) , 
7, 0.00792749, 0, 0, 0.511938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288203,-99) , 
7, 0.0237843, 1, 0, 0.50624,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0825935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.543715,-99) , 
NN(
0, 
0, 
-1, 1.85713, 1, -1, 0.472364,-99) , 
7, 0.00226464, 0, 0, 0.516546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319725,-99) , 
7, 0.0237791, 1, 0, 0.511566,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.079319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428166, 0, 1, 0.568511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3754,-99) , 
6, 0.713013, 1, 0, 0.498043,-99) , 
11, -2.74467, 1, 0, 0.517479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43205,-99) , 
6, -0.337185, 1, 0, 0.481269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260686,-99) , 
8, 1.62506, 0, 0, 0.4196,-99) , 
10, -1.28564, 0, 0, 0.507461,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.137113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83818, 1, 1, 0.545996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448756,-99) , 
11, -3.84345, 1, 0, 0.480886,-99) , 
10, -0.434929, 0, 0, 0.523899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3787,-99) , 
6, -0.431356, 1, 0, 0.538499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378939,-99) , 
11, 1.46491, 0, 0, 0.415569,-99) , 
9, -951.286, 0, 0, 0.458554,-99) , 
11, -1.29058, 1, 0, 0.503264,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0800634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.70983, 0, 1, 0.590804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473965,-99) , 
11, -2.98785, 1, 0, 0.490474,-99) , 
7, 0.00905853, 0, 0, 0.501635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313149,-99) , 
7, 0.0237791, 1, 0, 0.496799,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0561896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.39828, 0, 1, 0.515349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35186,-99) , 
3, 6.09417, 0, 0, 0.423848,-99) , 
6, 0.712478, 1, 0, 0.506175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359196,-99) , 
10, -1.85707, 0, 0, 0.500599,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0613958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.63332, 0, 1, 0.575126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441465,-99) , 
5, 0.999955, 0, 0, 0.489834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359522,-99) , 
5, 0.999048, 0, 0, 0.483169,-99) , 
9, 0.877635, 0, 0, 0.493558,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0751165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471241,-99) , 
7, 0.00339692, 0, 0, 0.498866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327112,-99) , 
7, 0.0237791, 1, 0, 0.494241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335568,-99) , 
5, 0.998571, 0, 0, 0.489142,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0519769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498832,-99) , 
7, 0.00679382, 0, 0, 0.511268,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.453118,-99) , 
0, 0.500947, 1, 0, 0.495607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336221,-99) , 
7, 0.0237791, 1, 0, 0.491417,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0484339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.61494, 0, 1, 0.571973,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.48189,-99) , 
9, 0.877635, 0, 0, 0.492072,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0632459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349209,-99) , 
10, 2.38775, 1, 0, 0.514518,-99) , 
NN(
0, 
0, 
-1, 1.6235, 0, -1, 0.432792,-99) , 
10, -1.28565, 0, 0, 0.506208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328155,-99) , 
7, 0.0237843, 1, 0, 0.50167,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.04622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.709851, 1, 1, 0.58144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422605,-99) , 
6, 0.413262, 1, 0, 0.49005,-99) , 
3, 5.59812, 0, 0, 0.499046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358643,-99) , 
5, 0.998571, 0, 0, 0.494433,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0517432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396584,-99) , 
6, 0.80818, 1, 0, 0.504409,-99) , 
NN(
0, 
0, 
-1, 0.00679272, 0, -1, 0.43933,-99) , 
0, 0.502852, 1, 0, 0.494366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334831,-99) , 
7, 0.0237791, 1, 0, 0.490322,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0760666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.15702, 1, 1, 0.663053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372231,-99) , 
11, -2.00699, 1, 0, 0.475815,-99) , 
6, 0.679457, 1, 0, 0.545823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346099,-99) , 
5, 0.99981, 0, 0, 0.491257,-99) , 
NN(
0, 
0, 
-1, 4.72424, 0, -1, 0.394051,-99) , 
6, 0.359471, 1, 0, 0.478213,-99) , 
3, 5.28715, 0, 0, 0.489265,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0842274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483103,-99) , 
7, 0.00566221, 0, 0, 0.49984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410326,-99) , 
9, -951.286, 0, 0, 0.447826,-99) , 
11, -1.20998, 1, 0, 0.484429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328263,-99) , 
7, 0.0237843, 1, 0, 0.480448,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.119913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486884,-99) , 
6, 0.679071, 1, 0, 0.554758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446593,-99) , 
6, -0.0867079, 1, 0, 0.488165,-99) , 
3, 5.34142, 0, 0, 0.500995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350719,-99) , 
9, -951.286, 0, 0, 0.404763,-99) , 
11, 1.87203, 0, 0, 0.436521,-99) , 
11, -0.802044, 1, 0, 0.486043,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0953919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480838,-99) , 
6, 0.65216, 1, 0, 0.546957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415187,-99) , 
6, 0.21727, 1, 0, 0.486705,-99) , 
3, 5.05813, 0, 0, 0.502034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374879,-99) , 
9, -951.286, 0, 0, 0.418461,-99) , 
11, 1.87202, 0, 0, 0.444168,-99) , 
11, -0.802044, 1, 0, 0.488501,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0958939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458164,-99) , 
11, -3.58814, 1, 0, 0.497375,-99) , 
10, 0.169545, 0, 0, 0.524653,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.461988,-99) , 
11, -2.63082, 1, 0, 0.483238,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0764209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369412,-99) , 
11, -1.62201, 1, 0, 0.504321,-99) , 
6, 0.449113, 1, 0, 0.535856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3666,-99) , 
6, 0.181389, 1, 0, 0.488688,-99) , 
NN(
0, 
0, 
-1, 2.59988, 0, -1, 0.368346,-99) , 
5, 0.999855, 0, 0, 0.476896,-99) , 
3, 4.62565, 0, 0, 0.493201,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0756324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358205,-99) , 
12, 0.615355, 1, 0, 0.501705,-99) , 
6, 0.408185, 1, 0, 0.528456,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.469528,-99) , 
3, 4.627, 0, 0, 0.485841,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0842338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.741467, 0, 1, 0.538416,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.478925,-99) , 
11, -2.25076, 1, 0, 0.502245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432036,-99) , 
6, -0.149992, 1, 0, 0.505696,-99) , 
NN(
0, 
0, 
-1, 1.62206, 0, -1, 0.400524,-99) , 
9, -951.286, 0, 0, 0.448518,-99) , 
10, -0.714215, 0, 0, 0.490253,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0334096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47926,-99) , 
6, 0.823609, 1, 0, 0.583731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384912,-99) , 
6, 0.696705, 1, 0, 0.49335,-99) , 
3, 5.96245, 0, 0, 0.499222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358483,-99) , 
7, 0.0237843, 1, 0, 0.495556,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0817906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.698197, 0, 1, 0.555987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351689,-99) , 
5, 0.999524, 0, 0, 0.490008,-99) , 
11, -2.26373, 1, 0, 0.51088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467848,-99) , 
11, -4.098, 1, 0, 0.534981,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.437686,-99) , 
11, -3.6724, 1, 0, 0.45937,-99) , 
10, -0.142806, 0, 0, 0.490451,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0440325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472631,-99) , 
6, 0.821476, 1, 0, 0.574655,-99) , 
NN(
0, 
0, 
-1, 0.695914, 1, -1, 0.486904,-99) , 
3, 5.95592, 0, 0, 0.49267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348533,-99) , 
7, 0.0237147, 1, 0, 0.48899,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0399748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487629,-99) , 
10, -0.944752, 0, 0, 0.559993,-99) , 
NN(
0, 
0, 
-1, 2.30613, 1, -1, 0.490926,-99) , 
11, -3.47826, 1, 0, 0.498801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385189,-99) , 
10, -1.85705, 0, 0, 0.494562,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0409894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494471,-99) , 
3, 4.94714, 0, 0, 0.505794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392279,-99) , 
5, 0.998572, 0, 0, 0.502191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366565,-99) , 
7, 0.0237843, 1, 0, 0.498729,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0557155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483201,-99) , 
0, 0.499995, 1, 0, 0.510812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38014,-99) , 
7, 0.0237843, 1, 0, 0.507408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393357,-99) , 
10, -1.8571, 0, 0, 0.503218,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0331516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491003,-99) , 
6, 0.78891, 1, 0, 0.560714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412383,-99) , 
6, 0.59185, 1, 0, 0.494612,-99) , 
3, 5.62918, 0, 0, 0.501429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387758,-99) , 
4, 9.14738, 1, 0, 0.49815,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0542558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486627,-99) , 
6, 0.821668, 1, 0, 0.571228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487931,-99) , 
3, 5.17844, 0, 0, 0.495522,-99) , 
NN(
0, 
0, 
-1, 5.99323, 1, -1, 0.394708,-99) , 
6, 0.692625, 1, 0, 0.489509,-99) , 
3, 5.92134, 0, 0, 0.495046,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0435898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379507,-99) , 
10, 2.34695, 1, 0, 0.507837,-99) , 
NN(
0, 
0, 
-1, -2.71704, 1, -1, 0.426244,-99) , 
10, -1.57139, 0, 0, 0.502728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362576,-99) , 
7, 0.0237755, 1, 0, 0.499188,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0459774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.63771, 0, 1, 0.555122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563996,-99) , 
NN(
0, 
0, 
-1, -1.57135, 0, -1, 0.484592,-99) , 
11, -3.81139, 1, 0, 0.490222,-99) , 
9, 0.877635, 0, 0, 0.497594,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0367962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399478,-99) , 
4, 9.03751, 1, 0, 0.502303,-99) , 
NN(
0, 
0, 
-1, -1.77544, 0, -1, 0.409567,-99) , 
10, -1.28565, 0, 0, 0.495469,-99) , 
11, -4.02486, 1, 0, 0.500284,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0820434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14204, 1, 1, 0.555378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469765,-99) , 
11, -3.38898, 1, 0, 0.490378,-99) , 
10, 0.70493, 0, 0, 0.507056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384082,-99) , 
10, -1.04081, 0, 0, 0.4899,-99) , 
NN(
0, 
0, 
-1, -0.333823, 1, -1, 0.376128,-99) , 
10, 1.57144, 1, 0, 0.465399,-99) , 
11, -1.10966, 1, 0, 0.495441,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.046846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484185,-99) , 
3, 1.71519, 0, 0, 0.559741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487584,-99) , 
3, 5.63431, 0, 0, 0.494169,-99) , 
7, 0.0101925, 0, 0, 0.499747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378904,-99) , 
7, 0.0237843, 1, 0, 0.496692,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0312952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.92714, 0, 1, 0.510074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39943,-99) , 
4, 8.99736, 1, 0, 0.506745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40909,-99) , 
10, -1.85707, 0, 0, 0.503187,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0466465);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494526,-99) , 
6, -0.334018, 1, 0, 0.507969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335991,-99) , 
11, 1.51856, 0, 0, 0.444149,-99) , 
3, 1.37075, 0, 0, 0.502847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400604,-99) , 
5, 0.998571, 0, 0, 0.499575,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0731279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470582,-99) , 
7, 0.00113213, 0, 0, 0.514964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445632,-99) , 
11, 1.65269, 0, 0, 0.469317,-99) , 
11, -0.921329, 1, 0, 0.503825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383954,-99) , 
7, 0.0237791, 1, 0, 0.500726,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0348007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494215,-99) , 
3, 5.4889, 0, 0, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370751,-99) , 
6, 0.798307, 1, 0, 0.495591,-99) , 
3, 6.28339, 0, 0, 0.498797,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0510034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473309,-99) , 
3, 1.70258, 0, 0, 0.512665,-99) , 
NN(
0, 
0, 
-1, 0.420666, 1, -1, 0.472953,-99) , 
0, 0.5019, 1, 0, 0.504466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391268,-99) , 
5, 0.998571, 0, 0, 0.500958,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0448373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485292,-99) , 
6, -0.0489098, 1, 0, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415318,-99) , 
10, -1.85711, 0, 0, 0.501197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401562,-99) , 
5, 0.998571, 0, 0, 0.498051,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.070068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.507996, 0, 1, 0.552047,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490211,-99) , 
11, -2.40867, 1, 0, 0.508906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450775,-99) , 
6, -0.432455, 1, 0, 0.50549,-99) , 
NN(
0, 
0, 
-1, 1.38469, 0, -1, 0.444956,-99) , 
9, -951.286, 0, 0, 0.473031,-99) , 
10, -0.428472, 0, 0, 0.498037,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0462058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.792194, 1, 1, 0.562902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498631,-99) , 
3, 4.7092, 0, 0, 0.511445,-99) , 
NN(
0, 
0, 
-1, 6.22052, 1, -1, 0.440498,-99) , 
6, 0.507479, 1, 0, 0.501426,-99) , 
3, 5.95587, 0, 0, 0.505353,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0569232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.601977, 1, 1, 0.572157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413379,-99) , 
6, 0.463551, 1, 0, 0.505971,-99) , 
3, 5.30198, 0, 0, 0.51343,-99) , 
NN(
0, 
0, 
-1, 6.11391, 0, -1, 0.430757,-99) , 
6, 0.807937, 1, 0, 0.509213,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0504593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490298,-99) , 
11, -2.5656, 1, 0, 0.503917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413421,-99) , 
6, -0.334986, 1, 0, 0.468571,-99) , 
10, -0.428523, 0, 0, 0.495023,-99) , 
11, -3.76886, 1, 0, 0.500323,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0463916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.70967, 0, 1, 0.556572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485386,-99) , 
3, 4.31758, 0, 0, 0.499157,-99) , 
7, 0.010178, 0, 0, 0.504009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401005,-99) , 
7, 0.0237486, 1, 0, 0.501397,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.059769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.565922, 1, 1, 0.578748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427074,-99) , 
6, 0.305144, 1, 0, 0.499879,-99) , 
3, 5.11509, 0, 0, 0.508219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541834,-99) , 
NN(
0, 
0, 
-1, 0.440969, 0, -1, 0.413746,-99) , 
3, 6.37519, 0, 0, 0.44786,-99) , 
6, 0.713012, 1, 0, 0.502436,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0442579);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494437,-99) , 
11, -3.02299, 1, 0, 0.502291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3886,-99) , 
9, -951.286, 0, 0, 0.435641,-99) , 
10, -0.999925, 0, 0, 0.494168,-99) , 
11, -4.0742, 1, 0, 0.498404,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.093697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.26736, 1, 1, 0.567903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472134,-99) , 
10, 0.918391, 1, 0, 0.492119,-99) , 
11, -1.77562, 1, 0, 0.522597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476856,-99) , 
9, -946.347, 0, 0, 0.511678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441007,-99) , 
11, -3.59874, 1, 0, 0.468562,-99) , 
6, -0.336379, 1, 0, 0.488604,-99) , 
10, 0.428603, 0, 0, 0.502236,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0763285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.066819, 0, 1, 0.55363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432043,-99) , 
12, -0.380844, 0, 0, 0.501424,-99) , 
11, -2.81964, 1, 0, 0.513323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437574,-99) , 
6, -0.431878, 1, 0, 0.484457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377993,-99) , 
8, 1.59663, 0, 0, 0.462508,-99) , 
10, -0.999947, 0, 0, 0.505631,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0250758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499895,-99) , 
3, 5.32814, 0, 0, 0.50705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436864,-99) , 
6, 0.807937, 1, 0, 0.503492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393253,-99) , 
7, 0.0237843, 1, 0, 0.500683,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0402747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426639,-99) , 
4, 9.03111, 1, 0, 0.509772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414801,-99) , 
10, 2.38773, 1, 0, 0.507094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513393,-99) , 
NN(
0, 
0, 
-1, 1.68261, 0, -1, 0.412452,-99) , 
9, -949.846, 0, 0, 0.455856,-99) , 
10, -1.28569, 0, 0, 0.501982,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0468433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497911,-99) , 
3, 4.7173, 0, 0, 0.509149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428879,-99) , 
3, 5.83298, 0, 0, 0.470479,-99) , 
6, 0.522679, 1, 0, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390273,-99) , 
7, 0.0237755, 1, 0, 0.498952,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0494631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615725, 1, 1, 0.578192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445852,-99) , 
6, 0.386536, 1, 0, 0.502858,-99) , 
3, 5.38059, 0, 0, 0.507777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446255,-99) , 
6, 0.821543, 1, 0, 0.48377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377644,-99) , 
3, 5.69457, 0, 0, 0.447439,-99) , 
6, 0.712782, 1, 0, 0.501975,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0215776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498438,-99) , 
11, 1.63069, 0, 0, 0.502337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405664,-99) , 
5, 0.998571, 0, 0, 0.499346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384354,-99) , 
7, 0.0237791, 1, 0, 0.496419,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0374453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499844, 1, 1, 0.540619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431468,-99) , 
6, 0.286207, 1, 0, 0.493826,-99) , 
3, 4.99835, 0, 0, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422491,-99) , 
6, 0.807937, 1, 0, 0.497851,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0246609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.11167, 0, 1, 0.504032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420777,-99) , 
4, 9.14098, 1, 0, 0.501473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364868,-99) , 
11, 1.82152, 0, 0, 0.448113,-99) , 
3, 1.3752, 0, 0, 0.497282,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0458742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483085,-99) , 
6, -0.14525, 1, 0, 0.499139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369386,-99) , 
11, 1.56529, 0, 0, 0.4439,-99) , 
3, 1.3754, 0, 0, 0.494635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402589,-99) , 
5, 0.998571, 0, 0, 0.491796,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0512274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413532,-99) , 
12, 0.615355, 1, 0, 0.497877,-99) , 
6, 0.272937, 1, 0, 0.517368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35709,-99) , 
5, 0.999714, 0, 0, 0.494216,-99) , 
NN(
0, 
0, 
-1, 4.39452, 1, -1, 0.373578,-99) , 
6, 0.100497, 1, 0, 0.482957,-99) , 
3, 4.30819, 0, 0, 0.494445,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0661221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467023,-99) , 
5, 0.999524, 1, 0, 0.48355,-99) , 
6, 0.328855, 1, 0, 0.508762,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.476641,-99) , 
3, 4.30819, 0, 0, 0.48734,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0321561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499475,-99) , 
3, 4.97438, 0, 0, 0.506827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44049,-99) , 
9, -949.846, 0, 0, 0.470416,-99) , 
10, -0.714225, 0, 0, 0.498923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390627,-99) , 
7, 0.0237755, 1, 0, 0.49617,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0397736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497277,-99) , 
3, 4.94169, 0, 0, 0.504888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433907,-99) , 
3, 6.41365, 0, 0, 0.459058,-99) , 
6, 0.617846, 1, 0, 0.498322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401604,-99) , 
7, 0.0237319, 1, 0, 0.495827,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.050017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.365553, 1, 1, 0.53865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373477,-99) , 
5, 0.99981, 0, 0, 0.496922,-99) , 
3, 4.50952, 0, 0, 0.506134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516566,-99) , 
NN(
0, 
0, 
-1, 6.11617, 1, -1, 0.406846,-99) , 
3, 6.10483, 0, 0, 0.451655,-99) , 
6, 0.713013, 1, 0, 0.5009,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0394641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494829,-99) , 
11, -2.62045, 1, 0, 0.508438,-99) , 
NN(
0, 
0, 
-1, 1.39326, 0, -1, 0.476282,-99) , 
10, -0.714259, 0, 0, 0.501329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415579,-99) , 
4, 9.04907, 1, 0, 0.498852,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0412898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484219,-99) , 
12, -0.418148, 0, 0, 0.50397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404138,-99) , 
7, 0.0237791, 1, 0, 0.50137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407351,-99) , 
5, 0.998571, 0, 0, 0.498479,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0264375);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450809,-99) , 
3, 1.3805, 0, 0, 0.497071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393891,-99) , 
12, -1.8447, 0, 0, 0.493085,-99) , 
11, -4.10334, 1, 0, 0.497528,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0245467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386525,-99) , 
3, 1.45118, 0, 0, 0.495239,-99) , 
11, 1.51349, 0, 0, 0.498743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409991,-99) , 
7, 0.0237843, 1, 0, 0.496445,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0247303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553734,-99) , 
NN(
0, 
0, 
-1, 1.46117, 0, -1, 0.492367,-99) , 
11, 1.54953, 0, 0, 0.495799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404862,-99) , 
7, 0.0237843, 1, 0, 0.493495,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0330424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4801,-99) , 
11, -1.01188, 1, 0, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425804,-99) , 
4, 8.85109, 1, 0, 0.499426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402304,-99) , 
7, 0.0237843, 1, 0, 0.496982,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.036724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497178,-99) , 
3, 3.97007, 0, 0, 0.539662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462464,-99) , 
6, 0.332344, 1, 0, 0.492301,-99) , 
9, 0.877635, 0, 0, 0.497599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413334,-99) , 
7, 0.0237843, 1, 0, 0.495449,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0299603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428075, 1, 1, 0.542497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458001,-99) , 
0, 0.503804, 1, 0, 0.497868,-99) , 
NN(
0, 
0, 
-1, 1.48706, 0, -1, 0.378205,-99) , 
3, 1.47208, 0, 0, 0.491202,-99) , 
11, 1.3899, 0, 0, 0.494518,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0675772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491116,-99) , 
10, 0.786514, 0, 0, 0.53786,-99) , 
NN(
0, 
0, 
-1, 0.521744, 1, -1, 0.486987,-99) , 
11, -1.98331, 1, 0, 0.50592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437865,-99) , 
8, 5.55287, 1, 0, 0.516716,-99) , 
NN(
0, 
0, 
-1, -0.334995, 1, -1, 0.465678,-99) , 
11, -3.50901, 1, 0, 0.477546,-99) , 
10, 0.142909, 0, 0, 0.491863,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0597656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351302,-99) , 
5, 0.99981, 0, 0, 0.514104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373314,-99) , 
3, 3.76366, 0, 0, 0.489145,-99) , 
6, -0.14374, 1, 0, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431285,-99) , 
10, -1.85709, 0, 0, 0.499292,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.049976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483727,-99) , 
3, 1.68302, 0, 0, 0.537999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477309,-99) , 
3, 4.63508, 0, 0, 0.488317,-99) , 
7, 0.00902069, 0, 0, 0.493862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41001,-99) , 
7, 0.0236798, 1, 0, 0.49173,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0514728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453363,-99) , 
6, 0.160121, 1, 0, 0.49849,-99) , 
3, 4.98366, 0, 0, 0.50405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423357,-99) , 
6, 0.8626, 1, 0, 0.496579,-99) , 
NN(
0, 
0, 
-1, 5.5928, 1, -1, 0.407662,-99) , 
3, 5.51086, 0, 0, 0.460415,-99) , 
6, 0.522681, 1, 0, 0.495902,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0481471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42711, 1, 1, 0.58098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441512,-99) , 
6, 0.086284, 1, 0, 0.490865,-99) , 
3, 4.71796, 0, 0, 0.499166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535589,-99) , 
NN(
0, 
0, 
-1, 6.20919, 1, -1, 0.443075,-99) , 
3, 6.16362, 0, 0, 0.465151,-99) , 
6, 0.520797, 1, 0, 0.492757,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0567386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48368,-99) , 
6, 0.271697, 1, 0, 0.50763,-99) , 
NN(
0, 
0, 
-1, -0.0409374, 1, -1, 0.477814,-99) , 
3, 3.99284, 0, 0, 0.488863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403033,-99) , 
5, 0.998571, 0, 0, 0.486224,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0388192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474306,-99) , 
10, 0.142924, 0, 0, 0.491245,-99) , 
11, -3.81139, 1, 0, 0.494754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396796,-99) , 
5, 0.998571, 0, 0, 0.491815,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0454233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.63284, 0, 1, 0.534508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485675,-99) , 
11, -3.15145, 1, 0, 0.492278,-99) , 
NN(
0, 
0, 
-1, 6.22829, 0, -1, 0.429417,-99) , 
6, 0.711961, 1, 0, 0.486339,-99) , 
9, 0.877635, 0, 0, 0.491799,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0398712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493315,-99) , 
11, -2.6282, 1, 0, 0.505554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449775,-99) , 
6, -0.33814, 1, 0, 0.477161,-99) , 
10, -0.714186, 0, 0, 0.4993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410012,-99) , 
5, 0.998571, 0, 0, 0.49663,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0438759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499787,-99) , 
11, -2.13629, 1, 0, 0.512016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461879,-99) , 
11, -3.36421, 1, 0, 0.484988,-99) , 
12, -0.418148, 0, 0, 0.501606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447734,-99) , 
5, 0.999048, 0, 0, 0.499055,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0573272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.365934, 1, 1, 0.533102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434464,-99) , 
6, 0.00801971, 1, 0, 0.497038,-99) , 
3, 4.52913, 0, 0, 0.504847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545391,-99) , 
NN(
0, 
0, 
-1, 6.38818, 1, -1, 0.417483,-99) , 
3, 6.37519, 0, 0, 0.453522,-99) , 
6, 0.713012, 1, 0, 0.50003,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0351833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4961,-99) , 
11, -2.6282, 1, 0, 0.506277,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.471064,-99) , 
10, -0.714259, 0, 0, 0.498575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411154,-99) , 
7, 0.0237843, 1, 0, 0.496374,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.067592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.947456, 0, 1, 0.568576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334862,-99) , 
5, 0.999524, 0, 0, 0.495597,-99) , 
11, -2.08378, 1, 0, 0.508736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456286,-99) , 
11, -4.06946, 1, 0, 0.469385,-99) , 
10, 0.379472, 0, 0, 0.479027,-99) , 
12, -0.3821, 0, 0, 0.49678,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0470625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470654,-99) , 
6, 0.425392, 0, 0, 0.554357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468698,-99) , 
5, 0.999977, 0, 0, 0.497531,-99) , 
5, 0.999524, 1, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416126,-99) , 
5, 0.998572, 0, 0, 0.498087,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0433337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493876, 0, 1, 0.533073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444224,-99) , 
12, -0.0651533, 0, 0, 0.492442,-99) , 
11, -2.4428, 1, 0, 0.504076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552044,-99) , 
NN(
0, 
0, 
-1, 1.72968, 0, -1, 0.468458,-99) , 
12, 1.46407, 0, 0, 0.476703,-99) , 
10, -0.428515, 0, 0, 0.495825,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0261729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545845,-99) , 
NN(
0, 
0, 
-1, 1.44495, 0, -1, 0.490795,-99) , 
11, 1.6446, 0, 0, 0.493715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412615,-99) , 
7, 0.0237791, 1, 0, 0.491657,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0446376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488757,-99) , 
11, -2.75797, 1, 0, 0.499282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441202,-99) , 
9, -951.286, 0, 0, 0.46684,-99) , 
10, -0.714254, 0, 0, 0.493386,-99) , 
11, -3.97106, 1, 0, 0.496672,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0298746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494631,-99) , 
11, -2.5024, 1, 0, 0.503526,-99) , 
NN(
0, 
0, 
-1, 1.62506, 0, -1, 0.471956,-99) , 
10, -0.999966, 0, 0, 0.498785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424423,-99) , 
7, 0.0237124, 1, 0, 0.496888,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0587905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.368075, 1, 1, 0.563943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443325,-99) , 
6, 0.0138461, 1, 0, 0.49758,-99) , 
3, 4.45701, 0, 0, 0.507078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454215,-99) , 
6, 0.837653, 1, 0, 0.520265,-99) , 
NN(
0, 
0, 
-1, 6.1576, 1, -1, 0.442413,-99) , 
3, 5.82232, 0, 0, 0.473215,-99) , 
6, 0.5208, 1, 0, 0.50081,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0626857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484386,-99) , 
5, 0.999524, 1, 0, 0.498349,-99) , 
6, 0.15519, 1, 0, 0.513189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363519,-99) , 
5, 0.99981, 0, 0, 0.500924,-99) , 
NN(
0, 
0, 
-1, 3.69656, 0, -1, 0.391548,-99) , 
6, -0.0546994, 1, 0, 0.489052,-99) , 
3, 3.97143, 0, 0, 0.498436,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0486616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393876,-99) , 
12, 0.906629, 1, 0, 0.496499,-99) , 
6, 0.0914979, 1, 0, 0.512049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381112,-99) , 
5, 0.99981, 0, 0, 0.495113,-99) , 
NN(
0, 
0, 
-1, 3.38922, 0, -1, 0.38566,-99) , 
6, -0.202363, 1, 0, 0.480562,-99) , 
3, 3.66553, 0, 0, 0.49439,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.054212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426189,-99) , 
3, 4.2265, 0, 0, 0.495776,-99) , 
6, 0.0689364, 1, 0, 0.509697,-99) , 
NN(
0, 
0, 
-1, -0.0756765, 1, -1, 0.473539,-99) , 
3, 3.66553, 0, 0, 0.489508,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0305351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494484,-99) , 
5, 0.999524, 1, 0, 0.497917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420344,-99) , 
5, 0.998572, 0, 0, 0.495443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368695,-99) , 
11, 1.75066, 0, 0, 0.446258,-99) , 
3, 1.3752, 0, 0, 0.491614,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0500535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446858,-99) , 
6, 0.805946, 1, 0, 0.512929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477724,-99) , 
12, 0.107329, 0, 0, 0.489234,-99) , 
0, 0.49809, 1, 0, 0.500995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45088,-99) , 
3, 1.18194, 0, 0, 0.518319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344009,-99) , 
11, 0.781049, 0, 0, 0.460947,-99) , 
8, 1.60205, 0, 0, 0.49675,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0331196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496961,-99) , 
10, 1.51701, 0, 0, 0.505199,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.477624,-99) , 
11, -1.29058, 1, 0, 0.496357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419142,-99) , 
5, 0.998571, 0, 0, 0.494053,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0541027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46814, 1, 1, 0.588168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489519,-99) , 
10, 1.12219, 0, 0, 0.496845,-99) , 
12, 0.59538, 0, 0, 0.504872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482513,-99) , 
3, 2.0119, 0, 0, 0.496352,-99) , 
NN(
0, 
0, 
-1, -0.147165, 1, -1, 0.419009,-99) , 
10, 1.57146, 1, 0, 0.479006,-99) , 
11, -1.20998, 1, 0, 0.497054,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0407993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486345,-99) , 
3, 2.02246, 0, 0, 0.50904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464928,-99) , 
6, -0.42906, 1, 0, 0.477872,-99) , 
7, 0.00113233, 0, 0, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4279,-99) , 
7, 0.0237791, 1, 0, 0.500982,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0528746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440551,-99) , 
3, 4.38926, 0, 0, 0.4982,-99) , 
6, 0.0875018, 1, 0, 0.512929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386894,-99) , 
5, 0.99981, 0, 0, 0.498176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388492,-99) , 
6, -0.145148, 1, 0, 0.487932,-99) , 
3, 3.64653, 0, 0, 0.499023,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0388473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422992,-99) , 
8, 1.86018, 0, 0, 0.504127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444811,-99) , 
11, 1.10068, 0, 0, 0.474459,-99) , 
11, -0.668845, 1, 0, 0.497603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405954,-99) , 
4, 9.28394, 1, 0, 0.495277,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.041016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487658,-99) , 
11, 2.24603, 0, 0, 0.49054,-99) , 
11, -3.76886, 1, 0, 0.49529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393856,-99) , 
3, 6.09386, 0, 0, 0.449569,-99) , 
8, 6.35113, 1, 0, 0.491292,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0356511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497287,-99) , 
10, -0.35316, 0, 0, 0.531465,-99) , 
NN(
0, 
0, 
-1, 1.25499, 0, -1, 0.491239,-99) , 
11, -2.9323, 1, 0, 0.500301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403312,-99) , 
3, 6.07076, 0, 0, 0.452191,-99) , 
8, 6.31566, 1, 0, 0.495934,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0321304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43165, 1, 1, 0.508997,-99) , 
NN(
0, 
0, 
-1, 1.49659, 0, -1, 0.457948,-99) , 
3, 1.52172, 0, 0, 0.502271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418155,-99) , 
3, 6.09624, 0, 0, 0.458271,-99) , 
8, 6.32887, 1, 0, 0.498265,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0182382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447931,-99) , 
6, 0.807615, 1, 0, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426463,-99) , 
5, 0.998571, 0, 0, 0.498721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414725,-99) , 
7, 0.0237791, 1, 0, 0.496589,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0266857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438358,-99) , 
8, 5.5198, 1, 0, 0.497191,-99) , 
3, 5.51511, 0, 0, 0.500935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514116,-99) , 
NN(
0, 
0, 
-1, 6.69008, 1, -1, 0.408887,-99) , 
3, 6.2319, 0, 0, 0.452826,-99) , 
8, 6.31484, 1, 0, 0.496563,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0484264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406866,-99) , 
3, 3.94613, 0, 0, 0.491252,-99) , 
6, -0.00898776, 1, 0, 0.504806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402181,-99) , 
5, 0.999905, 0, 0, 0.497264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382602,-99) , 
6, -0.271231, 1, 0, 0.485151,-99) , 
3, 3.33848, 0, 0, 0.494881,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0474027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.198447, 1, 1, 0.557078,-99) , 
NN(
0, 
0, 
-1, 0.0148003, 1, -1, 0.484656,-99) , 
3, 4.08781, 0, 0, 0.493882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401838,-99) , 
12, 0.446938, 1, 0, 0.485589,-99) , 
NN(
0, 
0, 
-1, 5.00923, 1, -1, 0.400424,-99) , 
3, 4.8371, 0, 0, 0.468491,-99) , 
6, 0.332343, 1, 0, 0.486834,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0397783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476765,-99) , 
11, -2.34398, 1, 0, 0.543641,-99) , 
NN(
0, 
0, 
-1, 0.15972, 1, -1, 0.490234,-99) , 
3, 4.7238, 0, 0, 0.495004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41112,-99) , 
8, 7.07018, 1, 0, 0.478148,-99) , 
NN(
0, 
0, 
-1, 5.51615, 1, -1, 0.409686,-99) , 
3, 5.35665, 0, 0, 0.456545,-99) , 
6, 0.522206, 1, 0, 0.487814,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0465098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451223,-99) , 
6, 0.0869187, 1, 0, 0.497359,-99) , 
3, 4.52306, 0, 0, 0.50333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451068,-99) , 
8, 6.41663, 1, 0, 0.489237,-99) , 
NN(
0, 
0, 
-1, 5.47171, 1, -1, 0.432486,-99) , 
3, 5.34067, 0, 0, 0.467207,-99) , 
6, 0.426636, 1, 0, 0.494921,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0334784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559209,-99) , 
NN(
0, 
0, 
-1, 0.309275, 1, -1, 0.492538,-99) , 
3, 5.1881, 0, 0, 0.496443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537998,-99) , 
NN(
0, 
0, 
-1, 6.28125, 1, -1, 0.441636,-99) , 
3, 6.41353, 0, 0, 0.460301,-99) , 
6, 0.617341, 1, 0, 0.491309,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0304548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56332,-99) , 
NN(
0, 
0, 
-1, -1.4268, 0, -1, 0.495943,-99) , 
11, -3.68554, 1, 0, 0.50082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444075,-99) , 
12, -0.234296, 1, 0, 0.491189,-99) , 
NN(
0, 
0, 
-1, 5.41392, 0, -1, 0.397476,-99) , 
3, 5.79163, 0, 0, 0.451485,-99) , 
8, 5.95722, 1, 0, 0.49427,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0334813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378615, 1, 1, 0.554766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467746,-99) , 
6, 0.331928, 1, 0, 0.496849,-99) , 
5, 0.999524, 1, 0, 0.49991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425985,-99) , 
5, 0.998571, 0, 0, 0.497696,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0281637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435354,-99) , 
12, -1.4686, 0, 0, 0.496843,-99) , 
11, -3.97106, 1, 0, 0.500289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438632,-99) , 
6, 0.791595, 1, 0, 0.471635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398987,-99) , 
11, -3.13158, 0, 0, 0.443755,-99) , 
8, 6.30099, 1, 0, 0.49514,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0372907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483735,-99) , 
11, -2.75842, 1, 0, 0.490797,-99) , 
11, -3.97106, 1, 0, 0.493873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421944,-99) , 
8, 7.25367, 1, 0, 0.492039,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0296035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.422914, 1, 1, 0.549467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426276,-99) , 
13, 5.47348, 1, 0, 0.495516,-99) , 
3, 5.529, 0, 0, 0.499048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400582,-99) , 
9, -951.286, 1, 0, 0.440921,-99) , 
13, 6.59064, 1, 0, 0.495061,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0308851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49402,-99) , 
11, -3.53739, 1, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426236,-99) , 
10, -1.85711, 0, 0, 0.496468,-99) , 
NN(
0, 
0, 
-1, 6.2177, 0, -1, 0.451201,-99) , 
8, 6.34755, 1, 0, 0.492499,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0261234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.958632, 0, 1, 0.505549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43508,-99) , 
3, 1.25513, 0, 0, 0.502018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528404,-99) , 
NN(
0, 
0, 
-1, -2.79817, 0, -1, 0.425502,-99) , 
3, 6.36816, 0, 0, 0.459937,-99) , 
8, 6.33255, 1, 0, 0.498242,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0463586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
11, -3.32193, 1, 0, 0.505859,-99) , 
NN(
0, 
0, 
-1, 2.11567, 1, -1, 0.475039,-99) , 
11, -1.00107, 1, 0, 0.497182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458594,-99) , 
3, 1.59826, 0, 0, 0.507711,-99) , 
NN(
0, 
0, 
-1, -3.39459, 1, -1, 0.447259,-99) , 
12, -1.01773, 0, 0, 0.470816,-99) , 
10, -0.714225, 0, 0, 0.491447,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.049385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.247903, 1, 1, 0.540466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447348,-99) , 
6, -0.0782075, 1, 0, 0.496594,-99) , 
3, 4.18501, 0, 0, 0.505401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43917,-99) , 
6, 0.839931, 1, 0, 0.504224,-99) , 
NN(
0, 
0, 
-1, 5.78162, 1, -1, 0.446963,-99) , 
3, 5.66134, 0, 0, 0.475601,-99) , 
6, 0.522678, 1, 0, 0.499862,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0360875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496771,-99) , 
6, 0.153307, 1, 0, 0.514435,-99) , 
NN(
0, 
0, 
-1, -0.0683962, 1, -1, 0.48723,-99) , 
3, 3.94334, 0, 0, 0.496177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503001,-99) , 
NN(
0, 
0, 
-1, 6.2109, 1, -1, 0.436314,-99) , 
3, 6.35126, 0, 0, 0.455241,-99) , 
6, 0.713013, 1, 0, 0.492371,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.052774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444129,-99) , 
3, 4.13746, 0, 0, 0.496864,-99) , 
6, -0.00431937, 1, 0, 0.50955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37377,-99) , 
5, 0.99981, 0, 0, 0.502395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389236,-99) , 
6, -0.287064, 1, 0, 0.489645,-99) , 
3, 3.32982, 0, 0, 0.499512,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.031474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548936,-99) , 
NN(
0, 
0, 
-1, -1.36205, 0, -1, 0.493998,-99) , 
11, -3.68554, 1, 0, 0.497818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459713,-99) , 
8, 7.02593, 1, 0, 0.499436,-99) , 
NN(
0, 
0, 
-1, -3.05581, 0, -1, 0.419826,-99) , 
3, 5.92148, 0, 0, 0.457483,-99) , 
8, 5.90941, 1, 0, 0.492248,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0563612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496817,-99) , 
12, -1.02451, 0, 0, 0.527101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463105,-99) , 
12, 0.329284, 0, 0, 0.491214,-99) , 
11, -2.77132, 1, 0, 0.500407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443021,-99) , 
3, 5.87039, 0, 0, 0.479916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412451,-99) , 
6, 0.81555, 1, 0, 0.459985,-99) , 
8, 5.95225, 1, 0, 0.494987,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.038413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434757,-99) , 
11, -1.40423, 1, 0, 0.5032,-99) , 
12, 0.914693, 0, 0, 0.507064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483715,-99) , 
3, 1.69236, 0, 0, 0.499059,-99) , 
NN(
0, 
0, 
-1, -0.335419, 1, -1, 0.414571,-99) , 
10, 1.57145, 1, 0, 0.480966,-99) , 
11, -1.15051, 1, 0, 0.499445,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0373092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483221,-99) , 
3, 2.99069, 0, 0, 0.50729,-99) , 
NN(
0, 
0, 
-1, 5.40945, 1, -1, 0.487479,-99) , 
10, 0.142894, 0, 0, 0.497433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424361,-99) , 
5, 0.998571, 0, 0, 0.49529,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0282796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495556,-99) , 
10, -0.353862, 0, 0, 0.520314,-99) , 
NN(
0, 
0, 
-1, -0.564185, 0, -1, 0.492524,-99) , 
11, -3.00085, 1, 0, 0.498538,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.439841,-99) , 
8, 6.77088, 1, 0, 0.495532,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0299505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659682, 0, 1, 0.510718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442072,-99) , 
10, 1.28573, 1, 0, 0.487462,-99) , 
11, -1.14772, 1, 0, 0.503839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43123,-99) , 
8, 7.16923, 1, 0, 0.501802,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0368411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.03605, 0, 1, 0.529544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439338,-99) , 
12, -0.47111, 0, 0, 0.492166,-99) , 
11, -2.78698, 1, 0, 0.50158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465865,-99) , 
9, -951.286, 1, 0, 0.490849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382745,-99) , 
11, -2.80805, 0, 0, 0.438714,-99) , 
3, 5.79846, 0, 0, 0.467608,-99) , 
8, 5.94823, 1, 0, 0.497036,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0259535);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478292,-99) , 
11, -1.42799, 1, 0, 0.496073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417462,-99) , 
3, 1.43002, 0, 0, 0.49207,-99) , 
11, 1.68025, 0, 0, 0.494413,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0474543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.201143, 1, 1, 0.531856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433664,-99) , 
6, -0.121085, 1, 0, 0.492982,-99) , 
3, 4.013, 0, 0, 0.500436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47371,-99) , 
8, 6.3567, 1, 0, 0.49651,-99) , 
NN(
0, 
0, 
-1, 5.57624, 1, -1, 0.438069,-99) , 
3, 5.53333, 0, 0, 0.4671,-99) , 
6, 0.427512, 1, 0, 0.492801,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.03781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49097,-99) , 
11, -3.39538, 1, 0, 0.497175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426121,-99) , 
3, 5.92294, 0, 0, 0.461601,-99) , 
8, 5.90754, 1, 0, 0.492214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42736,-99) , 
10, -1.85707, 0, 0, 0.489987,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0399783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494462,-99) , 
3, 3.42844, 0, 0, 0.505169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457851,-99) , 
5, 0.999524, 1, 0, 0.476648,-99) , 
8, 5.88275, 1, 0, 0.501185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465867,-99) , 
3, 4.40269, 0, 0, 0.476496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435358,-99) , 
8, 5.86703, 1, 0, 0.470436,-99) , 
4, 4.53862, 1, 0, 0.495061,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0449448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490065,-99) , 
11, 1.15011, 0, 0, 0.494693,-99) , 
11, -2.79492, 1, 0, 0.500551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535086,-99) , 
NN(
0, 
0, 
-1, -3.42763, 1, -1, 0.45747,-99) , 
10, -0.354325, 0, 0, 0.473256,-99) , 
12, -0.978164, 0, 0, 0.494115,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0143583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498729,-99) , 
11, -3.55822, 1, 0, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439261,-99) , 
4, 9.03111, 1, 0, 0.499683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44688,-99) , 
10, -1.85701, 0, 0, 0.49781,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0490006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.149293, 1, 1, 0.543881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387301,-99) , 
5, 0.999714, 0, 0, 0.500332,-99) , 
3, 3.83146, 0, 0, 0.508273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455254,-99) , 
6, 0.744748, 1, 0, 0.49554,-99) , 
NN(
0, 
0, 
-1, 5.08392, 1, -1, 0.42675,-99) , 
3, 5.02334, 0, 0, 0.475168,-99) , 
6, 0.332345, 1, 0, 0.499187,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.06193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470745,-99) , 
5, 0.999995, 0, 0, 0.519029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400479,-99) , 
5, 0.999905, 0, 0, 0.509391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489825,-99) , 
6, -0.306616, 1, 0, 0.496108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389117,-99) , 
3, 2.60167, 0, 0, 0.488968,-99) , 
6, -0.524159, 1, 0, 0.495983,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.032369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441468,-99) , 
3, 1.39001, 0, 0, 0.530012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462751,-99) , 
10, -0.99997, 0, 0, 0.497696,-99) , 
7, 0.00792751, 0, 0, 0.502365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425781,-99) , 
7, 0.0237843, 1, 0, 0.500412,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0311208);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488772,-99) , 
3, 1.68659, 0, 0, 0.535273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491643,-99) , 
11, 1.66322, 0, 0, 0.494582,-99) , 
7, 0.00905711, 0, 0, 0.499081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43008,-99) , 
7, 0.0237755, 1, 0, 0.497339,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0552582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484837,-99) , 
9, -951.286, 1, 0, 0.503311,-99) , 
6, -0.0708411, 1, 0, 0.51299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48843,-99) , 
3, 2.82688, 0, 0, 0.49578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404482,-99) , 
6, -0.287064, 1, 0, 0.48555,-99) , 
3, 3.32253, 0, 0, 0.499198,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0439762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490974,-99) , 
9, -949.398, 0, 0, 0.507928,-99) , 
3, 2.18331, 0, 0, 0.522106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497352,-99) , 
6, -0.234213, 1, 0, 0.505292,-99) , 
NN(
0, 
0, 
-1, -0.407239, 1, -1, 0.440848,-99) , 
3, 2.86744, 0, 0, 0.49682,-99) , 
6, -0.524221, 1, 0, 0.505538,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0373433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487649,-99) , 
4, 4.59246, 1, 0, 0.50856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4305,-99) , 
12, -1.7273, 0, 0, 0.504623,-99) , 
11, -4.08195, 1, 0, 0.507558,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0411918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44471,-99) , 
5, 0.999048, 0, 0, 0.50234,-99) , 
11, -2.70788, 1, 0, 0.508642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475471,-99) , 
10, -1.12178, 0, 0, 0.523711,-99) , 
NN(
0, 
0, 
-1, -2.82127, 1, -1, 0.459268,-99) , 
11, -3.61105, 1, 0, 0.484372,-99) , 
12, -0.898708, 0, 0, 0.502458,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0401165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459687,-99) , 
3, 1.30486, 0, 0, 0.513177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462041,-99) , 
8, 6.77401, 1, 0, 0.510509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483273,-99) , 
6, 0.201618, 1, 0, 0.50311,-99) , 
NN(
0, 
0, 
-1, -0.208471, 1, -1, 0.483793,-99) , 
3, 3.66163, 0, 0, 0.492056,-99) , 
0, 0.499043, 1, 0, 0.502747,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0276822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499689,-99) , 
3, 3.65607, 0, 0, 0.509205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468223,-99) , 
6, -0.42993, 1, 0, 0.478061,-99) , 
7, 0.00112918, 0, 0, 0.503155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432204,-99) , 
7, 0.0237125, 1, 0, 0.501362,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0437114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481804,-99) , 
3, 3.66034, 0, 0, 0.532305,-99) , 
NN(
NN(
0, 
0, 
-1, 3.55622, 0, 1, 0.51046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456342,-99) , 
9, -951.387, 1, 0, 0.481612,-99) , 
6, 0.0468415, 1, 0, 0.498934,-99) , 
9, 0.877635, 0, 0, 0.502683,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0208074);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493692,-99) , 
3, 4.96044, 0, 0, 0.497542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44853,-99) , 
0, 0.489519, 0, 0, 0.495989,-99) , 
9, 1.39928, 0, 0, 0.498371,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0304681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472346,-99) , 
3, 1.3959, 0, 0, 0.506399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471884,-99) , 
6, -0.619947, 1, 0, 0.47945,-99) , 
7, 0.00113203, 0, 0, 0.501155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438196,-99) , 
7, 0.0237755, 1, 0, 0.499554,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0215632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
3, 4.94061, 0, 0, 0.504586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450452,-99) , 
5, 0.999524, 1, 0, 0.468496,-99) , 
6, 0.606884, 1, 0, 0.500487,-99) , 
3, 6.2555, 0, 0, 0.50236,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0150981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536434,-99) , 
NN(
0, 
0, 
-1, 1.44854, 0, -1, 0.496795,-99) , 
11, 1.3899, 0, 0, 0.499348,-99) , 
9, 1.39928, 0, 0, 0.50194,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0386765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439028,-99) , 
12, 0.523589, 0, 0, 0.501605,-99) , 
11, -1.77264, 1, 0, 0.51579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499312,-99) , 
6, -0.234282, 1, 0, 0.506251,-99) , 
NN(
0, 
0, 
-1, -0.405137, 1, -1, 0.442668,-99) , 
3, 2.8583, 0, 0, 0.49806,-99) , 
6, -0.524307, 1, 0, 0.504124,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0548507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471359,-99) , 
3, 4.34356, 0, 0, 0.501894,-99) , 
6, -0.00857898, 1, 0, 0.5132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489245,-99) , 
3, 2.21857, 0, 0, 0.505579,-99) , 
NN(
0, 
0, 
-1, 3.05991, 0, -1, 0.421579,-99) , 
6, -0.335847, 1, 0, 0.492855,-99) , 
3, 3.33534, 0, 0, 0.50288,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0318364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61677, 1, 1, 0.546952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490225,-99) , 
12, -0.113811, 0, 0, 0.502442,-99) , 
3, 5.3858, 0, 0, 0.505279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515618,-99) , 
NN(
0, 
0, 
-1, 6.44953, 1, -1, 0.445412,-99) , 
5, 0.999524, 1, 0, 0.469752,-99) , 
6, 0.713012, 1, 0, 0.501952,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0322402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36964, 1, 1, 0.581115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499069,-99) , 
10, 1.22401, 0, 0, 0.505073,-99) , 
12, 0.693638, 0, 0, 0.511445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494106,-99) , 
3, 2.01417, 0, 0, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408961,-99) , 
10, 1.85715, 1, 0, 0.487729,-99) , 
11, -1.10367, 1, 0, 0.504759,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.051827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.130895, 1, 1, 0.580661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452875,-99) , 
6, -0.11783, 1, 0, 0.502718,-99) , 
3, 3.88927, 0, 0, 0.512017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420306,-99) , 
12, 0.561961, 1, 0, 0.50838,-99) , 
NN(
0, 
0, 
-1, 5.2299, 1, -1, 0.455204,-99) , 
3, 4.89451, 0, 0, 0.49174,-99) , 
6, 0.235127, 1, 0, 0.505526,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.044679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.961969, 0, 1, 0.541852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409311,-99) , 
3, 5.77876, 0, 0, 0.466823,-99) , 
13, 5.8911, 1, 0, 0.523643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476074,-99) , 
12, -0.11069, 0, 0, 0.497811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444998,-99) , 
5, 0.999048, 0, 0, 0.49576,-99) , 
11, -2.63082, 1, 0, 0.504903,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0405792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496955,-99) , 
5, 0.999524, 1, 0, 0.504181,-99) , 
6, -0.132391, 1, 0, 0.512327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404406,-99) , 
5, 0.999905, 0, 0, 0.498296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372814,-99) , 
6, -0.363299, 1, 0, 0.487418,-99) , 
3, 2.99858, 0, 0, 0.501128,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0499407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.79588, 0, 1, 0.554105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452494,-99) , 
3, 4.34109, 0, 0, 0.494639,-99) , 
6, 0.138904, 1, 0, 0.510362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488893,-99) , 
11, -2.32135, 1, 0, 0.499573,-99) , 
NN(
0, 
0, 
-1, 2.95665, 0, -1, 0.430394,-99) , 
6, -0.39879, 1, 0, 0.485713,-99) , 
3, 3.32349, 0, 0, 0.497823,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0231754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.218968, 1, 1, 0.508578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415884,-99) , 
6, -0.412276, 1, 0, 0.490219,-99) , 
3, 2.99677, 0, 0, 0.500092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440825,-99) , 
5, 0.998572, 0, 0, 0.498325,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0398393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446867,-99) , 
11, -2.01309, 1, 0, 0.524053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484551,-99) , 
6, -0.620123, 1, 0, 0.493169,-99) , 
5, 0.999524, 1, 0, 0.495635,-99) , 
11, -3.88098, 1, 0, 0.498926,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0389415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.314918, 1, 1, 0.51629,-99) , 
NN(
0, 
0, 
-1, 5.16061, 0, -1, 0.474989,-99) , 
6, 0.505589, 1, 0, 0.503163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401643,-99) , 
5, 0.999905, 0, 0, 0.494039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421502,-99) , 
6, -0.534943, 1, 0, 0.483296,-99) , 
3, 2.67099, 0, 0, 0.495341,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0494881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.80699, 0, 1, 0.558192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488485,-99) , 
5, 0.999524, 1, 0, 0.496314,-99) , 
6, 0.00825278, 1, 0, 0.505593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481803,-99) , 
11, -2.33374, 1, 0, 0.491076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424541,-99) , 
6, -0.265856, 1, 0, 0.484362,-99) , 
3, 3.33834, 0, 0, 0.494809,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0404854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492807,-99) , 
11, -3.36181, 1, 0, 0.499527,-99) , 
10, 1.84474, 0, 0, 0.504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448242,-99) , 
3, 1.36616, 0, 0, 0.488484,-99) , 
NN(
0, 
0, 
-1, -0.334022, 1, -1, 0.420545,-99) , 
10, 1.57144, 1, 0, 0.474072,-99) , 
11, -1.08498, 1, 0, 0.495583,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0625461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467342,-99) , 
8, 5.32809, 1, 0, 0.500522,-99) , 
10, 0.824146, 0, 0, 0.515751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491887,-99) , 
3, 2.0269, 0, 0, 0.508342,-99) , 
NN(
0, 
0, 
-1, 0.425498, 1, -1, 0.466422,-99) , 
10, 0.428582, 1, 0, 0.484257,-99) , 
11, -2.04471, 1, 0, 0.500076,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.034848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.779307, 0, 1, 0.588776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498923,-99) , 
10, 1.10016, 0, 0, 0.504687,-99) , 
12, 0.567157, 0, 0, 0.511474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491769,-99) , 
3, 1.99145, 0, 0, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0.0465346, 1, -1, 0.446523,-99) , 
10, 1.28573, 1, 0, 0.485324,-99) , 
11, -1.29058, 1, 0, 0.503122,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0318128);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495147,-99) , 
3, 3.33834, 0, 0, 0.504381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4049,-99) , 
12, -1.85739, 0, 0, 0.500662,-99) , 
11, -4.10179, 1, 0, 0.504265,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0365479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.6948, 1, 1, 0.513236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478518,-99) , 
11, -4.05307, 1, 0, 0.493422,-99) , 
12, -0.84169, 0, 0, 0.507959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458714,-99) , 
5, 0.998571, 0, 0, 0.506488,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.037535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492053,-99) , 
3, 1.25534, 0, 0, 0.52696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463522,-99) , 
11, -1.21695, 1, 0, 0.501205,-99) , 
6, -0.809723, 1, 0, 0.505102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456349,-99) , 
10, -1.85707, 0, 0, 0.503445,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0408553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4514,-99) , 
10, -0.995918, 0, 0, 0.499681,-99) , 
6, 0.0887765, 1, 0, 0.509942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491152,-99) , 
3, 2.95296, 0, 0, 0.498721,-99) , 
NN(
0, 
0, 
-1, -0.284815, 0, -1, 0.43924,-99) , 
6, -0.198918, 1, 0, 0.491079,-99) , 
3, 3.65039, 0, 0, 0.499453,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0400754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419101,-99) , 
5, 0.999905, 0, 0, 0.502098,-99) , 
3, 2.43925, 0, 0, 0.512098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493457,-99) , 
6, -0.157028, 1, 0, 0.499341,-99) , 
NN(
0, 
0, 
-1, -0.07505, 0, -1, 0.435635,-99) , 
3, 3.05027, 0, 0, 0.491608,-99) , 
6, -0.428995, 1, 0, 0.499608,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0289695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55977, 0, 1, 0.511977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413253,-99) , 
5, 0.999932, 0, 0, 0.494587,-99) , 
11, -1.29058, 1, 0, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445786,-99) , 
5, 0.998571, 0, 0, 0.50455,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0199201);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539404,-99) , 
NN(
0, 
0, 
-1, -1.73606, 0, -1, 0.493268,-99) , 
11, 2.09196, 0, 0, 0.495472,-99) , 
11, -3.97106, 1, 0, 0.497812,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0372686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0340668, 1, 1, 0.569648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495554,-99) , 
3, 6.45134, 0, 0, 0.500059,-99) , 
6, 0.135232, 1, 0, 0.512068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496879,-99) , 
3, 2.53725, 0, 0, 0.506934,-99) , 
NN(
0, 
0, 
-1, 3.10185, 0, -1, 0.458484,-99) , 
6, -0.319123, 1, 0, 0.496578,-99) , 
3, 3.65594, 0, 0, 0.503412,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0333187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539929,-99) , 
NN(
NN(
0, 
0, 
-1, 1.43332, 0, 1, 0.507459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460506,-99) , 
9, -946.347, 0, 0, 0.481217,-99) , 
11, -1.50417, 1, 0, 0.49895,-99) , 
11, 1.60237, 0, 0, 0.501346,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0304124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489531,-99) , 
3, 3.96609, 0, 0, 0.525144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
9, -951.387, 0, 0, 0.514242,-99) , 
NN(
0, 
0, 
-1, 2.60388, 0, -1, 0.490837,-99) , 
6, -0.52416, 1, 0, 0.499064,-99) , 
9, 0.877635, 0, 0, 0.501984,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0198052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473534,-99) , 
8, 1.62305, 0, 0, 0.536368,-99) , 
NN(
0, 
0, 
-1, 1.65311, 0, 1, 0.503766,-99) , 
7, 0.00905953, 0, 0, 0.507368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445832,-99) , 
7, 0.0237843, 1, 0, 0.505816,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0142785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441534,-99) , 
6, 0.803096, 1, 0, 0.49975,-99) , 
5, 0.999524, 1, 0, 0.501962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439755,-99) , 
5, 0.998571, 0, 0, 0.500198,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0264734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490062,-99) , 
11, -2.28933, 1, 0, 0.499634,-99) , 
11, 1.51595, 0, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444152,-99) , 
4, 9.14738, 1, 0, 0.500295,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0450483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461436,-99) , 
8, 1.32362, 0, 0, 0.524694,-99) , 
NN(
0, 
0, 
-1, 1.47624, 1, -1, 0.471278,-99) , 
10, 1.00004, 1, 0, 0.515447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485593,-99) , 
9, -951.286, 1, 0, 0.497098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429056,-99) , 
3, 2.59478, 0, 0, 0.492619,-99) , 
6, -0.524217, 1, 0, 0.500525,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0540791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.699028, 0, 1, 0.57681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452991,-99) , 
12, 0.26453, 0, 0, 0.496854,-99) , 
11, -2.21762, 1, 0, 0.509809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467389,-99) , 
11, -3.41827, 1, 0, 0.48267,-99) , 
10, 0.26931, 0, 0, 0.49174,-99) , 
12, -0.497603, 0, 0, 0.503159,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0348825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.137811, 1, 1, 0.535564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43667,-99) , 
3, 2.53226, 0, 0, 0.495842,-99) , 
6, -0.605213, 1, 0, 0.501929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437956,-99) , 
3, 1.18535, 0, 0, 0.499587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429965,-99) , 
6, -0.844966, 1, 0, 0.479008,-99) , 
3, 1.6961, 0, 0, 0.498014,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.044657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488945,-99) , 
3, 4.60765, 0, 0, 0.516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483731,-99) , 
11, -2.77476, 1, 0, 0.493246,-99) , 
NN(
0, 
0, 
-1, 5.45353, 0, -1, 0.467233,-99) , 
8, 5.51873, 1, 0, 0.488203,-99) , 
9, 0.877635, 0, 0, 0.491327,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0368561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457697,-99) , 
12, 0.722999, 0, 0, 0.50318,-99) , 
11, -1.54789, 1, 0, 0.512802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491772,-99) , 
6, -0.465238, 1, 0, 0.496424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428073,-99) , 
3, 2.39113, 0, 0, 0.491353,-99) , 
6, -0.619326, 1, 0, 0.497637,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.02315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498551,-99) , 
11, -2.91813, 1, 0, 0.504508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430641,-99) , 
3, 3.81509, 0, 0, 0.478765,-99) , 
12, -1.26785, 0, 0, 0.500281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449875,-99) , 
5, 0.999048, 0, 0, 0.498029,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0266564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.0978, 1, 1, 0.547073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497018,-99) , 
5, 0.999524, 1, 0, 0.501813,-99) , 
12, 0.90839, 0, 0, 0.505316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490327,-99) , 
8, 1.96976, 0, 0, 0.497527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412696,-99) , 
10, 1.85715, 1, 0, 0.48612,-99) , 
11, -0.802044, 1, 0, 0.500784,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0294597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429313,-99) , 
3, 1.36476, 0, 0, 0.519405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497414,-99) , 
11, 1.21631, 0, 0, 0.500816,-99) , 
7, 0.00566059, 0, 0, 0.505542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455559,-99) , 
7, 0.0237755, 1, 0, 0.504278,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0426964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482756,-99) , 
11, -1.62107, 1, 0, 0.507561,-99) , 
12, 1.20861, 0, 0, 0.510721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460913,-99) , 
11, 0.111668, 0, 0, 0.515206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430959,-99) , 
9, -946.347, 0, 0, 0.455993,-99) , 
6, -0.810684, 1, 0, 0.49049,-99) , 
11, -0.782658, 1, 0, 0.50602,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0237059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.101158, 1, 1, 0.515916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427617,-99) , 
12, -1.36144, 0, 0, 0.496472,-99) , 
3, 3.7872, 0, 0, 0.504021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464376,-99) , 
6, 0.807615, 1, 0, 0.502125,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0366066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494118,-99) , 
10, -0.999947, 1, 0, 0.498015,-99) , 
11, -2.7535, 1, 0, 0.503468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537298,-99) , 
NN(
0, 
0, 
-1, -3.3469, 1, -1, 0.46781,-99) , 
10, -0.268418, 0, 0, 0.480408,-99) , 
12, -0.924095, 0, 0, 0.497714,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0306287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498789,-99) , 
11, -2.08915, 1, 0, 0.509431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486946,-99) , 
10, 0.498042, 0, 0, 0.493215,-99) , 
12, -0.202381, 0, 0, 0.502138,-99) , 
9, 1.39928, 0, 0, 0.504312,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0337509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96412, 1, 1, 0.51618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490951,-99) , 
10, 0.605877, 0, 0, 0.499519,-99) , 
12, -0.0348162, 0, 0, 0.507945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452194,-99) , 
5, 0.998571, 0, 0, 0.506337,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0366862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.23602, 1, 1, 0.533964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484865,-99) , 
6, 0.319045, 1, 0, 0.507416,-99) , 
3, 5.63122, 0, 0, 0.510279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48029,-99) , 
3, 4.23831, 0, 0, 0.489149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441192,-99) , 
13, 5.51614, 1, 0, 0.481466,-99) , 
0, 0.5019, 1, 0, 0.504434,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0302932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
11, -1.00404, 1, 0, 0.56117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49838,-99) , 
3, 5.02551, 0, 0, 0.506181,-99) , 
12, 1.02668, 0, 0, 0.50995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488702,-99) , 
3, 1.68438, 0, 0, 0.498931,-99) , 
NN(
0, 
0, 
-1, 1.9388, 1, -1, 0.448929,-99) , 
10, 1.28574, 1, 0, 0.486509,-99) , 
11, -0.706799, 1, 0, 0.50476,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0304682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.646871, 0, 1, 0.512016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493499,-99) , 
3, 2.01417, 0, 0, 0.502557,-99) , 
NN(
0, 
0, 
-1, -0.335074, 1, -1, 0.440858,-99) , 
10, 1.57146, 1, 0, 0.489438,-99) , 
11, -1.13362, 1, 0, 0.505534,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0247357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0759106, 1, 1, 0.509228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479147,-99) , 
3, 3.50699, 0, 0, 0.496312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447716,-99) , 
6, 0.617631, 1, 0, 0.489404,-99) , 
4, 4.6823, 1, 0, 0.505516,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0342666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40383,-99) , 
5, 0.999524, 0, 0, 0.497557,-99) , 
11, -2.10997, 1, 0, 0.506645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550275,-99) , 
NN(
0, 
0, 
-1, -2.85578, 1, -1, 0.484656,-99) , 
10, 0.497999, 0, 0, 0.491301,-99) , 
12, -0.188593, 0, 0, 0.499677,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0301595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0695213, 1, 1, 0.516879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417354,-99) , 
6, -0.171892, 1, 0, 0.493416,-99) , 
3, 3.53469, 0, 0, 0.502171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448953,-99) , 
12, -0.268589, 1, 0, 0.497054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434529,-99) , 
3, 5.52398, 0, 0, 0.477113,-99) , 
6, 0.617846, 1, 0, 0.498699,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0356757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.848453, 0, 1, 0.573772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494525,-99) , 
10, 1.38786, 0, 0, 0.497873,-99) , 
12, 0.629171, 0, 0, 0.5041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483496,-99) , 
3, 1.99536, 0, 0, 0.492614,-99) , 
NN(
0, 
0, 
-1, 3.32069, 1, -1, 0.445479,-99) , 
10, 1.57146, 1, 0, 0.482278,-99) , 
11, -1.20998, 1, 0, 0.497519,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0371971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00608, 0, 1, 0.522397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449058,-99) , 
12, 0.500683, 1, 0, 0.512441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492738,-99) , 
3, 3.50992, 0, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415809,-99) , 
8, 4.87635, 1, 0, 0.49579,-99) , 
3, 4.62556, 0, 0, 0.500327,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0403647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.300056, 0, 1, 0.56538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445839,-99) , 
6, -0.36571, 1, 0, 0.501563,-99) , 
3, 3.17385, 0, 0, 0.510407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492232,-99) , 
6, 0.200931, 1, 0, 0.498899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423739,-99) , 
3, 3.75035, 0, 0, 0.492967,-99) , 
6, -0.0483235, 1, 0, 0.502681,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0267897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85694, 0, 1, 0.506873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480966,-99) , 
6, -0.905784, 1, 0, 0.497434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420725,-99) , 
9, -946.347, 0, 0, 0.457611,-99) , 
11, 0.161568, 0, 0, 0.481505,-99) , 
11, -0.726185, 1, 0, 0.501195,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0305866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483992,-99) , 
8, 4.84006, 1, 0, 0.546864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468854,-99) , 
3, 1.37108, 0, 0, 0.496783,-99) , 
11, -2.91813, 1, 0, 0.502442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536137,-99) , 
NN(
0, 
0, 
-1, -1.19689, 0, -1, 0.454309,-99) , 
11, -4.04966, 1, 0, 0.477247,-99) , 
12, -1.30175, 0, 0, 0.498401,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0213721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494612,-99) , 
6, -0.714474, 1, 0, 0.498077,-99) , 
NN(
0, 
0, 
-1, 0.433601, 0, -1, 0.447555,-99) , 
3, 1.44425, 0, 0, 0.495326,-99) , 
11, 1.68255, 0, 0, 0.496996,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.023847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.371773, 1, 1, 0.521857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451168,-99) , 
8, 4.53494, 1, 0, 0.497859,-99) , 
3, 4.52913, 0, 0, 0.502952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521507,-99) , 
NN(
0, 
0, 
-1, 6.36997, 1, -1, 0.461708,-99) , 
3, 6.35571, 0, 0, 0.478878,-99) , 
6, 0.712478, 1, 0, 0.50071,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0224076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509799,-99) , 
NN(
0, 
0, 
-1, -0.19788, 1, -1, 0.490289,-99) , 
3, 3.9706, 0, 0, 0.497581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439063,-99) , 
5, 0.998572, 0, 0, 0.495915,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0241638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454062,-99) , 
12, 0.319984, 1, 0, 0.512803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444001,-99) , 
8, 4.95093, 1, 0, 0.495386,-99) , 
3, 4.96432, 0, 0, 0.499124,-99) , 
NN(
0, 
0, 
-1, 0.0468432, 1, -1, 0.475206,-99) , 
0, 0.491424, 0, 0, 0.497207,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0200415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454246,-99) , 
0, 0.505709, 1, 0, 0.500699,-99) , 
NN(
0, 
0, 
-1, -0.239989, 1, -1, 0.47425,-99) , 
7, 0.00113245, 0, 0, 0.495607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441267,-99) , 
7, 0.0237843, 1, 0, 0.494229,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.043705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.13753, 1, 1, 0.541045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449228,-99) , 
10, 0.805839, 0, 0, 0.4961,-99) , 
12, -0.732803, 1, 0, 0.517522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486547,-99) , 
11, -2.87135, 1, 0, 0.494321,-99) , 
NN(
0, 
0, 
-1, -3.09976, 0, -1, 0.448924,-99) , 
8, 5.2615, 1, 0, 0.489889,-99) , 
3, 5.30476, 0, 0, 0.494208,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0339567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480359,-99) , 
11, -2.52322, 1, 0, 0.536821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45523,-99) , 
13, 4.50732, 1, 0, 0.497231,-99) , 
3, 4.56514, 0, 0, 0.501523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484003,-99) , 
8, 6.17675, 1, 0, 0.501778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428212,-99) , 
11, -2.33261, 0, 0, 0.456092,-99) , 
3, 5.57856, 0, 0, 0.480805,-99) , 
8, 5.47058, 1, 0, 0.497362,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0306763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492322,-99) , 
7, 0.0140762, 1, 0, 0.518706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482011,-99) , 
3, 3.99365, 0, 0, 0.492137,-99) , 
7, 0.0101925, 0, 0, 0.494378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446927,-99) , 
7, 0.0237843, 1, 0, 0.493165,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0367103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429321,-99) , 
12, 0.755506, 0, 0, 0.496938,-99) , 
11, -1.53784, 1, 0, 0.508426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492468,-99) , 
6, -0.465309, 1, 0, 0.496531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425123,-99) , 
3, 2.3793, 0, 0, 0.491448,-99) , 
6, -0.619381, 1, 0, 0.496442,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0248181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495783,-99) , 
3, 4.95912, 0, 0, 0.500381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466666,-99) , 
3, 6.39943, 0, 0, 0.480353,-99) , 
8, 5.95722, 1, 0, 0.497661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448009,-99) , 
7, 0.0237843, 1, 0, 0.4964,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.016276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.8318, 1, 1, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452911,-99) , 
3, 1.25687, 0, 0, 0.501621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448839,-99) , 
3, 6.11184, 0, 0, 0.474013,-99) , 
8, 6.35113, 1, 0, 0.499225,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0199011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47309,-99) , 
11, -2.40654, 1, 0, 0.518252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45542,-99) , 
3, 1.21872, 0, 0, 0.498588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445895,-99) , 
11, -2.38002, 0, 0, 0.466257,-99) , 
8, 5.85375, 1, 0, 0.49468,-99) , 
5, 0.999524, 1, 0, 0.49659,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0363348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44404,-99) , 
0, 0.492376, 0, 0, 0.499976,-99) , 
6, 0.285424, 1, 0, 0.509378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460187,-99) , 
5, 0.999982, 0, 0, 0.493006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418656,-99) , 
5, 0.999619, 0, 0, 0.489918,-99) , 
3, 4.30101, 0, 0, 0.496366,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0176699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498773,-99) , 
6, -0.457841, 1, 0, 0.503636,-99) , 
NN(
0, 
0, 
-1, -0.57939, 1, -1, 0.489402,-99) , 
3, 2.35813, 0, 0, 0.49896,-99) , 
NN(
0, 
0, 
-1, -0.0484322, 1, -1, 0.474023,-99) , 
0, 0.504757, 1, 0, 0.497101,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0293747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -946.347, 0, 1, 0.522959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460269,-99) , 
3, 3.98674, 0, 0, 0.479877,-99) , 
4, 4.72622, 1, 0, 0.50969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490725,-99) , 
9, 0.877635, 0, 0, 0.493905,-99) , 
NN(
0, 
0, 
-1, 4.17476, 1, -1, 0.464506,-99) , 
0, 0.503804, 1, 0, 0.491021,-99) , 
2, -0.0713479, 1, 0, 0.49449,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0334054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492728,-99) , 
3, 2.99367, 0, 0, 0.505195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47957,-99) , 
6, -0.809674, 1, 0, 0.484337,-99) , 
7, 0.00226017, 0, 0, 0.497384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448663,-99) , 
7, 0.0237319, 1, 0, 0.496156,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0238944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494819,-99) , 
11, -2.86053, 1, 0, 0.500368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419226,-99) , 
11, -2.79817, 0, 0, 0.45652,-99) , 
8, 6.17319, 1, 0, 0.497197,-99) , 
3, 6.247, 0, 0, 0.498776,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0235927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480573,-99) , 
12, -0.148412, 1, 0, 0.532939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49453,-99) , 
6, -0.527783, 1, 0, 0.500578,-99) , 
5, 0.999524, 1, 0, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444615,-99) , 
8, 7.20705, 1, 0, 0.50146,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0336742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.779255, 0, 1, 0.569944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496045,-99) , 
11, -4.09873, 1, 0, 0.500541,-99) , 
12, 0.567157, 0, 0, 0.506072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494008,-99) , 
3, 2.0026, 0, 0, 0.50359,-99) , 
NN(
0, 
0, 
-1, -0.0525363, 1, -1, 0.445552,-99) , 
10, 1.28572, 1, 0, 0.486903,-99) , 
11, -1.29058, 1, 0, 0.499981,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0270718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.638, 1, 1, 0.508344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479947,-99) , 
10, -0.207605, 0, 0, 0.492295,-99) , 
12, -0.804843, 0, 0, 0.503919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460904,-99) , 
4, 9.03751, 1, 0, 0.502659,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0339988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30785, 1, 1, 0.55654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465909,-99) , 
8, 4.21067, 1, 0, 0.490488,-99) , 
10, -0.522753, 0, 0, 0.516039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492268,-99) , 
8, 1.56938, 0, 0, 0.544087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482256,-99) , 
3, 2.03327, 0, 0, 0.495294,-99) , 
10, -0.999842, 1, 0, 0.49961,-99) , 
11, -2.98593, 1, 0, 0.503394,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0433137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488288,-99) , 
8, 3.33926, 1, 0, 0.501739,-99) , 
10, 0.511039, 0, 0, 0.512265,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.521704,-99) , 
NN(
0, 
0, 
-1, 2.3468, 0, -1, 0.485477,-99) , 
10, 0.142875, 1, 0, 0.497836,-99) , 
11, -2.48251, 1, 0, 0.503199,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.028467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496496,-99) , 
5, 0.999524, 1, 0, 0.503069,-99) , 
6, 0.0689364, 1, 0, 0.509705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464738,-99) , 
6, -0.202383, 1, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424302,-99) , 
12, -1.32566, 0, 0, 0.495396,-99) , 
3, 3.66104, 0, 0, 0.501679,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0399205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474841,-99) , 
3, 3.86467, 0, 0, 0.506864,-99) , 
6, -0.21649, 1, 0, 0.511537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489921,-99) , 
3, 2.34691, 0, 0, 0.498031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432391,-99) , 
6, -0.363299, 1, 0, 0.492342,-99) , 
3, 2.99734, 0, 0, 0.502905,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0185981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462533,-99) , 
12, -1.56706, 0, 0, 0.501065,-99) , 
11, -3.97106, 1, 0, 0.503205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436158,-99) , 
5, 0.998571, 0, 0, 0.501317,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0250394);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498348,-99) , 
12, 0.41602, 0, 0, 0.506051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45252,-99) , 
10, 1.28573, 1, 0, 0.486113,-99) , 
11, -1.42787, 1, 0, 0.499892,-99) , 
11, 1.68025, 0, 0, 0.501908,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0226896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496344,-99) , 
10, -1.28568, 1, 0, 0.498988,-99) , 
NN(
0, 
0, 
-1, -1.26018, 0, -1, 0.473421,-99) , 
12, -1.17418, 0, 0, 0.495117,-99) , 
11, -4.10924, 1, 0, 0.497958,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0311661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.76833, 1, 1, 0.549583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496801,-99) , 
10, 1.85705, 0, 0, 0.500451,-99) , 
3, 4.5637, 0, 0, 0.505814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456303,-99) , 
3, 5.41063, 0, 0, 0.495138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436657,-99) , 
12, 0.217294, 1, 0, 0.484402,-99) , 
8, 5.46611, 1, 0, 0.501497,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0377016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.392846, 0, 1, 0.514006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474851,-99) , 
10, 0.758391, 1, 0, 0.496774,-99) , 
11, -1.45613, 1, 0, 0.508872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414528,-99) , 
6, -0.9243, 1, 0, 0.476042,-99) , 
3, 1.3798, 0, 0, 0.506303,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0261418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.51955, 0, 1, 0.50984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475325,-99) , 
3, 5.5175, 0, 0, 0.494681,-99) , 
6, 0.427065, 1, 0, 0.5063,-99) , 
NN(
0, 
0, 
-1, 0.0437259, 1, -1, 0.474539,-99) , 
0, 0.491424, 0, 0, 0.503818,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0208992);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498147,-99) , 
10, -0.999934, 1, 0, 0.502636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411633,-99) , 
8, 4.85063, 0, 0, 0.46217,-99) , 
12, -1.57295, 0, 0, 0.50005,-99) , 
11, -3.97106, 1, 0, 0.50193,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0151281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497776,-99) , 
11, 0.87938, 0, 0, 0.500429,-99) , 
11, -3.97106, 1, 0, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446269,-99) , 
8, 7.18448, 1, 0, 0.500896,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0278044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.10476, 1, 1, 0.523124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437639,-99) , 
8, 4.63149, 1, 0, 0.501524,-99) , 
3, 4.37365, 0, 0, 0.505955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530669,-99) , 
NN(
0, 
0, 
-1, 6.461, 1, -1, 0.467966,-99) , 
3, 6.42343, 0, 0, 0.480046,-99) , 
6, 0.617846, 1, 0, 0.502366,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.024395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0663721, 1, 1, 0.510917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455543,-99) , 
12, -0.318859, 0, 0, 0.494042,-99) , 
3, 3.01795, 0, 0, 0.503066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435467,-99) , 
5, 0.998571, 0, 0, 0.5012,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0239636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49587,-99) , 
11, -2.93865, 1, 0, 0.502543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458837,-99) , 
11, -2.46341, 0, 0, 0.479494,-99) , 
8, 6.38577, 1, 0, 0.500548,-99) , 
NN(
0, 
0, 
-1, 0.506117, 0, -1, 0.475085,-99) , 
0, 0.504757, 1, 0, 0.498674,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0294501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496617,-99) , 
11, -2.36365, 1, 0, 0.505784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429238,-99) , 
3, 4.4905, 0, 0, 0.484532,-99) , 
12, -1.71534, 0, 0, 0.503885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453639,-99) , 
0, 0.489519, 0, 0, 0.502294,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0376985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17749, 1, 1, 0.509874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433897,-99) , 
10, -1.33917, 0, 0, 0.471068,-99) , 
12, -1.51374, 0, 0, 0.506263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426665,-99) , 
12, -0.127373, 1, 0, 0.492349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407401,-99) , 
11, -2.71619, 0, 0, 0.454888,-99) , 
3, 5.41268, 0, 0, 0.479289,-99) , 
8, 5.47058, 1, 0, 0.500859,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0334666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.020021, 1, 1, 0.528994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442314,-99) , 
13, 3.57282, 1, 0, 0.497199,-99) , 
3, 3.58436, 0, 0, 0.504837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436804,-99) , 
8, 7.21068, 1, 0, 0.500247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42282,-99) , 
8, 5.29507, 1, 0, 0.465997,-99) , 
3, 5.22801, 0, 0, 0.486075,-99) , 
6, 0.331928, 1, 0, 0.499699,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0373499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487264,-99) , 
10, 0.715305, 0, 0, 0.497457,-99) , 
6, -0.452556, 1, 0, 0.501322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45947,-99) , 
10, 0.428247, 1, 0, 0.488552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400831,-99) , 
6, -0.580452, 1, 0, 0.480634,-99) , 
3, 2.34915, 0, 0, 0.494591,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0442134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481016,-99) , 
8, 3.3602, 1, 0, 0.492982,-99) , 
10, 0.266999, 0, 0, 0.506437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499853,-99) , 
3, 1.32535, 0, 0, 0.520049,-99) , 
NN(
0, 
0, 
-1, 1.46117, 0, -1, 0.48397,-99) , 
11, 0.94517, 0, 0, 0.488962,-99) , 
11, -2.47955, 1, 0, 0.495505,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0388922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456142,-99) , 
3, 3.66589, 0, 0, 0.502366,-99) , 
6, -0.133097, 1, 0, 0.508719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485317,-99) , 
11, -1.55568, 1, 0, 0.497684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429285,-99) , 
13, 3.02057, 1, 0, 0.491538,-99) , 
3, 3.0113, 0, 0, 0.500955,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0314731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499271,-99) , 
11, -2.05215, 1, 0, 0.508349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483601,-99) , 
10, 0.565506, 0, 0, 0.490972,-99) , 
12, -0.113811, 0, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450145,-99) , 
5, 0.998571, 0, 0, 0.498781,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.029813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.58323, 1, 1, 0.522789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473036,-99) , 
10, -0.999838, 0, 0, 0.515541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473879,-99) , 
10, -1.28539, 0, 0, 0.505501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485427,-99) , 
11, 0.506347, 0, 0, 0.488716,-99) , 
0, 0.497138, 1, 0, 0.495636,-99) , 
2, 0.0713744, 0, 0, 0.499383,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0380745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487024,-99) , 
10, -0.553342, 0, 0, 0.520943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482446,-99) , 
12, 0.276396, 0, 0, 0.496109,-99) , 
11, -2.79861, 1, 0, 0.502448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521465,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.444037,-99) , 
3, 6.36543, 0, 0, 0.471394,-99) , 
8, 6.3869, 1, 0, 0.499825,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0278386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490214,-99) , 
10, -0.514936, 0, 0, 0.518196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48255,-99) , 
12, 0.0997749, 0, 0, 0.493932,-99) , 
11, -2.95989, 1, 0, 0.499444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446384,-99) , 
8, 7.1271, 1, 0, 0.497861,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0277519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.42593, 1, 1, 0.538489,-99) , 
NN(
0, 
0, 
-1, -3.61401, 1, -1, 0.477212,-99) , 
10, -0.932093, 0, 0, 0.51487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495435,-99) , 
10, -1.28552, 1, 0, 0.497731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44568,-99) , 
5, 0.999048, 0, 0, 0.495743,-99) , 
11, -2.95354, 1, 0, 0.500241,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0326751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464226,-99) , 
10, -1.22542, 0, 0, 0.527184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493988,-99) , 
10, -0.999892, 1, 0, 0.496955,-99) , 
11, -3.15145, 1, 0, 0.502298,-99) , 
NN(
0, 
0, 
-1, 6.25176, 0, -1, 0.466,-99) , 
8, 6.77088, 1, 0, 0.500416,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0401496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456238,-99) , 
12, -1.71364, 0, 0, 0.507123,-99) , 
11, -4.1019, 1, 0, 0.510408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482426,-99) , 
6, -0.935128, 1, 0, 0.52027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400877,-99) , 
11, 0.796559, 0, 0, 0.48087,-99) , 
8, 1.61169, 0, 0, 0.507172,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0345089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449382,-99) , 
3, 2.84251, 0, 0, 0.502731,-99) , 
6, -0.465905, 1, 0, 0.506234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487533,-99) , 
3, 1.80498, 0, 0, 0.498705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441272,-99) , 
6, -0.640194, 1, 0, 0.489173,-99) , 
3, 2.34697, 0, 0, 0.50062,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0344621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475207,-99) , 
12, -0.504354, 0, 0, 0.501457,-99) , 
3, 3.78177, 0, 0, 0.506185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434273,-99) , 
12, 0.633329, 1, 0, 0.497605,-99) , 
NN(
0, 
0, 
-1, -2.76834, 0, -1, 0.46469,-99) , 
3, 4.70806, 0, 0, 0.487731,-99) , 
6, 0.142011, 1, 0, 0.49951,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0172298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496764,-99) , 
11, -3.76886, 1, 0, 0.499379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462146,-99) , 
8, 6.70594, 1, 0, 0.497563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435306,-99) , 
5, 0.998572, 0, 0, 0.495826,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0246701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.11944, 0, 1, 0.509538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467413,-99) , 
3, 5.05655, 0, 0, 0.489511,-99) , 
6, 0.236791, 1, 0, 0.503077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459865,-99) , 
10, -1.8571, 0, 0, 0.501619,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0198504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494327,-99) , 
11, 2.24602, 0, 0, 0.495934,-99) , 
11, -3.76886, 1, 0, 0.498864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451928,-99) , 
8, 7.25014, 1, 0, 0.497657,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0216538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496678,-99) , 
6, 0.369504, 1, 0, 0.524075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433599,-99) , 
8, 4.70028, 1, 0, 0.496465,-99) , 
3, 4.45693, 0, 0, 0.500427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460797,-99) , 
12, -0.134207, 1, 0, 0.496395,-99) , 
NN(
0, 
0, 
-1, 5.57226, 1, -1, 0.461128,-99) , 
3, 5.4965, 0, 0, 0.4825,-99) , 
6, 0.522678, 1, 0, 0.497131,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0179701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452279,-99) , 
12, -1.71364, 0, 0, 0.497778,-99) , 
11, -4.1019, 1, 0, 0.500662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437472,-99) , 
12, 2.37224, 0, 0, 0.480336,-99) , 
8, 1.61702, 0, 0, 0.498408,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.013932);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496831,-99) , 
10, 2.14286, 0, 0, 0.498308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450464,-99) , 
5, 0.998571, 0, 0, 0.497005,-99) , 
11, -3.97106, 1, 0, 0.498805,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0161127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.524008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495669,-99) , 
5, 0.999524, 1, 0, 0.497493,-99) , 
10, 1.85714, 0, 0, 0.499343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456023,-99) , 
5, 0.998571, 0, 0, 0.498108,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0178751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45431,-99) , 
8, 1.31193, 0, 0, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472253,-99) , 
8, 6.73977, 1, 0, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460747,-99) , 
5, 0.998571, 0, 0, 0.50097,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0289668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.594732, 1, 1, 0.548174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456348,-99) , 
8, 4.8323, 1, 0, 0.499953,-99) , 
3, 4.82997, 0, 0, 0.503298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46066,-99) , 
12, -0.816707, 1, 0, 0.487044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437813,-99) , 
3, 5.27781, 0, 0, 0.4745,-99) , 
8, 5.51426, 1, 0, 0.497744,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0160817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496665,-99) , 
5, 0.999524, 1, 0, 0.498836,-99) , 
NN(
0, 
0, 
-1, -0.145164, 1, -1, 0.471598,-99) , 
0, 0.491061, 0, 0, 0.496854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463041,-99) , 
0, 0.505709, 1, 0, 0.495381,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0320294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.525483,-99) , 
NN(
0, 
0, 
-1, 4.26327, 1, -1, 0.492064,-99) , 
3, 4.25669, 0, 0, 0.496696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477697,-99) , 
10, 1.0434, 0, 0, 0.489266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41568,-99) , 
12, 0.44477, 1, 0, 0.479286,-99) , 
6, 0.427511, 1, 0, 0.492742,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.019282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456855,-99) , 
3, 1.2575, 0, 0, 0.500088,-99) , 
11, -3.97106, 1, 0, 0.50248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451228,-99) , 
11, -2.4228, 0, 0, 0.475411,-99) , 
8, 6.3548, 1, 0, 0.500119,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0386813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.64171, 1, 1, 0.549132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489066,-99) , 
9, -949.398, 0, 0, 0.501209,-99) , 
3, 3.17394, 0, 0, 0.507656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468258,-99) , 
3, 4.39928, 0, 0, 0.496293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41935,-99) , 
12, 0.962474, 1, 0, 0.491581,-99) , 
6, -0.048623, 1, 0, 0.500556,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.029912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498911,-99) , 
10, -0.143038, 1, 0, 0.532766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425671,-99) , 
6, -0.877827, 1, 0, 0.492437,-99) , 
3, 1.48494, 0, 0, 0.513291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497305,-99) , 
6, -0.551878, 1, 0, 0.500774,-99) , 
NN(
0, 
0, 
-1, 1.96153, 0, -1, 0.447122,-99) , 
3, 2.17499, 0, 0, 0.496145,-99) , 
6, -0.7149, 1, 0, 0.500128,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0198551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492465,-99) , 
12, 0.230207, 0, 0, 0.498659,-99) , 
11, -3.76215, 1, 0, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442632,-99) , 
8, 7.18448, 1, 0, 0.499658,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0129996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533809,-99) , 
NN(
0, 
0, 
-1, -1.81231, 0, -1, 0.496344,-99) , 
10, 2.14286, 0, 0, 0.498071,-99) , 
11, -4.02099, 1, 0, 0.499853,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0189578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496242,-99) , 
12, 1.12884, 0, 0, 0.501119,-99) , 
11, -3.97106, 1, 0, 0.503349,-99) , 
NN(
0, 
0, 
-1, 6.25641, 0, -1, 0.474815,-99) , 
8, 6.74066, 1, 0, 0.501797,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0327415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495571,-99) , 
6, -0.429819, 1, 0, 0.501974,-99) , 
10, 1.82503, 0, 0, 0.50601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475648,-99) , 
8, 2.64181, 0, 0, 0.485295,-99) , 
11, 2.08436, 0, 0, 0.491979,-99) , 
11, -1.15051, 1, 0, 0.501861,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0346095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.38294, 1, 1, 0.513187,-99) , 
NN(
0, 
0, 
-1, 5.4547, 0, -1, 0.484473,-99) , 
6, 0.658182, 1, 0, 0.508084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494219,-99) , 
3, 1.51092, 0, 0, 0.53321,-99) , 
NN(
0, 
0, 
-1, -0.602538, 1, -1, 0.47896,-99) , 
10, -0.999997, 1, 0, 0.489845,-99) , 
3, 2.3663, 0, 0, 0.501989,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0285357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463585,-99) , 
12, 0.320336, 1, 0, 0.517473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465327,-99) , 
13, 4.49742, 1, 0, 0.497063,-99) , 
3, 4.97804, 0, 0, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460576,-99) , 
5, 0.998572, 0, 0, 0.499874,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0254363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499578,-99) , 
4, 4.55842, 1, 0, 0.521394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473001,-99) , 
10, -0.143561, 1, 0, 0.489989,-99) , 
3, 2.0473, 0, 0, 0.512918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497555,-99) , 
3, 4.86697, 0, 0, 0.503128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460005,-99) , 
9, -951.286, 1, 0, 0.477967,-99) , 
13, 5.73729, 1, 0, 0.499066,-99) , 
2, 0.0714736, 0, 0, 0.501658,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0286402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.348924, 1, 1, 0.511899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467333,-99) , 
10, 0.428613, 1, 0, 0.493968,-99) , 
3, 2.56766, 0, 0, 0.504875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471662,-99) , 
6, 0.80818, 1, 0, 0.50331,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0167614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495334,-99) , 
11, -3.47578, 1, 0, 0.497252,-99) , 
11, 2.25112, 0, 0, 0.498716,-99) , 
11, -3.76215, 1, 0, 0.500537,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.033368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462425,-99) , 
13, 5.80255, 1, 0, 0.534036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488625,-99) , 
12, -0.155234, 0, 0, 0.500996,-99) , 
11, -3.33291, 1, 0, 0.504993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452036,-99) , 
12, -1.45871, 0, 0, 0.482245,-99) , 
10, -1.57135, 0, 0, 0.503616,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0327895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.76616, 1, 1, 0.540593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494947,-99) , 
6, 0.0105408, 1, 0, 0.504134,-99) , 
2, -0.0713766, 1, 0, 0.510943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464463,-99) , 
12, -0.101257, 0, 0, 0.494912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429992,-99) , 
3, 1.15707, 0, 0, 0.491193,-99) , 
3, 3.01115, 0, 0, 0.502038,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0389871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495611,-99) , 
8, 2.81176, 1, 0, 0.502171,-99) , 
10, 1.30967, 0, 0, 0.509241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493959,-99) , 
3, 2.33751, 0, 0, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0.986198, 0, -1, 0.462288,-99) , 
10, 0.99996, 1, 0, 0.488252,-99) , 
11, -1.70953, 1, 0, 0.500548,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0365102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35341, 1, 1, 0.515515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45963,-99) , 
10, -1.28446, 0, 0, 0.511235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428811,-99) , 
5, 0.999905, 0, 0, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441031,-99) , 
6, -0.412248, 1, 0, 0.49394,-99) , 
3, 3.00538, 0, 0, 0.503407,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0330182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.0304, 0, 1, 0.536908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456268,-99) , 
3, 3.36809, 0, 0, 0.499904,-99) , 
6, -0.208805, 1, 0, 0.505798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48149,-99) , 
3, 1.55625, 0, 0, 0.503507,-99) , 
NN(
0, 
0, 
-1, 2.23034, 0, -1, 0.462101,-99) , 
6, -0.61981, 1, 0, 0.492865,-99) , 
3, 2.67099, 0, 0, 0.500702,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0452512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486032,-99) , 
8, 4.0605, 1, 0, 0.498839,-99) , 
10, 0.854185, 0, 0, 0.506134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490514,-99) , 
3, 2.34757, 0, 0, 0.502473,-99) , 
NN(
0, 
0, 
-1, 4.65378, 1, -1, 0.469908,-99) , 
10, 0.714314, 1, 0, 0.486658,-99) , 
11, -1.95643, 1, 0, 0.496843,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0169821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.99193, 0, 1, 0.506489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459038,-99) , 
8, 7.12544, 1, 0, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452171,-99) , 
5, 0.998572, 0, 0, 0.503804,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0415301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0990769, 0, 1, 0.538356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461483,-99) , 
11, -1.86424, 1, 0, 0.487228,-99) , 
12, -0.395763, 1, 0, 0.51806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490891,-99) , 
11, -2.83212, 1, 0, 0.498884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424069,-99) , 
11, -2.51807, 0, 0, 0.464358,-99) , 
8, 5.24156, 1, 0, 0.495532,-99) , 
3, 5.27654, 0, 0, 0.499118,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.029376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496731,-99) , 
11, -2.95353, 1, 0, 0.49995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45015,-99) , 
10, -0.49329, 0, 0, 0.472971,-99) , 
12, -1.16029, 0, 0, 0.495711,-99) , 
11, -4.10179, 1, 0, 0.498265,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0159713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.87016, 1, 1, 0.519619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498174,-99) , 
6, -0.809707, 1, 0, 0.501302,-99) , 
2, 0.0714191, 0, 0, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46135,-99) , 
4, 9.27754, 1, 0, 0.503551,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0168019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463221,-99) , 
0, 0.489519, 0, 0, 0.505368,-99) , 
NN(
0, 
0, 
-1, 3.63339, 0, -1, 0.476062,-99) , 
2, -0.214216, 0, 0, 0.503847,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0241472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457092,-99) , 
6, -0.944949, 1, 0, 0.506873,-99) , 
3, 1.36312, 0, 0, 0.523235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497594,-99) , 
2, -0.0714203, 1, 0, 0.501542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42428,-99) , 
3, 1.47706, 0, 0, 0.49877,-99) , 
11, 0.504835, 0, 0, 0.50151,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0321609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.597089, 0, 1, 0.512346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476519,-99) , 
10, 0.714316, 1, 0, 0.496165,-99) , 
11, -1.97295, 1, 0, 0.504439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45715,-99) , 
8, 7.21016, 1, 0, 0.50321,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0351175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445599,-99) , 
6, -0.0486215, 1, 0, 0.506943,-99) , 
11, -1.26284, 1, 0, 0.516107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465422,-99) , 
10, -1.24449, 0, 0, 0.50429,-99) , 
NN(
0, 
0, 
-1, -1.34001, 1, -1, 0.469501,-99) , 
3, 2.42961, 0, 0, 0.498451,-99) , 
12, 0.766359, 0, 0, 0.50391,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0189567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481794,-99) , 
8, 1.6105, 0, 0, 0.526709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496523,-99) , 
11, 1.50929, 0, 0, 0.498721,-99) , 
7, 0.00905968, 0, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460086,-99) , 
7, 0.0237843, 1, 0, 0.500791,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0242215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
12, -0.378964, 1, 0, 0.528223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483058,-99) , 
12, -0.917859, 0, 0, 0.500649,-99) , 
NN(
0, 
0, 
-1, -0.938866, 1, -1, 0.464242,-99) , 
8, 1.42277, 0, 0, 0.498372,-99) , 
3, 5.92396, 0, 0, 0.500362,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0202063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.895901, 0, 1, 0.528562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495478,-99) , 
3, 4.98471, 0, 0, 0.500483,-99) , 
7, 0.0101925, 0, 0, 0.502929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459709,-99) , 
7, 0.0237843, 1, 0, 0.501843,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0223724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477269,-99) , 
8, 6.17357, 1, 0, 0.50403,-99) , 
3, 6.25287, 0, 0, 0.505601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480851,-99) , 
10, -0.471272, 0, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0.526468, 0, -1, 0.477029,-99) , 
11, -2.35038, 1, 0, 0.487106,-99) , 
4, 4.55235, 1, 0, 0.501911,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.026917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.505851, 0, 1, 0.538393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45199,-99) , 
10, 0.866016, 0, 0, 0.492306,-99) , 
12, -0.786997, 1, 0, 0.513747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469405,-99) , 
8, 5.10694, 1, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430966,-99) , 
3, 1.15707, 0, 0, 0.497978,-99) , 
3, 5.30148, 0, 0, 0.500408,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0257514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478044,-99) , 
12, -0.0417731, 1, 0, 0.502105,-99) , 
6, 0.0801926, 1, 0, 0.507913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464526,-99) , 
3, 1.29107, 0, 0, 0.497899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435638,-99) , 
6, -0.0756757, 1, 0, 0.494269,-99) , 
3, 3.67136, 0, 0, 0.500266,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0206542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493294,-99) , 
12, 1.2786, 0, 0, 0.497055,-99) , 
10, 2.14285, 0, 0, 0.498815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445708,-99) , 
5, 0.998571, 0, 0, 0.497335,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0192019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497118,-99) , 
11, -3.52381, 1, 0, 0.500914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406094,-99) , 
12, 1.6514, 0, 0, 0.478607,-99) , 
8, 1.61169, 0, 0, 0.498437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439618,-99) , 
5, 0.998571, 0, 0, 0.496848,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.026634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493421,-99) , 
11, -1.30809, 1, 0, 0.527763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465162,-99) , 
10, -1.28501, 0, 0, 0.499644,-99) , 
6, -0.526943, 1, 0, 0.502752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478827,-99) , 
3, 1.52653, 0, 0, 0.497557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431266,-99) , 
6, -0.709335, 1, 0, 0.4883,-99) , 
3, 2.0224, 0, 0, 0.499001,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0281252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28629, 1, 1, 0.518429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456728,-99) , 
3, 1.17998, 0, 0, 0.510633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492476,-99) , 
11, -4.07628, 1, 0, 0.495371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426701,-99) , 
3, 1.93007, 0, 0, 0.493017,-99) , 
6, -0.714535, 1, 0, 0.497152,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0240068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44346, 1, 1, 0.529575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436182,-99) , 
3, 2.54976, 0, 0, 0.498473,-99) , 
6, -0.537792, 1, 0, 0.501688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46132,-99) , 
8, 1.37852, 0, 0, 0.495792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445446,-99) , 
6, -0.7384, 1, 0, 0.485817,-99) , 
3, 2.02304, 0, 0, 0.497565,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0302035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475803,-99) , 
3, 4.1486, 0, 0, 0.498615,-99) , 
6, -0.0805142, 1, 0, 0.502846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488829,-99) , 
11, -2.33298, 1, 0, 0.494528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447246,-99) , 
6, -0.283253, 1, 0, 0.489264,-99) , 
3, 3.33834, 0, 0, 0.495939,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0506266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484199,-99) , 
13, 5.6687, 1, 0, 0.5539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484404,-99) , 
10, -1.28565, 1, 0, 0.4886,-99) , 
11, -2.17226, 1, 0, 0.500048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465643,-99) , 
11, -3.3734, 1, 0, 0.480102,-99) , 
10, 0.269362, 0, 0, 0.487879,-99) , 
12, -0.497603, 0, 0, 0.495611,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0357025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68667, 0, 1, 0.531903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488616,-99) , 
10, 0.714358, 0, 0, 0.497037,-99) , 
10, -0.428473, 1, 0, 0.502683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482873,-99) , 
10, -0.510918, 0, 0, 0.515148,-99) , 
NN(
0, 
0, 
-1, -3.59897, 1, -1, 0.464999,-99) , 
3, 4.73693, 0, 0, 0.486087,-99) , 
12, -0.978164, 0, 0, 0.498786,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0217533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491925,-99) , 
12, 3.16648, 1, 0, 0.509446,-99) , 
10, -0.428545, 1, 0, 0.51979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488875,-99) , 
11, -1.57315, 1, 0, 0.500078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416333,-99) , 
3, 1.47706, 0, 0, 0.497279,-99) , 
11, 0.418417, 0, 0, 0.499917,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0217848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43048,-99) , 
12, -1.32988, 0, 0, 0.497226,-99) , 
11, -3.53244, 1, 0, 0.500444,-99) , 
NN(
0, 
0, 
-1, 4.85777, 0, -1, 0.478041,-99) , 
8, 5.01794, 1, 0, 0.494384,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0291994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998617, 0, 1, 0.542483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477304,-99) , 
6, 0.332168, 0, 0, 0.520219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486405,-99) , 
5, 0.999987, 0, 0, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450743,-99) , 
5, 0.999728, 0, 0, 0.49877,-99) , 
5, 0.999524, 1, 0, 0.500493,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0103879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44337,-99) , 
3, 1.44854, 0, 0, 0.497218,-99) , 
11, 1.46102, 0, 0, 0.498799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453586,-99) , 
7, 0.0237843, 1, 0, 0.497656,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0285945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488033,-99) , 
13, 6.97709, 1, 0, 0.515577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491459,-99) , 
11, -3.76886, 1, 0, 0.493949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424107,-99) , 
11, -2.76834, 0, 0, 0.465917,-99) , 
8, 5.86617, 1, 0, 0.491508,-99) , 
3, 5.92401, 0, 0, 0.493106,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0310456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.51666, 1, 1, 0.560473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495676,-99) , 
11, 2.00257, 0, 0, 0.503629,-99) , 
11, -1.24593, 1, 0, 0.513435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496673,-99) , 
11, -1.92477, 0, 0, 0.503762,-99) , 
NN(
0, 
0, 
-1, -0.342956, 1, -1, 0.477548,-99) , 
3, 3.10266, 0, 0, 0.496088,-99) , 
12, 0.565884, 0, 0, 0.502209,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0367739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444581,-99) , 
13, 3.48164, 1, 0, 0.503959,-99) , 
3, 3.54599, 0, 0, 0.508972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49322,-99) , 
6, 0.318772, 1, 0, 0.500456,-99) , 
NN(
0, 
0, 
-1, 4.55138, 1, -1, 0.461744,-99) , 
3, 4.36808, 0, 0, 0.491914,-99) , 
6, 0.0468428, 1, 0, 0.502158,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0138198);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46757,-99) , 
4, 9.14098, 1, 0, 0.50145,-99) , 
NN(
0, 
0, 
-1, 0.293606, 0, -1, 0.453681,-99) , 
3, 1.4678, 0, 0, 0.498717,-99) , 
11, 1.46102, 0, 0, 0.500186,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.011681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462128,-99) , 
8, 6.54135, 1, 0, 0.500419,-99) , 
3, 6.25253, 0, 0, 0.502055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458271,-99) , 
4, 9.27754, 1, 0, 0.500958,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0178747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485697,-99) , 
3, 4.61123, 0, 0, 0.517237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451976,-99) , 
10, -1.85711, 0, 0, 0.498782,-99) , 
NN(
0, 
0, 
-1, -0.493776, 1, -1, 0.475616,-99) , 
8, 5.90941, 1, 0, 0.495586,-99) , 
9, 0.877635, 0, 0, 0.498027,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0291258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50103, 1, 1, 0.514703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465671,-99) , 
6, 0.863715, 1, 0, 0.508752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497426,-99) , 
11, -1.16145, 1, 0, 0.504072,-99) , 
NN(
0, 
0, 
-1, -2.16047, 1, -1, 0.482444,-99) , 
12, 0.615509, 0, 0, 0.491092,-99) , 
3, 4.97429, 0, 0, 0.494767,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0258855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483381,-99) , 
3, 2.02958, 0, 0, 0.497143,-99) , 
12, -1.54983, 1, 0, 0.499575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453795,-99) , 
8, 1.56071, 0, 0, 0.506416,-99) , 
NN(
0, 
0, 
-1, -2.04427, 1, -1, 0.45417,-99) , 
8, 2.83253, 1, 0, 0.47917,-99) , 
10, -0.999972, 0, 0, 0.496598,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0214891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491296,-99) , 
12, 0.804059, 0, 0, 0.496676,-99) , 
5, 0.999524, 1, 0, 0.49829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448806,-99) , 
5, 0.998571, 0, 0, 0.496932,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0265611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486895,-99) , 
3, 3.63909, 0, 0, 0.524168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495701,-99) , 
11, -2.27872, 1, 0, 0.503489,-99) , 
NN(
0, 
0, 
-1, 3.34537, 0, -1, 0.49031,-99) , 
6, -0.238658, 1, 0, 0.496648,-99) , 
9, 0.877635, 0, 0, 0.499796,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0100846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503124, 0, 1, 0.502177,-99) , 
NN(
0, 
0, 
-1, -1.66856, 1, -1, 0.476119,-99) , 
0, 0.504757, 1, 0, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449076,-99) , 
5, 0.998571, 0, 0, 0.498886,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0170684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49492,-99) , 
6, -0.809664, 1, 0, 0.498067,-99) , 
2, 0.214318, 0, 0, 0.499499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45219,-99) , 
4, 9.27754, 1, 0, 0.498311,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0295073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.37175, 1, 1, 0.514754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452476,-99) , 
12, 0.907017, 1, 0, 0.510498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495548,-99) , 
11, -2.5617, 1, 0, 0.50219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442797,-99) , 
8, 4.00918, 1, 0, 0.497376,-99) , 
3, 3.98674, 0, 0, 0.502405,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.013287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465944,-99) , 
3, 1.24705, 0, 0, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461613,-99) , 
8, 6.52837, 1, 0, 0.499197,-99) , 
3, 6.24631, 0, 0, 0.5006,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0128457);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532711,-99) , 
NN(
NN(
0, 
0, 
-1, 4.6804, 0, 1, 0.503614,-99) , 
NN(
0, 
0, 
-1, 5.40695, 0, -1, 0.480301,-99) , 
6, 0.609011, 1, 0, 0.501017,-99) , 
3, 6.26494, 0, 0, 0.502196,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0157683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494987,-99) , 
12, 1.54811, 0, 0, 0.49769,-99) , 
10, 2.14286, 0, 0, 0.498896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457296,-99) , 
5, 0.998571, 0, 0, 0.497742,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0220058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494056,-99) , 
3, 4.60394, 0, 0, 0.517809,-99) , 
NN(
NN(
0, 
0, 
-1, -2.68835, 1, 1, 0.505468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463437,-99) , 
12, -0.523315, 1, 0, 0.484721,-99) , 
8, 4.63449, 1, 0, 0.498635,-99) , 
9, 0.877635, 0, 0, 0.500793,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0179881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495699,-99) , 
6, -0.524439, 1, 0, 0.499884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455916,-99) , 
3, 1.44421, 0, 0, 0.497624,-99) , 
11, 1.52575, 0, 0, 0.499115,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0109929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499954,-99) , 
5, 0.999524, 1, 0, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469914,-99) , 
4, 9.03111, 1, 0, 0.500977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425189,-99) , 
6, -0.924812, 1, 0, 0.477904,-99) , 
3, 1.37681, 0, 0, 0.49916,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0208616);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49542,-99) , 
11, -2.66644, 1, 0, 0.501998,-99) , 
NN(
0, 
0, 
-1, 4.44392, 0, -1, 0.490055,-99) , 
8, 4.6172, 1, 0, 0.498054,-99) , 
10, 2.14286, 0, 0, 0.499543,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0348395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463355,-99) , 
11, -2.21937, 1, 0, 0.53482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46238,-99) , 
11, -3.17355, 0, 0, 0.500003,-99) , 
8, 5.88183, 1, 0, 0.512933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497294,-99) , 
3, 3.5314, 0, 0, 0.502658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408517,-99) , 
11, -2.82949, 0, 0, 0.457704,-99) , 
8, 4.9372, 1, 0, 0.498535,-99) , 
3, 4.94655, 0, 0, 0.501626,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0260195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473686,-99) , 
13, 5.62739, 1, 0, 0.521414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499999,-99) , 
8, 6.82028, 0, 0, 0.502935,-99) , 
11, -3.0512, 1, 0, 0.506092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533514,-99) , 
NN(
0, 
0, 
-1, -1.69385, 0, -1, 0.441695,-99) , 
9, -951.286, 0, 0, 0.482613,-99) , 
10, -1.28568, 0, 0, 0.503842,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0279598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464075,-99) , 
5, 0.999955, 0, 0, 0.5162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496603,-99) , 
2, 0.215494, 0, 0, 0.49984,-99) , 
6, -0.524309, 1, 0, 0.505701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465425,-99) , 
5, 0.999048, 0, 0, 0.50393,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0239254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489449,-99) , 
8, 6.25175, 1, 0, 0.506849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461561,-99) , 
3, 1.44854, 0, 0, 0.504566,-99) , 
11, 1.3899, 0, 0, 0.506295,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0302259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4795, 1, 1, 0.533548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495359,-99) , 
9, -951.286, 1, 0, 0.505441,-99) , 
6, 0.0151989, 1, 0, 0.509926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490454,-99) , 
9, -949.398, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448949,-99) , 
12, -1.24637, 0, 0, 0.497966,-99) , 
3, 3.32105, 0, 0, 0.503889,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0255814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.315353, 1, 1, 0.511144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441763,-99) , 
6, -0.488463, 1, 0, 0.498143,-99) , 
3, 2.68412, 0, 0, 0.506169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481921,-99) , 
12, 0.0198687, 0, 0, 0.499926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442216,-99) , 
6, 0.332169, 1, 0, 0.487749,-99) , 
0, 0.502852, 1, 0, 0.503384,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0163505);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472909,-99) , 
8, 6.55406, 1, 0, 0.504069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460758,-99) , 
5, 0.999048, 0, 0, 0.502464,-99) , 
3, 6.28339, 0, 0, 0.503582,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0230228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495944,-99) , 
6, -0.524162, 1, 0, 0.500539,-99) , 
9, 1.39928, 0, 0, 0.502087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484615,-99) , 
10, -0.429253, 1, 0, 0.507173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420307,-99) , 
11, 0.497962, 0, 0, 0.484026,-99) , 
8, 1.62042, 0, 0, 0.500066,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0228335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466198,-99) , 
10, 0.714215, 1, 0, 0.517318,-99) , 
NN(
0, 
0, 
-1, 2.25484, 0, -1, 0.497278,-99) , 
6, -0.608804, 1, 0, 0.50027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521561,-99) , 
NN(
0, 
0, 
-1, 1.44807, 0, -1, 0.470029,-99) , 
11, 2.19322, 0, 0, 0.48267,-99) , 
3, 1.697, 0, 0, 0.497171,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0229871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487293,-99) , 
12, -0.602164, 1, 0, 0.525111,-99) , 
NN(
NN(
0, 
0, 
-1, -1.9399, 1, 1, 0.508595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470566,-99) , 
3, 3.0611, 0, 0, 0.495911,-99) , 
12, -0.0481506, 0, 0, 0.502558,-99) , 
3, 5.92926, 0, 0, 0.503992,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0414089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
11, -2.37267, 1, 0, 0.514119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481438,-99) , 
11, -3.94417, 1, 0, 0.489109,-99) , 
10, -0.140611, 0, 0, 0.505151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466997,-99) , 
12, -0.366302, 0, 0, 0.510659,-99) , 
NN(
0, 
0, 
-1, 1.08662, 0, -1, 0.478953,-99) , 
10, -0.142994, 1, 0, 0.493205,-99) , 
3, 2.67319, 0, 0, 0.500447,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0353339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.184237, 0, 1, 0.53976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478562,-99) , 
10, 1.50455, 0, 0, 0.502656,-99) , 
12, -0.296779, 1, 0, 0.526414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488587,-99) , 
12, -0.60156, 0, 0, 0.504492,-99) , 
NN(
0, 
0, 
-1, -0.80472, 1, -1, 0.481957,-99) , 
3, 1.81145, 0, 0, 0.498982,-99) , 
3, 5.30148, 0, 0, 0.503237,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0280342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498644,-99) , 
5, 0.999932, 1, 0, 0.503037,-99) , 
5, 0.998571, 1, 0, 0.504704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456299,-99) , 
11, -1.5298, 1, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448711,-99) , 
8, 2.4805, 0, 0, 0.487876,-99) , 
10, 1.28566, 1, 0, 0.502059,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0139457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474958,-99) , 
8, 1.62305, 0, 0, 0.524581,-99) , 
NN(
0, 
0, 
-1, 1.06238, 0, 1, 0.502685,-99) , 
7, 0.00905969, 0, 0, 0.505107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47135,-99) , 
7, 0.0237843, 1, 0, 0.504257,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0147552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489208,-99) , 
12, -0.318241, 1, 0, 0.520207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46814,-99) , 
8, 5.58874, 1, 0, 0.498683,-99) , 
3, 5.62874, 0, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454919,-99) , 
5, 0.998571, 0, 0, 0.499363,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0178725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499817,-99) , 
3, 3.47152, 0, 0, 0.505665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480748,-99) , 
3, 4.92074, 0, 0, 0.496104,-99) , 
6, 0.1404, 1, 0, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476601,-99) , 
5, 0.999048, 0, 0, 0.501264,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0317893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.78804, 0, 1, 0.525671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473534,-99) , 
3, 3.56381, 0, 0, 0.499315,-99) , 
6, -0.259284, 1, 0, 0.5067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463354,-99) , 
12, 1.12405, 0, 0, 0.502899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419454,-99) , 
3, 1.82837, 0, 0, 0.465061,-99) , 
6, -0.767469, 1, 0, 0.492343,-99) , 
3, 2.03172, 0, 0, 0.502944,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0166032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488783,-99) , 
7, 0.00161549, 0, 0, 0.499675,-99) , 
7, 0.0113088, 0, 0, 0.50122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45781,-99) , 
7, 0.0237486, 1, 0, 0.500113,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0184143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.964379, 0, 1, 0.521219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494136,-99) , 
3, 3.98853, 0, 0, 0.500343,-99) , 
7, 0.0101891, 0, 0, 0.502112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461532,-99) , 
7, 0.0237755, 1, 0, 0.501092,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0287653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.531062, 1, 1, 0.521435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44909,-99) , 
6, -0.643032, 1, 0, 0.495795,-99) , 
3, 2.20217, 0, 0, 0.50762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
6, 0.200567, 1, 0, 0.49521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448235,-99) , 
3, 3.74977, 0, 0, 0.491488,-99) , 
6, -0.0486206, 1, 0, 0.5005,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0185965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486655,-99) , 
9, -951.286, 0, 0, 0.521867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495038,-99) , 
3, 4.67689, 0, 0, 0.498233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460351,-99) , 
6, 0.80707, 1, 0, 0.497045,-99) , 
5, 0.999524, 1, 0, 0.499061,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0233316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479332,-99) , 
12, -1.53474, 0, 0, 0.517311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487831,-99) , 
3, 2.36735, 0, 0, 0.499491,-99) , 
10, -1.28563, 1, 0, 0.501282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46826,-99) , 
5, 0.999048, 0, 0, 0.499827,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0366631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485443,-99) , 
12, -1.14245, 0, 0, 0.526596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460302,-99) , 
12, -0.0985611, 0, 0, 0.499947,-99) , 
11, -2.67883, 1, 0, 0.505389,-99) , 
NN(
0, 
0, 
-1, 0.772975, 1, -1, 0.48718,-99) , 
8, 4.6178, 1, 0, 0.49928,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0350017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.5362, 0, 1, 0.5225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414278,-99) , 
10, 1.03256, 0, 0, 0.487711,-99) , 
12, -0.285636, 1, 0, 0.510385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479277,-99) , 
5, 0.999982, 0, 0, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445009,-99) , 
5, 0.999619, 0, 0, 0.497936,-99) , 
3, 4.3282, 0, 0, 0.501956,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0247599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49136,-99) , 
12, -1.117, 0, 0, 0.533602,-99) , 
NN(
0, 
0, 
-1, -0.201716, 0, -1, 0.493193,-99) , 
11, -2.68538, 1, 0, 0.500063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435188,-99) , 
12, 0.811432, 1, 0, 0.495552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457791,-99) , 
3, 4.20814, 0, 0, 0.489879,-99) , 
8, 4.20483, 1, 0, 0.495987,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0441081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480654,-99) , 
8, 4.08118, 1, 0, 0.494303,-99) , 
10, 1.12761, 0, 0, 0.499805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
3, 2.01417, 0, 0, 0.508346,-99) , 
NN(
0, 
0, 
-1, 1.30174, 0, -1, 0.474314,-99) , 
10, 0.428593, 1, 0, 0.488866,-99) , 
11, -1.89235, 1, 0, 0.494786,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0381771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473039,-99) , 
12, 0.189409, 0, 0, 0.504587,-99) , 
3, 2.80874, 0, 0, 0.50971,-99) , 
NN(
NN(
0, 
0, 
-1, -0.564135, 1, 1, 0.52799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475775,-99) , 
5, 0.999977, 1, 0, 0.48773,-99) , 
5, 0.999524, 1, 0, 0.492779,-99) , 
6, -0.23866, 1, 0, 0.500875,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0156529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.03195, 0, 1, 0.502592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471399,-99) , 
3, 5.91397, 0, 0, 0.48558,-99) , 
8, 5.48494, 1, 0, 0.499501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450783,-99) , 
5, 0.998571, 0, 0, 0.498181,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0288651);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495712,-99) , 
12, 0.310271, 0, 0, 0.503005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462543,-99) , 
10, 0.999998, 1, 0, 0.489278,-99) , 
11, -1.54582, 1, 0, 0.497576,-99) , 
11, -3.97106, 1, 0, 0.499337,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0232133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499938,-99) , 
5, 0.999524, 1, 0, 0.505148,-99) , 
6, -0.314765, 1, 0, 0.508764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47206,-99) , 
10, 0.714093, 1, 0, 0.497877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447841,-99) , 
13, 2.69029, 1, 0, 0.492979,-99) , 
3, 2.68412, 0, 0, 0.502561,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0289434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483928,-99) , 
8, 7.01475, 1, 0, 0.514562,-99) , 
5, 0.999048, 1, 0, 0.522923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494266,-99) , 
11, -2.88162, 1, 0, 0.500486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432218,-99) , 
11, -3.09976, 0, 0, 0.470637,-99) , 
8, 5.25814, 1, 0, 0.497537,-99) , 
3, 5.30148, 0, 0, 0.501504,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0308649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474985,-99) , 
3, 3.08615, 0, 0, 0.503437,-99) , 
6, -0.465668, 1, 0, 0.505855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47397,-99) , 
4, 2.82071, 1, 0, 0.496701,-99) , 
NN(
0, 
0, 
-1, 2.07093, 0, -1, 0.45984,-99) , 
6, -0.674803, 1, 0, 0.488416,-99) , 
3, 2.34403, 0, 0, 0.500103,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0239633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499514,-99) , 
3, 4.49535, 0, 0, 0.507794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464284,-99) , 
13, 6.00569, 1, 0, 0.494842,-99) , 
9, -946.347, 1, 0, 0.501037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467229,-99) , 
8, 1.31836, 0, 0, 0.500569,-99) , 
NN(
0, 
0, 
-1, 1.57183, 0, -1, 0.448263,-99) , 
6, -0.844966, 1, 0, 0.485064,-99) , 
3, 1.70072, 0, 0, 0.498248,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0304832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492577,-99) , 
11, -2.28844, 1, 0, 0.503798,-99) , 
NN(
0, 
0, 
-1, 4.70776, 0, -1, 0.489566,-99) , 
8, 4.74965, 1, 0, 0.498748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463541,-99) , 
6, -0.909053, 1, 0, 0.497748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418542,-99) , 
12, 1.82167, 0, 0, 0.475176,-99) , 
8, 1.60852, 0, 0, 0.496216,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0592586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.194289, 0, 1, 0.511043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173896,-99) , 
9, -1.99082, 0, 0, 0.494943,-99) , 
9, -6.95896, 1, 0, 0.502643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4597,-99) , 
8, 1.31398, 0, 0, 0.504446,-99) , 
NN(
0, 
0, 
-1, 1.56338, 0, -1, 0.454224,-99) , 
6, -0.844967, 1, 0, 0.489435,-99) , 
3, 1.69938, 0, 0, 0.500309,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0292584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.82424, 1, 1, 0.537285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471669,-99) , 
12, -0.739627, 0, 0, 0.495587,-99) , 
3, 4.44021, 0, 0, 0.49861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482328,-99) , 
10, 0.87917, 0, 0, 0.490661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43388,-99) , 
12, 0.271649, 1, 0, 0.481105,-99) , 
8, 5.0601, 1, 0, 0.493994,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0225814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499411,-99) , 
10, -0.714483, 1, 0, 0.514253,-99) , 
NN(
0, 
0, 
-1, 2.18038, 0, -1, 0.49389,-99) , 
6, -0.714921, 1, 0, 0.49665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458216,-99) , 
6, -0.894972, 1, 0, 0.498093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395269,-99) , 
12, 1.58554, 0, 0, 0.474308,-99) , 
8, 1.61928, 0, 0, 0.494174,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0268438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490664,-99) , 
12, 3.18529, 1, 0, 0.504007,-99) , 
10, -0.428571, 1, 0, 0.51017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491306,-99) , 
11, -3.29796, 1, 0, 0.495754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410111,-99) , 
3, 1.49285, 0, 0, 0.492801,-99) , 
11, 0.391118, 0, 0, 0.494891,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0378971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497576,-99) , 
11, -2.19348, 1, 0, 0.507986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47628,-99) , 
3, 4.83868, 0, 0, 0.493539,-99) , 
12, -0.77499, 0, 0, 0.503298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469883,-99) , 
11, 2.30411, 0, 0, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402758,-99) , 
11, 0.284113, 0, 0, 0.479416,-99) , 
8, 1.6275, 0, 0, 0.500573,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0224054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496117,-99) , 
11, -0.668843, 1, 0, 0.517535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498196,-99) , 
10, 1.63036, 0, 0, 0.500372,-99) , 
12, 1.14518, 0, 0, 0.503213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457846,-99) , 
8, 1.29176, 0, 0, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424919,-99) , 
6, -0.879398, 1, 0, 0.481947,-99) , 
8, 1.61928, 0, 0, 0.500831,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0254419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50947, 1, 1, 0.50742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477436,-99) , 
11, -2.09009, 0, 0, 0.492367,-99) , 
8, 5.78624, 1, 0, 0.504871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421686,-99) , 
11, 1.73128, 0, 0, 0.470057,-99) , 
3, 1.37307, 0, 0, 0.502225,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0244708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09851, 1, 1, 0.514861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490129,-99) , 
3, 4.67067, 0, 0, 0.497316,-99) , 
12, 0.757633, 0, 0, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474474,-99) , 
12, 3.26817, 1, 0, 0.500751,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0124389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2845, 1, 1, 0.50343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477277,-99) , 
12, -2.08216, 0, 0, 0.502099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4377,-99) , 
12, 2.68856, 0, 0, 0.476745,-99) , 
3, 1.37468, 0, 0, 0.500103,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0182271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.5758, 1, 1, 0.504085,-99) , 
NN(
0, 
0, 
-1, -0.743246, 1, -1, 0.487528,-99) , 
3, 1.89279, 0, 0, 0.499914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463627,-99) , 
0, 0.499451, 1, 0, 0.491873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443789,-99) , 
0, 0.496186, 0, 0, 0.475929,-99) , 
6, 0.713012, 1, 0, 0.497709,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0246905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494609,-99) , 
10, -0.428523, 1, 0, 0.501602,-99) , 
NN(
0, 
0, 
-1, 3.73608, 0, -1, 0.48517,-99) , 
12, -0.895707, 0, 0, 0.497517,-99) , 
3, 6.2486, 0, 0, 0.498725,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0163236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999803, 1, 1, 0.503649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451986,-99) , 
5, 0.999705, 0, 0, 0.502198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438065,-99) , 
11, -2.76308, 1, 0, 0.476522,-99) , 
5, 0.999524, 0, 0, 0.500296,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.02396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485833,-99) , 
12, -0.18482, 1, 0, 0.510524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484712,-99) , 
12, -0.236279, 0, 0, 0.497959,-99) , 
3, 4.94546, 0, 0, 0.500436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471538,-99) , 
5, 0.998572, 0, 0, 0.499625,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0182103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
2, 0.0714736, 0, 0, 0.499048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417705,-99) , 
11, 0.780042, 0, 0, 0.475696,-99) , 
8, 1.61995, 0, 0, 0.496373,-99) , 
10, 2.14285, 0, 0, 0.49798,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.01848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455464,-99) , 
4, 8.99736, 1, 0, 0.500303,-99) , 
11, -4.08098, 1, 0, 0.502072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468894,-99) , 
6, -0.917277, 1, 0, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426608,-99) , 
11, 0.841538, 0, 0, 0.476051,-99) , 
8, 1.63589, 0, 0, 0.499059,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0215721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493509,-99) , 
3, 2.04359, 0, 0, 0.506517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490965,-99) , 
12, 2.43422, 0, 0, 0.493435,-99) , 
1, -0.00113265, 1, 0, 0.498628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461721,-99) , 
7, 0.0237843, 1, 0, 0.49769,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0273206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498743,-99) , 
3, 4.50366, 0, 0, 0.521553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487957,-99) , 
8, 4.32054, 1, 0, 0.498785,-99) , 
9, 0.877635, 0, 0, 0.501433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453979,-99) , 
3, 1.18046, 0, 0, 0.490333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420732,-99) , 
6, -0.883434, 1, 0, 0.471751,-99) , 
8, 1.59977, 0, 0, 0.498301,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0266025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498287,-99) , 
10, 0.435071, 0, 0, 0.519364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492012,-99) , 
11, -3.24824, 1, 0, 0.496346,-99) , 
9, 0.877635, 0, 0, 0.498981,-99) , 
NN(
0, 
0, 
-1, 1.82167, 0, -1, 0.46724,-99) , 
8, 1.62042, 0, 0, 0.495465,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0190868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712784, 0, 1, 0.526325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497651,-99) , 
5, 0.999909, 1, 0, 0.500553,-99) , 
5, 0.999524, 1, 0, 0.502374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468339,-99) , 
4, 1.74084, 0, 0, 0.497771,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.462109,-99) , 
13, 4.21372, 1, 0, 0.485289,-99) , 
0, 0.493328, 0, 0, 0.499774,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0681087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427341,-99) , 
3, 1.45793, 0, 0, 0.499567,-99) , 
11, 1.68498, 0, 0, 0.503851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492815,-99) , 
3, 3.96693, 0, 0, 0.530077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224313,-99) , 
9, -1.7098, 0, 0, 0.42307,-99) , 
9, -0.508482, 0, 0, 0.493743,-99) , 
9, -946.347, 1, 0, 0.498917,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0212236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.63324, 1, 1, 0.509418,-99) , 
NN(
0, 
0, 
-1, 3.62238, 0, -1, 0.49404,-99) , 
8, 3.58619, 1, 0, 0.500862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476867,-99) , 
3, 1.23874, 0, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443606,-99) , 
12, 2.06703, 0, 0, 0.482248,-99) , 
8, 1.6275, 0, 0, 0.498766,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0339654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490444,-99) , 
8, 2.7859, 1, 0, 0.495856,-99) , 
10, 1.54132, 0, 0, 0.501241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492356,-99) , 
3, 1.99536, 0, 0, 0.497857,-99) , 
NN(
0, 
0, 
-1, 2.26533, 1, -1, 0.458344,-99) , 
10, 1.28574, 1, 0, 0.486633,-99) , 
11, -1.20998, 1, 0, 0.496808,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0288763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47034,-99) , 
3, 3.14371, 0, 0, 0.503573,-99) , 
6, -0.314829, 1, 0, 0.506619,-99) , 
NN(
NN(
0, 
0, 
-1, 1.56024, 0, 1, 0.531415,-99) , 
NN(
0, 
0, 
-1, 0.554576, 0, -1, 0.481784,-99) , 
10, -1.00001, 1, 0, 0.491039,-99) , 
3, 2.67757, 0, 0, 0.50048,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0252722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.35717, 1, 1, 0.514824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495316,-99) , 
12, 0.411157, 0, 0, 0.501015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447014,-99) , 
10, 1.28575, 1, 0, 0.483937,-99) , 
11, -1.46676, 1, 0, 0.496247,-99) , 
11, 0.52961, 0, 0, 0.498302,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00886648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475783,-99) , 
10, 1.65303, 1, 0, 0.500156,-99) , 
10, 2.14286, 0, 0, 0.501086,-99) , 
NN(
0, 
0, 
-1, 3.64222, 0, -1, 0.480834,-99) , 
2, -0.214216, 0, 0, 0.500036,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0213299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495169,-99) , 
12, -0.744251, 0, 0, 0.502973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418832,-99) , 
11, 0.768243, 0, 0, 0.484772,-99) , 
8, 1.61351, 0, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462378,-99) , 
5, 0.999048, 0, 0, 0.499247,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0271853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485997,-99) , 
3, 3.31549, 0, 0, 0.513487,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.515533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489797,-99) , 
11, -3.63328, 1, 0, 0.493122,-99) , 
11, 0.391118, 0, 0, 0.495913,-99) , 
9, 0.877635, 0, 0, 0.497882,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0187328);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.62991, 0, 1, 0.521151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497303,-99) , 
12, 0.598583, 0, 0, 0.501155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458386,-99) , 
11, -1.05791, 1, 0, 0.48243,-99) , 
10, 1.28572, 1, 0, 0.498115,-99) , 
9, 0.877635, 0, 0, 0.500693,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0278589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.67719, 1, 1, 0.509687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462104,-99) , 
10, -1.28265, 0, 0, 0.505967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443736,-99) , 
3, 1.18824, 0, 0, 0.501692,-99) , 
NN(
0, 
0, 
-1, 2.47796, 0, -1, 0.464245,-99) , 
6, -0.572312, 1, 0, 0.494435,-99) , 
3, 2.67884, 0, 0, 0.501413,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0388098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.47828, 0, 1, 0.515422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474021,-99) , 
12, 0.254685, 1, 0, 0.49807,-99) , 
6, -0.0321694, 1, 0, 0.5041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4539,-99) , 
5, 0.999995, 0, 0, 0.492046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432767,-99) , 
5, 0.999905, 0, 0, 0.487221,-99) , 
3, 2.35161, 0, 0, 0.498524,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0240962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47841,-99) , 
11, -1.62723, 1, 0, 0.512468,-99) , 
NN(
0, 
0, 
-1, 3.15567, 0, -1, 0.494507,-99) , 
6, -0.357082, 1, 0, 0.498472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459045,-99) , 
3, 1.15584, 0, 0, 0.495362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449301,-99) , 
6, -0.738401, 1, 0, 0.486273,-99) , 
3, 2.02246, 0, 0, 0.495306,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0416913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.749806, 1, 1, 0.548751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472219,-99) , 
13, 3.73093, 1, 0, 0.491898,-99) , 
10, -0.0566815, 0, 0, 0.507541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480404,-99) , 
8, 1.56355, 0, 0, 0.522007,-99) , 
NN(
0, 
0, 
-1, 0.762388, 0, -1, 0.489088,-99) , 
10, -0.999941, 1, 0, 0.491868,-99) , 
11, -2.63082, 1, 0, 0.496957,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0278481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.81021, 1, 1, 0.530977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485968,-99) , 
12, -0.0642898, 1, 0, 0.518793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492181,-99) , 
9, -946.347, 0, 0, 0.502057,-99) , 
NN(
0, 
0, 
-1, 0.171909, 1, -1, 0.480705,-99) , 
6, 0.319044, 1, 0, 0.497838,-99) , 
3, 5.62874, 0, 0, 0.499992,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0206049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494168,-99) , 
9, -951.286, 0, 0, 0.527067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498447,-99) , 
12, 1.27615, 0, 0, 0.501401,-99) , 
5, 0.999524, 1, 0, 0.503884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464595,-99) , 
8, 1.42696, 0, 0, 0.494627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449146,-99) , 
6, -0.749392, 1, 0, 0.487681,-99) , 
8, 2.04254, 0, 0, 0.500216,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0324152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483364,-99) , 
12, 0.430716, 1, 0, 0.515469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473374,-99) , 
8, 7.02547, 1, 0, 0.511514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
11, -2.58704, 1, 0, 0.500154,-99) , 
NN(
0, 
0, 
-1, 3.25993, 0, -1, 0.466368,-99) , 
12, -0.981979, 0, 0, 0.495489,-99) , 
3, 3.97489, 0, 0, 0.501649,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0221856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.507833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540206,-99) , 
NN(
0, 
0, 
-1, -3.54286, 1, -1, 0.475483,-99) , 
10, -0.746067, 0, 0, 0.49297,-99) , 
12, -1.31675, 0, 0, 0.505518,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0224961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495481,-99) , 
6, 0.136412, 1, 0, 0.505501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451784,-99) , 
3, 4.92786, 0, 0, 0.477918,-99) , 
5, 0.99966, 0, 0, 0.503673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435939,-99) , 
5, 0.998571, 0, 0, 0.5019,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0753802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.25908, 0, 1, 0.527697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.165324,-99) , 
9, -1.57138, 0, 0, 0.494669,-99) , 
9, -951.286, 1, 0, 0.508203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486297,-99) , 
12, -0.51201, 0, 0, 0.527681,-99) , 
NN(
0, 
0, 
-1, 1.84717, 0, -1, 0.490022,-99) , 
10, -1.28568, 1, 0, 0.494364,-99) , 
3, 3.66155, 0, 0, 0.500423,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0385986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488752,-99) , 
12, -1.50331, 0, 0, 0.531873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457481,-99) , 
12, -0.193202, 0, 0, 0.504475,-99) , 
11, -2.7905, 1, 0, 0.508692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48384,-99) , 
6, 0.545366, 1, 0, 0.494884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46465,-99) , 
3, 4.1477, 0, 0, 0.490585,-99) , 
6, 0.0468428, 1, 0, 0.501429,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0325222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497344,-99) , 
12, -0.961134, 0, 0, 0.539455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492662,-99) , 
10, -1.28563, 1, 0, 0.497323,-99) , 
11, -2.4673, 1, 0, 0.506488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49218,-99) , 
11, -1.70997, 0, 0, 0.49803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465691,-99) , 
0, 0.502852, 1, 0, 0.493923,-99) , 
8, 4.17973, 1, 0, 0.501404,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0339279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.76676, 1, 1, 0.534713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437853,-99) , 
8, 3.21082, 1, 0, 0.503375,-99) , 
3, 3.20088, 0, 0, 0.5092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
12, -0.847455, 1, 0, 0.499592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459321,-99) , 
3, 4.19265, 0, 0, 0.493847,-99) , 
8, 4.19411, 1, 0, 0.503021,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.024817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.16345, 0, 1, 0.513074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452966,-99) , 
3, 3.84145, 0, 0, 0.49766,-99) , 
8, 3.94641, 1, 0, 0.505436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478232,-99) , 
12, 2.88439, 0, 0, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443643,-99) , 
6, -0.894343, 1, 0, 0.485411,-99) , 
8, 1.61055, 0, 0, 0.503246,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0193667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490655,-99) , 
8, 5.12509, 1, 0, 0.501796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444992,-99) , 
11, 0.842546, 0, 0, 0.483646,-99) , 
8, 1.62042, 0, 0, 0.499715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463343,-99) , 
5, 0.999048, 0, 0, 0.498136,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0401037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487247,-99) , 
10, 0.42861, 1, 0, 0.497362,-99) , 
11, -2.05215, 1, 0, 0.503884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474901,-99) , 
11, -3.42911, 1, 0, 0.486246,-99) , 
10, 0.556365, 0, 0, 0.491198,-99) , 
12, -0.15686, 0, 0, 0.498033,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0173749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475955,-99) , 
11, -0.857711, 1, 0, 0.513911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488465,-99) , 
6, 0.0462012, 1, 0, 0.495744,-99) , 
10, 1.57143, 0, 0, 0.49768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45897,-99) , 
5, 0.998571, 0, 0, 0.496629,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0364186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49312,-99) , 
11, -1.1488, 1, 0, 0.521261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490795,-99) , 
11, -2.84452, 1, 0, 0.498987,-99) , 
12, 0.892049, 0, 0, 0.502209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457408,-99) , 
9, -951.286, 0, 0, 0.478892,-99) , 
11, 2.17715, 0, 0, 0.487015,-99) , 
8, 2.03279, 0, 0, 0.498766,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0263351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.58029, 1, 1, 0.505823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451557,-99) , 
10, -1.28336, 0, 0, 0.501629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487989,-99) , 
3, 1.88906, 0, 0, 0.49562,-99) , 
NN(
0, 
0, 
-1, 2.13944, 0, -1, 0.452467,-99) , 
6, -0.650805, 1, 0, 0.487698,-99) , 
3, 2.35677, 0, 0, 0.496995,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0331868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.52886, 1, 1, 0.50774,-99) , 
NN(
0, 
0, 
-1, -0.737932, 1, -1, 0.487142,-99) , 
3, 1.92332, 0, 0, 0.500999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45752,-99) , 
11, -2.09467, 1, 0, 0.50559,-99) , 
NN(
0, 
0, 
-1, -0.658582, 1, -1, 0.477253,-99) , 
10, 0.717586, 0, 0, 0.487292,-99) , 
6, 0.330697, 1, 0, 0.497284,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0127234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489602,-99) , 
4, 4.30692, 1, 0, 0.508683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485929,-99) , 
0, 0.501401, 1, 0, 0.497545,-99) , 
2, -0.0706935, 1, 0, 0.499571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474722,-99) , 
0, 0.505709, 1, 0, 0.498493,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0156423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481173,-99) , 
8, 5.89589, 1, 0, 0.510951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496072,-99) , 
11, 1.66276, 0, 0, 0.497585,-99) , 
2, -0.0714203, 1, 0, 0.500065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464257,-99) , 
7, 0.0237791, 1, 0, 0.499161,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0229755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.536016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494742,-99) , 
10, -0.134981, 0, 0, 0.522461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497545,-99) , 
3, 2.46265, 0, 0, 0.505439,-99) , 
NN(
0, 
0, 
-1, 3.7318, 0, -1, 0.489412,-99) , 
6, -0.246258, 1, 0, 0.497954,-99) , 
3, 5.61275, 0, 0, 0.500518,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0236142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459317,-99) , 
8, 3.75399, 1, 0, 0.489493,-99) , 
0, 0.491696, 0, 0, 0.50557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492094,-99) , 
10, -0.142836, 1, 0, 0.498043,-99) , 
NN(
0, 
0, 
-1, -3.34453, 1, -1, 0.484848,-99) , 
12, -0.977222, 0, 0, 0.494944,-99) , 
0, 0.497138, 1, 0, 0.499334,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0239892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499675,-99) , 
11, -0.796111, 1, 0, 0.518431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494132,-99) , 
3, 4.83009, 0, 0, 0.500104,-99) , 
12, 1.11515, 0, 0, 0.503269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511853,-99) , 
NN(
0, 
0, 
-1, -0.936439, 1, -1, 0.462066,-99) , 
8, 1.44662, 0, 0, 0.482484,-99) , 
8, 1.61055, 0, 0, 0.501022,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0208296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49014,-99) , 
12, -0.367728, 1, 0, 0.523495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463852,-99) , 
8, 5.7002, 1, 0, 0.502067,-99) , 
3, 5.69194, 0, 0, 0.503556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456598,-99) , 
8, 7.25014, 1, 0, 0.502365,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0215996);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498918,-99) , 
10, 0.146987, 0, 0, 0.515174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473056,-99) , 
13, 4.49742, 1, 0, 0.499112,-99) , 
3, 4.94646, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463778,-99) , 
5, 0.998572, 0, 0, 0.501238,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0356714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84614, 1, 1, 0.519572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454668,-99) , 
3, 5.51434, 0, 0, 0.478769,-99) , 
10, -0.423019, 0, 0, 0.509057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489341,-99) , 
11, -2.57787, 1, 0, 0.495671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461932,-99) , 
8, 4.31875, 1, 0, 0.492754,-99) , 
3, 4.30819, 0, 0, 0.498119,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0152153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500675, 0, 1, 0.517739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497664,-99) , 
11, 1.65134, 0, 0, 0.499228,-99) , 
2, -0.0715091, 1, 0, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.475167,-99) , 
0, 0.491424, 0, 0, 0.500408,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0103944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
2, -0.214929, 1, 0, 0.500598,-99) , 
NN(
0, 
0, 
-1, 2.00171, 0, -1, 0.486274,-99) , 
4, 4.6823, 1, 0, 0.497902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456374,-99) , 
8, 7.21369, 1, 0, 0.496806,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0233815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439792,-99) , 
3, 1.37141, 0, 0, 0.5158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497825,-99) , 
3, 5.30806, 0, 0, 0.50212,-99) , 
7, 0.00679477, 0, 0, 0.504748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470406,-99) , 
7, 0.0237843, 1, 0, 0.503888,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0385706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486199,-99) , 
12, 1.09469, 0, 0, 0.501988,-99) , 
11, -2.04132, 1, 0, 0.509484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494838,-99) , 
11, -2.54304, 0, 0, 0.50527,-99) , 
NN(
0, 
0, 
-1, 2.912, 1, -1, 0.469914,-99) , 
3, 3.12213, 0, 0, 0.497049,-99) , 
12, -0.15686, 0, 0, 0.503736,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0661613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493616,-99) , 
3, 1.38436, 0, 0, 0.533851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468667,-99) , 
13, 4.89151, 1, 0, 0.495936,-99) , 
11, -2.99865, 0, 0, 0.513779,-99) , 
NN(
NN(
0, 
0, 
-1, 0.666011, 0, 1, 0.506992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358797,-99) , 
9, -0.895786, 0, 0, 0.490682,-99) , 
9, -951.286, 1, 0, 0.498969,-99) , 
10, -0.714225, 1, 0, 0.502208,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0210985);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491378,-99) , 
10, -0.714215, 1, 0, 0.494727,-99) , 
6, 0.80818, 0, 0, 0.496105,-99) , 
11, -4.0107, 1, 0, 0.497907,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0152142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496498,-99) , 
12, 0.77886, 0, 0, 0.500958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466048,-99) , 
4, 7.42031, 1, 0, 0.499759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460437,-99) , 
4, 9.14738, 1, 0, 0.498696,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0304742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492591,-99) , 
9, -951.286, 0, 0, 0.515575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488076,-99) , 
5, 0.999996, 0, 0, 0.499219,-99) , 
5, 0.999909, 1, 0, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471059,-99) , 
5, 0.999048, 0, 0, 0.500498,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.018974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.70814, 0, 1, 0.50412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472832,-99) , 
8, 7.11181, 1, 0, 0.503017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459116,-99) , 
8, 1.29759, 0, 0, 0.503241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420857,-99) , 
6, -0.876401, 1, 0, 0.482354,-99) , 
8, 1.6275, 0, 0, 0.500654,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0306092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496509,-99) , 
11, -2.00411, 0, 0, 0.502749,-99) , 
8, 3.95193, 1, 0, 0.505955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485784,-99) , 
10, -0.428548, 1, 0, 0.494022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44093,-99) , 
12, -0.912906, 0, 0, 0.488338,-99) , 
3, 3.33848, 0, 0, 0.497021,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0245859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.274242, 1, 1, 0.512767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474565,-99) , 
13, 3.48164, 1, 0, 0.5004,-99) , 
3, 3.97278, 0, 0, 0.505232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511845,-99) , 
NN(
0, 
0, 
-1, -946.347, 0, -1, 0.483136,-99) , 
11, -2.9819, 1, 0, 0.489475,-99) , 
0, 0.493328, 0, 0, 0.502836,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0373955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477056,-99) , 
10, -1.24392, 0, 0, 0.52351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495626,-99) , 
6, -0.528863, 1, 0, 0.499117,-99) , 
11, -3.58069, 1, 0, 0.502419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477974,-99) , 
13, 1.29888, 0, 0, 0.501275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444404,-99) , 
9, -949.006, 0, 0, 0.472853,-99) , 
11, 0.882522, 0, 0, 0.482561,-99) , 
3, 2.0368, 0, 0, 0.497199,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0148729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.07223, 1, 1, 0.504093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462319,-99) , 
11, 1.0802, 0, 0, 0.499101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436004,-99) , 
6, -0.881612, 1, 0, 0.481996,-99) , 
8, 1.60852, 0, 0, 0.501685,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0152426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498367,-99) , 
3, 3.48056, 0, 0, 0.504307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474271,-99) , 
6, 0.805629, 1, 0, 0.503192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466332,-99) , 
5, 0.998571, 0, 0, 0.502193,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0130809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101893, 0, 1, 0.503026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471187,-99) , 
3, 6.06108, 0, 0, 0.486626,-99) , 
8, 5.90969, 1, 0, 0.500731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463998,-99) , 
7, 0.0237755, 1, 0, 0.499805,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0242505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50655, 0, 1, 0.504983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469498,-99) , 
10, 0.716098, 1, 0, 0.490506,-99) , 
11, -1.47277, 1, 0, 0.500607,-99) , 
NN(
NN(
0, 
0, 
-1, -0.96325, 0, 1, 0.505008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427853,-99) , 
6, -0.92282, 1, 0, 0.476677,-99) , 
3, 1.37895, 0, 0, 0.498681,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0270583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.53082, 1, 1, 0.522118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495708,-99) , 
6, -0.350662, 1, 0, 0.500468,-99) , 
2, 0.0713036, 0, 0, 0.50451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481742,-99) , 
10, -0.999919, 1, 0, 0.490974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44354,-99) , 
3, 1.15874, 0, 0, 0.486292,-99) , 
3, 2.03102, 0, 0, 0.499748,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0329036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6188, 1, 1, 0.514598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490298,-99) , 
8, 5.2985, 1, 0, 0.494977,-99) , 
6, 0.465996, 1, 0, 0.5071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487016,-99) , 
10, -0.714254, 1, 0, 0.495524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431303,-99) , 
12, -1.02827, 0, 0, 0.491068,-99) , 
3, 3.01115, 0, 0, 0.49985,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0261752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.25151, 1, 1, 0.519937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489436,-99) , 
12, -0.297031, 0, 0, 0.500034,-99) , 
3, 5.44408, 0, 0, 0.502953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471151,-99) , 
6, -0.923186, 1, 0, 0.494156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431263,-99) , 
11, 0.621514, 0, 0, 0.47683,-99) , 
8, 1.59172, 0, 0, 0.500274,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0140352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497393,-99) , 
3, 4.67678, 0, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460301,-99) , 
6, 0.805629, 1, 0, 0.499127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467317,-99) , 
5, 0.999048, 0, 0, 0.497756,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0149155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00792067, 0, 1, 0.506651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487247,-99) , 
1, 0.00113194, 1, 0, 0.49648,-99) , 
0, 0.49809, 0, 0, 0.501656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464792,-99) , 
7, 0.0237755, 1, 0, 0.500729,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0163911);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495046,-99) , 
2, 0.21582, 0, 0, 0.496333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442474,-99) , 
5, 0.99932, 0, 0, 0.494702,-99) , 
5, 0.998571, 1, 0, 0.49591,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0131728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497262,-99) , 
11, -1.31849, 1, 0, 0.505508,-99) , 
NN(
0, 
0, 
-1, 1.7913, 0, -1, 0.496501,-99) , 
12, 0.664444, 0, 0, 0.499518,-99) , 
NN(
0, 
0, 
-1, 3.64228, 0, -1, 0.479089,-99) , 
2, -0.214311, 0, 0, 0.498461,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0203423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495099,-99) , 
13, 6.35476, 1, 0, 0.529368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48188,-99) , 
13, 7.23716, 1, 0, 0.516184,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490184,-99) , 
12, -0.86266, 0, 0, 0.50203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468226,-99) , 
4, 7.85331, 1, 0, 0.500439,-99) , 
3, 5.62867, 0, 0, 0.502023,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0122828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.07223, 1, 1, 0.503464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428971,-99) , 
11, 0.349227, 0, 0, 0.487251,-99) , 
8, 1.6275, 0, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468188,-99) , 
0, 0.489519, 0, 0, 0.500584,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0204272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473959,-99) , 
3, 1.25616, 0, 0, 0.503041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451384,-99) , 
5, 0.999429, 0, 0, 0.501304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476422,-99) , 
0, 0.498725, 1, 0, 0.492342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450468,-99) , 
0, 0.494281, 0, 0, 0.484658,-99) , 
6, 0.520797, 1, 0, 0.498297,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0181367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494596,-99) , 
10, -1.57108, 1, 0, 0.496599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461474,-99) , 
3, 1.25219, 0, 0, 0.494975,-99) , 
3, 6.28339, 0, 0, 0.496249,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0276484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494095,-99) , 
11, -2.17716, 1, 0, 0.528294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475797,-99) , 
12, 0.561961, 1, 0, 0.500144,-99) , 
8, 3.36257, 1, 0, 0.503674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491738,-99) , 
8, 2.09482, 0, 0, 0.499965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448471,-99) , 
11, -1.56468, 1, 0, 0.477868,-99) , 
12, 1.20708, 0, 0, 0.489018,-99) , 
3, 2.67757, 0, 0, 0.497931,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0168742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.051049, 1, 1, 0.514088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495652,-99) , 
11, -3.13021, 1, 0, 0.498979,-99) , 
0, 0.5019, 0, 0, 0.502129,-99) , 
NN(
0, 
0, 
-1, -2.09906, 1, -1, 0.477198,-99) , 
2, -0.214216, 0, 0, 0.500861,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0107149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.19588, 1, 1, 0.519895,-99) , 
NN(
0, 
0, 
-1, 1.38956, 0, -1, 0.497157,-99) , 
3, 5.59538, 0, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461676,-99) , 
5, 0.998571, 0, 0, 0.498283,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0334046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489709,-99) , 
11, -1.6401, 1, 0, 0.518957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450787,-99) , 
3, 3.51536, 0, 0, 0.497101,-99) , 
8, 3.41568, 1, 0, 0.501897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469656,-99) , 
5, 0.999995, 0, 0, 0.494726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445766,-99) , 
5, 0.999905, 0, 0, 0.490893,-99) , 
3, 2.35161, 0, 0, 0.498258,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0185977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.28729, 1, 1, 0.519269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496078,-99) , 
8, 3.47258, 1, 0, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445608,-99) , 
3, 1.47829, 0, 0, 0.499741,-99) , 
11, 0.504835, 0, 0, 0.50195,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0287406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.64182, 1, 1, 0.527141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477191,-99) , 
12, 0.452533, 0, 0, 0.495401,-99) , 
3, 3.17453, 0, 0, 0.499726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47291,-99) , 
3, 4.41754, 0, 0, 0.494463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444813,-99) , 
12, 0.934672, 1, 0, 0.491227,-99) , 
6, -0.0484538, 1, 0, 0.495992,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0241393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492878,-99) , 
10, -0.356713, 0, 0, 0.509835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492109,-99) , 
10, -1.28565, 1, 0, 0.494294,-99) , 
11, -3.04487, 1, 0, 0.497448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46653,-99) , 
8, 7.21016, 1, 0, 0.496621,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.014223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541679,-99) , 
NN(
0, 
0, 
-1, -0.904884, 0, -1, 0.495603,-99) , 
11, -4.06673, 1, 0, 0.497721,-99) , 
11, 1.61332, 0, 0, 0.499222,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0114999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.50505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478842,-99) , 
5, 0.999048, 0, 0, 0.503912,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0092924);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466273,-99) , 
3, 1.52664, 0, 0, 0.499296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456245,-99) , 
6, -0.904826, 0, 0, 0.497574,-99) , 
11, 1.63127, 0, 0, 0.498769,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0223242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481471,-99) , 
3, 3.325, 0, 0, 0.511814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495048,-99) , 
12, 1.50676, 0, 0, 0.499389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459556,-99) , 
10, 2.14285, 1, 0, 0.497832,-99) , 
9, 0.877635, 0, 0, 0.499422,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0130712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525329,-99) , 
NN(
NN(
0, 
0, 
-1, 1.12842, 0, 1, 0.503793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43619,-99) , 
6, -0.784479, 1, 0, 0.493263,-99) , 
3, 1.77684, 0, 0, 0.501626,-99) , 
3, 6.26494, 0, 0, 0.50248,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0210493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46286,-99) , 
8, 5.41713, 1, 0, 0.500804,-99) , 
3, 5.41496, 0, 0, 0.502498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482294,-99) , 
12, -0.444121, 1, 0, 0.510013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45502,-99) , 
11, -3.05778, 0, 0, 0.488235,-99) , 
8, 5.90941, 1, 0, 0.500522,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0177832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461617,-99) , 
12, 1.59677, 1, 0, 0.519123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497064,-99) , 
12, 1.06902, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478627,-99) , 
12, 3.13795, 1, 0, 0.498745,-99) , 
10, 1.85714, 0, 0, 0.50019,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0266622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
11, -1.43174, 1, 0, 0.555664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430864,-99) , 
10, 2.1838, 1, 0, 0.47439,-99) , 
11, -0.993533, 1, 0, 0.514948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471025,-99) , 
3, 1.33709, 0, 0, 0.501651,-99) , 
NN(
0, 
0, 
-1, -0.0747794, 1, -1, 0.486644,-99) , 
8, 5.03652, 1, 0, 0.497727,-99) , 
10, 1.57146, 0, 0, 0.499614,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.028535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498285,-99) , 
11, -3.35962, 1, 0, 0.505051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470198,-99) , 
10, -1.28298, 0, 0, 0.502357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481985,-99) , 
10, -0.142831, 1, 0, 0.495325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450943,-99) , 
12, -0.476836, 0, 0, 0.490185,-99) , 
3, 2.67128, 0, 0, 0.497577,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0211566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456938,-99) , 
12, -1.88387, 0, 0, 0.500442,-99) , 
11, -4.07628, 1, 0, 0.50311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523701,-99) , 
NN(
0, 
0, 
-1, 0.666216, 0, -1, 0.479012,-99) , 
10, -1.28588, 1, 0, 0.485696,-99) , 
3, 2.03422, 0, 0, 0.498566,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.030948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486994,-99) , 
10, -0.138312, 0, 0, 0.502394,-99) , 
6, 0.273175, 1, 0, 0.506382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48975,-99) , 
11, -1.60174, 1, 0, 0.498422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446879,-99) , 
11, -3.39152, 1, 0, 0.471928,-99) , 
12, -0.795766, 0, 0, 0.493184,-99) , 
3, 4.31244, 0, 0, 0.497483,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0165183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463916,-99) , 
12, -1.71364, 0, 0, 0.49833,-99) , 
11, -4.1019, 1, 0, 0.500447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470215,-99) , 
4, 2.57609, 1, 0, 0.502069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427727,-99) , 
6, -0.881136, 1, 0, 0.482503,-99) , 
8, 1.61437, 0, 0, 0.498492,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.025964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495558,-99) , 
11, 1.74486, 0, 0, 0.522862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486993,-99) , 
9, -951.286, 1, 0, 0.510805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550106,-99) , 
NN(
0, 
0, 
-1, 1.5083, 0, -1, 0.490777,-99) , 
11, -4.09871, 1, 0, 0.493564,-99) , 
11, 0.0496582, 0, 0, 0.496131,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0161289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499793,-99) , 
8, 3.07332, 1, 0, 0.504193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47064,-99) , 
12, 0.588228, 0, 0, 0.493088,-99) , 
3, 2.45596, 0, 0, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.467334,-99) , 
8, 6.77401, 1, 0, 0.498421,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0285098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494205,-99) , 
11, -2.07727, 1, 0, 0.529623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458985,-99) , 
3, 3.36887, 0, 0, 0.501759,-99) , 
8, 3.34962, 1, 0, 0.50522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49066,-99) , 
11, -0.918837, 1, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, -1.20368, 1, -1, 0.457577,-99) , 
12, -0.179503, 0, 0, 0.492869,-99) , 
3, 2.672, 0, 0, 0.500359,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0221605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475088,-99) , 
11, -2.37788, 1, 0, 0.512518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47781,-99) , 
12, -0.821152, 0, 0, 0.495315,-99) , 
3, 4.82505, 0, 0, 0.49796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441024,-99) , 
8, 6.22505, 1, 0, 0.467351,-99) , 
3, 6.37519, 0, 0, 0.480894,-99) , 
6, 0.713013, 1, 0, 0.496389,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0238498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442155,-99) , 
10, 0.750616, 0, 0, 0.496881,-99) , 
12, -1.04968, 1, 0, 0.514465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496745,-99) , 
11, -2.74402, 1, 0, 0.500424,-99) , 
NN(
0, 
0, 
-1, 5.62762, 1, -1, 0.486376,-99) , 
12, -0.935125, 0, 0, 0.497274,-99) , 
3, 5.59625, 0, 0, 0.499114,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0349254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.006, 1, 1, 0.559493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476785,-99) , 
12, 1.16114, 0, 0, 0.497723,-99) , 
11, -1.426, 1, 0, 0.506732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483895,-99) , 
11, -3.46192, 1, 0, 0.490039,-99) , 
10, 1.04177, 0, 0, 0.493905,-99) , 
12, 0.443841, 0, 0, 0.498798,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0226897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488542,-99) , 
3, 3.00384, 0, 0, 0.499489,-99) , 
7, 0.0113085, 0, 0, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464816,-99) , 
7, 0.0237486, 1, 0, 0.500731,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.033054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97125, 0, 1, 0.520375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490753,-99) , 
8, 2.80114, 1, 0, 0.498783,-99) , 
11, -1.81357, 0, 0, 0.505662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495982,-99) , 
10, 1.24473, 0, 0, 0.513411,-99) , 
NN(
0, 
0, 
-1, 0.519705, 1, -1, 0.484984,-99) , 
11, -1.73383, 1, 0, 0.496485,-99) , 
10, 0.428593, 1, 0, 0.501997,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.019623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49516,-99) , 
6, 0.0920136, 1, 0, 0.502599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427509,-99) , 
11, 0.985943, 0, 0, 0.483507,-99) , 
6, -0.904842, 0, 0, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476988,-99) , 
9, 1.39928, 1, 0, 0.499604,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0312626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.49678, 1, 1, 0.530763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454826,-99) , 
3, 3.69298, 0, 0, 0.501012,-99) , 
8, 3.70918, 1, 0, 0.507326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487547,-99) , 
3, 1.93979, 0, 0, 0.495432,-99) , 
NN(
0, 
0, 
-1, 0.434045, 0, -1, 0.467701,-99) , 
6, -0.571181, 1, 0, 0.490026,-99) , 
3, 2.68458, 0, 0, 0.500557,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0197892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48095,-99) , 
12, -0.0587237, 1, 0, 0.507959,-99) , 
NN(
0, 
0, 
-1, 4.64418, 1, -1, 0.493955,-99) , 
3, 4.6472, 0, 0, 0.497615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468177,-99) , 
4, 9.03751, 1, 0, 0.496789,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.021262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30026, 1, 1, 0.509156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478624,-99) , 
3, 2.93887, 0, 0, 0.497606,-99) , 
12, 0.734552, 0, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469464,-99) , 
6, 0.805629, 1, 0, 0.499887,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0186735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469642,-99) , 
12, -1.63575, 0, 0, 0.499788,-99) , 
11, -4.09156, 1, 0, 0.501824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478761,-99) , 
13, 1.27226, 0, 0, 0.507092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437059,-99) , 
6, -0.894973, 1, 0, 0.483837,-99) , 
8, 1.61702, 0, 0, 0.49984,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.031184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495912,-99) , 
12, -0.540021, 0, 0, 0.522669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47312,-99) , 
12, 0.551865, 0, 0, 0.494167,-99) , 
11, -2.16705, 1, 0, 0.502394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48899,-99) , 
12, -1.7204, 1, 0, 0.494824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462569,-99) , 
3, 4.18015, 0, 0, 0.490161,-99) , 
8, 4.17733, 1, 0, 0.497448,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0196006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494586,-99) , 
11, -2.93865, 1, 0, 0.499135,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.489328,-99) , 
6, 0.141855, 1, 0, 0.495651,-99) , 
10, 2.14288, 0, 0, 0.496835,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.018625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498571,-99) , 
6, -0.632917, 1, 0, 0.503053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471601,-99) , 
3, 1.48381, 0, 0, 0.501566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426827,-99) , 
11, 1.35995, 0, 0, 0.481878,-99) , 
6, -0.904831, 0, 0, 0.500062,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0238782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.34253, 1, 1, 0.515929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498139,-99) , 
5, 0.999524, 1, 0, 0.501889,-99) , 
6, -0.321739, 1, 0, 0.506383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477758,-99) , 
8, 1.40526, 0, 0, 0.503926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43156,-99) , 
6, -0.800674, 1, 0, 0.492738,-99) , 
3, 1.70239, 0, 0, 0.504015,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0229542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
11, -2.34246, 1, 0, 0.505662,-99) , 
3, 6.43847, 0, 0, 0.506774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473626,-99) , 
8, 1.45619, 0, 0, 0.496567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439063,-99) , 
6, -0.800675, 1, 0, 0.487804,-99) , 
3, 1.697, 0, 0, 0.503506,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0179607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
8, 3.92383, 1, 0, 0.504704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424164,-99) , 
6, -0.883309, 1, 0, 0.48428,-99) , 
8, 1.59761, 0, 0, 0.502511,-99) , 
5, 0.998572, 1, 0, 0.503739,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0293096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35341, 1, 1, 0.5113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477701,-99) , 
10, -1.28298, 0, 0, 0.508627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48427,-99) , 
8, 1.54954, 0, 0, 0.520083,-99) , 
NN(
0, 
0, 
-1, 0.852813, 0, -1, 0.485044,-99) , 
10, -0.714254, 1, 0, 0.494631,-99) , 
3, 2.3528, 0, 0, 0.50399,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0193415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467206,-99) , 
12, 2.82969, 1, 0, 0.498383,-99) , 
11, 2.13686, 0, 0, 0.516727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478732,-99) , 
0, 0.504757, 1, 0, 0.502269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449744,-99) , 
6, -0.904973, 0, 0, 0.500496,-99) , 
12, 2.39538, 0, 0, 0.502113,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0238244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479438,-99) , 
6, -0.905877, 0, 0, 0.505085,-99) , 
11, 2.21121, 0, 0, 0.514948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495448,-99) , 
11, -3.21556, 1, 0, 0.500727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466477,-99) , 
11, -2.99033, 0, 0, 0.486997,-99) , 
8, 5.21179, 1, 0, 0.496914,-99) , 
11, 0.181489, 0, 0, 0.499389,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0163879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479143,-99) , 
11, -2.68624, 1, 0, 0.521668,-99) , 
NN(
0, 
0, 
-1, 1.1644, 0, -1, 0.498496,-99) , 
3, 5.28506, 0, 0, 0.50041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453167,-99) , 
11, -2.38781, 0, 0, 0.478421,-99) , 
8, 6.35998, 1, 0, 0.498521,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0150625);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.1867, 0, 1, 0.505289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494675,-99) , 
8, 1.99438, 0, 0, 0.500231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448809,-99) , 
10, 1.85714, 1, 0, 0.493259,-99) , 
11, -0.803304, 1, 0, 0.502444,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0142983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494594,-99) , 
3, 2.45288, 0, 0, 0.501292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479026,-99) , 
8, 6.78069, 1, 0, 0.500118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461426,-99) , 
8, 2.87243, 1, 0, 0.480676,-99) , 
0, 0.504757, 1, 0, 0.498691,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0171865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486484,-99) , 
3, 6.37686, 0, 0, 0.500149,-99) , 
8, 6.622, 1, 0, 0.515186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473763,-99) , 
8, 1.39509, 0, 0, 0.501937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438688,-99) , 
6, 0.685777, 1, 0, 0.499677,-99) , 
3, 5.62918, 0, 0, 0.501269,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0232956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495382,-99) , 
11, 2.40901, 0, 0, 0.503746,-99) , 
11, -1.25897, 1, 0, 0.512436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545177,-99) , 
NN(
0, 
0, 
-1, -2.13094, 1, -1, 0.493482,-99) , 
11, -1.10798, 0, 0, 0.495547,-99) , 
12, 0.77886, 0, 0, 0.500795,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0191147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495675,-99) , 
10, 0.428677, 1, 0, 0.524815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476571,-99) , 
10, -0.136226, 0, 0, 0.496404,-99) , 
8, 2.91182, 1, 0, 0.509209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499497,-99) , 
6, -0.379612, 1, 0, 0.502688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474635,-99) , 
12, 1.35466, 0, 0, 0.490307,-99) , 
3, 2.35161, 0, 0, 0.498728,-99) , 
0, 0.5019, 0, 0, 0.500918,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0307895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28564, 1, 1, 0.510586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472649,-99) , 
12, -1.60634, 0, 0, 0.508417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490665,-99) , 
11, -2.52431, 0, 0, 0.505501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401489,-99) , 
10, 1.08323, 0, 0, 0.481133,-99) , 
12, -0.1839, 1, 0, 0.497941,-99) , 
6, 0.139778, 1, 0, 0.504635,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0186832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445077,-99) , 
5, 0.99932, 0, 0, 0.502363,-99) , 
5, 0.998571, 1, 0, 0.503543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481676,-99) , 
3, 3.3305, 0, 0, 0.495252,-99) , 
NN(
0, 
0, 
-1, 0.143113, 1, -1, 0.46876,-99) , 
2, 0.0715353, 1, 0, 0.486952,-99) , 
4, 4.70718, 1, 0, 0.500454,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0273678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
13, 5.46677, 1, 0, 0.527207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49617,-99) , 
8, 5.54436, 0, 0, 0.500552,-99) , 
11, -3.64186, 1, 0, 0.503497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460022,-99) , 
8, 1.26565, 0, 0, 0.496658,-99) , 
NN(
0, 
0, 
-1, 1.67298, 0, -1, 0.446558,-99) , 
11, 0.148084, 0, 0, 0.479612,-99) , 
3, 1.71731, 0, 0, 0.499256,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0313447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498287,-99) , 
11, -2.15609, 1, 0, 0.506157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475006,-99) , 
12, -1.48498, 0, 0, 0.50382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488065,-99) , 
11, -2.46034, 0, 0, 0.500998,-99) , 
NN(
0, 
0, 
-1, 1.33683, 0, -1, 0.455303,-99) , 
12, -0.127373, 1, 0, 0.488358,-99) , 
8, 4.62939, 1, 0, 0.498731,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0177173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.064666, 1, 1, 0.510043,-99) , 
NN(
0, 
0, 
-1, 0.214219, 1, -1, 0.495622,-99) , 
4, 3.19205, 1, 0, 0.505267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477167,-99) , 
6, 0.807616, 1, 0, 0.503944,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.013843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493228,-99) , 
7, 0.00452932, 1, 0, 0.520981,-99) , 
NN(
0, 
0, 
-1, 0.010192, 0, 1, 0.503079,-99) , 
11, 0.243165, 0, 0, 0.505391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469293,-99) , 
7, 0.0237843, 1, 0, 0.504489,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0285568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491085,-99) , 
3, 4.06788, 0, 0, 0.503302,-99) , 
6, -0.314829, 1, 0, 0.505667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477189,-99) , 
3, 1.56427, 0, 0, 0.497743,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.457886,-99) , 
12, -0.307828, 0, 0, 0.492142,-99) , 
3, 2.67699, 0, 0, 0.500371,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0232071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47314,-99) , 
8, 5.48861, 1, 0, 0.521546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493889,-99) , 
10, -0.238007, 1, 0, 0.498284,-99) , 
11, -3.53739, 1, 0, 0.500454,-99) , 
10, -1.85705, 1, 0, 0.501824,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0166642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492945,-99) , 
8, 4.62233, 1, 0, 0.502078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456848,-99) , 
5, 0.99932, 0, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462416,-99) , 
5, 0.998572, 0, 0, 0.499678,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0128233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.60093, 1, 1, 0.502233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478742,-99) , 
11, -2.29762, 0, 0, 0.490287,-99) , 
8, 5.48494, 1, 0, 0.500097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467526,-99) , 
5, 0.999048, 0, 0, 0.4987,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0285347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493865,-99) , 
11, 2.35886, 0, 0, 0.501185,-99) , 
11, -1.30051, 1, 0, 0.507796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490186,-99) , 
11, -4.0363, 1, 0, 0.493082,-99) , 
10, 1.26182, 0, 0, 0.495868,-99) , 
12, 0.734552, 0, 0, 0.499665,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0265695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26254, 0, 1, 0.520882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487769,-99) , 
9, -951.286, 1, 0, 0.500085,-99) , 
13, 4.20346, 1, 0, 0.513562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472628,-99) , 
10, -1.28445, 0, 0, 0.505277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48772,-99) , 
10, -1.57137, 1, 0, 0.492949,-99) , 
3, 2.67446, 0, 0, 0.5006,-99) , 
0, 0.5019, 0, 0, 0.503329,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0234425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499019,-99) , 
10, 1.23113, 1, 0, 0.507563,-99) , 
10, 0.142905, 1, 0, 0.519255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49002,-99) , 
3, 2.46417, 0, 0, 0.503879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484882,-99) , 
11, -2.77636, 1, 0, 0.492155,-99) , 
0, 0.499043, 1, 0, 0.499006,-99) , 
11, 0.462236, 0, 0, 0.501376,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0247779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496077,-99) , 
13, 1.63622, 1, 0, 0.525796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491003,-99) , 
9, -951.286, 1, 0, 0.514307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491598,-99) , 
9, -951.286, 1, 0, 0.505886,-99) , 
NN(
0, 
0, 
-1, -1.17849, 0, -1, 0.492826,-99) , 
3, 4.08364, 0, 0, 0.498343,-99) , 
11, 0.184117, 0, 0, 0.500539,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0181461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471439,-99) , 
6, -0.9277, 1, 0, 0.50533,-99) , 
8, 1.52935, 0, 0, 0.51659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498054,-99) , 
6, -0.714295, 1, 0, 0.500556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45344,-99) , 
0, 0.497138, 1, 0, 0.477875,-99) , 
8, 1.8265, 0, 0, 0.498793,-99) , 
11, 0.462236, 0, 0, 0.500849,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0193228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496556,-99) , 
8, 3.17102, 1, 0, 0.501574,-99) , 
11, -4.1019, 1, 0, 0.503458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485423,-99) , 
10, 0.156886, 1, 0, 0.499623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446433,-99) , 
12, 2.11231, 0, 0, 0.48169,-99) , 
8, 1.61169, 0, 0, 0.501122,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0165762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496439,-99) , 
12, -0.47204, 1, 0, 0.519422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48251,-99) , 
6, 0.601911, 1, 0, 0.503072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471471,-99) , 
3, 1.21939, 0, 0, 0.501803,-99) , 
3, 5.95587, 0, 0, 0.5029,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0110382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504776,-99) , 
NN(
0, 
0, 
-1, 3.68357, 0, -1, 0.480737,-99) , 
2, 0.214628, 1, 0, 0.503545,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0236976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467055,-99) , 
10, 0.456124, 0, 0, 0.502746,-99) , 
10, -0.142503, 1, 0, 0.510956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491459,-99) , 
11, -2.19399, 1, 0, 0.499503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44012,-99) , 
8, 1.76299, 0, 0, 0.49651,-99) , 
12, 1.51669, 0, 0, 0.499227,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0162258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498325,-99) , 
3, 6.44015, 0, 0, 0.50499,-99) , 
8, 5.41557, 1, 0, 0.511284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497992,-99) , 
10, -1.28569, 1, 0, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468441,-99) , 
12, -1.71534, 0, 0, 0.498709,-99) , 
3, 4.95484, 0, 0, 0.501394,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0136212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493188,-99) , 
13, 7.04634, 1, 0, 0.519946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499433,-99) , 
11, -3.68554, 1, 0, 0.501439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435975,-99) , 
11, -3.05778, 0, 0, 0.481234,-99) , 
8, 5.88207, 1, 0, 0.499723,-99) , 
3, 5.93886, 0, 0, 0.501026,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0163152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490694,-99) , 
12, -0.89488, 0, 0, 0.50753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497008,-99) , 
5, 0.999796, 1, 0, 0.49922,-99) , 
10, -0.714225, 1, 0, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478555,-99) , 
5, 0.998571, 0, 0, 0.500424,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.028883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.527277, 0, 1, 0.528925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465875,-99) , 
3, 4.96418, 1, 0, 0.494277,-99) , 
10, 0.714323, 1, 0, 0.512262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553593,-99) , 
NN(
0, 
0, 
-1, -2.18003, 1, -1, 0.493583,-99) , 
10, 0.915147, 0, 0, 0.499124,-99) , 
11, -1.95643, 0, 0, 0.505483,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0321826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141638, 0, 1, 0.508591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468785,-99) , 
11, -1.56587, 1, 0, 0.495929,-99) , 
10, 1.00032, 1, 0, 0.505583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488669,-99) , 
6, -0.922154, 1, 0, 0.504436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442959,-99) , 
12, 1.8903, 0, 0, 0.486594,-99) , 
8, 1.60852, 0, 0, 0.503567,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0283767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.190781, 0, 1, 0.536261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464511,-99) , 
12, 1.1929, 0, 0, 0.496358,-99) , 
11, -1.52588, 1, 0, 0.506964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497637,-99) , 
5, 0.999524, 1, 0, 0.500951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452699,-99) , 
3, 2.96196, 0, 0, 0.497032,-99) , 
8, 2.91759, 1, 0, 0.500976,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0273098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491036,-99) , 
11, -2.47256, 1, 0, 0.505052,-99) , 
10, -0.998826, 1, 0, 0.509544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498077,-99) , 
11, 1.41331, 0, 0, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440936,-99) , 
5, 0.999524, 0, 0, 0.498012,-99) , 
9, -949.398, 0, 0, 0.503636,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0156022);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532964,-99) , 
NN(
NN(
0, 
0, 
-1, 0.807071, 0, 1, 0.506209,-99) , 
NN(
0, 
0, 
-1, 0.518144, 1, -1, 0.491416,-99) , 
0, 0.494281, 0, 0, 0.503237,-99) , 
10, 2.14286, 0, 0, 0.504497,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0100742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.02828, 0, 1, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477589,-99) , 
5, 0.999048, 0, 0, 0.503072,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0279958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544628,-99) , 
NN(
NN(
0, 
0, 
-1, -0.85059, 1, 1, 0.508219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470103,-99) , 
12, -0.90519, 0, 0, 0.489587,-99) , 
10, -0.142789, 0, 0, 0.501401,-99) , 
11, -4.09508, 1, 0, 0.503132,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0257056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.09886, 1, 1, 0.533361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476719,-99) , 
3, 3.38527, 0, 0, 0.504107,-99) , 
8, 3.35124, 1, 0, 0.507628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473148,-99) , 
12, 0.542707, 0, 0, 0.492658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444129,-99) , 
10, 1.57113, 1, 0, 0.488795,-99) , 
3, 2.68412, 0, 0, 0.500249,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0261997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493008,-99) , 
12, 0.103558, 0, 0, 0.506605,-99) , 
NN(
0, 
0, 
-1, 4.11128, 0, -1, 0.494727,-99) , 
8, 4.03148, 1, 0, 0.500434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479289,-99) , 
10, -1.00113, 1, 0, 0.495634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45596,-99) , 
3, 1.23497, 0, 0, 0.486385,-99) , 
3, 1.70239, 0, 0, 0.497956,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0288657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.869101, 0, 1, 0.504524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455191,-99) , 
11, -1.56568, 1, 0, 0.486271,-99) , 
10, 1.28664, 1, 0, 0.501389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485079,-99) , 
11, 2.34441, 0, 0, 0.495591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431545,-99) , 
6, -0.800674, 1, 0, 0.48578,-99) , 
3, 1.70239, 0, 0, 0.498615,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0260039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0793119, 0, 1, 0.526959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420934,-99) , 
10, 0.902856, 0, 0, 0.489493,-99) , 
12, -0.460716, 1, 0, 0.51165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471669,-99) , 
8, 1.52961, 0, 0, 0.497823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458178,-99) , 
8, 4.88308, 1, 0, 0.49562,-99) , 
3, 4.62565, 0, 0, 0.499958,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0176297);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.510314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494272,-99) , 
10, 2.14286, 0, 0, 0.495574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458122,-99) , 
5, 0.999524, 0, 0, 0.493557,-99) , 
2, -0.0713128, 1, 0, 0.496679,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0265101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491452,-99) , 
11, -1.7199, 1, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 2.76771, 0, -1, 0.490145,-99) , 
12, 0.117124, 0, 0, 0.495198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472973,-99) , 
12, 3.32893, 1, 0, 0.494091,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0183102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476495,-99) , 
10, -1.16305, 0, 0, 0.504577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467977,-99) , 
6, -0.793991, 1, 0, 0.491729,-99) , 
8, 2.04084, 0, 0, 0.501767,-99) , 
10, -1.85707, 1, 0, 0.502744,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0175737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491986,-99) , 
12, 1.53644, 0, 0, 0.494354,-99) , 
3, 6.28476, 0, 0, 0.495284,-99) , 
10, 2.14286, 0, 0, 0.496486,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00986461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85694, 1, 1, 0.503104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47455,-99) , 
8, 1.35591, 0, 0, 0.501804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46564,-99) , 
8, 7.20161, 1, 0, 0.500835,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0140437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498046,-99) , 
2, 0.0634917, 0, 0, 0.500596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467899,-99) , 
5, 0.999705, 0, 0, 0.499645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431471,-99) , 
9, -951.286, 0, 0, 0.479439,-99) , 
5, 0.999524, 0, 0, 0.498155,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0272643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.76721, 0, 1, 0.52607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454996,-99) , 
13, 6.02763, 1, 0, 0.50868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493969,-99) , 
8, 6.77722, 0, 0, 0.49575,-99) , 
10, -1.5714, 1, 0, 0.498111,-99) , 
11, -3.0661, 1, 0, 0.500253,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0255025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493849,-99) , 
3, 1.52944, 0, 0, 0.523908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498323,-99) , 
11, -2.10383, 0, 0, 0.502913,-99) , 
12, -0.0798834, 0, 0, 0.509037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492156,-99) , 
11, -2.22532, 1, 0, 0.497052,-99) , 
12, -0.523666, 1, 0, 0.500855,-99) , 
10, 0.142875, 1, 0, 0.504923,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.027389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490338,-99) , 
8, 5.97199, 1, 0, 0.50333,-99) , 
6, -0.142213, 1, 0, 0.507311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493137,-99) , 
3, 2.2426, 0, 0, 0.501612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44459,-99) , 
13, 3.01315, 1, 0, 0.496506,-99) , 
3, 3.00369, 0, 0, 0.502452,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0262184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469319,-99) , 
12, -1.58633, 0, 0, 0.50269,-99) , 
6, 0.510025, 0, 0, 0.506668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51517,-99) , 
NN(
0, 
0, 
-1, 0.151199, 0, -1, 0.477627,-99) , 
6, 0.529774, 1, 0, 0.487285,-99) , 
13, 5.45744, 1, 0, 0.502795,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0248515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.8116, 0, 1, 0.552467,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.479947,-99) , 
11, -3.26437, 0, 0, 0.517413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494369,-99) , 
12, 0.897074, 0, 0, 0.499202,-99) , 
12, -1.53797, 1, 0, 0.50087,-99) , 
10, -0.999966, 1, 0, 0.503359,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0316968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0181191, 0, 1, 0.54577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424355,-99) , 
10, 0.805882, 0, 0, 0.495841,-99) , 
12, -0.601488, 1, 0, 0.52263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493876,-99) , 
3, 2.94156, 0, 0, 0.500477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471953,-99) , 
8, 5.23153, 1, 0, 0.4989,-99) , 
3, 4.96044, 0, 0, 0.503893,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0281747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469564,-99) , 
12, -0.711623, 0, 0, 0.503332,-99) , 
3, 3.16006, 0, 0, 0.507611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493659,-99) , 
1, -0.00364232, 1, 0, 0.500315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460123,-99) , 
3, 3.70732, 0, 0, 0.496396,-99) , 
8, 3.73417, 1, 0, 0.502335,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0290259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463545,-99) , 
8, 1.44146, 0, 0, 0.530744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465576,-99) , 
3, 3.13965, 0, 0, 0.492957,-99) , 
12, -1.01773, 0, 0, 0.508811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548425,-99) , 
NN(
0, 
0, 
-1, 4.0993, 1, -1, 0.492784,-99) , 
12, -1.03225, 1, 0, 0.496634,-99) , 
10, -0.428515, 1, 0, 0.500332,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0115581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.74123, 0, 1, 0.538305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499595,-99) , 
10, 1.6006, 0, 0, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458699,-99) , 
10, 2.34694, 1, 0, 0.50064,-99) , 
10, -1.57136, 1, 0, 0.503033,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.040448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0448671, 0, 1, 0.523175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470184,-99) , 
9, -951.286, 1, 0, 0.497102,-99) , 
12, -0.47204, 1, 0, 0.512265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476612,-99) , 
9, -0.508482, 0, 0, 0.507478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488469,-99) , 
11, 1.68498, 0, 0, 0.493968,-99) , 
9, -946.347, 0, 0, 0.500152,-99) , 
3, 4.97429, 0, 0, 0.502675,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0197616);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487917,-99) , 
8, 1.49837, 0, 0, 0.505464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477027,-99) , 
2, -0.213924, 0, 0, 0.504039,-99) , 
3, 6.28306, 0, 0, 0.505847,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.01538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469016,-99) , 
6, 0.721827, 1, 0, 0.502214,-99) , 
6, 0.807937, 0, 0, 0.503428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489176,-99) , 
0, 0.489655, 1, 0, 0.500774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459361,-99) , 
13, 4.50822, 1, 0, 0.4885,-99) , 
0, 0.492376, 0, 0, 0.501764,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.019128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481498,-99) , 
10, 0.435964, 0, 0, 0.496259,-99) , 
8, 5.94925, 1, 0, 0.511985,-99) , 
NN(
NN(
0, 
0, 
-1, -0.714225, 1, 1, 0.507886,-99) , 
NN(
0, 
0, 
-1, 1.89427, 0, -1, 0.494225,-99) , 
12, 0.779613, 0, 0, 0.499014,-99) , 
3, 5.30668, 0, 0, 0.500985,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.016178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.704117, 1, 1, 0.523991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492803,-99) , 
0, 0.500947, 1, 0, 0.502317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472726,-99) , 
3, 1.22104, 0, 0, 0.501114,-99) , 
3, 5.95629, 0, 0, 0.502537,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0180406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.518522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48305,-99) , 
13, 5.45834, 1, 0, 0.512088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49844,-99) , 
12, 0.902615, 0, 0, 0.502309,-99) , 
NN(
0, 
0, 
-1, 1.57144, 1, -1, 0.488692,-99) , 
11, -0.802044, 1, 0, 0.499144,-99) , 
0, 0.494281, 1, 0, 0.50183,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0122256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999758, 1, 1, 0.503356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475106,-99) , 
5, 0.999637, 0, 0, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454263,-99) , 
5, 0.999048, 0, 0, 0.500012,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0186603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469175,-99) , 
12, -1.83839, 0, 0, 0.515343,-99) , 
NN(
NN(
0, 
0, 
-1, -3.47274, 1, 1, 0.503108,-99) , 
NN(
0, 
0, 
-1, 0.797149, 0, -1, 0.48621,-99) , 
8, 2.06617, 0, 0, 0.499398,-99) , 
10, -1.28568, 1, 0, 0.50095,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0167837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495909,-99) , 
9, -946.347, 1, 0, 0.501779,-99) , 
10, 2.14284, 0, 0, 0.503117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452757,-99) , 
9, -951.286, 0, 0, 0.486047,-99) , 
5, 0.999524, 0, 0, 0.501842,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0132849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489994,-99) , 
8, 2.032, 0, 0, 0.513011,-99) , 
NN(
0, 
0, 
-1, 1.28575, 1, -1, 0.496749,-99) , 
2, 0.0715717, 0, 0, 0.499675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465284,-99) , 
5, 0.998571, 0, 0, 0.498748,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0305084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.27811, 1, 1, 0.506161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47342,-99) , 
10, -1.2838, 0, 0, 0.503591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485151,-99) , 
10, -0.143878, 1, 0, 0.510643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469848,-99) , 
11, 1.41588, 0, 0, 0.482529,-99) , 
9, -949.006, 0, 0, 0.492503,-99) , 
3, 2.3528, 0, 0, 0.499941,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0187193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06106, 1, 1, 0.504733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461697,-99) , 
3, 1.15426, 0, 0, 0.502686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492513,-99) , 
8, 4.32806, 1, 0, 0.496427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457422,-99) , 
3, 3.72108, 0, 0, 0.492622,-99) , 
8, 3.75597, 1, 0, 0.497958,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0284241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.83747, 0, 1, 0.515632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495561,-99) , 
10, 0.877562, 0, 0, 0.498011,-99) , 
12, 0.66869, 0, 0, 0.50245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447936,-99) , 
11, -1.53537, 1, 0, 0.512604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448609,-99) , 
9, -951.286, 0, 0, 0.469458,-99) , 
8, 4.60919, 0, 0, 0.486918,-99) , 
10, 1.28573, 1, 0, 0.499991,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0157691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497675,-99) , 
12, -1.49264, 0, 0, 0.522495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494986,-99) , 
11, 2.22532, 0, 0, 0.49608,-99) , 
6, 0.807937, 0, 0, 0.497699,-99) , 
10, -1.57139, 1, 0, 0.499196,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0173044);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.529147,-99) , 
NN(
NN(
0, 
0, 
-1, 5.70663, 0, 1, 0.505932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451997,-99) , 
5, 0.999048, 0, 0, 0.504205,-99) , 
3, 5.95592, 0, 0, 0.505771,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0256155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487808,-99) , 
12, -0.820091, 0, 0, 0.516259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482062,-99) , 
0, 0.506474, 0, 0, 0.4915,-99) , 
0, 0.505437, 1, 0, 0.510131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494551,-99) , 
10, 0.143691, 0, 0, 0.508684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491812,-99) , 
0, 0.490335, 1, 0, 0.495002,-99) , 
3, 4.62652, 0, 0, 0.498784,-99) , 
0, 0.5019, 0, 0, 0.501165,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0292947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486652,-99) , 
8, 4.19041, 1, 0, 0.502299,-99) , 
10, 0.0013411, 0, 0, 0.513543,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.527561,-99) , 
NN(
0, 
0, 
-1, 5.6044, 1, -1, 0.494061,-99) , 
10, -0.428507, 1, 0, 0.500413,-99) , 
11, -2.88401, 1, 0, 0.50372,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0194018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.673883, 0, 1, 0.504481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476588,-99) , 
8, 1.47996, 0, 0, 0.489337,-99) , 
8, 1.60319, 0, 0, 0.502755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471461,-99) , 
10, 1.97945, 0, 0, 0.508545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465303,-99) , 
11, -0.82823, 1, 0, 0.489415,-99) , 
10, 1.57143, 1, 0, 0.501348,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.017319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.570053, 1, 1, 0.524546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494687,-99) , 
12, 0.0843741, 0, 0, 0.500105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449366,-99) , 
6, -0.947136, 1, 0, 0.480059,-99) , 
8, 1.4445, 0, 0, 0.498755,-99) , 
3, 5.96172, 0, 0, 0.500319,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0233288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494744,-99) , 
10, -1.16322, 0, 0, 0.532416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430412,-99) , 
10, -0.366063, 0, 0, 0.500028,-99) , 
12, -1.50604, 1, 0, 0.506946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454797,-99) , 
5, 0.999714, 0, 0, 0.500051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456422,-99) , 
13, 3.9802, 1, 0, 0.49589,-99) , 
3, 3.99365, 0, 0, 0.500121,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0201911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499594,-99) , 
13, 2.01779, 0, 0, 0.509163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448401,-99) , 
3, 1.80548, 0, 0, 0.498229,-99) , 
12, 0.450471, 0, 0, 0.501141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479007,-99) , 
11, -1.87848, 1, 0, 0.494792,-99) , 
NN(
0, 
0, 
-1, 1.82455, 1, -1, 0.463019,-99) , 
3, 2.36865, 0, 0, 0.48661,-99) , 
10, 1.00004, 1, 0, 0.497865,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0123142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06512, 1, 1, 0.515,-99) , 
NN(
0, 
0, 
-1, 5.30898, 1, -1, 0.496318,-99) , 
3, 5.35516, 0, 0, 0.498552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453472,-99) , 
8, 7.21284, 1, 0, 0.497334,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0178647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.704559, 1, 1, 0.525415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494056,-99) , 
6, -0.434431, 1, 0, 0.499377,-99) , 
NN(
0, 
0, 
-1, 4.71873, 0, -1, 0.465457,-99) , 
5, 0.999524, 0, 0, 0.497357,-99) , 
3, 5.95629, 0, 0, 0.499135,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0342363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92919, 0, 1, 0.524855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490016,-99) , 
12, -0.603935, 0, 0, 0.495657,-99) , 
11, -1.95643, 0, 0, 0.505319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484338,-99) , 
11, -2.17998, 1, 0, 0.489881,-99) , 
12, -0.496851, 1, 0, 0.494666,-99) , 
10, 0.142902, 1, 0, 0.499974,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0246357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0916823, 0, 1, 0.520773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484996,-99) , 
12, -0.138059, 1, 0, 0.499016,-99) , 
6, -0.208805, 1, 0, 0.502345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488905,-99) , 
8, 1.54714, 0, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0.367599, 1, -1, 0.479648,-99) , 
12, 1.27832, 0, 0, 0.490277,-99) , 
3, 2.69125, 0, 0, 0.497574,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0241723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478915,-99) , 
12, -1.70423, 1, 0, 0.494854,-99) , 
10, -0.310104, 0, 0, 0.508201,-99) , 
NN(
NN(
0, 
0, 
-1, 1.54065, 0, 1, 0.52087,-99) , 
NN(
0, 
0, 
-1, 5.30476, 1, -1, 0.494281,-99) , 
10, -0.714215, 1, 0, 0.49711,-99) , 
12, -0.935125, 1, 0, 0.49986,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00883886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498628,-99) , 
6, 0.0420291, 0, 0, 0.518754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519953,-99) , 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.497376,-99) , 
11, -3.97106, 1, 0, 0.498538,-99) , 
2, -0.21427, 1, 0, 0.499634,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0281349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.167563, 1, 1, 0.524241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49308,-99) , 
12, -0.1839, 1, 0, 0.504841,-99) , 
6, -0.0661641, 1, 0, 0.508288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493629,-99) , 
8, 2.30094, 0, 0, 0.50274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461289,-99) , 
11, -2.47161, 1, 0, 0.481518,-99) , 
12, 0.228214, 0, 0, 0.496274,-99) , 
3, 3.0113, 0, 0, 0.502833,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0149287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497044,-99) , 
11, -3.04521, 1, 0, 0.513734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487887,-99) , 
6, 0.281547, 1, 0, 0.501111,-99) , 
3, 5.38665, 0, 0, 0.502564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472857,-99) , 
8, 7.25282, 1, 0, 0.501789,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0192185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.271, 0, 1, 0.513066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493605,-99) , 
11, -1.81636, 0, 0, 0.499685,-99) , 
10, 0.918384, 0, 0, 0.502626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479443,-99) , 
10, 2.14286, 1, 0, 0.501735,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0135622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492858,-99) , 
11, -0.954763, 1, 0, 0.521087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482342,-99) , 
5, 0.999592, 0, 0, 0.50135,-99) , 
10, 1.57143, 0, 0, 0.503476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463664,-99) , 
5, 0.998571, 0, 0, 0.502416,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0205863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496006,-99) , 
11, -2.79817, 1, 0, 0.514251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491885,-99) , 
12, -0.0820782, 0, 0, 0.500884,-99) , 
3, 4.75469, 0, 0, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.480003,-99) , 
8, 6.77088, 1, 0, 0.502339,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0258866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435038,-99) , 
10, -0.594253, 0, 0, 0.505876,-99) , 
12, -1.85071, 1, 0, 0.510471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463058,-99) , 
3, 1.18823, 0, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453268,-99) , 
12, -1.495, 0, 0, 0.497547,-99) , 
3, 3.99272, 0, 0, 0.502482,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0180622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525586,-99) , 
NN(
0, 
0, 
-1, 2.24213, 0, -1, 0.49231,-99) , 
11, 2.17332, 0, 0, 0.493822,-99) , 
10, -1.85703, 1, 0, 0.494877,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0319109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491859,-99) , 
11, -2.52341, 1, 0, 0.514209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493238,-99) , 
11, -1.91754, 0, 0, 0.498731,-99) , 
8, 3.99479, 1, 0, 0.501892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486836,-99) , 
11, -2.1628, 1, 0, 0.494728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450057,-99) , 
13, 3.02992, 1, 0, 0.490597,-99) , 
3, 3.0177, 0, 0, 0.496721,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0383567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497857,-99) , 
10, -1.16322, 0, 0, 0.535221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441967,-99) , 
10, -0.391422, 0, 0, 0.505961,-99) , 
12, -1.52079, 1, 0, 0.512102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480793,-99) , 
12, -0.285948, 0, 0, 0.501466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458052,-99) , 
12, 2.4069, 0, 0, 0.480595,-99) , 
8, 1.82701, 0, 0, 0.495773,-99) , 
3, 3.9757, 0, 0, 0.50207,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0215438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8919, 1, 1, 0.52211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499823,-99) , 
11, -2.06376, 0, 0, 0.503791,-99) , 
10, 1.00058, 0, 0, 0.508503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497568,-99) , 
3, 1.65025, 0, 0, 0.524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466448,-99) , 
12, 0.850463, 0, 0, 0.489297,-99) , 
10, -0.999934, 1, 0, 0.495622,-99) , 
3, 2.67112, 0, 0, 0.503445,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0229051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.42669, 0, 1, 0.504739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457779,-99) , 
0, 0.490471, 0, 0, 0.502547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470303,-99) , 
12, 1.69067, 0, 0, 0.484238,-99) , 
10, -1.28572, 1, 0, 0.489363,-99) , 
3, 2.69825, 0, 0, 0.4973,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0343038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494315,-99) , 
11, -3.17341, 0, 0, 0.50557,-99) , 
12, 0.360066, 0, 0, 0.511433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445186,-99) , 
13, 6.43974, 1, 0, 0.509774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485491,-99) , 
10, -0.183623, 1, 0, 0.488378,-99) , 
11, -2.62045, 1, 0, 0.493667,-99) , 
10, -0.714229, 1, 0, 0.497574,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0223546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494287,-99) , 
12, -1.8886, 0, 0, 0.522961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495182,-99) , 
10, 0.000568049, 0, 0, 0.510364,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49366,-99) , 
11, -2.69621, 1, 0, 0.498177,-99) , 
10, -1.28555, 1, 0, 0.500577,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0205344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.846, 0, 1, 0.520996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495127,-99) , 
9, -951.286, 1, 0, 0.501533,-99) , 
10, -0.999927, 1, 0, 0.504489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445018,-99) , 
12, -0.430532, 1, 0, 0.481695,-99) , 
5, 0.999524, 0, 0, 0.502823,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0170391);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533397,-99) , 
NN(
NN(
0, 
0, 
-1, -1.87583, 0, 1, 0.505742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487375,-99) , 
2, 0.0723892, 0, 0, 0.492994,-99) , 
10, 0.918341, 1, 0, 0.502996,-99) , 
10, 2.14285, 0, 0, 0.504303,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0259178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29046, 0, 1, 0.521135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460115,-99) , 
6, 0.684569, 1, 0, 0.500993,-99) , 
3, 5.54625, 0, 0, 0.503969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459275,-99) , 
9, -951.286, 0, 0, 0.480592,-99) , 
11, 2.36238, 0, 0, 0.48702,-99) , 
8, 2.04249, 0, 0, 0.500135,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0260589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.542829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47128,-99) , 
12, -1.98061, 0, 0, 0.510848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494902,-99) , 
11, -3.31516, 1, 0, 0.500934,-99) , 
NN(
0, 
0, 
-1, -0.654828, 1, -1, 0.487244,-99) , 
8, 2.48646, 0, 0, 0.496706,-99) , 
10, -1.28561, 1, 0, 0.498073,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0264895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.61824, 1, 1, 0.513594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471881,-99) , 
3, 3.41285, 0, 0, 0.500774,-99) , 
8, 3.24537, 1, 0, 0.505079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484373,-99) , 
10, -1.00113, 1, 0, 0.497881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443237,-99) , 
8, 1.31964, 0, 0, 0.487181,-99) , 
3, 1.70258, 0, 0, 0.501944,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0253252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49854,-99) , 
2, -0.00348441, 1, 0, 0.506799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476087,-99) , 
12, 0.702088, 0, 0, 0.493955,-99) , 
3, 2.35528, 0, 0, 0.502544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431717,-99) , 
9, -0.483612, 0, 0, 0.494498,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.474072,-99) , 
9, -951.286, 0, 0, 0.484142,-99) , 
2, 0.0713265, 1, 0, 0.499243,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0148446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.02988, 1, 1, 0.504926,-99) , 
NN(
0, 
0, 
-1, 1.40084, 0, -1, 0.474686,-99) , 
3, 1.52162, 0, 0, 0.503242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443043,-99) , 
11, 1.21755, 0, 0, 0.478158,-99) , 
6, -0.904858, 0, 0, 0.50134,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0121821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49165,-99) , 
0, 0.499677, 1, 0, 0.512758,-99) , 
NN(
0, 
0, 
-1, 1.81571, 0, -1, 0.496811,-99) , 
11, 0.491446, 0, 0, 0.498632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468211,-99) , 
0, 0.505709, 1, 0, 0.497318,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0310333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470838,-99) , 
12, -0.820399, 1, 0, 0.495238,-99) , 
9, -951.286, 0, 0, 0.515826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494436,-99) , 
3, 3.48205, 0, 0, 0.501047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482007,-99) , 
12, -1.35069, 1, 0, 0.488911,-99) , 
13, 4.0885, 1, 0, 0.49594,-99) , 
10, -1.28568, 1, 0, 0.497894,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0227031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482012,-99) , 
6, -0.714584, 1, 0, 0.501821,-99) , 
11, -1.20328, 1, 0, 0.508171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495218,-99) , 
11, -4.06739, 1, 0, 0.49732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463496,-99) , 
3, 1.79553, 0, 0, 0.495571,-99) , 
12, 0.734552, 0, 0, 0.499584,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0248374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.08627, 0, 1, 0.508016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470663,-99) , 
11, -2.17748, 0, 0, 0.490383,-99) , 
8, 6.08588, 1, 0, 0.50579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435994,-99) , 
11, 1.35995, 0, 0, 0.472925,-99) , 
6, -0.904884, 0, 0, 0.50332,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0128961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.704454, 0, 1, 0.502725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44037,-99) , 
11, 1.46241, 0, 0, 0.479584,-99) , 
8, 1.5182, 0, 0, 0.500598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464123,-99) , 
3, 6.10483, 0, 0, 0.483443,-99) , 
6, 0.713013, 1, 0, 0.499046,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0150952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484832,-99) , 
0, 0.496185, 0, 0, 0.523722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458156,-99) , 
5, 0.999728, 0, 0, 0.500026,-99) , 
5, 0.999524, 1, 0, 0.502289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462242,-99) , 
13, 1.25251, 0, 0, 0.497285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450604,-99) , 
6, -0.726699, 1, 0, 0.491986,-99) , 
8, 2.05881, 0, 0, 0.499915,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0316041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48849,-99) , 
10, -0.427568, 0, 0, 0.51651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480654,-99) , 
4, 4.74995, 1, 0, 0.509851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482826,-99) , 
11, -1.61679, 1, 0, 0.493532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414932,-99) , 
11, -2.85757, 0, 0, 0.461264,-99) , 
8, 4.94227, 1, 0, 0.490567,-99) , 
3, 4.95435, 0, 0, 0.49465,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0181972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49731,-99) , 
3, 3.95701, 0, 0, 0.520329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493528,-99) , 
8, 1.45654, 0, 0, 0.506983,-99) , 
NN(
0, 
0, 
-1, 1.47401, 0, -1, 0.492421,-99) , 
11, 0.489934, 0, 0, 0.494113,-99) , 
2, -0.214143, 1, 0, 0.495563,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0211681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48884,-99) , 
11, -2.68624, 1, 0, 0.513539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483786,-99) , 
13, 3.5642, 1, 0, 0.495108,-99) , 
3, 4.78593, 0, 0, 0.498818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475374,-99) , 
8, 6.82251, 1, 0, 0.49768,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0265805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45421,-99) , 
10, -0.558092, 0, 0, 0.500872,-99) , 
12, -1.85071, 1, 0, 0.505454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481837,-99) , 
12, -0.232505, 0, 0, 0.497893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456948,-99) , 
8, 1.39168, 0, 0, 0.49456,-99) , 
3, 3.97048, 0, 0, 0.498746,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0165527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497446,-99) , 
2, -0.0729046, 1, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, -1.90463, 1, -1, 0.47725,-99) , 
4, 3.68429, 1, 0, 0.498068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479222,-99) , 
4, 8.73497, 1, 0, 0.497531,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.459313,-99) , 
8, 2.48278, 0, 0, 0.4862,-99) , 
4, 4.5261, 1, 0, 0.495708,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.01469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492782,-99) , 
11, -2.57321, 0, 0, 0.512074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49796,-99) , 
3, 5.91293, 0, 0, 0.499358,-99) , 
2, 0.0715014, 0, 0, 0.501608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477411,-99) , 
6, -0.715709, 0, 0, 0.496136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465949,-99) , 
10, 1.00002, 1, 0, 0.489585,-99) , 
0, 0.5019, 1, 0, 0.499146,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0201456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.15776, 0, 1, 0.505199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480767,-99) , 
10, -1.57134, 0, 0, 0.503802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443176,-99) , 
9, -0.508482, 0, 0, 0.497381,-99) , 
NN(
0, 
0, 
-1, -0.207481, 0, -1, 0.478468,-99) , 
9, -946.347, 0, 0, 0.487745,-99) , 
2, -0.0714445, 0, 0, 0.500907,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0178811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493562,-99) , 
5, 0.999524, 1, 0, 0.494833,-99) , 
NN(
0, 
0, 
-1, 3.94524, 1, -1, 0.481415,-99) , 
0, 0.491696, 0, 0, 0.493561,-99) , 
NN(
0, 
0, 
-1, 0.506253, 0, -1, 0.478577,-99) , 
0, 0.504757, 1, 0, 0.492472,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0219309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487726,-99) , 
10, 0.714528, 1, 0, 0.512299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475976,-99) , 
3, 2.86548, 0, 0, 0.499292,-99) , 
6, -0.510876, 1, 0, 0.50205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48722,-99) , 
11, 2.17847, 0, 0, 0.49971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448466,-99) , 
6, -0.806108, 1, 0, 0.490863,-99) , 
3, 1.70239, 0, 0, 0.500097,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0177075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492349,-99) , 
3, 5.04586, 0, 0, 0.494774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460472,-99) , 
8, 7.21016, 1, 0, 0.493867,-99) , 
10, 2.14285, 0, 0, 0.494999,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0223354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495933,-99) , 
8, 3.58609, 1, 0, 0.509938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4941,-99) , 
10, -0.999966, 1, 0, 0.496421,-99) , 
11, -2.96056, 1, 0, 0.499255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456193,-99) , 
11, -2.4228, 0, 0, 0.475895,-99) , 
8, 6.3822, 1, 0, 0.497312,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0206458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.28836, 1, 1, 0.52065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452778,-99) , 
3, 1.50644, 0, 0, 0.50206,-99) , 
11, 0.51471, 0, 0, 0.504204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483404,-99) , 
2, 0.078241, 1, 0, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0.0415916, 1, -1, 0.466785,-99) , 
2, -0.0714203, 0, 0, 0.492007,-99) , 
4, 4.55235, 1, 0, 0.501786,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0105616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493266,-99) , 
8, 3.8213, 1, 0, 0.497758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472607,-99) , 
8, 7.21016, 1, 0, 0.497076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470552,-99) , 
10, 2.14285, 1, 0, 0.496049,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0338253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495008,-99) , 
11, -2.29533, 1, 0, 0.506467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481713,-99) , 
3, 4.6514, 0, 0, 0.495441,-99) , 
12, -0.49529, 0, 0, 0.501198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447837,-99) , 
12, 1.61332, 0, 0, 0.478149,-99) , 
9, -946.347, 0, 0, 0.489996,-99) , 
3, 2.02958, 0, 0, 0.498288,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0167205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
9, -951.286, 1, 0, 0.521411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488507,-99) , 
2, -0.207344, 0, 0, 0.50257,-99) , 
10, 0.428604, 0, 0, 0.510294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490469,-99) , 
3, 2.19205, 0, 0, 0.499187,-99) , 
NN(
0, 
0, 
-1, -2.97884, 0, -1, 0.477171,-99) , 
6, 0.710467, 1, 0, 0.4972,-99) , 
2, -0.0713033, 1, 0, 0.499645,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00951961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499459,-99) , 
11, -3.53739, 1, 0, 0.501606,-99) , 
10, -1.8571, 1, 0, 0.50255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472253,-99) , 
8, 6.77401, 1, 0, 0.500982,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0138575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498127,-99) , 
4, 4.58123, 0, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46448,-99) , 
5, 0.999728, 0, 0, 0.500167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43994,-99) , 
9, -951.286, 0, 0, 0.475704,-99) , 
5, 0.999524, 0, 0, 0.498373,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0216938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0929945, 0, 1, 0.513443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480709,-99) , 
11, -1.81811, 1, 0, 0.492683,-99) , 
10, 0.428792, 1, 0, 0.505263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
12, -1.57177, 1, 0, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0.999931, 1, -1, 0.49287,-99) , 
3, 4.64787, 0, 0, 0.496502,-99) , 
0, 0.496185, 1, 0, 0.49944,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0191093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.5994, 1, 1, 0.507554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456007,-99) , 
11, -3.1267, 0, 0, 0.490642,-99) , 
12, -1.84279, 1, 0, 0.496046,-99) , 
8, 5.02519, 1, 0, 0.504455,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0274733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499712,-99) , 
10, 0.714298, 1, 0, 0.510118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436333,-99) , 
5, 0.999524, 0, 0, 0.506443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495314,-99) , 
11, -2.31272, 0, 0, 0.502879,-99) , 
NN(
0, 
0, 
-1, -2.40767, 1, -1, 0.474877,-99) , 
3, 3.12469, 0, 0, 0.496124,-99) , 
12, -0.03967, 0, 0, 0.501343,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0160796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480524,-99) , 
5, 0.99966, 0, 0, 0.504041,-99) , 
2, 0.214213, 0, 0, 0.505231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467808,-99) , 
5, 0.998572, 0, 0, 0.50422,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0212634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.550089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478588,-99) , 
12, -1.96806, 0, 0, 0.518064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497919,-99) , 
11, -2.9432, 1, 0, 0.502532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469206,-99) , 
11, -2.99976, 0, 0, 0.491873,-99) , 
8, 5.49809, 1, 0, 0.500383,-99) , 
10, -1.28571, 1, 0, 0.502128,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0234719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49276,-99) , 
11, -2.51525, 1, 0, 0.530841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466284,-99) , 
12, -1.35012, 0, 0, 0.50309,-99) , 
3, 3.86719, 0, 0, 0.506063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533434,-99) , 
NN(
0, 
0, 
-1, -0.62072, 0, -1, 0.490775,-99) , 
12, -1.9085, 1, 0, 0.496088,-99) , 
8, 4.60808, 1, 0, 0.502713,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0128691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484841,-99) , 
3, 5.59876, 1, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484134,-99) , 
9, 1.39928, 1, 0, 0.500178,-99) , 
11, -4.09508, 1, 0, 0.501828,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0127261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48101,-99) , 
11, -0.808052, 1, 0, 0.525659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479078,-99) , 
6, -0.904887, 0, 0, 0.499132,-99) , 
10, 1.85716, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459851,-99) , 
5, 0.998571, 0, 0, 0.499877,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.016135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49681,-99) , 
10, 1.85715, 0, 0, 0.498739,-99) , 
NN(
0, 
0, 
-1, 5.24589, 1, -1, 0.487879,-99) , 
0, 0.496185, 0, 0, 0.495154,-99) , 
11, -4.10179, 1, 0, 0.496571,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0273277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.82308, 0, 1, 0.517538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493269,-99) , 
10, -1.57134, 1, 0, 0.495602,-99) , 
11, -2.93865, 1, 0, 0.500096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477762,-99) , 
3, 5.6506, 1, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455779,-99) , 
11, -3.06709, 0, 0, 0.482298,-99) , 
8, 5.95225, 1, 0, 0.497746,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0133652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477642,-99) , 
9, -951.286, 0, 0, 0.515961,-99) , 
NN(
0, 
0, 
-1, 1.59946, 0, -1, 0.496424,-99) , 
10, 1.85714, 0, 0, 0.49775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469568,-99) , 
5, 0.998571, 0, 0, 0.496993,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.015893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.21245, 0, 1, 0.507193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497024,-99) , 
3, 5.43861, 0, 0, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477876,-99) , 
3, 2.03795, 0, 0, 0.496712,-99) , 
4, 4.60728, 1, 0, 0.505174,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0165768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40559, 1, 1, 0.522993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483861,-99) , 
10, 0.428552, 0, 0, 0.498481,-99) , 
4, 4.603, 1, 0, 0.515093,-99) , 
NN(
NN(
0, 
0, 
-1, 0.714367, 0, 1, 0.523937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471441,-99) , 
2, 0.0996106, 1, 0, 0.498977,-99) , 
2, 0.153059, 0, 0, 0.501739,-99) , 
2, -0.0714203, 1, 0, 0.504225,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0275724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47336,-99) , 
12, -1.87234, 0, 0, 0.507394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451649,-99) , 
6, -0.947712, 1, 0, 0.480165,-99) , 
8, 1.43506, 0, 0, 0.505293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499772,-99) , 
10, -0.782953, 0, 0, 0.517376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451396,-99) , 
11, -2.46893, 0, 0, 0.482315,-99) , 
12, -1.18575, 1, 0, 0.49423,-99) , 
8, 5.48774, 1, 0, 0.503108,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0194117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490043,-99) , 
13, 5.20604, 1, 0, 0.518859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496461,-99) , 
10, -1.28503, 1, 0, 0.497925,-99) , 
11, -3.68231, 1, 0, 0.499912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482953,-99) , 
8, 1.27386, 0, 0, 0.507844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440739,-99) , 
11, 0.841538, 0, 0, 0.486945,-99) , 
8, 1.60205, 0, 0, 0.498535,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0278281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488325,-99) , 
12, 0.901972, 1, 0, 0.545601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493765,-99) , 
10, 1.15968, 0, 0, 0.50297,-99) , 
11, -1.60338, 0, 0, 0.509251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
11, -2.59643, 1, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, 3.27175, 0, -1, 0.471678,-99) , 
12, -0.981979, 0, 0, 0.495909,-99) , 
3, 3.97278, 0, 0, 0.501026,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0228303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49461,-99) , 
11, -3.32917, 1, 0, 0.515144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495308,-99) , 
10, -0.238006, 1, 0, 0.498806,-99) , 
11, -2.8097, 1, 0, 0.502283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430568,-99) , 
3, 1.69572, 0, 0, 0.475162,-99) , 
9, -949.846, 0, 0, 0.491138,-99) , 
10, -0.999923, 0, 0, 0.500643,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0319278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.466824, 1, 1, 0.509482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476167,-99) , 
10, -0.839912, 0, 0, 0.493337,-99) , 
12, -1.23911, 0, 0, 0.505769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462363,-99) , 
12, 2.54282, 0, 0, 0.482609,-99) , 
9, -949.006, 0, 0, 0.491482,-99) , 
3, 2.0197, 0, 0, 0.502073,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0258288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58217, 1, 1, 0.555218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492381,-99) , 
10, 0.142898, 1, 0, 0.500628,-99) , 
11, -1.36445, 1, 0, 0.509936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494439,-99) , 
11, -4.06482, 1, 0, 0.49727,-99) , 
10, 1.04178, 0, 0, 0.500183,-99) , 
12, 0.443841, 0, 0, 0.503884,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0239445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.00289, 1, 1, 0.539744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439966,-99) , 
5, 0.999524, 0, 0, 0.49971,-99) , 
11, -2.10388, 1, 0, 0.50667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545798,-99) , 
NN(
0, 
0, 
-1, 3.15237, 0, -1, 0.491454,-99) , 
10, 0.299827, 0, 0, 0.497279,-99) , 
12, -0.418148, 0, 0, 0.503028,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0166331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499765,-99) , 
11, -0.725223, 1, 0, 0.514464,-99) , 
NN(
0, 
0, 
-1, -4.09784, 1, 1, 0.50323,-99) , 
12, 1.13684, 0, 0, 0.505136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419136,-99) , 
11, 2.05276, 0, 0, 0.471218,-99) , 
8, 1.48453, 0, 0, 0.484552,-99) , 
8, 1.60852, 0, 0, 0.502927,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0236912);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.523042,-99) , 
NN(
NN(
0, 
0, 
-1, -1.67146, 0, 1, 0.509655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482208,-99) , 
12, 0.0820436, 0, 0, 0.497427,-99) , 
3, 3.96724, 0, 0, 0.502046,-99) , 
10, 1.85715, 0, 0, 0.503511,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0183113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467111,-99) , 
3, 1.20735, 0, 0, 0.502453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456948,-99) , 
5, 0.999619, 0, 0, 0.500521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472288,-99) , 
3, 5.04111, 0, 0, 0.493162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454082,-99) , 
0, 0.502852, 1, 0, 0.488477,-99) , 
6, 0.332166, 1, 0, 0.497255,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0157884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495663,-99) , 
11, -3.09844, 1, 0, 0.498721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462882,-99) , 
8, 7.16923, 1, 0, 0.497694,-99) , 
10, -1.85711, 1, 0, 0.499145,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0138036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490404,-99) , 
9, -6.95896, 1, 0, 0.495903,-99) , 
5, 0.998571, 1, 0, 0.496863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469814,-99) , 
0, 0.505709, 1, 0, 0.495685,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0159701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13366, 0, 1, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459804,-99) , 
6, -0.83151, 1, 0, 0.49004,-99) , 
8, 1.81282, 0, 0, 0.503971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476042,-99) , 
11, 1.52839, 1, 0, 0.502303,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0235453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486251,-99) , 
8, 2.79373, 0, 0, 0.518765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497036,-99) , 
10, 1.5146, 0, 0, 0.49957,-99) , 
11, -1.29837, 0, 0, 0.502637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523095,-99) , 
NN(
0, 
0, 
-1, 1.41587, 0, -1, 0.481265,-99) , 
11, 2.36853, 0, 0, 0.488314,-99) , 
8, 2.05054, 0, 0, 0.49938,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0118779);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.11912, 1, 1, 0.526796,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 1, 1, 0.507782,-99) , 
NN(
0, 
0, 
-1, 1.563, 0, -1, 0.496324,-99) , 
0, 0.500947, 0, 0, 0.499483,-99) , 
6, 0.80818, 0, 0, 0.500887,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0324451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.525442, 0, 1, 0.517596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486073,-99) , 
8, 2.96009, 1, 0, 0.493065,-99) , 
11, -2.36053, 0, 0, 0.503015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484331,-99) , 
12, 1.31645, 0, 0, 0.491514,-99) , 
12, -0.62815, 1, 0, 0.495117,-99) , 
10, 0.142912, 1, 0, 0.49903,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0140619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495475,-99) , 
3, 5.92166, 0, 0, 0.496783,-99) , 
4, 9.02021, 0, 0, 0.498006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466045,-99) , 
5, 0.998572, 0, 0, 0.497162,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0328723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454732,-99) , 
10, -0.594256, 0, 0, 0.508267,-99) , 
12, -1.90822, 1, 0, 0.512382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494374,-99) , 
3, 2.08437, 0, 0, 0.503713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462427,-99) , 
11, -3.46172, 1, 0, 0.48147,-99) , 
12, -0.695719, 0, 0, 0.498907,-99) , 
3, 4.30016, 0, 0, 0.503294,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0239224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499429,-99) , 
11, 2.368, 0, 0, 0.501819,-99) , 
11, -3.60876, 1, 0, 0.504022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46728,-99) , 
11, -3.01463, 0, 0, 0.503514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454596,-99) , 
10, 1.5438, 0, 0, 0.469676,-99) , 
12, -0.601488, 1, 0, 0.488634,-99) , 
8, 5.52424, 1, 0, 0.501069,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0136873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.33291, 1, 1, 0.504627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467863,-99) , 
10, 2.12926, 1, 0, 0.503106,-99) , 
NN(
0, 
0, 
-1, -1.91157, 0, -1, 0.475064,-99) , 
10, -1.57139, 0, 0, 0.501529,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0161588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499348,-99) , 
12, 1.24014, 0, 0, 0.502698,-99) , 
11, -3.76886, 1, 0, 0.504161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521424,-99) , 
NN(
0, 
0, 
-1, -2.75389, 0, -1, 0.470279,-99) , 
12, -1.29517, 1, 0, 0.486215,-99) , 
8, 5.91624, 1, 0, 0.5017,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.023807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494702,-99) , 
10, 0.811329, 1, 0, 0.512346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490505,-99) , 
11, -2.39864, 1, 0, 0.499814,-99) , 
12, 0.641306, 0, 0, 0.503161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506027,-99) , 
NN(
0, 
0, 
-1, 1.45809, 0, -1, 0.466739,-99) , 
11, 2.08493, 0, 0, 0.482267,-99) , 
8, 1.61702, 0, 0, 0.500879,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0168233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28507, 1, 1, 0.504616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480858,-99) , 
11, -3.8807, 0, 0, 0.503026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482452,-99) , 
10, -0.429748, 1, 0, 0.505377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453378,-99) , 
13, 1.33541, 0, 0, 0.485727,-99) , 
8, 1.59977, 0, 0, 0.501212,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0164562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -946.347, 0, 1, 0.512194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49303,-99) , 
10, 0.714641, 1, 0, 0.499813,-99) , 
2, -0.0714203, 1, 0, 0.502113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464393,-99) , 
13, 1.26765, 0, 0, 0.49531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44702,-99) , 
6, -0.882618, 1, 0, 0.482512,-99) , 
8, 1.60319, 0, 0, 0.500038,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0239926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499792,-99) , 
11, -2.74333, 1, 0, 0.505432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475028,-99) , 
3, 4.48038, 0, 0, 0.48996,-99) , 
12, -1.13999, 0, 0, 0.502833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484434,-99) , 
12, -0.463424, 1, 0, 0.50731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463674,-99) , 
11, -3.04586, 0, 0, 0.490079,-99) , 
8, 5.88677, 1, 0, 0.501011,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0221612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477424,-99) , 
12, -1.76578, 0, 0, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452689,-99) , 
8, 1.28671, 0, 0, 0.502908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455103,-99) , 
11, -2.63669, 0, 0, 0.479383,-99) , 
8, 6.38577, 1, 0, 0.500946,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0183278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484144,-99) , 
13, 4.66943, 1, 0, 0.49798,-99) , 
2, 0.214374, 0, 0, 0.499199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47151,-99) , 
5, 0.999048, 0, 0, 0.498034,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0178898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.73129, 0, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461307,-99) , 
12, 1.27466, 1, 0, 0.504356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535136,-99) , 
NN(
0, 
0, 
-1, 0.415149, 0, -1, 0.491044,-99) , 
10, -1.57149, 1, 0, 0.494542,-99) , 
3, 2.67335, 0, 0, 0.500495,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0125249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470885,-99) , 
8, 1.77044, 0, 0, 0.500301,-99) , 
11, 0.931121, 0, 0, 0.50144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456202,-99) , 
3, 1.24726, 0, 0, 0.47606,-99) , 
3, 1.37108, 0, 0, 0.49952,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0196571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455605,-99) , 
12, 0.378165, 0, 0, 0.493835,-99) , 
11, -2.12208, 1, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 2.9601, 0, -1, 0.492655,-99) , 
8, 2.91759, 1, 0, 0.495687,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0350623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48116,-99) , 
11, -1.82788, 1, 0, 0.531876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436628,-99) , 
12, -0.7598, 1, 0, 0.498432,-99) , 
10, 0.718112, 0, 0, 0.510768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494717,-99) , 
11, -1.87222, 1, 0, 0.500829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48664,-99) , 
11, -1.88757, 0, 0, 0.48926,-99) , 
12, 0.0663443, 0, 0, 0.495494,-99) , 
3, 4.97769, 0, 0, 0.498679,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0117285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497713,-99) , 
10, -0.00678249, 0, 0, 0.5022,-99) , 
10, -1.85711, 1, 0, 0.503097,-99) , 
5, 0.999048, 1, 0, 0.50409,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0140738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498611,-99) , 
11, -0.981684, 0, 0, 0.501302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472762,-99) , 
10, 0.428623, 1, 0, 0.492365,-99) , 
8, 2.48817, 0, 0, 0.498497,-99) , 
NN(
0, 
0, 
-1, 3.95648, 1, -1, 0.480589,-99) , 
0, 0.504757, 1, 0, 0.497173,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0169982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0392551, 0, 1, 0.5092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492818,-99) , 
9, -951.286, 0, 0, 0.499427,-99) , 
0, 0.498816, 0, 0, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474539,-99) , 
0, 0.505709, 1, 0, 0.502278,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0146947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485655,-99) , 
8, 6.29072, 1, 0, 0.50047,-99) , 
11, -4.09156, 1, 0, 0.502398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484868,-99) , 
6, -0.934576, 1, 0, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451202,-99) , 
11, 0.828843, 0, 0, 0.484445,-99) , 
8, 1.61437, 0, 0, 0.500452,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.021289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57108, 1, 1, 0.506695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46074,-99) , 
3, 1.20989, 0, 0, 0.504552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480679,-99) , 
3, 5.36972, 0, 0, 0.511986,-99) , 
NN(
0, 
0, 
-1, -0.0154483, 0, -1, 0.487495,-99) , 
12, -1.41772, 1, 0, 0.493666,-99) , 
6, 0.332345, 1, 0, 0.501597,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00786586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513686,-99) , 
NN(
0, 
0, 
-1, 5.34867, 1, -1, 0.497728,-99) , 
8, 6.78009, 0, 0, 0.498559,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476248,-99) , 
2, 0.214278, 1, 0, 0.49742,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0153011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332191, 0, 1, 0.521933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465858,-99) , 
10, 2.31972, 1, 0, 0.507938,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490471, 0, -1, 0.496518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4633,-99) , 
11, -1.14463, 0, 0, 0.47956,-99) , 
10, 1.13607, 1, 0, 0.494907,-99) , 
10, 1.57144, 0, 0, 0.496318,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.020044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49951,-99) , 
8, 5.21313, 1, 0, 0.518359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472295,-99) , 
8, 4.44126, 1, 0, 0.499252,-99) , 
3, 4.43472, 0, 0, 0.502883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452217,-99) , 
3, 6.05315, 0, 0, 0.472886,-99) , 
11, -2.24245, 0, 0, 0.484883,-99) , 
8, 5.92027, 1, 0, 0.500428,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0136301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29046, 0, 1, 0.504409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445793,-99) , 
10, -0.428499, 0, 0, 0.488385,-99) , 
5, 0.999864, 0, 0, 0.502321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464488,-99) , 
5, 0.998572, 0, 0, 0.501323,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0171744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479973,-99) , 
11, -3.09086, 0, 0, 0.507713,-99) , 
NN(
0, 
0, 
-1, 3.00153, 0, -1, 0.494404,-99) , 
10, -1.28563, 1, 0, 0.495706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467325,-99) , 
5, 0.998571, 0, 0, 0.494952,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0303881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.37039, 0, 1, 0.513432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478989,-99) , 
11, -1.26324, 0, 0, 0.491621,-99) , 
12, -0.0959941, 1, 0, 0.506732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493291,-99) , 
3, 2.45899, 0, 0, 0.499192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470587,-99) , 
13, 2.84904, 1, 0, 0.49498,-99) , 
3, 3.00384, 0, 0, 0.501419,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0227985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50559, 1, 1, 0.548446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460039,-99) , 
10, 2.14286, 1, 0, 0.499426,-99) , 
11, -1.235, 1, 0, 0.507972,-99) , 
NN(
NN(
0, 
0, 
-1, -1.87592, 0, 1, 0.505815,-99) , 
NN(
0, 
0, 
-1, -0.839267, 0, -1, 0.484499,-99) , 
3, 3.38877, 0, 0, 0.498359,-99) , 
12, 0.565884, 0, 0, 0.501757,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0136674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473078,-99) , 
12, -1.6952, 0, 0, 0.499808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446475,-99) , 
3, 1.26183, 1, 0, 0.482533,-99) , 
6, -0.904858, 0, 0, 0.498429,-99) , 
11, -4.10179, 1, 0, 0.500162,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0253229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464763,-99) , 
8, 1.62984, 0, 0, 0.51081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484074,-99) , 
3, 3.97204, 0, 0, 0.491519,-99) , 
7, 0.00792622, 0, 0, 0.494291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468346,-99) , 
7, 0.0237791, 1, 0, 0.493635,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0354662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491373,-99) , 
8, 1.44605, 0, 0, 0.530057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453957,-99) , 
3, 3.18535, 0, 0, 0.490228,-99) , 
12, -0.975405, 0, 0, 0.506467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
10, 0.625031, 0, 0, 0.504867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484843,-99) , 
10, 0.0612976, 1, 0, 0.489718,-99) , 
11, -2.37097, 1, 0, 0.494249,-99) , 
10, -0.428502, 1, 0, 0.497927,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00609146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499711,-99) , 
2, 0.214314, 0, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4665,-99) , 
5, 0.999252, 0, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468754,-99) , 
5, 0.998572, 0, 0, 0.499142,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0107521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498297,-99) , 
5, 0.999524, 1, 0, 0.499895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460875,-99) , 
8, 7.12435, 1, 0, 0.498745,-99) , 
10, 2.14286, 0, 0, 0.500219,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0178557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499415,-99) , 
11, -2.28143, 1, 0, 0.506587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487951,-99) , 
12, -1.04245, 0, 0, 0.497941,-99) , 
10, -0.142831, 0, 0, 0.503192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476704,-99) , 
8, 7.25014, 1, 0, 0.502511,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0239483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471309,-99) , 
10, 1.85718, 1, 0, 0.50454,-99) , 
11, -1.30433, 1, 0, 0.510016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485824,-99) , 
9, -946.347, 0, 0, 0.494056,-99) , 
10, 1.25968, 0, 0, 0.496439,-99) , 
12, 0.734552, 0, 0, 0.500772,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0222895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
11, -2.07668, 1, 0, 0.504253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490254,-99) , 
10, 0.349928, 0, 0, 0.494153,-99) , 
12, -0.367932, 0, 0, 0.500254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465171,-99) , 
5, 0.998571, 0, 0, 0.49932,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0121128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.46301, 1, 1, 0.503332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463924,-99) , 
8, 1.28549, 0, 0, 0.502083,-99) , 
NN(
0, 
0, 
-1, -1.017, 1, -1, 0.476365,-99) , 
8, 6.34485, 1, 0, 0.499831,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0291934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490343,-99) , 
8, 2.15116, 0, 0, 0.50605,-99) , 
10, -1.57135, 1, 0, 0.509074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494082,-99) , 
11, -1.74857, 0, 0, 0.498977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455761,-99) , 
12, 0.952395, 1, 0, 0.496315,-99) , 
6, -0.048623, 1, 0, 0.503459,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0130532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142634, 0, 1, 0.527336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497023,-99) , 
0, 0.499995, 1, 0, 0.51651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468142,-99) , 
5, 0.998571, 0, 0, 0.50093,-99) , 
NN(
0, 
0, 
-1, -0.931542, 1, -1, 0.469429,-99) , 
8, 1.80749, 0, 0, 0.498629,-99) , 
11, 0.489934, 0, 0, 0.500682,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.021481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03399, 1, 1, 0.511733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493409,-99) , 
11, -1.56545, 0, 0, 0.497548,-99) , 
8, 3.85309, 1, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526729,-99) , 
NN(
0, 
0, 
-1, -0.687608, 1, -1, 0.488896,-99) , 
10, -1.57155, 1, 0, 0.492164,-99) , 
8, 2.46485, 0, 0, 0.499113,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00925453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483544,-99) , 
13, 3.92371, 1, 0, 0.502847,-99) , 
2, 0.0702267, 0, 0, 0.513745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525429,-99) , 
NN(
0, 
0, 
-1, -1.85707, 0, -1, 0.498875,-99) , 
2, -0.214273, 1, 0, 0.500261,-99) , 
0, 0.503805, 0, 0, 0.501774,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0141596);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.34694, 1, 1, 0.526959,-99) , 
NN(
NN(
0, 
0, 
-1, 1.31282, 0, 1, 0.503839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467329,-99) , 
11, 1.86627, 0, 0, 0.483248,-99) , 
8, 1.59892, 0, 0, 0.501608,-99) , 
10, 1.85716, 0, 0, 0.503398,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0273339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.56202, 1, 1, 0.522934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489986,-99) , 
12, -0.811922, 1, 0, 0.504079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475993,-99) , 
12, -0.0484768, 0, 0, 0.49049,-99) , 
3, 4.03074, 0, 0, 0.496148,-99) , 
12, 2.32673, 0, 0, 0.498985,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0148285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.355413, 0, 1, 0.503816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447008,-99) , 
6, -0.916241, 1, 0, 0.485164,-99) , 
8, 1.5205, 0, 0, 0.502104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482753,-99) , 
10, 0.440014, 0, 0, 0.498104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456135,-99) , 
0, 0.496186, 0, 0, 0.484183,-99) , 
6, 0.712783, 1, 0, 0.500513,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0184315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492996,-99) , 
0, 0.494281, 1, 0, 0.502329,-99) , 
3, 5.26581, 0, 0, 0.508652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482024,-99) , 
2, 0.281369, 1, 0, 0.506694,-99) , 
NN(
0, 
0, 
-1, 1.00003, 1, -1, 0.4941,-99) , 
2, 0.0782769, 0, 0, 0.496793,-99) , 
2, -0.0713712, 1, 0, 0.498994,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0116565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49002,-99) , 
0, 0.495551, 0, 0, 0.51233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475368,-99) , 
8, 1.82117, 0, 0, 0.499892,-99) , 
11, 0.366343, 0, 0, 0.501385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471397,-99) , 
0, 0.489519, 0, 0, 0.500428,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0201856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40503, 0, 1, 0.525695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495266,-99) , 
12, 3.24974, 1, 0, 0.51153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494044,-99) , 
6, -0.619308, 1, 0, 0.497232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432882,-99) , 
10, -0.647713, 1, 0, 0.474425,-99) , 
8, 1.83587, 0, 0, 0.495442,-99) , 
11, 0.462236, 0, 0, 0.49732,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0176433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496442,-99) , 
11, 2.17978, 0, 0, 0.511916,-99) , 
12, 2.61597, 1, 0, 0.518631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49812,-99) , 
12, 0.674049, 0, 0, 0.501152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437113,-99) , 
10, 1.57146, 1, 0, 0.485783,-99) , 
11, -1.15038, 1, 0, 0.497997,-99) , 
11, 0.51471, 0, 0, 0.500346,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0170203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.28709, 1, 1, 0.505045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466483,-99) , 
8, 1.28341, 0, 0, 0.50382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465499,-99) , 
11, -2.4228, 0, 0, 0.489871,-99) , 
8, 6.35113, 1, 0, 0.502588,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0290417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.972317, 1, 1, 0.517905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47407,-99) , 
11, -3.42495, 0, 0, 0.507131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541516,-99) , 
NN(
0, 
0, 
-1, -0.406418, 0, -1, 0.489696,-99) , 
11, -3.49793, 1, 0, 0.493366,-99) , 
8, 5.05285, 0, 0, 0.497109,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0221391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18499, 0, 1, 0.52464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490109,-99) , 
4, 3.32109, 1, 0, 0.5143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490001,-99) , 
8, 5.1592, 1, 0, 0.501025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471235,-99) , 
11, -1.75292, 1, 0, 0.486889,-99) , 
10, 1.28573, 1, 0, 0.498983,-99) , 
12, 2.36781, 0, 0, 0.500548,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0226125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.898936, 0, 1, 0.521271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488449,-99) , 
4, 2.85366, 1, 0, 0.509547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496055,-99) , 
8, 4.6737, 1, 0, 0.501545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475833,-99) , 
10, -0.432633, 1, 0, 0.487851,-99) , 
3, 3.05449, 0, 0, 0.496152,-99) , 
12, 2.21325, 0, 0, 0.497662,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0115002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.920419, 0, 1, 0.511995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468236,-99) , 
12, -1.64239, 0, 0, 0.497769,-99) , 
3, 4.62977, 0, 0, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472566,-99) , 
10, 2.14285, 1, 0, 0.500418,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0224612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.17923, 1, 1, 0.509247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468644,-99) , 
0, 0.492377, 0, 0, 0.505433,-99) , 
NN(
NN(
0, 
0, 
-1, 2.11448, 0, 1, 0.508765,-99) , 
NN(
0, 
0, 
-1, -1.43932, 1, -1, 0.48728,-99) , 
12, 1.0368, 0, 0, 0.4957,-99) , 
3, 3.97278, 0, 0, 0.499432,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0182824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493891,-99) , 
6, 0.0388709, 1, 0, 0.500314,-99) , 
3, 6.43713, 0, 0, 0.501339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481035,-99) , 
4, 2.82071, 1, 0, 0.497056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467817,-99) , 
0, 0.494281, 0, 0, 0.490773,-99) , 
8, 2.04254, 0, 0, 0.498938,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0239568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.170396, 0, 1, 0.529018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422218,-99) , 
10, 0.727531, 0, 0, 0.484834,-99) , 
12, -0.74197, 1, 0, 0.506439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458248,-99) , 
5, 0.999564, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462838,-99) , 
12, -1.60634, 0, 0, 0.496707,-99) , 
3, 4.62524, 0, 0, 0.499285,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0129879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517043,-99) , 
NN(
NN(
0, 
0, 
-1, 1.98787, 0, 1, 0.508971,-99) , 
NN(
0, 
0, 
-1, 1.75652, 0, -1, 0.49455,-99) , 
12, 1.52881, 0, 0, 0.496973,-99) , 
10, 2.14286, 0, 0, 0.497798,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0262064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4472,-99) , 
10, 0.34842, 0, 0, 0.499249,-99) , 
12, -1.45077, 1, 0, 0.512504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490089,-99) , 
9, -951.286, 0, 0, 0.504376,-99) , 
NN(
0, 
0, 
-1, -0.537332, 0, -1, 0.493858,-99) , 
10, -0.714225, 1, 0, 0.496237,-99) , 
3, 5.30208, 0, 0, 0.49871,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0549889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441165,-99) , 
6, -0.904878, 0, 0, 0.504333,-99) , 
12, 3.04642, 0, 0, 0.507235,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28574, 0, 1, 0.526623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249541,-99) , 
9, -1.70977, 0, 0, 0.429961,-99) , 
9, -0.508482, 0, 0, 0.494578,-99) , 
9, -946.347, 1, 0, 0.501109,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0243242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493837,-99) , 
11, -3.6332, 1, 0, 0.497283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471135,-99) , 
10, -1.57067, 0, 0, 0.496059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509837,-99) , 
NN(
0, 
0, 
-1, 1.40142, 0, -1, 0.475754,-99) , 
10, 0.713453, 0, 0, 0.483329,-99) , 
8, 2.05248, 0, 0, 0.493121,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0260376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0714842, 1, 1, 0.522586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495717,-99) , 
8, 3.35124, 1, 0, 0.498782,-99) , 
5, 0.999524, 1, 0, 0.501437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439651,-99) , 
3, 1.28171, 0, 0, 0.500417,-99) , 
NN(
0, 
0, 
-1, 1.29656, 0, -1, 0.474097,-99) , 
10, 0.428623, 1, 0, 0.491255,-99) , 
3, 2.68396, 0, 0, 0.497404,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0155305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85798, 0, 1, 0.505341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477066,-99) , 
12, -0.0659274, 0, 0, 0.494198,-99) , 
3, 3.63686, 0, 0, 0.498942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463816,-99) , 
5, 0.998571, 0, 0, 0.498005,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0609984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487066,-99) , 
6, 0.676392, 1, 0, 0.509508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.22458,-99) , 
9, -1.57148, 0, 0, 0.492749,-99) , 
9, -951.286, 1, 0, 0.500043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487544,-99) , 
8, 1.83154, 0, 0, 0.496249,-99) , 
NN(
0, 
0, 
-1, 2.17864, 0, -1, 0.457668,-99) , 
12, -0.167221, 0, 0, 0.489823,-99) , 
3, 2.68396, 0, 0, 0.495989,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0211254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.824964, 1, 1, 0.515346,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428213, 0, -1, 0.494742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459836,-99) , 
9, -951.286, 0, 0, 0.47633,-99) , 
8, 2.1691, 0, 0, 0.491405,-99) , 
12, 2.45704, 0, 0, 0.493737,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0368634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441715,-99) , 
10, -0.354641, 0, 0, 0.495667,-99) , 
12, -1.81796, 1, 0, 0.501724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485284,-99) , 
10, -0.428515, 1, 0, 0.492356,-99) , 
NN(
0, 
0, 
-1, 3.08108, 0, -1, 0.471837,-99) , 
12, -0.898708, 0, 0, 0.488354,-99) , 
3, 4.62562, 0, 0, 0.491931,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0249768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487279,-99) , 
8, 1.37202, 0, 0, 0.514275,-99) , 
NN(
NN(
0, 
0, 
-1, 1.39928, 1, -1, 0.496946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476577,-99) , 
11, -2.29419, 1, 0, 0.48652,-99) , 
10, 0.714623, 1, 0, 0.493617,-99) , 
3, 1.37161, 1, 0, 0.495275,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0172447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.60304, 1, 1, 0.529667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48452,-99) , 
12, -1.15043, 0, 0, 0.499927,-99) , 
3, 5.17809, 0, 0, 0.501742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522236,-99) , 
NN(
0, 
0, 
-1, -0.777169, 1, -1, 0.476831,-99) , 
11, -1.94903, 0, 0, 0.486087,-99) , 
8, 5.92154, 1, 0, 0.499616,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0274206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489947,-99) , 
10, -0.570765, 0, 0, 0.512825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491798,-99) , 
10, -0.99997, 1, 0, 0.495195,-99) , 
11, -3.0565, 1, 0, 0.498599,-99) , 
NN(
0, 
0, 
-1, 6.25986, 0, -1, 0.476926,-99) , 
8, 6.77088, 1, 0, 0.497485,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0206873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.40776, 1, 1, 0.506261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484247,-99) , 
11, 2.33365, 0, 0, 0.491558,-99) , 
8, 2.17706, 0, 0, 0.502237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45167,-99) , 
0, 0.49809, 0, 0, 0.476878,-99) , 
8, 6.74379, 1, 0, 0.500867,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0260201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17473, 1, 1, 0.540083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469259,-99) , 
8, 1.26845, 0, 0, 0.497964,-99) , 
8, 1.53245, 0, 0, 0.517153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496316,-99) , 
12, 0.392846, 0, 0, 0.50076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455664,-99) , 
10, 1.00003, 1, 0, 0.483274,-99) , 
11, -1.40424, 1, 0, 0.496518,-99) , 
11, 0.181489, 0, 0, 0.499351,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0195096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0699875, 1, 1, 0.508283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494986,-99) , 
11, -0.368676, 0, 0, 0.496834,-99) , 
0, 0.49809, 1, 0, 0.502517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479145,-99) , 
0, 0.497138, 0, 0, 0.506066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44312,-99) , 
6, -0.87687, 1, 0, 0.489799,-99) , 
8, 1.62224, 0, 0, 0.50111,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0134879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482056,-99) , 
8, 6.34864, 1, 0, 0.501201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454645,-99) , 
10, 2.30612, 1, 0, 0.499905,-99) , 
10, -1.8571, 1, 0, 0.501407,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0291945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49884,-99) , 
10, 0.566082, 0, 0, 0.506169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481179,-99) , 
11, -1.94777, 1, 0, 0.494278,-99) , 
12, -0.0853085, 1, 0, 0.502387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476601,-99) , 
10, 1.28579, 1, 0, 0.504363,-99) , 
NN(
0, 
0, 
-1, 0.345818, 1, -1, 0.478878,-99) , 
12, 1.2502, 0, 0, 0.49169,-99) , 
3, 2.67757, 0, 0, 0.498169,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0206745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497391,-99) , 
9, -951.198, 1, 0, 0.502679,-99) , 
11, -4.09888, 1, 0, 0.504342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486216,-99) , 
10, 0.712404, 0, 0, 0.493342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438815,-99) , 
6, -0.756274, 1, 0, 0.484868,-99) , 
8, 2.01969, 0, 0, 0.50004,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.017618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.542717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478305,-99) , 
12, -2.16147, 1, 0, 0.494999,-99) , 
12, -1.66686, 0, 0, 0.519093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488824,-99) , 
8, 2.45896, 0, 0, 0.496531,-99) , 
12, -1.54983, 1, 0, 0.498551,-99) , 
10, -0.999966, 1, 0, 0.501627,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0217636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85732, 0, 1, 0.507299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45552,-99) , 
0, 0.496185, 0, 0, 0.486709,-99) , 
6, 0.740433, 1, 0, 0.504921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485576,-99) , 
12, 1.48026, 0, 0, 0.497039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460339,-99) , 
10, 1.2855, 1, 0, 0.492826,-99) , 
3, 2.35161, 0, 0, 0.500925,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0103384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
5, 0.999806, 1, 0, 0.499629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471771,-99) , 
5, 0.99932, 0, 0, 0.498762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452598,-99) , 
5, 0.998572, 0, 0, 0.497579,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0115503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.508018,-99) , 
NN(
0, 
0, 
-1, 1.28574, 1, -1, 0.496475,-99) , 
2, 0.0305183, 0, 0, 0.499933,-99) , 
NN(
0, 
0, 
-1, 3.66485, 0, -1, 0.477165,-99) , 
2, -0.214336, 0, 0, 0.498787,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0302667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499199,-99) , 
8, 2.0076, 0, 0, 0.516548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492479,-99) , 
11, -2.19481, 0, 0, 0.497801,-99) , 
12, -0.258756, 0, 0, 0.503824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486549,-99) , 
12, -0.608272, 1, 0, 0.491938,-99) , 
11, 1.16536, 0, 0, 0.494194,-99) , 
10, 0.142881, 1, 0, 0.49898,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0315047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77879, 0, 1, 0.514206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459542,-99) , 
13, 1.34034, 0, 0, 0.497877,-99) , 
3, 1.69462, 0, 0, 0.510814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486384,-99) , 
11, -2.05595, 1, 0, 0.492477,-99) , 
12, -0.323496, 1, 0, 0.497173,-99) , 
10, 0.428586, 1, 0, 0.505369,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.009575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479637,-99) , 
3, 5.92608, 1, 0, 0.49942,-99) , 
10, -1.57134, 1, 0, 0.500975,-99) , 
11, -4.09508, 1, 0, 0.502494,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0145101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497008,-99) , 
11, 0.922895, 0, 0, 0.521967,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.500002,-99) , 
12, 3.32765, 1, 0, 0.512227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490866,-99) , 
2, 0.0714191, 1, 0, 0.500903,-99) , 
NN(
0, 
0, 
-1, -0.990405, 1, -1, 0.468201,-99) , 
8, 1.83567, 0, 0, 0.498332,-99) , 
11, 0.462236, 0, 0, 0.49994,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00877962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.25018, 1, 1, 0.522471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499771,-99) , 
11, -2.94393, 1, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4625,-99) , 
5, 0.999048, 0, 0, 0.500548,-99) , 
8, 6.81617, 0, 0, 0.501695,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0148431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473045,-99) , 
11, -0.656057, 1, 0, 0.518464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499223,-99) , 
12, 2.10541, 0, 0, 0.500935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468226,-99) , 
13, 1.48846, 0, 0, 0.480225,-99) , 
8, 1.61055, 0, 0, 0.498609,-99) , 
10, 1.85714, 0, 0, 0.499986,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0196033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.663109, 0, 1, 0.553232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
11, 1.84825, 0, 0, 0.501571,-99) , 
11, -1.426, 1, 0, 0.509063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525643,-99) , 
NN(
0, 
0, 
-1, 1.82705, 0, -1, 0.494464,-99) , 
10, 1.04177, 0, 0, 0.496927,-99) , 
12, 0.443841, 0, 0, 0.501584,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0265801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49591,-99) , 
4, 1.17581, 0, 0, 0.520478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495703,-99) , 
4, 4.58692, 1, 0, 0.515678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487799,-99) , 
10, -0.766722, 0, 0, 0.510433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49267,-99) , 
10, -0.714229, 1, 0, 0.496533,-99) , 
11, -3.05726, 1, 0, 0.499436,-99) , 
0, 0.493328, 1, 0, 0.501977,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0238318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497051,-99) , 
5, 0.999994, 0, 0, 0.507513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468216,-99) , 
9, -951.286, 0, 0, 0.490448,-99) , 
5, 0.999864, 0, 0, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478399,-99) , 
5, 0.998571, 0, 0, 0.504581,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0136129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.67777, 1, 1, 0.505958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462774,-99) , 
8, 7.19048, 1, 0, 0.504786,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.020735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481542,-99) , 
8, 1.407, 0, 0, 0.505695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479336,-99) , 
10, 0.720044, 0, 0, 0.49026,-99) , 
6, 0.463767, 1, 0, 0.503111,-99) , 
6, 0.808181, 0, 0, 0.504095,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0134256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491811,-99) , 
9, -951.286, 1, 0, 0.511543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480432,-99) , 
3, 1.81058, 0, 0, 0.500701,-99) , 
11, 0.125517, 0, 0, 0.502252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468834,-99) , 
3, 3.65678, 0, 0, 0.485022,-99) , 
2, 0.214201, 1, 0, 0.501365,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0295894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495741,-99) , 
12, -1.03757, 0, 0, 0.528789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480309,-99) , 
12, -0.0763213, 0, 0, 0.499502,-99) , 
11, -2.58293, 1, 0, 0.505111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490181,-99) , 
12, -0.898867, 1, 0, 0.504135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442565,-99) , 
11, -2.7472, 0, 0, 0.472601,-99) , 
3, 4.42013, 0, 0, 0.496625,-99) , 
8, 4.21999, 1, 0, 0.501735,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0214349);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470233,-99) , 
13, 5.0768, 1, 0, 0.513921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
8, 6.75527, 0, 0, 0.49719,-99) , 
11, -3.48601, 1, 0, 0.498847,-99) , 
10, -1.85705, 1, 0, 0.499651,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0214526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445512,-99) , 
10, 0.209804, 0, 0, 0.501548,-99) , 
12, -1.40688, 1, 0, 0.513434,-99) , 
NN(
NN(
0, 
0, 
-1, -3.60876, 1, 1, 0.502687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439839,-99) , 
11, -3.09976, 0, 0, 0.48734,-99) , 
8, 5.26984, 1, 0, 0.501191,-99) , 
3, 5.30156, 0, 0, 0.503049,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0242632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499945,-99) , 
11, -2.31234, 1, 0, 0.514007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48558,-99) , 
3, 3.274, 0, 0, 0.501064,-99) , 
6, -0.428268, 1, 0, 0.503826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470794,-99) , 
9, -946.347, 0, 0, 0.486094,-99) , 
11, 2.20174, 0, 0, 0.493426,-99) , 
8, 2.04337, 0, 0, 0.501446,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0302796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42189, 1, 1, 0.515412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490999,-99) , 
11, -1.94903, 0, 0, 0.497422,-99) , 
8, 3.13405, 1, 0, 0.502293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468606,-99) , 
9, -951.286, 0, 0, 0.482243,-99) , 
11, 2.38599, 0, 0, 0.489283,-99) , 
8, 2.02936, 0, 0, 0.499397,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0228458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47611, 1, 1, 0.530722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466021,-99) , 
9, -949.846, 1, 0, 0.48908,-99) , 
11, -3.01279, 0, 0, 0.50875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55003,-99) , 
NN(
0, 
0, 
-1, 2.04249, 0, -1, 0.495839,-99) , 
12, -1.33113, 1, 0, 0.498368,-99) , 
10, -0.714215, 1, 0, 0.500635,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0223676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.31704, 0, 1, 0.505576,-99) , 
NN(
0, 
0, 
-1, 3.64305, 0, -1, 0.483177,-99) , 
9, 0.877635, 1, 0, 0.502964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475283,-99) , 
11, -1.73055, 1, 0, 0.518217,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480905,-99) , 
3, 4.95431, 0, 0, 0.490616,-99) , 
10, 1.00004, 1, 0, 0.500181,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0243642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485065,-99) , 
10, -0.998823, 0, 0, 0.507409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483535,-99) , 
12, 1.27832, 0, 0, 0.493898,-99) , 
3, 2.8955, 0, 0, 0.501407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458907,-99) , 
8, 7.25014, 1, 0, 0.500334,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0122634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499815,-99) , 
0, 0.506117, 0, 0, 0.501368,-99) , 
5, 0.999524, 1, 0, 0.502949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486547,-99) , 
9, -949.006, 0, 0, 0.49326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460071,-99) , 
6, 0.713013, 1, 0, 0.490212,-99) , 
0, 0.497138, 0, 0, 0.497773,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0292477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
11, -2.13083, 0, 0, 0.506597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446555,-99) , 
3, 1.23972, 0, 0, 0.484587,-99) , 
3, 1.39372, 0, 0, 0.504119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46973,-99) , 
11, -2.40375, 1, 0, 0.50262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470699,-99) , 
12, 1.06614, 0, 0, 0.48678,-99) , 
11, -2.01183, 1, 0, 0.4922,-99) , 
10, 0.142875, 1, 0, 0.498137,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0213403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483531,-99) , 
3, 2.47902, 0, 0, 0.51269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479424,-99) , 
3, 3.36041, 0, 0, 0.500499,-99) , 
8, 3.16779, 1, 0, 0.502635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495838,-99) , 
4, 2.37592, 1, 0, 0.514099,-99) , 
NN(
0, 
0, 
-1, 1.28531, 1, -1, 0.486683,-99) , 
0, 0.502852, 0, 0, 0.491704,-99) , 
8, 2.47112, 0, 0, 0.499136,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0118665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.513513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479214,-99) , 
8, 5.64913, 1, 0, 0.497463,-99) , 
6, 0.807615, 0, 0, 0.498799,-99) , 
4, 4.61402, 0, 0, 0.501719,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00908133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499571,-99) , 
10, 2.14287, 0, 0, 0.501001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452141,-99) , 
5, 0.999705, 0, 0, 0.499646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461836,-99) , 
13, 5.3837, 1, 0, 0.481698,-99) , 
5, 0.999524, 0, 0, 0.498329,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0148098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494787,-99) , 
12, 0.096814, 0, 0, 0.49895,-99) , 
11, -4.06618, 1, 0, 0.500101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49211,-99) , 
8, 1.36823, 0, 0, 0.496651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444143,-99) , 
12, 2.03605, 0, 0, 0.480165,-99) , 
8, 1.61437, 0, 0, 0.497924,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0135036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6033, 1, 1, 0.502848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474291,-99) , 
10, -1.57008, 0, 0, 0.501517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497305,-99) , 
6, -0.940286, 1, 0, 0.507939,-99) , 
NN(
0, 
0, 
-1, 1.54158, 0, -1, 0.480838,-99) , 
11, 0.969879, 0, 0, 0.490917,-99) , 
8, 2.05077, 0, 0, 0.499063,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0317119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488257,-99) , 
8, 1.52762, 0, 0, 0.522366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491703,-99) , 
12, -0.489794, 0, 0, 0.498417,-99) , 
11, -1.79549, 0, 0, 0.50585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487935,-99) , 
11, -2.18028, 1, 0, 0.492724,-99) , 
12, -0.523666, 1, 0, 0.49557,-99) , 
10, 0.142924, 1, 0, 0.500662,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0111302);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498229,-99) , 
5, 0.999931, 1, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470983,-99) , 
5, 0.999637, 0, 0, 0.499119,-99) , 
5, 0.999048, 1, 0, 0.500253,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0230784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.387588, 0, 1, 0.53586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490332,-99) , 
12, -2.07761, 0, 0, 0.517146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492284,-99) , 
8, 3.96619, 1, 0, 0.506621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48683,-99) , 
9, -946.347, 1, 0, 0.495261,-99) , 
11, -2.74467, 1, 0, 0.498149,-99) , 
10, -1.28563, 1, 0, 0.499972,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.011204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499458,-99) , 
11, 0.0496582, 0, 0, 0.501789,-99) , 
4, 8.81464, 0, 0, 0.502925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456216,-99) , 
12, -0.448576, 1, 0, 0.486565,-99) , 
5, 0.999524, 0, 0, 0.501723,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0231555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.604382, 0, 1, 0.543149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493993,-99) , 
11, -3.07233, 0, 0, 0.502359,-99) , 
3, 5.34906, 0, 0, 0.512097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498238,-99) , 
11, -2.65925, 1, 0, 0.503307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406939,-99) , 
10, 0.403049, 0, 0, 0.485039,-99) , 
8, 5.05441, 1, 0, 0.499711,-99) , 
12, -0.884314, 1, 0, 0.502925,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0268201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.35499, 0, 1, 0.514463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458613,-99) , 
8, 1.3963, 0, 0, 0.495579,-99) , 
3, 1.69799, 0, 0, 0.510306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49331,-99) , 
12, -0.605529, 1, 0, 0.497204,-99) , 
11, 1.15948, 0, 0, 0.499815,-99) , 
10, 0.142905, 1, 0, 0.505008,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0266104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42914, 0, 1, 0.514098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495475,-99) , 
11, -2.3135, 1, 0, 0.503299,-99) , 
10, 0.14316, 1, 0, 0.508399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477379,-99) , 
6, -0.856252, 1, 0, 0.504709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452841,-99) , 
10, -1.02231, 1, 0, 0.475675,-99) , 
11, 0.147076, 0, 0, 0.495081,-99) , 
3, 1.69591, 0, 0, 0.506092,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0269482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478846,-99) , 
0, 0.495234, 0, 0, 0.504188,-99) , 
12, 0.297324, 1, 0, 0.513845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47075,-99) , 
8, 1.43541, 0, 0, 0.511582,-99) , 
NN(
0, 
0, 
-1, 2.12941, 0, -1, 0.494986,-99) , 
12, 0.464861, 0, 0, 0.499387,-99) , 
10, 1.00002, 0, 0, 0.502721,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.019117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.611242, 1, 1, 0.506923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483505,-99) , 
8, 1.66356, 0, 0, 0.4943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449287,-99) , 
6, -0.731753, 1, 0, 0.489229,-99) , 
8, 2.03279, 0, 0, 0.502947,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.015079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489727,-99) , 
12, -1.91489, 0, 0, 0.524527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498104,-99) , 
10, 1.97959, 0, 0, 0.499957,-99) , 
10, -1.28568, 1, 0, 0.50238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446448,-99) , 
8, 5.93242, 1, 0, 0.479156,-99) , 
5, 0.999524, 0, 0, 0.500709,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0136571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47618, 1, 1, 0.534836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487,-99) , 
12, -2.16314, 1, 0, 0.499185,-99) , 
12, -1.55135, 0, 0, 0.515827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462574,-99) , 
3, 6.2492, 1, 0, 0.499844,-99) , 
12, -1.52047, 1, 0, 0.501689,-99) , 
10, -0.999972, 1, 0, 0.50379,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0172162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499899,-99) , 
3, 5.86126, 0, 0, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475458,-99) , 
5, 0.998571, 0, 0, 0.50079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465252,-99) , 
9, -946.347, 0, 0, 0.480122,-99) , 
11, 2.31451, 0, 0, 0.489539,-99) , 
8, 2.05054, 0, 0, 0.498205,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0161465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529029,-99) , 
NN(
NN(
0, 
0, 
-1, -1.32102, 1, 1, 0.510169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44985,-99) , 
3, 1.90401, 0, 0, 0.500629,-99) , 
12, 0.664828, 0, 0, 0.50389,-99) , 
10, -1.85711, 1, 0, 0.504759,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0180498);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.43943, 0, 1, 0.507588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472829,-99) , 
8, 1.31641, 0, 0, 0.498842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45881,-99) , 
6, -0.749228, 1, 0, 0.492393,-99) , 
8, 2.05881, 0, 0, 0.504104,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.011805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497142,-99) , 
3, 4.94646, 0, 0, 0.499287,-99) , 
10, 2.14285, 0, 0, 0.50052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458289,-99) , 
5, 0.998571, 0, 0, 0.499424,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0280793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6551, 1, 1, 0.506016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446164,-99) , 
6, -0.899206, 1, 0, 0.484148,-99) , 
8, 1.57334, 0, 0, 0.503148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461876,-99) , 
11, -3.59071, 0, 0, 0.508466,-99) , 
NN(
0, 
0, 
-1, 0.154207, 0, -1, 0.478041,-99) , 
12, -1.16137, 1, 0, 0.488528,-99) , 
8, 5.0601, 1, 0, 0.499295,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.025592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91829, 0, 1, 0.521187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477269,-99) , 
8, 3.82819, 1, 0, 0.4953,-99) , 
11, -2.93143, 0, 0, 0.506945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
6, 0.699963, 0, 0, 0.497339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445974,-99) , 
11, -2.48821, 0, 0, 0.470932,-99) , 
13, 6.39245, 1, 0, 0.494971,-99) , 
10, -0.714259, 1, 0, 0.497591,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0255723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713887, 1, 1, 0.523711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470192,-99) , 
10, -0.569777, 0, 0, 0.493868,-99) , 
11, -3.05778, 0, 0, 0.513199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486015,-99) , 
5, 0.999982, 0, 0, 0.499683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466989,-99) , 
5, 0.999619, 0, 0, 0.498206,-99) , 
6, 0.427511, 0, 0, 0.501685,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0169907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493364,-99) , 
13, 5.00917, 1, 0, 0.520395,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494722,-99) , 
11, -3.46001, 1, 0, 0.497446,-99) , 
10, -1.85707, 1, 0, 0.498615,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0255373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.948999, 1, 1, 0.507286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489626,-99) , 
11, -2.64991, 0, 0, 0.496033,-99) , 
10, -0.426696, 0, 0, 0.504249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492995,-99) , 
12, 3.40115, 1, 0, 0.510044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465848,-99) , 
10, -1.35241, 1, 0, 0.475615,-99) , 
11, 0.889267, 0, 0, 0.489097,-99) , 
8, 2.05308, 0, 0, 0.500779,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460138,-99) , 
4, 7.32195, 1, 0, 0.500751,-99) , 
4, 9.02021, 0, 0, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464042,-99) , 
5, 0.998571, 0, 0, 0.501041,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.023026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02532, 0, 1, 0.520664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492213,-99) , 
9, -951.286, 1, 0, 0.510903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492615,-99) , 
11, -3.30403, 1, 0, 0.496259,-99) , 
NN(
0, 
0, 
-1, 2.23443, 1, -1, 0.453713,-99) , 
8, 1.83034, 0, 0, 0.49352,-99) , 
11, 0.184117, 0, 0, 0.495916,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0185302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495442,-99) , 
11, -1.9917, 0, 0, 0.501633,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.490304,-99) , 
8, 2.4498, 0, 0, 0.498026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463791,-99) , 
5, 0.998572, 0, 0, 0.497131,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0262533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497541,-99) , 
10, -0.230062, 0, 0, 0.513551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490015,-99) , 
12, 0.992724, 0, 0, 0.496391,-99) , 
11, -2.85403, 1, 0, 0.500227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519005,-99) , 
NN(
0, 
0, 
-1, 6.59886, 1, -1, 0.464225,-99) , 
12, -1.10529, 1, 0, 0.484916,-99) , 
8, 5.91624, 1, 0, 0.498125,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0173074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.01233, 1, 1, 0.506369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444979,-99) , 
10, 1.85714, 1, 0, 0.494375,-99) , 
11, -1.14772, 1, 0, 0.50287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471063,-99) , 
0, 0.505709, 1, 0, 0.501524,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.021559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.17828, 0, 1, 0.517399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482671,-99) , 
3, 1.39222, 0, 0, 0.51257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
3, 5.26113, 0, 0, 0.499903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44182,-99) , 
9, -951.286, 1, 0, 0.464188,-99) , 
13, 6.39245, 1, 0, 0.496749,-99) , 
10, -0.714261, 1, 0, 0.500212,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0220433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.516793, 1, 1, 0.508477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490247,-99) , 
10, -0.996606, 1, 0, 0.497252,-99) , 
3, 2.1254, 0, 0, 0.506291,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.511122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457376,-99) , 
11, 1.09272, 0, 0, 0.490281,-99) , 
8, 1.62042, 0, 0, 0.504514,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0214286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470226,-99) , 
8, 5.05953, 1, 0, 0.501292,-99) , 
3, 5.05811, 0, 0, 0.502688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476329,-99) , 
11, -3.61389, 0, 0, 0.511275,-99) , 
NN(
0, 
0, 
-1, -2.60233, 0, -1, 0.471604,-99) , 
12, -1.07984, 1, 0, 0.486596,-99) , 
8, 5.51426, 1, 0, 0.499564,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0142967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478705,-99) , 
8, 1.46024, 0, 0, 0.499976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464012,-99) , 
5, 0.999352, 0, 0, 0.498822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47301,-99) , 
6, 0.835382, 1, 0, 0.495239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450944,-99) , 
3, 5.51912, 0, 0, 0.481636,-99) , 
6, 0.617845, 1, 0, 0.496511,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0204935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.47894, 1, 1, 0.507097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480552,-99) , 
11, -2.66678, 0, 0, 0.494344,-99) , 
8, 4.17392, 1, 0, 0.502023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508822,-99) , 
NN(
0, 
0, 
-1, 1.00004, 1, -1, 0.489295,-99) , 
0, 0.490108, 1, 0, 0.49112,-99) , 
0, 0.49809, 0, 0, 0.496648,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0233312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462086,-99) , 
12, 0.954292, 1, 0, 0.499482,-99) , 
1, -0.00456674, 1, 0, 0.502877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46481,-99) , 
10, 1.28559, 1, 0, 0.501129,-99) , 
NN(
0, 
0, 
-1, -2.56571, 1, -1, 0.462689,-99) , 
12, -0.330684, 0, 0, 0.49429,-99) , 
3, 3.01949, 0, 0, 0.498972,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0149134);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536499,-99) , 
NN(
0, 
0, 
-1, -0.918279, 0, -1, 0.493949,-99) , 
10, -1.57136, 1, 0, 0.49551,-99) , 
11, -3.76215, 1, 0, 0.496664,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0117301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477573,-99) , 
5, 0.999524, 0, 0, 0.500065,-99) , 
6, 0.80818, 0, 0, 0.500877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486606,-99) , 
10, 1.1631, 1, 0, 0.501318,-99) , 
NN(
0, 
0, 
-1, 3.87519, 0, -1, 0.474076,-99) , 
10, 0.428401, 0, 0, 0.485196,-99) , 
0, 0.502852, 1, 0, 0.498481,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0154851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491554,-99) , 
3, 1.58087, 0, 0, 0.50258,-99) , 
13, 1.39271, 1, 0, 0.508574,-99) , 
NN(
0, 
0, 
-1, 1.74216, 0, -1, 0.493007,-99) , 
12, 2.39216, 0, 0, 0.494593,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0273686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491554,-99) , 
5, 0.999998, 0, 0, 0.50114,-99) , 
NN(
0, 
0, 
-1, -0.428313, 0, -1, 0.485333,-99) , 
5, 0.999955, 0, 0, 0.497376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475499,-99) , 
5, 0.999048, 0, 0, 0.496453,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0229117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.525343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487698,-99) , 
13, 2.61173, 1, 0, 0.499017,-99) , 
10, -0.142855, 0, 0, 0.515305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495031,-99) , 
1, -0.00385048, 1, 0, 0.497606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478357,-99) , 
10, -1.00019, 1, 0, 0.485069,-99) , 
3, 2.0368, 0, 0, 0.494356,-99) , 
2, -0.0714351, 1, 0, 0.498249,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0123549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488335,-99) , 
8, 1.59989, 0, 0, 0.501351,-99) , 
10, 2.14287, 0, 0, 0.502524,-99) , 
NN(
0, 
0, 
-1, -0.193588, 1, -1, 0.479781,-99) , 
5, 0.999524, 0, 0, 0.500895,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0155023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8131, 1, 1, 0.510071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486782,-99) , 
12, -0.147257, 0, 0, 0.496294,-99) , 
3, 4.1182, 0, 0, 0.500972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457429,-99) , 
8, 7.21016, 1, 0, 0.499853,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0178115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498795,-99) , 
0, 0.498091, 1, 0, 0.517116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492764,-99) , 
11, -1.99272, 1, 0, 0.500358,-99) , 
12, 1.67253, 0, 0, 0.501447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490651,-99) , 
3, 1.51053, 0, 0, 0.498294,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.455524,-99) , 
12, 1.49659, 0, 0, 0.485662,-99) , 
3, 1.69641, 0, 0, 0.498711,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.013841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498631,-99) , 
12, 0.967012, 0, 0, 0.50274,-99) , 
NN(
0, 
0, 
-1, -0.836655, 1, -1, 0.487276,-99) , 
3, 1.63832, 0, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479504,-99) , 
6, 0.80707, 1, 0, 0.499236,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00948176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499241,-99) , 
0, 0.505709, 0, 0, 0.500368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466914,-99) , 
10, -0.14378, 0, 0, 0.483423,-99) , 
8, 1.61437, 0, 0, 0.498497,-99) , 
5, 0.998571, 1, 0, 0.499605,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0306387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49419,-99) , 
8, 3.15969, 1, 0, 0.500868,-99) , 
10, 1.55973, 0, 0, 0.503357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486318,-99) , 
8, 2.37948, 0, 0, 0.497088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457307,-99) , 
10, 1.85715, 1, 0, 0.490852,-99) , 
11, -1.20998, 1, 0, 0.499552,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0182237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.515709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485577,-99) , 
8, 6.27949, 1, 0, 0.501345,-99) , 
2, -0.0714699, 1, 0, 0.503973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498129,-99) , 
8, 2.22622, 0, 0, 0.503842,-99) , 
NN(
0, 
0, 
-1, -0.748135, 0, -1, 0.468451,-99) , 
12, 0.473344, 0, 0, 0.495356,-99) , 
3, 2.34697, 0, 0, 0.501119,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.012193);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484112,-99) , 
4, 6.21124, 1, 0, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46026,-99) , 
6, 0.796326, 1, 0, 0.499222,-99) , 
3, 6.2492, 0, 0, 0.500799,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0129782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.72436, 0, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476854,-99) , 
5, 0.999728, 0, 0, 0.502718,-99) , 
NN(
0, 
0, 
-1, 5.83668, 1, -1, 0.46437,-99) , 
5, 0.999524, 0, 0, 0.500038,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0196217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1723, 0, 1, 0.504324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477534,-99) , 
12, 1.40871, 1, 0, 0.503238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461009,-99) , 
8, 1.4051, 0, 0, 0.500899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445348,-99) , 
6, -0.803877, 1, 0, 0.474308,-99) , 
10, 0.714093, 1, 0, 0.494387,-99) , 
8, 2.46489, 0, 0, 0.500461,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0242436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494044,-99) , 
11, -2.8445, 1, 0, 0.497802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474499,-99) , 
12, -1.41772, 1, 0, 0.4882,-99) , 
8, 5.09954, 1, 0, 0.495611,-99) , 
3, 6.26527, 0, 0, 0.496699,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0115048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490367,-99) , 
11, 1.02286, 0, 0, 0.522329,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.501008,-99) , 
9, -951.286, 1, 0, 0.514933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521184,-99) , 
NN(
0, 
0, 
-1, 1.65306, 1, -1, 0.497271,-99) , 
10, 2.14286, 0, 0, 0.49818,-99) , 
11, 0.181489, 0, 0, 0.500494,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0308148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475869,-99) , 
10, -1.13505, 0, 0, 0.524131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450734,-99) , 
10, -0.0646456, 0, 0, 0.498445,-99) , 
12, -1.44528, 1, 0, 0.504531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494148,-99) , 
11, -2.44924, 1, 0, 0.499121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447306,-99) , 
11, -2.74355, 0, 0, 0.473455,-99) , 
13, 3.9703, 1, 0, 0.494917,-99) , 
3, 4.30016, 0, 0, 0.498036,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0317743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491798,-99) , 
8, 3.98174, 1, 0, 0.527749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495771,-99) , 
8, 5.94823, 0, 0, 0.499156,-99) , 
11, -2.05293, 1, 0, 0.504192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488499,-99) , 
11, -2.55452, 0, 0, 0.498769,-99) , 
NN(
0, 
0, 
-1, -1.24801, 1, -1, 0.46456,-99) , 
3, 2.81706, 0, 0, 0.493414,-99) , 
12, -0.367079, 0, 0, 0.499841,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0222513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471375,-99) , 
6, -0.905991, 0, 0, 0.505542,-99) , 
11, 2.21123, 0, 0, 0.515223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490195,-99) , 
10, 1.28621, 1, 0, 0.504418,-99) , 
NN(
0, 
0, 
-1, 2.23443, 1, -1, 0.47649,-99) , 
8, 1.83567, 0, 0, 0.502611,-99) , 
11, 0.181489, 0, 0, 0.504332,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0257836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495338,-99) , 
10, 0.71423, 1, 0, 0.510227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480893,-99) , 
12, -0.956772, 0, 0, 0.507625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493037,-99) , 
12, -0.832606, 1, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, 5.81202, 1, -1, 0.481608,-99) , 
0, 0.496186, 0, 0, 0.495005,-99) , 
6, -0.239126, 1, 0, 0.501041,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0204491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495041,-99) , 
3, 1.77096, 0, 0, 0.504676,-99) , 
10, -1.57154, 1, 0, 0.510158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494217,-99) , 
5, 0.999048, 1, 0, 0.495779,-99) , 
11, -4.07628, 1, 0, 0.497558,-99) , 
6, -0.619326, 1, 0, 0.501268,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00543022);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.06114, 0, 1, 0.502069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473234,-99) , 
5, 0.998571, 0, 0, 0.501316,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0177244);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.42533, 0, 1, 0.51597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496467,-99) , 
12, -0.308667, 0, 0, 0.502581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467295,-99) , 
11, -0.17573, 0, 0, 0.479693,-99) , 
3, 1.79123, 0, 0, 0.500172,-99) , 
11, 0.462236, 0, 0, 0.502006,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0241509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.518371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467308,-99) , 
6, 0.233499, 1, 0, 0.514019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496353,-99) , 
11, -1.19944, 0, 0, 0.499114,-99) , 
10, 1.46897, 0, 0, 0.501839,-99) , 
12, 0.734552, 0, 0, 0.505731,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0302118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495778,-99) , 
12, 1.03528, 0, 0, 0.504625,-99) , 
11, -2.11849, 1, 0, 0.508483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490284,-99) , 
12, -0.442978, 1, 0, 0.524974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487208,-99) , 
11, -2.14866, 0, 0, 0.491873,-99) , 
10, 0.282997, 0, 0, 0.49786,-99) , 
12, -0.202381, 0, 0, 0.50374,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0168458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494832,-99) , 
0, 0.498498, 1, 0, 0.510883,-99) , 
0, 0.502852, 0, 0, 0.515635,-99) , 
NN(
NN(
0, 
0, 
-1, -3.30711, 1, 1, 0.504774,-99) , 
NN(
0, 
0, 
-1, 2.27964, 1, -1, 0.474631,-99) , 
3, 1.81725, 0, 0, 0.501857,-99) , 
11, 0.181489, 0, 0, 0.503772,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.020479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.63433, 1, 1, 0.516361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494638,-99) , 
12, 0.0961618, 0, 0, 0.502504,-99) , 
3, 4.64099, 0, 0, 0.506299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482617,-99) , 
8, 2.24932, 0, 0, 0.497436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474633,-99) , 
3, 5.2823, 1, 0, 0.494501,-99) , 
0, 0.500947, 1, 0, 0.503134,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0129004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
2, 0.0710359, 1, 0, 0.506824,-99) , 
10, 0.999958, 0, 0, 0.512476,-99) , 
NN(
NN(
0, 
0, 
-1, 0.207672, 0, 1, 0.503021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466934,-99) , 
10, 2.14286, 1, 0, 0.501647,-99) , 
4, 4.60728, 0, 0, 0.503793,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0162674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.526148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499432,-99) , 
11, -3.40776, 1, 0, 0.502399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48634,-99) , 
10, -1.57147, 1, 0, 0.490601,-99) , 
3, 2.16234, 0, 0, 0.498768,-99) , 
8, 6.77885, 0, 0, 0.500273,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0136241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.505359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450745,-99) , 
0, 0.494281, 0, 0, 0.487393,-99) , 
5, 0.999864, 0, 0, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475337,-99) , 
5, 0.998571, 0, 0, 0.502286,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0316244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482075,-99) , 
12, -0.543215, 0, 0, 0.500702,-99) , 
11, -3.60876, 1, 0, 0.503233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466775,-99) , 
11, -3.3469, 0, 0, 0.507625,-99) , 
NN(
0, 
0, 
-1, 0.560226, 0, -1, 0.47713,-99) , 
12, -0.847455, 1, 0, 0.491468,-99) , 
8, 5.51426, 1, 0, 0.500942,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0167434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493345,-99) , 
10, 0.183885, 1, 0, 0.500389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448659,-99) , 
6, -0.922816, 1, 0, 0.482297,-99) , 
3, 1.3752, 0, 0, 0.498935,-99) , 
10, 2.14283, 0, 0, 0.499941,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00838089);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499109,-99) , 
2, 0.0714191, 0, 0, 0.500976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469579,-99) , 
5, 0.999252, 0, 0, 0.500136,-99) , 
5, 0.998571, 1, 0, 0.501219,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0291136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48493,-99) , 
10, -0.28267, 0, 0, 0.501874,-99) , 
8, 3.43827, 1, 0, 0.509606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491804,-99) , 
8, 4.62939, 0, 0, 0.494779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45447,-99) , 
5, 0.999524, 0, 0, 0.492446,-99) , 
11, -2.63082, 1, 0, 0.498023,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0164774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499351,-99) , 
3, 3.12675, 0, 0, 0.504075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485176,-99) , 
12, -1.47751, 1, 0, 0.491923,-99) , 
6, 0.330464, 1, 0, 0.501058,-99) , 
5, 0.999048, 1, 0, 0.502229,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0275332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491088,-99) , 
8, 1.45196, 0, 0, 0.515782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483055,-99) , 
3, 2.46041, 0, 0, 0.504188,-99) , 
12, 0.76598, 0, 0, 0.507097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445629,-99) , 
0, 0.49809, 1, 0, 0.477119,-99) , 
9, -951.286, 0, 0, 0.494195,-99) , 
10, 1.57133, 1, 0, 0.505732,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_6_8::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_6_8::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_6_8 *ReadBDT_maker_LHC19c2a_6_8(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_6_8(theInpVar);
  }
}
