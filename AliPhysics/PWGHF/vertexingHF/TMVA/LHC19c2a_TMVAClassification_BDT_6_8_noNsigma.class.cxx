#include "LHC19c2a_TMVAClassification_BDT_6_8_noNsigma.class.h"

double ReadBDT_LHC19c2a_6_8_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_6_8_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.347224936533026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402069,-99) , 
5, 0.508612, 1, 0, 0.602278,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.384018,-99) , 
5, -0.714586, 0, 0, 0.551317,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.124997,-99) , 
4, 0.999524, 0, 0, 0.499275,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.255231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440395,-99) , 
5, -0.810367, 0, 0, 0.592699,-99) , 
NN(
0, 
0, 
-1, -0.619848, 0, -1, 0.451814,-99) , 
4, 0.999977, 0, 0, 0.54554,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.138218,-99) , 
4, 0.999524, 0, 0, 0.497879,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.240498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416782,-99) , 
5, 0.612813, 1, 0, 0.57952,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.453761,-99) , 
5, -0.619448, 0, 0, 0.542643,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.158486,-99) , 
4, 0.999524, 0, 0, 0.498919,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.192232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484557,-99) , 
5, -0.809855, 0, 0, 0.560266,-99) , 
NN(
0, 
0, 
-1, -0.526132, 0, -1, 0.431458,-99) , 
4, 0.999932, 0, 0, 0.538239,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.175809,-99) , 
4, 0.999524, 0, 0, 0.498154,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.150757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999994, 0, 1, 0.542118,-99) , 
NN(
0, 
0, 
-1, -0.0534122, 0, -1, 0.41439,-99) , 
4, 0.999864, 0, 0, 0.530092,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.188398,-99) , 
4, 0.999524, 0, 0, 0.493269,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.14959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475418,-99) , 
5, -0.512176, 0, 0, 0.524302,-99) , 
NN(
0, 
0, 
-1, 0.80225, 1, -1, 0.398755,-99) , 
5, 0.707386, 1, 0, 0.514927,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.199482,-99) , 
4, 0.999524, 0, 0, 0.48155,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.140569);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453258,-99) , 
5, 0.331928, 1, 0, 0.519096,-99) , 
NN(
0, 
0, 
-1, -0.23973, 0, -1, 0.385132,-99) , 
4, 0.999819, 0, 0, 0.505244,-99) , 
NN(
0, 
0, 
-1, 0.997324, 0, -1, 0.151676,-99) , 
4, 0.999048, 0, 0, 0.480655,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.111799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477414,-99) , 
4, 0.999987, 0, 0, 0.50853,-99) , 
NN(
0, 
0, 
-1, 0.140321, 0, -1, 0.367561,-99) , 
4, 0.999728, 0, 0, 0.498427,-99) , 
NN(
0, 
0, 
-1, 0.997324, 0, -1, 0.163308,-99) , 
4, 0.999048, 0, 0, 0.475486,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.101907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480029,-99) , 
0, 0.499043, 1, 0, 0.506877,-99) , 
NN(
0, 
0, 
-1, 0.138981, 0, -1, 0.381322,-99) , 
4, 0.999728, 0, 0, 0.497911,-99) , 
NN(
0, 
0, 
-1, 0.997324, 0, -1, 0.162174,-99) , 
4, 0.999048, 0, 0, 0.47574,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0970514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477832,-99) , 
5, -0.429173, 0, 0, 0.504599,-99) , 
NN(
0, 
0, 
-1, 0.135852, 0, -1, 0.390868,-99) , 
4, 0.999728, 0, 0, 0.49648,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.17203,-99) , 
4, 0.999048, 0, 0, 0.475206,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0813655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458264,-99) , 
5, 0.425497, 1, 0, 0.499169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392277,-99) , 
4, 0.999637, 0, 0, 0.493539,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.184619,-99) , 
4, 0.999048, 0, 0, 0.473401,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0889879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474322,-99) , 
4, 0.999991, 0, 0, 0.496784,-99) , 
NN(
0, 
0, 
-1, -0.144709, 0, -1, 0.429978,-99) , 
4, 0.999819, 0, 0, 0.489985,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.195608,-99) , 
4, 0.999048, 0, 0, 0.470909,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0958707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480668,-99) , 
5, 0.199142, 1, 0, 0.506308,-99) , 
NN(
0, 
0, 
-1, 0.999909, 0, -1, 0.461408,-99) , 
5, -0.52487, 0, 0, 0.490864,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.191119,-99) , 
4, 0.999048, 0, 0, 0.47197,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0809722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425683,-99) , 
5, 0.805629, 1, 0, 0.51047,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.473471,-99) , 
5, -0.334768, 0, 0, 0.494444,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.199778,-99) , 
4, 0.999048, 0, 0, 0.476048,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.065072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463797,-99) , 
0, 0.502852, 1, 0, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426055,-99) , 
4, 0.999637, 0, 0, 0.497483,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.208529,-99) , 
4, 0.999048, 0, 0, 0.479581,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0575771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712478, 1, -1, 0.493478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309431,-99) , 
5, 0.140352, 0, 0, 0.435816,-99) , 
4, 0.999728, 0, 0, 0.489382,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.211614,-99) , 
4, 0.999048, 0, 0, 0.472344,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0662754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479847,-99) , 
5, 0.235431, 1, 0, 0.500416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308847,-99) , 
5, 0.0434424, 0, 0, 0.437421,-99) , 
4, 0.999773, 0, 0, 0.495128,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.216215,-99) , 
4, 0.999048, 0, 0, 0.478137,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.046743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426179,-99) , 
5, 0.807615, 1, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, 0.137315, 0, -1, 0.436667,-99) , 
4, 0.999728, 0, 0, 0.49378,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.218118,-99) , 
4, 0.999048, 0, 0, 0.47723,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.058315);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.470876,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.041325);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.479349,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0583325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468503,-99) , 
5, -0.905183, 0, 0, 0.504681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353733,-99) , 
5, 0.235375, 0, 0, 0.447965,-99) , 
4, 0.999728, 0, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.239244,-99) , 
4, 0.999048, 0, 0, 0.485084,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0396095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430278,-99) , 
3, 8.80961, 1, 0, 0.498078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379042,-99) , 
4, 0.999388, 0, 0, 0.493272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.185957,-99) , 
4, 0.998572, 0, 0, 0.480887,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0477947);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.476121,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0410025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436129,-99) , 
5, 0.807615, 1, 0, 0.499259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436973,-99) , 
4, 0.999637, 0, 0, 0.496104,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.250879,-99) , 
4, 0.999048, 0, 0, 0.48172,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0472559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470515,-99) , 
0, 0.500947, 1, 0, 0.493408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383068,-99) , 
4, 0.999252, 0, 0, 0.490035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208419,-99) , 
4, 0.998571, 0, 0, 0.478682,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0522559);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.473896,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0370597);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.481479,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0380943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444315,-99) , 
3, 8.88657, 1, 0, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400832,-99) , 
4, 0.99932, 0, 0, 0.49784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212243,-99) , 
4, 0.998572, 0, 0, 0.486719,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0591875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494374,-99) , 
5, 0.181615, 1, 0, 0.506888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346899,-99) , 
4, 0.999955, 0, 0, 0.481219,-99) , 
5, -0.429563, 0, 0, 0.49694,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.267233,-99) , 
4, 0.999048, 0, 0, 0.483871,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0498187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488282,-99) , 
5, -0.334036, 0, 0, 0.498923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331873,-99) , 
5, 0.324898, 0, 0, 0.437291,-99) , 
4, 0.999592, 0, 0, 0.495144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209094,-99) , 
4, 0.998572, 0, 0, 0.484216,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0334929);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.48326,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0313697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445626,-99) , 
3, 9.02828, 1, 0, 0.499012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390301,-99) , 
4, 0.999252, 0, 0, 0.495864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221306,-99) , 
4, 0.998571, 0, 0, 0.485442,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0304792);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.484765,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0350314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469321,-99) , 
5, -0.905179, 0, 0, 0.49959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437141,-99) , 
4, 0.999456, 0, 0, 0.49671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231512,-99) , 
4, 0.998571, 0, 0, 0.486532,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.033989);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.483012,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0379863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487397,-99) , 
5, -0.334492, 0, 0, 0.49731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373741,-99) , 
4, 0.999002, 0, 0, 0.493776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.200129,-99) , 
4, 0.998095, 0, 0, 0.486267,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0363213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486726,-99) , 
3, 4.71567, 1, 0, 0.502154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430198,-99) , 
4, 0.99932, 0, 0, 0.499699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260497,-99) , 
4, 0.998572, 0, 0, 0.490537,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0283383);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.485835,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.035393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468621,-99) , 
0, 0.503805, 1, 0, 0.499923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427112,-99) , 
4, 0.99932, 0, 0, 0.497464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251746,-99) , 
4, 0.998571, 0, 0, 0.488317,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.035252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49094,-99) , 
0, 0.49809, 1, 0, 0.497572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440579,-99) , 
4, 0.99932, 0, 0, 0.495624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241883,-99) , 
4, 0.998572, 0, 0, 0.486397,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0381583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468612,-99) , 
5, 0.711301, 1, 0, 0.499012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293418,-99) , 
5, -0.145739, 0, 0, 0.46707,-99) , 
4, 0.999796, 0, 0, 0.495623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266323,-99) , 
4, 0.998572, 0, 0, 0.487093,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0431883);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47946,-99) , 
5, 0.141652, 1, 0, 0.493738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313437,-99) , 
5, -0.145739, 0, 0, 0.46593,-99) , 
4, 0.999796, 0, 0, 0.490769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272384,-99) , 
4, 0.998571, 0, 0, 0.482592,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0504929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488138,-99) , 
4, 0.999932, 1, 0, 0.497269,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.478085,-99) , 
5, -0.429564, 0, 0, 0.489891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266086,-99) , 
4, 0.998571, 0, 0, 0.481672,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0400748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488569,-99) , 
4, 0.99999, 0, 0, 0.49672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313361,-99) , 
5, -0.146197, 0, 0, 0.453201,-99) , 
4, 0.999796, 0, 0, 0.492114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274392,-99) , 
4, 0.998571, 0, 0, 0.484082,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0389836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49301,-99) , 
2, 0.0714808, 0, 0, 0.495875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351923,-99) , 
5, 0.324528, 0, 0, 0.43959,-99) , 
4, 0.999592, 0, 0, 0.492508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262997,-99) , 
4, 0.998572, 0, 0, 0.484302,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.036255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491365,-99) , 
5, 0.331011, 1, 0, 0.501015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369301,-99) , 
5, 0.0440721, 0, 0, 0.46122,-99) , 
4, 0.999773, 0, 0, 0.497755,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.313516,-99) , 
4, 0.999048, 0, 0, 0.487909,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0346491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492518,-99) , 
4, 0.999991, 0, 0, 0.49728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360243,-99) , 
5, -0.0496695, 0, 0, 0.461679,-99) , 
4, 0.999819, 0, 0, 0.493745,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.324394,-99) , 
4, 0.999048, 0, 0, 0.484757,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0295828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.45284, 1, -1, 0.497865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32751,-99) , 
5, -0.145738, 0, 0, 0.463632,-99) , 
4, 0.999796, 0, 0, 0.494175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293917,-99) , 
4, 0.998571, 0, 0, 0.48692,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0355094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479327,-99) , 
5, -0.904862, 0, 0, 0.502212,-99) , 
NN(
0, 
0, 
-1, -0.145783, 0, -1, 0.451259,-99) , 
4, 0.999796, 0, 0, 0.496853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280453,-99) , 
4, 0.998571, 0, 0, 0.489219,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.202716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00727917, 0, 1, 0.626654,-99) , 
NN(
0, 
0, 
-1, 0.00237245, 0, -1, 0.41986,-99) , 
6, 0.00452926, 0, 0, 0.49096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251163,-99) , 
6, 0.0237791, 1, 0, 0.484899,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.037555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496825,-99) , 
5, -0.239733, 0, 0, 0.505643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364817,-99) , 
5, 0.23044, 0, 0, 0.451233,-99) , 
4, 0.99966, 0, 0, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305943,-99) , 
4, 0.998571, 0, 0, 0.494904,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0406474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0711932, 1, 1, 0.50901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324018,-99) , 
4, 0.999932, 0, 0, 0.486288,-99) , 
5, -0.524834, 0, 0, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293695,-99) , 
4, 0.998571, 0, 0, 0.494135,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0257491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484479,-99) , 
3, 4.72226, 1, 0, 0.498638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443005,-99) , 
4, 0.999388, 0, 0, 0.496506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311897,-99) , 
4, 0.998572, 0, 0, 0.490027,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0323726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492264,-99) , 
5, 0.425388, 0, 0, 0.495931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434379,-99) , 
4, 0.99932, 0, 0, 0.493932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30749,-99) , 
4, 0.998572, 0, 0, 0.487473,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0293665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0700725, 1, 1, 0.503171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343274,-99) , 
5, -0.149054, 0, 0, 0.471161,-99) , 
4, 0.999796, 0, 0, 0.499757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306027,-99) , 
4, 0.998571, 0, 0, 0.493118,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0325375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491277,-99) , 
4, 0.999978, 1, 0, 0.495176,-99) , 
NN(
0, 
0, 
-1, 0.138289, 0, -1, 0.462111,-99) , 
4, 0.999773, 0, 0, 0.492494,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.363952,-99) , 
4, 0.999048, 0, 0, 0.485781,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0246771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472244,-99) , 
5, 0.711301, 1, 0, 0.499284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353011,-99) , 
5, -0.144709, 0, 0, 0.462763,-99) , 
4, 0.999796, 0, 0, 0.495421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330451,-99) , 
4, 0.998571, 0, 0, 0.489629,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0308097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495179,-99) , 
2, -0.0664307, 1, 0, 0.497684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356935,-99) , 
5, -0.146968, 0, 0, 0.469071,-99) , 
4, 0.999796, 0, 0, 0.494629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325934,-99) , 
4, 0.998572, 0, 0, 0.488812,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0230342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481991,-99) , 
5, -0.904857, 0, 0, 0.498775,-99) , 
NN(
0, 
0, 
-1, 0.0425102, 0, -1, 0.452531,-99) , 
4, 0.999728, 0, 0, 0.494886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328309,-99) , 
4, 0.998571, 0, 0, 0.48909,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.168407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00726962, 0, 1, 0.579771,-99) , 
NN(
0, 
0, 
-1, 0.00210009, 0, -1, 0.419963,-99) , 
6, 0.00339248, 0, 0, 0.49362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280939,-99) , 
6, 0.0237486, 1, 0, 0.488268,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.028911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
5, -0.239731, 0, 0, 0.500327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346577,-99) , 
5, -0.144712, 0, 0, 0.469694,-99) , 
4, 0.999796, 0, 0, 0.497103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337332,-99) , 
4, 0.998571, 0, 0, 0.491584,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0319062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472049,-99) , 
5, 0.792053, 1, 0, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.4825,-99) , 
5, -0.429801, 0, 0, 0.495197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350316,-99) , 
4, 0.998571, 0, 0, 0.490174,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0268511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491263,-99) , 
4, 0.99999, 0, 0, 0.496834,-99) , 
NN(
0, 
0, 
-1, -0.146259, 0, -1, 0.461923,-99) , 
4, 0.999796, 0, 0, 0.493153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343244,-99) , 
4, 0.998571, 0, 0, 0.488056,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.125816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00825045, 0, 1, 0.607153,-99) , 
NN(
0, 
0, 
-1, 0.00188735, 0, -1, 0.456758,-99) , 
6, 0.00566207, 0, 0, 0.494853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31492,-99) , 
6, 0.0237843, 1, 0, 0.490346,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0401745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497673,-99) , 
4, 0.999932, 1, 0, 0.512888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427425,-99) , 
4, 0.999932, 0, 0, 0.496174,-99) , 
5, 0.235939, 0, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358301,-99) , 
4, 0.998572, 0, 0, 0.496698,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0349135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.516523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435713,-99) , 
4, 0.999932, 0, 0, 0.494553,-99) , 
5, 0.23679, 0, 0, 0.501631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370252,-99) , 
4, 0.998571, 0, 0, 0.497154,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0323042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495518,-99) , 
4, 0.999932, 1, 0, 0.510468,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.489137,-99) , 
5, 0.235432, 0, 0, 0.496015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38422,-99) , 
4, 0.998571, 0, 0, 0.492117,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0274428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498993,-99) , 
4, 0.999932, 1, 0, 0.506525,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.488416,-99) , 
5, -0.239419, 0, 0, 0.498036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370707,-99) , 
4, 0.998571, 0, 0, 0.493702,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0316395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0692697, 0, 1, 0.514297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446404,-99) , 
4, 0.999932, 0, 0, 0.496696,-99) , 
5, 0.235939, 0, 0, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383343,-99) , 
4, 0.998571, 0, 0, 0.498342,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0232412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0723186, 0, 1, 0.50534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352656,-99) , 
4, 0.999932, 0, 0, 0.485719,-99) , 
5, -0.619449, 0, 0, 0.499688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388845,-99) , 
4, 0.998571, 0, 0, 0.495903,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0212442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496794,-99) , 
5, 0.522202, 0, 0, 0.498968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398492,-99) , 
5, -0.144689, 0, 0, 0.475278,-99) , 
4, 0.999796, 0, 0, 0.496451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381232,-99) , 
4, 0.998571, 0, 0, 0.492593,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.021145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495838,-99) , 
5, -0.524638, 0, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0.0453305, 0, -1, 0.467128,-99) , 
4, 0.999728, 0, 0, 0.498768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389425,-99) , 
4, 0.998571, 0, 0, 0.495061,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0207005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492929,-99) , 
3, 4.72226, 1, 0, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468037,-99) , 
4, 0.999637, 0, 0, 0.500241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407193,-99) , 
4, 0.999048, 0, 0, 0.495562,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0169865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489394,-99) , 
5, -0.714584, 0, 0, 0.498623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461341,-99) , 
3, 8.88965, 1, 0, 0.49746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423027,-99) , 
4, 0.999048, 0, 0, 0.493629,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0145367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480365,-99) , 
4, 0.999728, 0, 0, 0.49886,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.476843,-99) , 
0, 0.504757, 1, 0, 0.497279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411594,-99) , 
4, 0.999048, 0, 0, 0.492978,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0247427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494447,-99) , 
2, 0.0779989, 0, 0, 0.496568,-99) , 
NN(
0, 
0, 
-1, -0.147033, 0, -1, 0.467374,-99) , 
4, 0.999796, 0, 0, 0.493511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383645,-99) , 
4, 0.998571, 0, 0, 0.489907,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0176116);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.491195,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0287257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493305,-99) , 
4, 0.999994, 0, 0, 0.500476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369003,-99) , 
5, -0.335528, 0, 0, 0.483015,-99) , 
4, 0.999864, 0, 0, 0.498064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399508,-99) , 
4, 0.998571, 0, 0, 0.494742,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0178028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
5, 0.331013, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44556,-99) , 
3, 9.06114, 1, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395125,-99) , 
4, 0.998571, 0, 0, 0.495846,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0229264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496352,-99) , 
4, 0.999981, 1, 0, 0.501086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395221,-99) , 
5, -0.0496908, 0, 0, 0.473688,-99) , 
4, 0.999796, 0, 0, 0.498217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409693,-99) , 
4, 0.998571, 0, 0, 0.495236,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0158712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47526,-99) , 
3, 6.92886, 1, 0, 0.501179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452202,-99) , 
3, 9.06114, 1, 0, 0.499756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401283,-99) , 
4, 0.998571, 0, 0, 0.496513,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0154428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499531,-99) , 
2, -0.0664307, 1, 0, 0.500994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45658,-99) , 
4, 0.999525, 1, 0, 0.474152,-99) , 
4, 0.999819, 0, 0, 0.498343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432499,-99) , 
4, 0.999048, 0, 0, 0.494996,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0223663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487183,-99) , 
5, 0.712478, 1, 0, 0.503659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456093,-99) , 
4, 0.999796, 0, 0, 0.501011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436544,-99) , 
5, 0.744761, 1, 0, 0.466031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404476,-99) , 
5, 0.237184, 0, 0, 0.447167,-99) , 
4, 0.999524, 0, 0, 0.496596,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0122487);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.493876,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0122017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482348,-99) , 
5, -0.904861, 0, 0, 0.500027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466659,-99) , 
3, 9.06114, 1, 0, 0.499037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432394,-99) , 
4, 0.998572, 0, 0, 0.49675,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0191441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497199,-99) , 
5, -0.619449, 1, 0, 0.500769,-99) , 
NN(
0, 
0, 
-1, -0.05284, 0, -1, 0.464598,-99) , 
4, 0.999819, 0, 0, 0.497287,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.454556,-99) , 
4, 0.999048, 0, 0, 0.495044,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0181985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495969,-99) , 
4, 0.999983, 1, 0, 0.499438,-99) , 
NN(
0, 
0, 
-1, -0.0522233, 0, -1, 0.48247,-99) , 
4, 0.999819, 0, 0, 0.497758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432243,-99) , 
4, 0.999048, 0, 0, 0.494476,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0175193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493533,-99) , 
4, 0.999961, 0, 0, 0.501332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408057,-99) , 
5, -0.145739, 0, 0, 0.477178,-99) , 
4, 0.999796, 0, 0, 0.49879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409913,-99) , 
4, 0.998571, 0, 0, 0.495869,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0131541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476434,-99) , 
0, 0.491424, 0, 0, 0.499265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452614,-99) , 
3, 9.30758, 1, 0, 0.49804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420856,-99) , 
4, 0.998572, 0, 0, 0.495452,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0104954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477264,-99) , 
0, 0.489519, 0, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46651,-99) , 
3, 8.87054, 1, 0, 0.499328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422439,-99) , 
4, 0.998572, 0, 0, 0.496791,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.018819);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.490592,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0142785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
2, 0.0677793, 0, 0, 0.500462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46248,-99) , 
5, 0.807615, 1, 0, 0.499063,-99) , 
NN(
0, 
0, 
-1, 0.706901, 1, -1, 0.442802,-99) , 
4, 0.999048, 0, 0, 0.496218,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0133702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0700725, 1, 1, 0.501936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403466,-99) , 
5, -0.145719, 0, 0, 0.481094,-99) , 
4, 0.999796, 0, 0, 0.499743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437811,-99) , 
4, 0.998572, 0, 0, 0.497661,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0128878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499447,-99) , 
2, -0.0700725, 1, 0, 0.501116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43912,-99) , 
5, -0.0497289, 0, 0, 0.483022,-99) , 
4, 0.999819, 0, 0, 0.499322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438948,-99) , 
4, 0.999048, 0, 0, 0.496337,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0149755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498852,-99) , 
0, 0.495234, 1, 0, 0.501671,-99) , 
NN(
0, 
0, 
-1, -0.0508318, 0, -1, 0.478972,-99) , 
4, 0.999819, 0, 0, 0.499448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448108,-99) , 
4, 0.999048, 0, 0, 0.49684,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499352,-99) , 
3, 0.950238, 1, 0, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472906,-99) , 
3, 8.87861, 1, 0, 0.500684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438968,-99) , 
4, 0.999048, 0, 0, 0.497647,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0216705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499469,-99) , 
4, 0.999932, 1, 0, 0.508582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461873,-99) , 
4, 0.999932, 0, 0, 0.498761,-99) , 
5, 0.23412, 0, 0, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44044,-99) , 
4, 0.998571, 0, 0, 0.499886,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0126607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.521156, 0, 1, 0.502449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428122,-99) , 
5, -0.144689, 0, 0, 0.482311,-99) , 
4, 0.999796, 0, 0, 0.500336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428938,-99) , 
4, 0.998571, 0, 0, 0.498024,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0201028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489102,-99) , 
5, -0.655688, 0, 0, 0.500331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467808,-99) , 
5, 0.807616, 1, 0, 0.499133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438328,-99) , 
4, 0.999048, 0, 0, 0.496163,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0158646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496289,-99) , 
5, 0.522202, 0, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, 1.3841, 0, -1, 0.480709,-99) , 
0, 0.503804, 1, 0, 0.497047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446752,-99) , 
3, 9.03751, 1, 0, 0.495521,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0140184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48498,-99) , 
0, 0.491696, 0, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 2.24695, 0, -1, 0.475021,-99) , 
0, 0.504757, 1, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436613,-99) , 
3, 9.03751, 1, 0, 0.497097,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0146753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495333,-99) , 
0, 0.499043, 0, 0, 0.497752,-99) , 
NN(
0, 
0, 
-1, 0.499993, 1, -1, 0.474425,-99) , 
4, 0.999773, 0, 0, 0.49588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446538,-99) , 
4, 0.999048, 0, 0, 0.493435,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0118597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
5, 0.616229, 0, 0, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0.422869, 0, -1, 0.47521,-99) , 
4, 0.999592, 0, 0, 0.499384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429958,-99) , 
4, 0.998572, 0, 0, 0.497137,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0140029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497453,-99) , 
2, -0.0713712, 1, 0, 0.499194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467946,-99) , 
4, 0.999048, 0, 0, 0.497688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41278,-99) , 
3, 9.27754, 1, 0, 0.495431,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0141456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497283,-99) , 
5, 0.237009, 0, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468962,-99) , 
3, 7.55551, 1, 0, 0.500085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438691,-99) , 
3, 9.30816, 1, 0, 0.498414,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0162366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49874,-99) , 
2, -0.0378341, 1, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0.516385, 0, -1, 0.478033,-99) , 
4, 0.999819, 0, 0, 0.500529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461169,-99) , 
4, 0.998617, 0, 0, 0.482087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422389,-99) , 
5, 0.332202, 0, 0, 0.462258,-99) , 
4, 0.999524, 0, 0, 0.497429,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0124838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.933059, 1, 1, 0.504542,-99) , 
NN(
0, 
0, 
-1, 1.77929, 0, -1, 0.487999,-99) , 
0, 0.504757, 1, 0, 0.503347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456561,-99) , 
3, 9.03111, 1, 0, 0.501931,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.014226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0779989, 0, 1, 0.50328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425162,-99) , 
5, -0.0528428, 0, 0, 0.479999,-99) , 
4, 0.999796, 0, 0, 0.500854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435422,-99) , 
4, 0.998571, 0, 0, 0.498738,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0182326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471834,-99) , 
0, 0.492376, 0, 0, 0.506292,-99) , 
NN(
0, 
0, 
-1, 7.57495, 1, -1, 0.495066,-99) , 
3, 1.36017, 1, 0, 0.498911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436713,-99) , 
3, 9.03751, 1, 0, 0.497066,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0144046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490328,-99) , 
4, 0.999909, 0, 0, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472133,-99) , 
5, 0.807616, 1, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459543,-99) , 
4, 0.999048, 0, 0, 0.498556,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0197268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495416,-99) , 
4, 0.999992, 0, 0, 0.501462,-99) , 
NN(
0, 
0, 
-1, 0.515834, 0, -1, 0.481832,-99) , 
4, 0.999841, 0, 0, 0.499941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464027,-99) , 
5, 0.776226, 1, 0, 0.491541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424305,-99) , 
5, 0.332171, 0, 0, 0.469534,-99) , 
4, 0.999524, 0, 0, 0.497454,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.018974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49458,-99) , 
4, 0.999994, 0, 0, 0.500949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439993,-99) , 
5, -0.241109, 0, 0, 0.490557,-99) , 
4, 0.999864, 0, 0, 0.499668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463148,-99) , 
4, 0.999048, 0, 0, 0.497848,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0159567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486688,-99) , 
0, 0.499995, 1, 0, 0.507829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496543,-99) , 
2, 0.069465, 0, 0, 0.498592,-99) , 
3, 0.929841, 1, 0, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44628,-99) , 
3, 8.99736, 1, 0, 0.498908,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.014853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49488,-99) , 
5, -0.239999, 0, 0, 0.49988,-99) , 
NN(
0, 
0, 
-1, 1.43035, 0, -1, 0.47853,-99) , 
0, 0.491424, 0, 0, 0.498166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440223,-99) , 
3, 9.28394, 1, 0, 0.496561,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0114108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904858, 1, 1, 0.501804,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.482797,-99) , 
4, 0.999819, 0, 0, 0.499949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447044,-99) , 
4, 0.999048, 0, 0, 0.497393,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0148475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487454,-99) , 
5, -0.810555, 0, 0, 0.505628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495181,-99) , 
2, -0.214191, 1, 0, 0.495712,-99) , 
0, 0.496186, 1, 0, 0.499018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467503,-99) , 
4, 0.998571, 0, 0, 0.497959,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0131747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496428,-99) , 
3, 0.96982, 1, 0, 0.499055,-99) , 
2, 0.214318, 0, 0, 0.500149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44779,-99) , 
3, 9.2955, 1, 0, 0.498749,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.011098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499741,-99) , 
2, -0.0370407, 1, 0, 0.50222,-99) , 
NN(
0, 
0, 
-1, -0.0497289, 0, -1, 0.485062,-99) , 
4, 0.999796, 0, 0, 0.500418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445107,-99) , 
4, 0.998571, 0, 0, 0.49864,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0087511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214259, 0, 1, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474367,-99) , 
3, 8.87473, 1, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447964,-99) , 
4, 0.998572, 0, 0, 0.499459,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0131101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489383,-99) , 
3, 5.3396, 1, 0, 0.500992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461513,-99) , 
5, -0.430855, 0, 0, 0.485282,-99) , 
0, 0.492376, 0, 0, 0.499224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443821,-99) , 
3, 9.28394, 1, 0, 0.497719,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0152818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497933,-99) , 
4, 0.999994, 0, 0, 0.502776,-99) , 
NN(
0, 
0, 
-1, -0.240694, 0, -1, 0.485157,-99) , 
4, 0.999864, 0, 0, 0.500611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463832,-99) , 
4, 0.999048, 0, 0, 0.498792,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0106452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499606,-99) , 
4, 0.999974, 1, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.489233,-99) , 
4, 0.999819, 0, 0, 0.500586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453644,-99) , 
4, 0.999048, 0, 0, 0.498321,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.00916288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499784,-99) , 
2, 0.0698014, 0, 0, 0.502165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473821,-99) , 
5, 0.803713, 1, 0, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47322,-99) , 
4, 0.999048, 0, 0, 0.499701,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0105903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.211769, 0, 1, 0.503153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482797,-99) , 
5, 0.806372, 1, 0, 0.502382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463523,-99) , 
4, 0.999048, 0, 0, 0.500475,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0108926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516507,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.496914,-99) , 
2, 0.210527, 0, 0, 0.49783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460768,-99) , 
4, 0.999048, 0, 0, 0.496023,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.00774938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499559,-99) , 
2, 0.0714736, 0, 0, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481152,-99) , 
3, 8.80206, 1, 0, 0.500664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458009,-99) , 
4, 0.998571, 0, 0, 0.499278,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0143487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0697611, 0, 1, 0.504917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484023,-99) , 
5, 0.330011, 0, 0, 0.492561,-99) , 
3, 5.59377, 1, 0, 0.503624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457129,-99) , 
3, 8.99096, 1, 0, 0.502182,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.017679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496221,-99) , 
2, -0.071068, 1, 0, 0.500033,-99) , 
NN(
0, 
0, 
-1, 0.070897, 1, -1, 0.488962,-99) , 
5, -0.61933, 0, 0, 0.496874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447244,-99) , 
3, 9.28394, 1, 0, 0.495533,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0131948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809723, 1, 1, 0.503339,-99) , 
NN(
0, 
0, 
-1, -0.0514002, 0, -1, 0.476783,-99) , 
4, 0.999796, 0, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45725,-99) , 
4, 0.998572, 0, 0, 0.499198,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0103678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476438,-99) , 
3, 1.80507, 0, 0, 0.49182,-99) , 
0, 0.5019, 1, 0, 0.499933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45174,-99) , 
3, 9.02099, 1, 0, 0.498491,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0147311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470737,-99) , 
3, 6.81952, 1, 0, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492267,-99) , 
0, 0.499995, 1, 0, 0.499323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462251,-99) , 
3, 8.92177, 1, 0, 0.498154,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0200167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475897,-99) , 
5, -0.43235, 0, 0, 0.506853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49211,-99) , 
2, -0.00340369, 1, 0, 0.498297,-99) , 
2, 0.0714191, 0, 0, 0.499812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460727,-99) , 
4, 0.998571, 0, 0, 0.498538,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0167478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4871,-99) , 
3, 3.52166, 1, 0, 0.508181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495849,-99) , 
5, -0.809662, 1, 0, 0.497728,-99) , 
2, 0.070897, 0, 0, 0.499627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461112,-99) , 
3, 9.03751, 1, 0, 0.498469,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0101053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501441,-99) , 
NN(
0, 
0, 
-1, 0.50637, 1, -1, 0.483029,-99) , 
0, 0.504712, 1, 0, 0.499903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470213,-99) , 
5, -0.49242, 0, 0, 0.487883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462903,-99) , 
5, 0.332353, 1, 0, 0.481681,-99) , 
0, 0.492376, 0, 0, 0.497848,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0113325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499025,-99) , 
0, 0.503804, 0, 0, 0.500415,-99) , 
NN(
0, 
0, 
-1, -0.239778, 0, -1, 0.485047,-99) , 
4, 0.999864, 0, 0, 0.49853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455884,-99) , 
4, 0.999048, 0, 0, 0.496486,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0124257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497505,-99) , 
5, -0.525725, 1, 0, 0.500181,-99) , 
NN(
0, 
0, 
-1, -0.144702, 0, -1, 0.484469,-99) , 
4, 0.999796, 0, 0, 0.498538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445449,-99) , 
4, 0.998571, 0, 0, 0.496859,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0129065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458352,-99) , 
2, 0.0697611, 1, 0, 0.49226,-99) , 
5, -0.619445, 0, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467676,-99) , 
3, 8.99658, 1, 0, 0.500184,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0103007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0722397, 1, 1, 0.507456,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.496502,-99) , 
5, 0.522679, 0, 0, 0.498657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463307,-99) , 
3, 9.28394, 1, 0, 0.497705,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.019605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465904,-99) , 
5, -0.620688, 0, 0, 0.50671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490287,-99) , 
2, -0.00267235, 1, 0, 0.496508,-99) , 
2, 0.0720911, 0, 0, 0.498332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456224,-99) , 
3, 9.03111, 1, 0, 0.497092,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0124967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452419,-99) , 
4, 0.999932, 0, 0, 0.496217,-99) , 
5, -0.239735, 0, 0, 0.500322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468856,-99) , 
4, 0.998571, 0, 0, 0.49928,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0162108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496226,-99) , 
2, 0.0714289, 0, 0, 0.49978,-99) , 
NN(
0, 
0, 
-1, -0.0746599, 0, -1, 0.487969,-99) , 
5, -0.741688, 0, 0, 0.497199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476626,-99) , 
5, 0.80818, 1, 0, 0.496143,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0138414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498412,-99) , 
4, 0.999994, 0, 0, 0.501934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417547,-99) , 
5, -0.334803, 0, 0, 0.485696,-99) , 
4, 0.999864, 0, 0, 0.499711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456552,-99) , 
4, 0.998571, 0, 0, 0.498327,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0101273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493369,-99) , 
0, 0.500947, 1, 0, 0.508815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499037,-99) , 
2, 0.214511, 0, 0, 0.499934,-99) , 
3, 0.982996, 1, 0, 0.501953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457776,-99) , 
3, 9.30758, 1, 0, 0.500806,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0121201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498291,-99) , 
2, -0.0713712, 1, 0, 0.500926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429883,-99) , 
2, -0.0729279, 0, 0, 0.488295,-99) , 
5, -0.8099, 0, 0, 0.498887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465525,-99) , 
3, 9.27754, 1, 0, 0.497983,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0109629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486808,-99) , 
3, 4.58362, 1, 0, 0.509386,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49868,-99) , 
2, 0.0714289, 0, 0, 0.500675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473422,-99) , 
0, 0.499042, 0, 0, 0.486825,-99) , 
5, -0.904841, 0, 0, 0.499563,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0134678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499501,-99) , 
4, 0.999994, 0, 0, 0.503136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418913,-99) , 
5, -0.335604, 0, 0, 0.487005,-99) , 
4, 0.999864, 0, 0, 0.500927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467086,-99) , 
4, 0.998571, 0, 0, 0.499821,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0185275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999345, 1, 1, 0.505916,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.490224,-99) , 
5, 0.652056, 1, 0, 0.503458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469577,-99) , 
0, 0.5019, 0, 0, 0.479081,-99) , 
5, -0.855165, 0, 0, 0.488413,-99) , 
5, -0.8099, 0, 0, 0.501087,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.017343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49883,-99) , 
4, 0.999524, 1, 0, 0.503728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38607,-99) , 
4, 0.999905, 0, 0, 0.491605,-99) , 
5, -0.428995, 0, 0, 0.499112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464806,-99) , 
3, 9.27754, 1, 0, 0.49818,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.013811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999987, 1, 1, 0.503176,-99) , 
NN(
0, 
0, 
-1, -0.241105, 0, -1, 0.481633,-99) , 
4, 0.999864, 0, 0, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45496,-99) , 
4, 0.999048, 0, 0, 0.498416,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0461919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491701,-99) , 
3, 4.5391, 1, 0, 0.51775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492042,-99) , 
2, 0.00337186, 0, 0, 0.49927,-99) , 
2, -0.0714605, 1, 0, 0.502645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456992,-99) , 
4, 0.999995, 0, 0, 0.500667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396364,-99) , 
4, 0.999905, 0, 0, 0.491721,-99) , 
5, -0.429701, 0, 0, 0.49856,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0128966);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499928,-99) , 
2, -0.0693161, 1, 0, 0.50243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474355,-99) , 
5, -0.238761, 0, 0, 0.490502,-99) , 
3, 3.61172, 1, 0, 0.499304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467232,-99) , 
3, 9.30758, 1, 0, 0.498442,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0320246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500131, 1, 1, 0.519006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471665,-99) , 
0, 0.493328, 0, 0, 0.51265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491398,-99) , 
4, 0.999995, 0, 0, 0.502868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385116,-99) , 
5, -0.565323, 0, 0, 0.477792,-99) , 
4, 0.999905, 0, 0, 0.499488,-99) , 
5, 0.521156, 0, 0, 0.502153,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0143046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472564,-99) , 
4, 0.999905, 0, 0, 0.497925,-99) , 
5, 0.522678, 0, 0, 0.500608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471151,-99) , 
3, 9.28394, 1, 0, 0.499803,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0195097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495314,-99) , 
4, 0.999987, 1, 0, 0.501245,-99) , 
NN(
0, 
0, 
-1, -0.429084, 0, -1, 0.48664,-99) , 
4, 0.999909, 0, 0, 0.498874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462036,-99) , 
4, 0.999048, 0, 0, 0.497095,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.00859367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61734, 0, 1, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477106,-99) , 
4, 0.999592, 0, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459145,-99) , 
4, 0.999048, 0, 0, 0.498561,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.00798447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499161,-99) , 
2, 0.214314, 0, 0, 0.500073,-99) , 
NN(
0, 
0, 
-1, 3.01551, 1, -1, 0.4896,-99) , 
5, -0.905085, 0, 0, 0.499191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464801,-99) , 
4, 0.999048, 0, 0, 0.49753,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0390828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48998,-99) , 
5, 0.635999, 1, 0, 0.527612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488755,-99) , 
4, 0.999977, 1, 0, 0.498364,-99) , 
4, 0.999524, 1, 0, 0.501673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471126,-99) , 
4, 0.999995, 0, 0, 0.497997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42227,-99) , 
4, 0.999905, 0, 0, 0.491364,-99) , 
5, -0.524162, 0, 0, 0.49829,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0151233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499054,-99) , 
3, 0.973994, 1, 0, 0.503211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487565,-99) , 
5, -0.755316, 0, 0, 0.492222,-99) , 
5, -0.714531, 0, 0, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467112,-99) , 
3, 9.28394, 1, 0, 0.499781,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0175497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
2, -0.0313806, 1, 0, 0.503365,-99) , 
2, 0.213367, 0, 0, 0.504579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476355,-99) , 
2, -0.0783622, 0, 0, 0.499431,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.467072,-99) , 
2, 0.0712526, 1, 0, 0.489388,-99) , 
3, 4.67556, 1, 0, 0.501721,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.018952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497583,-99) , 
4, 0.999991, 1, 0, 0.503928,-99) , 
NN(
0, 
0, 
-1, 0.516385, 0, -1, 0.475009,-99) , 
4, 0.999819, 0, 0, 0.502028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475643,-99) , 
5, 0.776496, 1, 0, 0.492347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439343,-99) , 
5, 0.332374, 0, 0, 0.474997,-99) , 
4, 0.999524, 0, 0, 0.499857,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0111995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.512042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490648,-99) , 
3, 3.49252, 1, 0, 0.498902,-99) , 
5, 0.616229, 0, 0, 0.500864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482109,-99) , 
3, 9.03751, 1, 0, 0.500299,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0215732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.507509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473508,-99) , 
5, 0.844434, 1, 0, 0.505899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467611,-99) , 
2, 0.0776988, 1, 0, 0.498729,-99) , 
NN(
0, 
0, 
-1, -0.836861, 0, -1, 0.461887,-99) , 
2, -0.0718954, 0, 0, 0.492047,-99) , 
5, -0.61933, 0, 0, 0.502044,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0107606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498814,-99) , 
2, 0.0716951, 0, 0, 0.500947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484066,-99) , 
5, 0.824482, 1, 0, 0.500062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465397,-99) , 
2, -0.078569, 0, 0, 0.494642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460116,-99) , 
2, 0.0708085, 1, 0, 0.488306,-99) , 
5, -0.809852, 0, 0, 0.498198,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0104079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0715101, 1, 1, 0.503511,-99) , 
NN(
0, 
0, 
-1, 0.0719444, 1, -1, 0.494285,-99) , 
5, -0.61933, 0, 0, 0.500969,-99) , 
NN(
0, 
0, 
-1, -0.0533225, 1, -1, 0.480972,-99) , 
0, 0.504757, 1, 0, 0.499513,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0096645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498525,-99) , 
3, 0.928571, 1, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478711,-99) , 
3, 8.86265, 1, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, -0.963745, 1, -1, 0.483204,-99) , 
5, -0.904832, 0, 0, 0.498698,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0110428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236791, 0, 1, 0.503002,-99) , 
NN(
0, 
0, 
-1, -0.0534531, 0, -1, 0.482053,-99) , 
4, 0.999796, 0, 0, 0.500843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464672,-99) , 
4, 0.998572, 0, 0, 0.499693,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0117972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48776,-99) , 
3, 4.43889, 1, 0, 0.509161,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.497135,-99) , 
2, 0.0510104, 0, 0, 0.499321,-99) , 
NN(
0, 
0, 
-1, 0.0467028, 0, -1, 0.483894,-99) , 
2, 0.214259, 1, 0, 0.49851,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.01323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477336,-99) , 
3, 4.50839, 1, 0, 0.508977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477119,-99) , 
4, 0.999048, 0, 0, 0.499769,-99) , 
2, 0.0714191, 0, 0, 0.501485,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.483987,-99) , 
5, -0.904845, 0, 0, 0.500079,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0314247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490269,-99) , 
4, 0.999998, 0, 0, 0.503821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465269,-99) , 
5, -0.241788, 0, 0, 0.490689,-99) , 
4, 0.999955, 0, 0, 0.500544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47578,-99) , 
4, 0.999048, 0, 0, 0.499339,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0241892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48588,-99) , 
3, 4.56476, 1, 0, 0.507449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484377,-99) , 
2, -0.00445258, 1, 0, 0.496493,-99) , 
2, 0.0305318, 0, 0, 0.499758,-99) , 
NN(
0, 
0, 
-1, 0.0437397, 0, -1, 0.469788,-99) , 
2, -0.214358, 0, 0, 0.498201,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.014922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473785,-99) , 
4, 0.999905, 0, 0, 0.499582,-99) , 
5, 0.522678, 0, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474906,-99) , 
3, 9.27754, 1, 0, 0.50058,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0106328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496089,-99) , 
1, -0.00127047, 1, 0, 0.510482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482974,-99) , 
5, 0.71039, 1, 0, 0.49869,-99) , 
0, 0.497274, 1, 0, 0.500304,-99) , 
NN(
0, 
0, 
-1, -0.81033, 0, -1, 0.491603,-99) , 
0, 0.496185, 0, 0, 0.497402,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.00975619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498674,-99) , 
3, 4.5064, 0, 0, 0.500876,-99) , 
NN(
0, 
0, 
-1, 0.613515, 0, -1, 0.485027,-99) , 
4, 0.999819, 0, 0, 0.499322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480759,-99) , 
4, 0.999048, 0, 0, 0.498414,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.012432);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475566,-99) , 
2, 0.0777038, 1, 0, 0.499767,-99) , 
NN(
0, 
0, 
-1, 2.94808, 1, -1, 0.468855,-99) , 
2, -0.0718954, 0, 0, 0.494153,-99) , 
5, -0.619377, 0, 0, 0.500708,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0145665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497736,-99) , 
2, 0.0743757, 0, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, -0.0708116, 0, -1, 0.49129,-99) , 
3, 2.71013, 1, 0, 0.497585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469569,-99) , 
3, 9.28394, 1, 0, 0.496843,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0203261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491722,-99) , 
3, 4.7405, 1, 0, 0.517621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489225,-99) , 
0, 0.500947, 1, 0, 0.500815,-99) , 
2, -0.0714605, 1, 0, 0.503927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527837,-99) , 
NN(
0, 
0, 
-1, 0.0697611, 1, -1, 0.488975,-99) , 
5, -0.755531, 0, 0, 0.493618,-99) , 
5, -0.714783, 0, 0, 0.501631,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0256415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496556,-99) , 
4, 0.999998, 0, 0, 0.505558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47251,-99) , 
5, 0.522207, 0, 0, 0.483108,-99) , 
4, 0.999955, 0, 0, 0.500585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469937,-99) , 
2, -0.0714605, 1, 0, 0.482796,-99) , 
4, 0.999524, 0, 0, 0.49916,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0115887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467509,-99) , 
4, 0.999714, 0, 0, 0.499244,-99) , 
5, 0.235647, 0, 0, 0.502187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485483,-99) , 
5, -0.705943, 0, 0, 0.502433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469163,-99) , 
5, 0.235133, 1, 0, 0.492839,-99) , 
0, 0.492376, 0, 0, 0.501125,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0178961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49642,-99) , 
2, 0.0305319, 0, 0, 0.501128,-99) , 
NN(
0, 
0, 
-1, -0.336001, 0, -1, 0.484394,-99) , 
4, 0.999864, 0, 0, 0.498819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453402,-99) , 
4, 0.998571, 0, 0, 0.497414,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0142569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447621,-99) , 
4, 0.999905, 0, 0, 0.497968,-99) , 
5, -0.239792, 0, 0, 0.502608,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.480499,-99) , 
2, 0.214219, 1, 0, 0.501438,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0203241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493111,-99) , 
4, 0.999997, 0, 0, 0.501087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444178,-99) , 
3, 4.5635, 1, 0, 0.493407,-99) , 
4, 0.999932, 0, 0, 0.49946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476731,-99) , 
4, 0.998571, 0, 0, 0.498729,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.026068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.590669, 1, 1, 0.521048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469217,-99) , 
4, 0.999796, 0, 0, 0.499888,-99) , 
4, 0.999524, 1, 0, 0.502322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478893,-99) , 
4, 0.999995, 0, 0, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431433,-99) , 
4, 0.999905, 0, 0, 0.494201,-99) , 
5, -0.428993, 0, 0, 0.499285,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0146362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49577,-99) , 
3, 2.30535, 1, 0, 0.507476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490048,-99) , 
2, 0.00340119, 0, 0, 0.496398,-99) , 
2, -0.0714207, 1, 0, 0.498384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470228,-99) , 
3, 9.27754, 1, 0, 0.497629,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0206898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494692,-99) , 
3, 4.54513, 1, 0, 0.514899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457592,-99) , 
5, -0.809643, 0, 0, 0.506178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492008,-99) , 
5, -0.334494, 1, 0, 0.497187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470028,-99) , 
4, 0.999524, 0, 0, 0.495574,-99) , 
2, -0.0715712, 1, 0, 0.497525,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.020938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496484,-99) , 
4, 0.999998, 0, 0, 0.502074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477215,-99) , 
5, 0.615575, 0, 0, 0.484102,-99) , 
4, 0.999955, 0, 0, 0.498092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499792,-99) , 
5, 0.776509, 1, 0, 0.504338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434971,-99) , 
5, 0.332351, 0, 0, 0.482218,-99) , 
4, 0.999524, 0, 0, 0.496813,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0189192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
5, 0.635984, 1, 0, 0.522079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46745,-99) , 
4, 0.999751, 0, 0, 0.498505,-99) , 
4, 0.999524, 1, 0, 0.501111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455391,-99) , 
4, 0.999982, 0, 0, 0.498811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42492,-99) , 
4, 0.999905, 0, 0, 0.49261,-99) , 
5, -0.524163, 0, 0, 0.498324,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0236177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49016,-99) , 
4, 0.999991, 1, 0, 0.4982,-99) , 
NN(
0, 
0, 
-1, -0.430859, 0, -1, 0.482068,-99) , 
4, 0.999909, 0, 0, 0.495569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46509,-99) , 
4, 0.999048, 0, 0, 0.49412,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0170868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493716,-99) , 
4, 0.999977, 0, 0, 0.508051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493957,-99) , 
5, -0.619867, 1, 0, 0.496252,-99) , 
2, -0.0715049, 1, 0, 0.498188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47741,-99) , 
0, 0.494689, 0, 0, 0.499487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44756,-99) , 
0, 0.499995, 1, 0, 0.481816,-99) , 
4, 0.999524, 0, 0, 0.496881,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0107072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.51797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489805,-99) , 
5, -0.809643, 0, 0, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497254,-99) , 
2, -0.0710631, 1, 0, 0.50028,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0139491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494391,-99) , 
5, 0.613325, 1, 0, 0.518852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481463,-99) , 
4, 0.999841, 0, 0, 0.500551,-99) , 
4, 0.999524, 1, 0, 0.502466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492303,-99) , 
5, -0.818732, 1, 0, 0.49749,-99) , 
NN(
0, 
0, 
-1, 0.496095, 1, -1, 0.486782,-99) , 
0, 0.498091, 0, 0, 0.492254,-99) , 
5, -0.61933, 0, 0, 0.499611,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0163224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490959,-99) , 
3, 1.79926, 1, 0, 0.497462,-99) , 
2, 0.213386, 0, 0, 0.498957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479246,-99) , 
5, 0.658417, 1, 0, 0.500073,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.474374,-99) , 
5, -0.429059, 0, 0, 0.490963,-99) , 
3, 4.57125, 1, 0, 0.497379,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.014473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49779,-99) , 
2, 0.131767, 0, 0, 0.499422,-99) , 
2, 0.213367, 0, 0, 0.500448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477582,-99) , 
5, 0.672007, 1, 0, 0.505827,-99) , 
NN(
0, 
0, 
-1, 7.39778, 1, -1, 0.483973,-99) , 
5, 0.237016, 0, 0, 0.491638,-99) , 
3, 4.53188, 1, 0, 0.498687,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0133456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496231, 0, 1, 0.50838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46387,-99) , 
3, 0.734239, 0, 0, 0.497915,-99) , 
5, -0.429171, 0, 0, 0.504454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497948,-99) , 
5, -0.0511933, 1, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, 3.8716, 1, -1, 0.493472,-99) , 
0, 0.499133, 0, 0, 0.499935,-99) , 
0, 0.497138, 1, 0, 0.501799,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0139142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497079,-99) , 
4, 0.999987, 1, 0, 0.50228,-99) , 
NN(
0, 
0, 
-1, -0.714902, 0, -1, 0.493257,-99) , 
4, 0.999955, 0, 0, 0.500019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485511,-99) , 
4, 0.999048, 0, 0, 0.499315,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0201909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473809,-99) , 
5, 0.853249, 1, 0, 0.504662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478793,-99) , 
4, 0.999982, 0, 0, 0.497569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465639,-99) , 
4, 0.999619, 0, 0, 0.496168,-99) , 
5, 0.237009, 0, 0, 0.499062,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.00724404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506163, 0, 1, 0.514002,-99) , 
NN(
0, 
0, 
-1, -0.904963, 0, -1, 0.498773,-99) , 
0, 0.503804, 0, 0, 0.500447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465291,-99) , 
4, 0.998571, 0, 0, 0.499362,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0150059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494852,-99) , 
0, 0.5019, 1, 0, 0.524558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4715,-99) , 
0, 0.494281, 0, 0, 0.514739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499492,-99) , 
4, 0.999548, 1, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 3.43643, 1, -1, 0.491513,-99) , 
5, -0.691828, 0, 0, 0.498544,-99) , 
5, 0.617848, 0, 0, 0.501031,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.00773657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497632,-99) , 
3, 2.30698, 1, 0, 0.509238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478674,-99) , 
4, 0.999048, 0, 0, 0.499714,-99) , 
2, -0.0718954, 1, 0, 0.501415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469758,-99) , 
3, 9.28394, 1, 0, 0.500579,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0188819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496485,-99) , 
3, 2.87054, 1, 0, 0.51606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496489,-99) , 
2, 0.0774025, 0, 0, 0.49924,-99) , 
2, -0.0721637, 1, 0, 0.501752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481111,-99) , 
5, 0.672013, 1, 0, 0.506741,-99) , 
NN(
0, 
0, 
-1, 0.0708488, 1, -1, 0.478202,-99) , 
5, -0.143607, 0, 0, 0.4932,-99) , 
3, 4.55908, 1, 0, 0.500055,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0169074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0729046, 1, 1, 0.506803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480288,-99) , 
5, -0.239992, 0, 0, 0.493674,-99) , 
3, 3.58632, 1, 0, 0.503338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483048,-99) , 
3, 9.28394, 1, 0, 0.50279,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0135217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492161,-99) , 
5, -0.240045, 0, 0, 0.511513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499804,-99) , 
0, 0.498181, 1, 0, 0.502157,-99) , 
2, -0.0714207, 1, 0, 0.503775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476531,-99) , 
5, 0.65865, 1, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 3.82497, 1, -1, 0.484938,-99) , 
5, -0.428981, 0, 0, 0.49355,-99) , 
0, 0.495233, 0, 0, 0.5011,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0227161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495923,-99) , 
4, 0.999998, 0, 0, 0.502247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479641,-99) , 
5, 0.522204, 0, 0, 0.4901,-99) , 
4, 0.999955, 0, 0, 0.499526,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.511773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436029,-99) , 
5, 0.330727, 0, 0, 0.487665,-99) , 
4, 0.999524, 0, 0, 0.498566,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0182408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0383515, 1, 1, 0.506314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486107,-99) , 
5, 0.520531, 0, 0, 0.494693,-99) , 
4, 0.999955, 0, 0, 0.503715,-99) , 
NN(
0, 
0, 
-1, 0.330393, 0, -1, 0.475045,-99) , 
4, 0.999524, 0, 0, 0.501464,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.00920305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498358,-99) , 
3, 4.30446, 1, 0, 0.507179,-99) , 
NN(
0, 
0, 
-1, 0.724191, 1, -1, 0.497447,-99) , 
2, -0.0714605, 1, 0, 0.499235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487676,-99) , 
0, 0.498092, 0, 0, 0.49515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466802,-99) , 
3, 3.01006, 1, 0, 0.485716,-99) , 
5, -0.904832, 0, 0, 0.498161,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0253179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493472,-99) , 
4, 0.999973, 0, 0, 0.507031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46921,-99) , 
4, 0.999429, 0, 0, 0.505725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486628,-99) , 
4, 0.999048, 1, 0, 0.490517,-99) , 
1, -0.00405493, 1, 0, 0.497381,-99) , 
5, 0.426084, 1, 0, 0.503656,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0169546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489927,-99) , 
3, 4.59162, 1, 0, 0.50979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492814,-99) , 
2, -0.00348971, 1, 0, 0.499764,-99) , 
2, 0.0713378, 0, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, -0.945672, 0, -1, 0.486143,-99) , 
5, -0.904926, 0, 0, 0.500389,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.020427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495086,-99) , 
3, 2.4713, 1, 0, 0.517828,-99) , 
NN(
0, 
0, 
-1, 0.138665, 0, -1, 0.486089,-99) , 
3, 4.603, 1, 0, 0.507411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484846,-99) , 
5, -0.524947, 0, 0, 0.509341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491686,-99) , 
2, 0.0139952, 0, 0, 0.496361,-99) , 
2, 0.152941, 0, 0, 0.497773,-99) , 
2, -0.0715091, 1, 0, 0.49955,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.00791874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499473,-99) , 
2, 0.0438215, 0, 0, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.490972,-99) , 
4, 0.999864, 0, 0, 0.500515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485987,-99) , 
4, 0.999048, 0, 0, 0.49981,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0101008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139389, 1, 1, 0.516025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473975,-99) , 
3, 2.74821, 1, 0, 0.495565,-99) , 
5, -0.336585, 0, 0, 0.507512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489368,-99) , 
0, 0.505165, 1, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48415,-99) , 
0, 0.490471, 0, 0, 0.499164,-99) , 
2, -0.0713712, 1, 0, 0.5007,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0194558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497911,-99) , 
2, -0.00384449, 1, 0, 0.508079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493114,-99) , 
0, 0.490472, 1, 0, 0.49484,-99) , 
3, 1.17628, 1, 0, 0.499426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499259,-99) , 
5, 0.563256, 1, 0, 0.507629,-99) , 
NN(
0, 
0, 
-1, 0.0723186, 1, -1, 0.483231,-99) , 
5, 0.237011, 0, 0, 0.491919,-99) , 
3, 4.6823, 1, 0, 0.498015,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0109329);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.50491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496418,-99) , 
0, 0.498091, 1, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47195,-99) , 
5, 0.332171, 0, 0, 0.490991,-99) , 
4, 0.999524, 0, 0, 0.503789,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.00537412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478941,-99) , 
4, 0.999592, 0, 0, 0.500106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480982,-99) , 
4, 0.999048, 0, 0, 0.499186,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0173535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469114,-99) , 
5, 0.330734, 0, 0, 0.521303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494144,-99) , 
3, 3.02969, 1, 0, 0.50121,-99) , 
4, 0.999524, 1, 0, 0.502876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47504,-99) , 
3, 8.8405, 1, 0, 0.501973,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0107462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495632,-99) , 
4, 0.999955, 0, 0, 0.514103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498496,-99) , 
5, 0.707386, 0, 0, 0.499947,-99) , 
0, 0.503805, 0, 0, 0.501463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487861,-99) , 
4, 0.998617, 1, 0, 0.498229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461747,-99) , 
5, 0.330311, 0, 0, 0.486485,-99) , 
4, 0.999524, 0, 0, 0.50026,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0165341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482367,-99) , 
3, 2.83073, 1, 0, 0.513944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479571,-99) , 
5, -0.146043, 0, 0, 0.493664,-99) , 
3, 4.49489, 1, 0, 0.507009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484376,-99) , 
2, 0.288426, 1, 0, 0.500731,-99) , 
NN(
0, 
0, 
-1, -0.00732182, 1, -1, 0.491554,-99) , 
2, 0.00336788, 0, 0, 0.49668,-99) , 
2, -0.0714605, 1, 0, 0.49858,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.00899921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474385,-99) , 
4, 0.999048, 0, 0, 0.500394,-99) , 
5, 0.807615, 0, 0, 0.501826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480622,-99) , 
5, -0.620999, 0, 0, 0.49369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469103,-99) , 
5, 0.137037, 1, 0, 0.485755,-99) , 
0, 0.491424, 0, 0, 0.500535,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0124636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499783,-99) , 
0, 0.500947, 0, 0, 0.502493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474024,-99) , 
5, 0.612557, 0, 0, 0.484907,-99) , 
4, 0.999864, 0, 0, 0.500906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49527,-99) , 
5, 0.776496, 0, 0, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439952,-99) , 
5, 0.332351, 0, 0, 0.487162,-99) , 
4, 0.999524, 0, 0, 0.499806,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0134634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493251,-99) , 
5, -0.447271, 0, 0, 0.5115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495062,-99) , 
4, 0.998572, 1, 0, 0.495851,-99) , 
3, 0.511847, 1, 0, 0.497049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47945,-99) , 
3, 9.27754, 1, 0, 0.496576,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0110637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49325,-99) , 
4, 0.999954, 0, 0, 0.512846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477669,-99) , 
4, 0.999592, 0, 0, 0.500636,-99) , 
2, -0.0711275, 1, 0, 0.502735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4832,-99) , 
4, 0.999048, 0, 0, 0.501793,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.00920594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498327,-99) , 
4, 0.999954, 0, 0, 0.513608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
2, 0.153048, 0, 0, 0.500956,-99) , 
2, -0.0714207, 1, 0, 0.503127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484459,-99) , 
4, 0.999048, 0, 0, 0.502225,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.016076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498308,-99) , 
3, 4.73998, 0, 0, 0.503006,-99) , 
4, 0.999048, 1, 0, 0.507081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490708,-99) , 
4, 0.999982, 0, 0, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448635,-99) , 
4, 0.999619, 0, 0, 0.49808,-99) , 
5, 0.237009, 0, 0, 0.501164,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0114017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490399,-99) , 
5, -0.810433, 0, 0, 0.513369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498484,-99) , 
2, 0.153309, 0, 0, 0.499705,-99) , 
2, -0.0711275, 1, 0, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478611,-99) , 
4, 0.999048, 0, 0, 0.500948,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.00739879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214216, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485618,-99) , 
4, 0.998571, 0, 0, 0.502774,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0162254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.89757, 1, 1, 0.522445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48322,-99) , 
5, 0.233461, 0, 0, 0.494928,-99) , 
3, 4.603, 1, 0, 0.513348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497424,-99) , 
4, 0.999977, 1, 0, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480282,-99) , 
4, 0.999524, 0, 0, 0.499699,-99) , 
2, -0.0715033, 1, 0, 0.502213,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0133109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.152997, 1, 1, 0.506404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470436,-99) , 
5, -0.809975, 0, 0, 0.49647,-99) , 
2, 0.0714736, 1, 0, 0.504653,-99) , 
NN(
0, 
0, 
-1, -0.0500564, 1, -1, 0.488483,-99) , 
0, 0.504757, 1, 0, 0.50348,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0183236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498928,-99) , 
5, -0.431413, 0, 0, 0.511566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49628,-99) , 
2, 0.213689, 0, 0, 0.497735,-99) , 
3, 1.16929, 1, 0, 0.502504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482975,-99) , 
2, -0.0779837, 0, 0, 0.500624,-99) , 
NN(
0, 
0, 
-1, 0.139786, 0, -1, 0.479989,-99) , 
2, 0.0716406, 1, 0, 0.494152,-99) , 
3, 4.67556, 1, 0, 0.500929,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0124304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493578,-99) , 
4, 0.999932, 0, 0, 0.502133,-99) , 
4, 0.998571, 1, 0, 0.502754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485626,-99) , 
0, 0.489972, 1, 0, 0.499737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472328,-99) , 
5, 0.14201, 1, 0, 0.49112,-99) , 
0, 0.491424, 0, 0, 0.501819,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0209595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492017,-99) , 
5, 0.0437352, 0, 0, 0.51917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47975,-99) , 
2, 0.310526, 1, 0, 0.507801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488737,-99) , 
2, -0.0159756, 1, 0, 0.49632,-99) , 
2, 0.0306673, 0, 0, 0.499745,-99) , 
2, -0.214216, 1, 0, 0.5008,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0175883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999705, 1, 1, 0.51475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489774,-99) , 
1, 0.00271543, 0, 0, 0.498052,-99) , 
5, 0.635973, 1, 0, 0.507847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482428,-99) , 
4, 0.999964, 0, 0, 0.49834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464178,-99) , 
4, 0.999619, 0, 0, 0.496904,-99) , 
5, 0.237176, 0, 0, 0.500646,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0124986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49351,-99) , 
5, -0.619867, 1, 0, 0.495809,-99) , 
2, -0.213136, 1, 0, 0.496541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474332,-99) , 
4, 0.999048, 0, 0, 0.495485,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0148302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496032,-99) , 
5, 0.613339, 1, 0, 0.517484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497889,-99) , 
5, 0.612839, 0, 0, 0.500344,-99) , 
4, 0.999524, 1, 0, 0.502104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484838,-99) , 
3, 3.28268, 1, 0, 0.494675,-99) , 
NN(
0, 
0, 
-1, -0.854974, 0, -1, 0.481206,-99) , 
3, 1.22035, 0, 0, 0.490326,-99) , 
5, -0.619327, 0, 0, 0.498841,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.00996804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496367,-99) , 
0, 0.499043, 0, 0, 0.499014,-99) , 
2, -0.213257, 1, 0, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475558,-99) , 
4, 0.999048, 0, 0, 0.498841,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0132766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21427, 1, 1, 0.504364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521309,-99) , 
NN(
0, 
0, 
-1, -0.903341, 1, -1, 0.481852,-99) , 
5, -0.85501, 0, 0, 0.490828,-99) , 
5, -0.80969, 0, 0, 0.502242,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.014176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495679,-99) , 
5, -0.43416, 0, 0, 0.509284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495755,-99) , 
2, -0.214261, 1, 0, 0.497036,-99) , 
3, 0.929784, 1, 0, 0.49964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479683,-99) , 
3, 8.99658, 1, 0, 0.499042,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0191707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
5, 0.617862, 1, 0, 0.527389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499262,-99) , 
4, 0.999977, 1, 0, 0.503775,-99) , 
4, 0.999524, 1, 0, 0.506632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491488,-99) , 
3, 1.59154, 0, 0, 0.501461,-99) , 
NN(
0, 
0, 
-1, 0.0708488, 1, -1, 0.483975,-99) , 
3, 3.57125, 1, 0, 0.496625,-99) , 
5, -0.333828, 0, 0, 0.502491,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.00937837);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.514494,-99) , 
NN(
NN(
0, 
0, 
-1, -0.214438, 1, 1, 0.503167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482327,-99) , 
3, 3.75034, 1, 0, 0.496098,-99) , 
5, -0.238763, 0, 0, 0.499974,-99) , 
0, 0.490472, 1, 0, 0.500787,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.016979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492672,-99) , 
4, 0.999955, 0, 0, 0.502045,-99) , 
4, 0.999048, 1, 0, 0.503309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484061,-99) , 
3, 3.81659, 1, 0, 0.501473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464126,-99) , 
5, 0.427324, 1, 0, 0.493941,-99) , 
0, 0.5019, 1, 0, 0.501393,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.00937176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520093,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.497093,-99) , 
5, 0.807615, 0, 0, 0.498046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461694,-99) , 
4, 0.998572, 0, 0, 0.496928,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0147354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0656482, 1, 1, 0.5166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495964,-99) , 
3, 0.51889, 1, 0, 0.497882,-99) , 
0, 0.492376, 1, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464822,-99) , 
3, 9.28394, 1, 0, 0.49915,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0108965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492533,-99) , 
4, 0.999909, 0, 0, 0.508395,-99) , 
NN(
0, 
0, 
-1, 0.0714191, 1, -1, 0.497881,-99) , 
0, 0.494281, 1, 0, 0.499961,-99) , 
NN(
0, 
0, 
-1, 0.427569, 0, -1, 0.475871,-99) , 
4, 0.999524, 0, 0, 0.498086,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0080573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.656973, 1, 1, 0.509554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457291,-99) , 
4, 0.999429, 0, 0, 0.499059,-99) , 
5, 0.521156, 0, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
0, 0.489519, 0, 0, 0.500448,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0229037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488006,-99) , 
0, 0.501809, 1, 0, 0.511195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479435,-99) , 
0, 0.492376, 0, 0, 0.508128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483795,-99) , 
4, 0.999982, 0, 0, 0.498887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470021,-99) , 
4, 0.999619, 0, 0, 0.497658,-99) , 
5, 0.237176, 0, 0, 0.501232,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0230665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34215, 1, 1, 0.517661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476648,-99) , 
5, -0.0545258, 0, 0, 0.489886,-99) , 
3, 4.35154, 1, 0, 0.507608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477025,-99) , 
3, 4.65723, 1, 0, 0.512656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492432,-99) , 
2, -0.00733562, 1, 0, 0.498132,-99) , 
2, 0.153, 0, 0, 0.499715,-99) , 
2, -0.0714699, 1, 0, 0.501157,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0130397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
3, 2.46584, 1, 0, 0.521464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468493,-99) , 
5, -0.0484399, 0, 0, 0.489752,-99) , 
3, 4.59162, 1, 0, 0.510998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
2, -0.227886, 1, 0, 0.500483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479163,-99) , 
4, 0.999524, 0, 0, 0.499226,-99) , 
2, 0.0713923, 0, 0, 0.501424,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0132164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486596,-99) , 
5, 0.832644, 1, 0, 0.503053,-99) , 
4, 0.999048, 1, 0, 0.505449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497262,-99) , 
5, -0.592755, 0, 0, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472997,-99) , 
3, 6.35504, 1, 0, 0.498772,-99) , 
5, -0.144767, 0, 0, 0.502137,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.00733699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.51516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498894,-99) , 
2, -0.215048, 1, 0, 0.499565,-99) , 
5, -0.904973, 1, 0, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479639,-99) , 
4, 0.999048, 0, 0, 0.499884,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.026205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615933, 1, 1, 0.527432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496527,-99) , 
4, 0.999977, 1, 0, 0.501414,-99) , 
4, 0.999524, 1, 0, 0.504561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480674,-99) , 
4, 0.999995, 0, 0, 0.500855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466177,-99) , 
4, 0.999905, 0, 0, 0.497755,-99) , 
5, -0.334494, 0, 0, 0.501748,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.00851488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214318, 0, 1, 0.50349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480687,-99) , 
4, 0.999048, 0, 0, 0.502384,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0121492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.502122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451073,-99) , 
5, 0.32518, 1, 0, 0.475379,-99) , 
4, 0.999819, 0, 0, 0.500391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483414,-99) , 
5, 0.776524, 0, 0, 0.507905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452215,-99) , 
5, 0.332351, 0, 0, 0.490479,-99) , 
4, 0.999524, 0, 0, 0.499595,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0126657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60418, 1, 1, 0.513093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497587,-99) , 
3, 1.14693, 1, 0, 0.500361,-99) , 
2, -0.0729279, 1, 0, 0.502272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487417,-99) , 
5, -0.240822, 0, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0.0711657, 1, -1, 0.48809,-99) , 
0, 0.499995, 0, 0, 0.49342,-99) , 
3, 4.55908, 1, 0, 0.500527,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.027968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49347,-99) , 
1, -0.00469066, 1, 0, 0.505295,-99) , 
NN(
0, 
0, 
-1, 0.585917, 1, -1, 0.493458,-99) , 
0, 0.5019, 1, 0, 0.503085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481009,-99) , 
4, 0.999991, 0, 0, 0.498611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473757,-99) , 
4, 0.99981, 0, 0, 0.4972,-99) , 
5, -0.238763, 0, 0, 0.500401,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0105235);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5058, 0, 1, 0.503908,-99) , 
NN(
NN(
0, 
0, 
-1, 0.48961, 0, 1, 0.509327,-99) , 
NN(
0, 
0, 
-1, -0.429166, 0, -1, 0.493811,-99) , 
0, 0.491106, 1, 0, 0.496118,-99) , 
0, 0.49809, 0, 0, 0.50007,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0140459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495293,-99) , 
2, 0.0305384, 0, 0, 0.499052,-99) , 
2, -0.214315, 1, 0, 0.50013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472124,-99) , 
3, 9.27754, 1, 0, 0.49939,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0139856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498126,-99) , 
2, -0.112709, 1, 0, 0.499971,-99) , 
2, 0.213689, 0, 0, 0.501512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487957,-99) , 
2, -0.00343934, 0, 0, 0.497372,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.478001,-99) , 
2, 0.0713923, 1, 0, 0.491315,-99) , 
3, 4.67556, 1, 0, 0.499596,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0084917);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214259, 0, 1, 0.503202,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.483555,-99) , 
4, 0.999524, 0, 0, 0.501653,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0113019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.504067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491128,-99) , 
2, 0.0784078, 1, 0, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0.0437588, 0, -1, 0.479701,-99) , 
2, -0.0711969, 0, 0, 0.494368,-99) , 
3, 4.54701, 1, 0, 0.502144,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0216928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.670557, 1, 1, 0.536619,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.490488,-99) , 
1, 0.00171271, 0, 0, 0.505182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498061,-99) , 
2, -0.0729046, 1, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, -0.470317, 0, -1, 0.488098,-99) , 
3, 3.28755, 1, 0, 0.497387,-99) , 
5, 0.235939, 0, 0, 0.500043,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0157899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213367, 0, 1, 0.50699,-99) , 
NN(
0, 
0, 
-1, -0.311794, 0, -1, 0.489763,-99) , 
3, 6.70108, 1, 0, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479975,-99) , 
5, 0.806372, 1, 0, 0.504298,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0237857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497449,-99) , 
0, 0.501084, 1, 0, 0.507026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479464,-99) , 
0, 0.490471, 0, 0, 0.505711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481799,-99) , 
4, 0.999995, 0, 0, 0.498586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478379,-99) , 
4, 0.999905, 0, 0, 0.496766,-99) , 
5, -0.333918, 0, 0, 0.502007,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.012643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99999, 1, 1, 0.505105,-99) , 
NN(
0, 
0, 
-1, -0.619445, 0, -1, 0.491845,-99) , 
4, 0.999932, 0, 0, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475733,-99) , 
4, 0.998571, 0, 0, 0.501509,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.00899575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.871042, 0, 1, 0.517253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
4, 0.999524, 1, 0, 0.501181,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.493961,-99) , 
5, -0.483535, 0, 0, 0.498524,-99) , 
5, 0.807616, 0, 0, 0.499527,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0127843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0668194, 1, 1, 0.504017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49202,-99) , 
0, 0.500948, 0, 0, 0.497192,-99) , 
3, 2.2649, 1, 0, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480284,-99) , 
3, 9.27754, 1, 0, 0.500385,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.00923696);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.50418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486642,-99) , 
4, 0.999048, 0, 0, 0.503342,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.00952288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.515556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497249,-99) , 
3, 0.922651, 1, 0, 0.499357,-99) , 
3, 8.92177, 0, 0, 0.499975,-99) , 
2, 0.214318, 0, 0, 0.500806,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0113981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496001,-99) , 
2, -0.212959, 1, 0, 0.496828,-99) , 
3, 8.80206, 0, 0, 0.497557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479702,-99) , 
4, 0.999048, 0, 0, 0.496705,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0158332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487903,-99) , 
3, 2.53593, 1, 0, 0.510564,-99) , 
NN(
0, 
0, 
-1, 0.134825, 0, -1, 0.488419,-99) , 
3, 4.72622, 1, 0, 0.503625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495409,-99) , 
5, 0.612532, 0, 0, 0.496792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473938,-99) , 
4, 0.999048, 0, 0, 0.496031,-99) , 
2, -0.0715943, 1, 0, 0.497426,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0266519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494943,-99) , 
3, 4.86999, 1, 0, 0.506961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489085,-99) , 
5, 0.713013, 1, 0, 0.50512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483779,-99) , 
1, 0.00171271, 0, 0, 0.502248,-99) , 
NN(
0, 
0, 
-1, -0.873299, 0, -1, 0.493919,-99) , 
5, -0.334818, 0, 0, 0.498807,-99) , 
0, 0.497138, 1, 0, 0.501424,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.00807381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.514781,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503159,-99) , 
NN(
0, 
0, 
-1, 0.330142, 1, -1, 0.494333,-99) , 
0, 0.492376, 0, 0, 0.502209,-99) , 
2, 0.214259, 0, 0, 0.502883,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0136645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.648409, 1, 1, 0.510442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476681,-99) , 
5, 0.450362, 1, 0, 0.50179,-99) , 
5, 0.508612, 0, 0, 0.504111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514798,-99) , 
NN(
0, 
0, 
-1, 1.70344, 0, -1, 0.490456,-99) , 
5, -0.755363, 0, 0, 0.493369,-99) , 
5, -0.714586, 0, 0, 0.501729,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0137586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0710359, 0, 1, 0.507368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490553,-99) , 
5, -0.904948, 0, 0, 0.505982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499257,-99) , 
4, 0.999048, 1, 0, 0.503314,-99) , 
NN(
0, 
0, 
-1, -0.773417, 0, -1, 0.492027,-99) , 
5, -0.0483239, 0, 0, 0.497415,-99) , 
0, 0.499043, 0, 0, 0.501043,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0102754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49712,-99) , 
2, -0.21706, 1, 0, 0.498007,-99) , 
4, 0.999048, 1, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478626,-99) , 
3, 9.28394, 1, 0, 0.498914,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00957878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.504306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480315,-99) , 
4, 0.998571, 0, 0, 0.503553,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.00828168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498407,-99) , 
4, 0.999932, 0, 0, 0.509015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
3, 8.30368, 0, 0, 0.498967,-99) , 
2, -0.0709931, 1, 0, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473472,-99) , 
4, 0.998572, 0, 0, 0.4999,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0155448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491206,-99) , 
0, 0.499043, 1, 0, 0.521714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487277,-99) , 
4, 0.999887, 0, 0, 0.501479,-99) , 
4, 0.999524, 1, 0, 0.504025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497448,-99) , 
2, 0.0709182, 0, 0, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.488529,-99) , 
3, 3.6755, 1, 0, 0.49761,-99) , 
5, -0.23876, 0, 0, 0.501098,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0107102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.504906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457265,-99) , 
5, -0.619445, 0, 0, 0.494597,-99) , 
4, 0.999932, 0, 0, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485016,-99) , 
4, 0.998572, 0, 0, 0.502194,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0106796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.514663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497218,-99) , 
2, 0.214967, 0, 0, 0.498332,-99) , 
5, -0.904861, 1, 0, 0.499726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47048,-99) , 
4, 0.998572, 0, 0, 0.498825,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.00450892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499751,-99) , 
4, 0.999501, 1, 0, 0.500432,-99) , 
0, 0.505709, 0, 0, 0.501272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487331,-99) , 
4, 0.999048, 0, 0, 0.500607,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00513152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214259, 0, 1, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48295,-99) , 
4, 0.998572, 0, 0, 0.501486,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.00976162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.06395, 0, 1, 0.504495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483164,-99) , 
4, 0.998571, 0, 0, 0.50383,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.00670271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.358617, 0, 1, 0.518557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475011,-99) , 
3, 7.3928, 1, 0, 0.499757,-99) , 
3, 0.506019, 1, 0, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479232,-99) , 
3, 9.01337, 1, 0, 0.500513,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00666481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515569,-99) , 
NN(
0, 
0, 
-1, 0.635459, 1, -1, 0.497815,-99) , 
5, 0.807615, 0, 0, 0.498717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47941,-99) , 
3, 9.28394, 1, 0, 0.498207,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0136672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.5141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481773,-99) , 
2, 0.0714232, 1, 0, 0.49904,-99) , 
5, -0.0499974, 0, 0, 0.506358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494915,-99) , 
2, -0.0091757, 1, 0, 0.503076,-99) , 
NN(
0, 
0, 
-1, 0.522682, 1, -1, 0.495947,-99) , 
3, 0.950151, 1, 0, 0.497811,-99) , 
3, 4.67556, 0, 0, 0.499434,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00902904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46809,-99) , 
2, -0.0729046, 0, 0, 0.496275,-99) , 
5, -0.809664, 0, 0, 0.502447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484966,-99) , 
0, 0.489519, 0, 0, 0.501883,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0169811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495514,-99) , 
5, -0.864569, 0, 0, 0.506424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492952,-99) , 
3, 4.72677, 0, 0, 0.495954,-99) , 
5, -0.431184, 1, 0, 0.500089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498054,-99) , 
4, 0.998617, 1, 0, 0.502555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466253,-99) , 
5, 0.332351, 0, 0, 0.490873,-99) , 
4, 0.999524, 0, 0, 0.499353,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.00683043);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479324,-99) , 
4, 0.998571, 0, 0, 0.502129,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0159686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
2, -0.215862, 1, 0, 0.500607,-99) , 
4, 0.999048, 1, 0, 0.502518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481506,-99) , 
4, 0.999995, 0, 0, 0.49667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46809,-99) , 
4, 0.999905, 0, 0, 0.494221,-99) , 
5, -0.429173, 0, 0, 0.499439,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.00755051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.502261,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.478203,-99) , 
4, 0.999524, 0, 0, 0.500396,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.018387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485572,-99) , 
3, 4.58053, 1, 0, 0.505973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494718,-99) , 
2, 0.0187768, 0, 0, 0.496497,-99) , 
2, 0.0304372, 0, 0, 0.499315,-99) , 
NN(
0, 
0, 
-1, 0.0418603, 0, -1, 0.480446,-99) , 
2, -0.214434, 0, 0, 0.498342,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0117747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.492438, 0, 1, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0.493102, 0, -1, 0.494054,-99) , 
5, 0.522679, 1, 0, 0.504055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493975,-99) , 
2, -0.0302412, 1, 0, 0.496186,-99) , 
2, 0.214568, 0, 0, 0.497318,-99) , 
0, 0.49809, 1, 0, 0.500667,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00612979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499014,-99) , 
0, 0.505981, 0, 0, 0.499737,-99) , 
0, 0.490471, 1, 0, 0.500437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480125,-99) , 
4, 0.999048, 0, 0, 0.499481,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0153113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.590444, 1, 1, 0.526048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487688,-99) , 
4, 0.999887, 0, 0, 0.501532,-99) , 
4, 0.999524, 1, 0, 0.504354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470183,-99) , 
4, 0.999968, 0, 0, 0.498603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459342,-99) , 
4, 0.999905, 0, 0, 0.495342,-99) , 
5, -0.429072, 0, 0, 0.500989,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0123075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490838,-99) , 
3, 3.70114, 1, 0, 0.503235,-99) , 
4, 0.998572, 1, 0, 0.503987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483634,-99) , 
2, -0.0710427, 0, 0, 0.496502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48034,-99) , 
5, 0.617628, 1, 0, 0.493993,-99) , 
3, 4.54701, 1, 0, 0.502007,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00844192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498,-99) , 
2, 0.214158, 0, 0, 0.498909,-99) , 
0, 0.505709, 0, 0, 0.499764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470453,-99) , 
4, 0.998571, 0, 0, 0.498858,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0101021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498165,-99) , 
2, 0.0306718, 0, 0, 0.500523,-99) , 
2, -0.214186, 1, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470827,-99) , 
4, 0.999048, 0, 0, 0.499956,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0078487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498301,-99) , 
2, -0.0714207, 1, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, 0.520438, 0, -1, 0.487644,-99) , 
4, 0.999592, 0, 0, 0.499143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475037,-99) , 
4, 0.998571, 0, 0, 0.498388,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0155679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482818,-99) , 
0, 0.491696, 0, 0, 0.505859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481929,-99) , 
1, -1.3377e-05, 1, 0, 0.491159,-99) , 
0, 0.5019, 1, 0, 0.503269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495432,-99) , 
0, 0.492376, 1, 0, 0.497907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466585,-99) , 
4, 0.999619, 0, 0, 0.496594,-99) , 
5, 0.237176, 0, 0, 0.498861,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.00675096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213004, 1, 1, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.484216,-99) , 
4, 0.999592, 0, 0, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47579,-99) , 
4, 0.998572, 0, 0, 0.500123,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0164602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489709,-99) , 
4, 0.999819, 0, 0, 0.501801,-99) , 
4, 0.999048, 1, 0, 0.505847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491033,-99) , 
3, 3.67204, 1, 0, 0.501399,-99) , 
NN(
0, 
0, 
-1, 3.1018, 1, -1, 0.486901,-99) , 
5, -0.864085, 0, 0, 0.498314,-99) , 
5, -0.0486215, 0, 0, 0.50181,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.00638898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526384,-99) , 
NN(
0, 
0, 
-1, 7.32403, 1, -1, 0.498184,-99) , 
3, 9.02197, 0, 0, 0.499043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484146,-99) , 
4, 0.999048, 0, 0, 0.498337,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0140056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49818,-99) , 
5, -0.959266, 1, 0, 0.515129,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503711,-99) , 
NN(
0, 
0, 
-1, 3.2179, 1, -1, 0.488443,-99) , 
5, -0.452331, 0, 0, 0.499099,-99) , 
5, -0.904949, 1, 0, 0.500426,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0148435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489073,-99) , 
3, 3.70052, 1, 0, 0.501337,-99) , 
5, 0.61785, 0, 0, 0.503818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482021,-99) , 
3, 4.64189, 1, 0, 0.510139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496393,-99) , 
2, -0.0502197, 1, 0, 0.497564,-99) , 
2, 0.152864, 0, 0, 0.498934,-99) , 
2, -0.0715985, 1, 0, 0.499825,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.00799342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.864086, 0, 1, 0.511644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499328,-99) , 
4, 0.99966, 1, 0, 0.500411,-99) , 
5, -0.809719, 1, 0, 0.502252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473795,-99) , 
4, 0.998571, 0, 0, 0.501371,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.020186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49362,-99) , 
4, 0.999986, 0, 0, 0.50706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474446,-99) , 
4, 0.999714, 0, 0, 0.505507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494761,-99) , 
4, 0.999524, 1, 0, 0.497746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476581,-99) , 
0, 0.491424, 0, 0, 0.496326,-99) , 
5, 0.0465172, 1, 0, 0.501657,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0150107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.506818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462387,-99) , 
5, -0.715245, 0, 0, 0.500189,-99) , 
4, 0.999955, 0, 0, 0.505163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48643,-99) , 
4, 0.999048, 0, 0, 0.504277,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.00755386);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520195,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494754, 1, 1, 0.501946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477937,-99) , 
2, 0.0711723, 1, 0, 0.494464,-99) , 
3, 4.42867, 1, 0, 0.500395,-99) , 
0, 0.489519, 1, 0, 0.501072,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0118528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499683,-99) , 
2, 0.0651457, 0, 0, 0.503293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492728,-99) , 
5, 0.712784, 0, 0, 0.494803,-99) , 
3, 2.63282, 1, 0, 0.500014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476821,-99) , 
3, 9.01337, 1, 0, 0.499325,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0180652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486239,-99) , 
5, 0.656714, 1, 0, 0.524465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493585,-99) , 
4, 0.999932, 0, 0, 0.50229,-99) , 
4, 0.999524, 1, 0, 0.504861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479377,-99) , 
4, 0.999982, 0, 0, 0.499512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4721,-99) , 
4, 0.999905, 0, 0, 0.49719,-99) , 
5, -0.429171, 0, 0, 0.502021,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00780196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484082,-99) , 
4, 0.999524, 0, 0, 0.499319,-99) , 
5, 0.807937, 0, 0, 0.500235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511549,-99) , 
NN(
0, 
0, 
-1, 0.516051, 1, -1, 0.487938,-99) , 
2, -0.0713196, 1, 0, 0.493465,-99) , 
0, 0.494281, 0, 0, 0.498858,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0104192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47208,-99) , 
3, 7.52406, 1, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469437,-99) , 
3, 9.27754, 1, 0, 0.5019,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0135893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482497,-99) , 
4, 0.999773, 0, 0, 0.502854,-99) , 
4, 0.999048, 1, 0, 0.505075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488716,-99) , 
4, 0.999982, 0, 0, 0.497266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457612,-99) , 
4, 0.999619, 0, 0, 0.495575,-99) , 
5, 0.331932, 0, 0, 0.498405,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0120515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49439,-99) , 
2, 0.212494, 0, 0, 0.494935,-99) , 
0, 0.505709, 0, 0, 0.495454,-99) , 
4, 0.998571, 1, 0, 0.49613,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0143802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0729279, 1, 1, 0.504654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476719,-99) , 
5, -0.0511434, 0, 0, 0.492231,-99) , 
3, 4.44424, 1, 0, 0.501774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491773,-99) , 
0, 0.496503, 1, 0, 0.500854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492959,-99) , 
4, 0.999524, 1, 0, 0.493683,-99) , 
2, -0.0716606, 1, 0, 0.494923,-99) , 
0, 0.500947, 0, 0, 0.496775,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.00679631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514328,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.498083,-99) , 
2, -0.214327, 1, 0, 0.498741,-99) , 
NN(
0, 
0, 
-1, 0.427517, 0, -1, 0.48519,-99) , 
4, 0.999524, 0, 0, 0.497672,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0134525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4955,-99) , 
4, 0.999932, 1, 0, 0.509217,-99) , 
4, 0.999524, 1, 0, 0.515095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497614,-99) , 
2, 0.0755115, 0, 0, 0.500752,-99) , 
NN(
0, 
0, 
-1, 0.0714402, 1, -1, 0.494067,-99) , 
3, 2.60647, 1, 0, 0.49803,-99) , 
5, 0.712478, 0, 0, 0.499789,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00910028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999786, 1, 1, 0.503221,-99) , 
NN(
0, 
0, 
-1, 0.999252, 1, -1, 0.488099,-99) , 
4, 0.999592, 0, 0, 0.502349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469517,-99) , 
4, 0.998572, 0, 0, 0.501332,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.00550634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0746095, 0, 1, 0.516245,-99) , 
NN(
0, 
0, 
-1, 7.60744, 1, -1, 0.49899,-99) , 
3, 0.511841, 1, 0, 0.500298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475576,-99) , 
3, 9.27754, 1, 0, 0.499644,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.00444463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499914,-99) , 
5, -0.809721, 1, 0, 0.500829,-99) , 
0, 0.490472, 1, 0, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488307,-99) , 
4, 0.999048, 0, 0, 0.500969,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0119109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494411,-99) , 
2, 0.072226, 1, 0, 0.504947,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.497318,-99) , 
0, 0.499995, 1, 0, 0.502365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476551,-99) , 
4, 0.998572, 0, 0, 0.501554,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00921488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519206,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999819, 1, 1, 0.503171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47818,-99) , 
4, 0.999048, 0, 0, 0.502338,-99) , 
5, 0.80818, 0, 0, 0.503228,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00947071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498766,-99) , 
0, 0.500539, 1, 0, 0.517802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497127,-99) , 
0, 0.495233, 0, 0, 0.512405,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.502754,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494659,-99) , 
5, -0.592548, 0, 0, 0.500124,-99) , 
5, 0.7113, 0, 0, 0.501405,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.012718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492271,-99) , 
0, 0.499039, 1, 0, 0.508516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495555,-99) , 
3, 2.27659, 1, 0, 0.500523,-99) , 
5, 0.712478, 0, 0, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464289,-99) , 
4, 0.998571, 0, 0, 0.500077,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00444869);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.516242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499901,-99) , 
5, 0.805629, 0, 0, 0.500608,-99) , 
0, 0.490471, 1, 0, 0.501244,-99) , 
2, 0.214245, 0, 0, 0.502056,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0056471);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481432,-99) , 
3, 9.30758, 1, 0, 0.501862,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0111211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497894,-99) , 
3, 2.65244, 1, 0, 0.505417,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.496781,-99) , 
5, -0.429566, 1, 0, 0.500141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477367,-99) , 
4, 0.999048, 0, 0, 0.499074,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0149739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495397,-99) , 
5, 0.332351, 0, 0, 0.51989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496362,-99) , 
2, -0.135859, 1, 0, 0.498095,-99) , 
4, 0.999524, 1, 0, 0.499998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491737,-99) , 
2, 0.0783343, 1, 0, 0.499751,-99) , 
NN(
0, 
0, 
-1, -0.0511353, 0, -1, 0.477321,-99) , 
2, -0.0712632, 0, 0, 0.492822,-99) , 
3, 4.6823, 1, 0, 0.498655,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.00443519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49972,-99) , 
4, 0.999767, 1, 0, 0.500531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488432,-99) , 
4, 0.999592, 0, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483476,-99) , 
4, 0.999048, 0, 0, 0.499243,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0108061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.588375, 1, 1, 0.517497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49893,-99) , 
3, 8.80206, 0, 0, 0.500226,-99) , 
4, 0.999524, 1, 0, 0.501916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493643,-99) , 
3, 2.61904, 1, 0, 0.502013,-99) , 
NN(
0, 
0, 
-1, 0.696017, 1, -1, 0.488755,-99) , 
3, 1.69599, 0, 0, 0.496116,-99) , 
5, -0.714581, 0, 0, 0.500631,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.010639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.504181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491084,-99) , 
5, 0.781002, 0, 0, 0.503566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470271,-99) , 
5, 0.427537, 0, 0, 0.491754,-99) , 
4, 0.999524, 0, 0, 0.503195,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0119376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490106,-99) , 
0, 0.502852, 1, 0, 0.508188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498052,-99) , 
2, 0.212294, 0, 0, 0.499152,-99) , 
5, 0.236791, 0, 0, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475042,-99) , 
4, 0.998572, 0, 0, 0.501246,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.013891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499186,-99) , 
4, 0.999967, 0, 0, 0.505502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475804,-99) , 
4, 0.999299, 0, 0, 0.504588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505488,-99) , 
NN(
0, 
0, 
-1, 0.77267, 1, -1, 0.488655,-99) , 
5, 0.834801, 0, 0, 0.49317,-99) , 
5, 0.61734, 1, 0, 0.502897,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0110565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
2, -0.0307707, 1, 0, 0.499589,-99) , 
2, 0.214078, 0, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483272,-99) , 
4, 0.998572, 0, 0, 0.499687,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.00923544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486865,-99) , 
2, -0.077871, 0, 0, 0.497419,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.483524,-99) , 
2, 0.0717536, 1, 0, 0.493154,-99) , 
3, 4.55908, 1, 0, 0.501103,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0144659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998617, 1, 1, 0.51724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495858,-99) , 
5, 0.329786, 0, 0, 0.510353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495736,-99) , 
3, 3.7114, 1, 0, 0.506584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492806,-99) , 
4, 0.999977, 1, 0, 0.496986,-99) , 
5, -0.524311, 1, 0, 0.500352,-99) , 
4, 0.999524, 1, 0, 0.501172,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0118168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494038,-99) , 
4, 0.999964, 0, 0, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482139,-99) , 
4, 0.999252, 0, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478229,-99) , 
4, 0.998572, 0, 0, 0.500543,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0101887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
2, 0.0155633, 0, 0, 0.508327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
2, -0.21434, 1, 0, 0.499426,-99) , 
3, 0.957074, 1, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470981,-99) , 
3, 9.28394, 1, 0, 0.500586,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00745297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.527713, 1, 1, 0.514979,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.49847,-99) , 
0, 0.491424, 1, 0, 0.499751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474172,-99) , 
2, 0.0711657, 0, 0, 0.4865,-99) , 
4, 0.999524, 0, 0, 0.498711,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.00980369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.509166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494444,-99) , 
2, -0.00349058, 1, 0, 0.498298,-99) , 
2, 0.0713265, 0, 0, 0.500216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475854,-99) , 
4, 0.998571, 0, 0, 0.499459,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.00654298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.212694, 0, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488296,-99) , 
4, 0.999048, 0, 0, 0.50216,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0103848);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999548, 1, 1, 0.503268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473726,-99) , 
0, 0.495233, 0, 0, 0.496034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453928,-99) , 
3, 4.65867, 1, 0, 0.488032,-99) , 
5, 0.617628, 1, 0, 0.501027,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.00967579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.496105,-99) , 
5, -0.23866, 0, 0, 0.500176,-99) , 
NN(
0, 
0, 
-1, 0.505075, 1, -1, 0.485401,-99) , 
0, 0.503804, 1, 0, 0.498584,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0129447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.072233, 0, 1, 0.507234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495457,-99) , 
0, 0.490472, 1, 0, 0.496544,-99) , 
3, 1.82655, 1, 0, 0.501501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479021,-99) , 
3, 9.27754, 1, 0, 0.500913,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0142258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492202,-99) , 
4, 0.999977, 0, 0, 0.506449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495526,-99) , 
4, 0.999977, 1, 0, 0.497493,-99) , 
2, 0.0653238, 0, 0, 0.499076,-99) , 
NN(
0, 
0, 
-1, 0.425772, 0, -1, 0.477829,-99) , 
4, 0.999524, 0, 0, 0.497417,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0175574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495867,-99) , 
4, 0.999998, 0, 0, 0.502207,-99) , 
NN(
0, 
0, 
-1, -0.71488, 0, -1, 0.491186,-99) , 
4, 0.999955, 0, 0, 0.499484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47761,-99) , 
4, 0.999048, 0, 0, 0.498473,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00792543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487844,-99) , 
3, 9.03751, 1, 0, 0.503249,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0213782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488213,-99) , 
4, 0.999977, 0, 0, 0.50506,-99) , 
4, 0.999524, 1, 0, 0.508235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494802,-99) , 
2, 0.281339, 1, 0, 0.511383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491697,-99) , 
2, 0.0140988, 0, 0, 0.497619,-99) , 
2, 0.153062, 0, 0, 0.499106,-99) , 
2, -0.0714203, 1, 0, 0.500786,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0114583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.6415, 1, 1, 0.519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486603,-99) , 
5, -0.144544, 1, 0, 0.498449,-99) , 
2, 0.13987, 0, 0, 0.50967,-99) , 
NN(
NN(
0, 
0, 
-1, 0.23679, 0, 1, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479142,-99) , 
0, 0.490471, 0, 0, 0.501675,-99) , 
2, 0.0718715, 0, 0, 0.503144,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.00893734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0534561, 0, 1, 0.506713,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.497425,-99) , 
0, 0.494281, 1, 0, 0.499299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473651,-99) , 
4, 0.999048, 0, 0, 0.498115,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.00667004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478354,-99) , 
5, 0.807615, 1, 0, 0.500568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477439,-99) , 
4, 0.999456, 0, 0, 0.499594,-99) , 
4, 0.998572, 1, 0, 0.500163,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0147109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.588846, 1, 1, 0.525542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477706,-99) , 
4, 0.999751, 0, 0, 0.500539,-99) , 
4, 0.999524, 1, 0, 0.503417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475895,-99) , 
4, 0.999982, 0, 0, 0.499323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46677,-99) , 
4, 0.999905, 0, 0, 0.496629,-99) , 
5, -0.429173, 0, 0, 0.500897,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.00685159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523391,-99) , 
NN(
0, 
0, 
-1, 0.806372, 1, -1, 0.49937,-99) , 
4, 0.999048, 1, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491518,-99) , 
0, 0.495233, 0, 0, 0.498086,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00648069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494387,-99) , 
5, 0.794032, 1, 0, 0.511639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499503,-99) , 
0, 0.490472, 1, 0, 0.500356,-99) , 
5, 0.712478, 0, 0, 0.501293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478341,-99) , 
4, 0.998572, 0, 0, 0.500584,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0110971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.85653, 0, 1, 0.503461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480047,-99) , 
5, 0.332165, 0, 0, 0.487816,-99) , 
3, 5.35729, 1, 0, 0.501584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474748,-99) , 
3, 9.3008, 1, 0, 0.500897,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00915241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487781,-99) , 
5, 0.833538, 1, 0, 0.508068,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.497136,-99) , 
5, 0.7113, 0, 0, 0.498021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483231,-99) , 
4, 0.999048, 0, 0, 0.497325,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00883971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50241,-99) , 
NN(
0, 
0, 
-1, -0.452693, 0, -1, 0.490856,-99) , 
0, 0.493328, 0, 0, 0.500653,-99) , 
NN(
0, 
0, 
-1, 0.499997, 1, -1, 0.484098,-99) , 
5, -0.905006, 0, 0, 0.499345,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0120748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484676,-99) , 
3, 4.41398, 1, 0, 0.504749,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.496824,-99) , 
5, -0.714586, 1, 0, 0.498711,-99) , 
NN(
NN(
0, 
0, 
-1, 0.780994, 0, 1, 0.502376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450734,-99) , 
5, 0.427517, 0, 0, 0.484511,-99) , 
4, 0.999524, 0, 0, 0.4976,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0053417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.215261, 0, 1, 0.502118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486166,-99) , 
4, 0.999048, 0, 0, 0.501366,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.011552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495091,-99) , 
0, 0.503306, 1, 0, 0.503541,-99) , 
2, 0.214186, 0, 0, 0.504117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480866,-99) , 
0, 0.489519, 0, 0, 0.503366,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.015216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496799,-99) , 
3, 4.5792, 0, 0, 0.498899,-99) , 
4, 0.999048, 1, 0, 0.500715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485277,-99) , 
4, 0.999995, 0, 0, 0.495738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467224,-99) , 
4, 0.999905, 0, 0, 0.493373,-99) , 
5, -0.428995, 0, 0, 0.497991,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0112766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139443, 1, 1, 0.515675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48381,-99) , 
3, 4.29342, 1, 0, 0.49751,-99) , 
0, 0.499996, 0, 0, 0.504332,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.495712,-99) , 
2, -0.0714203, 1, 0, 0.4973,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00904439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496303,-99) , 
0, 0.49682, 0, 0, 0.501459,-99) , 
5, 0.807937, 0, 0, 0.502129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479217,-99) , 
5, -0.768865, 0, 0, 0.496108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480733,-99) , 
5, 0.617848, 1, 0, 0.493938,-99) , 
0, 0.494281, 0, 0, 0.500474,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00660336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499235,-99) , 
4, 0.999728, 1, 0, 0.500296,-99) , 
4, 0.998572, 1, 0, 0.501235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473216,-99) , 
3, 9.00697, 1, 0, 0.500411,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0286331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489844,-99) , 
1, 0.00203009, 0, 0, 0.505205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490931,-99) , 
2, 0.071527, 0, 0, 0.49617,-99) , 
0, 0.496185, 0, 0, 0.502278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493795,-99) , 
0, 0.500946, 0, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 1.72462, 0, -1, 0.488637,-99) , 
5, -0.673766, 0, 0, 0.492604,-99) , 
5, -0.429072, 0, 0, 0.498694,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0070656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498548,-99) , 
3, 1.81195, 1, 0, 0.517485,-99) , 
NN(
0, 
0, 
-1, 0.535011, 1, 1, 0.502066,-99) , 
4, 0.999524, 1, 0, 0.503328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492678,-99) , 
3, 9.06114, 1, 0, 0.503021,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0128109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0559518, 0, 1, 0.517038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496931,-99) , 
5, 0.418285, 1, 0, 0.501937,-99) , 
0, 0.493328, 1, 0, 0.5042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497975,-99) , 
2, -0.0614719, 1, 0, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0.494282, 0, -1, 0.492429,-99) , 
5, -0.796077, 0, 0, 0.497621,-99) , 
5, -0.524163, 0, 0, 0.502046,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00971236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000748981, 0, 1, 0.508966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495825,-99) , 
3, 4.14507, 1, 0, 0.501812,-99) , 
5, 0.617341, 0, 0, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481385,-99) , 
4, 0.998572, 0, 0, 0.502082,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0169955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489905,-99) , 
0, 0.5019, 1, 0, 0.508639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475235,-99) , 
0, 0.499041, 0, 0, 0.492475,-99) , 
2, 0.0716951, 1, 0, 0.503697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489269,-99) , 
3, 2.6445, 1, 0, 0.507234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492147,-99) , 
2, -0.00387992, 1, 0, 0.497667,-99) , 
2, 0.0709182, 0, 0, 0.499117,-99) , 
3, 4.53227, 0, 0, 0.500037,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00902981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494459,-99) , 
5, -0.914002, 1, 0, 0.496889,-99) , 
5, -0.398018, 0, 0, 0.500274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48441,-99) , 
5, 0.805945, 1, 0, 0.499465,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00792389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494528,-99) , 
5, 0.775142, 1, 0, 0.507583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477219,-99) , 
5, 0.535745, 1, 0, 0.499896,-99) , 
5, 0.612533, 0, 0, 0.500925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474162,-99) , 
4, 0.998572, 0, 0, 0.500097,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0179755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.846478, 0, 1, 0.512874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496043,-99) , 
4, 0.999977, 1, 0, 0.500672,-99) , 
5, -0.810357, 1, 0, 0.502735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477786,-99) , 
0, 0.495278, 0, 0, 0.505361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457452,-99) , 
0, 0.499995, 1, 0, 0.489241,-99) , 
4, 0.999524, 0, 0, 0.501671,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0143191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495013,-99) , 
5, 0.712782, 1, 0, 0.504194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48321,-99) , 
2, -0.00728208, 1, 0, 0.495314,-99) , 
2, 0.00340686, 0, 0, 0.500266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487366,-99) , 
2, -0.139351, 1, 0, 0.498016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476912,-99) , 
5, -0.714473, 0, 0, 0.493431,-99) , 
2, -0.0714207, 0, 0, 0.499028,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.00768378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497855,-99) , 
4, 0.999728, 1, 0, 0.499108,-99) , 
3, 9.30758, 0, 0, 0.4997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486322,-99) , 
4, 0.998571, 0, 0, 0.499281,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0111579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.514367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495538,-99) , 
2, 0.0226713, 0, 0, 0.498913,-99) , 
2, -0.132804, 1, 0, 0.499779,-99) , 
NN(
0, 
0, 
-1, 0.0420499, 0, -1, 0.488643,-99) , 
2, -0.214438, 0, 0, 0.499195,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00432649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50347, 0, 1, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0.141875, 1, -1, 0.49275,-99) , 
0, 0.504167, 1, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48554,-99) , 
0, 0.489519, 0, 0, 0.49987,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.00841093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, 4.50054, 1, -1, 0.492383,-99) , 
4, 0.999955, 0, 0, 0.49985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484745,-99) , 
4, 0.999048, 0, 0, 0.499132,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00810079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
0, 0.499043, 1, 0, 0.508001,-99) , 
NN(
0, 
0, 
-1, 0.448712, 1, -1, 0.498031,-99) , 
5, 0.521156, 0, 0, 0.499803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479539,-99) , 
4, 0.999048, 0, 0, 0.498855,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0111146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494771,-99) , 
0, 0.505074, 1, 0, 0.511029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48946,-99) , 
2, -0.0709716, 0, 0, 0.499407,-99) , 
5, -0.524198, 1, 0, 0.503649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497891,-99) , 
0, 0.494598, 0, 0, 0.513533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496669,-99) , 
0, 0.489519, 1, 0, 0.497558,-99) , 
4, 0.999524, 1, 0, 0.49884,-99) , 
0, 0.500947, 0, 0, 0.50014,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0130751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490199, 1, 1, 0.502965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487173,-99) , 
1, 0.00171271, 0, 0, 0.49806,-99) , 
5, 0.42751, 1, 0, 0.50174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484329,-99) , 
0, 0.505709, 1, 0, 0.500989,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00879936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.21245, 0, 1, 0.502721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492481,-99) , 
2, -0.00360965, 0, 0, 0.499955,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.485742,-99) , 
2, 0.0712088, 1, 0, 0.495594,-99) , 
3, 4.6823, 1, 0, 0.501388,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00535359);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506117, 0, 1, 0.51228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494147,-99) , 
2, 0.0716951, 1, 0, 0.499148,-99) , 
5, 0.807615, 0, 0, 0.499969,-99) , 
0, 0.504757, 0, 0, 0.500895,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0156931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515408,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.49374,-99) , 
5, 0.807615, 0, 0, 0.494891,-99) , 
NN(
0, 
0, 
-1, -0.431527, 0, -1, 0.479497,-99) , 
0, 0.491424, 0, 0, 0.49366,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0117889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498485,-99) , 
3, 0.743516, 1, 0, 0.50117,-99) , 
4, 0.999048, 1, 0, 0.50253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485506,-99) , 
2, 0.0714131, 1, 0, 0.4982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47275,-99) , 
5, 0.614689, 1, 0, 0.49425,-99) , 
3, 4.55235, 1, 0, 0.500905,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00952679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495603,-99) , 
3, 1.58848, 1, 0, 0.514962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485966,-99) , 
5, 0.0467091, 0, 0, 0.494917,-99) , 
3, 4.51048, 1, 0, 0.508237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499672,-99) , 
0, 0.504757, 0, 0, 0.500581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476324,-99) , 
4, 0.999048, 0, 0, 0.499767,-99) , 
2, 0.0713923, 0, 0, 0.501329,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0142347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.670388, 1, 1, 0.516423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471337,-99) , 
4, 0.999796, 0, 0, 0.501273,-99) , 
4, 0.999524, 1, 0, 0.503281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486773,-99) , 
4, 0.999982, 0, 0, 0.499024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46962,-99) , 
4, 0.99981, 0, 0, 0.497355,-99) , 
5, -0.143761, 0, 0, 0.500351,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00877442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498265,-99) , 
3, 1.29225, 1, 0, 0.501248,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.486981,-99) , 
3, 6.47163, 1, 0, 0.500325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486913,-99) , 
3, 9.03111, 1, 0, 0.499929,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.00878181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499059,-99) , 
4, 0.999909, 1, 0, 0.500768,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.493671,-99) , 
0, 0.496186, 0, 0, 0.49844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480947,-99) , 
4, 0.999048, 0, 0, 0.497613,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0055042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499947,-99) , 
2, 0.0706018, 0, 0, 0.501523,-99) , 
NN(
0, 
0, 
-1, -0.333898, 0, -1, 0.489082,-99) , 
3, 6.20919, 1, 0, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481822,-99) , 
3, 9.27754, 1, 0, 0.500061,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.00810508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214245, 0, 1, 0.50218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515007,-99) , 
NN(
0, 
0, 
-1, -0.902902, 1, -1, 0.48611,-99) , 
5, -0.864063, 0, 0, 0.493967,-99) , 
5, -0.809687, 0, 0, 0.500901,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.00732858);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.81523, 0, 1, 0.50296,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.488075,-99) , 
4, 0.999524, 0, 0, 0.50179,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.00898791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999728, 1, 1, 0.507206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474394,-99) , 
4, 0.999592, 0, 0, 0.499549,-99) , 
0, 0.496186, 1, 0, 0.502109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474651,-99) , 
4, 0.998571, 0, 0, 0.501275,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.009268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0767748, 0, 1, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
5, 0.712478, 1, 0, 0.505417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499188,-99) , 
5, 0.71039, 0, 0, 0.500666,-99) , 
NN(
0, 
0, 
-1, -0.525717, 0, -1, 0.490574,-99) , 
0, 0.497818, 0, 0, 0.498608,-99) , 
0, 0.496186, 1, 0, 0.500904,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.00619646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494033,-99) , 
3, 1.82543, 0, 0, 0.514969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48151,-99) , 
3, 7.52541, 1, 0, 0.499891,-99) , 
0, 0.504757, 0, 0, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4723,-99) , 
3, 9.27754, 1, 0, 0.500257,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.012395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493759,-99) , 
0, 0.498362, 1, 0, 0.503324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49639,-99) , 
0, 0.506072, 0, 0, 0.497181,-99) , 
5, 0.426084, 0, 0, 0.498733,-99) , 
NN(
0, 
0, 
-1, -0.238643, 1, -1, 0.485219,-99) , 
0, 0.491424, 0, 0, 0.497656,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00969907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488318,-99) , 
0, 0.498499, 1, 0, 0.502561,-99) , 
0, 0.5019, 0, 0, 0.507309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499873,-99) , 
5, 0.80818, 0, 0, 0.500877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487109,-99) , 
2, -0.0784156, 1, 0, 0.49266,-99) , 
0, 0.5019, 1, 0, 0.499279,-99) , 
2, 0.0712088, 0, 0, 0.500768,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00976488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494954,-99) , 
4, 0.999932, 0, 0, 0.513019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499228,-99) , 
4, 0.999773, 1, 0, 0.500074,-99) , 
0, 0.502852, 0, 0, 0.502032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469182,-99) , 
5, 0.617632, 1, 0, 0.489354,-99) , 
4, 0.999524, 0, 0, 0.501035,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.00827057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479584,-99) , 
3, 7.20292, 1, 0, 0.501406,-99) , 
3, 8.87229, 0, 0, 0.502338,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.492232,-99) , 
4, 0.999524, 0, 0, 0.501536,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.013708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492182,-99) , 
0, 0.496457, 0, 0, 0.514701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491308,-99) , 
4, 0.999955, 0, 0, 0.50084,-99) , 
4, 0.999524, 1, 0, 0.501926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485652,-99) , 
2, 0.0777788, 0, 0, 0.490195,-99) , 
2, -0.0718251, 1, 0, 0.493711,-99) , 
0, 0.5019, 1, 0, 0.500249,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0110599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.839699, 0, 1, 0.508211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488057,-99) , 
0, 0.492376, 0, 0, 0.506289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
2, 0.0731123, 0, 0, 0.499734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487552,-99) , 
3, 6.63156, 1, 0, 0.498765,-99) , 
5, 0.332343, 0, 0, 0.500995,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.00901312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.507153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49951,-99) , 
4, 0.999637, 1, 0, 0.500796,-99) , 
5, -0.336382, 1, 0, 0.503526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486204,-99) , 
4, 0.999048, 0, 0, 0.502706,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0153685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496919,-99) , 
4, 0.999991, 1, 0, 0.50324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460863,-99) , 
3, 4.20522, 1, 0, 0.493812,-99) , 
4, 0.999955, 0, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48199,-99) , 
4, 0.999048, 0, 0, 0.500011,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0104427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49561,-99) , 
4, 0.999955, 0, 0, 0.51385,-99) , 
NN(
0, 
0, 
-1, -0.216574, 1, 1, 0.503183,-99) , 
0, 0.503805, 0, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.487079,-99) , 
4, 0.999524, 0, 0, 0.502969,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00680463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488258,-99) , 
5, 0.635752, 1, 0, 0.499838,-99) , 
5, 0.807937, 0, 0, 0.500643,-99) , 
NN(
0, 
0, 
-1, 0.48961, 0, -1, 0.488753,-99) , 
0, 0.491424, 0, 0, 0.499694,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.011041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490409,-99) , 
3, 4.18786, 1, 0, 0.502276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495808,-99) , 
3, 4.49925, 0, 0, 0.497706,-99) , 
5, -0.334766, 1, 0, 0.499682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488417,-99) , 
4, 0.999048, 0, 0, 0.499153,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0136113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493821,-99) , 
0, 0.494689, 0, 0, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0.330363, 1, -1, 0.494977,-99) , 
0, 0.499995, 1, 0, 0.49884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513133,-99) , 
NN(
0, 
0, 
-1, 0.495324, 1, -1, 0.483913,-99) , 
0, 0.503804, 0, 0, 0.48842,-99) , 
2, 0.0713923, 1, 0, 0.496957,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0136514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21723, 0, 1, 0.51549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
2, 0.0179303, 0, 0, 0.501784,-99) , 
2, -0.153096, 1, 0, 0.503295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495582,-99) , 
4, 0.999524, 1, 0, 0.499775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468329,-99) , 
5, -0.809686, 0, 0, 0.494931,-99) , 
2, 0.0713744, 1, 0, 0.501784,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0107743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620734, 1, 1, 0.505346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489357,-99) , 
4, 0.999524, 0, 0, 0.504187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499361,-99) , 
4, 0.999524, 1, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487566,-99) , 
3, 1.95978, 0, 0, 0.495584,-99) , 
5, -0.429558, 0, 0, 0.499826,-99) , 
0, 0.49809, 0, 0, 0.502032,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00866246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.137045, 0, 1, 0.507645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497309,-99) , 
2, 0.214318, 0, 0, 0.498018,-99) , 
0, 0.493329, 1, 0, 0.499522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480961,-99) , 
3, 8.92177, 1, 0, 0.498952,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00745329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502774, 1, 1, 0.512127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494071,-99) , 
2, 0.0712406, 1, 0, 0.499908,-99) , 
0, 0.502308, 0, 0, 0.501359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485574,-99) , 
5, -0.621425, 1, 0, 0.492191,-99) , 
0, 0.504757, 1, 0, 0.500695,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.010695);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.511576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494744,-99) , 
5, -0.451823, 0, 0, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0.542807, 1, -1, 0.491176,-99) , 
0, 0.493329, 0, 0, 0.499461,-99) , 
5, -0.904862, 1, 0, 0.500468,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0103211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498712,-99) , 
0, 0.489927, 1, 0, 0.499589,-99) , 
5, -0.0486232, 0, 0, 0.502407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483405,-99) , 
5, -0.647953, 0, 0, 0.495191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460536,-99) , 
5, 0.232078, 1, 0, 0.48591,-99) , 
0, 0.503804, 1, 0, 0.500654,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.00742857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524597,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.494892,-99) , 
5, -0.936553, 0, 0, 0.505438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490146,-99) , 
0, 0.503805, 1, 0, 0.499777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462631,-99) , 
5, -0.874617, 0, 0, 0.490155,-99) , 
5, -0.814192, 0, 0, 0.499011,-99) , 
5, -0.904829, 1, 0, 0.499543,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.00923453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494702,-99) , 
5, -0.755528, 0, 0, 0.500032,-99) , 
0, 0.490471, 1, 0, 0.500632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478599,-99) , 
0, 0.496457, 0, 0, 0.496432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471704,-99) , 
0, 0.499995, 1, 0, 0.489194,-99) , 
5, 0.7113, 1, 0, 0.499496,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.019923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.502716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484743,-99) , 
4, 0.999714, 0, 0, 0.501846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495949,-99) , 
0, 0.491696, 0, 0, 0.5126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482272,-99) , 
1, 0.00294375, 0, 0, 0.493373,-99) , 
0, 0.493328, 1, 0, 0.496088,-99) , 
5, 0.140867, 1, 0, 0.499659,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0159188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496017,-99) , 
4, 0.999998, 0, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 4.50054, 1, -1, 0.49156,-99) , 
4, 0.999955, 0, 0, 0.499252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483902,-99) , 
4, 0.999048, 0, 0, 0.498542,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.011573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491556,-99) , 
5, 0.332351, 0, 0, 0.511851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494654,-99) , 
5, -0.524311, 1, 0, 0.497651,-99) , 
4, 0.999524, 1, 0, 0.498782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485707,-99) , 
3, 9.28394, 1, 0, 0.498433,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0310751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.449053, 1, 1, 0.59057,-99) , 
NN(
0, 
0, 
-1, 0.509084, 0, -1, 0.489359,-99) , 
1, -0.00405493, 1, 0, 0.503086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
5, -0.755296, 0, 0, 0.508929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489414,-99) , 
3, 0.907935, 1, 0, 0.492595,-99) , 
0, 0.493329, 1, 0, 0.495382,-99) , 
5, -0.143493, 0, 0, 0.499266,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0148698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0795796, 1, 1, 0.508555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493883,-99) , 
0, 0.497047, 1, 0, 0.50112,-99) , 
0, 0.499995, 0, 0, 0.503662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464115,-99) , 
0, 0.495233, 0, 0, 0.490478,-99) , 
4, 0.999524, 0, 0, 0.502631,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00787459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336265, 1, 1, 0.518413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479882,-99) , 
3, 7.63805, 1, 0, 0.500877,-99) , 
3, 0.544889, 1, 0, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48311,-99) , 
3, 9.30758, 1, 0, 0.501899,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0197156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498638,-99) , 
0, 0.500947, 0, 0, 0.502172,-99) , 
4, 0.999048, 1, 0, 0.504483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48733,-99) , 
4, 0.999995, 0, 0, 0.499943,-99) , 
NN(
0, 
0, 
-1, -0.547343, 0, -1, 0.481442,-99) , 
4, 0.999905, 0, 0, 0.498141,-99) , 
5, -0.0495024, 0, 0, 0.50109,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0127176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498682,-99) , 
5, -0.241786, 0, 0, 0.503769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48376,-99) , 
2, 0.0717789, 0, 0, 0.48812,-99) , 
0, 0.492331, 0, 0, 0.501146,-99) , 
NN(
0, 
0, 
-1, -0.904814, 0, -1, 0.493181,-99) , 
0, 0.499995, 1, 0, 0.498439,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.00953477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49179,-99) , 
5, 0.200956, 1, 0, 0.496887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484888,-99) , 
5, -0.524159, 0, 0, 0.492462,-99) , 
0, 0.492376, 0, 0, 0.502962,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00851754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0.332172, 1, -1, 0.49291,-99) , 
0, 0.503306, 1, 0, 0.502021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485409,-99) , 
0, 0.489519, 0, 0, 0.501488,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00854214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497622,-99) , 
4, 0.999728, 1, 0, 0.498747,-99) , 
3, 8.87648, 0, 0, 0.499482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485384,-99) , 
4, 0.999048, 0, 0, 0.498826,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.00658901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.780248, 1, 1, 0.514728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49357,-99) , 
0, 0.499995, 1, 0, 0.508583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489993,-99) , 
5, -0.83686, 0, 0, 0.498555,-99) , 
0, 0.490471, 1, 0, 0.49944,-99) , 
5, 0.712783, 0, 0, 0.500362,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.00842268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.86418, 0, 1, 0.51315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
2, 0.214259, 0, 0, 0.500442,-99) , 
5, -0.809851, 1, 0, 0.502552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471904,-99) , 
4, 0.999048, 0, 0, 0.501164,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.012816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491041,-99) , 
2, 0.0718306, 1, 0, 0.50393,-99) , 
0, 0.503804, 0, 0, 0.505662,-99) , 
NN(
NN(
0, 
0, 
-1, -0.238645, 0, 1, 0.511865,-99) , 
NN(
0, 
0, 
-1, 0.999964, 0, -1, 0.494944,-99) , 
4, 0.99981, 1, 0, 0.496202,-99) , 
5, 0.332343, 0, 0, 0.498997,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0154525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497157,-99) , 
5, 0.588848, 1, 0, 0.526742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487994,-99) , 
4, 0.999955, 0, 0, 0.499049,-99) , 
4, 0.999524, 1, 0, 0.502244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481336,-99) , 
4, 0.999977, 0, 0, 0.498138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468635,-99) , 
4, 0.999905, 0, 0, 0.495681,-99) , 
5, -0.429699, 0, 0, 0.499807,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.011414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00253133, 0, 1, 0.512399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486688,-99) , 
5, 0.832351, 0, 0, 0.496977,-99) , 
5, 0.749267, 1, 0, 0.506222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497741,-99) , 
5, -0.0815695, 0, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 1.74566, 1, -1, 0.488009,-99) , 
5, 0.377646, 1, 0, 0.499141,-99) , 
5, 0.522678, 0, 0, 0.50056,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.011275);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511756,-99) , 
NN(
NN(
0, 
0, 
-1, -0.622693, 1, 1, 0.508973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495369,-99) , 
0, 0.493782, 1, 0, 0.497422,-99) , 
0, 0.503805, 0, 0, 0.498676,-99) , 
4, 0.999048, 1, 0, 0.499315,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.00678494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487628,-99) , 
3, 6.93003, 1, 0, 0.501187,-99) , 
3, 9.06289, 0, 0, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482106,-99) , 
4, 0.998571, 0, 0, 0.501169,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0146941);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.512493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488226,-99) , 
0, 0.491424, 0, 0, 0.5045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493434,-99) , 
2, 0.0189035, 0, 0, 0.495014,-99) , 
2, 0.0305644, 0, 0, 0.497822,-99) , 
2, -0.214314, 1, 0, 0.498615,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.010076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.513429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497137,-99) , 
5, 0.807615, 0, 0, 0.497875,-99) , 
0, 0.491424, 1, 0, 0.499072,-99) , 
NN(
0, 
0, 
-1, 0.614881, 1, -1, 0.484645,-99) , 
4, 0.999524, 0, 0, 0.49795,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0120228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714783, 1, 1, 0.505207,-99) , 
NN(
NN(
0, 
0, 
-1, 0.780777, 0, 1, 0.506633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468584,-99) , 
5, 0.427351, 0, 0, 0.493119,-99) , 
4, 0.999524, 0, 0, 0.504258,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0099606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491358,-99) , 
0, 0.501252, 1, 0, 0.506468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499356,-99) , 
0, 0.490724, 1, 0, 0.500165,-99) , 
0, 0.498498, 0, 0, 0.502253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49489,-99) , 
0, 0.502716, 1, 0, 0.498136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479079,-99) , 
5, 0.424899, 1, 0, 0.494226,-99) , 
0, 0.5019, 1, 0, 0.500614,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.015099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488136,-99) , 
5, 0.816859, 1, 0, 0.507769,-99) , 
4, 0.999048, 1, 0, 0.511323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490303,-99) , 
4, 0.999973, 0, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466294,-99) , 
4, 0.999429, 0, 0, 0.498593,-99) , 
5, 0.522678, 0, 0, 0.501172,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0146885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499516,-99) , 
0, 0.50054, 1, 0, 0.5176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482105,-99) , 
0, 0.495234, 0, 0, 0.508628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494347,-99) , 
2, -0.0305425, 1, 0, 0.497428,-99) , 
2, 0.214337, 0, 0, 0.498595,-99) , 
5, 0.713013, 0, 0, 0.49961,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00713948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809684, 1, 1, 0.501987,-99) , 
NN(
0, 
0, 
-1, -0.71448, 0, -1, 0.492772,-99) , 
0, 0.493329, 0, 0, 0.500579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472343,-99) , 
3, 8.8469, 1, 0, 0.499691,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00869658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494069,-99) , 
5, 0.425497, 1, 0, 0.500216,-99) , 
2, -0.214261, 1, 0, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482579,-99) , 
4, 0.999048, 0, 0, 0.500315,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0171117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488505,-99) , 
2, -0.071437, 0, 0, 0.506352,-99) , 
4, 0.998571, 1, 0, 0.509066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494902,-99) , 
2, -0.0689839, 1, 0, 0.497238,-99) , 
NN(
0, 
0, 
-1, 0.497139, 1, -1, 0.486385,-99) , 
3, 5.75605, 1, 0, 0.495972,-99) , 
5, 0.237176, 0, 0, 0.500454,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0114967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479894,-99) , 
5, 0.55188, 1, 0, 0.495956,-99) , 
0, 0.5019, 1, 0, 0.5031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494779,-99) , 
5, -0.809722, 1, 0, 0.498533,-99) , 
NN(
0, 
0, 
-1, -0.778027, 0, -1, 0.486264,-99) , 
3, 0.773576, 0, 0, 0.496378,-99) , 
5, -0.334036, 0, 0, 0.500312,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.00990158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.152864, 0, 1, 0.503387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48298,-99) , 
3, 4.72622, 1, 0, 0.496171,-99) , 
2, -0.0715985, 0, 0, 0.502167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485289,-99) , 
5, -0.493446, 0, 0, 0.494031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477251,-99) , 
5, 0.519708, 1, 0, 0.491112,-99) , 
0, 0.493328, 0, 0, 0.500484,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0110756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497059,-99) , 
0, 0.5019, 0, 0, 0.503751,-99) , 
5, -0.845967, 0, 0, 0.509344,-99) , 
NN(
NN(
0, 
0, 
-1, 0.66998, 1, -1, 0.497403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462515,-99) , 
5, -0.768731, 0, 0, 0.48707,-99) , 
5, -0.723643, 0, 0, 0.496682,-99) , 
5, -0.809723, 1, 0, 0.498737,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.00727264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488539,-99) , 
5, 0.825631, 1, 0, 0.500314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458993,-99) , 
5, -0.874627, 0, 0, 0.492939,-99) , 
5, -0.814212, 0, 0, 0.499721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471688,-99) , 
0, 0.499995, 1, 0, 0.490318,-99) , 
5, -0.904842, 0, 0, 0.498969,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.00915612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494851,-99) , 
4, 0.999991, 0, 0, 0.499515,-99) , 
4, 0.99981, 1, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.495296,-99) , 
5, 0.140868, 1, 0, 0.498744,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0121556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498272,-99) , 
5, 0.236791, 0, 0, 0.500309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484313,-99) , 
0, 0.490471, 0, 0, 0.499554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48726,-99) , 
3, 1.82952, 1, 0, 0.499883,-99) , 
NN(
0, 
0, 
-1, 0.138555, 0, -1, 0.476991,-99) , 
3, 4.60059, 1, 0, 0.492459,-99) , 
2, -0.0704894, 0, 0, 0.498265,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0171042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.513898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48502,-99) , 
3, 6.55703, 1, 0, 0.501902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485213,-99) , 
1, 0.000944641, 0, 0, 0.494569,-99) , 
5, -0.239734, 1, 0, 0.497961,-99) , 
2, 0.214245, 0, 0, 0.498819,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.011345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499684,-99) , 
5, 0.658415, 1, 0, 0.51474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496407,-99) , 
0, 0.492376, 1, 0, 0.498331,-99) , 
4, 0.999524, 1, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494871,-99) , 
5, -0.42907, 0, 0, 0.498215,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.00997868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.904844, 1, 1, 0.504801,-99) , 
NN(
0, 
0, 
-1, -0.238613, 1, -1, 0.49171,-99) , 
0, 0.490471, 0, 0, 0.504097,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.00822105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0396863, 0, 1, 0.511935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496357,-99) , 
5, -0.0508846, 0, 0, 0.498669,-99) , 
0, 0.503804, 0, 0, 0.500124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480225,-99) , 
4, 0.998572, 0, 0, 0.499521,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0104246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493904,-99) , 
0, 0.495777, 0, 0, 0.512755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499386,-99) , 
5, -0.334036, 1, 0, 0.501527,-99) , 
4, 0.999524, 1, 0, 0.502403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491963,-99) , 
0, 0.505632, 1, 0, 0.502628,-99) , 
NN(
0, 
0, 
-1, -0.0500619, 1, -1, 0.477814,-99) , 
0, 0.502988, 0, 0, 0.495599,-99) , 
0, 0.5019, 1, 0, 0.501007,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.00797945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486291,-99) , 
0, 0.489791, 0, 0, 0.500917,-99) , 
4, 0.999048, 1, 0, 0.501648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486199,-99) , 
0, 0.503986, 0, 0, 0.499036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478702,-99) , 
5, 0.332178, 1, 0, 0.494164,-99) , 
0, 0.502852, 1, 0, 0.500517,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.01462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493567,-99) , 
2, -0.00306257, 1, 0, 0.499852,-99) , 
2, 0.0717536, 0, 0, 0.501845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485792,-99) , 
4, 0.999995, 0, 0, 0.493844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460739,-99) , 
4, 0.999905, 0, 0, 0.49125,-99) , 
5, -0.524162, 0, 0, 0.498387,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.012276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493035,-99) , 
0, 0.497138, 0, 0, 0.501414,-99) , 
5, 0.672236, 1, 0, 0.504611,-99) , 
NN(
0, 
0, 
-1, 0.999322, 0, -1, 0.494433,-99) , 
5, 0.617845, 0, 0, 0.495976,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.00823698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497224,-99) , 
3, 4.38351, 1, 0, 0.507336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494625,-99) , 
0, 0.505573, 1, 0, 0.5034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510041,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.496736,-99) , 
4, 0.998572, 1, 0, 0.497142,-99) , 
0, 0.502852, 0, 0, 0.498112,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00677106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498755,-99) , 
2, 0.0291075, 0, 0, 0.500575,-99) , 
2, -0.21551, 1, 0, 0.501234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487209,-99) , 
4, 0.999048, 0, 0, 0.500577,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00856761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0714715, 0, 1, 0.512725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
0, 0.494916, 1, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487267,-99) , 
4, 0.999048, 0, 0, 0.499221,-99) , 
0, 0.494281, 1, 0, 0.502034,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0111602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499633,-99) , 
5, -0.524308, 1, 0, 0.503015,-99) , 
4, 0.999048, 1, 0, 0.503715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494286,-99) , 
0, 0.504712, 0, 0, 0.497614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47185,-99) , 
4, 0.999524, 0, 0, 0.495566,-99) , 
0, 0.499995, 1, 0, 0.500952,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00977599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.528403, 1, 1, 0.514132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490798,-99) , 
4, 0.999887, 0, 0, 0.501137,-99) , 
0, 0.503805, 0, 0, 0.502539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480281,-99) , 
2, -0.0709931, 1, 0, 0.488651,-99) , 
4, 0.999524, 0, 0, 0.501449,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.011827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.514852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486695,-99) , 
5, 0.646975, 1, 0, 0.502944,-99) , 
NN(
0, 
0, 
-1, -0.720321, 1, -1, 0.493652,-99) , 
5, -0.673708, 0, 0, 0.500386,-99) , 
5, 0.713013, 0, 0, 0.50187,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.00355402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214336, 1, 1, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488587,-99) , 
4, 0.999388, 0, 0, 0.500577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487062,-99) , 
4, 0.998571, 0, 0, 0.500159,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00921404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495343,-99) , 
0, 0.5019, 1, 0, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477764,-99) , 
3, 7.53083, 1, 0, 0.500806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474134,-99) , 
3, 9.28394, 1, 0, 0.500116,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.00831573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49442,-99) , 
2, 0.0714191, 1, 0, 0.500216,-99) , 
NN(
0, 
0, 
-1, 3.93732, 1, -1, 0.492657,-99) , 
0, 0.494281, 0, 0, 0.49874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488111,-99) , 
0, 0.494689, 1, 0, 0.49626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462999,-99) , 
0, 0.499995, 1, 0, 0.484897,-99) , 
4, 0.999524, 0, 0, 0.497658,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0112228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496373,-99) , 
2, 0.131008, 0, 0, 0.49744,-99) , 
2, 0.21255, 0, 0, 0.49821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476798,-99) , 
4, 0.999048, 0, 0, 0.497219,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0103182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498281,-99) , 
3, 0.357432, 1, 0, 0.510813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496335,-99) , 
4, 0.999524, 1, 0, 0.49724,-99) , 
3, 0.519893, 1, 0, 0.498304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479872,-99) , 
3, 9.04907, 1, 0, 0.497775,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0128084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.828855, 1, 1, 0.505723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488213,-99) , 
5, -0.955107, 1, 0, 0.497028,-99) , 
5, -0.882167, 0, 0, 0.504406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477342,-99) , 
4, 0.999796, 0, 0, 0.495787,-99) , 
4, 0.998571, 1, 0, 0.497861,-99) , 
5, 0.237178, 1, 0, 0.502201,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0133293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494693,-99) , 
4, 0.999955, 0, 0, 0.502311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488757,-99) , 
3, 4.77162, 0, 0, 0.493609,-99) , 
5, 0.42399, 1, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477458,-99) , 
4, 0.999048, 0, 0, 0.499303,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0117238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493667,-99) , 
4, 0.999977, 1, 0, 0.51662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4984,-99) , 
5, -0.691933, 1, 0, 0.500657,-99) , 
5, 0.617341, 0, 0, 0.502582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46763,-99) , 
0, 0.499043, 1, 0, 0.489254,-99) , 
4, 0.999524, 0, 0, 0.501539,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0109635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496388,-99) , 
5, 0.233866, 1, 0, 0.505961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4967,-99) , 
2, 0.0269877, 0, 0, 0.499206,-99) , 
4, 0.999909, 1, 0, 0.500309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486342,-99) , 
4, 0.999048, 0, 0, 0.499658,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0158708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49734,-99) , 
5, -0.241154, 1, 0, 0.506427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493796,-99) , 
4, 0.999991, 1, 0, 0.499916,-99) , 
4, 0.999909, 1, 0, 0.500982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482584,-99) , 
4, 0.999048, 0, 0, 0.500121,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.00854535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499156,-99) , 
0, 0.5019, 0, 0, 0.500704,-99) , 
3, 8.73859, 0, 0, 0.501903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471905,-99) , 
5, 0.615871, 1, 0, 0.4885,-99) , 
4, 0.999524, 0, 0, 0.500858,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0121912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490492,-99) , 
5, -0.782508, 0, 0, 0.494568,-99) , 
5, -0.714533, 0, 0, 0.502027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46985,-99) , 
3, 9.27754, 1, 0, 0.501201,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00595761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499242,-99) , 
2, 0.0510641, 0, 0, 0.500345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478396,-99) , 
0, 0.489519, 0, 0, 0.499696,-99) , 
NN(
0, 
0, 
-1, 0.0448292, 1, -1, 0.482401,-99) , 
2, 0.214318, 1, 0, 0.498802,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0144303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999548, 1, 1, 0.506849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495628,-99) , 
2, -0.0728913, 1, 0, 0.497726,-99) , 
5, -0.460719, 0, 0, 0.503026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488613,-99) , 
0, 0.49741, 0, 0, 0.495786,-99) , 
NN(
0, 
0, 
-1, 0.762776, 1, -1, 0.482765,-99) , 
0, 0.499043, 1, 0, 0.490829,-99) , 
5, 0.617845, 1, 0, 0.501231,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0078069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498369,-99) , 
5, -0.714586, 1, 0, 0.500191,-99) , 
2, -0.214216, 1, 0, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479302,-99) , 
4, 0.998571, 0, 0, 0.500333,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0127205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488876,-99) , 
0, 0.503986, 1, 0, 0.50287,-99) , 
0, 0.505709, 0, 0, 0.50359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525388,-99) , 
NN(
0, 
0, 
-1, -0.813571, 1, -1, 0.489937,-99) , 
5, -0.755312, 0, 0, 0.49425,-99) , 
5, -0.714524, 0, 0, 0.501526,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00992524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499407,-99) , 
4, 0.999932, 1, 0, 0.50193,-99) , 
NN(
0, 
0, 
-1, -0.0656096, 0, -1, 0.495249,-99) , 
5, -0.429798, 1, 0, 0.497891,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.484357,-99) , 
4, 0.999524, 0, 0, 0.496841,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.011028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.51467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
4, 0.999048, 0, 0, 0.511806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497451,-99) , 
5, -0.615342, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490788,-99) , 
4, 0.999548, 0, 0, 0.500298,-99) , 
5, 0.615563, 0, 0, 0.502062,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00717518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000748981, 1, 1, 0.523555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491492,-99) , 
5, 0.848389, 1, 0, 0.513395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478023,-99) , 
4, 0.999527, 0, 0, 0.499261,-99) , 
0, 0.489519, 1, 0, 0.49988,-99) , 
5, 0.712478, 0, 0, 0.501249,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00906741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.869759, 1, 1, 0.527957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499424,-99) , 
0, 0.49605, 1, 0, 0.501254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491082,-99) , 
5, 0.376267, 0, 0, 0.494512,-99) , 
0, 0.493328, 0, 0, 0.50022,-99) , 
5, 0.806372, 0, 0, 0.501731,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00977624);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4988,-99) , 
5, -0.336014, 1, 0, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.482103,-99) , 
4, 0.999592, 0, 0, 0.500781,-99) , 
4, 0.998572, 1, 0, 0.50171,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0112988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49754,-99) , 
5, 0.0437088, 0, 0, 0.51566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496089,-99) , 
5, -0.311173, 0, 0, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477672,-99) , 
5, 0.80818, 1, 0, 0.499529,-99) , 
2, -0.214216, 1, 0, 0.500405,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00978654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514249,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0755115, 0, 1, 0.503858,-99) , 
NN(
0, 
0, 
-1, 0.214278, 1, -1, 0.494576,-99) , 
3, 3.16774, 1, 0, 0.50081,-99) , 
5, 0.807937, 0, 0, 0.501519,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00878192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493547,-99) , 
5, 0.617632, 1, 0, 0.509388,-99) , 
NN(
NN(
0, 
0, 
-1, -0.765224, 0, 1, 0.50666,-99) , 
NN(
0, 
0, 
-1, 0.0726123, 1, -1, 0.498009,-99) , 
5, -0.62073, 1, 0, 0.500587,-99) , 
4, 0.999524, 1, 0, 0.501299,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00765689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491668,-99) , 
0, 0.496185, 0, 0, 0.511586,-99) , 
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502396,-99) , 
4, 0.999524, 1, 0, 0.503124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49027,-99) , 
3, 8.92177, 1, 0, 0.502734,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00715595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475686,-99) , 
3, 7.53551, 1, 0, 0.500464,-99) , 
4, 0.999048, 1, 0, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483859,-99) , 
3, 9.28394, 1, 0, 0.501301,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00707734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493639,-99) , 
0, 0.506253, 1, 0, 0.506192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498525,-99) , 
3, 6.27909, 0, 0, 0.499337,-99) , 
0, 0.502852, 0, 0, 0.500401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486815,-99) , 
5, 0.80818, 1, 0, 0.499716,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0056013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.7113, 0, 1, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.492355,-99) , 
4, 0.999524, 0, 0, 0.501601,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0062646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526379,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497669,-99) , 
4, 0.998572, 1, 0, 0.498625,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0131314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483403,-99) , 
4, 0.999048, 0, 0, 0.503331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481075,-99) , 
5, 0.635764, 1, 0, 0.50191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47229,-99) , 
3, 2.88326, 1, 0, 0.486044,-99) , 
5, 0.0467097, 0, 0, 0.492675,-99) , 
2, 0.0712535, 1, 0, 0.501398,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0072041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502182,-99) , 
NN(
0, 
0, 
-1, 0.492377, 0, -1, 0.495809,-99) , 
5, -0.429701, 0, 0, 0.499801,-99) , 
NN(
0, 
0, 
-1, 0.0437588, 0, -1, 0.484166,-99) , 
2, -0.214191, 0, 0, 0.49899,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.00810112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
3, 1.09345, 0, 0, 0.49581,-99) , 
5, -0.809723, 0, 0, 0.501782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0.505074, 0, -1, 0.4887,-99) , 
5, -0.526635, 1, 0, 0.493397,-99) , 
0, 0.503804, 1, 0, 0.500879,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0086665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489635, 0, 1, 0.507604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497154,-99) , 
4, 0.999048, 1, 0, 0.49782,-99) , 
0, 0.490879, 1, 0, 0.498517,-99) , 
NN(
0, 
0, 
-1, 0.506117, 0, -1, 0.485881,-99) , 
0, 0.504757, 1, 0, 0.497614,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0114457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495275,-99) , 
2, -0.0703528, 0, 0, 0.502539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488268,-99) , 
5, -0.432986, 1, 0, 0.494233,-99) , 
0, 0.5019, 1, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.481244,-99) , 
4, 0.999524, 0, 0, 0.499347,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0104468);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497189,-99) , 
0, 0.497479, 1, 0, 0.498683,-99) , 
NN(
0, 
0, 
-1, -0.525854, 0, -1, 0.491954,-99) , 
0, 0.496412, 0, 0, 0.496468,-99) , 
0, 0.489519, 1, 0, 0.496978,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00724042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498415,-99) , 
4, 0.999773, 1, 0, 0.499726,-99) , 
3, 9.02197, 0, 0, 0.500367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487571,-99) , 
4, 0.999048, 0, 0, 0.499773,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00634429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483397,-99) , 
4, 0.999592, 0, 0, 0.500234,-99) , 
2, -0.214216, 1, 0, 0.501241,-99) , 
4, 0.999048, 1, 0, 0.502078,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0134843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499137,-99) , 
1, -1.58591e-05, 1, 0, 0.516025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494547,-99) , 
2, -0.0225612, 1, 0, 0.498551,-99) , 
2, 0.132864, 0, 0, 0.499527,-99) , 
NN(
0, 
0, 
-1, 0.0429197, 0, -1, 0.484066,-99) , 
2, 0.214467, 1, 0, 0.498732,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0108075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514199,-99) , 
NN(
NN(
0, 
0, 
-1, 0.214278, 0, 1, 0.504872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49657,-99) , 
5, -0.967197, 1, 0, 0.498938,-99) , 
5, -0.655584, 0, 0, 0.503252,-99) , 
5, 0.80818, 0, 0, 0.503818,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00842684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499045,-99) , 
3, 4.6823, 1, 0, 0.507885,-99) , 
NN(
0, 
0, 
-1, 0.498498, 1, -1, 0.498528,-99) , 
0, 0.499042, 0, 0, 0.500484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.491636,-99) , 
5, 0.522479, 0, 0, 0.494053,-99) , 
0, 0.500947, 1, 0, 0.498765,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.00771861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.333886, 0, 1, 0.510289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497527,-99) , 
5, -0.619449, 1, 0, 0.499356,-99) , 
4, 0.998571, 1, 0, 0.499908,-99) , 
0, 0.504757, 0, 0, 0.500686,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0100729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498705,-99) , 
5, 0.291385, 1, 0, 0.502976,-99) , 
5, 0.807937, 0, 0, 0.503499,-99) , 
NN(
0, 
0, 
-1, 4.58692, 1, -1, 0.490287,-99) , 
0, 0.493329, 0, 0, 0.501481,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0121112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490145,-99) , 
4, 0.999728, 0, 0, 0.506996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497069,-99) , 
4, 0.999728, 1, 0, 0.497922,-99) , 
5, 0.331927, 0, 0, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472196,-99) , 
4, 0.998572, 0, 0, 0.499624,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0124227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494394,-99) , 
4, 0.999955, 0, 0, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491366,-99) , 
4, 0.999524, 0, 0, 0.50191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496426,-99) , 
5, -0.0500564, 1, 0, 0.506532,-99) , 
NN(
0, 
0, 
-1, 0.503144, 1, -1, 0.493978,-99) , 
0, 0.503986, 0, 0, 0.49656,-99) , 
0, 0.49809, 1, 0, 0.499221,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0236723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999905, 1, 1, 0.50849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4877,-99) , 
1, 0.00294375, 0, 0, 0.498809,-99) , 
5, 0.108921, 1, 0, 0.501946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473427,-99) , 
4, 0.999973, 0, 0, 0.498125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466179,-99) , 
4, 0.999905, 0, 0, 0.495425,-99) , 
5, -0.334651, 0, 0, 0.499247,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00870184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490578,-99) , 
3, 2.95368, 1, 0, 0.501936,-99) , 
5, 0.425146, 0, 0, 0.506916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512484,-99) , 
NN(
0, 
0, 
-1, -0.214314, 0, -1, 0.498212,-99) , 
5, 0.807937, 0, 0, 0.498948,-99) , 
0, 0.494281, 1, 0, 0.500589,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00747069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0733373, 0, 1, 0.510103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485789,-99) , 
0, 0.495797, 0, 0, 0.498716,-99) , 
0, 0.494553, 1, 0, 0.500748,-99) , 
NN(
0, 
0, 
-1, -0.24138, 1, -1, 0.487459,-99) , 
0, 0.490471, 0, 0, 0.500029,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0068978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.520793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494925,-99) , 
1, 0.000311809, 1, 0, 0.508657,-99) , 
NN(
NN(
0, 
0, 
-1, 0.214628, 0, 1, 0.501308,-99) , 
NN(
0, 
0, 
-1, -0.720327, 1, -1, 0.494997,-99) , 
5, -0.673711, 0, 0, 0.499565,-99) , 
5, 0.713012, 0, 0, 0.500483,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00921995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.514679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493693,-99) , 
5, -0.75528, 0, 0, 0.500122,-99) , 
5, 0.713013, 0, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0.505573, 1, -1, 0.488159,-99) , 
0, 0.504757, 1, 0, 0.500668,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0114227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495316,-99) , 
4, 0.998617, 0, 0, 0.50934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496256,-99) , 
0, 0.502308, 0, 0, 0.497524,-99) , 
4, 0.999524, 1, 0, 0.498443,-99) , 
NN(
0, 
0, 
-1, 0.505709, 0, -1, 0.482992,-99) , 
0, 0.504757, 1, 0, 0.497332,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0135259);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.508145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
3, 2.07047, 0, 0, 0.501236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478705,-99) , 
3, 3.65159, 1, 0, 0.494181,-99) , 
2, -0.0718954, 0, 0, 0.499949,-99) , 
5, 0.0455488, 0, 0, 0.50343,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.007301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499701,-99) , 
5, 0.141876, 0, 0, 0.503667,-99) , 
2, -0.0713529, 1, 0, 0.511421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499415,-99) , 
5, 0.656098, 1, 0, 0.506141,-99) , 
NN(
0, 
0, 
-1, -0.0716276, 0, -1, 0.498474,-99) , 
5, 0.520347, 0, 0, 0.500063,-99) , 
0, 0.503805, 0, 0, 0.501328,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00920922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497493,-99) , 
0, 0.494871, 0, 0, 0.511627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492946,-99) , 
0, 0.502852, 1, 0, 0.50834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49808,-99) , 
3, 9.02828, 0, 0, 0.498868,-99) , 
4, 0.999048, 1, 0, 0.499684,-99) , 
5, -0.80969, 1, 0, 0.501064,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00910369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49789,-99) , 
0, 0.500947, 0, 0, 0.500013,-99) , 
4, 0.998571, 1, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479655,-99) , 
3, 9.27754, 1, 0, 0.50058,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00773585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.769634, 0, 1, 0.506541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498541,-99) , 
4, 0.999977, 1, 0, 0.500507,-99) , 
5, -0.715431, 1, 0, 0.501933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480257,-99) , 
5, 0.522495, 0, 0, 0.494324,-99) , 
4, 0.999524, 0, 0, 0.501337,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.00968426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000233741, 1, 1, 0.51321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495261,-99) , 
0, 0.494553, 0, 0, 0.502366,-99) , 
0, 0.490471, 1, 0, 0.502964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488977,-99) , 
5, 0.806372, 1, 0, 0.502257,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00694158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492083,-99) , 
5, 0.0422139, 0, 0, 0.50943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498364,-99) , 
3, 4.53227, 0, 0, 0.499556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488484,-99) , 
0, 0.490471, 0, 0, 0.498987,-99) , 
2, -0.214358, 1, 0, 0.499548,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0163989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0799414, 0, 1, 0.50751,-99) , 
NN(
0, 
0, 
-1, -0.0695844, 0, -1, 0.493717,-99) , 
3, 2.62115, 1, 0, 0.503958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492529,-99) , 
0, 0.498091, 1, 0, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0.0713923, 1, -1, 0.487381,-99) , 
5, -0.430098, 1, 0, 0.493336,-99) , 
3, 4.53188, 1, 0, 0.501855,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0110972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00132116, 0, 1, 0.51553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497844,-99) , 
0, 0.490154, 1, 0, 0.502765,-99) , 
5, 0.0468428, 0, 0, 0.507749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498665,-99) , 
5, -0.524865, 1, 0, 0.501421,-99) , 
NN(
0, 
0, 
-1, 0.497032, 1, -1, 0.493886,-99) , 
0, 0.498725, 0, 0, 0.49815,-99) , 
0, 0.494281, 1, 0, 0.500138,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0125487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497916,-99) , 
2, -0.0711275, 0, 0, 0.515139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496927,-99) , 
3, 4.72677, 0, 0, 0.498797,-99) , 
4, 0.999524, 1, 0, 0.500473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491837,-99) , 
3, 1.75854, 0, 0, 0.500124,-99) , 
NN(
0, 
0, 
-1, -0.78247, 0, -1, 0.488168,-99) , 
0, 0.497138, 0, 0, 0.495212,-99) , 
5, -0.61933, 0, 0, 0.499007,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0125382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499451, 1, 1, 0.506717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491243,-99) , 
3, 4.58323, 1, 0, 0.510107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4943,-99) , 
0, 0.49741, 1, 0, 0.500918,-99) , 
2, 0.0717536, 0, 0, 0.502562,-99) , 
0, 0.499043, 0, 0, 0.504318,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0102949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492477,-99) , 
4, 0.999728, 0, 0, 0.503871,-99) , 
4, 0.998572, 1, 0, 0.505977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494315,-99) , 
4, 0.999982, 0, 0, 0.499571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476422,-99) , 
4, 0.999619, 0, 0, 0.498624,-99) , 
5, 0.237012, 0, 0, 0.50113,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.010716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495738,-99) , 
4, 0.999977, 1, 0, 0.511292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494112,-99) , 
5, 0.308374, 1, 0, 0.501651,-99) , 
5, 0.616228, 0, 0, 0.502813,-99) , 
NN(
0, 
0, 
-1, -0.0711991, 0, -1, 0.490084,-99) , 
4, 0.999524, 0, 0, 0.501821,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00933632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494638,-99) , 
3, 1.7902, 0, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, -0.903472, 1, -1, 0.48891,-99) , 
5, -0.873305, 0, 0, 0.497026,-99) , 
5, -0.619913, 0, 0, 0.501451,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00921336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491396,-99) , 
4, 0.999955, 1, 0, 0.505674,-99) , 
4, 0.999048, 1, 0, 0.510654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498799,-99) , 
0, 0.490471, 1, 0, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477084,-99) , 
4, 0.999527, 0, 0, 0.498929,-99) , 
5, 0.713013, 0, 0, 0.500122,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00729777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498869,-99) , 
2, 0.153023, 0, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493136,-99) , 
2, -0.0714605, 0, 0, 0.498835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474273,-99) , 
0, 0.489519, 0, 0, 0.498049,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00817329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.508322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491225,-99) , 
5, -0.637995, 0, 0, 0.500097,-99) , 
5, -0.809947, 1, 0, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482528,-99) , 
4, 0.999048, 0, 0, 0.500576,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0160341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486058,-99) , 
0, 0.490471, 0, 0, 0.505611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48511,-99) , 
2, -0.00723552, 1, 0, 0.495751,-99) , 
2, 0.00345355, 0, 0, 0.501254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488823,-99) , 
5, 0.454724, 1, 0, 0.500569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475274,-99) , 
3, 2.48564, 1, 0, 0.485371,-99) , 
5, -0.143492, 0, 0, 0.493026,-99) , 
2, -0.0713712, 0, 0, 0.499773,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0114572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0708734, 1, 1, 0.514897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499088,-99) , 
4, 0.999048, 1, 0, 0.50217,-99) , 
3, 4.60166, 0, 0, 0.504783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495733,-99) , 
2, -0.0721637, 1, 0, 0.497547,-99) , 
NN(
0, 
0, 
-1, -0.411766, 1, -1, 0.487594,-99) , 
3, 5.75605, 1, 0, 0.496381,-99) , 
5, 0.235282, 0, 0, 0.499239,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0135929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
2, -0.0713196, 0, 0, 0.503629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476324,-99) , 
0, 0.489126, 1, 0, 0.490875,-99) , 
0, 0.490789, 0, 0, 0.502543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495643,-99) , 
5, -0.637474, 1, 0, 0.498115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472697,-99) , 
5, -0.809673, 0, 0, 0.49383,-99) , 
0, 0.500947, 1, 0, 0.500214,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0143621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494873,-99) , 
3, 1.14215, 1, 0, 0.498747,-99) , 
2, 0.215478, 0, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, -0.0714605, 0, -1, 0.489761,-99) , 
3, 4.53901, 1, 0, 0.49798,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00578016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
5, -0.938059, 1, 0, 0.512674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
5, -0.968271, 0, 0, 0.507404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49612,-99) , 
0, 0.501582, 1, 0, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490234,-99) , 
0, 0.489519, 0, 0, 0.499691,-99) , 
5, -0.904826, 1, 0, 0.500319,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00845736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49919,-99) , 
3, 4.34578, 0, 0, 0.501087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487126,-99) , 
5, -0.52585, 1, 0, 0.492061,-99) , 
2, 0.0713476, 1, 0, 0.499481,-99) , 
0, 0.505709, 0, 0, 0.500255,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0131259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00377189, 0, 1, 0.509835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482326,-99) , 
2, 0.0711097, 1, 0, 0.504988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497235,-99) , 
0, 0.5019, 0, 0, 0.4992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470733,-99) , 
4, 0.999619, 0, 0, 0.497995,-99) , 
5, 0.332343, 0, 0, 0.500061,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0087669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.859133, 1, 1, 0.517515,-99) , 
NN(
NN(
0, 
0, 
-1, -0.215584, 1, 1, 0.502716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468249,-99) , 
4, 0.999048, 0, 0, 0.501632,-99) , 
5, 0.804851, 0, 0, 0.502494,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0219238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497797,-99) , 
3, 2.73488, 1, 0, 0.501724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472456,-99) , 
1, -0.00119966, 1, 0, 0.495399,-99) , 
5, 0.331927, 1, 0, 0.500015,-99) , 
4, 0.999048, 1, 0, 0.500497,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00727246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.30498, 0, 1, 0.514725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498124,-99) , 
4, 0.998572, 1, 0, 0.49876,-99) , 
0, 0.490471, 1, 0, 0.499642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475815,-99) , 
3, 9.2955, 1, 0, 0.499019,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00951921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.194098, 1, 1, 0.50629,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.497648,-99) , 
5, 0.235939, 0, 0, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.47509,-99) , 
2, 0.213998, 1, 0, 0.499271,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00816753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499618,-99) , 
5, -0.855167, 0, 0, 0.506697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497072,-99) , 
5, -0.3799, 0, 0, 0.501398,-99) , 
5, -0.8099, 1, 0, 0.502219,-99) , 
NN(
0, 
0, 
-1, 0.506389, 1, -1, 0.49077,-99) , 
0, 0.504757, 1, 0, 0.501384,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00907362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487648,-99) , 
4, 0.998617, 0, 0, 0.510247,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.505036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490484,-99) , 
2, 0.0714021, 1, 0, 0.498813,-99) , 
5, -0.334494, 1, 0, 0.501557,-99) , 
4, 0.999524, 1, 0, 0.502262,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.00974873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0710427, 1, 1, 0.504345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495362,-99) , 
5, -0.334033, 1, 0, 0.49844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476579,-99) , 
4, 0.999524, 0, 0, 0.496731,-99) , 
0, 0.499043, 0, 0, 0.499955,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.00860717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.148566, 0, 1, 0.513738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496714,-99) , 
2, 0.0228083, 0, 0, 0.49903,-99) , 
2, -0.13268, 1, 0, 0.499855,-99) , 
NN(
0, 
0, 
-1, 0.0436897, 0, -1, 0.488231,-99) , 
2, -0.214313, 0, 0, 0.499261,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00744603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.78797, 1, 1, 0.512206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498921,-99) , 
5, -0.593648, 1, 0, 0.500646,-99) , 
5, 0.706693, 0, 0, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479664,-99) , 
4, 0.999048, 0, 0, 0.500605,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00851953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497209,-99) , 
4, 0.999964, 0, 0, 0.501432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465562,-99) , 
4, 0.999252, 0, 0, 0.500502,-99) , 
4, 0.998571, 1, 0, 0.501086,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00782783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.538465, 1, 1, 0.511067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49966,-99) , 
4, 0.999533, 1, 0, 0.500318,-99) , 
0, 0.491424, 1, 0, 0.501209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479346,-99) , 
4, 0.999977, 1, 0, 0.499173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477459,-99) , 
4, 0.999524, 0, 0, 0.493432,-99) , 
5, 0.615368, 1, 0, 0.500046,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.012218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497688,-99) , 
3, 2.59363, 1, 0, 0.517107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498273,-99) , 
4, 0.999524, 1, 0, 0.505047,-99) , 
5, -0.525036, 1, 0, 0.509063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497549,-99) , 
3, 4.20567, 0, 0, 0.499723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475166,-99) , 
4, 0.999524, 0, 0, 0.498337,-99) , 
2, -0.0714605, 1, 0, 0.500297,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00768053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214261, 1, 1, 0.502682,-99) , 
NN(
0, 
0, 
-1, 0.710406, 0, -1, 0.482268,-99) , 
4, 0.999524, 0, 0, 0.501111,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0123415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
0, 0.491696, 0, 0, 0.499283,-99) , 
5, 0.330143, 0, 0, 0.505616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495983,-99) , 
2, 0.050928, 0, 0, 0.498065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478222,-99) , 
2, 0.214186, 1, 0, 0.497143,-99) , 
0, 0.493328, 1, 0, 0.498461,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00769715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523453,-99) , 
NN(
NN(
0, 
0, 
-1, -0.62058, 1, 1, 0.514555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491003,-99) , 
0, 0.493737, 0, 0, 0.500382,-99) , 
0, 0.491424, 1, 0, 0.501527,-99) , 
4, 0.998571, 1, 0, 0.502249,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00999971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492283,-99) , 
2, 0.0711972, 1, 0, 0.500754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487448,-99) , 
3, 1.963, 0, 0, 0.493927,-99) , 
5, -0.524223, 0, 0, 0.498528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47813,-99) , 
0, 0.489519, 0, 0, 0.497877,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00602968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499187,-99) , 
2, 0.275538, 0, 0, 0.500034,-99) , 
4, 0.999048, 1, 0, 0.500851,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.485094,-99) , 
2, -0.214216, 0, 0, 0.500038,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.00899276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.563026, 1, 1, 0.502222,-99) , 
NN(
0, 
0, 
-1, -0.0719911, 0, -1, 0.491977,-99) , 
3, 5.14576, 1, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0.848966, 1, -1, 0.482754,-99) , 
5, 0.713012, 1, 0, 0.498894,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00730949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501492, 1, 1, 0.513019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494754,-99) , 
0, 0.495777, 1, 0, 0.504194,-99) , 
0, 0.499043, 0, 0, 0.508091,-99) , 
NN(
NN(
0, 
0, 
-1, -0.941106, 0, 1, 0.510131,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.498557,-99) , 
5, -0.904862, 1, 0, 0.499509,-99) , 
2, -0.0714605, 1, 0, 0.501079,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0117698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.807616, 0, 1, 0.506493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490668,-99) , 
0, 0.489791, 0, 0, 0.505474,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501084, 0, 1, 0.509619,-99) , 
NN(
0, 
0, 
-1, 0.502716, 1, -1, 0.496024,-99) , 
5, 0.614877, 0, 0, 0.497967,-99) , 
0, 0.499043, 1, 0, 0.502335,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.010206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.503495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490402,-99) , 
5, -0.337155, 1, 0, 0.495546,-99) , 
0, 0.495234, 0, 0, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0.617849, 1, -1, 0.482312,-99) , 
4, 0.999524, 0, 0, 0.499995,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00682068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499402,-99) , 
5, 0.0450308, 0, 0, 0.517014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493433,-99) , 
0, 0.495551, 0, 0, 0.498812,-99) , 
0, 0.489519, 1, 0, 0.499336,-99) , 
2, 0.214118, 0, 0, 0.50029,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0104879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499953,-99) , 
5, -0.932029, 1, 0, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479756,-99) , 
4, 0.999619, 0, 0, 0.500013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488162,-99) , 
5, 0.800168, 0, 0, 0.493022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468317,-99) , 
5, 0.862311, 1, 0, 0.490387,-99) , 
5, 0.427319, 1, 0, 0.497659,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0113712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507576,-99) , 
NN(
0, 
0, 
-1, -0.904927, 0, -1, 0.495889,-99) , 
0, 0.490471, 1, 0, 0.49648,-99) , 
NN(
0, 
0, 
-1, 0.427537, 0, -1, 0.477434,-99) , 
4, 0.999524, 0, 0, 0.495023,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00803789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0742047, 0, 1, 0.512732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495465,-99) , 
5, -0.741687, 0, 0, 0.500364,-99) , 
0, 0.492376, 1, 0, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486344,-99) , 
5, 0.80818, 1, 0, 0.501008,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0114032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497729,-99) , 
2, 0.0658112, 1, 0, 0.51262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498703,-99) , 
3, 0.385305, 1, 0, 0.500351,-99) , 
3, 3.27948, 0, 0, 0.502245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492444,-99) , 
2, -0.00349091, 0, 0, 0.498535,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.486439,-99) , 
2, 0.0713378, 1, 0, 0.494794,-99) , 
3, 4.55908, 1, 0, 0.500782,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0106045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500128, 1, 1, 0.503852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491638,-99) , 
2, -0.078322, 0, 0, 0.503727,-99) , 
NN(
0, 
0, 
-1, 0.141863, 1, -1, 0.487679,-99) , 
2, 0.0713036, 1, 0, 0.498796,-99) , 
3, 4.55235, 1, 0, 0.502858,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00897823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39956, 1, 1, 0.505899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49715,-99) , 
2, 0.15294, 0, 0, 0.498617,-99) , 
2, -0.0715091, 1, 0, 0.499905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48308,-99) , 
3, 9.03751, 1, 0, 0.499416,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0131258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.153, 1, 1, 0.503946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479443,-99) , 
4, 0.999048, 0, 0, 0.50313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481467,-99) , 
2, 0.139501, 0, 0, 0.496568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467832,-99) , 
5, -0.809896, 0, 0, 0.492161,-99) , 
2, 0.0714736, 1, 0, 0.501151,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0115473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485199,-99) , 
4, 0.999841, 0, 0, 0.502123,-99) , 
4, 0.999524, 1, 0, 0.502874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49466,-99) , 
5, -0.904828, 1, 0, 0.496067,-99) , 
0, 0.489247, 1, 0, 0.497086,-99) , 
0, 0.499043, 0, 0, 0.499536,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0123353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498492,-99) , 
5, 0.0457971, 1, 0, 0.504235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479288,-99) , 
4, 0.999048, 0, 0, 0.503121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492627,-99) , 
4, 0.999977, 1, 0, 0.495709,-99) , 
4, 0.999524, 1, 0, 0.497253,-99) , 
0, 0.499995, 1, 0, 0.501126,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00834769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498061,-99) , 
0, 0.491741, 0, 0, 0.507019,-99) , 
NN(
0, 
0, 
-1, -0.723629, 0, -1, 0.49883,-99) , 
0, 0.494281, 1, 0, 0.500507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505837,-99) , 
NN(
0, 
0, 
-1, 1.07711, 1, -1, 0.484989,-99) , 
5, -0.873149, 0, 0, 0.491636,-99) , 
5, -0.809724, 0, 0, 0.499123,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.014043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5344, 1, 1, 0.519322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495073,-99) , 
5, 0.380816, 1, 0, 0.501523,-99) , 
4, 0.999524, 1, 0, 0.503359,-99) , 
NN(
NN(
0, 
0, 
-1, -0.716284, 1, 1, 0.507102,-99) , 
NN(
0, 
0, 
-1, -0.809433, 1, -1, 0.490271,-99) , 
5, -0.764584, 0, 0, 0.495689,-99) , 
5, -0.61971, 0, 0, 0.501227,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0105514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49729,-99) , 
4, 0.999728, 1, 0, 0.498273,-99) , 
4, 0.998571, 1, 0, 0.498856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486755,-99) , 
5, -0.238761, 0, 0, 0.49328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476044,-99) , 
5, 0.33218, 1, 0, 0.489222,-99) , 
0, 0.502852, 1, 0, 0.497404,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00940998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492104, 1, 1, 0.503277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489637,-99) , 
0, 0.490471, 0, 0, 0.50258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472877,-99) , 
4, 0.999048, 0, 0, 0.501231,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0065685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499583,-99) , 
3, 8.81635, 0, 0, 0.500522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478969,-99) , 
2, 0.0714736, 0, 0, 0.487288,-99) , 
4, 0.999728, 0, 0, 0.499452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466174,-99) , 
4, 0.998572, 0, 0, 0.498465,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0058158);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.862561, 1, 1, 0.510182,-99) , 
NN(
NN(
0, 
0, 
-1, 0.476064, 0, 1, 0.501619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488145,-99) , 
5, 0.63144, 1, 0, 0.500996,-99) , 
5, 0.713012, 0, 0, 0.501921,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00492711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499439,-99) , 
2, -0.219248, 1, 0, 0.500212,-99) , 
3, 8.73859, 0, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.491292,-99) , 
4, 0.999524, 0, 0, 0.50014,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00552632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499847,-99) , 
3, 0.33106, 1, 0, 0.511938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491279,-99) , 
3, 6.36165, 1, 0, 0.499988,-99) , 
3, 0.518867, 1, 0, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475369,-99) , 
3, 9.28394, 1, 0, 0.50028,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00870495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499586,-99) , 
2, -0.212479, 1, 0, 0.500208,-99) , 
4, 0.999048, 1, 0, 0.501494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495293,-99) , 
5, -0.846564, 1, 0, 0.500915,-99) , 
NN(
0, 
0, 
-1, -0.912606, 1, -1, 0.483939,-99) , 
5, -0.877641, 0, 0, 0.49303,-99) , 
5, -0.714497, 0, 0, 0.499629,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.010419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.739098, 1, 1, 0.526177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494848,-99) , 
5, 0.805631, 0, 0, 0.498174,-99) , 
1, 0.00171271, 0, 0, 0.507043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49966,-99) , 
2, -0.218134, 1, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482032,-99) , 
4, 0.999619, 0, 0, 0.499895,-99) , 
5, 0.330465, 0, 0, 0.502008,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0133396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.519576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498265,-99) , 
3, 4.29875, 0, 0, 0.501249,-99) , 
4, 0.999524, 1, 0, 0.503677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483038,-99) , 
0, 0.505165, 1, 0, 0.502328,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.492919,-99) , 
0, 0.499043, 0, 0, 0.497031,-99) , 
5, -0.14435, 0, 0, 0.50038,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0139726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498982, 1, 1, 0.506669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495341,-99) , 
0, 0.502852, 0, 0, 0.497384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473985,-99) , 
5, 0.613031, 1, 0, 0.493735,-99) , 
3, 4.54028, 1, 0, 0.504126,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00754159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.769211, 0, 1, 0.510275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
2, -0.204801, 1, 0, 0.500489,-99) , 
5, -0.7149, 1, 0, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.490282,-99) , 
4, 0.999524, 0, 0, 0.501837,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0162964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488462,-99) , 
4, 0.999819, 0, 0, 0.50215,-99) , 
4, 0.999048, 1, 0, 0.503637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485909,-99) , 
2, -0.0728913, 0, 0, 0.501594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491168,-99) , 
4, 0.999905, 1, 0, 0.494891,-99) , 
3, 1.79988, 0, 0, 0.498481,-99) , 
5, -0.0483244, 0, 0, 0.500877,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00633141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499507,-99) , 
4, 0.999796, 1, 0, 0.500759,-99) , 
3, 9.02021, 0, 0, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46461,-99) , 
4, 0.998572, 0, 0, 0.500225,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0160741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.80818, 0, 1, 0.504851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478545,-99) , 
1, -0.00117234, 1, 0, 0.49829,-99) , 
NN(
0, 
0, 
-1, -0.854984, 1, -1, 0.489377,-99) , 
5, -0.619361, 0, 0, 0.495493,-99) , 
0, 0.5019, 1, 0, 0.502939,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0124209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491968, 1, 1, 0.506064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494992,-99) , 
5, -0.202656, 1, 0, 0.499838,-99) , 
0, 0.499043, 1, 0, 0.50342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485586,-99) , 
0, 0.498226, 1, 0, 0.498402,-99) , 
NN(
0, 
0, 
-1, 0.700626, 1, -1, 0.476718,-99) , 
0, 0.499995, 1, 0, 0.491872,-99) , 
5, 0.522202, 1, 0, 0.50116,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0144847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49053,-99) , 
3, 4.48153, 1, 0, 0.505689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496008,-99) , 
2, -0.109463, 1, 0, 0.497884,-99) , 
2, 0.0304589, 0, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0.0437595, 0, -1, 0.48535,-99) , 
2, -0.214434, 0, 0, 0.499448,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0111376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.780435, 1, 1, 0.512877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490574,-99) , 
4, 0.999977, 0, 0, 0.497764,-99) , 
5, 0.712479, 0, 0, 0.498881,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.477888,-99) , 
4, 0.999524, 0, 0, 0.497268,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00778807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517141,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497358,-99) , 
2, -0.214216, 1, 0, 0.498257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484014,-99) , 
4, 0.999048, 0, 0, 0.497591,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00679982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43054, 1, 1, 0.506353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484585,-99) , 
0, 0.505709, 1, 0, 0.499389,-99) , 
5, 0.142009, 0, 0, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478857,-99) , 
3, 9.28394, 1, 0, 0.501418,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00935697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482225,-99) , 
4, 0.999932, 0, 0, 0.507933,-99) , 
NN(
0, 
0, 
-1, 4.15751, 1, -1, 0.498181,-99) , 
3, 4.58396, 0, 0, 0.500112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477174,-99) , 
4, 0.998571, 0, 0, 0.499408,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00719038);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214259, 0, 1, 0.503208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483537,-99) , 
3, 9.03751, 1, 0, 0.502634,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00980872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49706,-99) , 
3, 3.40429, 0, 0, 0.499277,-99) , 
3, 7.77909, 0, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.484078,-99) , 
4, 0.999524, 0, 0, 0.49872,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00808186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999806, 1, 1, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488807,-99) , 
4, 0.999592, 0, 0, 0.502416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481535,-99) , 
4, 0.999048, 0, 0, 0.501454,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0118817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498848,-99) , 
3, 2.79954, 1, 0, 0.503559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481641,-99) , 
5, 0.807615, 1, 0, 0.502773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473148,-99) , 
4, 0.999048, 0, 0, 0.501432,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00823102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498079,-99) , 
5, 0.331929, 0, 0, 0.499767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466502,-99) , 
4, 0.999252, 0, 0, 0.498903,-99) , 
4, 0.998571, 1, 0, 0.499784,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00779882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.505492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495511,-99) , 
2, -0.00360647, 1, 0, 0.498732,-99) , 
2, 0.0712088, 0, 0, 0.499981,-99) , 
NN(
0, 
0, 
-1, 3.01006, 1, -1, 0.488101,-99) , 
5, -0.904844, 0, 0, 0.499039,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00874486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.848971, 1, 1, 0.510456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499032,-99) , 
2, 0.0755115, 0, 0, 0.501516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485251,-99) , 
2, 0.0711915, 1, 0, 0.495994,-99) , 
3, 2.51816, 1, 0, 0.499207,-99) , 
5, 0.713012, 0, 0, 0.500345,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00963591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.48961, 0, 1, 0.51377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494139,-99) , 
2, 0.0712747, 1, 0, 0.501456,-99) , 
0, 0.491424, 1, 0, 0.502438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47621,-99) , 
4, 0.998571, 0, 0, 0.501652,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0131414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493377,-99) , 
3, 4.6823, 1, 0, 0.502394,-99) , 
NN(
0, 
0, 
-1, -0.00105802, 1, -1, 0.479671,-99) , 
0, 0.490879, 0, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, -0.333881, 0, -1, 0.484,-99) , 
0, 0.504757, 1, 0, 0.499641,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00828945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499029,-99) , 
4, 0.999524, 1, 0, 0.499968,-99) , 
NN(
0, 
0, 
-1, 0.0678559, 1, -1, 0.491587,-99) , 
5, -0.714586, 0, 0, 0.49806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468292,-99) , 
4, 0.998571, 0, 0, 0.497177,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00787361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.509104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498073,-99) , 
4, 0.999048, 1, 0, 0.500385,-99) , 
3, 4.75875, 0, 0, 0.50208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491828,-99) , 
4, 0.999982, 0, 0, 0.49777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471455,-99) , 
4, 0.999619, 0, 0, 0.496664,-99) , 
5, 0.332343, 0, 0, 0.498261,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0101581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496941,-99) , 
3, 0.548904, 1, 0, 0.498403,-99) , 
3, 9.03628, 0, 0, 0.499207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485914,-99) , 
4, 0.999048, 0, 0, 0.498594,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00750912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499504,-99) , 
3, 4.42365, 0, 0, 0.50117,-99) , 
2, 0.217318, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0.427345, 0, -1, 0.487687,-99) , 
4, 0.999524, 0, 0, 0.501149,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0105338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488834,-99) , 
5, -0.145164, 1, 0, 0.495548,-99) , 
3, 4.6823, 1, 0, 0.502469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491664,-99) , 
0, 0.504439, 0, 0, 0.497465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477419,-99) , 
2, -0.0711171, 0, 0, 0.492838,-99) , 
0, 0.502852, 1, 0, 0.501019,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00543721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215584, 1, 1, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.485794,-99) , 
4, 0.999524, 0, 0, 0.500536,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00992868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496043,-99) , 
5, -0.429698, 1, 0, 0.500662,-99) , 
0, 0.503805, 0, 0, 0.503017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497572,-99) , 
0, 0.494281, 1, 0, 0.499255,-99) , 
NN(
0, 
0, 
-1, 1.40455, 0, -1, 0.493419,-99) , 
5, -0.428986, 0, 0, 0.4971,-99) , 
2, 0.0713744, 0, 0, 0.498187,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0116611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49947,-99) , 
3, 3.24031, 0, 0, 0.508272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495352,-99) , 
0, 0.503804, 0, 0, 0.496767,-99) , 
5, 0.712478, 0, 0, 0.497908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478078,-99) , 
3, 9.27754, 1, 0, 0.4974,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0105097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.504909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483646,-99) , 
4, 0.998572, 0, 0, 0.504265,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00475817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.862565, 1, 1, 0.513391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49482,-99) , 
2, 0.0714191, 1, 0, 0.499413,-99) , 
0, 0.505709, 0, 0, 0.500037,-99) , 
5, 0.80818, 0, 0, 0.500738,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00911776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0713218, 0, 1, 0.506819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491973,-99) , 
2, -0.0714203, 0, 0, 0.49981,-99) , 
0, 0.500675, 0, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0.490154, 0, -1, 0.486421,-99) , 
0, 0.491424, 0, 0, 0.500785,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00968824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0.863857, 1, -1, 0.48857,-99) , 
5, 0.780989, 1, 0, 0.500978,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.491594,-99) , 
5, -0.524162, 0, 0, 0.497923,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0101908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499613,-99) , 
2, -0.152867, 1, 0, 0.500565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490001,-99) , 
0, 0.492694, 1, 0, 0.495738,-99) , 
2, 0.071548, 1, 0, 0.499732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479035,-99) , 
1, 0.00294375, 0, 0, 0.488551,-99) , 
5, -0.80964, 1, 0, 0.491595,-99) , 
0, 0.502852, 1, 0, 0.498498,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00734281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499737,-99) , 
5, -0.714581, 1, 0, 0.501576,-99) , 
0, 0.505709, 0, 0, 0.502502,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.486862,-99) , 
4, 0.999524, 0, 0, 0.501303,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0120743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.642605, 1, 1, 0.514165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484668,-99) , 
4, 0.999841, 0, 0, 0.499606,-99) , 
4, 0.999524, 1, 0, 0.501397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491294,-99) , 
3, 2.2026, 1, 0, 0.502346,-99) , 
NN(
0, 
0, 
-1, 2.22754, 0, -1, 0.493452,-99) , 
2, -0.0718954, 1, 0, 0.495098,-99) , 
5, -0.238898, 0, 0, 0.498533,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492225,-99) , 
0, 0.506389, 1, 0, 0.506963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497668,-99) , 
3, 0.507168, 1, 0, 0.498978,-99) , 
NN(
0, 
0, 
-1, -0.0714605, 0, -1, 0.493406,-99) , 
3, 4.55908, 1, 0, 0.497907,-99) , 
0, 0.504757, 0, 0, 0.498581,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.00933341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491912,-99) , 
0, 0.500744, 1, 0, 0.501022,-99) , 
0, 0.502126, 0, 0, 0.501683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492809,-99) , 
2, 0.0710048, 0, 0, 0.498276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476304,-99) , 
5, -0.809668, 0, 0, 0.494315,-99) , 
0, 0.502852, 1, 0, 0.50057,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00847791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497693,-99) , 
4, 0.999048, 1, 0, 0.498356,-99) , 
2, 0.275304, 0, 0, 0.499114,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.480703,-99) , 
2, -0.214434, 0, 0, 0.498167,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.013352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493172,-99) , 
0, 0.503804, 1, 0, 0.502657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494385,-99) , 
2, -0.0572532, 1, 0, 0.497098,-99) , 
2, 0.00331247, 0, 0, 0.500204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483352,-99) , 
5, 0.223597, 1, 0, 0.49595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476091,-99) , 
5, -0.809643, 0, 0, 0.492863,-99) , 
2, -0.0715049, 0, 0, 0.498894,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0081707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496948,-99) , 
0, 0.503261, 1, 0, 0.50269,-99) , 
2, 0.0714191, 0, 0, 0.505451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499947,-99) , 
0, 0.49798, 0, 0, 0.50122,-99) , 
NN(
0, 
0, 
-1, 0.50028, 0, -1, 0.493704,-99) , 
0, 0.498499, 1, 0, 0.498757,-99) , 
0, 0.5019, 0, 0, 0.500145,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0105494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.273251, 0, 1, 0.504575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488497,-99) , 
2, -0.215839, 0, 0, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482152,-99) , 
4, 0.998571, 0, 0, 0.503203,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0164469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488188,-99) , 
4, 0.999637, 0, 0, 0.505655,-99) , 
4, 0.999048, 1, 0, 0.508745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489461,-99) , 
5, -0.352158, 1, 0, 0.498342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476109,-99) , 
4, 0.999619, 0, 0, 0.497448,-99) , 
5, 0.23679, 0, 0, 0.501298,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0078638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497706,-99) , 
4, 0.999819, 1, 0, 0.498583,-99) , 
3, 9.02828, 0, 0, 0.499324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483924,-99) , 
4, 0.999048, 0, 0, 0.498617,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.00563383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490154, 0, 1, 0.513987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485557,-99) , 
4, 0.999592, 0, 0, 0.499577,-99) , 
0, 0.491424, 1, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475227,-99) , 
4, 0.998572, 0, 0, 0.499969,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0111757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495315,-99) , 
5, 0.590669, 1, 0, 0.5167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484672,-99) , 
5, 0.794056, 1, 0, 0.499779,-99) , 
4, 0.999524, 1, 0, 0.501677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496629,-99) , 
3, 1.6111, 0, 0, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.490616,-99) , 
3, 2.08941, 1, 0, 0.496438,-99) , 
5, -0.428993, 0, 0, 0.499733,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0169494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.502706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48523,-99) , 
1, 0.00171271, 0, 0, 0.494974,-99) , 
5, -0.0492772, 1, 0, 0.499362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460246,-99) , 
0, 0.495233, 0, 0, 0.488903,-99) , 
4, 0.999524, 0, 0, 0.498554,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.00878055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.501237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469656,-99) , 
5, 0.517699, 0, 0, 0.484861,-99) , 
4, 0.999887, 0, 0, 0.499489,-99) , 
NN(
0, 
0, 
-1, 0.425395, 0, -1, 0.482798,-99) , 
4, 0.999524, 0, 0, 0.498214,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0105062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492259,-99) , 
0, 0.49809, 0, 0, 0.506298,-99) , 
NN(
0, 
0, 
-1, 0.549657, 1, -1, 0.496109,-99) , 
5, 0.712782, 0, 0, 0.497105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483478,-99) , 
3, 9.03111, 1, 0, 0.496702,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0118622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50054, 1, 1, 0.521918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497596,-99) , 
0, 0.495234, 0, 0, 0.513599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495815,-99) , 
4, 0.999705, 1, 0, 0.496463,-99) , 
3, 8.80206, 0, 0, 0.49726,-99) , 
4, 0.999524, 1, 0, 0.498581,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00937306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497571,-99) , 
5, -0.80969, 1, 0, 0.498979,-99) , 
0, 0.490471, 1, 0, 0.499543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507569,-99) , 
NN(
0, 
0, 
-1, 0.494553, 1, -1, 0.489075,-99) , 
0, 0.503805, 0, 0, 0.491869,-99) , 
2, -0.0716263, 0, 0, 0.498166,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00456466);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214318, 0, 1, 0.501738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480105,-99) , 
4, 0.998571, 0, 0, 0.501089,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0073079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498064,-99) , 
4, 0.999957, 1, 0, 0.499559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487084,-99) , 
4, 0.999546, 0, 0, 0.499116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480832,-99) , 
4, 0.999048, 0, 0, 0.498287,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00706295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491488,-99) , 
4, 0.999887, 0, 0, 0.500465,-99) , 
2, 0.214259, 0, 0, 0.501132,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.48665,-99) , 
4, 0.999524, 0, 0, 0.500021,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00792735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479959,-99) , 
4, 0.999592, 0, 0, 0.500821,-99) , 
4, 0.999048, 1, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0.0437352, 0, -1, 0.478619,-99) , 
2, -0.21427, 0, 0, 0.500467,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00752349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998617, 1, 1, 0.52166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496316,-99) , 
5, 0.332381, 0, 0, 0.513755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518401,-99) , 
NN(
0, 
0, 
-1, 0.807615, 1, -1, 0.497972,-99) , 
2, -0.215875, 1, 0, 0.498801,-99) , 
4, 0.999524, 1, 0, 0.499998,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0111268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471342,-99) , 
5, 0.848389, 1, 0, 0.501108,-99) , 
2, -0.214313, 1, 0, 0.502506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496531,-99) , 
3, 0.669546, 1, 0, 0.498107,-99) , 
NN(
0, 
0, 
-1, 0.0714191, 1, -1, 0.489238,-99) , 
3, 4.24534, 1, 0, 0.496204,-99) , 
5, -0.0486232, 0, 0, 0.499141,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00532195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511742,-99) , 
NN(
0, 
0, 
-1, 0.54795, 1, -1, 0.498417,-99) , 
5, 0.805945, 0, 0, 0.499098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478601,-99) , 
3, 9.03751, 1, 0, 0.498504,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00703109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494982,-99) , 
5, 0.236791, 1, 0, 0.499265,-99) , 
4, 0.998571, 1, 0, 0.499867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474508,-99) , 
3, 9.28394, 1, 0, 0.49921,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00748458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490179,-99) , 
5, 0.722065, 1, 0, 0.501358,-99) , 
5, 0.80818, 0, 0, 0.502033,-99) , 
NN(
0, 
0, 
-1, 0.0714402, 0, -1, 0.489333,-99) , 
0, 0.503804, 1, 0, 0.500669,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.101919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810957, 0, 1, 0.617978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43429,-99) , 
6, 0.00194081, 0, 0, 0.476552,-99) , 
6, 0.00679283, 0, 0, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315275,-99) , 
6, 0.0237755, 1, 0, 0.498806,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0143317);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490769,-99) , 
4, 0.999909, 1, 0, 0.504457,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.49468,-99) , 
5, 0.615565, 0, 0, 0.495936,-99) , 
4, 0.999048, 1, 0, 0.497015,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0165638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491422,-99) , 
2, -0.071437, 0, 0, 0.506261,-99) , 
4, 0.998572, 1, 0, 0.508816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495875,-99) , 
4, 0.999524, 1, 0, 0.497173,-99) , 
NN(
0, 
0, 
-1, 0.0664802, 1, -1, 0.483393,-99) , 
5, -0.782504, 0, 0, 0.494136,-99) , 
5, 0.522473, 0, 0, 0.497108,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00966957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487716,-99) , 
5, 0.830837, 1, 0, 0.504257,-99) , 
NN(
0, 
0, 
-1, 6.66365, 1, -1, 0.496869,-99) , 
5, 0.423984, 0, 0, 0.498556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479607,-99) , 
4, 0.999048, 0, 0, 0.497695,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00792828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495581,-99) , 
2, 0.078298, 1, 0, 0.500367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478651,-99) , 
4, 0.999932, 0, 0, 0.493577,-99) , 
2, -0.0713479, 0, 0, 0.499199,-99) , 
4, 0.998572, 1, 0, 0.4999,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0142972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.67202, 1, 1, 0.518007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495667,-99) , 
4, 0.999977, 1, 0, 0.498654,-99) , 
4, 0.999524, 1, 0, 0.500539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508571,-99) , 
NN(
0, 
0, 
-1, -0.906785, 1, -1, 0.485407,-99) , 
5, -0.7825, 0, 0, 0.49019,-99) , 
5, -0.71453, 0, 0, 0.498249,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00948855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.5098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497205,-99) , 
5, -0.333826, 0, 0, 0.500755,-99) , 
2, 0.0508395, 0, 0, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0.0420457, 0, -1, 0.486568,-99) , 
2, 0.214085, 1, 0, 0.50158,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.00841044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506253, 0, 1, 0.511813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497458,-99) , 
2, 0.214278, 0, 0, 0.498085,-99) , 
0, 0.504757, 0, 0, 0.499092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476201,-99) , 
4, 0.998571, 0, 0, 0.498401,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00758382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.202431, 1, 1, 0.501588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476526,-99) , 
5, 0.232081, 1, 0, 0.488893,-99) , 
4, 0.999841, 0, 0, 0.500616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499023,-99) , 
5, 0.778392, 0, 0, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464261,-99) , 
5, 0.425442, 0, 0, 0.49089,-99) , 
4, 0.999524, 0, 0, 0.49986,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00879802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493139,-99) , 
5, 0.653878, 1, 0, 0.500199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478527,-99) , 
0, 0.489519, 0, 0, 0.499542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500709,-99) , 
NN(
0, 
0, 
-1, -0.936566, 1, -1, 0.483004,-99) , 
3, 3.64283, 0, 0, 0.487782,-99) , 
5, -0.80969, 0, 0, 0.497718,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0101647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.710001, 0, 1, 0.502109,-99) , 
NN(
0, 
0, 
-1, -0.810119, 0, -1, 0.494371,-99) , 
0, 0.496321, 0, 0, 0.499003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494984,-99) , 
5, -0.774343, 0, 0, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0.503759, 0, -1, 0.483198,-99) , 
5, -0.52617, 1, 0, 0.491055,-99) , 
0, 0.502852, 1, 0, 0.497802,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.013339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484857,-99) , 
0, 0.497411, 0, 0, 0.500605,-99) , 
0, 0.493329, 1, 0, 0.504845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495646,-99) , 
4, 0.999977, 1, 0, 0.49835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478754,-99) , 
4, 0.999524, 0, 0, 0.497231,-99) , 
2, -0.0715101, 1, 0, 0.498618,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0077161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04743, 0, 1, 0.514369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493936,-99) , 
5, -0.968298, 0, 0, 0.507928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498087,-99) , 
4, 0.998572, 1, 0, 0.49906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485053,-99) , 
3, 8.92177, 1, 0, 0.498601,-99) , 
5, -0.904917, 1, 0, 0.499361,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0099773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02187, 1, 1, 0.506825,-99) , 
NN(
0, 
0, 
-1, -0.071437, 0, -1, 0.497594,-99) , 
5, -0.429801, 1, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.485145,-99) , 
4, 0.999524, 0, 0, 0.500029,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00838668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498504,-99) , 
0, 0.5019, 1, 0, 0.506329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481946,-99) , 
4, 0.999619, 0, 0, 0.500993,-99) , 
5, 0.331927, 0, 0, 0.502588,-99) , 
NN(
0, 
0, 
-1, -0.333816, 0, -1, 0.487448,-99) , 
0, 0.490471, 0, 0, 0.501783,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00767021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.040485, 0, 1, 0.513397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492909,-99) , 
5, 0.331012, 1, 0, 0.498297,-99) , 
0, 0.491424, 1, 0, 0.499494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474376,-99) , 
4, 0.998572, 0, 0, 0.498743,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0173716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483634,-99) , 
0, 0.504621, 0, 0, 0.492562,-99) , 
0, 0.5019, 1, 0, 0.501321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48203,-99) , 
4, 0.999995, 0, 0, 0.495091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465555,-99) , 
4, 0.999905, 0, 0, 0.49261,-99) , 
5, -0.333918, 0, 0, 0.497726,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00939033);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.514102,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0713699, 1, 1, 0.502891,-99) , 
NN(
0, 
0, 
-1, -0.0716276, 0, -1, 0.495296,-99) , 
3, 2.61321, 1, 0, 0.499816,-99) , 
5, 0.713013, 0, 0, 0.501275,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00959656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497705,-99) , 
0, 0.505709, 0, 0, 0.498391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481906,-99) , 
4, 0.99932, 0, 0, 0.497881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441835,-99) , 
4, 0.998571, 0, 0, 0.496308,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0101524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.428982, 0, 1, 0.511365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495638,-99) , 
5, -0.633291, 1, 0, 0.49706,-99) , 
NN(
0, 
0, 
-1, -0.9502, 0, -1, 0.48917,-99) , 
5, -0.904927, 0, 0, 0.496442,-99) , 
0, 0.491424, 1, 0, 0.497677,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00496882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49928,-99) , 
2, 0.210527, 0, 0, 0.50001,-99) , 
4, 0.999048, 1, 0, 0.500883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488063,-99) , 
3, 9.01337, 1, 0, 0.500502,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00690631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.614884, 0, 1, 0.50789,-99) , 
NN(
0, 
0, 
-1, 0.506344, 0, -1, 0.492484,-99) , 
0, 0.505392, 1, 0, 0.504881,-99) , 
NN(
0, 
0, 
-1, 0.499677, 1, -1, 0.498169,-99) , 
0, 0.500947, 0, 0, 0.499988,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00903237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.617847, 0, 1, 0.502431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496025,-99) , 
2, 0.167672, 0, 0, 0.496908,-99) , 
2, -0.0305614, 1, 0, 0.498551,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.484471,-99) , 
2, 0.214318, 1, 0, 0.497834,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00375398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499331,-99) , 
0, 0.490471, 1, 0, 0.49985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486007,-99) , 
4, 0.999252, 0, 0, 0.49948,-99) , 
4, 0.998571, 1, 0, 0.499958,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00387169);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.806372, 0, 1, 0.501936,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00599813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499886,-99) , 
2, -0.193863, 1, 0, 0.501091,-99) , 
2, 0.214259, 0, 0, 0.502235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475755,-99) , 
3, 9.28394, 1, 0, 0.501554,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0123886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.336752, 1, 1, 0.508864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494126,-99) , 
0, 0.496413, 0, 0, 0.502238,-99) , 
0, 0.495233, 1, 0, 0.503969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468029,-99) , 
4, 0.999048, 0, 0, 0.502369,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0139413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495658,-99) , 
4, 0.999955, 0, 0, 0.502753,-99) , 
4, 0.999048, 1, 0, 0.504108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
5, -0.728427, 1, 0, 0.509922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4914,-99) , 
0, 0.496185, 1, 0, 0.49519,-99) , 
3, 0.737186, 1, 0, 0.497697,-99) , 
5, -0.429699, 0, 0, 0.501709,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00774743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49877, 1, 1, 0.513298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485399,-99) , 
0, 0.495233, 0, 0, 0.506294,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.497236,-99) , 
5, 0.7113, 0, 0, 0.498161,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0144254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999544, 1, 1, 0.505836,-99) , 
NN(
0, 
0, 
-1, 0.0697611, 1, -1, 0.49529,-99) , 
5, -0.691838, 0, 0, 0.502914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475409,-99) , 
4, 0.999977, 1, 0, 0.498444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478327,-99) , 
4, 0.999524, 0, 0, 0.493052,-99) , 
5, 0.617845, 1, 0, 0.501454,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00594019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999822, 1, 1, 0.501306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478307,-99) , 
0, 0.496186, 1, 0, 0.488542,-99) , 
4, 0.99966, 0, 0, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47134,-99) , 
4, 0.998572, 0, 0, 0.499583,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0107293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.60802, 0, 1, 0.513411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497376,-99) , 
5, -0.715202, 1, 0, 0.499697,-99) , 
4, 0.999819, 1, 0, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478678,-99) , 
4, 0.999048, 0, 0, 0.500031,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0141374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.99907, 0, 1, 0.514926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482148,-99) , 
4, 0.999977, 0, 0, 0.508389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49767,-99) , 
3, 0.745378, 1, 0, 0.499659,-99) , 
3, 4.56534, 0, 0, 0.501426,-99) , 
4, 0.999524, 1, 0, 0.502506,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0064028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498625,-99) , 
2, 0.112563, 0, 0, 0.499919,-99) , 
2, -0.21388, 1, 0, 0.500598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4845,-99) , 
3, 9.28394, 1, 0, 0.500189,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00524042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499559,-99) , 
4, 0.999621, 1, 0, 0.500315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468465,-99) , 
4, 0.999388, 0, 0, 0.499189,-99) , 
4, 0.998571, 1, 0, 0.499659,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0142959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496366,-99) , 
2, 0.152466, 1, 0, 0.505685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493912,-99) , 
5, 0.614874, 0, 0, 0.498409,-99) , 
2, -0.0719428, 0, 0, 0.504416,-99) , 
NN(
0, 
0, 
-1, 0.489247, 0, -1, 0.48631,-99) , 
0, 0.490471, 0, 0, 0.503451,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00893384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497109,-99) , 
5, -0.809721, 1, 0, 0.498462,-99) , 
4, 0.999048, 1, 0, 0.499356,-99) , 
NN(
0, 
0, 
-1, 0.0437088, 0, -1, 0.486676,-99) , 
2, -0.21427, 0, 0, 0.498702,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00468565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49946,-99) , 
2, 0.213437, 0, 0, 0.500155,-99) , 
3, 8.87229, 0, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.489606,-99) , 
4, 0.999524, 0, 0, 0.499801,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.012482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.505628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479242,-99) , 
3, 9.05842, 1, 0, 0.49694,-99) , 
3, 4.67556, 1, 0, 0.503966,-99) , 
NN(
0, 
0, 
-1, 0.0719764, 1, -1, 0.490905,-99) , 
5, -0.714532, 0, 0, 0.501079,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00923031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999637, 1, 1, 0.504272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488262,-99) , 
4, 0.999048, 0, 0, 0.503536,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0107761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503435, 0, 1, 0.516917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484385,-99) , 
5, -0.241793, 1, 0, 0.499937,-99) , 
0, 0.504213, 1, 0, 0.506698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486225,-99) , 
0, 0.489964, 0, 0, 0.501063,-99) , 
NN(
0, 
0, 
-1, -0.619891, 0, -1, 0.493648,-99) , 
0, 0.49995, 1, 0, 0.499393,-99) , 
0, 0.502852, 0, 0, 0.500512,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.011098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498194,-99) , 
5, -0.306637, 1, 0, 0.501819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482328,-99) , 
4, 0.999315, 0, 0, 0.501217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489848,-99) , 
0, 0.49809, 0, 0, 0.50509,-99) , 
NN(
0, 
0, 
-1, 0.730064, 1, -1, 0.486464,-99) , 
5, 0.79912, 0, 0, 0.493509,-99) , 
5, 0.617846, 1, 0, 0.500072,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0129308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.518765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474776,-99) , 
4, 0.999796, 0, 0, 0.502408,-99) , 
4, 0.999524, 1, 0, 0.505181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492019,-99) , 
4, 0.999982, 0, 0, 0.499805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481998,-99) , 
4, 0.999619, 0, 0, 0.499085,-99) , 
5, 0.237009, 0, 0, 0.501157,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00811707);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 1, 1, 0.512973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495227,-99) , 
0, 0.498168, 0, 0, 0.498019,-99) , 
NN(
0, 
0, 
-1, -0.338293, 0, -1, 0.48592,-99) , 
0, 0.505165, 1, 0, 0.497268,-99) , 
0, 0.490471, 1, 0, 0.498145,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0130533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491015,-99) , 
2, 0.244379, 1, 0, 0.507376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495003,-99) , 
2, -0.0277281, 1, 0, 0.497892,-99) , 
2, 0.11221, 0, 0, 0.499163,-99) , 
NN(
0, 
0, 
-1, 0.0437595, 0, -1, 0.485088,-99) , 
2, -0.214313, 0, 0, 0.498442,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.00962328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496859,-99) , 
5, 0.036398, 0, 0, 0.507914,-99) , 
NN(
0, 
0, 
-1, 0.502263, 1, -1, 0.497248,-99) , 
0, 0.503805, 0, 0, 0.498406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473097,-99) , 
4, 0.999048, 0, 0, 0.497262,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0111074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.617655, 1, 1, 0.516678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49934,-99) , 
3, 4.5792, 0, 0, 0.501862,-99) , 
4, 0.999524, 1, 0, 0.503612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493661,-99) , 
4, 0.999991, 0, 0, 0.500424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465679,-99) , 
4, 0.999905, 0, 0, 0.497522,-99) , 
5, -0.333918, 0, 0, 0.501085,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0147753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477608,-99) , 
5, 0.819955, 1, 0, 0.503738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512084,-99) , 
NN(
0, 
0, 
-1, -0.963782, 0, -1, 0.493007,-99) , 
0, 0.491424, 1, 0, 0.494811,-99) , 
5, -0.239422, 0, 0, 0.499673,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.00655831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214337, 0, 1, 0.50205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483999,-99) , 
0, 0.496186, 1, 0, 0.490895,-99) , 
5, -0.904858, 0, 0, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482129,-99) , 
3, 8.99658, 1, 0, 0.500574,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.010103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.506904,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.497539,-99) , 
5, -0.429174, 1, 0, 0.501269,-99) , 
NN(
0, 
0, 
-1, -0.0714605, 1, -1, 0.485108,-99) , 
4, 0.999524, 0, 0, 0.500025,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00711845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501292,-99) , 
NN(
0, 
0, 
-1, -0.455096, 0, -1, 0.491052,-99) , 
5, -0.379135, 0, 0, 0.500277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495631,-99) , 
3, 4.94509, 0, 0, 0.497627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47191,-99) , 
4, 0.999905, 0, 0, 0.495631,-99) , 
5, -0.524158, 0, 0, 0.498753,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00895203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494277,-99) , 
4, 0.999932, 0, 0, 0.508035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498069,-99) , 
2, 0.214078, 0, 0, 0.498861,-99) , 
0, 0.502852, 0, 0, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473856,-99) , 
4, 0.998571, 0, 0, 0.499468,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00659747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
0, 0.494281, 1, 0, 0.500695,-99) , 
4, 0.998572, 1, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479281,-99) , 
3, 9.28394, 1, 0, 0.500825,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0109691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.718709, 1, 1, 0.503668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491643,-99) , 
0, 0.500675, 0, 0, 0.49472,-99) , 
3, 4.54701, 1, 0, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0.424894, 1, -1, 0.489388,-99) , 
0, 0.502852, 1, 0, 0.500068,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0087862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497456,-99) , 
2, 0.214318, 0, 0, 0.498373,-99) , 
4, 0.999048, 1, 0, 0.499209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478292,-99) , 
3, 8.92177, 1, 0, 0.498576,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00681811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.514044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492231,-99) , 
0, 0.502308, 1, 0, 0.500173,-99) , 
0, 0.504757, 0, 0, 0.501197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478632,-99) , 
4, 0.998572, 0, 0, 0.500514,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00897523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497457,-99) , 
5, -0.904862, 1, 0, 0.498336,-99) , 
2, -0.214216, 1, 0, 0.499077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475129,-99) , 
4, 0.999048, 0, 0, 0.497991,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00884482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48661,-99) , 
3, 4.00063, 1, 0, 0.501922,-99) , 
2, 0.275469, 0, 0, 0.506922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499959,-99) , 
4, 0.999909, 1, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482669,-99) , 
4, 0.999048, 0, 0, 0.500787,-99) , 
2, 0.0713923, 0, 0, 0.501914,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0133233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495059,-99) , 
5, 0.520346, 1, 0, 0.503216,-99) , 
0, 0.494916, 1, 0, 0.504416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510768,-99) , 
NN(
0, 
0, 
-1, -0.809976, 0, -1, 0.492396,-99) , 
0, 0.489201, 1, 0, 0.494858,-99) , 
0, 0.494281, 0, 0, 0.502479,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00985491);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.138618, 0, 1, 0.513972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49223,-99) , 
4, 0.999955, 0, 0, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0.520823, 0, -1, 0.491522,-99) , 
4, 0.999524, 0, 0, 0.500349,-99) , 
2, -0.214142, 1, 0, 0.501091,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00910954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.510089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493988,-99) , 
5, -0.692147, 0, 0, 0.499527,-99) , 
5, 0.616228, 0, 0, 0.500923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471778,-99) , 
4, 0.998571, 0, 0, 0.500066,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00690259);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.513645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480503,-99) , 
0, 0.490471, 0, 0, 0.499972,-99) , 
2, -0.214216, 1, 0, 0.500731,-99) , 
5, -0.904949, 1, 0, 0.501804,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00431631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214278, 0, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 6.76262, 0, -1, 0.490842,-99) , 
3, 6.05172, 1, 0, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484261,-99) , 
3, 9.03751, 1, 0, 0.499778,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0127398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496844,-99) , 
2, -0.178482, 0, 0, 0.50815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495413,-99) , 
2, 0.0119724, 0, 0, 0.499336,-99) , 
2, -0.112406, 1, 0, 0.500498,-99) , 
NN(
0, 
0, 
-1, 0.0467028, 0, -1, 0.483247,-99) , 
2, 0.214085, 1, 0, 0.499615,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00972528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499788,-99) , 
0, 0.499041, 1, 0, 0.512914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497392,-99) , 
0, 0.5019, 0, 0, 0.499093,-99) , 
5, 0.711302, 0, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47727,-99) , 
4, 0.999048, 0, 0, 0.499178,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00449021);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0420156, 1, 1, 0.512251,-99) , 
NN(
NN(
0, 
0, 
-1, 0.167534, 0, 1, 0.511467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490721,-99) , 
4, 0.999524, 0, 0, 0.499959,-99) , 
2, 0.13255, 0, 0, 0.500607,-99) , 
2, 0.214186, 0, 0, 0.501241,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.011035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494916,-99) , 
0, 0.496231, 1, 0, 0.497868,-99) , 
0, 0.505709, 0, 0, 0.4986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474418,-99) , 
4, 0.998571, 0, 0, 0.497887,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0076405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498002,-99) , 
0, 0.492512, 1, 0, 0.498825,-99) , 
5, 0.80818, 0, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, -0.0500654, 0, -1, 0.484212,-99) , 
0, 0.504757, 1, 0, 0.498491,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00574055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51816,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497976,-99) , 
5, 0.80818, 0, 0, 0.499034,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0107067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904917, 1, 1, 0.508093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49275,-99) , 
2, 0.0712418, 1, 0, 0.500744,-99) , 
0, 0.497455, 1, 0, 0.503473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494727,-99) , 
0, 0.491015, 0, 0, 0.497893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486097,-99) , 
5, 0.140118, 1, 0, 0.494086,-99) , 
0, 0.492376, 0, 0, 0.502424,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00609434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498712,-99) , 
5, -0.904862, 1, 0, 0.49951,-99) , 
2, 0.214259, 0, 0, 0.500242,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.490441,-99) , 
4, 0.999524, 0, 0, 0.499481,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00778766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0448292, 1, 1, 0.515986,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494916, 1, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 0.489837, 0, -1, 0.494916,-99) , 
0, 0.494281, 0, 0, 0.501196,-99) , 
2, 0.214031, 0, 0, 0.501991,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00897669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491728,-99) , 
2, 0.00105522, 1, 0, 0.515701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47902,-99) , 
3, 4.14807, 1, 0, 0.499933,-99) , 
3, 0.49822, 1, 0, 0.50132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509403,-99) , 
NN(
0, 
0, 
-1, 0.500721, 1, -1, 0.491775,-99) , 
0, 0.503805, 0, 0, 0.494139,-99) , 
3, 4.53227, 1, 0, 0.499891,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00600196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48341,-99) , 
2, -0.21427, 0, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, -0.7145, 1, -1, 0.488798,-99) , 
0, 0.503804, 1, 0, 0.499183,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0140119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.334649, 0, 1, 0.515341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496,-99) , 
0, 0.493419, 0, 0, 0.501415,-99) , 
2, 0.0699105, 0, 0, 0.504467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493672,-99) , 
2, -0.00335048, 1, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, 0.139495, 0, -1, 0.485972,-99) , 
2, 0.0714736, 1, 0, 0.497201,-99) , 
0, 0.495233, 1, 0, 0.49913,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00981053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495008,-99) , 
0, 0.501809, 1, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, -0.620561, 0, -1, 0.492153,-99) , 
0, 0.492376, 0, 0, 0.499903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485379,-99) , 
2, 0.139498, 0, 0, 0.495118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472285,-99) , 
5, -0.809896, 0, 0, 0.491593,-99) , 
2, 0.0714736, 1, 0, 0.498398,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0101557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90662, 1, 1, 0.510753,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.490376,-99) , 
5, -0.936743, 0, 0, 0.504048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49862,-99) , 
4, 0.999048, 1, 0, 0.499742,-99) , 
NN(
0, 
0, 
-1, 3.57001, 1, -1, 0.48819,-99) , 
5, -0.552683, 0, 0, 0.497611,-99) , 
5, -0.810231, 1, 0, 0.498635,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0122652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.98546, 1, 1, 0.514155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497747,-99) , 
0, 0.499995, 0, 0, 0.502876,-99) , 
5, -0.619365, 1, 0, 0.505887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498106,-99) , 
4, 0.999524, 1, 0, 0.500769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489816,-99) , 
2, -0.0693161, 1, 0, 0.492797,-99) , 
5, -0.6198, 0, 0, 0.498533,-99) , 
3, 4.55908, 0, 0, 0.500001,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00866853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.839329, 0, 1, 0.510518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493345,-99) , 
5, 0.647679, 1, 0, 0.497261,-99) , 
2, 0.0713087, 1, 0, 0.508151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499106,-99) , 
2, -0.216338, 1, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482947,-99) , 
4, 0.999619, 0, 0, 0.49916,-99) , 
5, 0.331927, 0, 0, 0.501821,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.006505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494415,-99) , 
5, -0.570013, 0, 0, 0.498536,-99) , 
5, 0.805945, 0, 0, 0.499173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480948,-99) , 
0, 0.505709, 1, 0, 0.498382,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0124141);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0437094, 0, 1, 0.520135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488838,-99) , 
5, -0.715559, 0, 0, 0.512767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492118,-99) , 
5, 0.522679, 1, 0, 0.500598,-99) , 
2, 0.11221, 0, 0, 0.502221,-99) , 
2, -0.214313, 1, 0, 0.503182,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00701515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0450522, 1, 1, 0.512791,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502635,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.49676,-99) , 
5, 0.0465146, 0, 0, 0.49923,-99) , 
2, 0.214085, 0, 0, 0.499952,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0104479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13169, 0, 1, 0.511723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49681,-99) , 
0, 0.49224, 1, 0, 0.498152,-99) , 
0, 0.503804, 0, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475714,-99) , 
4, 0.998571, 0, 0, 0.498923,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00609973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519314,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.498547,-99) , 
2, 0.214318, 0, 0, 0.499485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480374,-99) , 
4, 0.999048, 0, 0, 0.498617,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0127302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.506008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487113,-99) , 
2, -0.0716276, 0, 0, 0.498123,-99) , 
3, 1.92857, 1, 0, 0.501889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488281,-99) , 
0, 0.49809, 1, 0, 0.497886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474991,-99) , 
1, 0.00294375, 1, 0, 0.4937,-99) , 
5, 0.616228, 1, 0, 0.500668,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00900769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712478, 0, 1, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.492901,-99) , 
2, 0.0714736, 1, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463937,-99) , 
4, 0.998572, 0, 0, 0.49999,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00939278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497167,-99) , 
0, 0.490472, 1, 0, 0.497987,-99) , 
3, 8.63629, 0, 0, 0.498832,-99) , 
NN(
0, 
0, 
-1, 0.522478, 0, -1, 0.487248,-99) , 
4, 0.999524, 0, 0, 0.497936,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00867455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499968,-99) , 
2, -0.0693161, 1, 0, 0.517619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498473,-99) , 
3, 0.544297, 1, 0, 0.499893,-99) , 
4, 0.999524, 1, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, -0.810213, 0, -1, 0.493953,-99) , 
3, 4.6823, 1, 0, 0.500028,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00629432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499137,-99) , 
3, 4.95691, 0, 0, 0.50041,-99) , 
NN(
0, 
0, 
-1, -0.620458, 0, -1, 0.490394,-99) , 
3, 5.7709, 1, 0, 0.499438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482951,-99) , 
3, 9.27754, 1, 0, 0.499009,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00902805);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214261, 1, 1, 0.503977,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.489039,-99) , 
4, 0.999524, 0, 0, 0.502829,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00997963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498451,-99) , 
5, -0.146305, 1, 0, 0.501938,-99) , 
2, -0.214261, 1, 0, 0.502828,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.485833,-99) , 
4, 0.999524, 0, 0, 0.501538,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00998754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491014,-99) , 
5, 0.805629, 1, 0, 0.503176,-99) , 
4, 0.999048, 1, 0, 0.503879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49487,-99) , 
2, -0.0706381, 1, 0, 0.498188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485154,-99) , 
5, 0.520162, 1, 0, 0.495865,-99) , 
0, 0.493328, 0, 0, 0.502663,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0223548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49869,-99) , 
5, 0.562252, 1, 0, 0.533465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489397,-99) , 
5, 0.509084, 0, 0, 0.496994,-99) , 
1, 0.00294375, 0, 0, 0.505083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489173,-99) , 
3, 2.6128, 1, 0, 0.504915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493047,-99) , 
3, 2.44005, 0, 0, 0.496448,-99) , 
2, 0.0697334, 0, 0, 0.49806,-99) , 
5, -0.143491, 0, 0, 0.5016,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00382048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511408,-99) , 
NN(
0, 
0, 
-1, -0.214216, 0, -1, 0.499397,-99) , 
5, 0.807937, 0, 0, 0.500018,-99) , 
NN(
0, 
0, 
-1, -0.336662, 1, -1, 0.484568,-99) , 
0, 0.490471, 0, 0, 0.499206,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0107234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498533,-99) , 
3, 2.27019, 1, 0, 0.508331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497866,-99) , 
0, 0.490471, 1, 0, 0.498747,-99) , 
5, -0.714782, 1, 0, 0.501057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493115,-99) , 
5, 0.778792, 0, 0, 0.502222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47105,-99) , 
5, 0.425752, 0, 0, 0.491361,-99) , 
4, 0.999524, 0, 0, 0.500303,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.010647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.120952, 0, 1, 0.509589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497803,-99) , 
0, 0.497138, 0, 0, 0.502157,-99) , 
2, 0.0509827, 0, 0, 0.503513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480782,-99) , 
0, 0.49809, 0, 0, 0.492768,-99) , 
2, 0.214245, 1, 0, 0.502957,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0052465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486081,-99) , 
0, 0.494145, 0, 0, 0.498028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48331,-99) , 
0, 0.502852, 1, 0, 0.495391,-99) , 
3, 4.70718, 1, 0, 0.500525,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0105865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504426, 1, 1, 0.515224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496743,-99) , 
5, -0.337592, 0, 0, 0.501094,-99) , 
0, 0.505437, 1, 0, 0.508609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
4, 0.999524, 0, 0, 0.503118,-99) , 
NN(
0, 
0, 
-1, 0.423191, 1, -1, 0.4956,-99) , 
0, 0.498408, 1, 0, 0.50003,-99) , 
0, 0.503805, 0, 0, 0.500985,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00753053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488472,-99) , 
0, 0.490471, 0, 0, 0.501293,-99) , 
2, 0.211825, 0, 0, 0.501989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481004,-99) , 
4, 0.999048, 0, 0, 0.501043,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00917025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999637, 1, 1, 0.502908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491935,-99) , 
5, -0.845967, 0, 0, 0.495679,-99) , 
5, -0.809724, 0, 0, 0.501722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480965,-99) , 
4, 0.999048, 0, 0, 0.500792,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00962768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499835,-99) , 
0, 0.497138, 0, 0, 0.506923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497969,-99) , 
0, 0.492376, 1, 0, 0.499229,-99) , 
5, -0.80969, 1, 0, 0.500467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
2, -0.139486, 1, 0, 0.500593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478338,-99) , 
0, 0.503986, 0, 0, 0.484829,-99) , 
0, 0.49809, 1, 0, 0.492752,-99) , 
2, -0.0714605, 0, 0, 0.499082,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.012491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497897,-99) , 
3, 1.13708, 1, 0, 0.500891,-99) , 
2, -0.214688, 1, 0, 0.501699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477607,-99) , 
0, 0.498091, 1, 0, 0.489357,-99) , 
5, 0.614691, 0, 0, 0.494387,-99) , 
3, 4.54028, 1, 0, 0.500254,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00864899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498883,-99) , 
2, -0.0759106, 1, 0, 0.500515,-99) , 
4, 0.998571, 1, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, -0.714533, 0, -1, 0.491356,-99) , 
3, 4.54028, 1, 0, 0.499425,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0105438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497419,-99) , 
2, -0.0729771, 0, 0, 0.505375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484978,-99) , 
0, 0.497159, 1, 0, 0.500319,-99) , 
0, 0.497637, 0, 0, 0.502802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482514,-99) , 
2, -0.076931, 1, 0, 0.488175,-99) , 
2, 0.0725097, 0, 0, 0.493422,-99) , 
0, 0.503805, 1, 0, 0.501793,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00631572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904973, 1, 1, 0.502182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487549,-99) , 
4, 0.99932, 0, 0, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475135,-99) , 
4, 0.998571, 0, 0, 0.500947,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00691225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.941106, 0, 1, 0.50743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497833,-99) , 
2, -0.215114, 1, 0, 0.49839,-99) , 
5, -0.904862, 1, 0, 0.499152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479398,-99) , 
4, 0.998571, 0, 0, 0.498566,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0103302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504213, 1, 1, 0.510734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499443,-99) , 
5, -0.311747, 1, 0, 0.501247,-99) , 
0, 0.502852, 0, 0, 0.502612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4919,-99) , 
3, 1.51322, 0, 0, 0.498964,-99) , 
NN(
0, 
0, 
-1, -0.873121, 0, -1, 0.486375,-99) , 
3, 3.42341, 1, 0, 0.495316,-99) , 
5, -0.619381, 0, 0, 0.500578,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00692467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.62058, 1, 1, 0.515225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
3, 8.87473, 0, 0, 0.49983,-99) , 
0, 0.491424, 1, 0, 0.501068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473151,-99) , 
4, 0.998572, 0, 0, 0.500241,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00996539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49641,-99) , 
0, 0.499632, 1, 0, 0.500625,-99) , 
4, 0.998572, 1, 0, 0.501396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504421,-99) , 
NN(
0, 
0, 
-1, -0.238643, 1, -1, 0.487434,-99) , 
2, 0.0772311, 0, 0, 0.491601,-99) , 
0, 0.492376, 0, 0, 0.500312,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0130464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488917,-99) , 
3, 8.95853, 1, 0, 0.504443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489944,-99) , 
3, 1.11051, 0, 0, 0.503166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48253,-99) , 
3, 3.17036, 1, 0, 0.496727,-99) , 
5, -0.809895, 0, 0, 0.503229,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00688433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.507814,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.497841,-99) , 
5, 0.613496, 0, 0, 0.499172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479342,-99) , 
4, 0.998571, 0, 0, 0.498581,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0112774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 1, 1, 0.508254,-99) , 
NN(
0, 
0, 
-1, 0.503487, 0, -1, 0.491823,-99) , 
2, -0.0713974, 0, 0, 0.504865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496702,-99) , 
0, 0.4936, 0, 0, 0.50213,-99) , 
NN(
0, 
0, 
-1, 0.235943, 1, -1, 0.49636,-99) , 
0, 0.494598, 1, 0, 0.498128,-99) , 
0, 0.500947, 0, 0, 0.499942,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00887451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474982,-99) , 
0, 0.490206, 1, 0, 0.492936,-99) , 
0, 0.491242, 0, 0, 0.502161,-99) , 
NN(
0, 
0, 
-1, 0.506027, 1, -1, 0.491474,-99) , 
0, 0.502852, 1, 0, 0.500546,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0130342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495845,-99) , 
2, -0.072709, 0, 0, 0.503992,-99) , 
5, 0.805411, 0, 0, 0.505013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491674,-99) , 
0, 0.493963, 1, 0, 0.495707,-99) , 
NN(
0, 
0, 
-1, 0.139797, 1, -1, 0.485176,-99) , 
3, 4.53156, 1, 0, 0.493751,-99) , 
0, 0.497138, 0, 0, 0.500417,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0102294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492616,-99) , 
3, 1.50786, 0, 0, 0.500225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476443,-99) , 
4, 0.999905, 0, 0, 0.498219,-99) , 
5, -0.333828, 0, 0, 0.501359,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00576211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.503923,-99) , 
NN(
0, 
0, 
-1, 0.999619, 0, -1, 0.498189,-99) , 
5, 0.203961, 0, 0, 0.500016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489712,-99) , 
5, 0.805945, 1, 0, 0.499493,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00866145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499853,-99) , 
5, -0.7149, 1, 0, 0.501509,-99) , 
4, 0.999048, 1, 0, 0.502757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492711,-99) , 
0, 0.491605, 1, 0, 0.496536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477265,-99) , 
4, 0.999524, 0, 0, 0.494621,-99) , 
0, 0.495233, 0, 0, 0.500623,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00970486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497815,-99) , 
3, 2.2649, 0, 0, 0.500757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489305,-99) , 
3, 2.30533, 1, 0, 0.49347,-99) , 
2, -0.0713479, 0, 0, 0.499486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470009,-99) , 
3, 9.27754, 1, 0, 0.498738,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49965,-99) , 
5, -0.904973, 1, 0, 0.500325,-99) , 
2, 0.214314, 0, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482003,-99) , 
4, 0.999048, 0, 0, 0.500353,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0105238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484022,-99) , 
5, 0.684645, 1, 0, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494568,-99) , 
5, -0.483539, 0, 0, 0.498758,-99) , 
5, 0.807615, 0, 0, 0.499514,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00900552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.391789, 1, 1, 0.503556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487589,-99) , 
3, 6.75591, 1, 0, 0.502741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479953,-99) , 
3, 8.84469, 1, 0, 0.502039,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00784509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479407,-99) , 
4, 0.999977, 0, 0, 0.50931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477551,-99) , 
5, 0.821796, 1, 0, 0.499405,-99) , 
5, -0.810134, 1, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.491966,-99) , 
4, 0.999524, 0, 0, 0.500382,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0132521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499224, 0, 1, 0.511978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492789,-99) , 
0, 0.502852, 1, 0, 0.508269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496865,-99) , 
5, -0.555945, 0, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490823,-99) , 
5, 0.332164, 1, 0, 0.498332,-99) , 
2, -0.0716049, 1, 0, 0.500155,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0133109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483943,-99) , 
0, 0.502535, 0, 0, 0.493022,-99) , 
5, -0.809925, 0, 0, 0.507118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
3, 1.16179, 1, 0, 0.501688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49055,-99) , 
5, 0.778793, 0, 0, 0.493071,-99) , 
5, 0.235648, 1, 0, 0.498694,-99) , 
0, 0.499995, 0, 0, 0.501584,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.013744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49514,-99) , 
4, 0.999955, 1, 0, 0.510952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496226,-99) , 
5, -0.61492, 1, 0, 0.499435,-99) , 
5, 0.617341, 0, 0, 0.500812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457731,-99) , 
2, 0.0712747, 1, 0, 0.488659,-99) , 
4, 0.999524, 0, 0, 0.499878,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00870858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498626,-99) , 
4, 0.999524, 1, 0, 0.499643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485381,-99) , 
5, 0.842155, 1, 0, 0.498952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496603,-99) , 
0, 0.502852, 0, 0, 0.499729,-99) , 
NN(
0, 
0, 
-1, 0.0689033, 1, -1, 0.487422,-99) , 
3, 2.36005, 1, 0, 0.4944,-99) , 
5, -0.6198, 0, 0, 0.497687,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00860224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.167863, 0, 1, 0.513677,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49869,-99) , 
2, 0.0512832, 0, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0.0450334, 0, -1, 0.481761,-99) , 
2, 0.214511, 1, 0, 0.500432,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.00892867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487161,-99) , 
4, 0.999773, 0, 0, 0.501783,-99) , 
4, 0.999048, 1, 0, 0.502707,-99) , 
NN(
0, 
0, 
-1, -0.904978, 0, -1, 0.495807,-99) , 
0, 0.49809, 1, 0, 0.49924,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00543095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499801,-99) , 
5, 0.461946, 0, 0, 0.500892,-99) , 
5, 0.805945, 0, 0, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0.48961, 0, -1, 0.490005,-99) , 
0, 0.491424, 0, 0, 0.500836,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00905077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80206, 0, 1, 0.503166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483931,-99) , 
4, 0.999592, 0, 0, 0.502383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477936,-99) , 
4, 0.999048, 0, 0, 0.501273,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00721636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499812,-99) , 
3, 3.14614, 1, 0, 0.507337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494421,-99) , 
5, -0.827786, 0, 0, 0.500788,-99) , 
2, -0.0718251, 1, 0, 0.501964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492229,-99) , 
5, 0.80818, 1, 0, 0.501478,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0138706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492277,-99) , 
4, 0.999773, 0, 0, 0.503203,-99) , 
4, 0.999048, 1, 0, 0.505652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48828,-99) , 
3, 2.62117, 1, 0, 0.506059,-99) , 
NN(
0, 
0, 
-1, -0.153045, 0, -1, 0.496661,-99) , 
2, 0.0714191, 0, 0, 0.498413,-99) , 
5, -0.143493, 0, 0, 0.502066,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00637501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495659,-99) , 
5, -0.809664, 0, 0, 0.501321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488337,-99) , 
0, 0.489338, 0, 0, 0.500931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491005,-99) , 
0, 0.505709, 1, 0, 0.500496,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0104653);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493558,-99) , 
5, -0.864239, 0, 0, 0.503948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
4, 0.999524, 1, 0, 0.499303,-99) , 
5, -0.524834, 1, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479693,-99) , 
4, 0.998571, 0, 0, 0.500236,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0113243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0698014, 0, 1, 0.504077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489694,-99) , 
3, 6.88607, 1, 0, 0.503063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491228,-99) , 
0, 0.493329, 1, 0, 0.493286,-99) , 
5, 0.839903, 0, 0, 0.495229,-99) , 
5, 0.332345, 1, 0, 0.500779,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00933886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214434, 1, 1, 0.505638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518873,-99) , 
NN(
0, 
0, 
-1, -0.193071, 0, -1, 0.496679,-99) , 
2, 0.214111, 0, 0, 0.49774,-99) , 
5, 0.142009, 0, 0, 0.500774,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00888354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497553,-99) , 
4, 0.999524, 1, 0, 0.498434,-99) , 
3, 9.30933, 0, 0, 0.49903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466016,-99) , 
4, 0.998571, 0, 0, 0.498065,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.011377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495872,-99) , 
5, -0.336014, 1, 0, 0.499616,-99) , 
3, 9.03454, 0, 0, 0.500568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479445,-99) , 
2, 0.0714289, 0, 0, 0.489582,-99) , 
4, 0.999524, 0, 0, 0.499721,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.00425746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4905,-99) , 
0, 0.490471, 0, 0, 0.499628,-99) , 
2, -0.214216, 1, 0, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474932,-99) , 
4, 0.998572, 0, 0, 0.499774,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0105758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499614,-99) , 
5, -0.265851, 0, 0, 0.504518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495717,-99) , 
0, 0.49292, 1, 0, 0.497323,-99) , 
0, 0.499995, 0, 0, 0.499828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.481695,-99) , 
5, 0.862566, 0, 0, 0.487126,-99) , 
5, 0.713013, 1, 0, 0.498579,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00787971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.85503, 0, 1, 0.509556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499429,-99) , 
4, 0.999932, 1, 0, 0.50094,-99) , 
5, -0.809723, 1, 0, 0.502396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474665,-99) , 
5, 0.617632, 1, 0, 0.487323,-99) , 
4, 0.999524, 0, 0, 0.501247,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0115458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132603, 0, 1, 0.505047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488013,-99) , 
0, 0.490471, 0, 0, 0.504197,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.487099,-99) , 
2, 0.214245, 1, 0, 0.503334,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00616269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498451,-99) , 
5, 0.712478, 0, 0, 0.499456,-99) , 
2, 0.214186, 0, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
0, 0.489519, 0, 0, 0.499472,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00779564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.950162, 0, 1, 0.518262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488421,-99) , 
5, -0.814247, 0, 0, 0.49932,-99) , 
5, -0.904858, 1, 0, 0.500967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47034,-99) , 
4, 0.999048, 0, 0, 0.499608,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0138345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
4, 0.999998, 0, 0, 0.501675,-99) , 
NN(
0, 
0, 
-1, 4.71567, 1, -1, 0.49439,-99) , 
4, 0.999955, 0, 0, 0.499874,-99) , 
4, 0.999048, 1, 0, 0.500633,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0105178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.507316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485765,-99) , 
5, 0.724173, 1, 0, 0.499335,-99) , 
5, -0.429797, 1, 0, 0.502509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474671,-99) , 
2, -0.0714605, 1, 0, 0.485906,-99) , 
4, 0.999524, 0, 0, 0.501235,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00500851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513436,-99) , 
NN(
NN(
0, 
0, 
-1, 0.713012, 0, 1, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0.504988, 0, -1, 0.493965,-99) , 
0, 0.504167, 1, 0, 0.500965,-99) , 
0, 0.489519, 1, 0, 0.501379,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0134561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498181, 1, 1, 0.512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49479,-99) , 
5, -0.103975, 1, 0, 0.500377,-99) , 
5, 0.710596, 0, 0, 0.501572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498883,-99) , 
5, -0.336781, 1, 0, 0.506497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488459,-99) , 
5, 0.612064, 0, 0, 0.490757,-99) , 
2, -0.0705649, 1, 0, 0.494179,-99) , 
0, 0.495233, 0, 0, 0.499637,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00574435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52024,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.498824,-99) , 
0, 0.489519, 1, 0, 0.499497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473854,-99) , 
4, 0.999048, 0, 0, 0.498343,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00923421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493889,-99) , 
5, -0.945614, 1, 0, 0.498275,-99) , 
5, -0.714491, 0, 0, 0.503679,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496975,-99) , 
0, 0.499043, 1, 0, 0.500867,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00627596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.501839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488121,-99) , 
4, 0.999546, 0, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476641,-99) , 
4, 0.999048, 0, 0, 0.500253,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00893105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495885,-99) , 
3, 3.20232, 1, 0, 0.51044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489699,-99) , 
5, -0.639091, 0, 0, 0.498978,-99) , 
5, -0.810523, 1, 0, 0.500935,-99) , 
NN(
0, 
0, 
-1, 0.427345, 0, -1, 0.487143,-99) , 
4, 0.999524, 0, 0, 0.499881,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00793484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49824,-99) , 
0, 0.492376, 1, 0, 0.499229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465437,-99) , 
0, 0.499043, 1, 0, 0.486443,-99) , 
4, 0.999819, 0, 0, 0.498022,-99) , 
4, 0.999048, 1, 0, 0.498793,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0155127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489957,-99) , 
5, -0.905001, 0, 0, 0.505696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496889,-99) , 
5, -0.809849, 1, 0, 0.49945,-99) , 
2, -0.00360965, 1, 0, 0.502947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516736,-99) , 
NN(
0, 
0, 
-1, 0.425002, 1, -1, 0.485092,-99) , 
0, 0.503805, 0, 0, 0.489911,-99) , 
2, 0.0712088, 1, 0, 0.500603,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00857806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305095, 0, 1, 0.50578,-99) , 
NN(
0, 
0, 
-1, 0.999527, 0, -1, 0.497223,-99) , 
0, 0.502852, 0, 0, 0.498574,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.486167,-99) , 
5, 0.713012, 1, 0, 0.497356,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0105135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493906,-99) , 
0, 0.501446, 1, 0, 0.499919,-99) , 
5, 0.520002, 0, 0, 0.502042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0.489791, 0, -1, 0.482374,-99) , 
5, -0.62005, 1, 0, 0.489077,-99) , 
0, 0.491424, 0, 0, 0.501002,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.010223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.768954, 0, 1, 0.504911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496238,-99) , 
4, 0.999524, 1, 0, 0.497607,-99) , 
5, -0.714586, 1, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476035,-99) , 
3, 8.94697, 1, 0, 0.498601,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0137103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497931,-99) , 
4, 0.999955, 0, 0, 0.504454,-99) , 
4, 0.999524, 1, 0, 0.505485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492938,-99) , 
5, 0.59066, 1, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, -0.809666, 1, -1, 0.486757,-99) , 
5, -0.428993, 0, 0, 0.495294,-99) , 
0, 0.499043, 0, 0, 0.49962,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00578131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
2, 0.167471, 0, 0, 0.515521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49126,-99) , 
4, 0.999524, 0, 0, 0.500347,-99) , 
2, 0.132488, 0, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485574,-99) , 
2, 0.214118, 1, 0, 0.5004,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0112307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503314,-99) , 
NN(
0, 
0, 
-1, 0.500539, 1, -1, 0.49465,-99) , 
5, -0.524218, 0, 0, 0.500521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491747,-99) , 
5, -0.714572, 1, 0, 0.495315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478699,-99) , 
4, 0.999524, 0, 0, 0.493787,-99) , 
0, 0.496185, 0, 0, 0.498288,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0103161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498036,-99) , 
4, 0.999501, 1, 0, 0.499108,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.492556,-99) , 
5, -0.620787, 0, 0, 0.497232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47431,-99) , 
4, 0.999048, 0, 0, 0.496196,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00649879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503033, 0, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0.26828, 1, -1, 0.491813,-99) , 
0, 0.503805, 1, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 1.54536, 1, -1, 0.488436,-99) , 
5, -0.904927, 0, 0, 0.499811,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00943953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496023,-99) , 
0, 0.491605, 0, 0, 0.502527,-99) , 
NN(
0, 
0, 
-1, 0.212494, 1, -1, 0.49705,-99) , 
0, 0.495233, 1, 0, 0.49848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469209,-99) , 
4, 0.999048, 0, 0, 0.497169,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0104954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0492772, 1, 1, 0.504248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484248,-99) , 
4, 0.999955, 0, 0, 0.497945,-99) , 
0, 0.495233, 0, 0, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.488684,-99) , 
4, 0.999524, 0, 0, 0.50157,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00554693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513648,-99) , 
NN(
0, 
0, 
-1, 5.33265, 1, -1, 0.498368,-99) , 
2, 0.214318, 0, 0, 0.499134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477143,-99) , 
3, 9.27754, 1, 0, 0.498559,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00894747);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214318, 0, 1, 0.503928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483996,-99) , 
4, 0.999048, 0, 0, 0.503026,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00573089);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.514232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496841,-99) , 
5, -0.240037, 0, 0, 0.509321,-99) , 
NN(
0, 
0, 
-1, 0.491696, 0, -1, 0.498573,-99) , 
0, 0.504757, 0, 0, 0.499333,-99) , 
2, 0.214278, 0, 0, 0.500126,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0088705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496624,-99) , 
5, 0.23679, 1, 0, 0.50113,-99) , 
4, 0.998572, 1, 0, 0.502004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48174,-99) , 
3, 9.28394, 1, 0, 0.501482,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00567351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.507914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499893,-99) , 
2, -0.15207, 1, 0, 0.500698,-99) , 
2, 0.0722752, 0, 0, 0.502007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491286,-99) , 
3, 2.05474, 1, 0, 0.495955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475709,-99) , 
5, -0.968279, 0, 0, 0.48961,-99) , 
5, -0.904842, 0, 0, 0.501013,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0049087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512272,-99) , 
NN(
0, 
0, 
-1, -0.214313, 0, -1, 0.498628,-99) , 
0, 0.489156, 1, 0, 0.499032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492612,-99) , 
5, 0.316348, 1, 0, 0.498607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486368,-99) , 
5, -0.429998, 0, 0, 0.493255,-99) , 
0, 0.503805, 1, 0, 0.498404,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00880608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479739,-99) , 
5, 0.719417, 1, 0, 0.500562,-99) , 
5, 0.805411, 0, 0, 0.501581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48516,-99) , 
0, 0.496186, 0, 0, 0.497423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469977,-99) , 
0, 0.499043, 1, 0, 0.487625,-99) , 
5, -0.333904, 0, 0, 0.493589,-99) , 
3, 4.69447, 1, 0, 0.500104,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00519457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.514808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499462,-99) , 
5, 0.807615, 0, 0, 0.500145,-99) , 
0, 0.490471, 1, 0, 0.500934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474496,-99) , 
4, 0.998571, 0, 0, 0.500164,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00704766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
4, 0.999524, 1, 0, 0.499002,-99) , 
3, 8.99018, 0, 0, 0.499675,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.490941,-99) , 
2, -0.214336, 0, 0, 0.499222,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0124939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.418259, 1, 1, 0.50918,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.490955,-99) , 
2, -0.0717175, 0, 0, 0.505967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498236,-99) , 
0, 0.5019, 0, 0, 0.500434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472341,-99) , 
5, -0.646567, 0, 0, 0.49019,-99) , 
2, 0.0714402, 1, 0, 0.498573,-99) , 
5, 0.237011, 0, 0, 0.501083,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0106591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.14706, 0, 1, 0.505747,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.496627,-99) , 
5, -0.429563, 1, 0, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.482436,-99) , 
4, 0.999524, 0, 0, 0.498902,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.00920455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49748,-99) , 
2, -0.213004, 1, 0, 0.498062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475495,-99) , 
4, 0.999619, 0, 0, 0.497128,-99) , 
5, 0.330465, 0, 0, 0.499921,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00984973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497867,-99) , 
2, 0.0712452, 1, 0, 0.504219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
5, -0.632952, 0, 0, 0.498609,-99) , 
0, 0.500947, 1, 0, 0.502732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484855,-99) , 
0, 0.499043, 0, 0, 0.493151,-99) , 
5, -0.904842, 0, 0, 0.501967,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00797997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485507,-99) , 
4, 0.999977, 0, 0, 0.505877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495417,-99) , 
5, -0.637562, 0, 0, 0.499961,-99) , 
5, -0.80972, 1, 0, 0.50096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454555,-99) , 
0, 0.499995, 1, 0, 0.486475,-99) , 
4, 0.999524, 0, 0, 0.499856,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0111613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496766,-99) , 
5, 0.325034, 1, 0, 0.504164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480694,-99) , 
4, 0.999524, 0, 0, 0.502347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498714,-99) , 
0, 0.495868, 1, 0, 0.504283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495276,-99) , 
2, 0.152873, 0, 0, 0.496373,-99) , 
2, -0.0715943, 1, 0, 0.497754,-99) , 
0, 0.499995, 0, 0, 0.499326,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00717907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497252,-99) , 
4, 0.999977, 0, 0, 0.500506,-99) , 
2, 0.214259, 0, 0, 0.501138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467253,-99) , 
0, 0.496186, 0, 0, 0.487644,-99) , 
4, 0.999524, 0, 0, 0.500107,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0131044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.678724, 1, 1, 0.52668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490372,-99) , 
4, 0.999796, 0, 0, 0.502354,-99) , 
4, 0.999524, 1, 0, 0.505278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49273,-99) , 
3, 4.24548, 1, 0, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0.504122, 0, -1, 0.488345,-99) , 
0, 0.500948, 1, 0, 0.497597,-99) , 
5, -0.334848, 0, 0, 0.50211,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0101217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498732,-99) , 
0, 0.496594, 1, 0, 0.503021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496127,-99) , 
5, 0.724172, 0, 0, 0.49785,-99) , 
5, -0.429801, 1, 0, 0.499751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480656,-99) , 
0, 0.505573, 1, 0, 0.488007,-99) , 
0, 0.504757, 1, 0, 0.498905,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00872321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999728, 1, 1, 0.504195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481793,-99) , 
5, 0.834798, 1, 0, 0.498506,-99) , 
5, 0.427065, 1, 0, 0.50292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486006,-99) , 
4, 0.999048, 0, 0, 0.50215,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00744996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.511929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49867,-99) , 
5, 0.635462, 0, 0, 0.50006,-99) , 
5, -0.904861, 1, 0, 0.501102,-99) , 
NN(
0, 
0, 
-1, -0.0714605, 1, -1, 0.490335,-99) , 
4, 0.999524, 0, 0, 0.500279,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00818245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999773, 1, 1, 0.502733,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.495736,-99) , 
5, 0.330465, 1, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475631,-99) , 
4, 0.999048, 0, 0, 0.499722,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00721684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486496,-99) , 
4, 0.999637, 0, 0, 0.500316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479327,-99) , 
4, 0.999954, 0, 0, 0.491972,-99) , 
2, -0.0714207, 0, 0, 0.49891,-99) , 
4, 0.999048, 1, 0, 0.499872,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00728843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497068,-99) , 
5, 0.427065, 0, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481485,-99) , 
4, 0.998571, 0, 0, 0.498166,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.010455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713335, 1, 1, 0.508747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491432,-99) , 
0, 0.5019, 1, 0, 0.505868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497087,-99) , 
3, 1.52077, 1, 0, 0.499894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471177,-99) , 
4, 0.999429, 0, 0, 0.498958,-99) , 
5, 0.520347, 0, 0, 0.500347,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0102224);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499646,-99) , 
5, 0.617868, 1, 0, 0.510706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485802,-99) , 
4, 0.999841, 0, 0, 0.498683,-99) , 
4, 0.999524, 1, 0, 0.500089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490272,-99) , 
4, 0.999995, 0, 0, 0.498373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482194,-99) , 
4, 0.999905, 0, 0, 0.496996,-99) , 
5, -0.333828, 0, 0, 0.498803,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0126285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498628,-99) , 
4, 0.99981, 1, 0, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0.8581, 1, -1, 0.494322,-99) , 
5, 0.263972, 1, 0, 0.498552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511163,-99) , 
NN(
0, 
0, 
-1, -0.812964, 1, -1, 0.488073,-99) , 
5, -0.768954, 0, 0, 0.491836,-99) , 
5, -0.714586, 0, 0, 0.497063,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0186824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484642,-99) , 
4, 0.999977, 0, 0, 0.499903,-99) , 
4, 0.999524, 1, 0, 0.504437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489951,-99) , 
2, 0.014239, 0, 0, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496148,-99) , 
2, -0.00357557, 0, 0, 0.498409,-99) , 
2, 0.0712452, 0, 0, 0.499519,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00757374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.809724, 1, 1, 0.503102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473045,-99) , 
4, 0.998572, 0, 0, 0.50224,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00781371);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499935,-99) , 
2, 0.0724665, 0, 0, 0.502374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495762,-99) , 
0, 0.502852, 0, 0, 0.497025,-99) , 
5, -0.238898, 1, 0, 0.499558,-99) , 
4, 0.999048, 1, 0, 0.500171,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0146438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494301,-99) , 
4, 0.999946, 0, 0, 0.505121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488684,-99) , 
4, 0.999714, 0, 0, 0.504149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485149,-99) , 
0, 0.500947, 1, 0, 0.500666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484876,-99) , 
5, 0.611704, 0, 0, 0.497035,-99) , 
5, 0.521156, 1, 0, 0.50274,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0102785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496855,-99) , 
3, 2.55475, 1, 0, 0.50914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
0, 0.497138, 1, 0, 0.500685,-99) , 
2, 0.0714736, 0, 0, 0.502218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0.500131, 1, -1, 0.477412,-99) , 
0, 0.497138, 1, 0, 0.487927,-99) , 
5, 0.710896, 1, 0, 0.500804,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0110646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49551,-99) , 
3, 2.26324, 1, 0, 0.503189,-99) , 
5, 0.612955, 0, 0, 0.506753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49682,-99) , 
5, -0.809922, 1, 0, 0.497859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468366,-99) , 
4, 0.999048, 0, 0, 0.49693,-99) , 
2, -0.0714207, 1, 0, 0.498733,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0105264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21365, 1, 1, 0.501766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482385,-99) , 
3, 9.31038, 1, 0, 0.501139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488114,-99) , 
5, -0.768954, 0, 0, 0.492275,-99) , 
NN(
0, 
0, 
-1, 2.21962, 1, -1, 0.47476,-99) , 
0, 0.495234, 0, 0, 0.487427,-99) , 
5, -0.714586, 0, 0, 0.498112,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0072818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496811,-99) , 
3, 2.28409, 1, 0, 0.509235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49455,-99) , 
0, 0.495278, 0, 0, 0.499739,-99) , 
0, 0.491424, 1, 0, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.488672,-99) , 
5, 0.713012, 1, 0, 0.499354,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00988662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498448,-99) , 
2, 0.112288, 0, 0, 0.499936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
2, -0.214216, 0, 0, 0.499437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491628,-99) , 
0, 0.490534, 1, 0, 0.49402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478764,-99) , 
0, 0.489428, 0, 0, 0.492266,-99) , 
0, 0.495233, 0, 0, 0.49756,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0111275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489863,-99) , 
5, 0.367557, 0, 0, 0.502754,-99) , 
5, 0.262805, 1, 0, 0.504213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482766,-99) , 
5, 0.0319511, 1, 0, 0.500019,-99) , 
NN(
0, 
0, 
-1, 1.11669, 0, -1, 0.489488,-99) , 
0, 0.495233, 0, 0, 0.497172,-99) , 
5, 0.140597, 0, 0, 0.499868,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00975913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99955, 1, 1, 0.503264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48328,-99) , 
3, 1.54205, 1, 0, 0.492478,-99) , 
5, -0.923036, 0, 0, 0.502454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508522,-99) , 
NN(
0, 
0, 
-1, 0.496458, 1, -1, 0.488614,-99) , 
0, 0.499995, 0, 0, 0.494751,-99) , 
5, 0.616228, 1, 0, 0.501309,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00626943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498761,-99) , 
0, 0.506163, 0, 0, 0.499248,-99) , 
4, 0.998572, 1, 0, 0.499991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502386,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.487802,-99) , 
2, 0.0723704, 0, 0, 0.491571,-99) , 
0, 0.492376, 0, 0, 0.499048,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00743236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
3, 2.19524, 0, 0, 0.499098,-99) , 
3, 8.87229, 0, 0, 0.499628,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.490046,-99) , 
4, 0.999524, 0, 0, 0.49889,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0140241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488248,-99) , 
4, 0.999796, 0, 0, 0.499591,-99) , 
4, 0.998571, 1, 0, 0.500956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488955,-99) , 
4, 0.999995, 0, 0, 0.497162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478342,-99) , 
4, 0.999905, 0, 0, 0.495396,-99) , 
5, -0.0486232, 0, 0, 0.49798,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0103027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498599,-99) , 
4, 0.999524, 1, 0, 0.499837,-99) , 
0, 0.491424, 1, 0, 0.500544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495368,-99) , 
2, 0.0755115, 0, 0, 0.499664,-99) , 
NN(
0, 
0, 
-1, -0.891337, 0, -1, 0.488113,-99) , 
3, 3.19362, 1, 0, 0.495973,-99) , 
5, -0.429566, 0, 0, 0.498843,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00898272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514881,-99) , 
NN(
0, 
0, 
-1, 0.521156, 1, -1, 0.497479,-99) , 
0, 0.505709, 0, 0, 0.498232,-99) , 
NN(
0, 
0, 
-1, 0.713025, 0, -1, 0.477971,-99) , 
4, 0.999524, 0, 0, 0.4967,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.017312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 0, 1, 0.503977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490536,-99) , 
5, -0.954688, 1, 0, 0.49588,-99) , 
5, -0.904832, 0, 0, 0.503353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490669,-99) , 
0, 0.504757, 1, 0, 0.500317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466272,-99) , 
1, -0.00124531, 1, 0, 0.491209,-99) , 
5, -0.333892, 1, 0, 0.495318,-99) , 
0, 0.500947, 1, 0, 0.501218,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00452899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517688,-99) , 
NN(
0, 
0, 
-1, 0.999456, 0, -1, 0.498926,-99) , 
4, 0.998572, 1, 0, 0.499502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474997,-99) , 
3, 8.99096, 1, 0, 0.498792,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00370731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499842,-99) , 
4, 0.999644, 1, 0, 0.500394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482075,-99) , 
4, 0.99932, 0, 0, 0.499833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477686,-99) , 
4, 0.998572, 0, 0, 0.499174,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0129581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497488,-99) , 
5, 0.61763, 1, 0, 0.51544,-99) , 
NN(
0, 
0, 
-1, 0.236858, 0, 1, 0.504326,-99) , 
4, 0.999524, 1, 0, 0.505626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496552,-99) , 
5, -0.809692, 1, 0, 0.501871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48063,-99) , 
4, 0.999905, 0, 0, 0.500111,-99) , 
5, -0.333918, 0, 0, 0.50334,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0124245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4969,-99) , 
4, 0.999728, 1, 0, 0.498219,-99) , 
4, 0.999048, 1, 0, 0.499434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492378,-99) , 
5, -0.620424, 1, 0, 0.497128,-99) , 
NN(
0, 
0, 
-1, 0.0450095, 0, -1, 0.480459,-99) , 
2, 0.0716991, 1, 0, 0.492013,-99) , 
3, 4.50122, 1, 0, 0.497945,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0124427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493665,-99) , 
3, 3.71226, 1, 0, 0.503907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494503,-99) , 
4, 0.999977, 1, 0, 0.498526,-99) , 
5, -0.238898, 1, 0, 0.501126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473948,-99) , 
5, 0.427325, 0, 0, 0.491973,-99) , 
4, 0.999524, 0, 0, 0.500421,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00853731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136293, 1, 1, 0.514688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490988,-99) , 
5, 0.0436852, 0, 0, 0.50254,-99) , 
2, -0.207556, 0, 0, 0.511009,-99) , 
NN(
0, 
0, 
-1, -0.904844, 0, -1, 0.497829,-99) , 
2, -0.0715101, 1, 0, 0.500227,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0139607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485515,-99) , 
4, 0.999728, 0, 0, 0.505015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494698,-99) , 
0, 0.492603, 1, 0, 0.498078,-99) , 
0, 0.49809, 0, 0, 0.501594,-99) , 
4, 0.999048, 1, 0, 0.502366,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00868187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.504889,-99) , 
NN(
0, 
0, 
-1, 0.834799, 1, -1, 0.498966,-99) , 
5, -0.143761, 1, 0, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46715,-99) , 
4, 0.999048, 0, 0, 0.500492,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00872103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483432,-99) , 
4, 0.999546, 0, 0, 0.501672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489373,-99) , 
2, 0.0640238, 0, 0, 0.492107,-99) , 
0, 0.502852, 1, 0, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479032,-99) , 
4, 0.999048, 0, 0, 0.499291,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00900874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491638, 1, 1, 0.50267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48736,-99) , 
5, 0.237019, 0, 0, 0.492884,-99) , 
0, 0.502716, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, -0.3358, 1, -1, 0.487229,-99) , 
0, 0.490471, 0, 0, 0.500309,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_6_8_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_6_8_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_6_8_noNsigma *ReadBDT_maker_LHC19c2a_6_8_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_6_8_noNsigma(theInpVar);
  }
}
