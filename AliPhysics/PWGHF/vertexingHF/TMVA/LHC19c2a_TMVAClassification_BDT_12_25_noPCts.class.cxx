#include "LHC19c2a_TMVAClassification_BDT_12_25_noPCts.class.h"

double ReadBDT_LHC19c2a_12_25_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_12_25_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.708204472852865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.4287, 1, 1, 0.891909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.760617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452604,-99) , 
7, 0.212458, 0, 0, 0.619197,-99) , 
8, -2.90278, 1, 0, 0.798516,-99) , 
NN(
0, 
0, 
-1, -1.54546, 1, -1, 0.203884,-99) , 
8, -2.28916, 1, 0, 0.501436,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.574623);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.70932, 1, 1, 0.723188,-99) , 
NN(
0, 
0, 
-1, -1.49884, 1, -1, 0.181093,-99) , 
8, -1.82894, 1, 0, 0.518256,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.487761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.35493, 1, 1, 0.765297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431922,-99) , 
1, -0.00401334, 1, 0, 0.461559,-99) , 
NN(
0, 
0, 
-1, 1.65489, 1, -1, 0.145212,-99) , 
8, -1.40241, 1, 0, 0.324896,-99) , 
8, -2.61812, 1, 0, 0.498376,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.618725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.792736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361794,-99) , 
8, -1.31114, 1, 0, 0.727629,-99) , 
NN(
0, 
0, 
-1, -1.79007, 1, -1, 0.33144,-99) , 
4, 0.999977, 0, 0, 0.605501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0359688,-99) , 
4, 0.999524, 0, 0, 0.512619,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.471963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12443, 1, 1, 0.672517,-99) , 
NN(
0, 
0, 
-1, 2.05141, 1, -1, 0.301543,-99) , 
8, -1.41774, 1, 0, 0.590692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0503627,-99) , 
4, 0.999525, 0, 0, 0.507764,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.410609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.576941, 0, 1, 0.807718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255398,-99) , 
4, 0.999955, 0, 0, 0.482746,-99) , 
8, -3.12096, 1, 0, 0.564211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0603851,-99) , 
4, 0.999524, 0, 0, 0.490146,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.351871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.813506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325024,-99) , 
4, 0.999977, 0, 0, 0.465939,-99) , 
8, -3.41558, 1, 0, 0.526879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0778786,-99) , 
4, 0.999524, 0, 0, 0.465174,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.269185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532333, 0, 1, 0.773469,-99) , 
NN(
0, 
0, 
-1, 0.893896, 1, -1, 0.451625,-99) , 
8, -3.34946, 1, 0, 0.51112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0955626,-99) , 
4, 0.999526, 0, 0, 0.456345,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.278419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.122747, 0, 1, 0.742904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252739,-99) , 
9, 0.801781, 1, 0, 0.467893,-99) , 
8, -3.07608, 1, 0, 0.534106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.106584,-99) , 
4, 0.999525, 0, 0, 0.479176,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.225712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532242, 0, 1, 0.722924,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.456382,-99) , 
8, -3.33279, 1, 0, 0.504248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.121853,-99) , 
4, 0.999525, 0, 0, 0.459777,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.226882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.608208, 0, 1, 0.76328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260914,-99) , 
4, 0.999887, 0, 0, 0.488903,-99) , 
8, -3.47711, 1, 0, 0.527004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.131499,-99) , 
4, 0.999524, 0, 0, 0.481329,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.20303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.696951, 0, 1, 0.693307,-99) , 
NN(
0, 
0, 
-1, -1.03414, 1, -1, 0.461786,-99) , 
8, -3.27239, 1, 0, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.147648,-99) , 
4, 0.999525, 0, 0, 0.462862,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.170905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48152, 0, 1, 0.773383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324092,-99) , 
8, -1.02995, 1, 0, 0.486139,-99) , 
8, -3.73917, 1, 0, 0.512275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.169718,-99) , 
4, 0.999525, 0, 0, 0.477478,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.16253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.977185, 0, 1, 0.71894,-99) , 
NN(
0, 
0, 
-1, -0.369323, 0, -1, 0.467774,-99) , 
8, -3.70823, 1, 0, 0.492108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173887,-99) , 
4, 0.999525, 0, 0, 0.457215,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.258028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466571,-99) , 
4, 0.999997, 0, 0, 0.553858,-99) , 
NN(
0, 
0, 
-1, -0.138036, 0, -1, 0.34532,-99) , 
4, 0.999932, 0, 0, 0.517526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.181155,-99) , 
4, 0.999525, 0, 0, 0.482536,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.189336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.739395, 0, 1, 0.584765,-99) , 
NN(
0, 
0, 
-1, 2.1113, 1, -1, 0.448502,-99) , 
8, -2.06718, 1, 0, 0.52827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212741,-99) , 
4, 0.999525, 0, 0, 0.495329,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.173474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.23817, 0, 1, 0.672755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313721,-99) , 
3, 5.83023, 1, 0, 0.487456,-99) , 
8, -2.86145, 1, 0, 0.538219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239761,-99) , 
4, 0.999524, 0, 0, 0.507393,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.194932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457465,-99) , 
4, 0.999995, 0, 0, 0.523219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330171,-99) , 
4, 0.999887, 0, 0, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236573,-99) , 
4, 0.999524, 0, 0, 0.476944,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.13385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496923,-99) , 
2, 0.0570767, 0, 0, 0.529999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344618,-99) , 
4, 0.999887, 0, 0, 0.508642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265743,-99) , 
4, 0.999525, 0, 0, 0.485743,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.156392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.863926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497209,-99) , 
7, -1.45557, 0, 0, 0.734804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265367,-99) , 
7, -0.641724, 0, 0, 0.493464,-99) , 
8, -3.6646, 1, 0, 0.515776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256882,-99) , 
4, 0.999524, 0, 0, 0.491371,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.165413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.901177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.840683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476036,-99) , 
8, -4.05667, 1, 0, 0.57393,-99) , 
7, -0.152943, 0, 0, 0.642324,-99) , 
NN(
0, 
0, 
-1, 0.939313, 1, -1, 0.443452,-99) , 
8, -3.03494, 1, 0, 0.487974,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.166646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.915317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45181,-99) , 
8, -3.51026, 1, 0, 0.575184,-99) , 
7, -0.0963508, 0, 0, 0.639571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47584,-99) , 
1, 0.00600111, 0, 0, 0.490459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293366,-99) , 
8, -0.809721, 1, 0, 0.467594,-99) , 
8, -3.01426, 1, 0, 0.506706,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.15521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.19448, 1, 1, 0.873264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491397,-99) , 
8, -3.81537, 1, 0, 0.57911,-99) , 
7, -0.0986196, 0, 0, 0.643406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478852,-99) , 
1, 0.00442927, 0, 0, 0.498493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304448,-99) , 
7, 2.20502, 1, 0, 0.477699,-99) , 
8, -2.9418, 1, 0, 0.517112,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.134884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.710864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494502,-99) , 
2, 0.0609423, 0, 0, 0.52463,-99) , 
2, -0.0799308, 1, 0, 0.549173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330108,-99) , 
4, 0.999525, 0, 0, 0.529415,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.212411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.62004, 1, 1, 0.735828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32162,-99) , 
8, -0.937111, 1, 0, 0.533861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238503,-99) , 
8, -4.26356, 1, 0, 0.331311,-99) , 
7, -1.00038, 0, 0, 0.511595,-99) , 
1, 0.00470502, 0, 0, 0.531325,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.160999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999996, 0, 1, 0.565786,-99) , 
NN(
0, 
0, 
-1, 0.000547831, 0, -1, 0.407906,-99) , 
4, 0.99991, 0, 0, 0.545445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313738,-99) , 
4, 0.999525, 0, 0, 0.524398,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.253321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.219269, 0, 1, 0.718148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467451,-99) , 
7, 0.396475, 0, 0, 0.576674,-99) , 
8, -2.8093, 1, 0, 0.6196,-99) , 
NN(
NN(
0, 
0, 
-1, -2.51204, 1, 1, 0.705579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39142,-99) , 
5, 0.00228528, 0, 0, 0.44311,-99) , 
1, 0.0053318, 0, 0, 0.468907,-99) , 
1, -0.00153168, 1, 0, 0.510425,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.130274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55422, 1, 1, 0.546966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284498,-99) , 
9, -1.98113, 1, 0, 0.410682,-99) , 
7, -0.714263, 0, 0, 0.526689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332519,-99) , 
4, 0.999525, 0, 0, 0.509726,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.13532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87117, 1, 1, 0.684682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420019,-99) , 
3, 3.24833, 1, 0, 0.495464,-99) , 
1, 0.00442927, 0, 0, 0.513181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312253,-99) , 
9, 0.989164, 1, 0, 0.495801,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.102673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.789546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493219,-99) , 
8, -3.50884, 1, 0, 0.512678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239651,-99) , 
8, -3.97281, 1, 0, 0.358638,-99) , 
7, -1.09327, 0, 0, 0.498209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292966,-99) , 
9, 1.06955, 1, 0, 0.482249,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.142517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.820931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477109,-99) , 
7, -0.534146, 0, 0, 0.594339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474501,-99) , 
1, 0.00234347, 0, 0, 0.501534,-99) , 
8, -3.08366, 1, 0, 0.522299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303869,-99) , 
9, 1.07696, 1, 0, 0.505716,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.142342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.818477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453576,-99) , 
7, -0.201289, 0, 0, 0.571399,-99) , 
NN(
0, 
0, 
-1, 2.20502, 1, -1, 0.474938,-99) , 
8, -2.46058, 1, 0, 0.51227,-99) , 
8, -4.13796, 1, 0, 0.52336,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.127589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.855897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35006,-99) , 
9, 1.02734, 1, 0, 0.51625,-99) , 
8, -3.78936, 1, 0, 0.531523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287319,-99) , 
7, -1.57128, 0, 0, 0.521342,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0965108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.93662, 1, 1, 0.676479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496485,-99) , 
2, 0.054604, 0, 0, 0.518969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348973,-99) , 
7, 2.14223, 1, 0, 0.50357,-99) , 
1, 0.00470502, 0, 0, 0.518385,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0965978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.65919, 1, 1, 0.678166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468672,-99) , 
7, -0.718848, 0, 0, 0.638597,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00508735, 0, 1, 0.519763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363094,-99) , 
8, -0.903471, 1, 0, 0.503136,-99) , 
1, -0.0034466, 1, 0, 0.521415,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0990636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.38887, 1, 1, 0.535607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311744,-99) , 
7, -1.57146, 0, 0, 0.52619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371158,-99) , 
4, 0.999525, 0, 0, 0.513078,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.100751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.79458, 1, 1, 0.602379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402701,-99) , 
7, -0.839831, 0, 0, 0.499499,-99) , 
2, -0.0541599, 1, 0, 0.520193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338287,-99) , 
9, 1.06955, 1, 0, 0.506139,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0646584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.880043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496404,-99) , 
8, -3.9957, 1, 0, 0.508192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335404,-99) , 
7, -1.53065, 0, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365605,-99) , 
7, 2.14246, 1, 0, 0.487971,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.12166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.890564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321019,-99) , 
9, -1.22148, 1, 0, 0.547042,-99) , 
7, 0.185967, 0, 0, 0.587047,-99) , 
NN(
0, 
0, 
-1, 1.06728, 1, -1, 0.466094,-99) , 
8, -2.87065, 1, 0, 0.497082,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.102473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482702,-99) , 
8, -1.59048, 1, 0, 0.557871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427081,-99) , 
7, 0.469129, 0, 0, 0.468895,-99) , 
0, 0.495234, 1, 0, 0.491626,-99) , 
8, -4.00682, 1, 0, 0.501566,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.102867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.58918, 1, 1, 0.61206,-99) , 
NN(
NN(
0, 
0, 
-1, -0.834807, 0, 1, 0.620021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325334,-99) , 
7, -0.369323, 0, 0, 0.474633,-99) , 
8, -3.46351, 1, 0, 0.490313,-99) , 
1, 0.0023883, 0, 0, 0.51502,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.160006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.938764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414358,-99) , 
7, -0.701859, 0, 0, 0.517278,-99) , 
7, 0.445079, 0, 0, 0.558675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558406,-99) , 
NN(
0, 
0, 
-1, 0.73369, 0, -1, 0.444975,-99) , 
0, 0.492377, 1, 0, 0.457461,-99) , 
8, -2.57241, 1, 0, 0.493784,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.101658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47839, 1, 1, 0.536588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325679,-99) , 
7, -1.57153, 0, 0, 0.527713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363942,-99) , 
4, 0.999525, 0, 0, 0.513253,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.122353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00498753, 0, 1, 0.612223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464937,-99) , 
2, 0.0589744, 0, 0, 0.486371,-99) , 
3, 0.823217, 1, 0, 0.510404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331688,-99) , 
3, 7.41939, 1, 0, 0.501606,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.174569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51881, 1, 1, 0.616224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438184,-99) , 
2, 0.0382605, 0, 0, 0.479563,-99) , 
2, -0.0329886, 1, 0, 0.513661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282925,-99) , 
3, 7.39984, 1, 0, 0.500963,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.125799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.734232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433258,-99) , 
8, -4.06731, 1, 0, 0.544779,-99) , 
7, -0.986315, 0, 0, 0.631562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421772,-99) , 
7, -0.00974975, 0, 0, 0.502201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337811,-99) , 
4, 0.999526, 0, 0, 0.488176,-99) , 
8, -3.46883, 1, 0, 0.503912,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0987348);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.718008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491236,-99) , 
8, -2.32784, 1, 0, 0.538336,-99) , 
NN(
0, 
0, 
-1, 5.82934, 1, -1, 0.461242,-99) , 
0, 0.495234, 1, 0, 0.480914,-99) , 
8, -4.00682, 1, 0, 0.49155,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.112451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.863037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.73655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479441,-99) , 
8, -4.08601, 1, 0, 0.535732,-99) , 
7, -0.12331, 0, 0, 0.58243,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489794, 1, 1, 0.583005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451223,-99) , 
0, 0.500676, 0, 0, 0.470525,-99) , 
0, 0.491426, 1, 0, 0.479704,-99) , 
8, -3.07608, 1, 0, 0.500289,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.134951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.612174, 1, 1, 0.598739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463031,-99) , 
2, -0.114806, 1, 0, 0.480148,-99) , 
3, 1.28539, 1, 0, 0.520733,-99) , 
NN(
0, 
0, 
-1, 0.498074, 1, -1, 0.38654,-99) , 
3, 6.29375, 1, 0, 0.510313,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.114143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.734046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37091,-99) , 
4, 0.999887, 0, 0, 0.515311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375685,-99) , 
4, 0.999525, 0, 0, 0.503379,-99) , 
8, -4.14555, 1, 0, 0.511444,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.114401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.823897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480951,-99) , 
7, -1.48152, 0, 0, 0.680599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405355,-99) , 
7, -0.369617, 0, 0, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345508,-99) , 
4, 0.999525, 0, 0, 0.491601,-99) , 
8, -3.78068, 1, 0, 0.503918,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.122164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.725788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438247,-99) , 
9, -2.37313, 1, 0, 0.546228,-99) , 
7, -0.973462, 0, 0, 0.62794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456046,-99) , 
7, 0.515388, 0, 0, 0.49765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369908,-99) , 
7, 2.17147, 1, 0, 0.485092,-99) , 
8, -3.46044, 1, 0, 0.500649,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.119273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00498747, 0, 1, 0.616337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469827,-99) , 
2, -0.0676326, 1, 0, 0.488153,-99) , 
3, 0.823217, 1, 0, 0.512062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306626,-99) , 
3, 7.41939, 1, 0, 0.501293,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.139354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.74995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316911,-99) , 
9, -1.58661, 1, 0, 0.557701,-99) , 
7, -0.303655, 0, 0, 0.601937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46388,-99) , 
7, 0.810158, 0, 0, 0.496905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38673,-99) , 
9, 0.920286, 1, 0, 0.482927,-99) , 
8, -3.0854, 1, 0, 0.50581,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.180451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.211944, 0, 1, 0.6159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451153,-99) , 
7, -1.28796, 0, 0, 0.587386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438241,-99) , 
8, -1.95396, 1, 0, 0.493449,-99) , 
NN(
0, 
0, 
-1, -2.4937, 0, -1, 0.37753,-99) , 
7, 0.318161, 0, 0, 0.472684,-99) , 
9, -0.996947, 1, 0, 0.50683,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0881479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.552188, 0, 1, 0.650093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497412,-99) , 
2, -0.0796335, 1, 0, 0.514845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372446,-99) , 
4, 0.999525, 0, 0, 0.502577,-99) , 
8, -3.33279, 1, 0, 0.521126,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.122175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.384197, 0, 1, 0.757792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485719,-99) , 
2, -0.0214854, 1, 0, 0.528974,-99) , 
7, 0.0899442, 0, 0, 0.571182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479885,-99) , 
2, -0.0183279, 1, 0, 0.52066,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.455046,-99) , 
3, 3.40931, 1, 0, 0.502679,-99) , 
8, -2.68334, 1, 0, 0.524355,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.164385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.825746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409001,-99) , 
9, -1.09365, 1, 0, 0.561952,-99) , 
7, 0.372166, 0, 0, 0.58812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466687,-99) , 
8, -1.64391, 1, 0, 0.519436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428636,-99) , 
8, -1.92725, 0, 0, 0.462194,-99) , 
7, 0.880118, 0, 0, 0.493732,-99) , 
8, -2.66923, 1, 0, 0.522582,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.117037);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49904, 1, 1, 0.685987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375171,-99) , 
4, 0.999842, 0, 0, 0.523712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410775,-99) , 
4, 0.999524, 0, 0, 0.514199,-99) , 
1, 0.00442927, 0, 0, 0.528859,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.155237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.118143, 0, 1, 0.663097,-99) , 
NN(
0, 
0, 
-1, 0.131191, 0, -1, 0.422566,-99) , 
3, 3.7832, 1, 0, 0.571358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47943,-99) , 
7, 0.713168, 0, 0, 0.513904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392413,-99) , 
2, 0.0157601, 0, 0, 0.437211,-99) , 
2, -0.015878, 1, 0, 0.468781,-99) , 
2, 0.0579437, 0, 0, 0.487831,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0903367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498086, 1, 1, 0.652196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488065,-99) , 
2, -0.0870116, 1, 0, 0.504123,-99) , 
3, 0.612109, 1, 0, 0.521508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39674,-99) , 
3, 6.09185, 0, 0, 0.452533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350468,-99) , 
3, 7.80618, 1, 0, 0.414687,-99) , 
3, 5.40813, 1, 0, 0.509626,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.113941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0127977, 0, 1, 0.581123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474955,-99) , 
6, -951.286, 1, 0, 0.498746,-99) , 
3, 1.58012, 1, 0, 0.534595,-99) , 
NN(
0, 
0, 
-1, 0.498098, 0, -1, 0.410335,-99) , 
3, 6.29375, 1, 0, 0.525171,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.111552);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.70492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405828,-99) , 
4, 0.999932, 0, 0, 0.512727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397252,-99) , 
4, 0.999525, 0, 0, 0.50323,-99) , 
8, -3.85355, 1, 0, 0.513399,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0698089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.745509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410936,-99) , 
3, 6.30634, 1, 0, 0.50497,-99) , 
8, -3.71241, 1, 0, 0.515791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335474,-99) , 
7, -1.57155, 0, 0, 0.50883,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0496173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.762887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355123,-99) , 
3, 7.39984, 1, 0, 0.49577,-99) , 
8, -3.98039, 1, 0, 0.504038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251366,-99) , 
7, -1.8537, 0, 0, 0.497086,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.15165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453717,-99) , 
5, 0.00356676, 0, 0, 0.496449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336443,-99) , 
5, 0.0124849, 1, 0, 0.490388,-99) , 
8, -4.16479, 1, 0, 0.496172,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.153573);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467454,-99) , 
3, 4.44721, 1, 0, 0.570954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445631,-99) , 
5, 0.00271021, 0, 0, 0.476648,-99) , 
1, 0.00234698, 0, 0, 0.496646,-99) , 
1, -0.00632407, 1, 0, 0.504883,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0695826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.733903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496038,-99) , 
0, 0.495233, 1, 0, 0.51365,-99) , 
8, -3.64343, 1, 0, 0.523016,-99) , 
NN(
0, 
0, 
-1, -2.54048, 1, -1, 0.371596,-99) , 
7, -1.28254, 0, 0, 0.513722,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0724771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424838,-99) , 
4, 0.999524, 0, 0, 0.510346,-99) , 
8, -3.7448, 1, 0, 0.518455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344601,-99) , 
7, -1.57137, 0, 0, 0.511437,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.118425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.738913, 0, 1, 0.562987,-99) , 
NN(
0, 
0, 
-1, 1.96852, 1, -1, 0.375267,-99) , 
7, -1.25511, 0, 0, 0.539901,-99) , 
NN(
NN(
0, 
0, 
-1, 1.39686, 0, 1, 0.520089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438299,-99) , 
2, 0.0598602, 0, 0, 0.451917,-99) , 
0, 0.495234, 1, 0, 0.469019,-99) , 
8, -2.11364, 1, 0, 0.506787,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0967046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484568,-99) , 
9, -0.575556, 1, 0, 0.517028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367061,-99) , 
1, 0.00109363, 0, 0, 0.410292,-99) , 
7, -0.654787, 0, 0, 0.504364,-99) , 
8, -4.16479, 1, 0, 0.509852,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0906548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.228768, 0, 1, 0.608617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430214,-99) , 
9, 1.04355, 1, 0, 0.508807,-99) , 
8, -3.07912, 1, 0, 0.521476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327229,-99) , 
7, -1.76248, 0, 0, 0.495705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344201,-99) , 
9, -2.21998, 1, 0, 0.432821,-99) , 
7, -1.00068, 0, 0, 0.513203,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.117786);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00730181, 1, 1, 0.648845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48075,-99) , 
3, 3.20051, 1, 0, 0.554474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446359,-99) , 
2, -0.0173422, 1, 0, 0.48465,-99) , 
2, 0.0564175, 0, 0, 0.497977,-99) , 
8, -3.81162, 1, 0, 0.506649,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0629061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.787207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493208,-99) , 
7, 1.04394, 0, 0, 0.512122,-99) , 
9, -2.07243, 1, 0, 0.519579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379967,-99) , 
7, -1.56777, 0, 0, 0.514344,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.051172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688934,-99) , 
NN(
NN(
0, 
0, 
-1, -3.2149, 1, 1, 0.515126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358325,-99) , 
7, -1.21095, 0, 0, 0.509219,-99) , 
8, -4.07586, 1, 0, 0.515247,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0480837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588127,-99) , 
NN(
0, 
0, 
-1, -0.0425963, 0, -1, 0.484357,-99) , 
8, -3.71476, 1, 0, 0.489642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362329,-99) , 
7, -1.57049, 0, 0, 0.484598,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0740337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.750581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497381,-99) , 
8, -1.71835, 1, 0, 0.536617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476008,-99) , 
8, -1.80262, 0, 0, 0.489197,-99) , 
7, 1.28512, 0, 0, 0.50185,-99) , 
2, 0.195553, 0, 0, 0.507979,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.103921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426625,-99) , 
9, 0.240297, 1, 0, 0.551362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468666,-99) , 
2, -0.0336379, 1, 0, 0.492322,-99) , 
2, 0.0394756, 0, 0, 0.505973,-99) , 
9, -2.24688, 1, 0, 0.511324,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.102462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.756499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379846,-99) , 
4, 0.999864, 0, 0, 0.518272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415581,-99) , 
4, 0.999525, 0, 0, 0.509579,-99) , 
8, -4.06436, 1, 0, 0.517344,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.125893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00459406, 1, 1, 0.59957,-99) , 
NN(
0, 
0, 
-1, 0.00100019, 0, -1, 0.461625,-99) , 
5, 0.00262545, 0, 0, 0.507674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320259,-99) , 
5, 0.013785, 1, 0, 0.501765,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0808201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42342,-99) , 
7, -0.478631, 0, 0, 0.513103,-99) , 
9, -2.04901, 1, 0, 0.519177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372432,-99) , 
7, -1.57155, 0, 0, 0.513638,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0966678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.519276, 1, 1, 0.626705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474214,-99) , 
2, 0.112949, 0, 0, 0.488533,-99) , 
NN(
0, 
0, 
-1, 0.177733, 1, -1, 0.375877,-99) , 
3, 6.36911, 1, 0, 0.478869,-99) , 
1, -0.00526335, 1, 0, 0.488435,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.101748);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.374185, 0, 1, 0.584925,-99) , 
NN(
NN(
0, 
0, 
-1, -0.179349, 1, 1, 0.558137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468316,-99) , 
2, -0.0174848, 1, 0, 0.4904,-99) , 
2, 0.0562948, 0, 0, 0.503235,-99) , 
8, -2.62352, 1, 0, 0.529302,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0858868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.05704, 1, 1, 0.607024,-99) , 
NN(
0, 
0, 
-1, -1.5672, 0, -1, 0.478588,-99) , 
5, 0.00356693, 0, 0, 0.505927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365559,-99) , 
5, 0.0124852, 1, 0, 0.501185,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0924931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.859894, 1, 1, 0.67872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438755,-99) , 
9, -1.23886, 1, 0, 0.518512,-99) , 
7, 0.131902, 0, 0, 0.548086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620879,-99) , 
NN(
0, 
0, 
-1, -2.30374, 0, -1, 0.483469,-99) , 
8, -2.51648, 1, 0, 0.492607,-99) , 
9, -0.721829, 1, 0, 0.514467,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0878048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.11392, 1, 1, 0.53092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409395,-99) , 
7, -1.40874, 0, 0, 0.50274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360136,-99) , 
9, -1.65289, 1, 0, 0.449973,-99) , 
7, -0.429294, 0, 0, 0.514812,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.13175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482924,-99) , 
4, 0.999999, 0, 0, 0.550992,-99) , 
NN(
0, 
0, 
-1, 2.7836, 1, -1, 0.453236,-99) , 
4, 0.999977, 0, 0, 0.519017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440413,-99) , 
4, 0.999524, 0, 0, 0.51215,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0850976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01597, 1, 1, 0.651319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494088,-99) , 
8, -2.41646, 1, 0, 0.503215,-99) , 
8, -2.61914, 1, 0, 0.524779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462771,-99) , 
7, -1.44682, 0, 0, 0.539773,-99) , 
NN(
0, 
0, 
-1, -0.838309, 0, -1, 0.440923,-99) , 
9, -2.00874, 1, 0, 0.465111,-99) , 
7, -0.143044, 0, 0, 0.508162,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.101674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.477, 1, 1, 0.594426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489116,-99) , 
2, 0.0731625, 0, 0, 0.501373,-99) , 
5, 0.00229239, 0, 0, 0.537397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396649,-99) , 
5, 0.0120366, 1, 0, 0.531936,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0920453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.31069, 0, 1, 0.656142,-99) , 
NN(
NN(
0, 
0, 
-1, -1.24779, 1, 1, 0.534915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397261,-99) , 
3, 2.11456, 1, 0, 0.457032,-99) , 
7, -0.312567, 0, 0, 0.52111,-99) , 
8, -3.76904, 1, 0, 0.528776,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.1115);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.51509, 1, 1, 0.541476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484477,-99) , 
9, -1.00082, 1, 0, 0.581987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436999,-99) , 
2, -0.0494485, 1, 0, 0.472627,-99) , 
2, 0.0224584, 0, 0, 0.503557,-99) , 
7, 0.427817, 0, 0, 0.524075,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.165001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446851,-99) , 
4, 0.999992, 0, 0, 0.522597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320372,-99) , 
4, 0.999842, 0, 0, 0.504944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423115,-99) , 
4, 0.999526, 0, 0, 0.497961,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0984456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406583,-99) , 
4, 0.999525, 0, 0, 0.517021,-99) , 
8, -3.46615, 1, 0, 0.524487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397235,-99) , 
7, -1.2895, 1, 0, 0.476871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291763,-99) , 
7, -1.76088, 0, 0, 0.416382,-99) , 
7, -0.99941, 0, 0, 0.514309,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.136691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.538366, 0, 1, 0.564502,-99) , 
NN(
0, 
0, 
-1, 0.498076, 0, -1, 0.393057,-99) , 
3, 5.56258, 1, 0, 0.544124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.75035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479695,-99) , 
8, -1.80173, 1, 0, 0.520192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377389,-99) , 
8, -1.84503, 0, 0, 0.43911,-99) , 
7, 1.15332, 0, 0, 0.487322,-99) , 
9, -0.474857, 1, 0, 0.514773,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0986723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.23345, 1, 1, 0.572309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444282,-99) , 
7, -0.427158, 0, 0, 0.54473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.70764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497256,-99) , 
7, -0.534586, 0, 0, 0.548223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449839,-99) , 
7, 1.45636, 0, 0, 0.467648,-99) , 
9, -1.35867, 1, 0, 0.4819,-99) , 
2, 0.0403004, 0, 0, 0.496128,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0747387);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482803,-99) , 
2, 0.0201577, 0, 0, 0.506832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413798,-99) , 
3, 7.41939, 1, 0, 0.501799,-99) , 
8, -4.26283, 1, 0, 0.505815,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0930462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000836307, 0, 1, 0.57895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439903,-99) , 
7, 0.55496, 0, 0, 0.497292,-99) , 
9, -0.903626, 1, 0, 0.51258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447679,-99) , 
7, -0.793375, 0, 0, 0.495413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374756,-99) , 
9, -1.54443, 1, 0, 0.463943,-99) , 
7, -0.426247, 0, 0, 0.502845,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0736021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.842557, 1, 1, 0.604253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474018,-99) , 
5, 0.00118888, 0, 0, 0.502126,-99) , 
1, -0.00296813, 1, 0, 0.515553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388105,-99) , 
5, 0.012485, 1, 0, 0.51108,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0722513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489925,-99) , 
8, -3.0693, 1, 0, 0.502839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37441,-99) , 
9, -2.00919, 1, 0, 0.431105,-99) , 
7, -0.620067, 0, 0, 0.493622,-99) , 
8, -4.1716, 1, 0, 0.497789,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.106973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 0, 1, 0.665592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442292,-99) , 
0, 0.49905, 1, 0, 0.512755,-99) , 
3, 2.75559, 1, 0, 0.577325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481444,-99) , 
7, -0.411243, 0, 0, 0.55413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460358,-99) , 
2, -0.00694207, 1, 0, 0.484091,-99) , 
1, -0.00218438, 1, 0, 0.499098,-99) , 
2, -0.0804514, 1, 0, 0.51012,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0801552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497192,-99) , 
3, 2.16847, 1, 0, 0.542939,-99) , 
8, -2.81389, 1, 0, 0.578041,-99) , 
NN(
NN(
0, 
0, 
-1, -0.534586, 0, 1, 0.564705,-99) , 
NN(
0, 
0, 
-1, 0.0405973, 0, -1, 0.477679,-99) , 
9, -1.33975, 1, 0, 0.493301,-99) , 
1, -0.00218438, 1, 0, 0.510324,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0402697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671178,-99) , 
NN(
NN(
0, 
0, 
-1, -3.4603, 1, 1, 0.510796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35525,-99) , 
7, -1.13923, 0, 0, 0.504578,-99) , 
9, -2.45345, 1, 0, 0.508846,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.054197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445563,-99) , 
7, -0.373467, 0, 0, 0.498429,-99) , 
8, -4.20193, 1, 0, 0.502227,-99) , 
0, 0.490471, 1, 0, 0.508223,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.104713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.278497, 0, 1, 0.660936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480442,-99) , 
9, -0.449264, 1, 0, 0.497388,-99) , 
8, -2.70678, 1, 0, 0.515071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394424,-99) , 
7, -1.67887, 0, 0, 0.536118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388549,-99) , 
8, -2.83627, 0, 0, 0.43431,-99) , 
9, -1.76544, 1, 0, 0.47284,-99) , 
7, -0.142918, 0, 0, 0.503528,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0604763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.191711, 0, 1, 0.637514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385867,-99) , 
4, 0.999864, 0, 0, 0.501154,-99) , 
2, 0.133634, 0, 0, 0.510687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434294,-99) , 
4, 0.999524, 0, 0, 0.504419,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0753874);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613322,-99) , 
NN(
NN(
0, 
0, 
-1, -3.18769, 1, 1, 0.536084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4527,-99) , 
2, 0.0108359, 0, 0, 0.480701,-99) , 
2, -0.0463538, 1, 0, 0.493104,-99) , 
2, 0.193862, 0, 0, 0.499584,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0385419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495851,-99) , 
8, -3.48677, 1, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35878,-99) , 
7, -1.20221, 0, 0, 0.497231,-99) , 
8, -3.98666, 1, 0, 0.501887,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0948373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371412,-99) , 
7, -1.28616, 0, 0, 0.556773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479579,-99) , 
9, -2.10993, 1, 0, 0.487182,-99) , 
3, 1.49591, 1, 0, 0.515374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423262,-99) , 
3, 7.39984, 1, 0, 0.510676,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.106796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.15346, 1, 1, 0.57464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433102,-99) , 
0, 0.499038, 0, 0, 0.477511,-99) , 
7, -0.604897, 0, 0, 0.536588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49286,-99) , 
8, -2.08052, 1, 0, 0.515876,-99) , 
NN(
0, 
0, 
-1, -2.2164, 0, -1, 0.405194,-99) , 
7, 0.644097, 0, 0, 0.491456,-99) , 
9, -0.721829, 1, 0, 0.509079,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0789933);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679675,-99) , 
NN(
NN(
0, 
0, 
-1, -2.51041, 1, 1, 0.532142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466446,-99) , 
8, -2.25478, 0, 0, 0.48424,-99) , 
7, 0.433611, 0, 0, 0.510924,-99) , 
8, -4.20814, 1, 0, 0.515221,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0754143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.64841, 1, 1, 0.553814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484972,-99) , 
9, -0.90365, 1, 0, 0.505649,-99) , 
NN(
0, 
0, 
-1, -1.4808, 1, -1, 0.456239,-99) , 
7, -0.143088, 0, 0, 0.491862,-99) , 
0, 0.492376, 1, 0, 0.49867,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476896,-99) , 
3, 3.75356, 1, 0, 0.519377,-99) , 
8, -2.48763, 1, 0, 0.5311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435241,-99) , 
8, -2.64618, 0, 0, 0.469201,-99) , 
8, -4.16206, 1, 0, 0.48218,-99) , 
7, 0.428047, 0, 0, 0.50844,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0843286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.0597, 1, 1, 0.621456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488027,-99) , 
7, 1.67457, 1, 0, 0.55006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486385,-99) , 
7, 1.48851, 0, 0, 0.49808,-99) , 
8, -1.40754, 0, 0, 0.511502,-99) , 
9, -1.77915, 1, 0, 0.521879,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0685764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.844689, 0, 1, 0.688113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390893,-99) , 
9, -2.4061, 1, 0, 0.474354,-99) , 
7, -1.16545, 0, 0, 0.583144,-99) , 
NN(
NN(
0, 
0, 
-1, -2.87041, 1, 1, 0.515477,-99) , 
NN(
0, 
0, 
-1, 2.4419, 1, -1, 0.437449,-99) , 
7, -0.281315, 0, 0, 0.506528,-99) , 
9, -1.63316, 1, 0, 0.515696,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0436969);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617531,-99) , 
NN(
NN(
0, 
0, 
-1, -1.25701, 1, 1, 0.512354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366471,-99) , 
9, -1.84765, 1, 0, 0.449711,-99) , 
7, -0.705894, 0, 0, 0.505967,-99) , 
8, -4.07586, 1, 0, 0.509618,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0795698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5713, 1, 1, 0.637814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416884,-99) , 
9, -2.4497, 1, 0, 0.467539,-99) , 
7, -1.13308, 0, 0, 0.577045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492449,-99) , 
9, -1.09876, 1, 0, 0.501433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384952,-99) , 
7, -0.18669, 0, 0, 0.49158,-99) , 
9, -1.32649, 1, 0, 0.50719,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0573641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.32382, 0, 1, 0.627053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491978,-99) , 
0, 0.498091, 1, 0, 0.510955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364423,-99) , 
1, -0.00987108, 0, 0, 0.506138,-99) , 
8, -3.75713, 1, 0, 0.512634,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0565727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.766924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461706,-99) , 
7, -0.969274, 0, 0, 0.570561,-99) , 
8, -4.05559, 1, 0, 0.632743,-99) , 
NN(
NN(
0, 
0, 
-1, -1.23481, 1, 1, 0.511698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314629,-99) , 
0, 0.496188, 0, 0, 0.420049,-99) , 
8, -3.21874, 0, 0, 0.505803,-99) , 
8, -3.46044, 1, 0, 0.516417,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0932749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438536,-99) , 
4, 0.999955, 0, 0, 0.510804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434675,-99) , 
4, 0.999524, 0, 0, 0.504335,-99) , 
8, -4.06866, 1, 0, 0.51034,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0393729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420128,-99) , 
0, 0.503986, 1, 0, 0.499451,-99) , 
0, 0.505709, 0, 0, 0.503951,-99) , 
8, -4.11241, 1, 0, 0.508472,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0513436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.670324, 0, 1, 0.574532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405362,-99) , 
7, -0.260058, 0, 0, 0.496625,-99) , 
9, -1.54651, 1, 0, 0.505265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39029,-99) , 
7, -1.57155, 0, 0, 0.501134,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0956188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.392621, 0, 1, 0.593987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421209,-99) , 
7, -1.56961, 0, 0, 0.563523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483176,-99) , 
9, -0.986747, 1, 0, 0.489175,-99) , 
NN(
0, 
0, 
-1, -2.7442, 0, -1, 0.369016,-99) , 
7, 0.0410033, 0, 0, 0.472872,-99) , 
9, -1.22474, 1, 0, 0.491596,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0622217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.820087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424983,-99) , 
0, 0.497134, 0, 0, 0.510764,-99) , 
7, -0.975711, 0, 0, 0.620082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492363,-99) , 
2, 0.12737, 0, 0, 0.499299,-99) , 
2, -0.187956, 1, 0, 0.505273,-99) , 
8, -3.44533, 1, 0, 0.515121,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.10403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.567567, 1, 1, 0.580648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463794,-99) , 
2, 0.0564175, 0, 0, 0.478718,-99) , 
3, 1.16278, 1, 0, 0.508221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395664,-99) , 
3, 7.41242, 1, 0, 0.502854,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0647502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.45234, 1, 1, 0.595042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493126,-99) , 
2, 0.216514, 0, 0, 0.499021,-99) , 
2, -0.0770949, 1, 0, 0.512231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365015,-99) , 
7, 0.169136, 1, 0, 0.412533,-99) , 
0, 0.491426, 0, 0, 0.502023,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0888697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.582932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460758,-99) , 
7, 0.467732, 0, 0, 0.508608,-99) , 
9, -1.22284, 1, 0, 0.522354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406509,-99) , 
7, -1.57155, 0, 0, 0.517999,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.133509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436234,-99) , 
9, 0.424176, 1, 0, 0.530914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428264,-99) , 
6, 0.14512, 0, 0, 0.485585,-99) , 
6, -951.286, 1, 0, 0.50013,-99) , 
0, 0.505709, 0, 0, 0.504724,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0496062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430657,-99) , 
7, -0.930375, 0, 0, 0.507717,-99) , 
8, -3.86882, 1, 0, 0.512651,-99) , 
NN(
0, 
0, 
-1, -1.23842, 0, -1, 0.428684,-99) , 
0, 0.504756, 1, 0, 0.505129,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.116839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476114,-99) , 
4, 0.999996, 0, 0, 0.528298,-99) , 
NN(
0, 
0, 
-1, -0.0144813, 0, -1, 0.421616,-99) , 
4, 0.99991, 0, 0, 0.514131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43463,-99) , 
4, 0.999525, 0, 0, 0.507033,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.068859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
3, 2.8384, 1, 0, 0.5326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458094,-99) , 
2, 0.0099705, 0, 0, 0.486914,-99) , 
2, -0.0358284, 1, 0, 0.49893,-99) , 
2, 0.204828, 0, 0, 0.503398,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0774939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700091,-99) , 
NN(
NN(
0, 
0, 
-1, 0.924727, 0, 1, 0.535429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431884,-99) , 
7, 1.28376, 0, 0, 0.497501,-99) , 
9, -0.0610925, 1, 0, 0.520283,-99) , 
8, -4.07586, 1, 0, 0.52521,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.119013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478576,-99) , 
7, 1.00108, 1, 0, 0.508909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442872,-99) , 
7, 1.1656, 0, 0, 0.457911,-99) , 
8, -1.77305, 0, 0, 0.475768,-99) , 
8, -4.06436, 1, 0, 0.481192,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.13725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.70188, 1, 1, 0.671098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403634,-99) , 
9, -1.27698, 1, 0, 0.506879,-99) , 
7, 0.0774134, 0, 0, 0.539095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458341,-99) , 
7, 1.89898, 1, 0, 0.529904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404671,-99) , 
7, 0.760715, 0, 0, 0.468227,-99) , 
8, -1.31265, 0, 0, 0.488405,-99) , 
9, -0.772748, 1, 0, 0.506674,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0388059);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.98428, 1, 1, 0.608337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393004,-99) , 
0, 0.503986, 1, 0, 0.493797,-99) , 
0, 0.505709, 0, 0, 0.498002,-99) , 
9, -1.99351, 1, 0, 0.503983,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.115675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461798,-99) , 
4, 0.999996, 0, 0, 0.511618,-99) , 
NN(
0, 
0, 
-1, 0.148621, 0, -1, 0.426383,-99) , 
4, 0.999909, 0, 0, 0.500478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431224,-99) , 
4, 0.999524, 0, 0, 0.494911,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0803006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0992272, 0, 1, 0.617583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498006,-99) , 
9, -0.223081, 1, 0, 0.566778,-99) , 
NN(
NN(
0, 
0, 
-1, 3.00047, 1, 1, 0.585729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474007,-99) , 
2, -0.0123916, 1, 0, 0.49272,-99) , 
2, 0.135282, 0, 0, 0.502153,-99) , 
2, -0.0862331, 1, 0, 0.511177,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0720706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147343, 0, 1, 0.564206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488862,-99) , 
9, 0.109632, 1, 0, 0.509149,-99) , 
9, -0.427273, 1, 0, 0.536284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495352,-99) , 
9, -0.747419, 1, 0, 0.54292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46763,-99) , 
8, -1.49062, 0, 0, 0.481861,-99) , 
2, -0.0490479, 1, 0, 0.493494,-99) , 
0, 0.5019, 0, 0, 0.501883,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0612238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 0, 1, 0.583767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446171,-99) , 
7, -1.00045, 0, 0, 0.511167,-99) , 
NN(
0, 
0, 
-1, -2.11873, 0, -1, 0.429098,-99) , 
0, 0.493737, 0, 0, 0.499144,-99) , 
0, 0.490471, 1, 0, 0.503478,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0606576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104389, 1, 1, 0.523403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439124,-99) , 
4, 0.999525, 0, 0, 0.515831,-99) , 
NN(
0, 
0, 
-1, -2.21998, 1, -1, 0.432479,-99) , 
7, -0.999325, 0, 0, 0.508626,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0508824);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.17887, 0, 1, 0.594023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494854,-99) , 
9, -0.408882, 1, 0, 0.506975,-99) , 
NN(
0, 
0, 
-1, -3.36955, 0, -1, 0.435211,-99) , 
8, -3.02928, 0, 0, 0.498155,-99) , 
8, -3.50573, 1, 0, 0.505708,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0388218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.54594, 0, 1, 0.599998,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505707, 0, 1, 0.507661,-99) , 
NN(
0, 
0, 
-1, -1.77836, 1, -1, 0.408537,-99) , 
7, -0.614633, 0, 0, 0.499341,-99) , 
9, -2.00338, 1, 0, 0.504893,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.130513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460817,-99) , 
3, 3.10801, 1, 0, 0.515059,-99) , 
8, -3.06521, 1, 0, 0.537768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470326,-99) , 
0, 0.496184, 0, 0, 0.536496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406282,-99) , 
0, 0.493328, 1, 0, 0.421129,-99) , 
6, -0.427909, 0, 0, 0.495143,-99) , 
6, -951.286, 1, 0, 0.508603,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.110926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.65758, 1, 1, 0.661301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405399,-99) , 
9, -0.979555, 1, 0, 0.523733,-99) , 
7, 0.228959, 0, 0, 0.547173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476217,-99) , 
8, -1.91932, 1, 0, 0.495355,-99) , 
NN(
0, 
0, 
-1, -2.35528, 0, -1, 0.423492,-99) , 
7, 0.743986, 0, 0, 0.478943,-99) , 
9, -0.625955, 1, 0, 0.506295,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0479984);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49496,-99) , 
9, -1.5654, 1, 0, 0.501795,-99) , 
NN(
0, 
0, 
-1, 1.92657, 1, -1, 0.385812,-99) , 
7, -0.747163, 0, 0, 0.493562,-99) , 
9, -2.09404, 1, 0, 0.499784,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0636573);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.6556, 1, 1, 0.550785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369536,-99) , 
9, -0.0380632, 1, 0, 0.488774,-99) , 
7, 1.46454, 0, 0, 0.497501,-99) , 
8, -1.43542, 0, 0, 0.510369,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.068029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05107, 1, 1, 0.558715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453555,-99) , 
7, -0.718748, 0, 0, 0.54428,-99) , 
NN(
NN(
0, 
0, 
-1, -1.74272, 1, 1, 0.512616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442976,-99) , 
6, -951.286, 1, 0, 0.463332,-99) , 
0, 0.496457, 1, 0, 0.484746,-99) , 
0, 0.5019, 0, 0, 0.496161,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0671822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.848253, 1, 1, 0.591909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47978,-99) , 
1, -0.000742119, 1, 0, 0.49199,-99) , 
1, -0.00286998, 1, 0, 0.504694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388971,-99) , 
5, 0.0120365, 1, 0, 0.500351,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0592075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.3348, 1, 1, 0.526354,-99) , 
NN(
0, 
0, 
-1, -0.498023, 1, -1, 0.467783,-99) , 
7, 0.715679, 0, 0, 0.49423,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0969841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483276,-99) , 
8, -2.12388, 1, 0, 0.500222,-99) , 
8, -2.76677, 1, 0, 0.511613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453804,-99) , 
9, -1.04831, 1, 0, 0.524318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296982,-99) , 
9, -1.44939, 1, 0, 0.438213,-99) , 
8, -2.89394, 0, 0, 0.47172,-99) , 
7, 0.142568, 0, 0, 0.497753,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0891371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625007,-99) , 
NN(
0, 
0, 
-1, 0.498069, 1, -1, 0.490054,-99) , 
7, 1.48464, 1, 0, 0.530761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425823,-99) , 
9, -0.62343, 1, 0, 0.474639,-99) , 
7, 1.54219, 0, 0, 0.484767,-99) , 
8, -1.44568, 0, 0, 0.496253,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0630282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599859,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493418, 0, 1, 0.53293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455354,-99) , 
8, -2.30621, 0, 0, 0.486814,-99) , 
0, 0.495233, 1, 0, 0.498425,-99) , 
2, -0.219637, 1, 0, 0.502979,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0631775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471278,-99) , 
5, 0.00162527, 0, 0, 0.496609,-99) , 
5, 0.00853262, 0, 0, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368465,-99) , 
5, 0.013785, 1, 0, 0.497619,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0634278);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.58872, 1, 1, 0.54103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60566,-99) , 
NN(
0, 
0, 
-1, 0.0819965, 1, -1, 0.476455,-99) , 
7, 1.54101, 0, 0, 0.484416,-99) , 
8, -1.44568, 0, 0, 0.498389,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0673993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.46812, 1, 1, 0.523621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404801,-99) , 
7, -1.56847, 0, 0, 0.519344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472649,-99) , 
0, 0.505074, 0, 0, 0.504462,-99) , 
NN(
0, 
0, 
-1, 0.714679, 0, -1, 0.438513,-99) , 
3, 2.80717, 1, 0, 0.479138,-99) , 
0, 0.500947, 1, 0, 0.508203,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.054379);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499524,-99) , 
8, -2.72553, 1, 0, 0.513878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393907,-99) , 
2, -0.00284526, 1, 0, 0.442364,-99) , 
7, -0.31924, 0, 0, 0.500735,-99) , 
9, -2.38843, 1, 0, 0.503508,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.107198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486133,-99) , 
4, 0.999997, 0, 0, 0.53381,-99) , 
NN(
0, 
0, 
-1, 1.77372, 1, -1, 0.446353,-99) , 
4, 0.999932, 0, 0, 0.519371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419907,-99) , 
4, 0.999524, 0, 0, 0.510784,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.124068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474804,-99) , 
7, 1.783, 0, 0, 0.496022,-99) , 
7, 0.16127, 1, 0, 0.505589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.792512,-99) , 
NN(
0, 
0, 
-1, -1.10879, 1, -1, 0.417013,-99) , 
7, 0.508727, 0, 0, 0.443167,-99) , 
8, -2.46892, 0, 0, 0.481215,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0550287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.18763, 1, 1, 0.519585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56052,-99) , 
NN(
0, 
0, 
-1, -0.850598, 0, -1, 0.446385,-99) , 
9, -2.08127, 1, 0, 0.471986,-99) , 
8, -2.9418, 0, 0, 0.509014,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0761819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389852,-99) , 
4, 0.999842, 0, 0, 0.517776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459061,-99) , 
4, 0.999524, 0, 0, 0.512884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396724,-99) , 
1, -0.00987108, 0, 0, 0.509376,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.058703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.799215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467726,-99) , 
7, -0.976158, 0, 0, 0.578748,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00168726, 0, 1, 0.573124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483835,-99) , 
8, -1.29992, 0, 0, 0.492079,-99) , 
0, 0.504757, 0, 0, 0.49759,-99) , 
8, -3.48018, 1, 0, 0.504034,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.113409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35671, 0, 1, 0.594384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477184,-99) , 
8, -3.13701, 1, 0, 0.497099,-99) , 
7, 0.998285, 0, 0, 0.514224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405881,-99) , 
8, -1.14062, 1, 0, 0.474985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413959,-99) , 
7, 1.76927, 0, 0, 0.450453,-99) , 
9, 0.297347, 1, 0, 0.498184,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0894213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.7241, 1, 1, 0.54196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435711,-99) , 
3, 2.11921, 1, 0, 0.482112,-99) , 
7, -0.429184, 0, 0, 0.530948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37164,-99) , 
1, -0.0103818, 0, 0, 0.526663,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0585987);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.86667, 1, 1, 0.516081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45776,-99) , 
5, 0.00469641, 0, 0, 0.479407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388289,-99) , 
9, -1.25382, 1, 0, 0.459188,-99) , 
7, -0.143088, 0, 0, 0.501112,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0926832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14559, 1, 1, 0.588052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49467,-99) , 
2, -0.0829858, 1, 0, 0.507581,-99) , 
7, 0.836208, 0, 0, 0.521414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409821,-99) , 
6, -0.138479, 0, 0, 0.49392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418253,-99) , 
6, -951.286, 0, 0, 0.467033,-99) , 
9, 0.12556, 1, 0, 0.504402,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0699792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.319198, 1, 1, 0.666315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486609,-99) , 
2, 0.0224584, 0, 0, 0.503294,-99) , 
3, 0.418216, 1, 0, 0.512395,-99) , 
NN(
0, 
0, 
-1, 0.498109, 1, -1, 0.414582,-99) , 
3, 6.3608, 1, 0, 0.504076,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.076072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.10652, 0, 1, 0.567095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482487,-99) , 
0, 0.499043, 0, 0, 0.498859,-99) , 
9, -0.861037, 1, 0, 0.519773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375766,-99) , 
7, -1.57146, 0, 0, 0.513764,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0745425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.381541, 0, 1, 0.538732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450533,-99) , 
7, 2.138, 0, 0, 0.473747,-99) , 
9, 0.434939, 1, 0, 0.524627,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0942445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.210383, 0, 1, 0.62351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489935,-99) , 
9, -0.385268, 1, 0, 0.549872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447497,-99) , 
3, 1.67018, 1, 0, 0.516585,-99) , 
NN(
0, 
0, 
-1, 0.142196, 0, -1, 0.468222,-99) , 
2, -0.00820799, 1, 0, 0.482046,-99) , 
2, -0.0818425, 1, 0, 0.491484,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0631816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00084452, 1, 1, 0.563927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476143,-99) , 
9, 0.410838, 1, 0, 0.545044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535127,-99) , 
NN(
0, 
0, 
-1, 0.038352, 1, -1, 0.48326,-99) , 
8, -1.41774, 0, 0, 0.494863,-99) , 
0, 0.496185, 1, 0, 0.51044,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0935493);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484244,-99) , 
3, 2.86027, 1, 0, 0.543866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463487,-99) , 
2, 0.0115602, 0, 0, 0.496818,-99) , 
2, -0.0459752, 1, 0, 0.50754,-99) , 
2, 0.195687, 0, 0, 0.5126,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.105792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.705783, 0, 1, 0.565011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451658,-99) , 
7, 1.36713, 0, 0, 0.488757,-99) , 
9, -0.318645, 1, 0, 0.521474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386412,-99) , 
8, -3.88203, 0, 0, 0.484827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340772,-99) , 
0, 0.493328, 0, 0, 0.454961,-99) , 
7, -0.426602, 0, 0, 0.508468,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0794402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15895, 1, 1, 0.543946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394451,-99) , 
9, -1.29625, 1, 0, 0.489834,-99) , 
7, -0.192648, 0, 0, 0.5261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446376,-99) , 
0, 0.4981, 1, 0, 0.477145,-99) , 
9, 0.297347, 1, 0, 0.512981,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.119135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450183,-99) , 
4, 0.999992, 0, 0, 0.505199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41257,-99) , 
4, 0.999842, 0, 0, 0.497923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413427,-99) , 
4, 0.999525, 0, 0, 0.490703,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.075437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424752,-99) , 
0, 0.493331, 0, 0, 0.489682,-99) , 
8, -1.71848, 0, 0, 0.500782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424278,-99) , 
6, 0.144992, 0, 0, 0.47893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404448,-99) , 
6, -951.286, 0, 0, 0.449934,-99) , 
9, 0.306877, 1, 0, 0.487826,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0437575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495569,-99) , 
9, -1.55054, 1, 0, 0.504353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391845,-99) , 
2, -0.0284331, 1, 0, 0.432153,-99) , 
0, 0.504757, 1, 0, 0.498328,-99) , 
2, 0.195687, 0, 0, 0.503923,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0719819);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.063, 0, 1, 0.527118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469182,-99) , 
8, -1.62563, 1, 0, 0.494128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428781,-99) , 
7, 1.45886, 0, 0, 0.476117,-99) , 
9, 0.11603, 1, 0, 0.510854,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0833355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0964365, 0, 1, 0.617414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416506,-99) , 
7, 0.306545, 0, 0, 0.50239,-99) , 
9, -0.897979, 1, 0, 0.515147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458977,-99) , 
3, 1.50954, 1, 0, 0.514978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308105,-99) , 
8, -2.94719, 0, 0, 0.417629,-99) , 
9, -1.54554, 1, 0, 0.467945,-99) , 
7, -0.142918, 0, 0, 0.502804,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0771174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.412369, 0, 1, 0.533724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411346,-99) , 
7, 0.186267, 0, 0, 0.49372,-99) , 
9, -1.20381, 1, 0, 0.503653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438224,-99) , 
9, 0.723791, 1, 0, 0.494559,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.100171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25921, 1, 1, 0.592837,-99) , 
NN(
0, 
0, 
-1, -1.40641, 0, -1, 0.475173,-99) , 
6, 0.715123, 0, 0, 0.502929,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498081, 0, 1, 0.525748,-99) , 
NN(
0, 
0, 
-1, -0.285093, 1, -1, 0.406939,-99) , 
8, -1.92485, 0, 0, 0.454621,-99) , 
6, -951.286, 0, 0, 0.485566,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0429112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406516,-99) , 
7, -0.426668, 0, 0, 0.497346,-99) , 
9, -1.66997, 1, 0, 0.503144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350496,-99) , 
9, -2.24242, 1, 0, 0.428993,-99) , 
7, -0.999325, 0, 0, 0.49708,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0636742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497134, 0, 1, 0.582382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474495,-99) , 
0, 0.497138, 1, 0, 0.491205,-99) , 
9, -1.59711, 1, 0, 0.496373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395031,-99) , 
7, -1.28721, 1, 0, 0.460996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346789,-99) , 
7, -1.75836, 0, 0, 0.425419,-99) , 
7, -0.997226, 0, 0, 0.490331,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0660851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00115088, 0, 1, 0.575766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474479,-99) , 
2, -0.115007, 1, 0, 0.514229,-99) , 
2, -0.153365, 1, 0, 0.550458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498242,-99) , 
7, -0.0767761, 0, 0, 0.525768,-99) , 
NN(
0, 
0, 
-1, 0.542292, 0, -1, 0.471712,-99) , 
9, -0.996947, 1, 0, 0.486356,-99) , 
2, -0.0862331, 1, 0, 0.495135,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0657772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42977, 0, 1, 0.638927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480953,-99) , 
8, -1.78964, 0, 0, 0.497306,-99) , 
3, 0.476102, 1, 0, 0.507514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410137,-99) , 
3, 7.41949, 1, 0, 0.502836,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0953568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468855,-99) , 
2, -0.0198658, 1, 0, 0.491735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38203,-99) , 
4, 0.999819, 0, 0, 0.484458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391564,-99) , 
4, 0.999525, 0, 0, 0.476831,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0850049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487594,-99) , 
7, 0.0492137, 0, 0, 0.578459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438248,-99) , 
7, 0.605445, 0, 0, 0.489448,-99) , 
9, -0.909211, 1, 0, 0.499303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464607,-99) , 
7, -1.42851, 0, 0, 0.533621,-99) , 
NN(
0, 
0, 
-1, -3.46359, 0, -1, 0.41718,-99) , 
9, -1.98985, 1, 0, 0.444257,-99) , 
7, -0.142788, 0, 0, 0.48472,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.119064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.885312, 0, 1, 0.600087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392731,-99) , 
7, -0.506239, 0, 0, 0.516046,-99) , 
9, -1.60093, 1, 0, 0.532579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423479,-99) , 
6, -0.138335, 0, 0, 0.503256,-99) , 
NN(
0, 
0, 
-1, 1.24066, 0, -1, 0.443977,-99) , 
6, -951.286, 0, 0, 0.481683,-99) , 
9, -0.244373, 1, 0, 0.510252,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0926318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44624, 0, 1, 0.534512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44247,-99) , 
7, 1.15307, 0, 0, 0.491729,-99) , 
9, -0.474857, 1, 0, 0.511745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464489,-99) , 
9, -0.519577, 1, 0, 0.524618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296972,-99) , 
0, 0.491468, 1, 0, 0.441866,-99) , 
0, 0.492376, 0, 0, 0.503022,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0923591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.582553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46914,-99) , 
8, -3.38686, 1, 0, 0.478303,-99) , 
3, 0.845009, 1, 0, 0.504813,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.455551,-99) , 
3, 3.12522, 1, 0, 0.489792,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.041765);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417619,-99) , 
0, 0.503985, 1, 0, 0.500314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374795,-99) , 
7, -1.57146, 0, 0, 0.495878,-99) , 
0, 0.505709, 0, 0, 0.50102,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0757241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478131,-99) , 
2, -0.152166, 1, 0, 0.485637,-99) , 
2, 0.162086, 0, 0, 0.493124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403463,-99) , 
4, 0.999525, 0, 0, 0.485459,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.05811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497013,-99) , 
7, 0.797238, 1, 0, 0.50758,-99) , 
8, -2.44049, 1, 0, 0.520791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625957,-99) , 
NN(
0, 
0, 
-1, -3.69079, 0, -1, 0.472479,-99) , 
8, -4.05849, 1, 0, 0.481695,-99) , 
7, 0.430185, 0, 0, 0.503331,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0881148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.192588, 0, 1, 0.58541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481749,-99) , 
0, 0.492378, 0, 0, 0.56767,-99) , 
NN(
NN(
0, 
0, 
-1, 1.86278, 1, 1, 0.557593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473729,-99) , 
9, -2.08693, 1, 0, 0.481984,-99) , 
8, -1.41054, 0, 0, 0.49986,-99) , 
2, 0.0587182, 0, 0, 0.511749,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0863355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.14718, 0, 1, 0.547215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491994,-99) , 
8, -1.62741, 1, 0, 0.505408,-99) , 
9, 0.120281, 1, 0, 0.530181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41244,-99) , 
9, -1.88446, 1, 0, 0.446409,-99) , 
7, -0.0223188, 0, 0, 0.473754,-99) , 
8, -2.89989, 0, 0, 0.517187,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.121675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473403,-99) , 
4, 0.999998, 0, 0, 0.52888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386198,-99) , 
3, 2.36197, 1, 0, 0.460747,-99) , 
4, 0.999955, 0, 0, 0.513616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46231,-99) , 
4, 0.999525, 0, 0, 0.509037,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.079542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471439,-99) , 
6, -951.286, 0, 0, 0.528084,-99) , 
9, -0.982111, 1, 0, 0.561574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491314,-99) , 
9, 0.243718, 1, 0, 0.542957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48565,-99) , 
2, 0.0394756, 0, 0, 0.501239,-99) , 
0, 0.500132, 0, 0, 0.516836,-99) , 
0, 0.493328, 1, 0, 0.523498,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0993621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430118,-99) , 
7, -1.63207, 0, 0, 0.52916,-99) , 
7, -0.392478, 0, 0, 0.554829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473634,-99) , 
7, 2.05311, 1, 0, 0.536373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.705913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472906,-99) , 
7, 1.66396, 0, 0, 0.487073,-99) , 
8, -1.34024, 0, 0, 0.500071,-99) , 
9, -1.34562, 1, 0, 0.509547,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0727046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503196, 0, 1, 0.595885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480147,-99) , 
6, -951.286, 1, 0, 0.516333,-99) , 
0, 0.504621, 1, 0, 0.562997,-99) , 
NN(
NN(
0, 
0, 
-1, -1.09066, 1, 1, 0.517575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377403,-99) , 
0, 0.496461, 1, 0, 0.448983,-99) , 
8, -3.43226, 0, 0, 0.510667,-99) , 
0, 0.501901, 0, 0, 0.521239,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0589556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.168326, 0, 1, 0.623592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487231,-99) , 
3, 3.12125, 0, 0, 0.500998,-99) , 
3, 0.476156, 1, 0, 0.509584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415599,-99) , 
3, 7.41949, 1, 0, 0.504999,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0824143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.80477, 1, 1, 0.648917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386781,-99) , 
3, 2.11921, 1, 0, 0.464632,-99) , 
7, -1.17448, 0, 0, 0.560933,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0829858, 1, 1, 0.525986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439176,-99) , 
7, 1.13962, 0, 0, 0.496547,-99) , 
9, -0.327828, 1, 0, 0.510119,-99) , 
9, -1.60913, 1, 0, 0.51598,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0558703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45002,-99) , 
0, 0.498087, 0, 0, 0.516525,-99) , 
7, -0.987064, 0, 0, 0.562814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499829,-99) , 
9, 0.0835727, 1, 0, 0.520626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441076,-99) , 
9, -0.405648, 1, 0, 0.486396,-99) , 
7, 1.11223, 0, 0, 0.499111,-99) , 
9, -1.73893, 1, 0, 0.504655,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.04994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.91126, 1, 1, 0.560396,-99) , 
NN(
0, 
0, 
-1, -0.619173, 0, -1, 0.494141,-99) , 
2, -0.0490479, 1, 0, 0.507165,-99) , 
NN(
0, 
0, 
-1, -2.56261, 1, -1, 0.386581,-99) , 
7, -1.0001, 0, 0, 0.496743,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0738905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.68923, 1, 1, 0.525661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419785,-99) , 
8, -2.8961, 0, 0, 0.466609,-99) , 
8, -3.92084, 1, 0, 0.480956,-99) , 
7, 0.142568, 0, 0, 0.51004,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.075366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07956, 1, 1, 0.530059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367591,-99) , 
1, -0.00105031, 0, 0, 0.448165,-99) , 
3, 4.29492, 1, 0, 0.517985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379545,-99) , 
3, 7.41949, 1, 0, 0.511168,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.104979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.149329, 1, 1, 0.538185,-99) , 
NN(
0, 
0, 
-1, -0.146068, 0, -1, 0.391116,-99) , 
4, 0.999932, 0, 0, 0.510916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43748,-99) , 
4, 0.999525, 0, 0, 0.504351,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0644299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.627568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479861,-99) , 
0, 0.505708, 0, 0, 0.484414,-99) , 
1, -0.00458957, 1, 0, 0.492578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361963,-99) , 
5, 0.013785, 1, 0, 0.48892,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0806055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.234327, 0, 1, 0.627374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454399,-99) , 
7, 0.552772, 0, 0, 0.49241,-99) , 
9, -1.18216, 1, 0, 0.502362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408664,-99) , 
3, 2.12317, 1, 0, 0.486146,-99) , 
NN(
0, 
0, 
-1, -2.04185, 1, -1, 0.411543,-99) , 
8, -3.42244, 0, 0, 0.450715,-99) , 
7, -0.426247, 0, 0, 0.492646,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0552206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00416353, 0, 1, 0.521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409196,-99) , 
5, 0.012485, 1, 0, 0.517332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422722,-99) , 
9, 1.07696, 1, 0, 0.509811,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0598776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479625,-99) , 
2, -0.120601, 1, 0, 0.487609,-99) , 
2, 0.200417, 0, 0, 0.492257,-99) , 
8, -3.81162, 1, 0, 0.496628,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0661352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496137,-99) , 
0, 0.497132, 0, 0, 0.577923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441683,-99) , 
9, -0.397067, 1, 0, 0.49904,-99) , 
7, 0.953957, 0, 0, 0.507115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395726,-99) , 
8, -1.28295, 0, 0, 0.437617,-99) , 
7, 1.9729, 0, 0, 0.45883,-99) , 
9, 0.015409, 1, 0, 0.489898,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0449048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488852,-99) , 
7, -0.361048, 0, 0, 0.552449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475112,-99) , 
9, -0.047942, 1, 0, 0.491922,-99) , 
8, -3.13128, 1, 0, 0.497553,-99) , 
NN(
0, 
0, 
-1, -2.35069, 1, -1, 0.435669,-99) , 
7, -1.0001, 0, 0, 0.492488,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0661437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376936, 1, 1, 0.653989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479839,-99) , 
3, 1.79873, 1, 0, 0.495301,-99) , 
3, 0.476156, 1, 0, 0.506827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371113,-99) , 
3, 7.41949, 1, 0, 0.499906,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0809547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376676,-99) , 
9, -2.17969, 1, 0, 0.498333,-99) , 
7, -0.957247, 0, 0, 0.55464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487819,-99) , 
7, 0.628596, 0, 0, 0.537411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475962,-99) , 
9, -1.28576, 1, 0, 0.481969,-99) , 
0, 0.501901, 0, 0, 0.492717,-99) , 
9, -1.68657, 1, 0, 0.498951,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0823309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499193,-99) , 
4, 0.999997, 0, 0, 0.532601,-99) , 
NN(
0, 
0, 
-1, -0.639858, 1, -1, 0.438714,-99) , 
4, 0.999932, 0, 0, 0.515827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43341,-99) , 
4, 0.999525, 0, 0, 0.508338,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0605651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497093, 0, 1, 0.523814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418213,-99) , 
7, -1.28268, 0, 0, 0.518119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4878,-99) , 
0, 0.49984, 1, 0, 0.498315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415391,-99) , 
1, 0.00179201, 0, 0, 0.437815,-99) , 
0, 0.499451, 0, 0, 0.482425,-99) , 
0, 0.498091, 1, 0, 0.499673,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0662678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639579,-99) , 
NN(
NN(
0, 
0, 
-1, -2.91954, 1, 1, 0.520402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361544,-99) , 
9, -1.50139, 1, 0, 0.443332,-99) , 
7, -0.311186, 0, 0, 0.506554,-99) , 
9, -2.16745, 1, 0, 0.511553,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0914981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47998,-99) , 
0, 0.499995, 0, 0, 0.501678,-99) , 
8, -2.80316, 1, 0, 0.511929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448477,-99) , 
9, -1.35206, 1, 0, 0.488524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385584,-99) , 
8, -4.01491, 1, 0, 0.418353,-99) , 
8, -3.20367, 0, 0, 0.452175,-99) , 
7, -0.143044, 0, 0, 0.495981,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0939655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09369, 0, 1, 0.584591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464648,-99) , 
7, 1.58491, 0, 0, 0.494712,-99) , 
9, -0.00643366, 1, 0, 0.517262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
7, -0.294768, 0, 0, 0.51179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41213,-99) , 
8, -2.03599, 0, 0, 0.451672,-99) , 
9, -1.05676, 1, 0, 0.480215,-99) , 
7, 0.71319, 0, 0, 0.497481,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0761742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.581159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482037,-99) , 
3, 0.454535, 1, 0, 0.489748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431353,-99) , 
2, -0.0903933, 1, 0, 0.449834,-99) , 
3, 3.75356, 1, 0, 0.480542,-99) , 
9, -1.36794, 1, 0, 0.496151,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0748998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496867, 0, 1, 0.543204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463708,-99) , 
0, 0.503803, 1, 0, 0.533066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484452,-99) , 
6, 0.606241, 0, 0, 0.503864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340102,-99) , 
6, -1.56989, 0, 0, 0.492746,-99) , 
6, -951.286, 1, 0, 0.50588,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0460915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.519925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447435,-99) , 
9, 0.995259, 1, 0, 0.51303,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0945627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476011,-99) , 
4, 0.999994, 0, 0, 0.519213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419814,-99) , 
4, 0.999865, 0, 0, 0.510042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45494,-99) , 
4, 0.999526, 0, 0, 0.505264,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0807444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480207,-99) , 
7, 0.0141872, 0, 0, 0.585549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493021,-99) , 
7, 0.904639, 0, 0, 0.516622,-99) , 
9, -0.906481, 1, 0, 0.524323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477792,-99) , 
8, -3.73967, 0, 0, 0.547322,-99) , 
NN(
0, 
0, 
-1, -2.80327, 0, -1, 0.436083,-99) , 
9, -1.71872, 1, 0, 0.476197,-99) , 
7, -0.143044, 0, 0, 0.512006,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0567396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494845,-99) , 
9, -0.318645, 1, 0, 0.513422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381658,-99) , 
9, -1.60726, 1, 0, 0.466257,-99) , 
7, -0.428591, 0, 0, 0.505031,-99) , 
0, 0.489519, 1, 0, 0.507884,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0421229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46151,-99) , 
8, -2.92641, 0, 0, 0.497547,-99) , 
2, 0.195039, 0, 0, 0.502146,-99) , 
0, 0.505708, 0, 0, 0.506268,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0761901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484311,-99) , 
3, 2.72745, 1, 0, 0.537376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473083,-99) , 
2, 0.0245713, 0, 0, 0.490822,-99) , 
2, -0.0445382, 1, 0, 0.501592,-99) , 
2, 0.197352, 0, 0, 0.507554,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0758889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.42333, 1, 1, 0.582604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463595,-99) , 
3, 2.98075, 0, 0, 0.493862,-99) , 
7, -0.556875, 0, 0, 0.548595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496565,-99) , 
8, -1.17302, 0, 0, 0.509712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458432,-99) , 
7, 2.2086, 1, 0, 0.502379,-99) , 
9, -0.682678, 1, 0, 0.519897,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0652061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.329415, 1, 1, 0.686967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487552,-99) , 
3, 1.62347, 1, 0, 0.506483,-99) , 
3, 0.433539, 1, 0, 0.516259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439515,-99) , 
3, 6.6809, 1, 0, 0.510724,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0865043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420526,-99) , 
6, 1.97405, 1, 0, 0.532432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410691,-99) , 
6, -1.30896, 0, 0, 0.519671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455667,-99) , 
9, 0.20605, 1, 0, 0.492621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391209,-99) , 
7, -0.997621, 0, 0, 0.482473,-99) , 
6, -951.286, 0, 0, 0.506629,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0911881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493414,-99) , 
4, 0.999999, 0, 0, 0.529675,-99) , 
NN(
0, 
0, 
-1, 2.36197, 1, -1, 0.451255,-99) , 
4, 0.999977, 0, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423101,-99) , 
4, 0.999525, 0, 0, 0.495482,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0493671);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.115368, 1, 1, 0.519774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421526,-99) , 
4, 0.999525, 0, 0, 0.51159,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0451319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494189,-99) , 
3, 0.801718, 1, 0, 0.50555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404436,-99) , 
3, 7.39984, 1, 0, 0.500981,-99) , 
2, -0.225944, 1, 0, 0.505663,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0591963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.219599, 0, 1, 0.55505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458734,-99) , 
7, 0.100172, 0, 0, 0.504919,-99) , 
9, -1.14759, 1, 0, 0.515789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464242,-99) , 
9, -0.41419, 1, 0, 0.491816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36096,-99) , 
7, -0.425891, 0, 0, 0.462207,-99) , 
0, 0.493328, 0, 0, 0.507162,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0522588);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.2171, 1, 1, 0.524572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45742,-99) , 
4, 0.999524, 0, 0, 0.518852,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.104138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479972,-99) , 
1, 0.00320932, 1, 0, 0.544963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436104,-99) , 
6, -0.44718, 0, 0, 0.485543,-99) , 
6, -951.286, 1, 0, 0.504275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393935,-99) , 
8, -1.00598, 1, 0, 0.473072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410853,-99) , 
7, 1.76903, 0, 0, 0.447926,-99) , 
9, 0.297347, 1, 0, 0.48962,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0869856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468104,-99) , 
4, 0.999987, 0, 0, 0.512972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413831,-99) , 
4, 0.999864, 0, 0, 0.503504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448574,-99) , 
4, 0.999525, 0, 0, 0.498464,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0798063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45882,-99) , 
0, 0.499024, 1, 0, 0.497115,-99) , 
8, -1.64522, 1, 0, 0.531789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482641,-99) , 
3, 0.425964, 1, 0, 0.491456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384124,-99) , 
3, 6.36777, 1, 0, 0.482467,-99) , 
7, 1.28679, 0, 0, 0.495688,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0482776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83458, 1, 1, 0.661479,-99) , 
NN(
0, 
0, 
-1, -1.61998, 0, -1, 0.466652,-99) , 
7, -1.19029, 0, 0, 0.563301,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0879097, 0, 1, 0.512083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438165,-99) , 
0, 0.490473, 0, 0, 0.507545,-99) , 
9, -1.63316, 1, 0, 0.51367,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.118099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495225,-99) , 
3, 1.68236, 1, 0, 0.545089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448494,-99) , 
2, 0.119133, 0, 0, 0.468905,-99) , 
2, -0.0131001, 1, 0, 0.494085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452941,-99) , 
2, -0.0176566, 0, 0, 0.48056,-99) , 
NN(
0, 
0, 
-1, 0.123461, 0, -1, 0.383849,-99) , 
2, 0.0562529, 1, 0, 0.448556,-99) , 
3, 3.75356, 1, 0, 0.483825,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0780242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469839,-99) , 
7, 2.05311, 1, 0, 0.539049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475836,-99) , 
7, 1.50831, 0, 0, 0.485303,-99) , 
8, -1.26371, 0, 0, 0.495774,-99) , 
2, 0.195553, 0, 0, 0.500228,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0659598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.398689, 1, 1, 0.55353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48121,-99) , 
2, 0.0294888, 0, 0, 0.498941,-99) , 
2, 0.212299, 0, 0, 0.503503,-99) , 
2, -0.0829858, 1, 0, 0.51076,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0475597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0224584, 1, 1, 0.601831,-99) , 
NN(
NN(
0, 
0, 
-1, 0.000442038, 1, 1, 0.567249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422676,-99) , 
3, 6.34821, 1, 0, 0.498831,-99) , 
2, -0.0801732, 1, 0, 0.509042,-99) , 
9, -1.80319, 1, 0, 0.516254,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0884313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.804887, 1, 1, 0.543901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454607,-99) , 
2, -0.0136118, 1, 0, 0.473646,-99) , 
9, 0.434342, 1, 0, 0.520467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537285,-99) , 
NN(
0, 
0, 
-1, -1.07913, 1, -1, 0.445524,-99) , 
8, -2.5842, 0, 0, 0.467244,-99) , 
7, 0.144708, 0, 0, 0.501174,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0742342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499997, 1, 1, 0.637606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473716,-99) , 
2, 0.0203208, 0, 0, 0.491202,-99) , 
2, -0.220847, 1, 0, 0.495094,-99) , 
9, -1.80604, 1, 0, 0.505404,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0642494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.0496, 1, 1, 0.549853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489842,-99) , 
9, -1.49103, 1, 0, 0.503252,-99) , 
7, 0.957265, 0, 0, 0.511954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458143,-99) , 
6, 0.146585, 0, 0, 0.48699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42265,-99) , 
6, -951.286, 0, 0, 0.463676,-99) , 
9, 0.260235, 1, 0, 0.498627,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0602979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459863,-99) , 
7, -0.853637, 0, 0, 0.541006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43522,-99) , 
8, -2.38292, 0, 0, 0.484273,-99) , 
9, -1.20163, 1, 0, 0.493276,-99) , 
8, -3.73917, 1, 0, 0.499399,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0604944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436254,-99) , 
7, -1.20199, 0, 0, 0.550489,-99) , 
NN(
0, 
0, 
-1, -2.91497, 0, -1, 0.492329,-99) , 
9, -1.14759, 1, 0, 0.50489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443563,-99) , 
7, 1.1446, 0, 0, 0.455034,-99) , 
8, -1.53928, 0, 0, 0.46735,-99) , 
0, 0.499994, 1, 0, 0.491705,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0443936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496967,-99) , 
7, 0.00969194, 0, 0, 0.522012,-99) , 
NN(
0, 
0, 
-1, 0.317605, 0, -1, 0.486875,-99) , 
9, -0.860959, 1, 0, 0.498272,-99) , 
0, 0.490471, 1, 0, 0.503773,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0805082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.63845, 1, 1, 0.584318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483639,-99) , 
7, -0.837464, 0, 0, 0.526054,-99) , 
2, 0.0426012, 0, 0, 0.538582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472658,-99) , 
0, 0.492332, 0, 0, 0.514082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416631,-99) , 
8, -1.43508, 0, 0, 0.47014,-99) , 
0, 0.499995, 1, 0, 0.498485,-99) , 
9, -0.45597, 1, 0, 0.517206,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0580692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659448,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00220197, 0, 1, 0.527989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474166,-99) , 
8, -1.03942, 0, 0, 0.482764,-99) , 
9, -0.934437, 1, 0, 0.495084,-99) , 
9, -2.40537, 1, 0, 0.499495,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0937628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.994861, 0, 1, 0.538353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445461,-99) , 
8, -1.09591, 1, 0, 0.507589,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.453198,-99) , 
7, 1.7681, 0, 0, 0.477841,-99) , 
9, 0.0318674, 1, 0, 0.516428,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0610431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.466616, 1, 1, 0.563423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432541,-99) , 
7, -0.710743, 0, 0, 0.544623,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0958629, 1, 1, 0.514829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368716,-99) , 
7, -0.129802, 0, 0, 0.460315,-99) , 
0, 0.499178, 1, 0, 0.500197,-99) , 
0, 0.5019, 0, 0, 0.508757,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0343818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566381,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.485069,-99) , 
9, -2.16745, 1, 0, 0.48863,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0773668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483719,-99) , 
3, 0.567571, 1, 0, 0.593219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488573,-99) , 
2, -0.10587, 1, 0, 0.498958,-99) , 
3, 0.641972, 1, 0, 0.513144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453359,-99) , 
2, 0.0542821, 1, 0, 0.508698,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.423414,-99) , 
1, 0.000537779, 0, 0, 0.457403,-99) , 
3, 3.7668, 1, 0, 0.500563,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0739772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.92546, 1, 1, 0.604972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41101,-99) , 
4, 0.999887, 0, 0, 0.508447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43476,-99) , 
4, 0.999525, 0, 0, 0.501638,-99) , 
1, 0.00544861, 0, 0, 0.507657,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0725322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450452,-99) , 
8, -2.95563, 0, 0, 0.526594,-99) , 
NN(
0, 
0, 
-1, 1.90745, 0, -1, 0.481491,-99) , 
3, 1.66935, 1, 0, 0.502313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407277,-99) , 
3, 6.66832, 1, 0, 0.495829,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0674948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.02854, 1, 1, 0.575141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44245,-99) , 
3, 2.8897, 1, 0, 0.48341,-99) , 
7, 0.149301, 0, 0, 0.541057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470836,-99) , 
2, -0.00833085, 1, 0, 0.484437,-99) , 
9, -2.29124, 1, 0, 0.488825,-99) , 
2, -0.081954, 1, 0, 0.496215,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.054247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.408616, 0, 1, 0.610078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48617,-99) , 
2, 0.103544, 0, 0, 0.494023,-99) , 
3, 0.476102, 1, 0, 0.501255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417308,-99) , 
3, 7.41949, 1, 0, 0.497293,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0483223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635406,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498635, 1, 1, 0.522831,-99) , 
NN(
0, 
0, 
-1, 3.78179, 1, -1, 0.487845,-99) , 
0, 0.497138, 0, 0, 0.508151,-99) , 
8, -3.6674, 1, 0, 0.514446,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0711536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.831, 1, 1, 0.600557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492916,-99) , 
9, -0.223081, 1, 0, 0.556146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480776,-99) , 
6, -951.286, 1, 0, 0.498962,-99) , 
2, -0.086773, 1, 0, 0.506632,-99) , 
1, 0.00473262, 0, 0, 0.513657,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0623678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.546965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400764,-99) , 
8, -3.75188, 0, 0, 0.495444,-99) , 
3, 1.50995, 1, 0, 0.52077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513074,-99) , 
NN(
0, 
0, 
-1, 0.368405, 0, -1, 0.430936,-99) , 
8, -2.12647, 0, 0, 0.470304,-99) , 
3, 3.7668, 1, 0, 0.508973,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0752908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.58339, 0, 1, 0.592548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487476,-99) , 
7, 0.632947, 0, 0, 0.510527,-99) , 
9, -1.68838, 1, 0, 0.521071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468582,-99) , 
9, 1.07762, 1, 0, 0.491422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415458,-99) , 
9, 0.628392, 0, 0, 0.461776,-99) , 
9, 0.297347, 1, 0, 0.505295,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0649011);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.97093, 1, 1, 0.591518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454642,-99) , 
4, 0.999525, 0, 0, 0.517619,-99) , 
NN(
0, 
0, 
-1, 0.003095, 1, -1, 0.446375,-99) , 
7, -0.573923, 0, 0, 0.512227,-99) , 
9, -1.84622, 1, 0, 0.517834,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0617962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.419573, 1, 1, 0.595241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471239,-99) , 
3, 2.52019, 0, 0, 0.508273,-99) , 
0, 0.504892, 1, 0, 0.552948,-99) , 
NN(
NN(
0, 
0, 
-1, -1.37875, 1, 1, 0.51202,-99) , 
NN(
0, 
0, 
-1, 0.500364, 1, -1, 0.468331,-99) , 
0, 0.496321, 1, 0, 0.485337,-99) , 
0, 0.502852, 0, 0, 0.495293,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0339887);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448712,-99) , 
8, -2.91977, 0, 0, 0.491004,-99) , 
1, 0.00628749, 0, 0, 0.495358,-99) , 
8, -4.06565, 1, 0, 0.498212,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.05913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50054, 1, 1, 0.608559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492546,-99) , 
0, 0.497818, 1, 0, 0.504623,-99) , 
1, -0.00425222, 1, 0, 0.512785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476186,-99) , 
9, -1.35493, 1, 0, 0.489022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379698,-99) , 
7, -0.977921, 0, 0, 0.478723,-99) , 
0, 0.496185, 0, 0, 0.501129,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0844524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405256,-99) , 
9, -0.613508, 1, 0, 0.527781,-99) , 
8, -2.28473, 0, 0, 0.53898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477467,-99) , 
7, 1.12662, 0, 0, 0.517201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463021,-99) , 
9, -0.0921024, 1, 0, 0.47678,-99) , 
0, 0.500947, 0, 0, 0.488034,-99) , 
9, -0.428495, 1, 0, 0.512315,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0818682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41902,-99) , 
3, 4.72852, 1, 0, 0.546051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479253,-99) , 
9, -1.67836, 1, 0, 0.488038,-99) , 
2, 0.0201577, 0, 0, 0.505409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426846,-99) , 
3, 7.57448, 1, 0, 0.501705,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0766176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494485,-99) , 
7, -0.423719, 0, 0, 0.551883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399892,-99) , 
7, -0.142994, 0, 0, 0.479385,-99) , 
2, 0.0501505, 1, 0, 0.529231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483982,-99) , 
2, 0.0127977, 0, 0, 0.504794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388479,-99) , 
3, 2.52598, 1, 0, 0.496043,-99) , 
3, 2.77839, 0, 0, 0.50712,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0593239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460945,-99) , 
7, -0.872105, 0, 0, 0.570379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478095,-99) , 
8, -2.5583, 0, 0, 0.508891,-99) , 
8, -3.03293, 1, 0, 0.517311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428638,-99) , 
7, -1.56841, 0, 0, 0.51424,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0647885);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.398689, 1, 1, 0.561174,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00084452, 1, 1, 0.540682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478292,-99) , 
7, -1.28298, 1, 0, 0.481768,-99) , 
0, 0.495234, 1, 0, 0.495941,-99) , 
2, -0.080455, 1, 0, 0.505178,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0692512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454029,-99) , 
0, 0.500945, 1, 0, 0.590821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432486,-99) , 
5, 0.010521, 1, 0, 0.517818,-99) , 
8, -3.24724, 1, 0, 0.523716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419701,-99) , 
7, -1.2768, 0, 0, 0.518301,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0405096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479391,-99) , 
6, -951.286, 0, 0, 0.499916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414732,-99) , 
3, 7.41242, 1, 0, 0.496364,-99) , 
2, 0.200944, 0, 0, 0.500487,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.09102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47122,-99) , 
7, 0.403906, 1, 0, 0.562443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471929,-99) , 
7, 0.339163, 0, 0, 0.483616,-99) , 
8, -2.46562, 0, 0, 0.505637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474152,-99) , 
2, 0.0373712, 0, 0, 0.492085,-99) , 
NN(
0, 
0, 
-1, 0.497144, 1, -1, 0.435855,-99) , 
3, 3.10124, 1, 0, 0.475028,-99) , 
9, -0.474857, 1, 0, 0.489448,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0639977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6978, 1, 1, 0.567809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458085,-99) , 
9, -2.44377, 1, 0, 0.49592,-99) , 
7, -0.945732, 0, 0, 0.546063,-99) , 
NN(
NN(
0, 
0, 
-1, -2.48281, 1, 1, 0.513316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358226,-99) , 
8, -2.56662, 0, 0, 0.467369,-99) , 
7, 0.256918, 0, 0, 0.506878,-99) , 
9, -0.996947, 1, 0, 0.517316,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.10619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474201,-99) , 
4, 0.999997, 0, 0, 0.516466,-99) , 
NN(
0, 
0, 
-1, -0.753826, 1, -1, 0.426386,-99) , 
4, 0.999932, 0, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446474,-99) , 
4, 0.999525, 0, 0, 0.495992,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0489039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0190245, 0, 1, 0.620173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492513,-99) , 
9, -0.385268, 1, 0, 0.551814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595199,-99) , 
NN(
0, 
0, 
-1, -0.490873, 0, -1, 0.485874,-99) , 
9, -2.00338, 1, 0, 0.491865,-99) , 
2, -0.0829858, 1, 0, 0.500385,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0608242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00730077, 1, 1, 0.564334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440441,-99) , 
0, 0.503805, 1, 0, 0.547172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
1, 0.00747303, 0, 0, 0.489601,-99) , 
1, -0.00526335, 1, 0, 0.493126,-99) , 
9, -0.984241, 1, 0, 0.507984,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0734446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.41493, 0, 1, 0.543107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518869,-99) , 
NN(
0, 
0, 
-1, -1.37062, 0, -1, 0.47214,-99) , 
8, -0.976736, 0, 0, 0.488973,-99) , 
8, -1.66544, 1, 0, 0.524217,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0550253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35173, 0, 1, 0.520618,-99) , 
NN(
0, 
0, 
-1, -0.97031, 1, -1, 0.462033,-99) , 
9, 0.449154, 1, 0, 0.507775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386559,-99) , 
8, -4.11241, 0, 0, 0.503603,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0729362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.734339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401957,-99) , 
7, -1.23953, 0, 0, 0.506384,-99) , 
7, 0.0770023, 0, 0, 0.53825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471379,-99) , 
8, -2.10819, 0, 0, 0.497129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445505,-99) , 
9, 1.05064, 1, 0, 0.491608,-99) , 
8, -2.7503, 1, 0, 0.502724,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.10558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467934,-99) , 
6, -0.714083, 0, 0, 0.560181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458973,-99) , 
2, 0.11802, 0, 0, 0.4944,-99) , 
6, -951.286, 0, 0, 0.536824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430393,-99) , 
0, 0.492375, 0, 0, 0.522813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430711,-99) , 
2, 0.0069818, 0, 0, 0.479259,-99) , 
2, -0.0176559, 1, 0, 0.496921,-99) , 
2, 0.0562529, 0, 0, 0.504263,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0538439);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389347,-99) , 
5, 0.0124851, 1, 0, 0.509325,-99) , 
NN(
0, 
0, 
-1, -0.320243, 0, -1, 0.452704,-99) , 
2, 0.0547267, 1, 0, 0.497587,-99) , 
9, -2.38843, 1, 0, 0.501205,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0426464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215721, 0, 1, 0.547782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55446,-99) , 
NN(
0, 
0, 
-1, -0.373952, 0, -1, 0.484902,-99) , 
9, -1.99351, 1, 0, 0.48884,-99) , 
2, -0.0818425, 1, 0, 0.49655,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0574658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494096,-99) , 
9, -1.04367, 1, 0, 0.533331,-99) , 
7, 1.00495, 0, 0, 0.555066,-99) , 
NN(
NN(
0, 
0, 
-1, 0.724412, 1, 1, 0.609953,-99) , 
NN(
0, 
0, 
-1, -3.00494, 0, -1, 0.484049,-99) , 
1, 0.00424197, 0, 0, 0.494115,-99) , 
0, 0.493328, 1, 0, 0.502942,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0715021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468379,-99) , 
4, 0.999932, 0, 0, 0.516471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428984,-99) , 
4, 0.999525, 0, 0, 0.508529,-99) , 
NN(
0, 
0, 
-1, -0.000868442, 0, -1, 0.421775,-99) , 
7, -1.0001, 0, 0, 0.501055,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0802478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493484,-99) , 
8, -2.52464, 0, 0, 0.510818,-99) , 
7, 0.409445, 0, 0, 0.524692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494312,-99) , 
7, 1.0376, 0, 0, 0.534155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448499,-99) , 
8, -1.00734, 0, 0, 0.464336,-99) , 
0, 0.494281, 1, 0, 0.477617,-99) , 
9, -0.607068, 1, 0, 0.49657,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0860428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.581297, 0, 1, 0.552582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468255,-99) , 
0, 0.499361, 1, 0, 0.489036,-99) , 
9, -0.439788, 1, 0, 0.518849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46164,-99) , 
7, 1.36554, 1, 0, 0.513711,-99) , 
NN(
0, 
0, 
-1, 0.493011, 1, -1, 0.424804,-99) , 
7, 0.713404, 0, 0, 0.462725,-99) , 
0, 0.494281, 0, 0, 0.506734,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0670163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00967, 0, 1, 0.554178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437403,-99) , 
0, 0.504756, 1, 0, 0.510171,-99) , 
7, 0.679795, 0, 0, 0.518584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435253,-99) , 
8, -1.30908, 0, 0, 0.469637,-99) , 
7, 2.14062, 0, 0, 0.483306,-99) , 
9, -0.0700367, 1, 0, 0.504915,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0604035);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.54594, 0, 1, 0.579736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488993,-99) , 
7, 0.723005, 0, 0, 0.510266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469563,-99) , 
7, 0.779036, 1, 0, 0.476267,-99) , 
8, -1.98251, 1, 0, 0.49306,-99) , 
9, -1.99351, 1, 0, 0.497886,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0709162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491678,-99) , 
4, 0.999985, 0, 0, 0.525049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415727,-99) , 
4, 0.999842, 0, 0, 0.516253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464768,-99) , 
4, 0.999525, 0, 0, 0.511258,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0530317);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623529,-99) , 
NN(
NN(
0, 
0, 
-1, -2.56739, 1, 1, 0.516498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459036,-99) , 
0, 0.5019, 0, 0, 0.478824,-99) , 
7, -0.0639541, 0, 0, 0.507162,-99) , 
9, -2.38843, 1, 0, 0.510211,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0529402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.9891, 1, 1, 0.538171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486918,-99) , 
0, 0.504757, 0, 0, 0.493796,-99) , 
2, -0.0403514, 1, 0, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43273,-99) , 
4, 0.999525, 0, 0, 0.497096,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0443737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714269, 0, 1, 0.568526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489959,-99) , 
9, -1.57183, 1, 0, 0.497646,-99) , 
NN(
0, 
0, 
-1, -1.69486, 0, -1, 0.440812,-99) , 
7, -1.28698, 0, 0, 0.494559,-99) , 
0, 0.491424, 1, 0, 0.499991,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0630794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5384, 0, 1, 0.532726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490519,-99) , 
9, -0.0695369, 1, 0, 0.504368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388888,-99) , 
8, -2.04707, 0, 0, 0.456736,-99) , 
7, 1.02444, 0, 0, 0.49013,-99) , 
9, -0.474857, 1, 0, 0.509403,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0806125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.34222, 0, 1, 0.610375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47821,-99) , 
8, -1.22858, 1, 0, 0.501385,-99) , 
8, -1.56321, 1, 0, 0.536994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457188,-99) , 
1, 3.43699e-05, 1, 0, 0.480055,-99) , 
2, 0.186456, 0, 0, 0.486707,-99) , 
7, 1.00002, 0, 0, 0.505526,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0433475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560522,-99) , 
NN(
NN(
0, 
0, 
-1, -0.496141, 1, 1, 0.511959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420787,-99) , 
0, 0.49809, 0, 0, 0.472198,-99) , 
8, -3.33279, 0, 0, 0.506967,-99) , 
7, 2.14274, 0, 0, 0.512268,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0520252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44845, 1, 1, 0.518505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35957,-99) , 
8, -3.45811, 1, 0, 0.462977,-99) , 
8, -3.30406, 0, 0, 0.511973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35763,-99) , 
7, 0.428947, 0, 0, 0.429844,-99) , 
0, 0.491424, 0, 0, 0.504464,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0780113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0494539, 0, 1, 0.55675,-99) , 
NN(
0, 
0, 
-1, 1.41079, 0, -1, 0.479983,-99) , 
3, 1.16275, 1, 0, 0.507016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461978,-99) , 
8, -2.94131, 1, 0, 0.483215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407564,-99) , 
2, -0.0843733, 0, 0, 0.461959,-99) , 
3, 3.7668, 1, 0, 0.496927,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0861525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469704,-99) , 
8, -1.14096, 1, 0, 0.492848,-99) , 
8, -1.65626, 1, 0, 0.521024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417182,-99) , 
7, -0.755332, 0, 0, 0.51019,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.459474,-99) , 
2, 0.0434671, 0, 0, 0.470093,-99) , 
7, 1.28412, 0, 0, 0.484286,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0735472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480424,-99) , 
0, 0.500942, 1, 0, 0.590212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429913,-99) , 
0, 0.498089, 0, 0, 0.497819,-99) , 
8, -3.44191, 0, 0, 0.545596,-99) , 
NN(
NN(
0, 
0, 
-1, -1.72642, 1, 1, 0.524951,-99) , 
NN(
0, 
0, 
-1, -0.497772, 1, -1, 0.473843,-99) , 
7, 1.17806, 0, 0, 0.493535,-99) , 
9, -1.3304, 1, 0, 0.502389,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0506462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0496567, 1, 1, 0.518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420077,-99) , 
4, 0.999819, 0, 0, 0.511384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442105,-99) , 
4, 0.999525, 0, 0, 0.505337,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0635211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485901,-99) , 
0, 0.491424, 1, 0, 0.49177,-99) , 
7, 0.994861, 0, 0, 0.502188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526113,-99) , 
NN(
0, 
0, 
-1, 0.499178, 1, -1, 0.454904,-99) , 
0, 0.501898, 0, 0, 0.468938,-99) , 
9, 0.00587913, 1, 0, 0.490169,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0957307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.72197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464012,-99) , 
9, -1.16983, 1, 0, 0.503208,-99) , 
7, 0.201952, 0, 0, 0.519891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48483,-99) , 
6, -951.286, 1, 0, 0.50915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434968,-99) , 
7, 1.43576, 0, 0, 0.453505,-99) , 
8, -1.38078, 0, 0, 0.472432,-99) , 
9, -0.840356, 1, 0, 0.48793,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0679853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472557,-99) , 
2, 0.0629115, 0, 0, 0.482125,-99) , 
8, -3.97423, 1, 0, 0.487417,-99) , 
8, -1.10338, 0, 0, 0.496435,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0483843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470294,-99) , 
0, 0.495232, 0, 0, 0.562173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486512,-99) , 
8, -1.93844, 1, 0, 0.502076,-99) , 
1, 0.00442927, 0, 0, 0.507087,-99) , 
9, -2.10993, 1, 0, 0.511216,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0632998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.630882, 1, 1, 0.59396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458789,-99) , 
0, 0.503169, 0, 0, 0.502974,-99) , 
0, 0.500947, 1, 0, 0.566852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452932,-99) , 
9, -0.405034, 1, 0, 0.483011,-99) , 
8, -1.25986, 0, 0, 0.491064,-99) , 
1, -0.00218438, 1, 0, 0.505004,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0667849);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.610402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498908,-99) , 
8, -1.71761, 0, 0, 0.510939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447297,-99) , 
8, -1.65626, 1, 0, 0.475593,-99) , 
7, 1.28681, 1, 0, 0.500919,-99) , 
1, 0.00442927, 0, 0, 0.508812,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0742817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496301,-99) , 
7, 0.551006, 0, 0, 0.527351,-99) , 
9, -1.20516, 1, 0, 0.533678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396695,-99) , 
0, 0.493326, 0, 0, 0.482474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314213,-99) , 
7, -1.7744, 0, 0, 0.45933,-99) , 
7, -0.42822, 0, 0, 0.520079,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0502592);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00590783, 0, 1, 0.520509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346974,-99) , 
5, 0.013785, 1, 0, 0.514486,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0828338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484752,-99) , 
7, 0.0256712, 0, 0, 0.544735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47666,-99) , 
8, -1.30946, 0, 0, 0.491918,-99) , 
8, -2.10866, 1, 0, 0.517055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474698,-99) , 
2, 0.188975, 0, 0, 0.490719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366416,-99) , 
0, 0.492376, 0, 0, 0.468197,-99) , 
2, 0.0547267, 1, 0, 0.506966,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0379875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489065,-99) , 
7, -1.21114, 0, 0, 0.557691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
7, -0.482634, 1, 0, 0.498363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390092,-99) , 
8, -3.32449, 0, 0, 0.492984,-99) , 
9, -1.83206, 1, 0, 0.497646,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0537695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 1, 1, 0.602145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457992,-99) , 
7, -0.143752, 0, 0, 0.496525,-99) , 
2, 0.133634, 0, 0, 0.503365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435017,-99) , 
4, 0.999524, 0, 0, 0.497236,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0421792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00532441, 1, 1, 0.51056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61536,-99) , 
NN(
0, 
0, 
-1, 2.18379, 0, -1, 0.447369,-99) , 
8, -1.5317, 1, 0, 0.471112,-99) , 
7, 1.57106, 1, 0, 0.502415,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0573289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473302,-99) , 
3, 3.47089, 1, 0, 0.551664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452033,-99) , 
8, -2.94177, 0, 0, 0.499232,-99) , 
2, -0.0776348, 1, 0, 0.506954,-99) , 
8, -3.75713, 1, 0, 0.51236,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.053788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48229,-99) , 
2, 0.0465616, 1, 0, 0.511396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436458,-99) , 
0, 0.497124, 1, 0, 0.464768,-99) , 
9, 0.525211, 1, 0, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380209,-99) , 
7, -1.56805, 0, 0, 0.497108,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0649912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.400405, 0, 1, 0.577523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452602,-99) , 
2, 0.12003, 1, 0, 0.481258,-99) , 
6, -951.286, 0, 0, 0.542633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490044,-99) , 
2, -0.0168263, 1, 0, 0.51558,-99) , 
NN(
0, 
0, 
-1, -2.29552, 0, -1, 0.475066,-99) , 
9, -0.7061, 1, 0, 0.48985,-99) , 
2, 0.0562529, 0, 0, 0.499267,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0515757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.599258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490352,-99) , 
9, -0.835318, 1, 0, 0.504239,-99) , 
3, 0.468383, 1, 0, 0.510463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416145,-99) , 
3, 7.41242, 1, 0, 0.505822,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0787661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.37152, 0, 1, 0.575766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451267,-99) , 
7, 0.821229, 0, 0, 0.492278,-99) , 
9, -0.676605, 1, 0, 0.502237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441471,-99) , 
0, 0.501898, 0, 0, 0.461395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374718,-99) , 
7, -1.60284, 1, 0, 0.409291,-99) , 
7, -0.905155, 0, 0, 0.447286,-99) , 
7, 0.141369, 0, 0, 0.483052,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0778227);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00532441, 1, 1, 0.53238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493908,-99) , 
7, 1.43154, 0, 0, 0.53082,-99) , 
NN(
0, 
0, 
-1, 1.69375, 0, -1, 0.451028,-99) , 
8, -1.59838, 1, 0, 0.483751,-99) , 
7, 0.714099, 1, 0, 0.508781,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0672401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391834,-99) , 
9, -1.09742, 1, 0, 0.510344,-99) , 
7, 0.150452, 0, 0, 0.534643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481697,-99) , 
7, 0.0864813, 1, 0, 0.487618,-99) , 
2, -0.0907475, 1, 0, 0.493844,-99) , 
8, -2.59921, 1, 0, 0.505247,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0783247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477855,-99) , 
0, 0.499995, 1, 0, 0.562682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424202,-99) , 
2, 0.125958, 0, 0, 0.482977,-99) , 
6, -951.286, 0, 0, 0.533873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467897,-99) , 
0, 0.494278, 0, 0, 0.517021,-99) , 
NN(
0, 
0, 
-1, -3.87886, 0, -1, 0.46859,-99) , 
2, -0.0146406, 1, 0, 0.48813,-99) , 
2, 0.0589744, 0, 0, 0.496186,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0727881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488138,-99) , 
0, 0.496187, 0, 0, 0.519474,-99) , 
8, -3.29194, 1, 0, 0.524484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532051,-99) , 
NN(
0, 
0, 
-1, -3.48588, 0, -1, 0.414218,-99) , 
9, -2.15046, 1, 0, 0.45682,-99) , 
7, -0.714263, 0, 0, 0.516669,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0514058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.54245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498695,-99) , 
8, -2.62532, 1, 0, 0.504553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438116,-99) , 
1, -0.00360989, 1, 0, 0.452491,-99) , 
7, 0.213413, 0, 0, 0.488387,-99) , 
9, -1.80604, 1, 0, 0.492526,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.079279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999992, 0, 1, 0.537364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459155,-99) , 
4, 0.999841, 0, 0, 0.531423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440368,-99) , 
4, 0.999524, 0, 0, 0.523444,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0763268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.683, 1, 1, 0.535331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46611,-99) , 
2, -0.0274294, 1, 0, 0.490868,-99) , 
7, -0.140613, 0, 0, 0.524592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477358,-99) , 
0, 0.502949, 1, 0, 0.500615,-99) , 
NN(
0, 
0, 
-1, 0.500721, 1, -1, 0.425589,-99) , 
0, 0.501083, 0, 0, 0.481099,-99) , 
0, 0.499995, 1, 0, 0.509189,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0682079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00643366, 1, 1, 0.570845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459621,-99) , 
9, -1.10024, 1, 0, 0.512194,-99) , 
7, 0.70862, 0, 0, 0.540233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494051,-99) , 
7, -0.0772118, 0, 0, 0.5287,-99) , 
NN(
0, 
0, 
-1, 0.522783, 0, -1, 0.477753,-99) , 
9, -0.976344, 1, 0, 0.491185,-99) , 
0, 0.501899, 0, 0, 0.500737,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.053553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468746,-99) , 
7, -1.23285, 0, 0, 0.513431,-99) , 
7, -0.145354, 0, 0, 0.528248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497914,-99) , 
7, 0.577223, 1, 0, 0.510971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411408,-99) , 
9, -0.65427, 1, 0, 0.469119,-99) , 
8, -2.31652, 0, 0, 0.501167,-99) , 
9, -1.06685, 1, 0, 0.507671,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0721222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.15521, 1, 1, 0.531001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434797,-99) , 
9, -1.70689, 1, 0, 0.452012,-99) , 
8, -2.19722, 0, 0, 0.461093,-99) , 
7, 0.430185, 0, 0, 0.501064,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0588999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00764448, 0, 1, 0.548935,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481549,-99) , 
3, 0.823107, 1, 0, 0.493982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368928,-99) , 
3, 7.41939, 1, 0, 0.48774,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0532622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478849,-99) , 
0, 0.500948, 1, 0, 0.506072,-99) , 
8, -3.4144, 1, 0, 0.511118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36771,-99) , 
9, -2.2859, 1, 0, 0.431626,-99) , 
7, -0.996783, 0, 0, 0.505135,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0479551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498083, 1, 1, 0.621725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442979,-99) , 
3, 4.90622, 1, 0, 0.504368,-99) , 
3, 0.444553, 1, 0, 0.511239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437717,-99) , 
3, 6.6909, 1, 0, 0.505812,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0541506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499793,-99) , 
3, 0.649718, 1, 0, 0.5161,-99) , 
NN(
0, 
0, 
-1, 0.500673, 1, -1, 0.459285,-99) , 
3, 3.77424, 1, 0, 0.503873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411586,-99) , 
1, 0.00185005, 1, 0, 0.481966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383078,-99) , 
0, 0.503532, 0, 0, 0.460529,-99) , 
0, 0.502852, 1, 0, 0.496724,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0705945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09943, 1, 1, 0.540696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441125,-99) , 
9, -1.29625, 1, 0, 0.498515,-99) , 
7, -0.131532, 0, 0, 0.526731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458649,-99) , 
0, 0.499042, 0, 0, 0.479606,-99) , 
9, 0.367692, 1, 0, 0.514914,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0777862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497443,-99) , 
6, 0.606007, 0, 0, 0.513885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34839,-99) , 
6, -1.57051, 0, 0, 0.501788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467681,-99) , 
3, 2.26708, 1, 0, 0.518382,-99) , 
NN(
0, 
0, 
-1, -2.62847, 0, -1, 0.438248,-99) , 
2, 0.025889, 0, 0, 0.460537,-99) , 
6, -951.286, 0, 0, 0.487251,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0569256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421852,-99) , 
7, -0.615728, 0, 0, 0.511827,-99) , 
9, -1.97144, 1, 0, 0.515815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44888,-99) , 
0, 0.505709, 1, 0, 0.512796,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0482789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.753646, 1, 1, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4213,-99) , 
0, 0.505709, 1, 0, 0.507889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449334,-99) , 
0, 0.501895, 0, 0, 0.46119,-99) , 
9, -1.60842, 1, 0, 0.474907,-99) , 
3, 3.40848, 1, 0, 0.49924,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0341221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615402,-99) , 
NN(
NN(
0, 
0, 
-1, 0.441192, 1, 1, 0.509935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440794,-99) , 
3, 6.68787, 1, 0, 0.50535,-99) , 
0, 0.505709, 0, 0, 0.509499,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0189337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40984,-99) , 
7, -1.57026, 0, 0, 0.497743,-99) , 
0, 0.489519, 1, 0, 0.500553,-99) , 
2, 0.197352, 0, 0, 0.504199,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0441645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562241,-99) , 
NN(
0, 
0, 
-1, -0.365158, 0, -1, 0.482528,-99) , 
9, -2.14912, 1, 0, 0.485871,-99) , 
7, 2.14243, 0, 0, 0.491777,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0622273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498422,-99) , 
8, -3.24835, 1, 0, 0.598518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426208,-99) , 
7, -1.13333, 0, 0, 0.540405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434424,-99) , 
6, -1.30989, 0, 0, 0.499266,-99) , 
NN(
0, 
0, 
-1, 0.535879, 0, -1, 0.466654,-99) , 
6, -951.286, 0, 0, 0.487745,-99) , 
8, -3.04695, 1, 0, 0.495351,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0865562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483632,-99) , 
8, -2.67743, 1, 0, 0.49655,-99) , 
7, -0.429478, 1, 0, 0.515921,-99) , 
NN(
NN(
0, 
0, 
-1, 1.88184, 1, 1, 0.608557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452817,-99) , 
3, 0.754988, 1, 0, 0.465411,-99) , 
2, 0.106673, 0, 0, 0.476162,-99) , 
3, 3.40979, 0, 0, 0.486085,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0518958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484587,-99) , 
0, 0.491425, 1, 0, 0.489974,-99) , 
9, -1.59711, 1, 0, 0.495371,-99) , 
NN(
0, 
0, 
-1, 0.0263997, 1, -1, 0.434022,-99) , 
7, -0.996743, 0, 0, 0.490475,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.038288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466564,-99) , 
8, -2.62352, 0, 0, 0.492749,-99) , 
2, -0.14465, 1, 0, 0.49643,-99) , 
2, -0.225164, 1, 0, 0.500988,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0551785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486964,-99) , 
3, 3.2225, 0, 0, 0.497365,-99) , 
8, -2.83944, 1, 0, 0.503296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571347,-99) , 
NN(
0, 
0, 
-1, -3.26858, 0, -1, 0.455812,-99) , 
9, -2.28785, 1, 0, 0.470642,-99) , 
7, -0.142667, 0, 0, 0.495195,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0506788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.563296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439546,-99) , 
9, -0.125092, 1, 0, 0.500357,-99) , 
7, 1.23351, 0, 0, 0.506646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480702,-99) , 
8, -1.18256, 1, 0, 0.493977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412419,-99) , 
6, -951.286, 0, 0, 0.464718,-99) , 
9, 0.314194, 1, 0, 0.495818,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0650135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493646, 0, 1, 0.56376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492967,-99) , 
9, -0.719077, 1, 0, 0.507084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441963,-99) , 
7, -0.267842, 0, 0, 0.463348,-99) , 
8, -2.91379, 0, 0, 0.497998,-99) , 
0, 0.494281, 1, 0, 0.510708,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0771324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.723279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496505,-99) , 
0, 0.499994, 1, 0, 0.528657,-99) , 
9, -0.0563978, 1, 0, 0.547554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491433,-99) , 
8, -1.88112, 0, 0, 0.507736,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.410722,-99) , 
0, 0.492376, 0, 0, 0.494135,-99) , 
7, 1.00025, 0, 0, 0.514255,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0660004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.589438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465875,-99) , 
7, 0.436582, 1, 0, 0.501965,-99) , 
3, 2.925, 1, 0, 0.547626,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501901, 0, 1, 0.516846,-99) , 
NN(
0, 
0, 
-1, -1.12738, 1, -1, 0.463174,-99) , 
7, 0.142754, 0, 0, 0.498207,-99) , 
2, -0.0469968, 1, 0, 0.508352,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0759951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490503,-99) , 
7, -0.626127, 0, 0, 0.543632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460756,-99) , 
9, 0.111662, 0, 0, 0.508172,-99) , 
9, -0.0715851, 1, 0, 0.529162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449772,-99) , 
3, 6.68787, 1, 0, 0.524093,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0639981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491478, 1, 1, 0.594541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450244,-99) , 
0, 0.489169, 1, 0, 0.475644,-99) , 
0, 0.490335, 0, 0, 0.550194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596469,-99) , 
NN(
0, 
0, 
-1, -1.57178, 0, -1, 0.476562,-99) , 
0, 0.506252, 0, 0, 0.480413,-99) , 
0, 0.493328, 1, 0, 0.490372,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0851979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472508,-99) , 
4, 0.999985, 0, 0, 0.513614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404329,-99) , 
4, 0.999842, 0, 0, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417311,-99) , 
4, 0.999525, 0, 0, 0.496597,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0693465);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487016,-99) , 
4, 0.999996, 0, 0, 0.516048,-99) , 
NN(
0, 
0, 
-1, 0.186525, 0, -1, 0.456035,-99) , 
4, 0.999909, 0, 0, 0.507747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44625,-99) , 
4, 0.999524, 0, 0, 0.502252,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0639813);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492935,-99) , 
8, -1.85624, 1, 0, 0.527728,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.472626,-99) , 
2, -0.0445432, 1, 0, 0.484862,-99) , 
2, 0.197352, 0, 0, 0.490263,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0740218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444283,-99) , 
9, -0.748719, 0, 0, 0.509836,-99) , 
9, -1.14082, 1, 0, 0.530608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477029,-99) , 
8, -2.00335, 1, 0, 0.498781,-99) , 
NN(
0, 
0, 
-1, 0.500538, 1, -1, 0.463728,-99) , 
7, 0.430185, 0, 0, 0.483286,-99) , 
0, 0.5019, 0, 0, 0.492573,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0750815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.480236, 0, 1, 0.547427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496962,-99) , 
7, 0.941361, 1, 0, 0.515181,-99) , 
8, -2.08085, 1, 0, 0.530427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407472,-99) , 
3, 2.46322, 0, 0, 0.451894,-99) , 
9, -0.0415835, 0, 0, 0.4789,-99) , 
0, 0.493328, 0, 0, 0.521884,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.075851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0049875, 0, 1, 0.550392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480845,-99) , 
7, 1.50083, 0, 0, 0.50261,-99) , 
7, 0.141157, 1, 0, 0.517269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436661,-99) , 
4, 0.999524, 0, 0, 0.509913,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0679543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41446,-99) , 
7, -0.695991, 0, 0, 0.518309,-99) , 
9, -1.92059, 1, 0, 0.522025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415247,-99) , 
7, -1.57137, 0, 0, 0.518498,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0362916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.126851, 0, 1, 0.512124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43641,-99) , 
4, 0.999819, 0, 0, 0.507104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455294,-99) , 
4, 0.999524, 0, 0, 0.502483,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0737466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.52911, 1, 1, 0.573705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411047,-99) , 
6, -0.713638, 0, 0, 0.507304,-99) , 
6, -951.286, 1, 0, 0.529786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449091,-99) , 
7, -1.1632, 0, 0, 0.535569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455521,-99) , 
7, 0.714127, 0, 0, 0.481105,-99) , 
7, -0.428591, 1, 0, 0.489681,-99) , 
0, 0.500946, 0, 0, 0.499916,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0625568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440151,-99) , 
2, 0.0179661, 1, 0, 0.533237,-99) , 
6, -951.286, 1, 0, 0.574775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483152,-99) , 
7, 0.794448, 1, 0, 0.501272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404156,-99) , 
8, -3.2706, 0, 0, 0.497823,-99) , 
9, -1.61834, 1, 0, 0.506103,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0851093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.389291, 0, 1, 0.588993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481879,-99) , 
0, 0.504894, 1, 0, 0.527088,-99) , 
7, 0.426582, 1, 0, 0.550845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484548,-99) , 
0, 0.495778, 0, 0, 0.514054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423357,-99) , 
9, -1.64966, 1, 0, 0.455221,-99) , 
7, 0.14379, 0, 0, 0.494041,-99) , 
0, 0.5019, 0, 0, 0.504786,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0544834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.96721, 1, 1, 0.584637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499025,-99) , 
8, -2.48575, 1, 0, 0.50758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424126,-99) , 
8, -2.64475, 0, 0, 0.459153,-99) , 
7, 0.397415, 0, 0, 0.488805,-99) , 
9, -1.8561, 1, 0, 0.495474,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0504411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586354,-99) , 
NN(
NN(
0, 
0, 
-1, 1.39317, 1, 1, 0.530708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488715,-99) , 
7, 1.34306, 0, 0, 0.495916,-99) , 
8, -1.68737, 0, 0, 0.508126,-99) , 
2, -0.205653, 1, 0, 0.512058,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.05147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499476,-99) , 
0, 0.496503, 0, 0, 0.516511,-99) , 
7, -1.28298, 1, 0, 0.520947,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506042, 1, 1, 0.548201,-99) , 
NN(
0, 
0, 
-1, 2.3963, 1, -1, 0.466626,-99) , 
0, 0.505074, 0, 0, 0.485311,-99) , 
0, 0.500947, 1, 0, 0.511037,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.032756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.368122, 0, 1, 0.548309,-99) , 
NN(
0, 
0, 
-1, 0.502851, 1, -1, 0.490542,-99) , 
8, -3.12102, 1, 0, 0.497094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410127,-99) , 
7, -1.57191, 0, 0, 0.494224,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.888713, 0, 1, 0.528593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481505,-99) , 
7, 2.12076, 0, 0, 0.491612,-99) , 
9, -0.0887548, 1, 0, 0.513735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40677,-99) , 
1, -0.00987108, 0, 0, 0.510369,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0532166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462946,-99) , 
9, -1.18665, 0, 0, 0.505434,-99) , 
9, -1.67525, 1, 0, 0.508606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39707,-99) , 
1, -0.000171593, 0, 0, 0.48734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347176,-99) , 
8, -3.57179, 1, 0, 0.446755,-99) , 
8, -3.42342, 0, 0, 0.502884,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0693784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499038, 0, 1, 0.58074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49929,-99) , 
6, -951.286, 0, 0, 0.551472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496144,-99) , 
0, 0.496192, 0, 0, 0.547657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469528,-99) , 
6, -951.286, 1, 0, 0.484123,-99) , 
2, -0.0124222, 1, 0, 0.499235,-99) , 
2, -0.0858264, 1, 0, 0.506483,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.060602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.82158, 1, 1, 0.59565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458998,-99) , 
3, 2.28696, 1, 0, 0.506813,-99) , 
6, -951.286, 0, 0, 0.565235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48585,-99) , 
0, 0.494281, 1, 0, 0.492013,-99) , 
1, 0.0062426, 0, 0, 0.495393,-99) , 
2, 0.0500344, 0, 0, 0.509467,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.07689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483474,-99) , 
0, 0.495235, 1, 0, 0.494095,-99) , 
8, -2.43063, 1, 0, 0.503681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464328,-99) , 
7, -0.222806, 0, 0, 0.489672,-99) , 
NN(
0, 
0, 
-1, -2.64391, 0, -1, 0.436042,-99) , 
9, -1.06276, 1, 0, 0.466611,-99) , 
7, 0.429726, 0, 0, 0.487425,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0703019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62496, 1, 1, 0.570413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479208,-99) , 
3, 2.68142, 1, 0, 0.504191,-99) , 
7, 0.985301, 0, 0, 0.52465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464034,-99) , 
8, -0.903471, 1, 0, 0.518052,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0767635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497979,-99) , 
7, 0.713348, 1, 0, 0.525187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35792,-99) , 
8, -2.52502, 0, 0, 0.473144,-99) , 
2, -0.0863447, 0, 0, 0.517626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52884,-99) , 
NN(
0, 
0, 
-1, 0.000674732, 1, -1, 0.4273,-99) , 
9, -0.988353, 1, 0, 0.451772,-99) , 
0, 0.492376, 0, 0, 0.509374,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0325281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475229,-99) , 
6, -951.286, 0, 0, 0.494151,-99) , 
2, -0.143306, 1, 0, 0.497358,-99) , 
2, -0.223915, 1, 0, 0.500597,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0740221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06135, 1, 1, 0.544831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451416,-99) , 
6, -0.998676, 0, 0, 0.505143,-99) , 
6, -951.286, 1, 0, 0.518303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486577,-99) , 
8, -2.07815, 1, 0, 0.506265,-99) , 
NN(
0, 
0, 
-1, -1.06022, 1, -1, 0.414941,-99) , 
8, -2.42833, 0, 0, 0.470543,-99) , 
0, 0.499995, 1, 0, 0.500826,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0576303);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.39715, 1, 1, 0.582094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472051,-99) , 
9, 0.988743, 1, 0, 0.512675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406255,-99) , 
7, -0.545393, 0, 0, 0.50525,-99) , 
9, -1.72411, 1, 0, 0.51166,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0618632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499916,-99) , 
4, 0.999996, 0, 0, 0.528264,-99) , 
NN(
0, 
0, 
-1, 0.000547831, 0, -1, 0.457034,-99) , 
4, 0.99991, 0, 0, 0.518503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46377,-99) , 
4, 0.999525, 0, 0, 0.513555,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0783221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492264,-99) , 
7, 2.04887, 1, 0, 0.50776,-99) , 
9, 0.138475, 1, 0, 0.525758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422844,-99) , 
9, -0.177339, 1, 0, 0.523185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435891,-99) , 
9, -1.02884, 1, 0, 0.469972,-99) , 
7, 0.800195, 0, 0, 0.479437,-99) , 
8, -1.85462, 0, 0, 0.498701,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0936936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40552, 0, 1, 0.598439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486339,-99) , 
9, 0.487961, 1, 0, 0.506604,-99) , 
8, -1.67759, 1, 0, 0.531127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486961,-99) , 
5, 0.00539399, 0, 0, 0.509214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447727,-99) , 
1, 0.00442529, 0, 0, 0.459864,-99) , 
8, -2.71392, 1, 0, 0.478927,-99) , 
7, 1.0009, 0, 0, 0.498641,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.071851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.128029, 1, 1, 0.52695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461464,-99) , 
4, 0.999525, 0, 0, 0.520877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371126,-99) , 
7, -0.698983, 0, 0, 0.41724,-99) , 
0, 0.496185, 1, 0, 0.459485,-99) , 
8, -3.25493, 0, 0, 0.513309,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0417886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.92103, 1, 1, 0.575814,-99) , 
NN(
NN(
0, 
0, 
-1, -1.41343, 1, 1, 0.511176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374626,-99) , 
0, 0.498093, 1, 0, 0.445945,-99) , 
8, -3.48018, 0, 0, 0.505978,-99) , 
1, -0.00526335, 1, 0, 0.509959,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0774013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48527,-99) , 
9, -0.0116786, 1, 0, 0.510919,-99) , 
8, -3.5224, 1, 0, 0.516347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469106,-99) , 
6, -951.286, 0, 0, 0.513194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434635,-99) , 
2, 0.0543982, 0, 0, 0.450346,-99) , 
8, -2.84923, 1, 0, 0.462492,-99) , 
0, 0.497138, 0, 0, 0.493391,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.031179);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494573,-99) , 
9, -2.32833, 1, 0, 0.497948,-99) , 
8, -1.12685, 0, 0, 0.504394,-99) , 
0, 0.489519, 1, 0, 0.507085,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.070121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432273,-99) , 
0, 0.5019, 1, 0, 0.524533,-99) , 
1, 0.00111132, 0, 0, 0.561339,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0212646, 1, 1, 0.545815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478381,-99) , 
0, 0.495099, 1, 0, 0.490887,-99) , 
0, 0.5019, 0, 0, 0.501159,-99) , 
8, -3.03494, 1, 0, 0.510353,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0653153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431226,-99) , 
7, -1.55079, 1, 0, 0.487033,-99) , 
7, -1.09782, 0, 0, 0.551797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491813,-99) , 
8, -2.26217, 1, 0, 0.504978,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.465091,-99) , 
7, 0.655496, 0, 0, 0.487027,-99) , 
9, -1.69851, 1, 0, 0.492576,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.07941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.78583, 0, 1, 0.562638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480767,-99) , 
7, 1.0981, 0, 0, 0.506391,-99) , 
9, -1.24706, 1, 0, 0.516118,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491741, 0, 1, 0.568894,-99) , 
NN(
0, 
0, 
-1, 0.492693, 1, -1, 0.442301,-99) , 
2, -0.0385418, 1, 0, 0.473623,-99) , 
0, 0.494281, 0, 0, 0.507211,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0769102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6766, 0, 1, 0.566198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476104,-99) , 
8, -0.92284, 0, 0, 0.499943,-99) , 
8, -1.34952, 1, 0, 0.536242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49494,-99) , 
7, 0.183625, 0, 0, 0.520844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453426,-99) , 
2, -0.00862521, 1, 0, 0.474241,-99) , 
6, -951.286, 1, 0, 0.489835,-99) , 
7, 0.714008, 0, 0, 0.511603,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0521086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449917,-99) , 
4, 0.999932, 0, 0, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45996,-99) , 
4, 0.999525, 0, 0, 0.500417,-99) , 
1, -0.00741649, 1, 0, 0.503315,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0628308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495371, 1, 1, 0.519874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432096,-99) , 
2, 0.0617804, 0, 0, 0.454417,-99) , 
0, 0.493331, 0, 0, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388732,-99) , 
8, -3.86157, 0, 0, 0.503277,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0815402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475632,-99) , 
3, 3.37104, 1, 0, 0.546231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47462,-99) , 
2, 0.0974807, 0, 0, 0.486801,-99) , 
2, -0.0288136, 1, 0, 0.501113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445912,-99) , 
4, 0.999525, 0, 0, 0.496175,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0756471);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.1407, 1, 1, 0.554496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443423,-99) , 
7, -1.2312, 0, 0, 0.516764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458613,-99) , 
8, -1.72937, 1, 0, 0.478477,-99) , 
7, 0.714099, 1, 0, 0.497901,-99) , 
0, 0.500947, 0, 0, 0.512919,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0421621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.817241, 1, 1, 0.536663,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.483963,-99) , 
1, -0.0034466, 1, 0, 0.490025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398244,-99) , 
7, -1.57137, 0, 0, 0.487097,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0568843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487578,-99) , 
4, 0.999977, 0, 0, 0.514421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392207,-99) , 
7, -1.56841, 0, 0, 0.510307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449812,-99) , 
4, 0.999524, 0, 0, 0.504566,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0492628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487007,-99) , 
7, -0.0128043, 0, 0, 0.520598,-99) , 
NN(
0, 
0, 
-1, 0.542934, 0, -1, 0.490342,-99) , 
9, -0.702211, 1, 0, 0.500034,-99) , 
NN(
0, 
0, 
-1, -2.35727, 1, -1, 0.408237,-99) , 
7, -0.999325, 0, 0, 0.492431,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0823984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.541186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421161,-99) , 
3, 3.78122, 1, 0, 0.488466,-99) , 
2, 0.0437232, 1, 0, 0.529424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487021,-99) , 
7, 0.54983, 1, 0, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0.503531, 0, -1, 0.436756,-99) , 
7, 0.141847, 0, 0, 0.481217,-99) , 
0, 0.499043, 1, 0, 0.508065,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0506996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499032, 1, 1, 0.580286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469869,-99) , 
0, 0.491695, 0, 0, 0.525352,-99) , 
NN(
0, 
0, 
-1, -1.65915, 0, -1, 0.488841,-99) , 
0, 0.496185, 1, 0, 0.500712,-99) , 
7, -0.99737, 1, 0, 0.505892,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0472908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.56671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495769,-99) , 
7, 1.85684, 0, 0, 0.507192,-99) , 
0, 0.493328, 1, 0, 0.515543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456918,-99) , 
4, 0.999524, 0, 0, 0.510267,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0729019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628841,-99) , 
NN(
NN(
0, 
0, 
-1, -1.18763, 1, 1, 0.528583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455124,-99) , 
0, 0.494508, 1, 0, 0.479748,-99) , 
8, -2.95803, 0, 0, 0.519384,-99) , 
0, 0.505709, 0, 0, 0.523491,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0615858);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496346,-99) , 
7, 1.89923, 1, 0, 0.534708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477187,-99) , 
7, 1.34134, 0, 0, 0.48563,-99) , 
8, -1.31017, 0, 0, 0.496725,-99) , 
7, -1.28561, 1, 0, 0.500727,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0453876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712823, 0, 1, 0.530178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45577,-99) , 
0, 0.497954, 1, 0, 0.498802,-99) , 
0, 0.499043, 0, 0, 0.510449,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.453104,-99) , 
0, 0.504757, 1, 0, 0.505733,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0807844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482397,-99) , 
7, -0.396772, 0, 0, 0.512034,-99) , 
7, 0.416724, 0, 0, 0.523592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472253,-99) , 
7, 2.03639, 1, 0, 0.510318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45955,-99) , 
7, 1.67128, 0, 0, 0.471722,-99) , 
8, -1.20947, 0, 0, 0.483239,-99) , 
9, -0.605365, 1, 0, 0.498917,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0796866);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00384117, 1, 1, 0.534489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471983,-99) , 
0, 0.494099, 0, 0, 0.520849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451599,-99) , 
0, 0.493103, 1, 0, 0.474786,-99) , 
9, -0.717747, 1, 0, 0.490888,-99) , 
0, 0.49809, 0, 0, 0.512476,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0720833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.573846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461668,-99) , 
7, 1.36746, 0, 0, 0.500677,-99) , 
9, -0.0278879, 1, 0, 0.519096,-99) , 
NN(
NN(
0, 
0, 
-1, -1.23407, 0, 1, 0.57,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468411,-99) , 
8, -2.04216, 0, 0, 0.48063,-99) , 
8, -3.53433, 1, 0, 0.491087,-99) , 
7, 0.714099, 0, 0, 0.504339,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0725282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.279455, 0, 1, 0.53271,-99) , 
NN(
0, 
0, 
-1, 0.504892, 0, -1, 0.427623,-99) , 
0, 0.503803, 1, 0, 0.517866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474029,-99) , 
7, 1.04631, 1, 0, 0.493183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432935,-99) , 
0, 0.492378, 0, 0, 0.485577,-99) , 
8, -2.09154, 1, 0, 0.501038,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0624952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459367,-99) , 
9, 0.175541, 1, 0, 0.504317,-99) , 
7, 1.85725, 0, 0, 0.511699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556133,-99) , 
NN(
0, 
0, 
-1, -2.06718, 0, -1, 0.459055,-99) , 
0, 0.489656, 1, 0, 0.468831,-99) , 
0, 0.496186, 0, 0, 0.497066,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0577979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494915,-99) , 
1, 0.000237987, 0, 0, 0.527752,-99) , 
5, 0.00498744, 0, 0, 0.540979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483809,-99) , 
9, 0.06305, 1, 0, 0.501825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432218,-99) , 
7, 0.0955309, 0, 0, 0.496222,-99) , 
9, -0.996947, 1, 0, 0.507742,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0356218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442655,-99) , 
7, -0.812042, 0, 0, 0.506993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445252,-99) , 
1, -0.00699674, 0, 0, 0.504164,-99) , 
9, -1.99351, 1, 0, 0.508364,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0332653);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451644,-99) , 
9, 0.501075, 1, 0, 0.495485,-99) , 
2, -0.227193, 1, 0, 0.499488,-99) , 
7, 2.14243, 0, 0, 0.505443,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0701963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.2365, 1, 1, 0.585609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480382,-99) , 
6, -951.286, 1, 0, 0.495263,-99) , 
8, -1.89412, 1, 0, 0.514416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455358,-99) , 
6, -951.286, 1, 0, 0.473166,-99) , 
1, 0.00442927, 0, 0, 0.480344,-99) , 
7, 0.713788, 0, 0, 0.496388,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0518829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.401404, 1, 1, 0.552712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488964,-99) , 
3, 2.76681, 0, 0, 0.501753,-99) , 
NN(
0, 
0, 
-1, -0.131265, 0, -1, 0.455357,-99) , 
0, 0.500675, 1, 0, 0.493986,-99) , 
0, 0.502852, 0, 0, 0.50233,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0335418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497,-99) , 
2, -0.137539, 1, 0, 0.502018,-99) , 
2, 0.173712, 0, 0, 0.506783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434368,-99) , 
4, 0.999525, 0, 0, 0.500445,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0630988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.246933, 1, 1, 0.597697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482043,-99) , 
8, -0.874457, 1, 0, 0.502841,-99) , 
8, -1.48827, 1, 0, 0.528574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436538,-99) , 
7, -1.5303, 0, 0, 0.545265,-99) , 
NN(
0, 
0, 
-1, 0.0478751, 0, -1, 0.480601,-99) , 
9, -1.70752, 1, 0, 0.488755,-99) , 
7, 1.28538, 0, 0, 0.500517,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0520127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47487,-99) , 
5, 0.000883776, 0, 0, 0.505674,-99) , 
1, -0.00485918, 1, 0, 0.510134,-99) , 
NN(
0, 
0, 
-1, 0.498083, 0, -1, 0.442097,-99) , 
5, 0.00927888, 1, 0, 0.506138,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0516979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490937,-99) , 
0, 0.492376, 1, 0, 0.497814,-99) , 
7, 1.83927, 0, 0, 0.50587,-99) , 
8, -0.879024, 0, 0, 0.512747,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.049231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430444,-99) , 
2, -0.00393977, 0, 0, 0.516597,-99) , 
3, 2.47551, 0, 0, 0.54176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53198,-99) , 
NN(
0, 
0, 
-1, 0.50072, 1, -1, 0.485193,-99) , 
7, 1.8574, 0, 0, 0.491829,-99) , 
0, 0.503804, 0, 0, 0.497366,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0527654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.26752, 1, 1, 0.598455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462335,-99) , 
7, -1.40236, 0, 0, 0.522973,-99) , 
7, -0.420189, 0, 0, 0.552067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496442,-99) , 
1, 0.00424197, 0, 0, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433259,-99) , 
0, 0.491424, 0, 0, 0.496128,-99) , 
9, -0.996947, 1, 0, 0.510238,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.088888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0858224, 0, 1, 0.530206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427085,-99) , 
0, 0.497137, 1, 0, 0.469009,-99) , 
3, 2.47269, 1, 0, 0.518142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464944,-99) , 
2, 0.0237231, 1, 0, 0.534899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431185,-99) , 
9, -1.22765, 1, 0, 0.452571,-99) , 
6, -951.286, 1, 0, 0.47815,-99) , 
3, 3.40996, 1, 0, 0.508003,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0835067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.937915, 0, 1, 0.539272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452944,-99) , 
2, 0.0292874, 0, 0, 0.478486,-99) , 
8, -0.991559, 0, 0, 0.497008,-99) , 
8, -1.84299, 1, 0, 0.520785,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0877697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469717,-99) , 
7, 1.04086, 0, 0, 0.52028,-99) , 
9, -0.51183, 1, 0, 0.531395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595873,-99) , 
NN(
0, 
0, 
-1, -1.35355, 1, -1, 0.464087,-99) , 
0, 0.491424, 1, 0, 0.471763,-99) , 
7, 0.428844, 0, 0, 0.505481,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0421517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.19425, 0, 1, 0.589792,-99) , 
NN(
NN(
0, 
0, 
-1, -3.07709, 1, 1, 0.514737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449855,-99) , 
7, 0.23944, 0, 0, 0.484408,-99) , 
6, -951.286, 0, 0, 0.504032,-99) , 
8, -3.5224, 1, 0, 0.509127,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0311409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.338673, 1, 1, 0.595001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499823,-99) , 
7, -0.429048, 1, 0, 0.507002,-99) , 
3, 0.454496, 1, 0, 0.512189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424008,-99) , 
3, 7.39984, 1, 0, 0.507892,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0616929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469843,-99) , 
0, 0.493737, 0, 0, 0.507499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433774,-99) , 
0, 0.504893, 0, 0, 0.465409,-99) , 
0, 0.501899, 1, 0, 0.498629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403272,-99) , 
7, -1.57146, 0, 0, 0.495347,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0631499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474638,-99) , 
9, 0.456334, 1, 0, 0.51196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44043,-99) , 
6, -951.286, 1, 0, 0.463745,-99) , 
0, 0.494281, 0, 0, 0.50161,-99) , 
NN(
0, 
0, 
-1, -2.37065, 1, -1, 0.406945,-99) , 
8, -3.75713, 0, 0, 0.496449,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0454649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497775,-99) , 
7, -0.899552, 0, 0, 0.573707,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.483657,-99) , 
9, -1.62575, 1, 0, 0.489432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430176,-99) , 
9, -2.13937, 0, 0, 0.486374,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0359506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39235,-99) , 
7, -0.691045, 0, 0, 0.500712,-99) , 
9, -1.82261, 1, 0, 0.505025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398501,-99) , 
7, -1.57146, 0, 0, 0.50136,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0523261);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478903,-99) , 
7, -1.28608, 1, 0, 0.481661,-99) , 
2, -0.14465, 1, 0, 0.485252,-99) , 
2, -0.225164, 1, 0, 0.488688,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0697704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.533854,-99) , 
NN(
0, 
0, 
-1, -0.0383018, 0, -1, 0.464011,-99) , 
6, -0.713549, 0, 0, 0.515579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532606,-99) , 
NN(
0, 
0, 
-1, 1.28398, 1, -1, 0.463908,-99) , 
2, -0.0804514, 1, 0, 0.473721,-99) , 
6, -951.286, 0, 0, 0.500839,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0832359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468176,-99) , 
8, -0.991592, 1, 0, 0.504533,-99) , 
7, 0.93897, 1, 0, 0.519992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471346,-99) , 
7, 1.07163, 0, 0, 0.481912,-99) , 
NN(
0, 
0, 
-1, -0.150096, 1, -1, 0.413415,-99) , 
2, -0.0829858, 0, 0, 0.470879,-99) , 
8, -1.84299, 0, 0, 0.490303,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0594144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.00697, 1, 1, 0.563384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490741,-99) , 
2, 0.0488624, 0, 0, 0.500127,-99) , 
1, 0.00659562, 0, 0, 0.504802,-99) , 
0, 0.500947, 0, 0, 0.518792,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0632179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482913,-99) , 
7, 0.816436, 0, 0, 0.550249,-99) , 
7, 0.138235, 1, 0, 0.589987,-99) , 
NN(
NN(
0, 
0, 
-1, -3.28292, 0, 1, 0.560887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489908,-99) , 
2, 0.0562529, 0, 0, 0.499938,-99) , 
7, -0.429048, 1, 0, 0.509495,-99) , 
1, -0.0034466, 1, 0, 0.517993,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0738345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482321,-99) , 
7, 1.28662, 1, 0, 0.515657,-99) , 
2, 0.194517, 0, 0, 0.521169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439915,-99) , 
0, 0.504003, 0, 0, 0.465763,-99) , 
0, 0.500721, 1, 0, 0.477603,-99) , 
0, 0.499995, 1, 0, 0.505733,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0695693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.95548, 1, 1, 0.543278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432622,-99) , 
0, 0.504757, 1, 0, 0.53465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607878,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.485209,-99) , 
1, 0.00442927, 0, 0, 0.493315,-99) , 
7, 0.432055, 0, 0, 0.516848,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0630386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.712611, 1, 1, 0.532131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407821,-99) , 
1, 0.000275428, 0, 0, 0.457385,-99) , 
0, 0.491424, 0, 0, 0.525014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531906,-99) , 
NN(
0, 
0, 
-1, 0.402845, 0, -1, 0.476286,-99) , 
0, 0.494285, 1, 0, 0.486306,-99) , 
9, 0.131483, 1, 0, 0.512367,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0562673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596701,-99) , 
NN(
NN(
0, 
0, 
-1, -3.7683, 0, 1, 0.583429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474974,-99) , 
8, -1.90688, 0, 0, 0.492785,-99) , 
9, -1.81642, 1, 0, 0.499278,-99) , 
2, -0.189305, 1, 0, 0.504853,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.042793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444694,-99) , 
4, 0.999524, 0, 0, 0.504402,-99) , 
8, -3.34732, 1, 0, 0.509409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431583,-99) , 
7, -1.28588, 0, 0, 0.505681,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0669278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.721571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499469,-99) , 
9, -0.993365, 1, 0, 0.583014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465104,-99) , 
0, 0.500947, 0, 0, 0.483071,-99) , 
7, -0.191189, 0, 0, 0.52325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460641,-99) , 
7, 1.48604, 0, 0, 0.477887,-99) , 
7, 0.351113, 1, 0, 0.483905,-99) , 
8, -2.46143, 1, 0, 0.496885,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.069227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.928153, 1, 1, 0.522625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473173,-99) , 
1, -0.00136763, 1, 0, 0.494008,-99) , 
0, 0.495777, 0, 0, 0.511442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457793,-99) , 
0, 0.505165, 0, 0, 0.486782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406479,-99) , 
9, 0.0390889, 1, 0, 0.455892,-99) , 
0, 0.5019, 1, 0, 0.50002,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.086531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483705,-99) , 
9, -1.41832, 1, 0, 0.527208,-99) , 
7, -0.0565177, 0, 0, 0.54425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488837,-99) , 
1, -1.32869e-06, 1, 0, 0.549726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461098,-99) , 
0, 0.491428, 1, 0, 0.465426,-99) , 
9, -0.736781, 1, 0, 0.473191,-99) , 
9, -0.946556, 1, 0, 0.492361,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0682915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45442,-99) , 
6, -951.286, 1, 0, 0.498877,-99) , 
7, -0.623858, 0, 0, 0.540183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494732,-99) , 
8, -2.18294, 1, 0, 0.509799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45657,-99) , 
8, -2.21384, 0, 0, 0.47417,-99) , 
7, 0.723728, 0, 0, 0.493552,-99) , 
9, -1.44464, 1, 0, 0.499879,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0812961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.06868, 1, 1, 0.553642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442394,-99) , 
3, 4.38545, 1, 0, 0.508153,-99) , 
7, 0.713348, 0, 0, 0.530055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454356,-99) , 
4, 0.999525, 0, 0, 0.523445,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0509614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48762,-99) , 
0, 0.498092, 0, 0, 0.506582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354249,-99) , 
9, -1.90649, 0, 0, 0.50186,-99) , 
9, -2.165, 1, 0, 0.505138,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.04489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492124,-99) , 
8, -2.23001, 1, 0, 0.505919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387417,-99) , 
7, -1.16158, 0, 0, 0.442631,-99) , 
8, -3.43171, 0, 0, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418186,-99) , 
0, 0.489519, 0, 0, 0.497416,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0668593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.563679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440996,-99) , 
6, 0.361376, 1, 0, 0.499905,-99) , 
6, 0.715014, 0, 0, 0.51414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447971,-99) , 
0, 0.492061, 0, 0, 0.5238,-99) , 
NN(
0, 
0, 
-1, -3.15999, 0, -1, 0.464608,-99) , 
0, 0.494283, 1, 0, 0.476568,-99) , 
6, -951.286, 0, 0, 0.5007,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0792514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.569957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463436,-99) , 
8, -1.35013, 1, 0, 0.499662,-99) , 
9, -0.312745, 1, 0, 0.534651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481514,-99) , 
7, 1.1577, 0, 0, 0.497723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446998,-99) , 
7, 1.85122, 1, 0, 0.490478,-99) , 
0, 0.497138, 1, 0, 0.50858,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0584456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.03242, 1, 1, 0.541002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47855,-99) , 
0, 0.491153, 1, 0, 0.485039,-99) , 
8, -1.2832, 0, 0, 0.492362,-99) , 
0, 0.499996, 0, 0, 0.508483,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0849465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.991207, 1, 1, 0.629021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499741,-99) , 
6, -951.286, 1, 0, 0.52323,-99) , 
7, 0.00754025, 0, 0, 0.542987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484157,-99) , 
7, 1.71562, 1, 0, 0.519566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465298,-99) , 
7, 1.50051, 0, 0, 0.481549,-99) , 
8, -1.40281, 0, 0, 0.494972,-99) , 
9, -0.860959, 1, 0, 0.50926,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0372974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614065,-99) , 
NN(
NN(
0, 
0, 
-1, -2.96649, 1, 1, 0.511196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414908,-99) , 
7, -0.862963, 0, 0, 0.505956,-99) , 
9, -2.165, 1, 0, 0.5097,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.034449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.197208, 0, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401237,-99) , 
0, 0.489519, 0, 0, 0.509755,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.053194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.396157, 1, 1, 0.532602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47424,-99) , 
7, 0.716499, 0, 0, 0.499582,-99) , 
0, 0.503986, 0, 0, 0.509717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488906,-99) , 
7, 0.763862, 0, 0, 0.49764,-99) , 
NN(
0, 
0, 
-1, 0.299778, 0, -1, 0.465385,-99) , 
9, -0.226086, 1, 0, 0.483011,-99) , 
0, 0.499995, 0, 0, 0.491913,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0914962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0617804, 1, 1, 0.564553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475307,-99) , 
7, 0.0462796, 0, 0, 0.505407,-99) , 
0, 0.499044, 1, 0, 0.538495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459548,-99) , 
0, 0.501898, 0, 0, 0.469039,-99) , 
2, -0.0366089, 1, 0, 0.489167,-99) , 
7, 0.998604, 1, 0, 0.518405,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.067965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477554,-99) , 
0, 0.500951, 1, 0, 0.525794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476431,-99) , 
0, 0.499995, 0, 0, 0.493059,-99) , 
2, -0.0123899, 1, 0, 0.501419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375033,-99) , 
1, 0.0018131, 1, 0, 0.477346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406709,-99) , 
6, -951.286, 0, 0, 0.451195,-99) , 
2, -0.0862331, 0, 0, 0.494095,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0689239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464548,-99) , 
3, 5.56258, 1, 0, 0.526831,-99) , 
7, 0.528042, 0, 0, 0.533511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477312,-99) , 
0, 0.499043, 1, 0, 0.504751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43876,-99) , 
2, -0.0863447, 0, 0, 0.495474,-99) , 
9, -0.474857, 1, 0, 0.512391,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0616081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458536,-99) , 
7, 0.88605, 1, 0, 0.513935,-99) , 
7, 1.08039, 0, 0, 0.519654,-99) , 
NN(
NN(
0, 
0, 
-1, 0.186744, 1, 1, 0.53727,-99) , 
NN(
0, 
0, 
-1, 0.895143, 0, -1, 0.462946,-99) , 
8, -1.41583, 1, 0, 0.486053,-99) , 
7, 1.28461, 1, 0, 0.509576,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0399305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499465,-99) , 
8, -3.08746, 1, 0, 0.505095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403425,-99) , 
0, 0.497134, 1, 0, 0.443091,-99) , 
7, -0.42822, 0, 0, 0.494083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33721,-99) , 
1, 0.010337, 1, 0, 0.49017,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0478331);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621713,-99) , 
NN(
NN(
0, 
0, 
-1, 3.77424, 0, 1, 0.514031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371167,-99) , 
7, -0.879075, 0, 0, 0.506142,-99) , 
9, -2.165, 1, 0, 0.510166,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.053938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53736, 0, 1, 0.615022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455328,-99) , 
9, -2.33296, 1, 0, 0.496628,-99) , 
7, -0.782658, 0, 0, 0.548766,-99) , 
NN(
NN(
0, 
0, 
-1, -0.348422, 0, 1, 0.545104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444606,-99) , 
9, -0.477891, 0, 0, 0.482559,-99) , 
9, -1.18626, 1, 0, 0.488178,-99) , 
8, -3.13635, 1, 0, 0.495419,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0512731);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591757,-99) , 
NN(
0, 
0, 
-1, 0.0579437, 1, -1, 0.479237,-99) , 
1, -0.0075517, 1, 0, 0.482952,-99) , 
8, -3.82957, 1, 0, 0.486762,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0563817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21522, 0, 1, 0.529384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487932,-99) , 
7, 2.11101, 1, 0, 0.520019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453813,-99) , 
8, -2.55767, 1, 0, 0.482254,-99) , 
7, 1.0717, 0, 0, 0.489871,-99) , 
8, -1.88631, 0, 0, 0.502405,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0728875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489352,-99) , 
2, -0.0086573, 1, 0, 0.513041,-99) , 
NN(
0, 
0, 
-1, -2.53413, 0, -1, 0.46975,-99) , 
3, 3.75356, 1, 0, 0.50312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559634,-99) , 
NN(
0, 
0, 
-1, 0.82185, 0, -1, 0.382948,-99) , 
7, 0.141847, 1, 0, 0.42882,-99) , 
0, 0.503804, 1, 0, 0.494215,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0511699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492588,-99) , 
3, 2.92199, 0, 0, 0.506625,-99) , 
NN(
0, 
0, 
-1, 0.498138, 0, -1, 0.47383,-99) , 
0, 0.49714, 1, 0, 0.487164,-99) , 
7, 2.14243, 0, 0, 0.493437,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0499198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0068488, 0, 1, 0.576247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422018,-99) , 
7, -1.28318, 0, 0, 0.504509,-99) , 
5, 0.00403245, 0, 0, 0.514313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342137,-99) , 
2, -0.00698062, 0, 0, 0.444814,-99) , 
5, 0.00940912, 1, 0, 0.510569,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0639425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.548697, 1, 1, 0.5443,-99) , 
NN(
NN(
0, 
0, 
-1, -0.713795, 1, 1, 0.515454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445814,-99) , 
6, -0.142322, 0, 0, 0.486171,-99) , 
6, -951.286, 1, 0, 0.495689,-99) , 
0, 0.492376, 1, 0, 0.500759,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0526502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490308,-99) , 
7, 1.04136, 1, 0, 0.513879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410637,-99) , 
7, -1.56795, 0, 0, 0.510671,-99) , 
NN(
0, 
0, 
-1, -0.570829, 1, -1, 0.447438,-99) , 
0, 0.491424, 0, 0, 0.5054,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0637731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.450341, 1, 1, 0.588767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448619,-99) , 
0, 0.501904, 1, 0, 0.492674,-99) , 
8, -2.00604, 1, 0, 0.514881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468133,-99) , 
6, -951.286, 0, 0, 0.494101,-99) , 
NN(
0, 
0, 
-1, 0.499999, 0, -1, 0.396369,-99) , 
2, -0.0676326, 0, 0, 0.476334,-99) , 
7, 0.427323, 0, 0, 0.49887,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0808827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493586,-99) , 
0, 0.493421, 0, 0, 0.552065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476428,-99) , 
0, 0.502853, 1, 0, 0.538911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491339,-99) , 
2, 0.00361977, 0, 0, 0.530989,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.464418,-99) , 
3, 1.05827, 1, 0, 0.486689,-99) , 
3, 3.40104, 0, 0, 0.499509,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0495464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493102,-99) , 
7, 0.0866574, 0, 0, 0.514515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43495,-99) , 
7, 0.678681, 0, 0, 0.483894,-99) , 
9, -0.78169, 1, 0, 0.493816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416969,-99) , 
3, 7.41949, 1, 0, 0.489957,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.042746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560436,-99) , 
NN(
0, 
0, 
-1, 0.491015, 0, -1, 0.490001,-99) , 
7, -0.997465, 1, 0, 0.494469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43454,-99) , 
5, 0.00184219, 0, 0, 0.470987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391352,-99) , 
5, 0.00644756, 1, 0, 0.45966,-99) , 
0, 0.501899, 1, 0, 0.487181,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0629333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486976,-99) , 
7, -0.571021, 0, 0, 0.560728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479334,-99) , 
7, 0.542292, 0, 0, 0.508641,-99) , 
9, -1.44436, 1, 0, 0.513334,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.433129,-99) , 
9, -1.99351, 0, 0, 0.50815,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0616991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00307385, 0, 1, 0.527891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458251,-99) , 
7, 0.588706, 0, 0, 0.482386,-99) , 
3, 3.10717, 1, 0, 0.514351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46221,-99) , 
6, -951.286, 0, 0, 0.487628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43788,-99) , 
9, 0.268758, 0, 0, 0.471361,-99) , 
8, -1.7188, 1, 0, 0.498147,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0744581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.5138, 1, 1, 0.520463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427479,-99) , 
8, -3.41693, 0, 0, 0.468007,-99) , 
7, -0.429184, 0, 0, 0.511372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477648,-99) , 
8, -2.44518, 1, 0, 0.516997,-99) , 
NN(
0, 
0, 
-1, 0.491698, 0, -1, 0.430296,-99) , 
6, -951.286, 1, 0, 0.457546,-99) , 
0, 0.496187, 0, 0, 0.492509,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0617274);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453316,-99) , 
5, 0.00131278, 0, 0, 0.487915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375665,-99) , 
5, 0.013785, 1, 0, 0.484769,-99) , 
7, -1.28467, 1, 0, 0.489595,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0745923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492244,-99) , 
7, -0.263748, 0, 0, 0.536492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469821,-99) , 
9, -0.76178, 1, 0, 0.476702,-99) , 
8, -2.74383, 1, 0, 0.487373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353017,-99) , 
9, -2.38023, 1, 0, 0.420046,-99) , 
7, -1.0001, 0, 0, 0.482362,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0651325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.52425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46085,-99) , 
7, 1.2912, 0, 0, 0.481759,-99) , 
0, 0.4936, 0, 0, 0.511331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459743,-99) , 
0, 0.49986, 0, 0, 0.512387,-99) , 
NN(
0, 
0, 
-1, -1.54984, 0, -1, 0.447923,-99) , 
9, -0.019944, 1, 0, 0.486376,-99) , 
0, 0.499043, 1, 0, 0.500674,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0319079);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499905,-99) , 
9, -1.16921, 1, 0, 0.505242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352013,-99) , 
7, -0.569694, 0, 0, 0.45188,-99) , 
8, -3.2111, 0, 0, 0.501435,-99) , 
9, -1.99351, 1, 0, 0.504329,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0663711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93971, 1, 1, 0.528971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385595,-99) , 
7, -1.70489, 0, 0, 0.522146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441001,-99) , 
7, 2.13227, 0, 0, 0.462682,-99) , 
7, 1.17799, 1, 0, 0.476321,-99) , 
8, -1.91027, 1, 0, 0.500852,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0815623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29235, 1, 1, 0.53747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428719,-99) , 
8, -2.25491, 1, 0, 0.498944,-99) , 
8, -2.0456, 0, 0, 0.517989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468576,-99) , 
9, -0.347194, 1, 0, 0.494084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410364,-99) , 
8, -3.35862, 1, 0, 0.436741,-99) , 
9, -0.780829, 0, 0, 0.472431,-99) , 
0, 0.499995, 1, 0, 0.501998,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0888349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463861,-99) , 
4, 0.999983, 0, 0, 0.508969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348006,-99) , 
4, 0.999819, 0, 0, 0.496778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444066,-99) , 
4, 0.999525, 0, 0, 0.49194,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0786834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480628,-99) , 
4, 0.99999, 0, 0, 0.518506,-99) , 
NN(
0, 
0, 
-1, -1.44004, 0, -1, 0.453716,-99) , 
4, 0.999932, 0, 0, 0.506695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429751,-99) , 
4, 0.999525, 0, 0, 0.49987,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.044246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495785,-99) , 
8, -2.35607, 1, 0, 0.505334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468183,-99) , 
0, 0.495232, 1, 0, 0.47823,-99) , 
7, 0.51469, 0, 0, 0.493988,-99) , 
NN(
0, 
0, 
-1, -2.3463, 1, -1, 0.415131,-99) , 
8, -3.70823, 0, 0, 0.489267,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0480353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490687,-99) , 
2, 0.105339, 0, 0, 0.499505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442014,-99) , 
4, 0.999525, 0, 0, 0.494508,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.426889,-99) , 
7, -0.999554, 0, 0, 0.489564,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0565058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.588112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444372,-99) , 
7, -1.25094, 0, 0, 0.507581,-99) , 
7, 1.08103, 0, 0, 0.515989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419572,-99) , 
7, 1.62989, 0, 0, 0.476099,-99) , 
0, 0.500949, 0, 0, 0.488707,-99) , 
9, 0.135548, 1, 0, 0.506995,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0791291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.839973, 1, 1, 0.524927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406607,-99) , 
0, 0.49333, 0, 0, 0.463689,-99) , 
7, -0.425855, 0, 0, 0.514787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438743,-99) , 
7, 0.455369, 0, 0, 0.537334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451282,-99) , 
2, -0.0067297, 1, 0, 0.468042,-99) , 
2, -0.080455, 1, 0, 0.477472,-99) , 
0, 0.496186, 1, 0, 0.489612,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0561707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39067, 1, 1, 0.564935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469344,-99) , 
0, 0.499035, 0, 0, 0.485962,-99) , 
3, 3.81947, 1, 0, 0.536254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484974,-99) , 
7, -0.303919, 0, 0, 0.514716,-99) , 
NN(
0, 
0, 
-1, 0.280745, 0, -1, 0.480704,-99) , 
7, 0.144708, 1, 0, 0.490978,-99) , 
2, 0.0562948, 0, 0, 0.499217,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0395562);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506253, 0, 1, 0.56564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492411,-99) , 
0, 0.500053, 0, 0, 0.49815,-99) , 
NN(
0, 
0, 
-1, -1.79654, 1, -1, 0.469973,-99) , 
0, 0.500675, 1, 0, 0.491712,-99) , 
0, 0.504757, 0, 0, 0.49686,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0684112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642104,-99) , 
NN(
NN(
0, 
0, 
-1, -0.641357, 1, 1, 0.519124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45496,-99) , 
0, 0.493328, 1, 0, 0.474086,-99) , 
7, 0.239254, 0, 0, 0.504143,-99) , 
8, -3.75713, 1, 0, 0.509283,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0654978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.50541, 0, 1, 0.546239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424606,-99) , 
7, 0.792288, 0, 0, 0.491574,-99) , 
7, 0.425319, 1, 0, 0.513642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468314,-99) , 
7, 0.526155, 0, 0, 0.497713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393314,-99) , 
7, -0.996145, 0, 0, 0.489381,-99) , 
0, 0.496185, 0, 0, 0.505552,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0627954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35598, 0, 1, 0.611116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404013,-99) , 
0, 0.498084, 0, 0, 0.463016,-99) , 
7, -1.05546, 0, 0, 0.540372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497017,-99) , 
3, 0.476052, 1, 0, 0.505956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44168,-99) , 
0, 0.494277, 1, 0, 0.461311,-99) , 
3, 3.77414, 1, 0, 0.496228,-99) , 
9, -1.44137, 1, 0, 0.502291,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0721188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47239,-99) , 
7, -0.430689, 0, 0, 0.525407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467418,-99) , 
7, -0.717074, 1, 0, 0.474598,-99) , 
2, 0.01856, 0, 0, 0.491489,-99) , 
2, -0.222403, 1, 0, 0.494944,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0676382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.847426, 0, 1, 0.59108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396102,-99) , 
7, -1.51222, 1, 0, 0.483313,-99) , 
7, -1.1622, 0, 0, 0.551867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461848,-99) , 
4, 0.999865, 0, 0, 0.512968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448058,-99) , 
4, 0.999526, 0, 0, 0.507136,-99) , 
7, -0.427763, 1, 0, 0.514095,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0565436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.674907, 0, 1, 0.541674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485993,-99) , 
7, 1.28681, 1, 0, 0.525337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474362,-99) , 
0, 0.499042, 0, 0, 0.48988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40473,-99) , 
6, -1.56952, 0, 0, 0.483697,-99) , 
6, -951.286, 1, 0, 0.497696,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0952538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 0, 1, 0.618338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463824,-99) , 
9, -2.15309, 1, 0, 0.517286,-99) , 
7, -0.920775, 0, 0, 0.561522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478593,-99) , 
2, -0.0198057, 1, 0, 0.499992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429933,-99) , 
6, 0.414191, 0, 0, 0.45256,-99) , 
6, -951.286, 1, 0, 0.468452,-99) , 
9, -1.48317, 1, 0, 0.479589,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0389469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489643,-99) , 
9, -2.2789, 1, 0, 0.53848,-99) , 
7, -0.906023, 0, 0, 0.567437,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.485838,-99) , 
9, -1.63316, 1, 0, 0.49296,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0398152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491152, 0, 1, 0.576937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47662,-99) , 
0, 0.491152, 1, 0, 0.511847,-99) , 
7, 0.428187, 0, 0, 0.547644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456791,-99) , 
0, 0.49469, 0, 0, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394009,-99) , 
7, -1.57172, 0, 0, 0.498615,-99) , 
0, 0.493328, 1, 0, 0.505642,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0433854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485698,-99) , 
8, -3.75582, 0, 0, 0.544135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462899,-99) , 
7, -0.00667498, 0, 0, 0.495851,-99) , 
7, -0.714263, 1, 0, 0.500424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549591,-99) , 
NN(
0, 
0, 
-1, 0.401321, 0, -1, 0.414386,-99) , 
0, 0.506163, 0, 0, 0.445764,-99) , 
0, 0.503804, 1, 0, 0.494284,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0807231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.418302, 1, 1, 0.535831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448316,-99) , 
8, -1.74172, 0, 0, 0.472142,-99) , 
3, 3.24099, 1, 0, 0.517452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427577,-99) , 
7, 0.243894, 0, 0, 0.477797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420848,-99) , 
7, 1.0031, 1, 0, 0.457533,-99) , 
0, 0.492376, 0, 0, 0.510385,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0742229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621393,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.468514,-99) , 
8, -3.51266, 0, 0, 0.540419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474359,-99) , 
8, -2.31801, 0, 0, 0.528402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469896,-99) , 
7, 1.7616, 0, 0, 0.480217,-99) , 
0, 0.5019, 0, 0, 0.489469,-99) , 
7, -0.713502, 1, 0, 0.494694,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0808132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408073,-99) , 
9, -0.155778, 1, 0, 0.507647,-99) , 
7, 1.41702, 0, 0, 0.513287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513288,-99) , 
NN(
0, 
0, 
-1, 0.421299, 1, -1, 0.439581,-99) , 
8, -0.976736, 0, 0, 0.468049,-99) , 
8, -1.66544, 1, 0, 0.497215,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0576292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444143,-99) , 
7, 1.57224, 1, 0, 0.503673,-99) , 
NN(
0, 
0, 
-1, 0.49673, 0, -1, 0.473041,-99) , 
0, 0.496185, 1, 0, 0.482898,-99) , 
2, -0.192469, 1, 0, 0.486308,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0646594);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479825,-99) , 
3, 0.454488, 1, 0, 0.486961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38176,-99) , 
3, 7.39984, 1, 0, 0.482304,-99) , 
8, -3.82957, 1, 0, 0.486952,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0526209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.438313, 0, 1, 0.589459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475115,-99) , 
0, 0.499043, 0, 0, 0.496657,-99) , 
3, 2.96256, 1, 0, 0.539267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467419,-99) , 
7, 0.818027, 0, 0, 0.484838,-99) , 
9, -2.08185, 1, 0, 0.488199,-99) , 
2, -0.0848457, 1, 0, 0.494982,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0515556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493914,-99) , 
6, -951.286, 1, 0, 0.506112,-99) , 
7, 1.55461, 0, 0, 0.51637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463496,-99) , 
8, -1.11788, 1, 0, 0.507521,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0726774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.539678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44362,-99) , 
0, 0.496184, 0, 0, 0.480698,-99) , 
4, 0.999932, 0, 0, 0.528931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465167,-99) , 
4, 0.999525, 0, 0, 0.523404,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0327053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.15827, 1, 1, 0.545143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495587,-99) , 
7, -0.922257, 1, 0, 0.498325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395735,-99) , 
8, -3.77857, 0, 0, 0.493286,-99) , 
0, 0.493328, 1, 0, 0.500712,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0445613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000355219, 0, 1, 0.559925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462914,-99) , 
0, 0.503124, 1, 0, 0.505419,-99) , 
9, -1.80319, 1, 0, 0.50927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383034,-99) , 
0, 0.505709, 1, 0, 0.50242,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0442913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490441,-99) , 
5, 0.00393799, 0, 0, 0.499822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390699,-99) , 
5, 0.013785, 1, 0, 0.49675,-99) , 
7, -1.28578, 1, 0, 0.501164,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0754915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467493,-99) , 
6, -0.142604, 1, 0, 0.521279,-99) , 
6, -951.286, 1, 0, 0.539179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485108,-99) , 
9, -1.18967, 1, 0, 0.497842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434627,-99) , 
2, -0.0127446, 1, 0, 0.45401,-99) , 
0, 0.496187, 0, 0, 0.482505,-99) , 
2, -0.0862331, 1, 0, 0.490019,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0525718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.18196, 1, 1, 0.566029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445486,-99) , 
0, 0.499047, 1, 0, 0.501701,-99) , 
7, -0.905333, 0, 0, 0.549337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607753,-99) , 
NN(
0, 
0, 
-1, -2.55241, 0, -1, 0.492204,-99) , 
8, -2.76677, 1, 0, 0.496591,-99) , 
7, 0.141948, 1, 0, 0.511887,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0752159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53387, 1, 1, 0.543799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480939,-99) , 
2, 0.0256092, 0, 0, 0.492291,-99) , 
0, 0.49809, 1, 0, 0.516896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445124,-99) , 
0, 0.492695, 1, 0, 0.458285,-99) , 
0, 0.502852, 0, 0, 0.473156,-99) , 
3, 3.40104, 1, 0, 0.505553,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0572376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494777,-99) , 
7, 1.03437, 1, 0, 0.517424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345836,-99) , 
1, -0.00210098, 0, 0, 0.465661,-99) , 
0, 0.492376, 0, 0, 0.511143,-99) , 
8, -3.75713, 1, 0, 0.515206,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0370082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.512373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458582,-99) , 
7, 2.04691, 1, 0, 0.505889,-99) , 
NN(
0, 
0, 
-1, -1.38113, 0, -1, 0.448292,-99) , 
7, -1.00021, 0, 0, 0.501675,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0462865);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00207833, 1, 1, 0.585085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460025,-99) , 
7, -0.427915, 0, 0, 0.499467,-99) , 
3, 0.418211, 1, 0, 0.505514,-99) , 
3, 6.3608, 0, 0, 0.510948,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0657207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.50549, 1, 1, 0.538108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423948,-99) , 
6, -951.286, 0, 0, 0.490402,-99) , 
9, -1.14759, 0, 0, 0.527716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486976,-99) , 
0, 0.490897, 1, 0, 0.493467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416023,-99) , 
0, 0.489428, 0, 0, 0.487164,-99) , 
0, 0.497138, 0, 0, 0.510658,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0582226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.551667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445861,-99) , 
8, -1.01991, 1, 0, 0.477862,-99) , 
7, 1.59453, 1, 0, 0.510614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469317,-99) , 
8, -2.65067, 1, 0, 0.4822,-99) , 
7, 1.29952, 0, 0, 0.486973,-99) , 
8, -1.7188, 0, 0, 0.49567,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0745895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49462,-99) , 
7, 0.179836, 0, 0, 0.536884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452825,-99) , 
3, 3.7668, 1, 0, 0.500504,-99) , 
8, -1.97412, 1, 0, 0.517417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563328,-99) , 
NN(
0, 
0, 
-1, 0.498355, 0, -1, 0.416345,-99) , 
0, 0.496179, 1, 0, 0.457183,-99) , 
7, -0.713366, 0, 0, 0.510621,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0613368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480205,-99) , 
5, 0.003095, 1, 0, 0.558706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485045,-99) , 
0, 0.497138, 1, 0, 0.501183,-99) , 
7, -0.281755, 1, 0, 0.506892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50877,-99) , 
NN(
0, 
0, 
-1, -3.6284, 0, -1, 0.391632,-99) , 
3, 2.96062, 0, 0, 0.422516,-99) , 
9, -1.63316, 0, 0, 0.497548,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.52532, 1, 1, 0.520303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456544,-99) , 
5, 0.00454741, 0, 0, 0.471569,-99) , 
8, -2.68334, 0, 0, 0.508003,-99) , 
NN(
0, 
0, 
-1, 0.489794, 1, -1, 0.429237,-99) , 
0, 0.491426, 0, 0, 0.501642,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0807275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472047,-99) , 
6, -951.286, 0, 0, 0.527676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442788,-99) , 
2, 0.000837037, 1, 0, 0.484813,-99) , 
9, -0.576791, 1, 0, 0.50175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470609,-99) , 
0, 0.496867, 0, 0, 0.488321,-99) , 
NN(
0, 
0, 
-1, 0.496321, 1, -1, 0.453001,-99) , 
8, -2.30198, 0, 0, 0.473839,-99) , 
0, 0.499042, 0, 0, 0.485474,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0704001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446258,-99) , 
0, 0.502852, 1, 0, 0.523493,-99) , 
7, 0.216764, 0, 0, 0.539716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479802,-99) , 
9, -0.0270697, 1, 0, 0.493646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361361,-99) , 
9, -0.590586, 1, 0, 0.456211,-99) , 
8, -2.28398, 0, 0, 0.489006,-99) , 
8, -2.49571, 1, 0, 0.504035,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0387426);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571897,-99) , 
NN(
NN(
0, 
0, 
-1, -2.7241, 1, 1, 0.513241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457037,-99) , 
9, -1.97158, 1, 0, 0.474678,-99) , 
7, -0.429478, 0, 0, 0.506842,-99) , 
2, 0.199145, 0, 0, 0.510354,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0569851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445021,-99) , 
3, 2.05232, 0, 0, 0.501801,-99) , 
6, -951.286, 1, 0, 0.531987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484619,-99) , 
8, -2.82962, 1, 0, 0.489884,-99) , 
NN(
0, 
0, 
-1, -1.71783, 1, -1, 0.433057,-99) , 
8, -3.33279, 0, 0, 0.48464,-99) , 
0, 0.502852, 0, 0, 0.491353,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.056309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499728,-99) , 
0, 0.499996, 0, 0, 0.520241,-99) , 
8, -1.90515, 1, 0, 0.531335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481158,-99) , 
7, -0.902456, 1, 0, 0.488266,-99) , 
2, 0.180571, 0, 0, 0.494536,-99) , 
7, 1.00043, 0, 0, 0.508829,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0456717);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.901238, 1, 1, 0.539186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444749,-99) , 
0, 0.491424, 0, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426958,-99) , 
9, 0.152801, 1, 0, 0.492149,-99) , 
9, 0.376163, 0, 0, 0.5035,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0579149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487113,-99) , 
2, 0.0322516, 0, 0, 0.50169,-99) , 
9, 0.273971, 0, 0, 0.515931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48508,-99) , 
9, -0.903184, 1, 0, 0.494846,-99) , 
NN(
0, 
0, 
-1, 0.499133, 1, -1, 0.452352,-99) , 
7, -0.143551, 0, 0, 0.484076,-99) , 
0, 0.497138, 1, 0, 0.496764,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0572622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09937, 1, 1, 0.529645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47935,-99) , 
3, 3.24974, 0, 0, 0.489971,-99) , 
2, -0.0109234, 1, 0, 0.500059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409995,-99) , 
8, -2.53577, 0, 0, 0.477043,-99) , 
NN(
0, 
0, 
-1, -0.151649, 1, -1, 0.417663,-99) , 
0, 0.496184, 0, 0, 0.453479,-99) , 
2, -0.0848457, 0, 0, 0.493372,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0743457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501486, 0, 1, 0.552667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465163,-99) , 
0, 0.5038, 1, 0, 0.542803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
8, -1.37926, 1, 0, 0.513167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458231,-99) , 
0, 0.496189, 1, 0, 0.481674,-99) , 
7, 0.981313, 0, 0, 0.499779,-99) , 
9, -0.810149, 1, 0, 0.513139,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0673415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0344532, 0, 1, 0.549484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457368,-99) , 
0, 0.500676, 1, 0, 0.476558,-99) , 
3, 2.38294, 1, 0, 0.514958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478567,-99) , 
0, 0.496866, 0, 0, 0.489571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386363,-99) , 
7, -0.997319, 0, 0, 0.480943,-99) , 
0, 0.499043, 0, 0, 0.494814,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0555277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497132, 0, 1, 0.604571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486804,-99) , 
3, 3.78246, 0, 0, 0.498787,-99) , 
3, 0.476156, 1, 0, 0.505607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430186,-99) , 
3, 7.41949, 1, 0, 0.502074,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0763034);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00689925, 0, 1, 0.542739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478025,-99) , 
0, 0.500811, 0, 0, 0.516697,-99) , 
NN(
0, 
0, 
-1, -0.0611457, 1, -1, 0.470234,-99) , 
7, 0.428438, 0, 0, 0.496094,-99) , 
0, 0.498091, 1, 0, 0.518617,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0592546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476577,-99) , 
2, 0.0631631, 1, 0, 0.584598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493937,-99) , 
8, -2.75995, 1, 0, 0.497933,-99) , 
7, 0.0610214, 1, 0, 0.51016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470867,-99) , 
9, -1.80813, 1, 0, 0.506762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366535,-99) , 
0, 0.494598, 1, 0, 0.430716,-99) , 
0, 0.49809, 0, 0, 0.467762,-99) , 
7, -0.428728, 0, 0, 0.502992,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0522164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00454741, 0, 1, 0.529933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455106,-99) , 
1, -0.00202648, 0, 0, 0.494824,-99) , 
9, -0.721829, 1, 0, 0.506752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443585,-99) , 
0, 0.490562, 0, 0, 0.481292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354819,-99) , 
8, -2.92641, 0, 0, 0.452377,-99) , 
0, 0.492376, 0, 0, 0.500074,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0712973);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.84305, 1, 1, 0.538446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488977,-99) , 
3, 2.87852, 1, 0, 0.552385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473059,-99) , 
7, -1.09482, 1, 0, 0.480192,-99) , 
2, -0.0908023, 1, 0, 0.488326,-99) , 
7, 0.999087, 0, 0, 0.507926,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0715631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54094, 0, 1, 0.528274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43053,-99) , 
7, -1.2514, 0, 0, 0.522521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614876,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.456268,-99) , 
8, -1.5039, 1, 0, 0.478069,-99) , 
7, 1.57347, 1, 0, 0.512735,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0699908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.283914, 1, 1, 0.522177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454636,-99) , 
3, 2.84584, 0, 0, 0.478468,-99) , 
8, -2.29816, 0, 0, 0.504402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537174,-99) , 
NN(
0, 
0, 
-1, 0.491521, 0, -1, 0.455565,-99) , 
0, 0.490063, 1, 0, 0.466133,-99) , 
0, 0.496185, 0, 0, 0.490849,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0725498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474853,-99) , 
3, 2.15002, 1, 0, 0.547749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486398,-99) , 
9, -0.542761, 1, 0, 0.507482,-99) , 
2, -0.0131001, 1, 0, 0.519256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376516,-99) , 
9, -1.68216, 0, 0, 0.502959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388045,-99) , 
7, 0.428773, 1, 0, 0.435234,-99) , 
2, 0.0841491, 1, 0, 0.486709,-99) , 
3, 2.95853, 1, 0, 0.508662,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0602368);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435846,-99) , 
3, 2.95853, 1, 0, 0.522556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485169,-99) , 
7, -0.997201, 1, 0, 0.489202,-99) , 
2, 0.0344495, 0, 0, 0.495841,-99) , 
2, 0.195553, 0, 0, 0.49904,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0570294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.351113, 1, 1, 0.526733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471024,-99) , 
0, 0.503804, 1, 0, 0.520587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548273,-99) , 
NN(
0, 
0, 
-1, -1.02597, 1, -1, 0.471201,-99) , 
7, 0.221654, 0, 0, 0.482948,-99) , 
8, -2.53413, 0, 0, 0.508765,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0348829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445465,-99) , 
7, -0.522404, 0, 0, 0.494515,-99) , 
9, 0.738645, 0, 0, 0.503717,-99) , 
9, -2.01927, 1, 0, 0.507166,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0515633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493442,-99) , 
7, 1.2042, 0, 0, 0.497956,-99) , 
0, 0.491423, 1, 0, 0.504313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49026,-99) , 
7, 1.6734, 1, 0, 0.507107,-99) , 
NN(
0, 
0, 
-1, 0.106378, 1, -1, 0.437739,-99) , 
8, -1.36592, 0, 0, 0.476511,-99) , 
8, -1.86642, 1, 0, 0.492078,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0676464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999978, 0, 1, 0.539797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481906,-99) , 
0, 0.500948, 0, 0, 0.495127,-99) , 
9, -0.349835, 0, 0, 0.517498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439741,-99) , 
4, 0.999525, 0, 0, 0.510259,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0620066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493453,-99) , 
7, -0.530053, 0, 0, 0.558657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48914,-99) , 
7, 1.66473, 0, 0, 0.509341,-99) , 
8, -2.20648, 1, 0, 0.529729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
8, -3.2369, 1, 0, 0.507697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411973,-99) , 
9, -0.0582174, 1, 0, 0.468785,-99) , 
0, 0.499994, 1, 0, 0.494297,-99) , 
1, -9.31025e-05, 1, 0, 0.510716,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0458988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000655996, 1, 1, 0.529862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426278,-99) , 
8, -2.12105, 0, 0, 0.490208,-99) , 
9, -0.474857, 1, 0, 0.507939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356327,-99) , 
5, 0.013785, 1, 0, 0.503413,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0560386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494144, 0, 1, 0.538555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461102,-99) , 
0, 0.497002, 0, 0, 0.500972,-99) , 
0, 0.495232, 1, 0, 0.510658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467553,-99) , 
9, 0.963738, 1, 0, 0.499136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42956,-99) , 
7, 1.84384, 0, 0, 0.476213,-99) , 
7, 1.57199, 1, 0, 0.50312,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0467681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490562, 0, 1, 0.55727,-99) , 
NN(
0, 
0, 
-1, -3.84501, 0, -1, 0.489856,-99) , 
0, 0.492376, 1, 0, 0.497102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442434,-99) , 
0, 0.499994, 1, 0, 0.484248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405045,-99) , 
2, 0.0542821, 1, 0, 0.469911,-99) , 
7, 0.996979, 1, 0, 0.486068,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0498981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47835,-99) , 
2, 0.0177367, 0, 0, 0.492422,-99) , 
2, -0.223915, 1, 0, 0.495149,-99) , 
9, 0.376122, 0, 0, 0.503883,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0676109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.564825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460349,-99) , 
9, -1.29321, 0, 0, 0.493836,-99) , 
0, 0.499996, 1, 0, 0.538429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48484,-99) , 
0, 0.496731, 1, 0, 0.499548,-99) , 
NN(
0, 
0, 
-1, 0.490336, 1, -1, 0.442241,-99) , 
0, 0.492376, 0, 0, 0.492852,-99) , 
9, -0.984241, 1, 0, 0.504225,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0654551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432569,-99) , 
7, -1.00021, 0, 0, 0.508617,-99) , 
NN(
0, 
0, 
-1, 0.498084, 1, -1, 0.438141,-99) , 
6, -1.30908, 0, 0, 0.500412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466594,-99) , 
0, 0.50095, 0, 0, 0.489889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4026,-99) , 
2, -0.0799308, 0, 0, 0.475522,-99) , 
6, -951.286, 0, 0, 0.491851,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0458301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556089,-99) , 
NN(
NN(
0, 
0, 
-1, -0.621924, 0, 1, 0.535824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453721,-99) , 
7, 0.357293, 0, 0, 0.492931,-99) , 
7, -0.0623558, 1, 0, 0.504506,-99) , 
7, 2.14096, 0, 0, 0.509767,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0624877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0885387, 1, 1, 0.525877,-99) , 
NN(
0, 
0, 
-1, -2.30413, 1, -1, 0.445411,-99) , 
7, -0.904738, 0, 0, 0.514291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47879,-99) , 
9, 0.607283, 1, 0, 0.487694,-99) , 
NN(
0, 
0, 
-1, 1.13366, 0, -1, 0.444068,-99) , 
9, 0.328487, 0, 0, 0.470855,-99) , 
7, 0.999771, 1, 0, 0.496536,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0846351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.501468, 1, 1, 0.549397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418799,-99) , 
9, -1.5395, 1, 0, 0.469487,-99) , 
7, 0.148534, 0, 0, 0.521579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475767,-99) , 
6, -0.141903, 1, 0, 0.500607,-99) , 
NN(
0, 
0, 
-1, -0.427997, 0, -1, 0.456033,-99) , 
0, 0.500947, 1, 0, 0.488413,-99) , 
6, -951.286, 1, 0, 0.499647,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.045921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491071,-99) , 
3, 2.01147, 1, 0, 0.5079,-99) , 
0, 0.489519, 1, 0, 0.510901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388735,-99) , 
3, 8.03376, 1, 0, 0.505848,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.042161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431452,-99) , 
7, -1.28249, 0, 0, 0.505668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456847,-99) , 
7, -0.144496, 1, 0, 0.474341,-99) , 
0, 0.5019, 1, 0, 0.499226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432061,-99) , 
2, -0.205653, 0, 0, 0.495551,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0667804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46945,-99) , 
0, 0.49809, 0, 0, 0.49219,-99) , 
7, 0.535271, 0, 0, 0.501754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48824,-99) , 
6, -951.286, 1, 0, 0.507349,-99) , 
NN(
0, 
0, 
-1, 1.15408, 0, -1, 0.459635,-99) , 
0, 0.500949, 0, 0, 0.471802,-99) , 
9, -0.474857, 1, 0, 0.485,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0390728);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.29734, 0, 1, 0.5707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492081,-99) , 
9, -1.32057, 1, 0, 0.495756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415291,-99) , 
7, -0.573822, 0, 0, 0.490318,-99) , 
9, -1.80319, 1, 0, 0.495911,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.031761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506012, 1, 1, 0.545377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4553,-99) , 
2, -0.0597075, 0, 0, 0.495526,-99) , 
0, 0.505027, 0, 0, 0.498591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422289,-99) , 
0, 0.48952, 0, 0, 0.495963,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0577882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494113,-99) , 
0, 0.495756, 0, 0, 0.505853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46858,-99) , 
7, -0.429294, 1, 0, 0.479121,-99) , 
0, 0.496412, 1, 0, 0.488144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414143,-99) , 
0, 0.489519, 0, 0, 0.485526,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.079904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493121,-99) , 
7, 1.91023, 1, 0, 0.530789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478202,-99) , 
0, 0.499044, 1, 0, 0.527678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464936,-99) , 
6, 0.715221, 0, 0, 0.48319,-99) , 
6, -951.286, 1, 0, 0.497147,-99) , 
8, -1.31114, 0, 0, 0.504903,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0596722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550923,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0434671, 0, 1, 0.521034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452817,-99) , 
0, 0.499042, 0, 0, 0.479017,-99) , 
9, -0.378678, 1, 0, 0.50141,-99) , 
9, 0.858016, 0, 0, 0.507417,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0272139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.68412, 0, 1, 0.510472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426687,-99) , 
3, 7.42073, 1, 0, 0.506297,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0692977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.25681, 1, 1, 0.564634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483786,-99) , 
9, 0.092379, 0, 0, 0.50125,-99) , 
9, -0.651538, 1, 0, 0.512175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442101,-99) , 
8, -3.80571, 1, 0, 0.46021,-99) , 
3, 5.32035, 0, 0, 0.476339,-99) , 
9, -1.06263, 0, 0, 0.503437,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0646793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474062,-99) , 
6, -1.03768, 0, 0, 0.513437,-99) , 
6, 2.1431, 0, 0, 0.517457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46057,-99) , 
0, 0.496187, 0, 0, 0.506948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423673,-99) , 
0, 0.496189, 1, 0, 0.45133,-99) , 
7, 0.140596, 0, 0, 0.488048,-99) , 
6, -951.286, 0, 0, 0.507273,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0548224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00442927, 0, 1, 0.52093,-99) , 
NN(
0, 
0, 
-1, 1.4853, 1, -1, 0.457547,-99) , 
8, -1.49062, 1, 0, 0.501925,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.048312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488342,-99) , 
8, -2.02008, 1, 0, 0.504329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38869,-99) , 
7, 0.229176, 0, 0, 0.465398,-99) , 
2, 0.0547267, 1, 0, 0.496969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45539,-99) , 
9, -2.30938, 1, 0, 0.485021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413936,-99) , 
8, -3.64242, 1, 0, 0.453968,-99) , 
8, -3.33279, 0, 0, 0.492834,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0686753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.595783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448595,-99) , 
3, 1.55985, 1, 0, 0.480411,-99) , 
7, -0.918705, 0, 0, 0.53816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493162,-99) , 
8, -1.50723, 1, 0, 0.512379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470393,-99) , 
9, -1.15739, 1, 0, 0.47674,-99) , 
7, 1.52998, 0, 0, 0.486401,-99) , 
7, -0.42888, 1, 0, 0.494265,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.050711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437559, 0, 1, 0.574242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495359,-99) , 
0, 0.500941, 1, 0, 0.548588,-99) , 
NN(
NN(
0, 
0, 
-1, 0.481831, 1, 1, 0.57738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471942,-99) , 
0, 0.499043, 0, 0, 0.484581,-99) , 
1, -0.00532441, 1, 0, 0.489969,-99) , 
2, -0.080455, 1, 0, 0.497807,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.051752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.578362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491587,-99) , 
7, 1.00155, 0, 0, 0.513954,-99) , 
6, -951.286, 1, 0, 0.533746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495788,-99) , 
2, -0.16325, 1, 0, 0.501492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416216,-99) , 
3, 6.31836, 1, 0, 0.494533,-99) , 
1, -0.000480877, 1, 0, 0.51045,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0580906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.21522, 0, 1, 0.570408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423505,-99) , 
4, 0.999887, 0, 0, 0.498131,-99) , 
0, 0.493328, 1, 0, 0.508184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421353,-99) , 
4, 0.999524, 0, 0, 0.500444,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0633097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474757,-99) , 
0, 0.499996, 1, 0, 0.509443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461166,-99) , 
9, 0.0670839, 1, 0, 0.476973,-99) , 
7, 0.917112, 1, 0, 0.497068,-99) , 
7, 2.14212, 0, 0, 0.502285,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0635113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499494,-99) , 
9, -1.98782, 1, 0, 0.609182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476005,-99) , 
8, -1.71327, 0, 0, 0.489502,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.438372,-99) , 
2, 0.0558236, 1, 0, 0.479833,-99) , 
8, -3.37758, 1, 0, 0.488163,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0595517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451182,-99) , 
3, 0.546745, 1, 0, 0.536137,-99) , 
NN(
0, 
0, 
-1, 2.12439, 0, -1, 0.482006,-99) , 
3, 0.650339, 1, 0, 0.488675,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.417201,-99) , 
3, 5.80978, 1, 0, 0.481715,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0674491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.15418, 1, 1, 0.543873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465761,-99) , 
9, 0.951822, 0, 0, 0.499068,-99) , 
7, 1.62807, 1, 0, 0.528281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599013,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.483027,-99) , 
7, 0.667798, 0, 0, 0.491818,-99) , 
8, -2.29059, 0, 0, 0.513589,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0720367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484213,-99) , 
9, -0.20659, 1, 0, 0.519933,-99) , 
8, -1.37772, 0, 0, 0.528176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461383,-99) , 
9, 1.07696, 1, 0, 0.522244,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0707193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0104597, 0, 1, 0.534002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47119,-99) , 
9, -1.80604, 1, 0, 0.477455,-99) , 
3, 2.20841, 1, 0, 0.50954,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.436392,-99) , 
3, 6.36787, 1, 0, 0.503792,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0506466);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.549234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48396,-99) , 
5, 0.00342686, 0, 0, 0.49568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424512,-99) , 
5, 0.0119971, 1, 0, 0.493326,-99) , 
0, 0.491424, 1, 0, 0.497586,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0721325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.80977, 1, 1, 0.600671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432522,-99) , 
8, -2.32206, 0, 0, 0.519608,-99) , 
9, -0.936383, 1, 0, 0.539994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488432,-99) , 
8, -1.67871, 1, 0, 0.510419,-99) , 
NN(
0, 
0, 
-1, 1.01796, 0, -1, 0.436192,-99) , 
8, -3.00494, 0, 0, 0.497379,-99) , 
3, 3.24099, 0, 0, 0.50899,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0554061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.220161, 0, 1, 0.542751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479752,-99) , 
7, 1.10058, 0, 0, 0.495388,-99) , 
9, -1.06724, 1, 0, 0.50221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361836,-99) , 
0, 0.500539, 0, 0, 0.439816,-99) , 
0, 0.496185, 1, 0, 0.467766,-99) , 
8, -3.28722, 0, 0, 0.498758,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0908829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483554,-99) , 
4, 0.999998, 0, 0, 0.527676,-99) , 
NN(
0, 
0, 
-1, -0.423695, 0, -1, 0.45918,-99) , 
4, 0.999955, 0, 0, 0.510531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476786,-99) , 
4, 0.999525, 0, 0, 0.507498,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.042435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425635,-99) , 
9, -1.5308, 1, 0, 0.500129,-99) , 
2, -0.0121806, 1, 0, 0.545825,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0043322, 0, -1, 0.494982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418751,-99) , 
9, -0.231106, 1, 0, 0.458952,-99) , 
2, 0.0588517, 1, 0, 0.488087,-99) , 
8, -3.07608, 1, 0, 0.495356,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0781534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0496567, 1, 1, 0.533764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415174,-99) , 
4, 0.999864, 0, 0, 0.521948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459482,-99) , 
4, 0.999525, 0, 0, 0.516512,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.056272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458057,-99) , 
0, 0.498842, 1, 0, 0.5109,-99) , 
0, 0.499404, 0, 0, 0.514761,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506282, 1, 1, 0.531991,-99) , 
NN(
0, 
0, 
-1, 0.718882, 1, -1, 0.458414,-99) , 
0, 0.505073, 0, 0, 0.47032,-99) , 
0, 0.499994, 1, 0, 0.499066,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0466557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00979085, 0, 1, 0.51922,-99) , 
NN(
0, 
0, 
-1, -2.01876, 1, -1, 0.458473,-99) , 
8, -3.43171, 0, 0, 0.514458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442176,-99) , 
3, 6.6809, 1, 0, 0.509865,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0614208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41624, 1, 1, 0.555032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485127,-99) , 
7, 0.0604378, 0, 0, 0.510306,-99) , 
0, 0.5019, 0, 0, 0.519066,-99) , 
NN(
NN(
0, 
0, 
-1, 2.24671, 0, 1, 0.518349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431316,-99) , 
9, 0.628293, 0, 0, 0.488325,-99) , 
9, 0.297347, 1, 0, 0.510101,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0652316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.579264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468437,-99) , 
0, 0.497136, 0, 0, 0.50684,-99) , 
7, -0.909326, 0, 0, 0.540143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468294,-99) , 
0, 0.502852, 0, 0, 0.476036,-99) , 
9, 0.798471, 0, 0, 0.483832,-99) , 
9, -1.44137, 1, 0, 0.490961,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0553239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443413,-99) , 
9, -0.217576, 1, 0, 0.495226,-99) , 
8, -1.71761, 0, 0, 0.501454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426471,-99) , 
8, -1.10172, 1, 0, 0.474942,-99) , 
7, 1.5703, 1, 0, 0.495287,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0549114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454519,-99) , 
7, -0.714669, 0, 0, 0.508769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407368,-99) , 
0, 0.506253, 1, 0, 0.502488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556472,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.470977,-99) , 
8, -3.23322, 1, 0, 0.479157,-99) , 
0, 0.49809, 0, 0, 0.490825,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0739484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.398689, 1, 1, 0.553146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491614,-99) , 
3, 3.22774, 0, 0, 0.50328,-99) , 
2, -0.0341477, 1, 0, 0.51424,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 1, 1, 0.534665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378983,-99) , 
6, -951.286, 1, 0, 0.421807,-99) , 
2, 0.00649022, 0, 0, 0.469509,-99) , 
0, 0.500947, 1, 0, 0.501722,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0595138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.695703, 1, 1, 0.53595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444793,-99) , 
3, 3.22774, 1, 0, 0.493609,-99) , 
NN(
0, 
0, 
-1, 1.28985, 1, -1, 0.457938,-99) , 
6, -951.286, 0, 0, 0.481361,-99) , 
2, -0.0843733, 1, 0, 0.488316,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0816785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455179,-99) , 
0, 0.491242, 0, 0, 0.526054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440295,-99) , 
0, 0.497046, 1, 0, 0.472651,-99) , 
8, -1.31114, 1, 0, 0.512685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559264,-99) , 
NN(
0, 
0, 
-1, 0.730783, 0, -1, 0.424078,-99) , 
0, 0.506253, 0, 0, 0.447139,-99) , 
0, 0.502852, 1, 0, 0.501848,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0863716);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0470355, 1, 1, 0.544862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462878,-99) , 
3, 3.78082, 1, 0, 0.528499,-99) , 
NN(
0, 
0, 
-1, -0.00856601, 1, -1, 0.461322,-99) , 
2, 0.00533248, 0, 0, 0.495849,-99) , 
2, -0.0676326, 1, 0, 0.503469,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0600623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.727435, 1, 1, 0.521347,-99) , 
NN(
0, 
0, 
-1, -0.0372428, 0, -1, 0.47015,-99) , 
7, 0.144476, 0, 0, 0.504706,-99) , 
NN(
0, 
0, 
-1, -1.28552, 0, -1, 0.454773,-99) , 
0, 0.500947, 1, 0, 0.490792,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0430527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.44123, 1, 1, 0.566803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450075,-99) , 
2, -0.0829858, 0, 0, 0.494804,-99) , 
7, -0.264995, 1, 0, 0.506258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401464,-99) , 
7, -1.57128, 0, 0, 0.50297,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.063585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481431,-99) , 
8, -1.39951, 0, 0, 0.498095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434436,-99) , 
0, 0.495596, 1, 0, 0.475116,-99) , 
0, 0.49809, 0, 0, 0.486737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524815,-99) , 
NN(
0, 
0, 
-1, -1.84125, 1, -1, 0.429417,-99) , 
7, -0.602019, 0, 0, 0.454477,-99) , 
9, -1.42761, 0, 0, 0.482042,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.051376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.543994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483634,-99) , 
7, 1.52464, 0, 0, 0.490355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450656,-99) , 
8, -1.12685, 1, 0, 0.483406,-99) , 
1, -0.00526335, 1, 0, 0.486866,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0625477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479744,-99) , 
0, 0.497138, 0, 0, 0.503645,-99) , 
8, -1.51713, 0, 0, 0.511283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424547,-99) , 
8, -1.11383, 1, 0, 0.46002,-99) , 
7, 1.57106, 1, 0, 0.499581,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0826751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.603056, 0, 1, 0.574298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438779,-99) , 
6, -951.286, 0, 0, 0.479971,-99) , 
0, 0.498089, 1, 0, 0.522289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457963,-99) , 
7, 0.509575, 0, 0, 0.504482,-99) , 
NN(
0, 
0, 
-1, -0.996918, 0, -1, 0.463185,-99) , 
8, -1.85021, 1, 0, 0.479732,-99) , 
7, 0.144445, 1, 0, 0.492587,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0399002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
4, 0.999977, 0, 0, 0.533485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39281,-99) , 
8, -3.91095, 0, 0, 0.499554,-99) , 
0, 0.495233, 1, 0, 0.507983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449892,-99) , 
4, 0.999525, 0, 0, 0.502534,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0594241);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455744,-99) , 
7, -0.144496, 0, 0, 0.50589,-99) , 
NN(
0, 
0, 
-1, 0.4998, 1, -1, 0.470784,-99) , 
0, 0.500267, 0, 0, 0.4823,-99) , 
0, 0.490471, 1, 0, 0.485931,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.030993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590514,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00205243, 1, 1, 0.56184,-99) , 
NN(
0, 
0, 
-1, -3.82261, 0, -1, 0.490672,-99) , 
0, 0.491061, 1, 0, 0.495135,-99) , 
0, 0.505709, 0, 0, 0.49865,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0408961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478387,-99) , 
0, 0.49748, 1, 0, 0.490023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429875,-99) , 
0, 0.491243, 0, 0, 0.487112,-99) , 
0, 0.489519, 1, 0, 0.489392,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0790735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417459,-99) , 
3, 6.37086, 1, 0, 0.522969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451569,-99) , 
6, -951.286, 1, 0, 0.471728,-99) , 
8, -1.78274, 1, 0, 0.50182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46316,-99) , 
0, 0.502535, 1, 0, 0.47933,-99) , 
NN(
0, 
0, 
-1, -3.20175, 1, -1, 0.40036,-99) , 
8, -2.6903, 0, 0, 0.455489,-99) , 
0, 0.500947, 1, 0, 0.48882,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0780731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501582, 1, 1, 0.554547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418946,-99) , 
7, -0.717012, 0, 0, 0.536229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497213,-99) , 
0, 0.49487, 0, 0, 0.526636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465539,-99) , 
7, -0.713494, 1, 0, 0.472422,-99) , 
0, 0.497138, 1, 0, 0.501712,-99) , 
0, 0.500947, 0, 0, 0.510833,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.059703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.431755, 0, 1, 0.553564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492466,-99) , 
9, 0.214425, 1, 0, 0.513342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478772,-99) , 
8, -1.74724, 0, 0, 0.490455,-99) , 
7, 1.23544, 0, 0, 0.499239,-99) , 
9, -1.22273, 1, 0, 0.508859,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0441516);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48709,-99) , 
0, 0.492104, 1, 0, 0.49073,-99) , 
NN(
0, 
0, 
-1, 0.489247, 0, -1, 0.428539,-99) , 
0, 0.490471, 0, 0, 0.487108,-99) , 
2, 0.198873, 0, 0, 0.492343,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0330699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430302,-99) , 
7, -0.863319, 0, 0, 0.503714,-99) , 
9, -2.165, 1, 0, 0.507291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443012,-99) , 
0, 0.505709, 1, 0, 0.504166,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0529937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483339,-99) , 
7, 1.09372, 0, 0, 0.500115,-99) , 
9, -1.68982, 1, 0, 0.50457,-99) , 
9, -2.19447, 1, 0, 0.508103,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0654028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.139732, 1, 1, 0.534451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43724,-99) , 
8, -3.13372, 0, 0, 0.498113,-99) , 
0, 0.499043, 0, 0, 0.512944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489587,-99) , 
8, -2.44014, 1, 0, 0.518628,-99) , 
NN(
0, 
0, 
-1, 3.02444, 1, -1, 0.389143,-99) , 
0, 0.498089, 1, 0, 0.449047,-99) , 
2, 0.0564175, 1, 0, 0.500389,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0298038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00815785, 0, 1, 0.613023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40415,-99) , 
8, -3.81162, 0, 0, 0.496046,-99) , 
5, 0.0059072, 0, 0, 0.504352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394398,-99) , 
5, 0.013785, 1, 0, 0.501212,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0621804);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465722,-99) , 
7, 1.2712, 0, 0, 0.475343,-99) , 
8, -0.989866, 0, 0, 0.482393,-99) , 
2, -0.223915, 1, 0, 0.485958,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.047842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484955,-99) , 
4, 0.999524, 1, 0, 0.490469,-99) , 
1, 0.00564639, 0, 0, 0.494883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407199,-99) , 
5, 0.0107825, 1, 0, 0.49144,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0712205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.50763, 0, 1, 0.556718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480731,-99) , 
0, 0.49945, 0, 0, 0.506256,-99) , 
0, 0.496185, 1, 0, 0.522129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483535,-99) , 
9, 0.556511, 1, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426526,-99) , 
6, -951.286, 0, 0, 0.473743,-99) , 
9, 0.056699, 1, 0, 0.5045,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.058824);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.702278, 1, 1, 0.533931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545051,-99) , 
NN(
0, 
0, 
-1, 1.13099, 0, -1, 0.476661,-99) , 
7, 0.82027, 1, 0, 0.481681,-99) , 
7, 0.711506, 1, 0, 0.507492,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0524065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.628165, 1, 1, 0.516734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439879,-99) , 
2, 0.0605006, 1, 0, 0.489908,-99) , 
3, 3.75356, 1, 0, 0.510668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520654,-99) , 
NN(
0, 
0, 
-1, -3.83526, 0, -1, 0.418189,-99) , 
7, -0.606693, 0, 0, 0.443169,-99) , 
9, -1.44464, 0, 0, 0.500625,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0627446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498361,-99) , 
2, 0.0127977, 0, 0, 0.513727,-99) , 
3, 2.83768, 0, 0, 0.518741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426649,-99) , 
6, -951.286, 0, 0, 0.5092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429738,-99) , 
3, 5.97366, 0, 0, 0.449469,-99) , 
1, 0.000537779, 0, 0, 0.474101,-99) , 
3, 3.12323, 1, 0, 0.505367,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0506598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.67135, 0, 1, 0.602038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482694,-99) , 
7, -0.394333, 0, 0, 0.51904,-99) , 
0, 0.499041, 1, 0, 0.563029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494873,-99) , 
7, 0.00573679, 0, 0, 0.530401,-99) , 
NN(
0, 
0, 
-1, -2.61636, 0, -1, 0.488783,-99) , 
9, -0.824035, 1, 0, 0.495042,-99) , 
8, -2.84475, 1, 0, 0.50685,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0625241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.385151, 1, 1, 0.559852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485329,-99) , 
6, -951.286, 1, 0, 0.49924,-99) , 
5, 0.00328219, 0, 0, 0.51257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371184,-99) , 
5, 0.013785, 1, 0, 0.508245,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0572565);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.37482, 0, 1, 0.610612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431555,-99) , 
0, 0.494916, 0, 0, 0.516846,-99) , 
NN(
0, 
0, 
-1, -2.6069, 0, -1, 0.475551,-99) , 
0, 0.494281, 0, 0, 0.507977,-99) , 
8, -3.48018, 1, 0, 0.513676,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0409271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493246,-99) , 
2, -0.0585661, 0, 0, 0.552296,-99) , 
NN(
0, 
0, 
-1, -3.77184, 1, 1, 0.509632,-99) , 
0, 0.494554, 1, 0, 0.517008,-99) , 
NN(
0, 
0, 
-1, 0.489383, 0, -1, 0.430329,-99) , 
0, 0.490471, 0, 0, 0.512148,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0656673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495932,-99) , 
8, -1.67185, 1, 0, 0.518814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427284,-99) , 
7, 0.580578, 0, 0, 0.480387,-99) , 
0, 0.5019, 1, 0, 0.51094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402375,-99) , 
0, 0.498097, 0, 0, 0.460481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382257,-99) , 
9, -1.89064, 1, 0, 0.429935,-99) , 
9, -1.63316, 0, 0, 0.502088,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.033279);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490154, 0, 1, 0.560769,-99) , 
NN(
NN(
0, 
0, 
-1, -2.42217, 1, 1, 0.526847,-99) , 
NN(
0, 
0, 
-1, 0.494508, 0, -1, 0.490342,-99) , 
2, 0.0501505, 0, 0, 0.497256,-99) , 
0, 0.491424, 1, 0, 0.502193,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0830879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49688,-99) , 
4, 0.999999, 0, 0, 0.539892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422544,-99) , 
3, 2.7836, 1, 0, 0.473366,-99) , 
4, 0.999977, 0, 0, 0.515149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439763,-99) , 
4, 0.999524, 0, 0, 0.507392,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0516087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493323,-99) , 
7, 1.00114, 0, 0, 0.510035,-99) , 
0, 0.499405, 0, 0, 0.514518,-99) , 
NN(
NN(
0, 
0, 
-1, 0.432092, 0, 1, 0.522186,-99) , 
NN(
0, 
0, 
-1, 0.335455, 1, -1, 0.464507,-99) , 
0, 0.505074, 0, 0, 0.474587,-99) , 
0, 0.499995, 1, 0, 0.500831,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.075962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485538,-99) , 
4, 0.999999, 0, 0, 0.522946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38922,-99) , 
9, -1.39495, 0, 0, 0.486011,-99) , 
4, 0.999977, 0, 0, 0.509428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440642,-99) , 
4, 0.999525, 0, 0, 0.503137,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0695937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492983,-99) , 
9, 0.189155, 1, 0, 0.525058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435413,-99) , 
0, 0.502853, 0, 0, 0.477027,-99) , 
0, 0.500948, 1, 0, 0.512067,-99) , 
8, -3.75713, 1, 0, 0.516698,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.089124);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503803, 0, 1, 0.543465,-99) , 
NN(
NN(
0, 
0, 
-1, 0.397225, 1, 1, 0.578727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461549,-99) , 
2, -0.0183279, 1, 0, 0.485151,-99) , 
3, 0.575902, 1, 0, 0.496828,-99) , 
3, 3.3878, 0, 0, 0.508648,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.10313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480326,-99) , 
0, 0.497128, 1, 0, 0.498923,-99) , 
8, -1.54405, 1, 0, 0.512416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433395,-99) , 
9, -0.348197, 1, 0, 0.485451,-99) , 
NN(
0, 
0, 
-1, 0.192688, 1, -1, 0.442527,-99) , 
7, 0.528761, 0, 0, 0.456168,-99) , 
8, -1.7188, 0, 0, 0.477095,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0411565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48965,-99) , 
9, -1.56258, 1, 0, 0.493868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407807,-99) , 
8, -3.75713, 0, 0, 0.489494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406976,-99) , 
1, -0.00699674, 0, 0, 0.485701,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0373337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.87804, 0, 1, 0.594067,-99) , 
NN(
NN(
0, 
0, 
-1, -1.0339, 0, 1, 0.511529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429464,-99) , 
0, 0.48952, 0, 0, 0.508632,-99) , 
8, -3.43478, 1, 0, 0.513991,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0804336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.1652, 1, 1, 0.539806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456006,-99) , 
4, 0.999887, 0, 0, 0.529493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461625,-99) , 
4, 0.999524, 0, 0, 0.522814,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0759709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484131,-99) , 
4, 0.999999, 0, 0, 0.521308,-99) , 
NN(
0, 
0, 
-1, -3.26462, 0, -1, 0.476531,-99) , 
4, 0.999977, 0, 0, 0.504976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451346,-99) , 
4, 0.999524, 0, 0, 0.499961,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0506381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.16461, 0, 1, 0.52386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404682,-99) , 
7, 0.455484, 0, 0, 0.471547,-99) , 
7, -0.14233, 1, 0, 0.48877,-99) , 
0, 0.492376, 0, 0, 0.51972,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0522453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.618936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494482,-99) , 
7, -0.314727, 0, 0, 0.536545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491758,-99) , 
0, 0.492377, 1, 0, 0.498078,-99) , 
8, -2.44839, 1, 0, 0.508124,-99) , 
8, -3.43226, 1, 0, 0.514951,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0557416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494576,-99) , 
8, -2.14296, 1, 0, 0.514666,-99) , 
NN(
0, 
0, 
-1, 0.143625, 0, -1, 0.458983,-99) , 
0, 0.493328, 0, 0, 0.505069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509897,-99) , 
NN(
0, 
0, 
-1, 0.505982, 0, -1, 0.403976,-99) , 
6, -951.286, 1, 0, 0.438276,-99) , 
0, 0.504757, 1, 0, 0.499677,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0541356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.30994, 1, 1, 0.550459,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499362, 0, 1, 0.542804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493452,-99) , 
0, 0.50317, 0, 0, 0.501724,-99) , 
8, -1.44568, 0, 0, 0.513431,-99) , 
0, 0.494281, 1, 0, 0.520693,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0657572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.103707, 0, 1, 0.530663,-99) , 
NN(
0, 
0, 
-1, 0.0305693, 1, -1, 0.454329,-99) , 
4, 0.999932, 0, 0, 0.516391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473576,-99) , 
4, 0.999525, 0, 0, 0.512517,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0742672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.103869, 1, 1, 0.571963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482383,-99) , 
9, -0.656435, 1, 0, 0.511683,-99) , 
7, 1.13527, 0, 0, 0.52161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438334,-99) , 
8, -1.15868, 1, 0, 0.471192,-99) , 
7, 1.57046, 1, 0, 0.5099,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0523709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499958,-99) , 
7, 1.00242, 0, 0, 0.508193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438717,-99) , 
7, 1.75553, 0, 0, 0.471093,-99) , 
9, 0.0673047, 1, 0, 0.497901,-99) , 
8, -0.894493, 0, 0, 0.506666,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0519138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478349,-99) , 
2, 0.0263997, 1, 0, 0.549215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488673,-99) , 
8, -1.78806, 0, 0, 0.507193,-99) , 
7, -0.428591, 1, 0, 0.513495,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.469362,-99) , 
0, 0.504757, 1, 0, 0.510326,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0748322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.73465, 1, 1, 0.530799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447737,-99) , 
9, 0.928745, 1, 0, 0.515777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458278,-99) , 
7, -0.744619, 1, 0, 0.471706,-99) , 
1, 0.00371048, 0, 0, 0.482897,-99) , 
9, -0.625955, 0, 0, 0.502667,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0809659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21026, 1, 1, 0.548687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457433,-99) , 
9, -1.80385, 1, 0, 0.496767,-99) , 
7, -0.385052, 0, 0, 0.527159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482915,-99) , 
0, 0.496187, 0, 0, 0.517418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463717,-99) , 
9, -0.545011, 1, 0, 0.474984,-99) , 
9, 0.475448, 0, 0, 0.490207,-99) , 
7, 0.430254, 1, 0, 0.505019,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0663135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.11796, 1, 1, 0.574784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469682,-99) , 
7, -0.28167, 0, 0, 0.523627,-99) , 
9, -1.60884, 1, 0, 0.52835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488573,-99) , 
6, -951.286, 1, 0, 0.512758,-99) , 
NN(
0, 
0, 
-1, 1.37924, 0, -1, 0.465463,-99) , 
7, 0.999221, 1, 0, 0.493382,-99) , 
0, 0.499995, 1, 0, 0.51608,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0667248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0810311, 0, 1, 0.528666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466114,-99) , 
8, -3.12441, 1, 0, 0.476472,-99) , 
8, -1.02392, 0, 0, 0.484685,-99) , 
0, 0.494281, 1, 0, 0.493247,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0704568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479692,-99) , 
0, 0.493059, 0, 0, 0.525295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469542,-99) , 
9, -1.06488, 1, 0, 0.481417,-99) , 
0, 0.501901, 1, 0, 0.516036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395592,-99) , 
8, -3.82957, 0, 0, 0.510898,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0439481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.34163, 0, 1, 0.561017,-99) , 
NN(
NN(
0, 
0, 
-1, -0.645812, 0, 1, 0.542424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48646,-99) , 
7, 0.804135, 0, 0, 0.504504,-99) , 
7, -0.293118, 1, 0, 0.509156,-99) , 
8, -3.46883, 1, 0, 0.512106,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0675924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490506,-99) , 
9, 0.176563, 1, 0, 0.526823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471707,-99) , 
0, 0.495233, 1, 0, 0.487751,-99) , 
8, -2.28916, 0, 0, 0.508923,-99) , 
NN(
0, 
0, 
-1, 2.23748, 0, -1, 0.457813,-99) , 
7, 1.85646, 1, 0, 0.501193,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0694153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41627, 0, 1, 0.556312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481832,-99) , 
0, 0.500947, 0, 0, 0.493836,-99) , 
7, 0.316716, 1, 0, 0.508431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520218,-99) , 
NN(
0, 
0, 
-1, 0.500941, 1, -1, 0.43355,-99) , 
2, 0.0716363, 0, 0, 0.447225,-99) , 
8, -2.9418, 0, 0, 0.497264,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0700341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500539, 0, 1, 0.537541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430033,-99) , 
0, 0.505708, 1, 0, 0.532374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498104,-99) , 
9, 0.624735, 1, 0, 0.513047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451904,-99) , 
0, 0.497149, 0, 0, 0.487574,-99) , 
8, -1.7188, 1, 0, 0.514599,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0799586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448574,-99) , 
9, -1.57388, 0, 0, 0.538064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462188,-99) , 
7, 0.999337, 1, 0, 0.495312,-99) , 
3, 3.24833, 1, 0, 0.525251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
8, -1.33651, 1, 0, 0.51561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448929,-99) , 
0, 0.491242, 1, 0, 0.461096,-99) , 
8, -1.82854, 0, 0, 0.482861,-99) , 
0, 0.497138, 0, 0, 0.507454,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0476692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0365749, 0, 1, 0.526684,-99) , 
NN(
0, 
0, 
-1, 4.30697, 1, -1, 0.481387,-99) , 
3, 1.49613, 1, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436667,-99) , 
3, 7.39984, 1, 0, 0.497063,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0517998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 0, 1, 0.571108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401612,-99) , 
8, -2.69415, 0, 0, 0.504245,-99) , 
9, -1.05307, 1, 0, 0.510419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43001,-99) , 
7, -1.46767, 0, 0, 0.507479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355526,-99) , 
0, 0.497141, 0, 0, 0.428322,-99) , 
8, -3.27477, 1, 0, 0.468621,-99) , 
8, -2.92641, 0, 0, 0.503065,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0827988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441156,-99) , 
0, 0.49809, 0, 0, 0.513268,-99) , 
8, -3.33032, 0, 0, 0.575391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418079,-99) , 
7, -0.21322, 0, 0, 0.512082,-99) , 
NN(
0, 
0, 
-1, -0.712762, 0, -1, 0.475717,-99) , 
8, -2.52417, 1, 0, 0.482619,-99) , 
7, -0.428591, 1, 0, 0.495346,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0491809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473805,-99) , 
3, 5.27885, 1, 0, 0.538161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48955,-99) , 
9, 0.782065, 0, 0, 0.497519,-99) , 
2, -0.0461119, 1, 0, 0.506217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444769,-99) , 
2, 0.195553, 1, 0, 0.502713,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0738895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488859,-99) , 
8, -2.40496, 0, 0, 0.554576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465946,-99) , 
0, 0.500947, 1, 0, 0.499509,-99) , 
8, -1.86055, 1, 0, 0.518875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546874,-99) , 
NN(
0, 
0, 
-1, -0.660855, 0, -1, 0.453041,-99) , 
1, -0.00249289, 1, 0, 0.467775,-99) , 
8, -2.49571, 0, 0, 0.502835,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0439915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465136,-99) , 
9, -0.0965958, 1, 0, 0.493483,-99) , 
7, 1.84118, 0, 0, 0.499768,-99) , 
8, -1.03939, 0, 0, 0.506407,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0694969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00103328, 1, 1, 0.531408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384483,-99) , 
9, -1.78178, 1, 0, 0.448438,-99) , 
9, -1.37468, 0, 0, 0.517038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453322,-99) , 
6, -951.286, 0, 0, 0.522955,-99) , 
NN(
0, 
0, 
-1, -0.0034466, 0, -1, 0.476167,-99) , 
9, -0.938086, 1, 0, 0.488142,-99) , 
0, 0.499996, 0, 0, 0.49784,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0570042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479882,-99) , 
0, 0.499041, 1, 0, 0.511384,-99) , 
7, 0.332024, 0, 0, 0.520369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455905,-99) , 
0, 0.49809, 1, 0, 0.477801,-99) , 
8, -0.933736, 0, 0, 0.488213,-99) , 
9, -0.698861, 1, 0, 0.499096,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.036924);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621894,-99) , 
NN(
NN(
0, 
0, 
-1, -1.1811, 0, 1, 0.51055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459016,-99) , 
9, 1.01444, 1, 0, 0.505048,-99) , 
9, -2.01927, 1, 0, 0.510079,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0570531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502853, 0, 1, 0.537938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474991,-99) , 
3, 1.34404, 0, 0, 0.4976,-99) , 
3, 3.77424, 0, 0, 0.506543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383678,-99) , 
7, -1.28628, 0, 0, 0.500837,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0650725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489884, 1, 1, 0.553618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4798,-99) , 
2, 0.085201, 0, 0, 0.488361,-99) , 
0, 0.492379, 1, 0, 0.494871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415578,-99) , 
4, 0.999525, 0, 0, 0.487693,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0642351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440893,-99) , 
2, -0.0651771, 0, 0, 0.541532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473682,-99) , 
7, 0.998415, 1, 0, 0.497177,-99) , 
0, 0.495551, 1, 0, 0.508365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41587,-99) , 
0, 0.489519, 0, 0, 0.504987,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0457113);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552568,-99) , 
NN(
0, 
0, 
-1, -1.63875, 1, -1, 0.482652,-99) , 
7, 1.55501, 0, 0, 0.491152,-99) , 
8, -1.11788, 0, 0, 0.497375,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0502583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495291,-99) , 
7, 1.00362, 0, 0, 0.521622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485941,-99) , 
1, 0.00630362, 0, 0, 0.491287,-99) , 
5, 0.00171941, 1, 0, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409415,-99) , 
5, 0.0120366, 1, 0, 0.502874,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0330918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490896,-99) , 
0, 0.492376, 1, 0, 0.495534,-99) , 
2, -0.186678, 1, 0, 0.498727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394865,-99) , 
1, 0.010337, 1, 0, 0.496013,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0528946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.89802, 0, 1, 0.523574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459154,-99) , 
7, 0.431189, 1, 0, 0.478766,-99) , 
6, -0.713559, 0, 0, 0.511335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486876,-99) , 
0, 0.494511, 1, 0, 0.49697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397286,-99) , 
0, 0.491426, 0, 0, 0.487589,-99) , 
6, -951.286, 0, 0, 0.503291,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.072078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.88206, 1, 1, 0.537754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466654,-99) , 
8, -1.85592, 1, 0, 0.498415,-99) , 
0, 0.501628, 1, 0, 0.524962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451719,-99) , 
0, 0.489363, 0, 0, 0.517534,-99) , 
NN(
0, 
0, 
-1, -0.00136763, 0, -1, 0.457837,-99) , 
0, 0.493736, 1, 0, 0.487819,-99) , 
0, 0.496185, 0, 0, 0.512338,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0768594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.341503, 0, 1, 0.543718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48667,-99) , 
9, 0.574369, 1, 0, 0.532304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
2, 0.0543982, 1, 0, 0.533598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454504,-99) , 
2, 0.025889, 0, 0, 0.474311,-99) , 
0, 0.495233, 1, 0, 0.499574,-99) , 
0, 0.499042, 0, 0, 0.513227,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0710014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42946, 1, 1, 0.53121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466585,-99) , 
0, 0.498907, 1, 0, 0.496573,-99) , 
8, -2.63763, 0, 0, 0.522399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539958,-99) , 
NN(
0, 
0, 
-1, -0.641301, 0, -1, 0.42314,-99) , 
0, 0.489655, 1, 0, 0.458466,-99) , 
0, 0.492376, 0, 0, 0.514794,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0640766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480355,-99) , 
9, -0.218798, 0, 0, 0.509376,-99) , 
7, -0.431654, 1, 0, 0.519565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474097,-99) , 
0, 0.49351, 0, 0, 0.502066,-99) , 
NN(
0, 
0, 
-1, -0.71213, 0, -1, 0.459872,-99) , 
0, 0.497138, 1, 0, 0.482929,-99) , 
0, 0.500948, 0, 0, 0.492504,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0442336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467231,-99) , 
5, 0.00200166, 1, 0, 0.489857,-99) , 
5, 0.00700737, 0, 0, 0.494453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396275,-99) , 
5, 0.0147205, 1, 0, 0.491893,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0487298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.68997, 1, 1, 0.52452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499926,-99) , 
3, 2.30122, 1, 0, 0.54498,-99) , 
NN(
0, 
0, 
-1, 0.502853, 1, -1, 0.481501,-99) , 
6, 0.714492, 0, 0, 0.495269,-99) , 
6, -951.286, 1, 0, 0.505027,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0555247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30958, 1, 1, 0.545744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494925,-99) , 
3, 0.573437, 1, 0, 0.504363,-99) , 
2, -0.0086573, 1, 0, 0.519356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440961,-99) , 
9, -1.06003, 0, 0, 0.49184,-99) , 
NN(
0, 
0, 
-1, 0.499044, 0, -1, 0.424876,-99) , 
2, -0.0829858, 0, 0, 0.474823,-99) , 
3, 3.24099, 1, 0, 0.506784,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0657045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.701485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498553,-99) , 
9, -0.449429, 1, 0, 0.584137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461421,-99) , 
9, -1.21783, 0, 0, 0.485853,-99) , 
7, 0.499883, 0, 0, 0.504735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480926,-99) , 
2, -0.0338263, 1, 0, 0.48899,-99) , 
NN(
0, 
0, 
-1, -1.5438, 0, -1, 0.451964,-99) , 
3, 3.3878, 1, 0, 0.478389,-99) , 
8, -2.12647, 1, 0, 0.490049,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0328766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586942,-99) , 
NN(
0, 
0, 
-1, -0.69209, 0, -1, 0.487807,-99) , 
9, -2.21035, 1, 0, 0.490802,-99) , 
0, 0.505708, 0, 0, 0.493756,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0853771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999999, 0, 1, 0.545261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434194,-99) , 
1, -0.000280008, 0, 0, 0.478049,-99) , 
4, 0.999977, 0, 0, 0.52018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444079,-99) , 
4, 0.999524, 0, 0, 0.512651,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0468956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5251,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.475038,-99) , 
7, 1.55654, 0, 0, 0.481201,-99) , 
8, -1.06609, 0, 0, 0.486641,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0747985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486073,-99) , 
0, 0.499997, 1, 0, 0.535125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4651,-99) , 
0, 0.499042, 0, 0, 0.491909,-99) , 
3, 1.62328, 1, 0, 0.517605,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491966, 0, 1, 0.540371,-99) , 
NN(
0, 
0, 
-1, 5.69509, 1, -1, 0.472333,-99) , 
0, 0.495234, 1, 0, 0.487826,-99) , 
3, 2.98052, 1, 0, 0.50815,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0360519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.482061, 1, 1, 0.590751,-99) , 
NN(
NN(
0, 
0, 
-1, -3.43226, 1, 1, 0.505026,-99) , 
NN(
0, 
0, 
-1, -2.11364, 1, -1, 0.447355,-99) , 
0, 0.493328, 0, 0, 0.495413,-99) , 
0, 0.504757, 0, 0, 0.501608,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0758176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14254, 1, 1, 0.598885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382551,-99) , 
9, -1.84045, 1, 0, 0.487086,-99) , 
7, -0.649275, 0, 0, 0.5426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464707,-99) , 
7, 1.75609, 1, 0, 0.50472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43194,-99) , 
9, 0.144466, 0, 0, 0.468777,-99) , 
0, 0.494283, 0, 0, 0.497008,-99) , 
8, -2.84792, 1, 0, 0.505303,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.060518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462261,-99) , 
0, 0.498085, 0, 0, 0.552406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475476,-99) , 
2, 0.033993, 0, 0, 0.48382,-99) , 
2, 0.195039, 0, 0, 0.487319,-99) , 
9, -1.72411, 1, 0, 0.492166,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0591999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.599323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446429,-99) , 
7, -0.538569, 1, 0, 0.525035,-99) , 
7, -0.415464, 0, 0, 0.545544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451735,-99) , 
9, 1.08341, 1, 0, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386795,-99) , 
7, 0.00620632, 0, 0, 0.496561,-99) , 
7, -0.143426, 1, 0, 0.506865,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0682248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468567,-99) , 
7, -0.306455, 0, 0, 0.510127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477418,-99) , 
2, 0.0558236, 0, 0, 0.485958,-99) , 
7, 0.142454, 1, 0, 0.493043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424464,-99) , 
3, 7.39984, 1, 0, 0.489395,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0546349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458751,-99) , 
3, 1.91222, 1, 0, 0.563762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499618,-99) , 
9, -0.537618, 1, 0, 0.504255,-99) , 
1, 0.00376077, 0, 0, 0.510174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489051,-99) , 
7, -0.222279, 0, 0, 0.512972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425163,-99) , 
9, -1.48303, 1, 0, 0.448776,-99) , 
0, 0.499995, 0, 0, 0.469179,-99) , 
7, 0.428427, 0, 0, 0.493167,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0415095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492628,-99) , 
9, -2.24145, 1, 0, 0.508299,-99) , 
7, -0.281537, 0, 0, 0.524849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604813,-99) , 
NN(
0, 
0, 
-1, 0.75178, 0, -1, 0.486767,-99) , 
8, -2.87776, 1, 0, 0.491271,-99) , 
7, -0.145619, 1, 0, 0.498472,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0638645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0191328, 0, 1, 0.536665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483693,-99) , 
2, 0.0038641, 0, 0, 0.497758,-99) , 
3, 3.40838, 0, 0, 0.506168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480652,-99) , 
3, 2.62992, 1, 0, 0.5203,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.411538,-99) , 
2, 0.121851, 0, 0, 0.469045,-99) , 
2, 0.0547267, 1, 0, 0.498498,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0502955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53323, 1, 1, 0.524375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477308,-99) , 
0, 0.494418, 1, 0, 0.495852,-99) , 
0, 0.497139, 0, 0, 0.512664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404251,-99) , 
8, -3.81992, 0, 0, 0.507861,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0632382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455771,-99) , 
7, -1.32744, 0, 0, 0.540773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437247,-99) , 
7, 0.256783, 0, 0, 0.501018,-99) , 
9, -1.05896, 1, 0, 0.50926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528923,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.448702,-99) , 
7, 1.2746, 0, 0, 0.471041,-99) , 
2, 0.0543982, 1, 0, 0.501702,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0756084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426205,-99) , 
7, -1.33058, 0, 0, 0.518144,-99) , 
0, 0.496179, 1, 0, 0.554063,-99) , 
NN(
NN(
0, 
0, 
-1, -1.982, 1, 1, 0.522829,-99) , 
NN(
0, 
0, 
-1, -2.79935, 0, -1, 0.453992,-99) , 
7, 0.495984, 0, 0, 0.499788,-99) , 
9, -1.36794, 1, 0, 0.507097,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0406972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487303,-99) , 
1, 0.00729616, 0, 0, 0.490495,-99) , 
NN(
0, 
0, 
-1, 0.498136, 0, -1, 0.432619,-99) , 
1, -0.00493603, 0, 0, 0.486074,-99) , 
0, 0.489519, 1, 0, 0.488436,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0695469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483177,-99) , 
0, 0.499452, 1, 0, 0.554648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483597,-99) , 
8, -1.40959, 1, 0, 0.504481,-99) , 
9, -0.968526, 1, 0, 0.517044,-99) , 
NN(
0, 
0, 
-1, 0.000939772, 1, -1, 0.393872,-99) , 
0, 0.490471, 0, 0, 0.509236,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0496679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498206,-99) , 
0, 0.494598, 0, 0, 0.522014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456299,-99) , 
7, -0.996905, 0, 0, 0.516955,-99) , 
NN(
NN(
0, 
0, 
-1, 0.50081, 0, 1, 0.549075,-99) , 
NN(
0, 
0, 
-1, 0.498997, 0, -1, 0.478924,-99) , 
9, -1.48808, 1, 0, 0.487358,-99) , 
0, 0.498089, 1, 0, 0.50137,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0330527);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.598101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415081,-99) , 
8, -3.27925, 0, 0, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440827,-99) , 
2, -0.186678, 0, 0, 0.496822,-99) , 
9, -1.71489, 1, 0, 0.504169,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0538684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53773, 1, 1, 0.612206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434595,-99) , 
7, -1.20559, 1, 0, 0.498141,-99) , 
7, -0.783261, 0, 0, 0.554118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471376,-99) , 
3, 3.40104, 1, 0, 0.497149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410834,-99) , 
0, 0.489521, 0, 0, 0.493891,-99) , 
9, -1.24706, 1, 0, 0.503468,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0642235);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502853, 0, 1, 0.550019,-99) , 
NN(
NN(
0, 
0, 
-1, 2.39023, 0, 1, 0.563091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478675,-99) , 
2, -0.030449, 1, 0, 0.487963,-99) , 
2, -0.100745, 1, 0, 0.494474,-99) , 
3, 3.75356, 0, 0, 0.505942,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0435312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0419493, 1, 1, 0.583661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487919,-99) , 
7, -0.930257, 1, 0, 0.490263,-99) , 
8, -3.78068, 1, 0, 0.493895,-99) , 
0, 0.491426, 1, 0, 0.501024,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0492742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.22251, 0, 1, 0.582675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49625,-99) , 
0, 0.498498, 0, 0, 0.509254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445924,-99) , 
8, -2.49611, 1, 0, 0.468127,-99) , 
0, 0.501899, 1, 0, 0.50114,-99) , 
8, -3.46883, 1, 0, 0.505653,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0210969);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50394, 0, 1, 0.508362,-99) , 
NN(
0, 
0, 
-1, 0.505709, 0, -1, 0.462132,-99) , 
0, 0.504757, 1, 0, 0.504939,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0556833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490021,-99) , 
9, -0.570829, 1, 0, 0.529603,-99) , 
NN(
NN(
0, 
0, 
-1, 0.437142, 1, 1, 0.539264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478125,-99) , 
9, 0.858016, 0, 0, 0.486042,-99) , 
0, 0.503986, 0, 0, 0.491974,-99) , 
0, 0.492376, 1, 0, 0.496002,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0682394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44596, 0, 1, 0.576607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487118,-99) , 
0, 0.493055, 0, 0, 0.511246,-99) , 
8, -2.27149, 1, 0, 0.535962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444951,-99) , 
2, 0.0276422, 1, 0, 0.537954,-99) , 
NN(
0, 
0, 
-1, -1.81156, 0, -1, 0.47663,-99) , 
1, 0.00265106, 0, 0, 0.486226,-99) , 
0, 0.495233, 1, 0, 0.498768,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0675466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00285608, 0, 1, 0.528222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424201,-99) , 
5, 0.0119971, 1, 0, 0.524455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491085,-99) , 
0, 0.491694, 1, 0, 0.537211,-99) , 
NN(
0, 
0, 
-1, 0.491154, 0, -1, 0.442007,-99) , 
9, -0.580344, 1, 0, 0.478346,-99) , 
0, 0.493328, 0, 0, 0.516936,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.058023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490752,-99) , 
8, -3.29608, 0, 0, 0.548708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388706,-99) , 
8, -2.77692, 0, 0, 0.508511,-99) , 
9, -1.0693, 1, 0, 0.516934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573617,-99) , 
NN(
0, 
0, 
-1, 0.502086, 0, -1, 0.473462,-99) , 
0, 0.500358, 1, 0, 0.482336,-99) , 
0, 0.499995, 1, 0, 0.50482,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0437199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498096, 0, 1, 0.608889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493352,-99) , 
9, 0.495494, 0, 0, 0.502426,-99) , 
1, -0.00459412, 1, 0, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367264,-99) , 
5, 0.013785, 1, 0, 0.504646,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0898899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16579, 1, 1, 0.538781,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.45775,-99) , 
7, -0.287248, 0, 0, 0.513992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452173,-99) , 
8, -1.07409, 1, 0, 0.488159,-99) , 
NN(
0, 
0, 
-1, -1.60424, 0, -1, 0.442915,-99) , 
7, 1.76856, 0, 0, 0.465328,-99) , 
9, 0.135548, 1, 0, 0.497175,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0684247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468686,-99) , 
2, -0.0323311, 0, 0, 0.512325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464561,-99) , 
8, -1.23554, 0, 0, 0.477044,-99) , 
0, 0.495235, 1, 0, 0.48558,-99) , 
8, -3.81992, 1, 0, 0.489378,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0749522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6294, 0, 1, 0.538378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488989,-99) , 
9, 0.758391, 1, 0, 0.525626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496083,-99) , 
7, -0.309446, 0, 0, 0.542441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453954,-99) , 
8, -3.31929, 1, 0, 0.472567,-99) , 
2, 0.0151999, 0, 0, 0.496351,-99) , 
8, -2.29059, 0, 0, 0.514142,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0760108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68791, 0, 1, 0.577991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475796,-99) , 
8, -0.986923, 1, 0, 0.53635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49582,-99) , 
9, -0.708402, 1, 0, 0.524263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470289,-99) , 
6, 0.715205, 0, 0, 0.485336,-99) , 
6, -951.286, 1, 0, 0.498003,-99) , 
7, 1.28443, 0, 0, 0.509329,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0615473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505255, 1, 1, 0.595649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443017,-99) , 
1, 0.00198212, 1, 0, 0.554699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480345,-99) , 
3, 2.21193, 1, 0, 0.510696,-99) , 
NN(
0, 
0, 
-1, 0.999615, 1, -1, 0.470172,-99) , 
3, 3.77424, 1, 0, 0.501764,-99) , 
0, 0.503803, 0, 0, 0.507455,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0781397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999999, 0, 1, 0.553193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437276,-99) , 
7, -0.422106, 0, 0, 0.501986,-99) , 
4, 0.999977, 0, 0, 0.534554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48363,-99) , 
4, 0.999524, 0, 0, 0.530007,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0701394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.82935, 1, 1, 0.556369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451838,-99) , 
9, -1.82749, 1, 0, 0.506285,-99) , 
8, -3.20367, 0, 0, 0.534378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476399,-99) , 
8, -2.82011, 1, 0, 0.480427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40186,-99) , 
7, 0.00696621, 0, 0, 0.47575,-99) , 
7, -0.142667, 1, 0, 0.488966,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.060634);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.19202, 1, 1, 0.555744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468744,-99) , 
6, -951.286, 0, 0, 0.515727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483264,-99) , 
7, 1.8574, 0, 0, 0.491137,-99) , 
3, 3.4122, 0, 0, 0.497021,-99) , 
0, 0.5019, 0, 0, 0.508222,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0551352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469462,-99) , 
6, -951.286, 0, 0, 0.53336,-99) , 
0, 0.499995, 0, 0, 0.561521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498494,-99) , 
7, 0.51363, 1, 0, 0.511053,-99) , 
NN(
0, 
0, 
-1, -2.81954, 1, -1, 0.437771,-99) , 
8, -2.62717, 0, 0, 0.49997,-99) , 
8, -3.07608, 1, 0, 0.50772,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0466509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621692,-99) , 
NN(
NN(
0, 
0, 
-1, -3.14298, 1, 1, 0.515827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42297,-99) , 
2, -0.00898266, 1, 0, 0.461376,-99) , 
7, -0.614531, 0, 0, 0.511711,-99) , 
9, -2.01927, 1, 0, 0.516132,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0564205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.50377, 0, 1, 0.55687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499118,-99) , 
9, -0.231919, 1, 0, 0.518316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440488,-99) , 
8, -2.31843, 1, 0, 0.478978,-99) , 
7, 0.454557, 0, 0, 0.508304,-99) , 
7, -0.14383, 1, 0, 0.518779,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0386093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14216, 0, 1, 0.514356,-99) , 
NN(
0, 
0, 
-1, 0.215417, 0, -1, 0.445503,-99) , 
2, 0.156486, 1, 0, 0.509553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438468,-99) , 
3, 7.42243, 1, 0, 0.506128,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0250006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616401,-99) , 
NN(
NN(
0, 
0, 
-1, -1.59493, 1, 1, 0.506859,-99) , 
NN(
0, 
0, 
-1, 0.498085, 0, -1, 0.45447,-99) , 
7, -1.00054, 0, 0, 0.503267,-99) , 
1, -0.0075517, 1, 0, 0.506428,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.089764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999999, 0, 1, 0.542514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4507,-99) , 
2, -0.171751, 1, 0, 0.462108,-99) , 
4, 0.999977, 0, 0, 0.511984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460284,-99) , 
4, 0.999525, 0, 0, 0.507138,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0514662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496189, 0, 1, 0.546755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476096,-99) , 
8, -3.87258, 0, 0, 0.531201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477175,-99) , 
7, -0.271095, 0, 0, 0.555869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435901,-99) , 
9, -0.507303, 0, 0, 0.482863,-99) , 
9, -1.16768, 1, 0, 0.488046,-99) , 
7, -0.42888, 1, 0, 0.494407,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0451894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494726,-99) , 
9, -0.838498, 1, 0, 0.505315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399762,-99) , 
0, 0.50571, 1, 0, 0.500484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382417,-99) , 
7, 0.42594, 1, 0, 0.432798,-99) , 
1, 0.00442927, 1, 0, 0.494556,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0700254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.54059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443797,-99) , 
7, -1.58649, 0, 0, 0.520443,-99) , 
NN(
0, 
0, 
-1, -0.666716, 0, -1, 0.472701,-99) , 
9, -0.770567, 1, 0, 0.503743,-99) , 
7, 0.714099, 0, 0, 0.522152,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0383769);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578748,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502125, 0, 1, 0.511555,-99) , 
NN(
0, 
0, 
-1, 0.503531, 0, -1, 0.461362,-99) , 
0, 0.502851, 1, 0, 0.503908,-99) , 
2, 0.197208, 0, 0, 0.508059,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0546433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476583,-99) , 
0, 0.498092, 0, 0, 0.489161,-99) , 
8, -2.90287, 1, 0, 0.492559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433678,-99) , 
7, -0.551255, 1, 0, 0.488262,-99) , 
NN(
0, 
0, 
-1, -3.20367, 0, -1, 0.426554,-99) , 
0, 0.499995, 0, 0, 0.446702,-99) , 
7, -0.143044, 0, 0, 0.481854,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0348265);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489963,-99) , 
8, -2.81416, 1, 0, 0.49567,-99) , 
2, 0.202082, 0, 0, 0.498886,-99) , 
8, -3.86157, 1, 0, 0.501958,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0846439);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440607,-99) , 
3, 3.7865, 1, 0, 0.518766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457316,-99) , 
9, 0.742608, 0, 0, 0.465827,-99) , 
2, 0.0299086, 0, 0, 0.47705,-99) , 
2, 0.190568, 0, 0, 0.482253,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0827985);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476192,-99) , 
4, 0.999999, 0, 0, 0.503708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448917,-99) , 
2, -0.137352, 1, 0, 0.458026,-99) , 
4, 0.999977, 0, 0, 0.486687,-99) , 
4, 0.999526, 1, 0, 0.491271,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0596032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491423, 1, 1, 0.573121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471459,-99) , 
8, -2.52002, 0, 0, 0.540203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466558,-99) , 
6, -951.286, 0, 0, 0.495199,-99) , 
NN(
0, 
0, 
-1, 0.499451, 0, -1, 0.453369,-99) , 
7, 1.57025, 1, 0, 0.485712,-99) , 
0, 0.493329, 1, 0, 0.493861,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0431085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497584,-99) , 
2, -0.0590503, 1, 0, 0.511461,-99) , 
NN(
0, 
0, 
-1, -1.00486, 0, -1, 0.457489,-99) , 
4, 0.99991, 0, 0, 0.503701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458817,-99) , 
4, 0.999525, 0, 0, 0.499508,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0499507);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473055,-99) , 
7, 0.235988, 0, 0, 0.540718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482866,-99) , 
2, 0.054604, 0, 0, 0.488998,-99) , 
0, 0.503804, 0, 0, 0.494183,-99) , 
8, -3.77184, 1, 0, 0.498427,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0877319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.40104, 0, 1, 0.535336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43294,-99) , 
3, 1.81796, 1, 0, 0.526555,-99) , 
NN(
0, 
0, 
-1, 0.495227, 0, -1, 0.432716,-99) , 
3, 3.10124, 1, 0, 0.480342,-99) , 
2, 0.0562948, 1, 0, 0.524983,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0736983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484281,-99) , 
9, 0.623679, 1, 0, 0.527538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462329,-99) , 
9, 0.156187, 0, 0, 0.48041,-99) , 
0, 0.495324, 0, 0, 0.513412,-99) , 
NN(
0, 
0, 
-1, 2.4827, 0, -1, 0.439739,-99) , 
0, 0.503804, 1, 0, 0.50444,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0534568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82483, 0, 1, 0.600757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479164,-99) , 
3, 2.3375, 0, 0, 0.508982,-99) , 
7, 0.720687, 1, 0, 0.553789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489207,-99) , 
0, 0.502535, 0, 0, 0.496305,-99) , 
2, 0.197352, 0, 0, 0.500475,-99) , 
0, 0.494281, 1, 0, 0.510707,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.060933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.3487, 1, 1, 0.528134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478901,-99) , 
7, -0.769045, 1, 0, 0.494206,-99) , 
7, 0.123249, 0, 0, 0.516179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443602,-99) , 
9, 0.870034, 1, 0, 0.507419,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0600254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492772,-99) , 
0, 0.49469, 1, 0, 0.503801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462789,-99) , 
2, 0.0562529, 0, 0, 0.473382,-99) , 
6, -951.286, 1, 0, 0.483353,-99) , 
0, 0.489519, 1, 0, 0.485927,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0507817);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.85242, 1, 1, 0.525369,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0616132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493331, 1, 1, 0.527897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476856,-99) , 
1, 0.00159388, 0, 0, 0.486554,-99) , 
5, 0.00196902, 0, 0, 0.50484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392887,-99) , 
5, 0.013785, 1, 0, 0.502004,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0599364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457938,-99) , 
7, -1.05404, 0, 0, 0.521124,-99) , 
7, 0.714929, 0, 0, 0.532589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4875,-99) , 
5, 0.00253114, 0, 0, 0.514062,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484668,-99) , 
9, -0.176296, 1, 0, 0.49203,-99) , 
8, -2.18102, 1, 0, 0.508483,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0606165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.574369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450419,-99) , 
0, 0.498095, 0, 0, 0.493937,-99) , 
7, 0.43962, 0, 0, 0.539644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475946,-99) , 
7, 1.84023, 0, 0, 0.482129,-99) , 
8, -0.86197, 0, 0, 0.486392,-99) , 
2, -0.0829858, 1, 0, 0.493652,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0406743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.789797, 0, 1, 0.593618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442361,-99) , 
8, -2.91597, 0, 0, 0.501799,-99) , 
9, -1.52365, 1, 0, 0.50932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406294,-99) , 
7, -1.57018, 0, 0, 0.506126,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0714033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.170012, 0, 1, 0.529929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423195,-99) , 
4, 0.999887, 0, 0, 0.515856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468877,-99) , 
4, 0.999524, 0, 0, 0.511443,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0578083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388894,-99) , 
7, -1.25532, 0, 0, 0.519938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464141,-99) , 
9, 0.625802, 1, 0, 0.510239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56104,-99) , 
NN(
0, 
0, 
-1, -0.581608, 0, -1, 0.477948,-99) , 
9, -1.94233, 1, 0, 0.481937,-99) , 
0, 0.49809, 1, 0, 0.495353,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0686964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498099, 1, 1, 0.560015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479858,-99) , 
0, 0.497138, 0, 0, 0.5025,-99) , 
7, 1.05536, 0, 0, 0.508637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449801,-99) , 
8, -0.770366, 1, 0, 0.489164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375633,-99) , 
8, -1.79463, 1, 0, 0.423129,-99) , 
8, -1.41051, 0, 0, 0.46844,-99) , 
9, 0.11603, 1, 0, 0.494488,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0704243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.320217, 0, 1, 0.540164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450989,-99) , 
3, 3.12507, 1, 0, 0.492416,-99) , 
9, -0.254962, 1, 0, 0.516378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531464,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.441238,-99) , 
0, 0.505437, 0, 0, 0.463152,-99) , 
0, 0.5019, 1, 0, 0.505455,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0391252);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.47834, 1, 1, 0.544127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578904,-99) , 
NN(
0, 
0, 
-1, -0.89451, 0, -1, 0.489888,-99) , 
7, -1.47499, 1, 0, 0.493095,-99) , 
7, 1.57146, 0, 0, 0.50436,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0657695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.550052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47139,-99) , 
7, 1.29113, 1, 0, 0.525189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464159,-99) , 
0, 0.500539, 0, 0, 0.483911,-99) , 
9, 0.73581, 0, 0, 0.492439,-99) , 
0, 0.496185, 1, 0, 0.50326,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0688647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87065, 1, 1, 0.543965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481389,-99) , 
0, 0.493012, 1, 0, 0.491571,-99) , 
6, -951.286, 1, 0, 0.509036,-99) , 
NN(
0, 
0, 
-1, -2.19235, 0, -1, 0.435091,-99) , 
0, 0.503804, 1, 0, 0.500203,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0428106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505846, 0, 1, 0.544341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430006,-99) , 
6, 1.85747, 1, 0, 0.496417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459935,-99) , 
7, -0.717703, 1, 0, 0.470953,-99) , 
6, -951.286, 0, 0, 0.487415,-99) , 
0, 0.504757, 0, 0, 0.491233,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0594622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.27941, 0, 1, 0.556268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435206,-99) , 
0, 0.492379, 0, 0, 0.493607,-99) , 
9, -0.534768, 1, 0, 0.506519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484088,-99) , 
7, -0.237842, 0, 0, 0.511699,-99) , 
NN(
0, 
0, 
-1, -1.02012, 1, -1, 0.424485,-99) , 
0, 0.499995, 0, 0, 0.452395,-99) , 
8, -2.61284, 0, 0, 0.491995,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0643221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.56171, 1, 1, 0.574175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434822,-99) , 
3, 2.12211, 0, 0, 0.480961,-99) , 
7, -0.918374, 0, 0, 0.528386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490181,-99) , 
8, -2.08172, 1, 0, 0.49947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454282,-99) , 
2, -0.0200979, 1, 0, 0.472603,-99) , 
7, 0.714161, 0, 0, 0.48824,-99) , 
7, -0.428591, 1, 0, 0.494214,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0879783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.812724, 0, 1, 0.549818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436856,-99) , 
0, 0.494601, 0, 0, 0.474002,-99) , 
8, -1.89873, 1, 0, 0.513244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463996,-99) , 
0, 0.503985, 0, 0, 0.475834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425517,-99) , 
1, -0.00162581, 1, 0, 0.444121,-99) , 
9, -0.349835, 0, 0, 0.459619,-99) , 
0, 0.498091, 1, 0, 0.484413,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0591064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.45535, 1, 1, 0.538314,-99) , 
NN(
0, 
0, 
-1, -0.281442, 0, -1, 0.486678,-99) , 
2, 0.01278, 0, 0, 0.505077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444195,-99) , 
1, -0.00182698, 0, 0, 0.496866,-99) , 
NN(
0, 
0, 
-1, -2.66959, 0, -1, 0.4551,-99) , 
9, -1.11236, 1, 0, 0.472595,-99) , 
7, 0.714651, 0, 0, 0.488434,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0502494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
0, 0.499993, 1, 0, 0.550569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461972,-99) , 
9, -0.584089, 0, 0, 0.493398,-99) , 
9, -1.60913, 1, 0, 0.498636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426792,-99) , 
2, -0.221154, 0, 0, 0.495232,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0744063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490492,-99) , 
0, 0.497142, 0, 0, 0.566281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494294,-99) , 
0, 0.502851, 0, 0, 0.505233,-99) , 
1, -0.00182698, 1, 0, 0.518584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467823,-99) , 
0, 0.501084, 1, 0, 0.509511,-99) , 
NN(
0, 
0, 
-1, 0.415283, 0, -1, 0.464959,-99) , 
0, 0.499043, 0, 0, 0.482897,-99) , 
7, 0.143258, 1, 0, 0.49319,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0373248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481129,-99) , 
3, 1.97059, 1, 0, 0.507339,-99) , 
0, 0.503986, 1, 0, 0.536379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496333,-99) , 
9, 0.376163, 0, 0, 0.503775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469662,-99) , 
7, 1.8565, 1, 0, 0.498472,-99) , 
0, 0.502852, 0, 0, 0.503903,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0706068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498469, 0, 1, 0.546772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440054,-99) , 
0, 0.499942, 0, 0, 0.496443,-99) , 
0, 0.499134, 1, 0, 0.511308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456086,-99) , 
7, 1.41057, 1, 0, 0.486775,-99) , 
NN(
0, 
0, 
-1, -0.535895, 1, -1, 0.4234,-99) , 
8, -2.28916, 0, 0, 0.460615,-99) , 
0, 0.497139, 0, 0, 0.489451,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.079775);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.131423, 0, 1, 0.543739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486205,-99) , 
7, 1.45296, 1, 0, 0.513584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440878,-99) , 
8, -2.24451, 1, 0, 0.465303,-99) , 
8, -1.81417, 0, 0, 0.49913,-99) , 
9, -0.474857, 1, 0, 0.517801,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0457299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.70042, 1, 1, 0.530052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449727,-99) , 
0, 0.493782, 0, 0, 0.493135,-99) , 
7, 1.28556, 0, 0, 0.504762,-99) , 
NN(
0, 
0, 
-1, 0.12805, 0, -1, 0.448545,-99) , 
0, 0.503804, 1, 0, 0.498433,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0639296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461374,-99) , 
5, 0.000594667, 0, 0, 0.510181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436468,-99) , 
5, 0.0124852, 1, 0, 0.5079,-99) , 
NN(
0, 
0, 
-1, -2.85834, 0, -1, 0.441409,-99) , 
0, 0.502852, 1, 0, 0.497119,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0637754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485091,-99) , 
9, -0.387904, 1, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432247,-99) , 
7, -1.00054, 0, 0, 0.497727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472869,-99) , 
0, 0.504621, 1, 0, 0.53111,-99) , 
NN(
0, 
0, 
-1, 0.495779, 1, -1, 0.453311,-99) , 
0, 0.501901, 0, 0, 0.467706,-99) , 
6, -951.286, 0, 0, 0.4874,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0494054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488596,-99) , 
2, -0.0263722, 0, 0, 0.568746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499083,-99) , 
0, 0.501442, 0, 0, 0.520762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482737,-99) , 
3, 0.433545, 1, 0, 0.487742,-99) , 
3, 3.40104, 0, 0, 0.4956,-99) , 
0, 0.491425, 1, 0, 0.500963,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0568666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.543362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465177,-99) , 
2, 0.115617, 0, 0, 0.490817,-99) , 
2, 0.0491185, 1, 0, 0.531681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481446,-99) , 
9, -1.11412, 1, 0, 0.491348,-99) , 
7, 1.85615, 0, 0, 0.499992,-99) , 
0, 0.496185, 1, 0, 0.510433,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.04331);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538561,-99) , 
NN(
0, 
0, 
-1, -1.71898, 1, -1, 0.480362,-99) , 
7, 1.82928, 0, 0, 0.485405,-99) , 
8, -0.903471, 0, 0, 0.490126,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.04208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00335, 0, 1, 0.543434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49746,-99) , 
3, 1.38454, 1, 0, 0.508633,-99) , 
0, 0.500947, 0, 0, 0.517709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465434,-99) , 
3, 6.68797, 1, 0, 0.51417,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0667812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46322, 0, 1, 0.570103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491949,-99) , 
7, 1.80339, 1, 0, 0.515761,-99) , 
8, -1.56181, 1, 0, 0.537244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496096,-99) , 
2, 0.139554, 1, 0, 0.567515,-99) , 
NN(
0, 
0, 
-1, -1.2279, 0, -1, 0.483907,-99) , 
2, 0.0731625, 0, 0, 0.496404,-99) , 
7, 0.715899, 0, 0, 0.516606,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0520768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449067,-99) , 
8, -2.44161, 0, 0, 0.508872,-99) , 
0, 0.502848, 0, 0, 0.523301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486685,-99) , 
1, 0.000773437, 1, 0, 0.555103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486888,-99) , 
9, -2.09404, 1, 0, 0.490201,-99) , 
3, 0.454532, 1, 0, 0.495159,-99) , 
3, 3.75356, 0, 0, 0.501384,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.041645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.2856, 0, 1, 0.51732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412042,-99) , 
0, 0.505709, 1, 0, 0.512117,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0568377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.540041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471072,-99) , 
3, 3.59053, 1, 0, 0.507583,-99) , 
6, -951.286, 1, 0, 0.518451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438079,-99) , 
3, 7.41242, 1, 0, 0.514334,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0418543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000887917, 0, 1, 0.560885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48902,-99) , 
3, 3.22203, 0, 0, 0.498183,-99) , 
0, 0.492922, 1, 0, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0.489247, 1, -1, 0.433019,-99) , 
0, 0.490471, 0, 0, 0.499539,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0227965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495484,-99) , 
7, -1.36572, 0, 0, 0.56813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
0, 0.492965, 1, 0, 0.502898,-99) , 
NN(
0, 
0, 
-1, 0.490153, 1, -1, 0.452617,-99) , 
0, 0.491424, 0, 0, 0.498482,-99) , 
8, -3.46883, 1, 0, 0.502452,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0651608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.665409, 1, 1, 0.577176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4985,-99) , 
0, 0.501113, 1, 0, 0.528753,-99) , 
0, 0.504438, 0, 0, 0.536208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485995,-99) , 
8, -2.72262, 1, 0, 0.498239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383747,-99) , 
2, 0.0188888, 1, 0, 0.451779,-99) , 
7, -0.425855, 0, 0, 0.49074,-99) , 
0, 0.49809, 0, 0, 0.513452,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0577437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.390987, 1, 1, 0.523407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378244,-99) , 
0, 0.489383, 1, 0, 0.442191,-99) , 
0, 0.490471, 0, 0, 0.518742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411815,-99) , 
0, 0.498093, 1, 0, 0.456094,-99) , 
3, 6.0657, 1, 0, 0.513787,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0352239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468133,-99) , 
3, 1.17257, 0, 0, 0.540418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495465,-99) , 
0, 0.492693, 1, 0, 0.501099,-99) , 
0, 0.502852, 0, 0, 0.506504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449247,-99) , 
3, 7.41949, 1, 0, 0.503524,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0518885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4838, 0, 1, 0.526684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48765,-99) , 
9, 0.613783, 1, 0, 0.519322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484907,-99) , 
8, -2.0872, 1, 0, 0.503019,-99) , 
NN(
0, 
0, 
-1, -1.65085, 1, -1, 0.446579,-99) , 
9, -1.21811, 0, 0, 0.491668,-99) , 
0, 0.499995, 1, 0, 0.509697,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0545067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582772,-99) , 
NN(
NN(
0, 
0, 
-1, -0.979236, 0, 1, 0.519654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452037,-99) , 
0, 0.49397, 0, 0, 0.465458,-99) , 
0, 0.494553, 0, 0, 0.509881,-99) , 
0, 0.490471, 1, 0, 0.513537,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0584071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470449,-99) , 
9, 0.266483, 1, 0, 0.497421,-99) , 
8, -3.18631, 1, 0, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.412992,-99) , 
7, -0.711724, 0, 0, 0.492551,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0982501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484411,-99) , 
4, 0.999999, 0, 0, 0.523372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449956,-99) , 
0, 0.502851, 0, 0, 0.464981,-99) , 
4, 0.999977, 0, 0, 0.502159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438189,-99) , 
4, 0.999526, 0, 0, 0.496123,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0766777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503168, 0, 1, 0.602883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466016,-99) , 
0, 0.499675, 1, 0, 0.530465,-99) , 
0, 0.500947, 0, 0, 0.547913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485924,-99) , 
0, 0.498408, 0, 0, 0.508823,-99) , 
NN(
0, 
0, 
-1, -0.132881, 0, -1, 0.440553,-99) , 
0, 0.503805, 1, 0, 0.500827,-99) , 
6, -951.286, 1, 0, 0.516561,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0563474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.74298, 0, 1, 0.560162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425009,-99) , 
0, 0.491243, 0, 0, 0.492654,-99) , 
6, -951.286, 0, 0, 0.53673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489915,-99) , 
8, -2.94541, 1, 0, 0.49596,-99) , 
NN(
0, 
0, 
-1, -3.77408, 0, -1, 0.433961,-99) , 
7, -0.714818, 0, 0, 0.489533,-99) , 
0, 0.495233, 1, 0, 0.501264,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0559267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5014, 1, 1, 0.613526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482721,-99) , 
0, 0.504892, 1, 0, 0.509898,-99) , 
0, 0.501899, 1, 0, 0.532112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475827,-99) , 
0, 0.498403, 1, 0, 0.508346,-99) , 
NN(
0, 
0, 
-1, -1.17272, 0, -1, 0.476256,-99) , 
8, -1.90334, 0, 0, 0.49105,-99) , 
0, 0.500947, 0, 0, 0.50125,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0514959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468181,-99) , 
0, 0.49301, 0, 0, 0.503605,-99) , 
9, 0.870034, 0, 0, 0.51104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431867,-99) , 
0, 0.505073, 0, 0, 0.492117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385353,-99) , 
1, 0.00185005, 1, 0, 0.460553,-99) , 
0, 0.503803, 1, 0, 0.505458,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0508097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.858016, 0, 1, 0.519285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493749,-99) , 
7, 0.42436, 1, 0, 0.511704,-99) , 
NN(
0, 
0, 
-1, 1.0142, 0, -1, 0.440467,-99) , 
0, 0.503487, 0, 0, 0.472011,-99) , 
0, 0.500948, 1, 0, 0.506451,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0491489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505798, 0, 1, 0.613836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496189,-99) , 
0, 0.503628, 1, 0, 0.525209,-99) , 
0, 0.504891, 0, 0, 0.563004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521335,-99) , 
NN(
0, 
0, 
-1, 0.499223, 1, -1, 0.482977,-99) , 
8, -1.08199, 0, 0, 0.48954,-99) , 
0, 0.502851, 0, 0, 0.499969,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0543814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0024185, 0, 1, 0.546708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452341,-99) , 
7, -0.707033, 0, 0, 0.507519,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.464353,-99) , 
0, 0.49682, 0, 0, 0.497001,-99) , 
0, 0.494281, 1, 0, 0.506428,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0350929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499632,-99) , 
6, -951.286, 0, 0, 0.549599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477626,-99) , 
0, 0.497371, 0, 0, 0.493212,-99) , 
NN(
0, 
0, 
-1, 0.506182, 0, -1, 0.439228,-99) , 
0, 0.505301, 1, 0, 0.489989,-99) , 
0, 0.491424, 1, 0, 0.494467,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0680945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495595, 0, 1, 0.577125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424493,-99) , 
7, -0.143611, 0, 0, 0.496522,-99) , 
0, 0.49809, 1, 0, 0.534923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433451,-99) , 
7, -1.20443, 0, 0, 0.517962,-99) , 
NN(
0, 
0, 
-1, 0.0062426, 1, -1, 0.475569,-99) , 
7, 0.142062, 1, 0, 0.487588,-99) , 
2, 0.0583805, 0, 0, 0.495876,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0606522);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495169,-99) , 
7, -0.0223183, 0, 0, 0.527897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482928,-99) , 
8, -2.24535, 1, 0, 0.488898,-99) , 
7, 0.75504, 1, 0, 0.507888,-99) , 
7, -1.28561, 1, 0, 0.512195,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0638677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999999, 0, 1, 0.536447,-99) , 
NN(
0, 
0, 
-1, -1.70516, 0, -1, 0.48522,-99) , 
4, 0.999977, 0, 0, 0.517452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435775,-99) , 
4, 0.999525, 0, 0, 0.50952,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0542954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496173,-99) , 
0, 0.497138, 1, 0, 0.516565,-99) , 
8, -1.65626, 1, 0, 0.532435,-99) , 
NN(
NN(
0, 
0, 
-1, -0.867345, 0, 1, 0.574861,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.484279,-99) , 
8, -3.24991, 1, 0, 0.495256,-99) , 
7, 1.28586, 0, 0, 0.507038,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0672385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35931, 1, 1, 0.584844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45461,-99) , 
0, 0.504077, 1, 0, 0.494097,-99) , 
7, 0.707604, 0, 0, 0.537868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494426,-99) , 
9, -0.206792, 1, 0, 0.524775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47945,-99) , 
0, 0.501381, 0, 0, 0.484949,-99) , 
0, 0.496457, 1, 0, 0.501947,-99) , 
0, 0.5019, 0, 0, 0.509158,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0579734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.567271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439496,-99) , 
7, 0.373108, 0, 0, 0.499704,-99) , 
7, -0.0646203, 1, 0, 0.508416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51651,-99) , 
NN(
0, 
0, 
-1, -3.35687, 0, -1, 0.45133,-99) , 
8, -3.57202, 1, 0, 0.475439,-99) , 
8, -3.07001, 0, 0, 0.503871,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0409098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.473181, 0, 1, 0.560188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47391,-99) , 
7, 1.28743, 1, 0, 0.528628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494196,-99) , 
7, -0.930375, 1, 0, 0.498294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397852,-99) , 
8, -3.81992, 0, 0, 0.49404,-99) , 
3, 3.75356, 0, 0, 0.501157,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0672819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461102,-99) , 
1, -0.00218438, 0, 0, 0.512739,-99) , 
3, 0.419692, 1, 0, 0.519181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496498,-99) , 
3, 5.91824, 0, 0, 0.520862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459462,-99) , 
2, -0.0894112, 1, 0, 0.471514,-99) , 
0, 0.499043, 0, 0, 0.493052,-99) , 
3, 3.3878, 1, 0, 0.512261,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0618145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68436, 0, 1, 0.596288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491978,-99) , 
8, -1.02811, 1, 0, 0.551486,-99) , 
NN(
NN(
0, 
0, 
-1, -0.114806, 1, 1, 0.515105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436291,-99) , 
7, 0.471754, 1, 0, 0.477596,-99) , 
0, 0.499995, 1, 0, 0.502197,-99) , 
7, 1.28636, 0, 0, 0.516684,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0611617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446829,-99) , 
5, 0.00331508, 1, 0, 0.543607,-99) , 
NN(
0, 
0, 
-1, 0.498085, 0, -1, 0.496769,-99) , 
6, -951.286, 0, 0, 0.527268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481147,-99) , 
7, -0.236704, 0, 0, 0.521151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478558,-99) , 
8, -1.20083, 0, 0, 0.490267,-99) , 
8, -2.60883, 1, 0, 0.497634,-99) , 
2, 0.0645605, 0, 0, 0.502513,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0624195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487899,-99) , 
7, 0.238398, 0, 0, 0.58305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46265,-99) , 
8, -2.33984, 0, 0, 0.518192,-99) , 
9, -0.77765, 1, 0, 0.523113,-99) , 
NN(
NN(
0, 
0, 
-1, -1.07597, 0, 1, 0.524973,-99) , 
NN(
0, 
0, 
-1, -0.498701, 0, -1, 0.465298,-99) , 
7, -0.755254, 1, 0, 0.482175,-99) , 
7, 0.14264, 0, 0, 0.510446,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0471209);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.10592, 0, 1, 0.56121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477259,-99) , 
7, 0.163063, 0, 0, 0.504946,-99) , 
NN(
0, 
0, 
-1, -0.175115, 0, -1, 0.467689,-99) , 
0, 0.495234, 0, 0, 0.495451,-99) , 
9, -1.72411, 1, 0, 0.500062,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0485655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.40326, 0, 1, 0.522094,-99) , 
NN(
0, 
0, 
-1, -1.16058, 0, -1, 0.469095,-99) , 
9, 0.487023, 1, 0, 0.509045,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0607763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494466,-99) , 
6, -0.345969, 0, 0, 0.522458,-99) , 
NN(
0, 
0, 
-1, -2.54015, 0, -1, 0.451046,-99) , 
6, 1.28607, 1, 0, 0.51246,-99) , 
NN(
NN(
0, 
0, 
-1, 2.11921, 0, 1, 0.527736,-99) , 
NN(
0, 
0, 
-1, 0.55048, 0, -1, 0.469868,-99) , 
7, -0.42765, 1, 0, 0.479025,-99) , 
6, -951.286, 0, 0, 0.500799,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.059616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499493,-99) , 
7, 1.2912, 0, 0, 0.510105,-99) , 
1, -0.00309666, 1, 0, 0.522281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489481,-99) , 
7, 0.812639, 0, 0, 0.500746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431196,-99) , 
7, 1.95289, 0, 0, 0.463489,-99) , 
7, 1.00272, 1, 0, 0.485284,-99) , 
0, 0.497138, 1, 0, 0.500134,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0532376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0978087, 0, 1, 0.526258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489192,-99) , 
2, 0.0630342, 0, 0, 0.504351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432877,-99) , 
0, 0.493331, 0, 0, 0.493462,-99) , 
3, 3.40848, 1, 0, 0.517713,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0751542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496184, 1, 1, 0.568292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452754,-99) , 
7, 0.754703, 0, 0, 0.494718,-99) , 
7, -0.143088, 1, 0, 0.509008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.494683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437391,-99) , 
0, 0.494281, 1, 0, 0.45024,-99) , 
8, -1.52746, 0, 0, 0.464474,-99) , 
6, -951.286, 0, 0, 0.493165,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0830873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0574783, 0, 1, 0.580171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480801,-99) , 
6, -951.286, 1, 0, 0.501783,-99) , 
2, -0.080455, 1, 0, 0.512606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443112,-99) , 
7, 1.81445, 0, 0, 0.457874,-99) , 
8, -0.925238, 0, 0, 0.472148,-99) , 
9, -0.451003, 1, 0, 0.489652,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0501334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.03954, 1, 1, 0.537969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469981,-99) , 
7, -0.427581, 0, 0, 0.526937,-99) , 
NN(
NN(
0, 
0, 
-1, -0.929375, 0, 1, 0.540552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472388,-99) , 
0, 0.498771, 1, 0, 0.485351,-99) , 
9, -1.44137, 1, 0, 0.49194,-99) , 
0, 0.495233, 1, 0, 0.500685,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0829312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489528,-99) , 
4, 0.999991, 0, 0, 0.521894,-99) , 
NN(
0, 
0, 
-1, -2.70085, 0, -1, 0.427119,-99) , 
4, 0.999909, 0, 0, 0.507308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422502,-99) , 
4, 0.999524, 0, 0, 0.499555,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0363214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492922,-99) , 
6, -0.139304, 0, 0, 0.563409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475204,-99) , 
6, -951.286, 0, 0, 0.533566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469394,-99) , 
7, -0.143088, 0, 0, 0.494499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4268,-99) , 
0, 0.489791, 0, 0, 0.491301,-99) , 
0, 0.502852, 0, 0, 0.497496,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.058589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.88782, 1, 1, 0.531558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478157,-99) , 
6, -951.286, 1, 0, 0.496282,-99) , 
7, 0.05587, 0, 0, 0.517889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468146,-99) , 
9, 0.717991, 0, 0, 0.495754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459531,-99) , 
6, -951.286, 0, 0, 0.482583,-99) , 
9, 0.316865, 1, 0, 0.50814,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0606542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.75364, 1, 1, 0.536373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426693,-99) , 
0, 0.5019, 1, 0, 0.48515,-99) , 
8, -2.91382, 0, 0, 0.518363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476717,-99) , 
9, -0.318058, 1, 0, 0.523736,-99) , 
NN(
0, 
0, 
-1, 0.212865, 0, -1, 0.477529,-99) , 
8, -1.8326, 1, 0, 0.487983,-99) , 
7, 0.715679, 1, 0, 0.502895,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0714438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67592, 1, 1, 0.554315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434594,-99) , 
7, -1.36725, 0, 0, 0.533068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48978,-99) , 
8, -2.54848, 1, 0, 0.497197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41533,-99) , 
9, -1.09387, 1, 0, 0.447214,-99) , 
7, 0.306023, 0, 0, 0.487727,-99) , 
7, -0.142918, 1, 0, 0.497221,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0391456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53185, 0, 1, 0.519253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47896,-99) , 
9, 0.691921, 1, 0, 0.51226,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0491106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473632,-99) , 
0, 0.500675, 1, 0, 0.516245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380222,-99) , 
7, 0.822017, 0, 0, 0.491451,-99) , 
7, 0.71319, 1, 0, 0.503459,-99) , 
NN(
0, 
0, 
-1, 0.147813, 0, -1, 0.452868,-99) , 
0, 0.491424, 0, 0, 0.499314,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0653648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477165,-99) , 
0, 0.504349, 0, 0, 0.508429,-99) , 
7, 1.2832, 0, 0, 0.529023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480516,-99) , 
8, -2.09646, 0, 0, 0.496996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453979,-99) , 
7, 1.9729, 0, 0, 0.467242,-99) , 
9, -0.0653119, 1, 0, 0.484407,-99) , 
0, 0.5019, 0, 0, 0.493285,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0465506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497637, 1, 1, 0.516992,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489277, 1, 1, 0.531259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466293,-99) , 
9, -1.41905, 1, 0, 0.473586,-99) , 
0, 0.490789, 1, 0, 0.481775,-99) , 
0, 0.497138, 0, 0, 0.502369,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0661365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.91062, 1, 1, 0.561412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428214,-99) , 
6, -951.286, 0, 0, 0.481561,-99) , 
7, 0.430319, 0, 0, 0.527983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472424,-99) , 
2, -0.0790639, 1, 0, 0.479011,-99) , 
0, 0.505709, 0, 0, 0.482944,-99) , 
0, 0.494281, 1, 0, 0.491619,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.039922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424848,-99) , 
1, 0.00573285, 1, 0, 0.500205,-99) , 
1, -0.00425222, 1, 0, 0.506977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484069,-99) , 
3, 2.53559, 1, 0, 0.505057,-99) , 
NN(
0, 
0, 
-1, 0.430479, 0, -1, 0.45819,-99) , 
0, 0.498091, 0, 0, 0.481719,-99) , 
6, -951.286, 0, 0, 0.498561,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0974375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.24099, 1, 1, 0.542612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463566,-99) , 
9, -0.0776274, 0, 0, 0.505889,-99) , 
0, 0.495234, 0, 0, 0.5326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439638,-99) , 
7, -0.636398, 0, 0, 0.499522,-99) , 
NN(
0, 
0, 
-1, -0.863669, 0, -1, 0.413458,-99) , 
9, -1.05136, 1, 0, 0.47858,-99) , 
8, -2.63763, 0, 0, 0.518931,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0488134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0717184, 1, 1, 0.510806,-99) , 
NN(
0, 
0, 
-1, 2.22349, 1, -1, 0.453617,-99) , 
4, 0.999955, 0, 0, 0.496225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433493,-99) , 
4, 0.999525, 0, 0, 0.490157,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0471061);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.573249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485667,-99) , 
0, 0.499047, 1, 0, 0.527167,-99) , 
NN(
0, 
0, 
-1, 0.0013636, 1, -1, 0.482445,-99) , 
2, -0.0815607, 1, 0, 0.48877,-99) , 
8, -3.45215, 1, 0, 0.49331,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0574151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487622,-99) , 
6, -951.286, 0, 0, 0.519423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437745,-99) , 
7, 1.04059, 0, 0, 0.49387,-99) , 
7, 0.714099, 1, 0, 0.506034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441824,-99) , 
0, 0.50299, 0, 0, 0.489048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368884,-99) , 
8, -2.95394, 0, 0, 0.464218,-99) , 
0, 0.5019, 1, 0, 0.497382,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0702672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00018, 1, 1, 0.535444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454889,-99) , 
2, 0.0111994, 0, 0, 0.478233,-99) , 
6, -951.286, 0, 0, 0.514448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474579,-99) , 
2, 0.0564175, 0, 0, 0.48576,-99) , 
NN(
0, 
0, 
-1, 1.1893, 0, -1, 0.454233,-99) , 
7, 0.998811, 1, 0, 0.472916,-99) , 
0, 0.49714, 1, 0, 0.489886,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0591023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.525369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551143,-99) , 
NN(
0, 
0, 
-1, 2.25183, 0, -1, 0.460008,-99) , 
9, 0.580558, 1, 0, 0.482689,-99) , 
7, 1.57197, 1, 0, 0.515194,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0677064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43353,-99) , 
9, -0.563851, 1, 0, 0.491857,-99) , 
9, 0.0471433, 0, 0, 0.514418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48972,-99) , 
7, -0.717898, 1, 0, 0.501071,-99) , 
NN(
0, 
0, 
-1, 2.14316, 1, -1, 0.464967,-99) , 
6, -951.286, 1, 0, 0.477079,-99) , 
0, 0.500947, 0, 0, 0.486699,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0684172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483959,-99) , 
4, 0.999997, 0, 0, 0.509959,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.461616,-99) , 
4, 0.999932, 0, 0, 0.500209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443428,-99) , 
4, 0.999525, 0, 0, 0.494826,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.08618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498084,-99) , 
8, -1.71216, 1, 0, 0.533646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433436,-99) , 
0, 0.493116, 1, 0, 0.474643,-99) , 
0, 0.495868, 0, 0, 0.508241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425664,-99) , 
0, 0.504439, 1, 0, 0.483211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397954,-99) , 
3, 4.85208, 1, 0, 0.46838,-99) , 
0, 0.500947, 1, 0, 0.497594,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0353067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.572888, 0, 1, 0.605011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487267,-99) , 
7, 0.145644, 0, 0, 0.505081,-99) , 
8, -3.15473, 1, 0, 0.510969,-99) , 
NN(
0, 
0, 
-1, -2.18895, 1, -1, 0.463436,-99) , 
7, -0.996786, 0, 0, 0.507689,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0595952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483238,-99) , 
7, -1.17178, 0, 0, 0.54686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480352,-99) , 
0, 0.499993, 1, 0, 0.512,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.473063,-99) , 
9, -0.0568728, 0, 0, 0.490293,-99) , 
9, -1.58853, 1, 0, 0.495664,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0514667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.32937, 1, 1, 0.569384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487683,-99) , 
3, 3.24926, 0, 0, 0.495393,-99) , 
9, -1.18216, 1, 0, 0.500165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559929,-99) , 
NN(
0, 
0, 
-1, -1.54911, 1, -1, 0.425782,-99) , 
9, -2.04501, 1, 0, 0.459433,-99) , 
7, -0.423691, 0, 0, 0.493616,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0670443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443529,-99) , 
0, 0.492378, 0, 0, 0.535248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450083,-99) , 
6, -1.57074, 0, 0, 0.508198,-99) , 
6, -951.286, 1, 0, 0.517189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560311,-99) , 
NN(
0, 
0, 
-1, 0.0154813, 1, -1, 0.397896,-99) , 
9, -2.31307, 1, 0, 0.437749,-99) , 
7, -0.714818, 0, 0, 0.508922,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0503586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505346, 1, 1, 0.555987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49351,-99) , 
7, 1.00245, 1, 0, 0.531515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481747,-99) , 
9, -1.60809, 1, 0, 0.486077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398817,-99) , 
8, -3.87151, 0, 0, 0.482888,-99) , 
0, 0.502852, 0, 0, 0.489618,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0856981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480264,-99) , 
0, 0.493013, 0, 0, 0.547001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460111,-99) , 
0, 0.503805, 1, 0, 0.537268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489776,-99) , 
7, -0.458222, 0, 0, 0.538408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449542,-99) , 
9, 0.208931, 0, 0, 0.476151,-99) , 
8, -2.55277, 1, 0, 0.492394,-99) , 
6, -951.286, 1, 0, 0.507505,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0736804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.581949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446578,-99) , 
8, -2.2856, 0, 0, 0.510318,-99) , 
9, -0.784928, 1, 0, 0.517085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479213,-99) , 
8, -3.33749, 0, 0, 0.51214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350237,-99) , 
7, -0.0963923, 0, 0, 0.42707,-99) , 
9, -1.31498, 1, 0, 0.4785,-99) , 
9, -0.996947, 0, 0, 0.50751,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0612889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461936,-99) , 
7, -0.692728, 0, 0, 0.534823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448485,-99) , 
6, -0.99921, 0, 0, 0.491158,-99) , 
6, -951.286, 1, 0, 0.505592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608688,-99) , 
NN(
0, 
0, 
-1, -2.501, 0, -1, 0.436778,-99) , 
8, -2.93679, 1, 0, 0.458817,-99) , 
1, -0.00218438, 0, 0, 0.496002,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0145576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462202,-99) , 
4, 0.999525, 0, 0, 0.496379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423191,-99) , 
7, -1.13885, 0, 0, 0.494336,-99) , 
9, -2.40537, 1, 0, 0.496195,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.054861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473789,-99) , 
0, 0.501082, 1, 0, 0.504196,-99) , 
0, 0.490471, 1, 0, 0.509058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430345,-99) , 
4, 0.999526, 0, 0, 0.501424,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0550594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.5342, 0, 1, 0.56528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480802,-99) , 
0, 0.505798, 1, 0, 0.541462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487001,-99) , 
8, -1.36253, 0, 0, 0.495417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444884,-99) , 
7, 1.85674, 1, 0, 0.487483,-99) , 
0, 0.50285, 0, 0, 0.495262,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0643326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.5381,-99) , 
NN(
0, 
0, 
-1, -3.02956, 0, -1, 0.482985,-99) , 
7, 0.182608, 0, 0, 0.506915,-99) , 
NN(
0, 
0, 
-1, 0.0403228, 1, -1, 0.461388,-99) , 
8, -1.91027, 1, 0, 0.485136,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0292393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.28185, 1, 1, 0.510171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450638,-99) , 
0, 0.496181, 0, 0, 0.491315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408779,-99) , 
7, -0.135682, 0, 0, 0.470591,-99) , 
2, -0.0862331, 0, 0, 0.504671,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0522371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496073,-99) , 
0, 0.499358, 1, 0, 0.541197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485933,-99) , 
3, 0.401255, 1, 0, 0.492612,-99) , 
3, 5.83023, 0, 0, 0.496878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436681,-99) , 
7, 1.00985, 1, 0, 0.478563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398856,-99) , 
0, 0.493329, 1, 0, 0.458712,-99) , 
0, 0.494282, 0, 0, 0.48895,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0661001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.78083, 0, 1, 0.570141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486655,-99) , 
8, -2.6858, 0, 0, 0.518414,-99) , 
8, -3.13701, 1, 0, 0.525893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458459,-99) , 
7, 1.79457, 0, 0, 0.484703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40519,-99) , 
0, 0.495228, 0, 0, 0.464517,-99) , 
9, 0.306877, 1, 0, 0.507873,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0744928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495392,-99) , 
9, -1.08353, 0, 0, 0.524866,-99) , 
9, -2.10335, 1, 0, 0.532752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480553,-99) , 
3, 2.27935, 0, 0, 0.496617,-99) , 
NN(
0, 
0, 
-1, 0.00065563, 1, -1, 0.442998,-99) , 
3, 2.95853, 1, 0, 0.48043,-99) , 
9, -0.45597, 1, 0, 0.502933,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0678282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460368,-99) , 
8, -3.28077, 0, 0, 0.528202,-99) , 
8, -3.76836, 1, 0, 0.539825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462566,-99) , 
8, -0.780537, 1, 0, 0.508355,-99) , 
NN(
0, 
0, 
-1, -0.535248, 1, -1, 0.463988,-99) , 
9, -0.382636, 0, 0, 0.496324,-99) , 
9, -0.916505, 1, 0, 0.507886,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0575461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440933,-99) , 
4, 0.999887, 0, 0, 0.506511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434161,-99) , 
4, 0.999525, 0, 0, 0.500294,-99) , 
8, -3.81162, 1, 0, 0.504313,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0675981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.32689, 1, 1, 0.522904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469704,-99) , 
2, 0.0983372, 0, 0, 0.482505,-99) , 
9, -0.943762, 0, 0, 0.506571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481546,-99) , 
7, 1.58135, 0, 0, 0.526262,-99) , 
NN(
0, 
0, 
-1, 2.1002, 0, -1, 0.453948,-99) , 
8, -1.41583, 1, 0, 0.474897,-99) , 
7, 1.28419, 1, 0, 0.49666,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0773236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488539,-99) , 
7, -1.0154, 0, 0, 0.550923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45904,-99) , 
7, 0.875373, 0, 0, 0.49891,-99) , 
9, -0.79638, 1, 0, 0.514893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470214,-99) , 
1, 0.00410972, 0, 0, 0.477999,-99) , 
NN(
0, 
0, 
-1, 0.714841, 1, -1, 0.428289,-99) , 
3, 3.77796, 1, 0, 0.468011,-99) , 
0, 0.49809, 0, 0, 0.491496,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0753287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479369,-99) , 
0, 0.503804, 1, 0, 0.553332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466517,-99) , 
7, -1.2009, 0, 0, 0.538941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470127,-99) , 
8, -2.54434, 1, 0, 0.475983,-99) , 
8, -0.930481, 0, 0, 0.485351,-99) , 
9, -0.860959, 1, 0, 0.500192,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0635524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470101,-99) , 
8, -3.29682, 0, 0, 0.533111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472596,-99) , 
0, 0.495233, 1, 0, 0.483436,-99) , 
8, -2.79971, 1, 0, 0.491617,-99) , 
8, -3.84362, 1, 0, 0.494804,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.070325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.724025, 1, 1, 0.527575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406506,-99) , 
0, 0.500948, 1, 0, 0.469655,-99) , 
3, 3.24926, 1, 0, 0.51093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453969,-99) , 
2, -0.086773, 1, 0, 0.46204,-99) , 
0, 0.493333, 1, 0, 0.470814,-99) , 
7, 0.713879, 1, 0, 0.489778,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0714992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477023,-99) , 
3, 1.81451, 1, 0, 0.54356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433282,-99) , 
6, -951.286, 0, 0, 0.480936,-99) , 
3, 2.84955, 1, 0, 0.523214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498746,-99) , 
0, 0.505073, 0, 0, 0.520605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46324,-99) , 
2, -0.0848457, 1, 0, 0.469459,-99) , 
0, 0.503803, 0, 0, 0.474538,-99) , 
7, -0.143088, 1, 0, 0.484598,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0468093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619684,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28158, 0, 1, 0.517718,-99) , 
NN(
0, 
0, 
-1, 0.00124899, 1, -1, 0.450763,-99) , 
0, 0.491423, 0, 0, 0.512322,-99) , 
1, -0.0075517, 1, 0, 0.515701,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0328496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.50812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453486,-99) , 
4, 0.999525, 0, 0, 0.502777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516522,-99) , 
NN(
0, 
0, 
-1, 0.496455, 1, -1, 0.412578,-99) , 
0, 0.499995, 0, 0, 0.444298,-99) , 
1, 0.00442927, 1, 0, 0.497848,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0509508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.570318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47099,-99) , 
7, -0.011003, 0, 0, 0.514358,-99) , 
NN(
0, 
0, 
-1, 0.498997, 0, -1, 0.482061,-99) , 
0, 0.49809, 1, 0, 0.497626,-99) , 
8, -3.30406, 1, 0, 0.502998,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.053974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01604, 1, 1, 0.549144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43286,-99) , 
7, -0.304572, 1, 0, 0.493161,-99) , 
7, 0.144119, 0, 0, 0.529945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446119,-99) , 
0, 0.501901, 1, 0, 0.494303,-99) , 
NN(
0, 
0, 
-1, -1.22151, 1, -1, 0.457878,-99) , 
9, -1.06685, 0, 0, 0.485796,-99) , 
2, 0.0579437, 0, 0, 0.493561,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.027417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.441187, 1, 1, 0.509629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430339,-99) , 
3, 6.68787, 1, 0, 0.504246,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.092583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479627,-99) , 
8, -2.95563, 0, 0, 0.559174,-99) , 
NN(
0, 
0, 
-1, 0.500679, 0, -1, 0.449833,-99) , 
3, 3.22268, 1, 0, 0.524166,-99) , 
NN(
NN(
0, 
0, 
-1, -0.238886, 1, 1, 0.537522,-99) , 
NN(
0, 
0, 
-1, 0.497489, 1, -1, 0.46503,-99) , 
0, 0.492514, 1, 0, 0.47883,-99) , 
0, 0.499044, 0, 0, 0.497589,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0720378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471629,-99) , 
9, -0.518556, 1, 0, 0.511056,-99) , 
7, 1.28367, 0, 0, 0.529412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480093,-99) , 
2, -0.019154, 0, 0, 0.508546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467552,-99) , 
3, 0.425967, 1, 0, 0.473899,-99) , 
3, 3.24833, 0, 0, 0.481767,-99) , 
2, 0.0547267, 0, 0, 0.490527,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0299233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495491,-99) , 
2, -0.0829858, 1, 0, 0.501402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412626,-99) , 
9, -1.85146, 1, 0, 0.445648,-99) , 
7, -0.673596, 0, 0, 0.497234,-99) , 
7, -1.28588, 1, 0, 0.500047,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0563171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39288, 0, 1, 0.519708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450425,-99) , 
0, 0.490157, 1, 0, 0.463731,-99) , 
0, 0.494283, 0, 0, 0.508523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451761,-99) , 
7, 1.85537, 1, 0, 0.499891,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_12_25_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_12_25_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_12_25_noPCts *ReadBDT_maker_LHC19c2a_12_25_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_12_25_noPCts(theInpVar);
  }
}
