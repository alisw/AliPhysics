#include "LHC19c2a_TMVAClassification_BDT_6_8_noP.class.h"

double ReadBDT_LHC19c2a_6_8_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_6_8_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.44256603641298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43395, 1, 1, 0.750802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268516,-99) , 
4, 0.999524, 0, 0, 0.69937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312987,-99) , 
7, -949.398, 0, 0, 0.419022,-99) , 
NN(
0, 
0, 
-1, -1.57859, 1, -1, 0.0502926,-99) , 
4, 0.999524, 0, 0, 0.370345,-99) , 
9, -2.48251, 1, 0, 0.499275,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.400733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.51528, 1, 1, 0.720172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32351,-99) , 
4, 0.999524, 0, 0, 0.679296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359607,-99) , 
7, -949.398, 0, 0, 0.455132,-99) , 
NN(
0, 
0, 
-1, -1.82692, 1, -1, 0.15383,-99) , 
5, 0.42751, 1, 0, 0.390655,-99) , 
9, -2.6054, 1, 0, 0.492647,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.227408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.77518, 1, 1, 0.739306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
5, 0.616311, 1, 0, 0.689099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226647,-99) , 
5, 0.522202, 1, 0, 0.46588,-99) , 
NN(
0, 
0, 
-1, -2.05168, 1, -1, 0.0922283,-99) , 
4, 0.999524, 0, 0, 0.421481,-99) , 
9, -2.95307, 1, 0, 0.490462,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.283267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.33671, 1, 1, 0.608209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208529,-99) , 
4, 0.999048, 0, 0, 0.578377,-99) , 
NN(
0, 
0, 
-1, 0.235939, 1, -1, 0.341287,-99) , 
9, -1.79103, 1, 0, 0.474879,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.224144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56179, 1, 1, 0.627593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306509,-99) , 
4, 0.999977, 0, 0, 0.443918,-99) , 
9, -2.6054, 1, 0, 0.507959,-99) , 
NN(
0, 
0, 
-1, -2.01744, 1, -1, 0.191244,-99) , 
4, 0.999524, 0, 0, 0.47354,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.22905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438042,-99) , 
10, -1.27131, 0, 0, 0.56025,-99) , 
9, -3.78102, 1, 0, 0.626751,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.405236,-99) , 
9, -2.95613, 1, 0, 0.460781,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.213675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334941,-99) , 
8, -1.38092, 0, 0, 0.53326,-99) , 
NN(
0, 
0, 
-1, -2.06863, 1, -1, 0.260643,-99) , 
4, 0.999524, 0, 0, 0.507276,-99) , 
NN(
0, 
0, 
-1, 2.40136, 1, -1, 0.199606,-99) , 
8, 1.85714, 1, 0, 0.479989,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.212624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10259, 0, 1, 0.715763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452739,-99) , 
10, -1.13698, 0, 0, 0.536247,-99) , 
9, -3.64792, 1, 0, 0.613765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.167817,-99) , 
8, -1.28568, 0, 0, 0.473159,-99) , 
NN(
0, 
0, 
-1, -1.91398, 1, -1, 0.248486,-99) , 
5, 0.330697, 1, 0, 0.41821,-99) , 
9, -2.9819, 1, 0, 0.465899,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.205959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.812829, 0, 1, 0.69116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440053,-99) , 
9, -3.61721, 1, 0, 0.528264,-99) , 
5, 0.427829, 1, 0, 0.629381,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.411306,-99) , 
9, -3.11643, 1, 0, 0.456966,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.172628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374808,-99) , 
4, 0.999932, 0, 0, 0.512696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212069,-99) , 
8, 2.14284, 1, 0, 0.497409,-99) , 
NN(
0, 
0, 
-1, -2.45058, 1, -1, 0.243911,-99) , 
4, 0.999524, 0, 0, 0.472278,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.216506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.46557, 1, 1, 0.552813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32081,-99) , 
9, -3.30673, 1, 0, 0.385974,-99) , 
5, 0.52053, 1, 0, 0.509964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321175,-99) , 
7, -951.286, 0, 0, 0.39634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.131947,-99) , 
5, 0.140262, 1, 0, 0.361511,-99) , 
9, -1.26658, 1, 0, 0.462418,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.154784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.94463, 1, 1, 0.578772,-99) , 
NN(
0, 
0, 
-1, -0.795854, 0, -1, 0.440738,-99) , 
9, -3.10799, 1, 0, 0.47096,-99) , 
NN(
0, 
0, 
-1, 0.32702, 1, -1, 0.192501,-99) , 
8, 2.14286, 1, 0, 0.45584,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.101874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258245,-99) , 
8, -1.77543, 0, 0, 0.4958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238176,-99) , 
8, 2.14286, 1, 0, 0.483158,-99) , 
NN(
0, 
0, 
-1, -2.39939, 1, -1, 0.214651,-99) , 
4, 0.999048, 0, 0, 0.466537,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.128799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669373,-99) , 
NN(
0, 
0, 
-1, -0.999976, 0, -1, 0.458666,-99) , 
9, -3.88098, 1, 0, 0.472899,-99) , 
NN(
0, 
0, 
-1, -2.06863, 1, -1, 0.219341,-99) , 
4, 0.999048, 0, 0, 0.457441,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.102508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274919,-99) , 
8, 2.07482, 1, 0, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256268,-99) , 
8, -1.85711, 0, 0, 0.490432,-99) , 
NN(
0, 
0, 
-1, -0.140461, 1, -1, 0.235784,-99) , 
4, 0.999048, 0, 0, 0.47503,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.130516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266133,-99) , 
8, -1.85706, 0, 0, 0.505672,-99) , 
NN(
0, 
0, 
-1, -1.78627, 1, -1, 0.287031,-99) , 
4, 0.999766, 0, 0, 0.485422,-99) , 
NN(
0, 
0, 
-1, -1.98478, 1, -1, 0.330739,-99) , 
5, 0.617628, 1, 0, 0.461911,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.189518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37194,-99) , 
4, 0.999905, 0, 0, 0.559679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409929,-99) , 
9, -3.45331, 1, 0, 0.449493,-99) , 
5, 0.142185, 1, 0, 0.501427,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.395226,-99) , 
9, -1.86901, 1, 0, 0.453671,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.10921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258569,-99) , 
8, 2.2381, 1, 0, 0.500921,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.359066,-99) , 
8, -0.99997, 0, 0, 0.477649,-99) , 
NN(
0, 
0, 
-1, -2.06389, 1, -1, 0.256514,-99) , 
4, 0.999048, 0, 0, 0.464967,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.240401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396625,-99) , 
6, 0.00452999, 0, 0, 0.471378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201935,-99) , 
6, 0.0237843, 1, 0, 0.463944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.193758,-99) , 
8, 2.42857, 1, 0, 0.455889,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.106157);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625857,-99) , 
NN(
0, 
0, 
-1, -0.999972, 0, -1, 0.453064,-99) , 
9, -3.81451, 1, 0, 0.466079,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.12522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281327,-99) , 
4, 0.998572, 0, 0, 0.514291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342858,-99) , 
9, -3.76602, 1, 0, 0.402693,-99) , 
8, -0.673411, 0, 0, 0.486802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.206826,-99) , 
8, 2.42857, 1, 0, 0.478907,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.115483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491523,-99) , 
9, -2.72547, 1, 0, 0.513703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311638,-99) , 
7, -951.286, 0, 0, 0.394945,-99) , 
8, -0.823114, 0, 0, 0.486807,-99) , 
NN(
0, 
0, 
-1, 0.427071, 1, -1, 0.349724,-99) , 
8, 1.57143, 1, 0, 0.471072,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0851974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346317,-99) , 
4, 0.999536, 0, 0, 0.501103,-99) , 
NN(
0, 
0, 
-1, -0.837098, 0, -1, 0.332637,-99) , 
8, -1.57134, 0, 0, 0.488933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371374,-99) , 
8, 0.223121, 0, 0, 0.421672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.198264,-99) , 
9, -2.07738, 1, 0, 0.35076,-99) , 
5, 0.710596, 1, 0, 0.474796,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.147815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460501,-99) , 
5, 0.14201, 1, 0, 0.51317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374957,-99) , 
9, -3.75834, 1, 0, 0.417369,-99) , 
8, -0.455739, 0, 0, 0.481897,-99) , 
NN(
0, 
0, 
-1, 0.427101, 1, -1, 0.31861,-99) , 
8, 1.85716, 1, 0, 0.46952,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.174007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00630747, 0, 1, 0.5621,-99) , 
NN(
0, 
0, 
-1, -1.99132, 1, -1, 0.402962,-99) , 
6, 0.00339633, 0, 0, 0.476234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226844,-99) , 
6, 0.0237755, 1, 0, 0.469507,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.145721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327057,-99) , 
4, 0.99981, 0, 0, 0.535301,-99) , 
NN(
0, 
0, 
-1, -2.14774, 1, -1, 0.454745,-99) , 
5, 0.142014, 1, 0, 0.496163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579309,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.379047,-99) , 
9, 2.09882, 0, 0, 0.407338,-99) , 
9, -1.13362, 1, 0, 0.470647,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0777371);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659527,-99) , 
NN(
0, 
0, 
-1, -1.57134, 0, -1, 0.466986,-99) , 
9, -4.09685, 1, 0, 0.475778,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0884767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486952,-99) , 
9, -2.94914, 1, 0, 0.505937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298757,-99) , 
7, -951.286, 0, 0, 0.381933,-99) , 
8, -1.19045, 0, 0, 0.4904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252008,-99) , 
8, 2.42857, 1, 0, 0.48421,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.100937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423261,-99) , 
5, 0.712783, 1, 0, 0.517228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274467,-99) , 
8, 2.42857, 1, 0, 0.509645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514741,-99) , 
NN(
0, 
0, 
-1, -1.85705, 0, -1, 0.336095,-99) , 
9, -3.76602, 1, 0, 0.396605,-99) , 
8, -0.999926, 0, 0, 0.491991,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.124663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.716369, 0, 1, 0.599049,-99) , 
NN(
0, 
0, 
-1, 0.0021563, 0, -1, 0.457255,-99) , 
6, 0.00566035, 0, 0, 0.493312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257865,-99) , 
6, 0.0237791, 1, 0, 0.487017,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.131041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336614,-99) , 
8, -1.8571, 0, 0, 0.541131,-99) , 
NN(
0, 
0, 
-1, -2.05856, 1, -1, 0.43211,-99) , 
6, 0.00226423, 0, 0, 0.499313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273665,-99) , 
6, 0.0237755, 1, 0, 0.493268,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0902169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498364,-99) , 
9, -2.53853, 1, 0, 0.521113,-99) , 
NN(
0, 
0, 
-1, 0.331094, 1, -1, 0.369055,-99) , 
8, 1.93878, 1, 0, 0.508349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518972,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.378715,-99) , 
9, -3.6699, 1, 0, 0.424124,-99) , 
8, -0.714222, 0, 0, 0.489296,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0566162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498096,-99) , 
9, -3.25131, 1, 0, 0.511256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304138,-99) , 
8, 2.34694, 1, 0, 0.504586,-99) , 
NN(
0, 
0, 
-1, -0.810801, 0, -1, 0.357907,-99) , 
8, -1.57139, 0, 0, 0.494976,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.136918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.740023, 0, 1, 0.592209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.1934,-99) , 
4, 0.999524, 0, 0, 0.479212,-99) , 
9, -1.92305, 1, 0, 0.529651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452423,-99) , 
5, -0.336472, 1, 0, 0.508107,-99) , 
NN(
0, 
0, 
-1, -0.810166, 0, -1, 0.400228,-99) , 
7, -951.286, 0, 0, 0.45111,-99) , 
8, -0.14284, 0, 0, 0.498324,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.107516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49749,-99) , 
5, -0.810662, 0, 0, 0.593352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439143,-99) , 
9, -2.17395, 1, 0, 0.47854,-99) , 
6, 0.00677466, 0, 0, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279005,-99) , 
6, 0.0237124, 1, 0, 0.494688,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0793598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10966, 1, 1, 0.588862,-99) , 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.477007,-99) , 
6, 0.00679391, 0, 0, 0.49812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303345,-99) , 
6, 0.0237791, 1, 0, 0.493081,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.105283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400563,-99) , 
4, 0.998572, 0, 0, 0.528281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341505,-99) , 
8, 2.29252, 1, 0, 0.520135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443828,-99) , 
5, -0.147397, 1, 0, 0.51061,-99) , 
NN(
0, 
0, 
-1, -0.811119, 0, -1, 0.3912,-99) , 
7, -951.286, 0, 0, 0.444072,-99) , 
8, -0.714219, 0, 0, 0.503221,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0456376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368713,-99) , 
8, 2.12925, 1, 0, 0.494678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301397,-99) , 
8, -1.57139, 0, 0, 0.485681,-99) , 
9, -3.98928, 1, 0, 0.493503,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0828908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.742193, 1, 1, 0.58716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440526,-99) , 
9, -1.94794, 1, 0, 0.477449,-99) , 
6, 0.00791618, 0, 0, 0.493155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292401,-99) , 
6, 0.0237486, 1, 0, 0.487908,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0949887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480088,-99) , 
4, 0.999997, 0, 0, 0.509511,-99) , 
NN(
0, 
0, 
-1, -1.03356, 1, -1, 0.428956,-99) , 
4, 0.999932, 0, 0, 0.492298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311789,-99) , 
4, 0.998572, 0, 0, 0.486304,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0862117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494027,-99) , 
7, -951.198, 0, 0, 0.5248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431316,-99) , 
9, -3.10606, 1, 0, 0.448475,-99) , 
6, 0.00226422, 0, 0, 0.495754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304806,-99) , 
6, 0.0237791, 1, 0, 0.490808,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.114188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43384, 1, 1, 0.567301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337443,-99) , 
5, 0.236791, 1, 0, 0.480422,-99) , 
9, -1.62274, 1, 0, 0.524008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469679,-99) , 
9, -3.9422, 1, 0, 0.511505,-99) , 
NN(
0, 
0, 
-1, -0.745426, 0, -1, 0.438343,-99) , 
9, -3.10479, 1, 0, 0.46678,-99) , 
8, 0.142887, 0, 0, 0.49554,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0409135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330428,-99) , 
4, 0.998571, 0, 0, 0.495119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314519,-99) , 
8, -1.57134, 0, 0, 0.486712,-99) , 
9, -4.10179, 1, 0, 0.493545,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0909768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.631945, 1, 1, 0.568123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463843,-99) , 
9, -3.28516, 1, 0, 0.476451,-99) , 
6, 0.00679502, 0, 0, 0.493807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320146,-99) , 
6, 0.0237843, 1, 0, 0.489314,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0803435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483384,-99) , 
4, 0.999994, 0, 0, 0.513492,-99) , 
NN(
0, 
0, 
-1, -1.97709, 1, -1, 0.439645,-99) , 
4, 0.999932, 0, 0, 0.497879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340584,-99) , 
4, 0.998572, 0, 0, 0.492641,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0804025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37993,-99) , 
4, 0.999048, 0, 0, 0.524858,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.461162,-99) , 
6, 0.00226463, 0, 0, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321321,-99) , 
6, 0.0237791, 1, 0, 0.495834,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0658933);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45686,-99) , 
8, -0.265269, 0, 0, 0.495233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306797,-99) , 
8, -1.57139, 0, 0, 0.486692,-99) , 
9, -4.09685, 1, 0, 0.492906,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0500884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.892768, 1, 1, 0.573625,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.485436,-99) , 
6, 0.00905994, 0, 0, 0.495161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322482,-99) , 
6, 0.0237843, 1, 0, 0.490806,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.074344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464146,-99) , 
9, -0.796582, 1, 0, 0.511791,-99) , 
NN(
0, 
0, 
-1, -0.238748, 1, -1, 0.446877,-99) , 
6, 0.00113249, 0, 0, 0.499035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334515,-99) , 
6, 0.0237843, 1, 0, 0.49487,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0482049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492336,-99) , 
6, 0.00792621, 0, 0, 0.502371,-99) , 
NN(
0, 
0, 
-1, -2.71532, 1, -1, 0.404063,-99) , 
8, -1.5714, 0, 0, 0.49613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346384,-99) , 
6, 0.0237791, 1, 0, 0.492278,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0704629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476748,-99) , 
0, 0.500947, 1, 0, 0.513696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372335,-99) , 
8, 2.23809, 1, 0, 0.507707,-99) , 
NN(
0, 
0, 
-1, -2.04751, 0, -1, 0.4396,-99) , 
8, -0.999916, 0, 0, 0.497222,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0785739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474737,-99) , 
5, -0.0496687, 1, 0, 0.511585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353529,-99) , 
9, -1.9691, 1, 0, 0.450576,-99) , 
4, 0.999932, 0, 0, 0.49854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362679,-99) , 
4, 0.998571, 0, 0, 0.494028,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0538244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430732,-99) , 
8, 1.69388, 1, 0, 0.505295,-99) , 
NN(
0, 
0, 
-1, -0.716419, 0, -1, 0.408799,-99) , 
8, -1.57135, 0, 0, 0.499195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338651,-99) , 
6, 0.0237319, 1, 0, 0.495145,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0399989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499933,-99) , 
9, 1.63127, 0, 0, 0.505931,-99) , 
NN(
0, 
0, 
-1, -1.26789, 1, -1, 0.445863,-99) , 
4, 0.999932, 0, 0, 0.493104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373405,-99) , 
4, 0.998572, 0, 0, 0.489127,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0610547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455709,-99) , 
4, 0.999932, 0, 0, 0.505069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374299,-99) , 
4, 0.998571, 0, 0, 0.500746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347636,-99) , 
6, 0.0237147, 1, 0, 0.496902,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0647292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471437,-99) , 
8, -0.887522, 0, 0, 0.546431,-99) , 
NN(
0, 
0, 
-1, -0.794096, 0, -1, 0.480131,-99) , 
9, -3.20446, 1, 0, 0.491722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377921,-99) , 
8, -1.85705, 0, 0, 0.487317,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0606814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49266,-99) , 
8, -1.00663, 0, 0, 0.56306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458426,-99) , 
10, -0.391437, 0, 0, 0.49529,-99) , 
9, -3.56463, 1, 0, 0.502052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394187,-99) , 
8, -1.8571, 0, 0, 0.497915,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0879876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442989,-99) , 
9, -3.38239, 1, 0, 0.493063,-99) , 
8, 0.329266, 0, 0, 0.524576,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.478005,-99) , 
9, -2.43291, 1, 0, 0.496693,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0554851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4509,-99) , 
4, 0.999864, 0, 0, 0.508137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394668,-99) , 
4, 0.998571, 0, 0, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395191,-99) , 
8, -1.85705, 0, 0, 0.500216,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.061885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.575656, 0, 1, 0.529381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465718,-99) , 
7, -951.286, 0, 0, 0.490822,-99) , 
9, -1.93669, 1, 0, 0.512045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444755,-99) , 
8, -0.170039, 0, 0, 0.47603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406755,-99) , 
8, 1.57145, 1, 0, 0.468779,-99) , 
0, 0.499995, 1, 0, 0.497286,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0599942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459116,-99) , 
5, 0.425498, 1, 0, 0.511309,-99) , 
NN(
0, 
0, 
-1, -0.33479, 0, -1, 0.464365,-99) , 
4, 0.999932, 0, 0, 0.501433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386656,-99) , 
4, 0.998571, 0, 0, 0.497692,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.11284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493191,-99) , 
9, -2.26753, 1, 0, 0.544899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461537,-99) , 
9, -3.3824, 1, 0, 0.484578,-99) , 
8, 0.420295, 0, 0, 0.506127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426789,-99) , 
8, 1.28704, 1, 0, 0.516757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394496,-99) , 
9, 1.6727, 0, 0, 0.427877,-99) , 
7, -951.286, 0, 0, 0.458138,-99) , 
9, -1.10367, 1, 0, 0.492886,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0273277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381343,-99) , 
8, -1.57134, 0, 0, 0.49552,-99) , 
9, -4.07008, 1, 0, 0.500392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396953,-99) , 
3, 9.03751, 1, 0, 0.497298,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0592686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490093,-99) , 
8, 0.666285, 0, 0, 0.509982,-99) , 
NN(
0, 
0, 
-1, 1.381, 1, -1, 0.46815,-99) , 
9, -1.21882, 1, 0, 0.497579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390213,-99) , 
8, -1.85704, 0, 0, 0.493599,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0408185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487337,-99) , 
5, -0.810423, 0, 0, 0.55745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491734,-99) , 
9, 1.52905, 0, 0, 0.495956,-99) , 
6, 0.00905711, 0, 0, 0.502693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3709,-99) , 
6, 0.0237791, 1, 0, 0.499372,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0930806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.291213, 0, 1, 0.556775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466142,-99) , 
8, 0.135615, 0, 0, 0.497224,-99) , 
5, -0.238626, 1, 0, 0.514956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417948,-99) , 
7, -951.286, 0, 0, 0.457676,-99) , 
9, 2.11936, 0, 0, 0.47485,-99) , 
9, -1.10966, 1, 0, 0.503784,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0475084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.915251, 0, 1, 0.521622,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.479975,-99) , 
9, -1.94794, 1, 0, 0.502763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368245,-99) , 
6, 0.0237843, 1, 0, 0.499319,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0484686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486278,-99) , 
8, -0.714226, 0, 0, 0.518146,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.482245,-99) , 
0, 0.499043, 1, 0, 0.503048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392454,-99) , 
4, 0.998571, 0, 0, 0.499502,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.028695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.743315, 1, 1, 0.555062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49715,-99) , 
9, 1.69168, 0, 0, 0.500719,-99) , 
6, 0.00905999, 0, 0, 0.506658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376005,-99) , 
6, 0.0237843, 1, 0, 0.503383,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0346967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.415063, 0, 1, 0.542423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399472,-99) , 
8, -1.57139, 0, 0, 0.499892,-99) , 
9, -3.11643, 1, 0, 0.50876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385582,-99) , 
6, 0.0237791, 1, 0, 0.505596,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0477325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489985,-99) , 
9, -2.73272, 1, 0, 0.500146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415918,-99) , 
10, -1.57295, 0, 0, 0.494872,-99) , 
9, -3.94423, 1, 0, 0.500132,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0484393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443785,-99) , 
8, -1.85705, 0, 0, 0.515739,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.470489,-99) , 
0, 0.502852, 1, 0, 0.508746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425159,-99) , 
5, 0.80818, 1, 0, 0.504554,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.029351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384107,-99) , 
8, -1.57139, 0, 0, 0.498992,-99) , 
9, -3.81451, 1, 0, 0.503764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399992,-99) , 
3, 9.28394, 1, 0, 0.500936,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0563128);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583686,-99) , 
NN(
NN(
0, 
0, 
-1, -2.7328, 1, 1, 0.513027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436623,-99) , 
5, -0.429995, 1, 0, 0.471778,-99) , 
8, 0.142861, 0, 0, 0.493987,-99) , 
9, -3.94423, 1, 0, 0.499307,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0541544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484826,-99) , 
9, -3.02862, 1, 0, 0.493633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381116,-99) , 
10, -1.84091, 0, 0, 0.489309,-99) , 
9, -4.09685, 1, 0, 0.494938,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0510637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48037,-99) , 
9, -0.871237, 1, 0, 0.531175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486915,-99) , 
9, 1.16381, 0, 0, 0.490939,-99) , 
6, 0.00564105, 0, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393456,-99) , 
6, 0.0236939, 1, 0, 0.498367,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0316244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423869,-99) , 
8, -1.85711, 0, 0, 0.505238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404566,-99) , 
3, 9.27754, 1, 0, 0.502483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383138,-99) , 
6, 0.0237843, 1, 0, 0.499427,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0275424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.715807, 0, 1, 0.550226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459192,-99) , 
8, -0.999972, 0, 0, 0.495387,-99) , 
6, 0.0101924, 0, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388031,-99) , 
6, 0.0237843, 1, 0, 0.497151,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0649277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303319,-99) , 
4, 0.99981, 0, 0, 0.507555,-99) , 
NN(
0, 
0, 
-1, -0.141451, 0, -1, 0.472145,-99) , 
5, -0.143491, 1, 0, 0.490724,-99) , 
9, -3.94423, 1, 0, 0.495065,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0737493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4423, 0, 1, 0.54669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474648,-99) , 
8, 0.429965, 0, 0, 0.49556,-99) , 
5, -0.428995, 1, 0, 0.506426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414339,-99) , 
7, -951.286, 0, 0, 0.447187,-99) , 
9, 1.75641, 0, 0, 0.466398,-99) , 
9, -0.872078, 1, 0, 0.496854,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0546986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462499,-99) , 
9, -4.01299, 1, 0, 0.496862,-99) , 
8, -0.315936, 0, 0, 0.526654,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.483958,-99) , 
9, -2.9973, 1, 0, 0.494009,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0514378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486759,-99) , 
9, -4.07176, 1, 0, 0.503533,-99) , 
8, 0.429622, 0, 0, 0.520927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418434,-99) , 
4, 0.999864, 0, 0, 0.493894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329446,-99) , 
4, 0.999048, 0, 0, 0.487255,-99) , 
9, -2.54548, 1, 0, 0.499526,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0544191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83252, 1, 1, 0.601752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473662,-99) , 
5, -0.334816, 1, 0, 0.492517,-99) , 
8, -0.0274518, 0, 0, 0.523513,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.487568,-99) , 
9, -2.6054, 1, 0, 0.499993,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0285799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.37805, 0, 1, 0.536451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419507,-99) , 
4, 0.999048, 0, 0, 0.497865,-99) , 
9, -3.07326, 1, 0, 0.505728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411107,-99) , 
8, -1.85711, 0, 0, 0.502318,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0430841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2661, 1, 1, 0.583348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448239,-99) , 
5, 0.142861, 1, 0, 0.494517,-99) , 
8, -0.500364, 0, 0, 0.530349,-99) , 
NN(
0, 
0, 
-1, -1.57134, 0, -1, 0.492821,-99) , 
9, -2.93434, 1, 0, 0.50225,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0631693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469743,-99) , 
5, 0.234973, 1, 0, 0.513025,-99) , 
4, 0.999524, 1, 0, 0.529089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411213,-99) , 
4, 0.999524, 0, 0, 0.501437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413194,-99) , 
8, 0.0540092, 0, 0, 0.453861,-99) , 
10, -0.605954, 0, 0, 0.494331,-99) , 
9, -2.9973, 1, 0, 0.50257,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0208659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413622,-99) , 
8, -1.5714, 0, 0, 0.497993,-99) , 
9, -3.88098, 1, 0, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410318,-99) , 
6, 0.0237791, 1, 0, 0.499462,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0454372);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485759,-99) , 
9, -2.73283, 1, 0, 0.49566,-99) , 
NN(
0, 
0, 
-1, -1.69381, 0, -1, 0.43346,-99) , 
8, -1.28564, 0, 0, 0.491334,-99) , 
9, -3.94423, 1, 0, 0.495427,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0519941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484019,-99) , 
8, -0.42833, 0, 0, 0.508732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447517,-99) , 
9, 1.12982, 0, 0, 0.472652,-99) , 
9, -0.680794, 1, 0, 0.500865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396312,-99) , 
3, 9.27754, 1, 0, 0.498037,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0417288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48404,-99) , 
5, -0.143489, 1, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42918,-99) , 
8, -1.57135, 0, 0, 0.496676,-99) , 
9, -3.94423, 1, 0, 0.501194,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.05988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475246,-99) , 
9, -4.07177, 1, 0, 0.493966,-99) , 
8, 0.194654, 0, 0, 0.515323,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.480807,-99) , 
9, -2.54548, 1, 0, 0.493406,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0494457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489731,-99) , 
9, -1.20998, 1, 0, 0.514808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468267,-99) , 
5, -0.620335, 1, 0, 0.478031,-99) , 
6, 0.00113251, 0, 0, 0.507559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403321,-99) , 
6, 0.0237843, 1, 0, 0.504939,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0277689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428959,-99) , 
8, 2.38776, 1, 0, 0.505166,-99) , 
NN(
0, 
0, 
-1, -1.05922, 0, -1, 0.460129,-99) , 
8, -1.28563, 0, 0, 0.502002,-99) , 
9, -3.94423, 1, 0, 0.504922,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.049993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.31974, 1, 1, 0.575493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450525,-99) , 
5, 0.0451193, 1, 0, 0.494736,-99) , 
8, -0.549693, 0, 0, 0.528033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456088,-99) , 
10, -0.557814, 0, 0, 0.495877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423273,-99) , 
4, 0.999048, 0, 0, 0.492722,-99) , 
9, -2.9973, 1, 0, 0.500962,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0446601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492949,-99) , 
8, -0.594568, 0, 0, 0.533269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477704,-99) , 
5, -0.334036, 1, 0, 0.493317,-99) , 
9, -3.21754, 1, 0, 0.499963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430206,-99) , 
8, -1.85705, 0, 0, 0.497507,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0183321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546767,-99) , 
NN(
0, 
0, 
-1, 9.06921, 1, -1, 0.496631,-99) , 
9, -3.79564, 1, 0, 0.500553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397486,-99) , 
6, 0.0237791, 1, 0, 0.497968,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0625252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489944,-99) , 
8, -1.15217, 0, 0, 0.548934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465184,-99) , 
10, -0.731306, 0, 0, 0.501051,-99) , 
9, -3.44871, 1, 0, 0.509039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496141,-99) , 
9, 0.237326, 1, 0, 0.51315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412854,-99) , 
9, 1.17802, 0, 0, 0.449083,-99) , 
7, -951.286, 0, 0, 0.470236,-99) , 
9, -0.627527, 1, 0, 0.501036,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0436456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57639, 1, 1, 0.562068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435462,-99) , 
8, -0.809532, 0, 0, 0.496088,-99) , 
5, 0.334068, 1, 0, 0.529974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466539,-99) , 
0, 0.491151, 0, 0, 0.498289,-99) , 
NN(
0, 
0, 
-1, 0.0353025, 0, -1, 0.473549,-99) , 
0, 0.499995, 1, 0, 0.489754,-99) , 
9, -3.10479, 1, 0, 0.498099,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0306984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.329056, 0, 1, 0.516567,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488587,-99) , 
9, -2.46463, 1, 0, 0.499179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41968,-99) , 
3, 9.03751, 1, 0, 0.496828,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0473891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30128, 1, 1, 0.564286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462185,-99) , 
5, 0.0441278, 1, 0, 0.494193,-99) , 
8, -0.766919, 0, 0, 0.529628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476378,-99) , 
10, 0.14524, 0, 0, 0.491685,-99) , 
NN(
0, 
0, 
-1, -0.526697, 1, -1, 0.440877,-99) , 
0, 0.504757, 1, 0, 0.487887,-99) , 
9, -3.04806, 1, 0, 0.497167,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0521442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48894,-99) , 
8, 0.920027, 0, 0, 0.503275,-99) , 
NN(
0, 
0, 
-1, 1.28574, 1, -1, 0.471289,-99) , 
9, -1.52152, 1, 0, 0.491086,-99) , 
9, -3.94423, 1, 0, 0.49484,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0431457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491586,-99) , 
5, -0.428286, 1, 0, 0.502085,-99) , 
8, 0.566523, 0, 0, 0.515153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46339,-99) , 
10, 0.187037, 0, 0, 0.491588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409512,-99) , 
4, 0.999524, 0, 0, 0.486018,-99) , 
9, -2.41312, 1, 0, 0.497705,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0526642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488604,-99) , 
9, -3.49559, 1, 0, 0.504726,-99) , 
8, 0.854004, 0, 0, 0.518094,-99) , 
NN(
0, 
0, 
-1, 0.616229, 1, -1, 0.481481,-99) , 
9, -1.93243, 1, 0, 0.501283,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0496032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496422,-99) , 
5, -0.333802, 1, 0, 0.509445,-99) , 
8, 0.541729, 0, 0, 0.52387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463681,-99) , 
4, 0.999977, 0, 0, 0.494942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390243,-99) , 
4, 0.999524, 0, 0, 0.488262,-99) , 
9, -2.36271, 1, 0, 0.503128,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0439128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.737274, 1, 1, 0.580971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460333,-99) , 
9, -3.17922, 1, 0, 0.508673,-99) , 
8, -0.0563737, 0, 0, 0.529785,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491214,-99) , 
9, -2.6054, 1, 0, 0.504511,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.050954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0335156, 0, 1, 0.555926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479647,-99) , 
9, -2.12271, 1, 0, 0.509062,-99) , 
5, -0.524216, 1, 0, 0.515857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430308,-99) , 
8, -1.0408, 0, 0, 0.494492,-99) , 
NN(
0, 
0, 
-1, -0.334022, 1, -1, 0.42751,-99) , 
8, 1.57143, 1, 0, 0.479666,-99) , 
9, -1.10966, 1, 0, 0.505772,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0472224);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475186,-99) , 
9, -2.3489, 1, 0, 0.566349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498486,-99) , 
5, -0.429782, 1, 0, 0.509081,-99) , 
4, 0.999524, 1, 0, 0.514773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477357,-99) , 
7, -951.286, 0, 0, 0.496411,-99) , 
NN(
0, 
0, 
-1, -0.33441, 1, -1, 0.427647,-99) , 
8, 1.57144, 1, 0, 0.481561,-99) , 
9, -1.10966, 1, 0, 0.50555,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0285089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101924, 0, 1, 0.510793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43705,-99) , 
4, 0.998571, 0, 0, 0.508506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415839,-99) , 
6, 0.0237843, 1, 0, 0.50613,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0413844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444759,-99) , 
10, -1.78453, 0, 0, 0.509333,-99) , 
9, -4.07175, 1, 0, 0.513435,-99) , 
NN(
0, 
0, 
-1, 0.141653, 1, -1, 0.478042,-99) , 
9, -1.26658, 1, 0, 0.502607,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0234847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491259,-99) , 
8, -0.521964, 0, 0, 0.520038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467576,-99) , 
3, 6.66297, 1, 0, 0.49835,-99) , 
9, -2.9973, 1, 0, 0.503238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449216,-99) , 
5, 0.807937, 1, 0, 0.500585,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0274611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486849,-99) , 
9, -1.52157, 1, 0, 0.499896,-99) , 
9, -3.94423, 1, 0, 0.502491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432795,-99) , 
3, 9.03751, 1, 0, 0.500436,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0304257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.715619, 0, 1, 0.540543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482654,-99) , 
6, 0.00194074, 0, 0, 0.498299,-99) , 
6, 0.0101893, 0, 0, 0.501827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411051,-99) , 
6, 0.0237755, 1, 0, 0.499514,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0158499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.20446, 1, 1, 0.504379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452568,-99) , 
8, -1.85705, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455439,-99) , 
5, 0.80818, 1, 0, 0.500084,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0214681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495854,-99) , 
6, 0.0101924, 0, 0, 0.499283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423289,-99) , 
3, 9.28394, 1, 0, 0.497195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414975,-99) , 
6, 0.0237843, 1, 0, 0.495098,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0312925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.541482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492052,-99) , 
9, -3.35235, 1, 0, 0.49754,-99) , 
6, 0.0101907, 0, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402384,-99) , 
6, 0.0237791, 1, 0, 0.498785,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0272993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480851,-99) , 
0, 0.503804, 1, 0, 0.504018,-99) , 
NN(
0, 
0, 
-1, -1.16011, 0, -1, 0.455033,-99) , 
8, -1.28563, 0, 0, 0.500432,-99) , 
9, -4.07008, 1, 0, 0.503664,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0159782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00904067, 0, 1, 0.504467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437094,-99) , 
3, 9.2955, 1, 0, 0.502682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415969,-99) , 
6, 0.0237319, 1, 0, 0.500488,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0145478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396222,-99) , 
4, 0.999705, 0, 0, 0.497421,-99) , 
4, 0.999524, 1, 0, 0.499785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440932,-99) , 
4, 0.998571, 0, 0, 0.497969,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0271426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496799,-99) , 
4, 0.999524, 1, 0, 0.501463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460028,-99) , 
7, -951.286, 0, 0, 0.478496,-99) , 
9, -0.571555, 1, 0, 0.496822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445025,-99) , 
3, 9.03023, 1, 0, 0.495274,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0246059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494235,-99) , 
9, -2.41635, 1, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44125,-99) , 
3, 9.28394, 1, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436422,-99) , 
8, -1.85705, 0, 0, 0.498119,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.032359);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485404,-99) , 
5, 0.0468446, 1, 0, 0.499735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437617,-99) , 
8, -1.57139, 0, 0, 0.497108,-99) , 
9, -4.07008, 1, 0, 0.500238,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0146747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498906,-99) , 
6, 0.00792621, 0, 0, 0.502497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453206,-99) , 
4, 0.998572, 0, 0, 0.500939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431057,-99) , 
6, 0.0237791, 1, 0, 0.499142,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0256827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.521199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420185,-99) , 
4, 0.999048, 0, 0, 0.497515,-99) , 
9, -2.70411, 1, 0, 0.504233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518343,-99) , 
NN(
0, 
0, 
-1, -2.22295, 1, -1, 0.42749,-99) , 
7, -951.286, 0, 0, 0.466644,-99) , 
8, -1.28563, 0, 0, 0.500585,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0374919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49494,-99) , 
4, 0.999524, 1, 0, 0.500379,-99) , 
8, 1.84476, 0, 0, 0.504692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485219,-99) , 
9, -0.24574, 1, 0, 0.502509,-99) , 
NN(
0, 
0, 
-1, -0.144278, 1, -1, 0.44046,-99) , 
8, 1.28572, 1, 0, 0.484965,-99) , 
9, -1.15051, 1, 0, 0.499058,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0292736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494746,-99) , 
9, -2.0339, 1, 0, 0.507437,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.487033,-99) , 
8, -0.428528, 0, 0, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444026,-99) , 
4, 0.998571, 0, 0, 0.499526,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0210838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422513,-99) , 
5, -0.904825, 0, 0, 0.500811,-99) , 
9, 1.51349, 0, 0, 0.503359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426491,-99) , 
6, 0.0237755, 1, 0, 0.501389,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0179215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506175,-99) , 
NN(
0, 
0, 
-1, 1.28574, 1, -1, 0.486718,-99) , 
9, -0.63177, 1, 0, 0.502084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450444,-99) , 
3, 8.99096, 1, 0, 0.500492,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0222962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494698,-99) , 
9, -3.06678, 1, 0, 0.499364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455146,-99) , 
5, 0.80818, 1, 0, 0.497124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431013,-99) , 
6, 0.0237791, 1, 0, 0.495408,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0155816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544048,-99) , 
NN(
0, 
0, 
-1, -0.904831, 0, -1, 0.496314,-99) , 
9, 1.41108, 0, 0, 0.499209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427934,-99) , 
6, 0.0237755, 1, 0, 0.497419,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.020871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.19613, 1, 1, 0.506926,-99) , 
NN(
0, 
0, 
-1, -0.224912, 0, -1, 0.482121,-99) , 
0, 0.502852, 1, 0, 0.503118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453963,-99) , 
5, 0.807937, 1, 0, 0.500719,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0216969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0140755, 1, 1, 0.534981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472058,-99) , 
8, -0.99997, 0, 0, 0.498677,-99) , 
6, 0.0101925, 0, 0, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42816,-99) , 
6, 0.0237843, 1, 0, 0.499884,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0211418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488386,-99) , 
9, -1.13362, 1, 0, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445628,-99) , 
3, 9.28394, 1, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434738,-99) , 
6, 0.0237124, 1, 0, 0.498286,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0359809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491007,-99) , 
5, 0.165763, 1, 0, 0.523682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481504,-99) , 
8, 0.71432, 0, 0, 0.490117,-99) , 
9, -3.43396, 1, 0, 0.494924,-99) , 
9, 1.51349, 0, 0, 0.49718,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0625573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482776,-99) , 
4, 0.999991, 0, 0, 0.518493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338251,-99) , 
4, 0.99981, 0, 0, 0.507808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499502,-99) , 
0, 0.496186, 0, 0, 0.554576,-99) , 
NN(
0, 
0, 
-1, 0.814672, 1, -1, 0.479469,-99) , 
4, 0.999524, 1, 0, 0.489177,-99) , 
5, -0.238658, 1, 0, 0.497799,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0371031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44896,-99) , 
5, 0.710596, 1, 0, 0.504524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415918,-99) , 
5, 0.33037, 0, 0, 0.482071,-99) , 
4, 0.999864, 0, 0, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440052,-99) , 
4, 0.998571, 0, 0, 0.499536,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0134137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498967,-99) , 
4, 0.999524, 1, 0, 0.501001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447491,-99) , 
6, 0.0237843, 1, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411589,-99) , 
4, 0.998571, 0, 0, 0.497036,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0244905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496414,-99) , 
8, -0.415495, 0, 0, 0.517098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488766,-99) , 
10, 0.0353025, 0, 0, 0.499217,-99) , 
9, -3.12603, 1, 0, 0.502764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448469,-99) , 
3, 8.99658, 1, 0, 0.501157,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0503827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.77703, 1, 1, 0.561541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48168,-99) , 
9, -3.98578, 1, 0, 0.494187,-99) , 
8, 0.0909909, 0, 0, 0.512087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488494,-99) , 
8, -0.142853, 1, 0, 0.498236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412244,-99) , 
4, 0.999524, 0, 0, 0.492807,-99) , 
9, -2.46463, 1, 0, 0.500224,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0190395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474123,-99) , 
3, 6.47163, 1, 0, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45757,-99) , 
8, -1.85711, 0, 0, 0.502047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448104,-99) , 
3, 9.03111, 1, 0, 0.500512,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0503781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483313,-99) , 
9, -3.27228, 1, 0, 0.498256,-99) , 
8, 0.85095, 0, 0, 0.509832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49719,-99) , 
5, -0.525442, 0, 0, 0.507871,-99) , 
NN(
0, 
0, 
-1, 0.615563, 1, -1, 0.470524,-99) , 
8, 0.714314, 1, 0, 0.489688,-99) , 
9, -1.93243, 1, 0, 0.500544,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0371411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491819,-99) , 
9, -0.656154, 1, 0, 0.510684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458229,-99) , 
5, 0.808181, 1, 0, 0.507911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428014,-99) , 
4, 0.999905, 0, 0, 0.499299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469705,-99) , 
4, 0.999524, 1, 0, 0.480187,-99) , 
5, 0.0452387, 1, 0, 0.49144,-99) , 
0, 0.49809, 1, 0, 0.499669,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.035426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490619,-99) , 
7, -951.198, 1, 0, 0.501361,-99) , 
10, -1.04575, 1, 0, 0.506759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497791,-99) , 
10, 1.54876, 0, 0, 0.513424,-99) , 
NN(
0, 
0, 
-1, -3.27107, 1, -1, 0.472629,-99) , 
10, -0.89488, 0, 0, 0.488285,-99) , 
8, -0.428511, 0, 0, 0.501205,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0201704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493112,-99) , 
9, -1.52157, 1, 0, 0.502361,-99) , 
9, -3.94423, 1, 0, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449258,-99) , 
3, 9.30758, 1, 0, 0.502641,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0283778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453397,-99) , 
8, -1.85711, 0, 0, 0.507125,-99) , 
NN(
0, 
0, 
-1, -0.999807, 0, -1, 0.476658,-99) , 
6, 0.00113214, 0, 0, 0.501229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442163,-99) , 
6, 0.0237755, 1, 0, 0.499726,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0196699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620828, 1, 1, 0.53081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495062,-99) , 
9, 1.53511, 0, 0, 0.497122,-99) , 
6, 0.0101707, 0, 0, 0.499988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442586,-99) , 
6, 0.0237319, 1, 0, 0.49853,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0147781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.491077,-99) , 
0, 0.500947, 1, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45127,-99) , 
4, 0.998571, 0, 0, 0.499742,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0191034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499987,-99) , 
5, -0.619779, 1, 0, 0.505181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45848,-99) , 
5, -0.810912, 1, 0, 0.489517,-99) , 
9, -0.509818, 1, 0, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44946,-99) , 
8, -1.85706, 0, 0, 0.500353,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0190793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84476, 0, 1, 0.506528,-99) , 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.487353,-99) , 
9, -1.15051, 1, 0, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443197,-99) , 
3, 9.27754, 1, 0, 0.499516,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0201192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494045,-99) , 
8, 0.714298, 0, 0, 0.499409,-99) , 
9, -3.94423, 1, 0, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440901,-99) , 
4, 0.998572, 0, 0, 0.499209,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0361141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490799,-99) , 
4, 0.999994, 0, 0, 0.504103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36511,-99) , 
5, -0.336006, 0, 0, 0.484991,-99) , 
4, 0.999864, 0, 0, 0.501477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458866,-99) , 
4, 0.998572, 0, 0, 0.500162,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0135669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101937, 0, 1, 0.504964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46134,-99) , 
3, 9.30758, 1, 0, 0.503815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457726,-99) , 
6, 0.0237843, 1, 0, 0.502636,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0222708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.523223,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498261,-99) , 
9, -2.69621, 1, 0, 0.5054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525595,-99) , 
NN(
0, 
0, 
-1, -2.22295, 1, -1, 0.446772,-99) , 
7, -951.286, 0, 0, 0.480789,-99) , 
8, -1.28569, 0, 0, 0.503007,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0250456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332351, 0, 1, 0.526947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49471,-99) , 
5, -0.525036, 1, 0, 0.500722,-99) , 
2, -0.0718954, 1, 0, 0.504808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483891,-99) , 
8, 0.383692, 0, 0, 0.495285,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.469129,-99) , 
9, -1.20998, 1, 0, 0.488045,-99) , 
3, 4.6823, 1, 0, 0.501645,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0149604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43291, 1, 1, 0.504662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459143,-99) , 
8, -1.85706, 0, 0, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462555,-99) , 
5, 0.80818, 1, 0, 0.501075,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0329869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492358,-99) , 
5, -0.143761, 1, 0, 0.502697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387929,-99) , 
5, 0.33037, 0, 0, 0.472975,-99) , 
4, 0.999728, 0, 0, 0.500249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439418,-99) , 
4, 0.998572, 0, 0, 0.498435,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0243308);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491082,-99) , 
7, -951.286, 0, 0, 0.49844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429707,-99) , 
10, -1.84763, 0, 0, 0.495901,-99) , 
9, -4.08378, 1, 0, 0.498683,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0302244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487295,-99) , 
8, -0.714367, 0, 0, 0.526592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49459,-99) , 
2, 0.0765561, 0, 0, 0.499059,-99) , 
2, -0.0729279, 1, 0, 0.503376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479484,-99) , 
8, -0.0912408, 0, 0, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0.415819, 0, -1, 0.467288,-99) , 
9, -2.18681, 1, 0, 0.483984,-99) , 
3, 4.6823, 1, 0, 0.499737,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.041091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.737476, 1, 1, 0.556493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482067,-99) , 
5, -0.330705, 1, 0, 0.493621,-99) , 
8, -0.0275761, 0, 0, 0.510757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492142,-99) , 
10, 0.756957, 0, 0, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433562,-99) , 
4, 0.999524, 0, 0, 0.497719,-99) , 
9, -2.6054, 1, 0, 0.5022,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0287449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85152, 0, 1, 0.510958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492246,-99) , 
5, -0.716377, 0, 0, 0.501468,-99) , 
NN(
0, 
0, 
-1, 2.02044, 1, -1, 0.453142,-99) , 
8, 1.28572, 1, 0, 0.487773,-99) , 
9, -1.09165, 1, 0, 0.504622,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0373771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492185,-99) , 
8, 1.19967, 0, 0, 0.500937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436192,-99) , 
8, 1.28571, 1, 0, 0.4852,-99) , 
9, -1.52157, 1, 0, 0.494941,-99) , 
9, -3.94423, 1, 0, 0.4968,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0544802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
9, -2.11372, 1, 0, 0.565414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487014,-99) , 
5, -0.524076, 1, 0, 0.494195,-99) , 
8, 0.670814, 0, 0, 0.50718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484926,-99) , 
7, -949.398, 0, 0, 0.509882,-99) , 
NN(
0, 
0, 
-1, 0.616232, 1, -1, 0.476202,-99) , 
8, 0.428582, 1, 0, 0.490624,-99) , 
9, -1.86901, 1, 0, 0.499825,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0364203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.26741, 1, 1, 0.57189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497098,-99) , 
5, -0.525939, 1, 0, 0.503574,-99) , 
8, 0.59721, 0, 0, 0.517093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455744,-99) , 
4, 0.999932, 0, 0, 0.4988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395814,-99) , 
4, 0.999524, 0, 0, 0.493069,-99) , 
9, -1.93243, 1, 0, 0.506057,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0585908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618195, 0, 1, 0.524577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484516,-99) , 
10, 1.00108, 0, 0, 0.49666,-99) , 
9, -2.32023, 1, 0, 0.511731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432256,-99) , 
7, -951.286, 0, 0, 0.467213,-99) , 
9, 2.0808, 0, 0, 0.478759,-99) , 
9, -0.627527, 1, 0, 0.504943,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0383097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494238,-99) , 
9, -3.3522, 1, 0, 0.50345,-99) , 
8, 1.19504, 0, 0, 0.511015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494018,-99) , 
5, -0.525442, 0, 0, 0.502798,-99) , 
NN(
0, 
0, 
-1, 0.520813, 1, -1, 0.470259,-99) , 
8, 1.00003, 1, 0, 0.490017,-99) , 
9, -1.79948, 1, 0, 0.502119,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0292782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.526817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446839,-99) , 
4, 0.999048, 0, 0, 0.503488,-99) , 
9, -2.74467, 1, 0, 0.509828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513584,-99) , 
NN(
0, 
0, 
-1, -1.77543, 0, -1, 0.458074,-99) , 
7, -951.286, 0, 0, 0.481648,-99) , 
8, -1.28564, 0, 0, 0.507062,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0458259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489565,-99) , 
9, -2.79667, 1, 0, 0.503391,-99) , 
8, 1.51025, 0, 0, 0.50871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46183,-99) , 
7, -951.286, 0, 0, 0.482986,-99) , 
9, 1.98487, 0, 0, 0.488676,-99) , 
9, -1.26658, 1, 0, 0.502553,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0272839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498964,-99) , 
5, -0.619999, 1, 0, 0.504699,-99) , 
8, 1.51096, 0, 0, 0.509191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494923,-99) , 
5, -0.717496, 0, 0, 0.504571,-99) , 
NN(
0, 
0, 
-1, 0.140869, 1, -1, 0.468606,-99) , 
8, 1.00001, 1, 0, 0.4912,-99) , 
9, -1.26658, 1, 0, 0.503669,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0385024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.749568, 0, 1, 0.53459,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493567,-99) , 
9, -2.08918, 1, 0, 0.510664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492544,-99) , 
9, -1.37112, 1, 0, 0.518516,-99) , 
NN(
0, 
0, 
-1, -3.33025, 1, -1, 0.481616,-99) , 
10, -0.62567, 0, 0, 0.493786,-99) , 
8, -0.428514, 0, 0, 0.505584,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0451627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435252,-99) , 
4, 0.999524, 0, 0, 0.507519,-99) , 
9, -2.14912, 1, 0, 0.516515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483694,-99) , 
9, -3.51127, 1, 0, 0.493761,-99) , 
8, 0.470132, 0, 0, 0.501214,-99) , 
10, -0.212717, 0, 0, 0.509541,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0927018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494615,-99) , 
8, -0.142808, 0, 0, 0.518705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354722,-99) , 
7, -0.826495, 0, 0, 0.501935,-99) , 
7, -6.95896, 1, 0, 0.509767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48021,-99) , 
8, -0.142771, 1, 0, 0.490261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453352,-99) , 
2, -0.0715101, 0, 0, 0.483544,-99) , 
9, -0.627527, 1, 0, 0.504403,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0138827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.506234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479549,-99) , 
5, 0.80818, 1, 0, 0.504908,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0312673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495235,-99) , 
4, 0.999524, 1, 0, 0.502765,-99) , 
8, 1.10764, 0, 0, 0.509107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418777,-99) , 
4, 0.999808, 0, 0, 0.498715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437656,-99) , 
5, 0.615368, 1, 0, 0.494474,-99) , 
9, -1.93243, 1, 0, 0.502378,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0274666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499553,-99) , 
5, -0.523862, 1, 0, 0.504154,-99) , 
8, 1.02593, 0, 0, 0.511434,-99) , 
NN(
NN(
0, 
0, 
-1, -0.620351, 0, 1, 0.508738,-99) , 
NN(
0, 
0, 
-1, 0.0452512, 1, -1, 0.476557,-99) , 
8, 0.714318, 1, 0, 0.493171,-99) , 
9, -1.79948, 1, 0, 0.503671,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0385303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.121118, 1, 1, 0.571078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495829,-99) , 
5, -0.334732, 1, 0, 0.505196,-99) , 
8, 0.654156, 0, 0, 0.516535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493399,-99) , 
5, -0.622985, 0, 0, 0.506367,-99) , 
NN(
0, 
0, 
-1, 0.617633, 1, -1, 0.484842,-99) , 
8, 0.428582, 1, 0, 0.493966,-99) , 
9, -1.96075, 1, 0, 0.505966,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0354233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492358,-99) , 
5, 0.237057, 1, 0, 0.534215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481327,-99) , 
8, -0.800002, 0, 0, 0.520525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493933,-99) , 
5, 0.427511, 0, 0, 0.499026,-99) , 
9, -3.05723, 1, 0, 0.504088,-99) , 
8, 1.85713, 0, 0, 0.506267,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0369698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.515936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479647,-99) , 
0, 0.505709, 1, 0, 0.514445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425385,-99) , 
9, 1.32456, 0, 0, 0.481647,-99) , 
5, -0.904927, 0, 0, 0.512014,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.025496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999523, 1, 1, 0.523661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48108,-99) , 
5, -0.904858, 0, 0, 0.505664,-99) , 
2, -0.0721637, 1, 0, 0.508454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486022,-99) , 
7, -951.286, 1, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0.714276, 1, -1, 0.47344,-99) , 
9, -1.68827, 1, 0, 0.490988,-99) , 
3, 4.67556, 1, 0, 0.505164,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0296444);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.51102, 0, 1, 0.512746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460836,-99) , 
8, -0.959193, 0, 0, 0.504187,-99) , 
NN(
0, 
0, 
-1, 0.0456072, 1, -1, 0.47176,-99) , 
8, 1.28572, 1, 0, 0.49466,-99) , 
9, -1.26658, 1, 0, 0.507223,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0258781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459409,-99) , 
5, 0.708781, 1, 0, 0.504963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390089,-99) , 
5, -0.336001, 0, 0, 0.48174,-99) , 
4, 0.999864, 0, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452656,-99) , 
4, 0.998571, 0, 0, 0.500354,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0319551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486141,-99) , 
9, -2.15576, 1, 0, 0.5007,-99) , 
8, 1.85695, 0, 0, 0.503731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483904,-99) , 
5, -0.717096, 0, 0, 0.494926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441488,-99) , 
8, 1.85716, 1, 0, 0.488068,-99) , 
9, -0.760066, 1, 0, 0.500235,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0140273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503329,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.472337,-99) , 
8, -1.28564, 0, 0, 0.500348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441479,-99) , 
6, 0.0237319, 1, 0, 0.498852,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0201688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429551,-99) , 
5, 0.522535, 0, 0, 0.52417,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.496351,-99) , 
4, 0.999524, 1, 0, 0.498435,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482613,-99) , 
0, 0.491424, 0, 0, 0.497137,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0222831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.518149, 0, 1, 0.511839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489725,-99) , 
1, -0.00112982, 1, 0, 0.497136,-99) , 
2, -0.0714207, 1, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442037,-99) , 
6, 0.0237319, 1, 0, 0.498403,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0217319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492852,-99) , 
5, -0.0891116, 1, 0, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465698,-99) , 
5, -0.904832, 0, 0, 0.499792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472755,-99) , 
10, 3.24857, 1, 0, 0.498413,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0104752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4454,-99) , 
5, -0.904831, 0, 0, 0.498978,-99) , 
9, 1.41108, 0, 0, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44987,-99) , 
6, 0.0237791, 1, 0, 0.499092,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0721667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.6737, 0, 1, 0.534863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424712,-99) , 
4, 0.999905, 0, 0, 0.492585,-99) , 
5, 0.140001, 0, 0, 0.504847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357189,-99) , 
7, -1.4206, 0, 0, 0.514515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.168055,-99) , 
7, -2.08094, 0, 0, 0.491845,-99) , 
7, -951.198, 1, 0, 0.498489,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0237924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491531,-99) , 
8, 2.14286, 0, 0, 0.492981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44598,-99) , 
4, 0.998571, 0, 0, 0.491568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436501,-99) , 
6, 0.0237486, 1, 0, 0.490174,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0151944);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0237486, 1, -1, 0.492403,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0302011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47435,-99) , 
4, 0.999954, 0, 0, 0.504085,-99) , 
4, 0.999524, 1, 0, 0.510141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490124,-99) , 
9, -2.89109, 1, 0, 0.495406,-99) , 
NN(
0, 
0, 
-1, -0.287925, 1, -1, 0.467559,-99) , 
5, 0.712782, 1, 0, 0.492796,-99) , 
2, -0.0710631, 1, 0, 0.49608,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0136295);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547095,-99) , 
NN(
0, 
0, 
-1, -1.83303, 0, -1, 0.495152,-99) , 
9, -4.07008, 1, 0, 0.49757,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0109677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468807,-99) , 
5, 0.817001, 1, 0, 0.498467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42961,-99) , 
5, -0.904833, 0, 0, 0.495963,-99) , 
9, 1.46102, 0, 0, 0.497868,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0525456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499625,-99) , 
5, 0.141855, 0, 0, 0.509742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427021,-99) , 
7, -0.483279, 0, 0, 0.491652,-99) , 
7, -951.286, 1, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, -0.142791, 0, -1, 0.472131,-99) , 
0, 0.491424, 0, 0, 0.498664,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0174692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497354,-99) , 
5, -0.619446, 1, 0, 0.502547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460609,-99) , 
8, -1.85706, 0, 0, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445851,-99) , 
6, 0.0237843, 1, 0, 0.499706,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0461298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485288,-99) , 
5, 0.331053, 1, 0, 0.529739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460378,-99) , 
8, -1.61222, 0, 0, 0.504358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437081,-99) , 
7, -0.483279, 0, 0, 0.491255,-99) , 
7, -951.286, 1, 0, 0.497907,-99) , 
8, 1.85712, 0, 0, 0.500194,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.021663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492765,-99) , 
8, -1.28568, 1, 0, 0.494065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442002,-99) , 
10, -1.80151, 0, 0, 0.49187,-99) , 
9, -4.07008, 1, 0, 0.493651,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0113242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429902,-99) , 
4, 0.999705, 0, 0, 0.497943,-99) , 
4, 0.999524, 1, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433467,-99) , 
4, 0.998571, 0, 0, 0.498064,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0596727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.6045, 0, 1, 0.529083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419259,-99) , 
4, 0.99981, 0, 0, 0.495717,-99) , 
5, 0.141861, 0, 0, 0.505454,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28619, 0, 1, 0.521932,-99) , 
NN(
0, 
0, 
-1, 0.724446, 1, -1, 0.273661,-99) , 
7, -1.51256, 0, 0, 0.491445,-99) , 
7, -951.198, 1, 0, 0.49861,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0361648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492844,-99) , 
9, -1.24311, 1, 0, 0.501376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483818,-99) , 
4, 0.999524, 1, 0, 0.487319,-99) , 
10, 0.777711, 0, 0, 0.491612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434239,-99) , 
4, 0.998571, 0, 0, 0.489962,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0289048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482425,-99) , 
5, -0.715682, 0, 0, 0.513431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487466,-99) , 
5, -0.619321, 1, 0, 0.493086,-99) , 
2, 0.0706018, 0, 0, 0.496234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483563,-99) , 
8, 0.947206, 0, 0, 0.48857,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.463282,-99) , 
9, -1.20998, 1, 0, 0.48156,-99) , 
3, 4.55908, 1, 0, 0.493313,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.028102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494057,-99) , 
4, 0.999524, 1, 0, 0.505696,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492032,-99) , 
9, -2.69621, 1, 0, 0.495951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469428,-99) , 
8, -1.69385, 0, 0, 0.509292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443128,-99) , 
5, -0.337823, 1, 0, 0.478816,-99) , 
8, -1.28568, 0, 0, 0.49427,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0111685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.014073, 1, 1, 0.528975,-99) , 
NN(
0, 
0, 
-1, -1.85705, 0, -1, 0.497875,-99) , 
6, 0.0101907, 0, 0, 0.50054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449675,-99) , 
6, 0.0237791, 1, 0, 0.499255,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0403404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.736602, 0, 1, 0.52953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472342,-99) , 
7, -951.286, 1, 0, 0.491898,-99) , 
9, -2.2581, 1, 0, 0.503743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541827,-99) , 
NN(
0, 
0, 
-1, -0.90843, 1, -1, 0.482812,-99) , 
10, 1.80281, 0, 0, 0.48758,-99) , 
8, -0.142806, 0, 0, 0.497375,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0314105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491212,-99) , 
4, 0.999987, 0, 0, 0.503542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404556,-99) , 
5, 0.3304, 0, 0, 0.47855,-99) , 
4, 0.999728, 0, 0, 0.501494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464789,-99) , 
4, 0.998571, 0, 0, 0.500401,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0295703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481328,-99) , 
8, -0.884162, 0, 0, 0.516866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49292,-99) , 
5, 0.522678, 0, 0, 0.497783,-99) , 
9, -3.32457, 1, 0, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468528,-99) , 
10, 3.38785, 1, 0, 0.499427,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0261532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497985,-99) , 
5, -0.0492772, 1, 0, 0.509174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417553,-99) , 
5, -0.146301, 0, 0, 0.478476,-99) , 
4, 0.999796, 0, 0, 0.506063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448532,-99) , 
4, 0.998572, 0, 0, 0.504419,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0249309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499746,-99) , 
6, 0.00452856, 0, 0, 0.507385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471946,-99) , 
7, -951.286, 0, 0, 0.487612,-99) , 
9, -0.743315, 1, 0, 0.503152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447761,-99) , 
6, 0.0237755, 1, 0, 0.501754,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0253539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497032,-99) , 
4, 0.999524, 1, 0, 0.50202,-99) , 
8, 1.11092, 0, 0, 0.507064,-99) , 
NN(
NN(
0, 
0, 
-1, -0.624283, 0, 1, 0.510764,-99) , 
NN(
0, 
0, 
-1, 0.616233, 1, -1, 0.484681,-99) , 
8, 0.42861, 1, 0, 0.495873,-99) , 
9, -1.93669, 1, 0, 0.501881,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0164137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499418,-99) , 
5, 0.142081, 1, 0, 0.533013,-99) , 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505623,-99) , 
8, 1.85716, 0, 0, 0.507535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47032,-99) , 
3, 9.03751, 1, 0, 0.506469,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0207169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08535, 1, 1, 0.507842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456676,-99) , 
6, 0.00339619, 0, 0, 0.480675,-99) , 
8, -1.28564, 0, 0, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449977,-99) , 
6, 0.0237791, 1, 0, 0.503843,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0255936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479285,-99) , 
8, -1.97956, 0, 0, 0.519867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493486,-99) , 
9, -2.96463, 1, 0, 0.497686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430816,-99) , 
10, -1.35653, 0, 0, 0.470075,-99) , 
8, -1.136, 0, 0, 0.495811,-99) , 
8, -1.5714, 1, 0, 0.497342,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0201613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.71756, 1, 1, 0.544883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466627,-99) , 
5, -0.333973, 1, 0, 0.491814,-99) , 
9, -1.05197, 1, 0, 0.520112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495976,-99) , 
10, -0.316538, 1, 0, 0.501022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463099,-99) , 
10, -0.137341, 0, 0, 0.483381,-99) , 
0, 0.504757, 1, 0, 0.499723,-99) , 
8, 1.28572, 0, 0, 0.503026,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.028413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448714,-99) , 
5, 0.427185, 1, 0, 0.506147,-99) , 
10, 0.505994, 1, 0, 0.522718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494197,-99) , 
7, -951.286, 1, 0, 0.501337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44065,-99) , 
8, -1.97956, 0, 0, 0.499412,-99) , 
8, 1.28572, 0, 0, 0.503245,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0193391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493055,-99) , 
5, -0.239591, 0, 0, 0.51836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474705,-99) , 
0, 0.504757, 1, 0, 0.501702,-99) , 
2, 0.0714191, 0, 0, 0.50469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457976,-99) , 
3, 8.8405, 1, 0, 0.503217,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0123012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490616,-99) , 
5, 0.23533, 1, 0, 0.52352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533124,-99) , 
NN(
0, 
0, 
-1, -1.86032, 0, -1, 0.49726,-99) , 
9, -4.0742, 1, 0, 0.499039,-99) , 
8, 1.85712, 0, 0, 0.500751,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0143795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
5, 0.237104, 1, 0, 0.522759,-99) , 
NN(
NN(
0, 
0, 
-1, 0.932683, 0, 1, 0.502721,-99) , 
NN(
0, 
0, 
-1, 1.16317, 1, -1, 0.483934,-99) , 
9, -0.527466, 1, 0, 0.499333,-99) , 
8, 1.85715, 0, 0, 0.500979,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0391473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489016,-99) , 
9, -1.76943, 1, 0, 0.501267,-99) , 
10, -0.0275729, 1, 0, 0.511928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489231,-99) , 
9, -0.368117, 1, 0, 0.510245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485235,-99) , 
9, -3.46601, 1, 0, 0.492042,-99) , 
10, 0.394754, 0, 0, 0.496572,-99) , 
8, 0.71432, 0, 0, 0.501359,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.025126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619876, 0, 1, 0.567051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452958,-99) , 
5, 0.234761, 1, 0, 0.501713,-99) , 
9, -1.426, 1, 0, 0.512143,-99) , 
NN(
NN(
0, 
0, 
-1, 1.22151, 0, 1, 0.546218,-99) , 
NN(
0, 
0, 
-1, -2.20155, 1, -1, 0.494977,-99) , 
8, 0.997557, 0, 0, 0.499326,-99) , 
10, 0.419717, 0, 0, 0.504176,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0115051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437671,-99) , 
10, -1.86873, 0, 0, 0.498322,-99) , 
9, -4.09721, 1, 0, 0.500203,-99) , 
8, 2.14286, 0, 0, 0.50163,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0234408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484757,-99) , 
10, 2.52245, 1, 0, 0.501917,-99) , 
10, -1.53524, 1, 0, 0.503764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472581,-99) , 
9, -1.06478, 1, 0, 0.515875,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.461316,-99) , 
10, -1.05265, 0, 0, 0.481511,-99) , 
8, -0.999923, 0, 0, 0.500475,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0198553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464923,-99) , 
5, 0.807616, 1, 0, 0.503989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419526,-99) , 
5, 0.3304, 0, 0, 0.471756,-99) , 
4, 0.999728, 0, 0, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465936,-99) , 
4, 0.998571, 0, 0, 0.500292,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.019632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43082,-99) , 
5, 0.332202, 0, 0, 0.527397,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.497077,-99) , 
4, 0.999524, 1, 0, 0.499617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449251,-99) , 
6, 0.0237791, 1, 0, 0.498349,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.016164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214561, 0, 1, 0.505923,-99) , 
NN(
0, 
0, 
-1, 0.959123, 1, -1, 0.491297,-99) , 
3, 4.67556, 1, 0, 0.503158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462131,-99) , 
10, -1.66626, 0, 0, 0.482646,-99) , 
8, -1.28568, 0, 0, 0.501198,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0268696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490254,-99) , 
3, 4.58323, 1, 0, 0.525058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469624,-99) , 
10, -0.757697, 0, 0, 0.490107,-99) , 
8, -0.142889, 0, 0, 0.51124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498376,-99) , 
9, -2.43926, 1, 0, 0.504432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478165,-99) , 
2, 0.0144186, 0, 0, 0.491761,-99) , 
2, -0.0033976, 1, 0, 0.498857,-99) , 
2, 0.0714289, 0, 0, 0.501152,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0150044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85714, 0, 1, 0.503441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426886,-99) , 
5, 0.328793, 0, 0, 0.474984,-99) , 
4, 0.999728, 0, 0, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463166,-99) , 
4, 0.998571, 0, 0, 0.49997,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.017679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479447,-99) , 
9, -0.726293, 1, 0, 0.499626,-99) , 
9, 1.60413, 0, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455094,-99) , 
6, 0.0237486, 1, 0, 0.500181,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0121826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497481,-99) , 
8, 1.85716, 0, 0, 0.499515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475102,-99) , 
5, 0.80818, 1, 0, 0.498295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461254,-99) , 
6, 0.0237843, 1, 0, 0.497358,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0308302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.522909,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493251,-99) , 
9, -2.4428, 1, 0, 0.50194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491271,-99) , 
9, -1.36136, 1, 0, 0.51518,-99) , 
NN(
0, 
0, 
-1, -3.34316, 1, -1, 0.476479,-99) , 
10, -0.664254, 0, 0, 0.489562,-99) , 
8, -0.428504, 0, 0, 0.498231,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0122569);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496941,-99) , 
8, -1.62386, 1, 0, 0.498173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44728,-99) , 
8, -2.02037, 0, 0, 0.496834,-99) , 
8, 2.14285, 0, 0, 0.497945,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0309809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460867,-99) , 
9, -0.922302, 1, 0, 0.52232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488901,-99) , 
5, 0.244741, 1, 0, 0.512912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492763,-99) , 
5, 0.42751, 0, 0, 0.497416,-99) , 
9, -3.30432, 1, 0, 0.500091,-99) , 
8, 1.85716, 0, 0, 0.501644,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0696889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488541,-99) , 
4, 0.999986, 0, 0, 0.509612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432741,-99) , 
4, 0.999714, 0, 0, 0.505796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4874,-99) , 
9, -2.47521, 0, 0, 0.512001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.185321,-99) , 
7, -1.57151, 0, 0, 0.480101,-99) , 
7, -951.286, 1, 0, 0.492869,-99) , 
5, 0.0455473, 1, 0, 0.500446,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0235105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480829,-99) , 
8, -0.795882, 0, 0, 0.510341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484335,-99) , 
2, -0.00349603, 1, 0, 0.495725,-99) , 
2, 0.0713218, 0, 0, 0.498409,-99) , 
8, 2.14288, 0, 0, 0.499716,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0561747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
7, -951.286, 0, 0, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393015,-99) , 
4, 0.999619, 0, 0, 0.500207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481461,-99) , 
0, 0.500948, 1, 0, 0.508814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231069,-99) , 
7, -1.28571, 0, 0, 0.46933,-99) , 
7, -951.286, 1, 0, 0.484643,-99) , 
5, 0.235435, 1, 0, 0.495092,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0568761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493041,-99) , 
9, -3.49559, 1, 0, 0.499369,-99) , 
9, 1.58466, 0, 0, 0.502495,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28585, 0, 1, 0.520905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267376,-99) , 
5, 0.140449, 1, 0, 0.365785,-99) , 
7, -1.06728, 0, 0, 0.491156,-99) , 
7, -951.286, 1, 0, 0.496949,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0582664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463889,-99) , 
5, -0.809988, 0, 0, 0.506057,-99) , 
9, 1.70643, 0, 0, 0.509933,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28605, 0, 1, 0.517287,-99) , 
NN(
0, 
0, 
-1, -2.00886, 0, -1, 0.391186,-99) , 
7, -0.895786, 0, 0, 0.488309,-99) , 
7, -951.286, 1, 0, 0.499363,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0536305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487022,-99) , 
5, -0.333918, 0, 0, 0.502176,-99) , 
9, 1.73421, 0, 0, 0.505684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49531,-99) , 
8, 1.28816, 0, 0, 0.509397,-99) , 
NN(
0, 
0, 
-1, -1.96486, 0, -1, 0.4056,-99) , 
7, -0.826368, 0, 0, 0.483703,-99) , 
7, -6.95896, 1, 0, 0.494931,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0553461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495774,-99) , 
10, 0.258883, 0, 0, 0.509819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421455,-99) , 
4, 0.999714, 0, 0, 0.505572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487249,-99) , 
9, -2.47089, 0, 0, 0.505248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223607,-99) , 
7, -1.5715, 0, 0, 0.476236,-99) , 
7, -951.286, 1, 0, 0.487855,-99) , 
5, 0.0467005, 1, 0, 0.498221,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0457915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498417,-99) , 
9, -1.6239, 1, 0, 0.510212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437793,-99) , 
4, 0.99981, 0, 0, 0.505718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492012,-99) , 
9, -2.36838, 0, 0, 0.507575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.158075,-99) , 
7, -1.85719, 0, 0, 0.470109,-99) , 
7, -951.286, 1, 0, 0.48545,-99) , 
5, -0.0483191, 1, 0, 0.496508,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0444687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493455,-99) , 
4, 0.999991, 0, 0, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422142,-99) , 
4, 0.99981, 0, 0, 0.505719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49412,-99) , 
1, 0.00327571, 0, 0, 0.500184,-99) , 
NN(
0, 
0, 
-1, -1.5715, 0, -1, 0.463294,-99) , 
7, -951.286, 1, 0, 0.47884,-99) , 
5, -0.238898, 1, 0, 0.491349,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.040567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486938,-99) , 
3, 3.65447, 1, 0, 0.504833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436931,-99) , 
4, 0.999714, 0, 0, 0.501528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480681,-99) , 
10, -0.554663, 1, 0, 0.52053,-99) , 
NN(
0, 
0, 
-1, 0.814962, 1, -1, 0.473465,-99) , 
4, 0.999524, 1, 0, 0.480315,-99) , 
5, 0.0468428, 1, 0, 0.492784,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0458479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496293,-99) , 
10, -0.235868, 0, 0, 0.506503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453913,-99) , 
4, 0.999524, 0, 0, 0.503209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495116,-99) , 
8, 1.57146, 0, 0, 0.504503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288666,-99) , 
5, 0.142021, 1, 0, 0.385846,-99) , 
7, -1.06728, 0, 0, 0.481651,-99) , 
7, -951.286, 1, 0, 0.492724,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0243663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495367,-99) , 
3, 3.00347, 1, 0, 0.528569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482509,-99) , 
5, 0.139786, 0, 0, 0.491424,-99) , 
3, 4.44154, 1, 0, 0.515604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484421,-99) , 
5, 0.0457948, 1, 0, 0.494279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460925,-99) , 
10, 3.36799, 1, 0, 0.492711,-99) , 
2, 0.0711972, 0, 0, 0.496969,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0457865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492751,-99) , 
5, 0.140867, 0, 0, 0.504389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237687,-99) , 
7, -1.93786, 0, 0, 0.49294,-99) , 
7, -951.198, 1, 0, 0.498808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452793,-99) , 
6, 0.0237791, 1, 0, 0.497655,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.045205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460649,-99) , 
9, -0.284768, 1, 0, 0.502189,-99) , 
9, 1.69564, 0, 0, 0.506555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49467,-99) , 
8, 1.28619, 0, 0, 0.505078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255096,-99) , 
7, -1.93242, 0, 0, 0.451872,-99) , 
7, -0.42138, 0, 0, 0.485915,-99) , 
7, -6.95896, 1, 0, 0.496517,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0359463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46584, 1, 1, 0.530315,-99) , 
NN(
0, 
0, 
-1, 0.143026, 0, -1, 0.490484,-99) , 
3, 4.59162, 1, 0, 0.517175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474243,-99) , 
8, 1.28574, 1, 0, 0.499214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357374,-99) , 
7, -1.25478, 0, 0, 0.481646,-99) , 
7, -6.95896, 1, 0, 0.490684,-99) , 
2, 0.0713923, 0, 0, 0.495639,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.027746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.523848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485745,-99) , 
0, 0.495233, 1, 0, 0.492766,-99) , 
8, 0.142824, 0, 0, 0.508681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489791,-99) , 
5, -0.0506753, 1, 0, 0.498079,-99) , 
NN(
0, 
0, 
-1, -0.078394, 1, -1, 0.483434,-99) , 
0, 0.497138, 1, 0, 0.489427,-99) , 
2, 0.0712406, 0, 0, 0.493004,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0427621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49618,-99) , 
2, 0.068957, 0, 0, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45866,-99) , 
4, 0.999524, 0, 0, 0.498742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488806,-99) , 
8, 1.00095, 0, 0, 0.503957,-99) , 
NN(
0, 
0, 
-1, -2.05893, 0, -1, 0.444167,-99) , 
7, -0.483279, 0, 0, 0.483611,-99) , 
7, -951.286, 1, 0, 0.491363,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0207789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491131,-99) , 
9, -1.96076, 1, 0, 0.497789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448235,-99) , 
10, -1.84091, 0, 0, 0.495842,-99) , 
9, -4.09685, 1, 0, 0.498255,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0374498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.645876, 0, 1, 0.50846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465248,-99) , 
4, 0.999524, 0, 0, 0.505726,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57154, 0, 1, 0.509687,-99) , 
NN(
0, 
0, 
-1, 0.434912, 1, -1, 0.334945,-99) , 
7, -1.51256, 0, 0, 0.489384,-99) , 
7, -951.198, 1, 0, 0.497754,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0450261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493373,-99) , 
5, -0.909065, 1, 0, 0.533793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493144,-99) , 
9, -3.37685, 1, 0, 0.499199,-99) , 
9, 0.661771, 0, 0, 0.503484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496155,-99) , 
8, 1.28586, 0, 0, 0.505424,-99) , 
NN(
0, 
0, 
-1, -1.98644, 0, -1, 0.36496,-99) , 
7, -1.25478, 0, 0, 0.484145,-99) , 
7, -6.95896, 1, 0, 0.494097,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0198448);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495135,-99) , 
8, -1.28564, 1, 0, 0.49744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45043,-99) , 
10, -1.84951, 0, 0, 0.495662,-99) , 
9, -4.09508, 1, 0, 0.497875,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0280893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499369,-99) , 
9, -2.36032, 1, 0, 0.507306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441886,-99) , 
4, 0.999714, 0, 0, 0.503881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498291,-99) , 
10, -0.607467, 1, 0, 0.525797,-99) , 
NN(
0, 
0, 
-1, 0.812203, 1, -1, 0.480617,-99) , 
4, 0.999524, 1, 0, 0.488082,-99) , 
5, 0.237009, 1, 0, 0.498715,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0458033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459848,-99) , 
5, -0.904921, 0, 0, 0.509521,-99) , 
9, 1.5772, 0, 0, 0.512325,-99) , 
NN(
NN(
0, 
0, 
-1, 0.236796, 0, 1, 0.514329,-99) , 
NN(
0, 
0, 
-1, -1.98641, 0, -1, 0.388,-99) , 
7, -1.25478, 0, 0, 0.494745,-99) , 
7, -6.95896, 1, 0, 0.503782,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0496936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453113,-99) , 
5, -0.904845, 0, 0, 0.502308,-99) , 
9, 1.72126, 0, 0, 0.505231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491053,-99) , 
8, 1.00017, 0, 0, 0.50414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38284,-99) , 
5, -0.04982, 1, 0, 0.446241,-99) , 
7, -0.636555, 0, 0, 0.487252,-99) , 
7, -951.198, 1, 0, 0.496512,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0310512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61801, 1, 1, 0.512297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465415,-99) , 
8, 0.999507, 1, 0, 0.504822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484703,-99) , 
2, 0.0713923, 0, 0, 0.488628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447582,-99) , 
5, 0.844186, 1, 0, 0.486747,-99) , 
5, -0.619381, 1, 0, 0.491897,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0167596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496339,-99) , 
7, -951.286, 0, 0, 0.514652,-99) , 
NN(
0, 
0, 
-1, -1.48383, 1, -1, 0.495854,-99) , 
5, -0.71497, 1, 0, 0.499316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466304,-99) , 
10, 3.24857, 1, 0, 0.497634,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0152882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486883,-99) , 
3, 4.49489, 1, 0, 0.516233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46166,-99) , 
5, 0.807937, 1, 0, 0.498453,-99) , 
2, -0.0715049, 1, 0, 0.501741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471479,-99) , 
10, 3.24857, 1, 0, 0.500204,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0530541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486922,-99) , 
9, -1.54169, 1, 0, 0.500286,-99) , 
9, 1.58466, 0, 0, 0.50294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485466,-99) , 
5, 0.138272, 0, 0, 0.507517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387926,-99) , 
5, 0.0452979, 1, 0, 0.45116,-99) , 
7, -0.636555, 0, 0, 0.490826,-99) , 
7, -951.198, 1, 0, 0.497085,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0285378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438051,-99) , 
5, 0.290259, 1, 0, 0.509527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492688,-99) , 
4, 0.999524, 1, 0, 0.495311,-99) , 
10, 0.55255, 0, 0, 0.500419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455793,-99) , 
5, 0.806372, 1, 0, 0.498285,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0207483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497085,-99) , 
7, -951.286, 0, 0, 0.51827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486728,-99) , 
9, -2.05022, 1, 0, 0.496566,-99) , 
5, -0.714536, 1, 0, 0.500575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466342,-99) , 
10, 3.20989, 1, 0, 0.498762,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0230373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29342, 1, 1, 0.528047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474099,-99) , 
7, -0.509528, 0, 0, 0.501832,-99) , 
7, -951.286, 1, 0, 0.515704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446179,-99) , 
4, 0.99981, 0, 0, 0.499248,-99) , 
NN(
0, 
0, 
-1, 0.426664, 1, -1, 0.48233,-99) , 
5, 0.332164, 1, 0, 0.494498,-99) , 
2, -0.0715772, 1, 0, 0.498433,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0108228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530009,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.497041,-99) , 
9, 0.757452, 0, 0, 0.49847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470803,-99) , 
10, 3.24857, 1, 0, 0.497057,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0313292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489421,-99) , 
8, -0.30083, 0, 0, 0.515418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491496,-99) , 
5, 0.427512, 0, 0, 0.494754,-99) , 
9, -2.83533, 1, 0, 0.499399,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.522339,-99) , 
NN(
0, 
0, 
-1, -2.09559, 1, -1, 0.458541,-99) , 
10, -1.28552, 0, 0, 0.484286,-99) , 
8, -0.999932, 0, 0, 0.497143,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0152348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496888,-99) , 
0, 0.496185, 1, 0, 0.501022,-99) , 
9, 0.706328, 0, 0, 0.502854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477783,-99) , 
10, 3.20989, 1, 0, 0.501534,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0286281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.743273, 0, 1, 0.510279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449592,-99) , 
4, 0.999619, 0, 0, 0.507717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499392,-99) , 
10, -0.786719, 1, 0, 0.528611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474883,-99) , 
7, -951.286, 1, 0, 0.487064,-99) , 
4, 0.999524, 1, 0, 0.49397,-99) , 
5, 0.23679, 1, 0, 0.503224,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0129627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.138952, 0, 1, 0.527915,-99) , 
NN(
0, 
0, 
-1, 1.39458, 1, -1, 0.496273,-99) , 
8, 1.85716, 0, 0, 0.498404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471217,-99) , 
5, 0.807937, 1, 0, 0.497099,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0226429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497126,-99) , 
3, 2.75494, 1, 0, 0.52179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482674,-99) , 
5, 0.134825, 0, 0, 0.491305,-99) , 
3, 4.72622, 1, 0, 0.512241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494497,-99) , 
8, 2.14286, 0, 0, 0.496154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444589,-99) , 
10, -0.822238, 1, 0, 0.477109,-99) , 
5, 0.71039, 1, 0, 0.494384,-99) , 
2, -0.0715943, 1, 0, 0.497677,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0142464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.504316,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.473134,-99) , 
4, 0.999728, 0, 0, 0.50184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459109,-99) , 
4, 0.998571, 0, 0, 0.500592,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.00746847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
8, 1.85715, 0, 0, 0.500713,-99) , 
1, 0.0101621, 0, 0, 0.501981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471481,-99) , 
6, 0.0237124, 1, 0, 0.501194,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0208979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481624,-99) , 
8, 1.28588, 1, 0, 0.514511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479755,-99) , 
9, -1.53505, 1, 0, 0.498538,-99) , 
10, 1.15524, 0, 0, 0.501558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475083,-99) , 
10, 3.2427, 1, 0, 0.500197,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0137023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463537,-99) , 
10, -1.80985, 0, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463147,-99) , 
10, 3.58419, 1, 0, 0.499206,-99) , 
9, -4.09685, 1, 0, 0.50093,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0175327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474862,-99) , 
10, -0.430532, 1, 0, 0.515286,-99) , 
NN(
0, 
0, 
-1, 0.807615, 1, -1, 0.493834,-99) , 
4, 0.999524, 1, 0, 0.495552,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.019159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22381, 1, 1, 0.510303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495355,-99) , 
4, 0.999524, 1, 0, 0.498342,-99) , 
10, 0.606966, 0, 0, 0.502407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441692,-99) , 
4, 0.998571, 0, 0, 0.500707,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0226649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.045, 1, 1, 0.523601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477739,-99) , 
5, -0.0511583, 0, 0, 0.498761,-99) , 
3, 4.603, 1, 0, 0.515345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492877,-99) , 
10, 0.55255, 0, 0, 0.498415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465358,-99) , 
5, 0.806372, 1, 0, 0.496833,-99) , 
2, -0.0714203, 1, 0, 0.500272,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0112899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.513922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4734,-99) , 
0, 0.491424, 0, 0, 0.498348,-99) , 
2, 0.0713923, 0, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468783,-99) , 
10, 3.26817, 1, 0, 0.499646,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0284973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482427,-99) , 
6, 0.00451918, 1, 0, 0.510843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495339,-99) , 
6, 0.0056503, 0, 0, 0.501602,-99) , 
5, -0.714586, 1, 0, 0.503646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451997,-99) , 
6, 0.0237319, 1, 0, 0.502354,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0151129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486388,-99) , 
4, 0.999728, 0, 0, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468432,-99) , 
5, 0.807615, 1, 0, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459084,-99) , 
4, 0.998572, 0, 0, 0.50112,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0165806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.0864, 1, 1, 0.505211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461827,-99) , 
5, -0.904944, 0, 0, 0.503845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48377,-99) , 
10, 3.56296, 1, 0, 0.49778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438102,-99) , 
5, -0.820151, 1, 0, 0.48208,-99) , 
10, 2.30562, 1, 0, 0.501709,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00889135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43886,-99) , 
4, 0.999705, 0, 0, 0.49836,-99) , 
4, 0.999524, 1, 0, 0.500204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46663,-99) , 
4, 0.998572, 0, 0, 0.499214,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.00811346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.730816, 0, 1, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479716,-99) , 
10, 3.22692, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458882,-99) , 
4, 0.998571, 0, 0, 0.49957,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0125356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53474,-99) , 
NN(
0, 
0, 
-1, -1.83303, 0, -1, 0.495226,-99) , 
9, -4.04249, 1, 0, 0.497195,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0201274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498131,-99) , 
2, 0.0694208, 0, 0, 0.503836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490204,-99) , 
8, -1.57118, 1, 0, 0.491768,-99) , 
0, 0.500947, 0, 0, 0.495035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462328,-99) , 
4, 0.998571, 0, 0, 0.494084,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0206151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491715,-99) , 
9, -1.72928, 1, 0, 0.498387,-99) , 
8, 2.14282, 0, 0, 0.499788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484783,-99) , 
9, -2.61027, 0, 0, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42861,-99) , 
10, 0.110486, 1, 0, 0.48597,-99) , 
5, 0.617845, 1, 0, 0.497859,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0122946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481509,-99) , 
4, 0.999819, 0, 0, 0.500266,-99) , 
4, 0.999048, 1, 0, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0.046862, 1, -1, 0.47839,-99) , 
0, 0.491424, 0, 0, 0.499856,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0155109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496605,-99) , 
9, -4.0872, 1, 0, 0.498761,-99) , 
9, 0.842371, 0, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46942,-99) , 
10, 3.3565, 1, 0, 0.498985,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0212637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479265,-99) , 
6, 0.00565845, 1, 0, 0.523134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491854,-99) , 
9, -1.42055, 1, 0, 0.502883,-99) , 
5, -0.904845, 1, 0, 0.504404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468806,-99) , 
6, 0.0237791, 1, 0, 0.503497,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0147058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.045, 1, 1, 0.516213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474106,-99) , 
5, -0.0528302, 0, 0, 0.492095,-99) , 
3, 4.603, 1, 0, 0.508282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53244,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.495634,-99) , 
4, 0.999048, 1, 0, 0.496946,-99) , 
2, -0.0715101, 1, 0, 0.499035,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0301601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2243, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455421,-99) , 
5, 0.426089, 1, 0, 0.508102,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.535095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4885,-99) , 
9, -4.10541, 1, 0, 0.491839,-99) , 
8, 1.1001, 0, 0, 0.495262,-99) , 
10, 0.55255, 0, 0, 0.499729,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0308218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.150018, 0, 1, 0.512366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493981,-99) , 
5, -0.52479, 1, 0, 0.497501,-99) , 
9, -1.82062, 0, 0, 0.502802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460704,-99) , 
9, -1.54483, 1, 0, 0.510844,-99) , 
NN(
0, 
0, 
-1, 1.93881, 1, -1, 0.45691,-99) , 
9, -0.96449, 1, 0, 0.488011,-99) , 
8, 1.28572, 1, 0, 0.500508,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0221223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61874, 1, 1, 0.521792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486289,-99) , 
7, -951.286, 1, 0, 0.498891,-99) , 
3, 4.603, 1, 0, 0.51426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48022,-99) , 
0, 0.490109, 0, 0, 0.504696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488484,-99) , 
2, 0.0781417, 0, 0, 0.492684,-99) , 
0, 0.49809, 1, 0, 0.498653,-99) , 
2, -0.0715101, 1, 0, 0.501551,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00978416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496791,-99) , 
3, 4.53271, 1, 0, 0.512507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466559,-99) , 
4, 0.99966, 0, 0, 0.498652,-99) , 
2, 0.0715353, 0, 0, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47421,-99) , 
4, 0.998571, 0, 0, 0.500335,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0174181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499063,-99) , 
9, -3.59922, 1, 0, 0.502202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452172,-99) , 
10, -1.44788, 0, 0, 0.481245,-99) , 
8, -1.28568, 0, 0, 0.500062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466548,-99) , 
10, 3.12836, 1, 0, 0.498224,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0199875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485674,-99) , 
4, 0.999819, 0, 0, 0.505215,-99) , 
4, 0.999048, 1, 0, 0.507106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481872,-99) , 
9, -0.960407, 1, 0, 0.496659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467113,-99) , 
5, 0.617628, 1, 0, 0.492333,-99) , 
3, 4.54701, 1, 0, 0.504167,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0083406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462191,-99) , 
5, 0.801509, 1, 0, 0.499404,-99) , 
4, 0.999524, 1, 0, 0.500753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461918,-99) , 
4, 0.998571, 0, 0, 0.499643,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0160525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495313,-99) , 
5, 0.516363, 0, 0, 0.498181,-99) , 
8, 2.14286, 0, 0, 0.499702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461252,-99) , 
4, 0.998572, 0, 0, 0.498603,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.053048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337935,-99) , 
7, -1.51256, 0, 0, 0.504198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488277,-99) , 
9, 1.36739, 0, 0, 0.491235,-99) , 
7, -951.198, 0, 0, 0.497586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46209,-99) , 
6, 0.0237319, 1, 0, 0.49668,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.02233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497915,-99) , 
9, -1.61722, 1, 0, 0.505434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49142,-99) , 
8, 0.796066, 0, 0, 0.495975,-99) , 
10, 0.166337, 0, 0, 0.499879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474097,-99) , 
10, 3.36799, 1, 0, 0.498638,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0262233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305753, 0, 1, 0.511509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48895,-99) , 
8, -0.142836, 1, 0, 0.496169,-99) , 
9, -2.43291, 1, 0, 0.502244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453223,-99) , 
4, 0.998572, 0, 0, 0.500871,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0233117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12611, 1, 1, 0.506717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476972,-99) , 
10, -1.03572, 0, 0, 0.495159,-99) , 
8, -0.714226, 0, 0, 0.504057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469648,-99) , 
10, 3.26817, 1, 0, 0.502356,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0259075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.935283, 1, 1, 0.515256,-99) , 
NN(
0, 
0, 
-1, -0.382636, 1, -1, 0.493977,-99) , 
10, -0.188593, 0, 0, 0.501649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553785,-99) , 
NN(
0, 
0, 
-1, 1.25853, 0, -1, 0.483505,-99) , 
10, -0.0275729, 1, 0, 0.492457,-99) , 
8, 0.714322, 1, 0, 0.498867,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0416876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.630106, 1, 1, 0.545105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488421,-99) , 
5, -0.334867, 1, 0, 0.495759,-99) , 
8, 0.0708468, 0, 0, 0.507913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4952,-99) , 
5, -0.337619, 0, 0, 0.511795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48252,-99) , 
10, -0.223696, 1, 0, 0.488005,-99) , 
8, 0.142899, 1, 0, 0.496159,-99) , 
9, -2.54548, 1, 0, 0.500451,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0468328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.119203, 0, 1, 0.511487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479824,-99) , 
8, -1.57135, 0, 0, 0.509267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497618,-99) , 
5, 0.140599, 0, 0, 0.516324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401485,-99) , 
5, -0.0483114, 1, 0, 0.454298,-99) , 
7, -0.636555, 0, 0, 0.498414,-99) , 
7, -951.198, 1, 0, 0.504009,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0198255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499839,-99) , 
9, -1.17087, 1, 0, 0.507834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486432,-99) , 
9, -2.35036, 1, 0, 0.499786,-99) , 
10, 0.55255, 0, 0, 0.502653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473678,-99) , 
5, 0.807616, 1, 0, 0.501268,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0109905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.119046, 1, 1, 0.524057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499801,-99) , 
10, 0.713751, 0, 0, 0.502994,-99) , 
8, 1.85714, 0, 0, 0.504379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477708,-99) , 
5, 0.807616, 1, 0, 0.503098,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0199694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497396,-99) , 
5, 0.23594, 1, 0, 0.505787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467223,-99) , 
10, -1.85739, 0, 0, 0.504373,-99) , 
9, -4.10179, 1, 0, 0.506238,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0177526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0713036, 0, 1, 0.511905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499041,-99) , 
5, 0.617871, 0, 0, 0.522331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484137,-99) , 
5, 0.423985, 1, 0, 0.49967,-99) , 
4, 0.999524, 1, 0, 0.501384,-99) , 
0, 0.500947, 0, 0, 0.504235,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0205771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809653, 1, 1, 0.506845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460913,-99) , 
5, -0.8099, 0, 0, 0.498254,-99) , 
6, 0.00452847, 1, 0, 0.503924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47796,-99) , 
6, 0.0237755, 1, 0, 0.503258,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0259599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
8, -0.00920194, 0, 0, 0.512236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493231,-99) , 
8, -0.265243, 1, 0, 0.497665,-99) , 
9, -2.69567, 1, 0, 0.501898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452471,-99) , 
9, -3.21083, 0, 0, 0.482652,-99) , 
8, -1.28564, 0, 0, 0.500032,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0148215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474177,-99) , 
8, -1.16284, 0, 0, 0.500813,-99) , 
8, -1.85665, 1, 0, 0.501677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453598,-99) , 
9, 1.67756, 0, 0, 0.48258,-99) , 
5, -0.904829, 0, 0, 0.50027,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0163003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998617, 0, 1, 0.552409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471643,-99) , 
5, 0.332351, 0, 0, 0.525045,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85712, 0, 1, 0.503768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455041,-99) , 
5, 0.807615, 1, 0, 0.502278,-99) , 
4, 0.999524, 1, 0, 0.504089,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0185042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49511,-99) , 
4, 0.999524, 1, 0, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0.999619, 0, -1, 0.493123,-99) , 
5, 0.520533, 0, 0, 0.495605,-99) , 
8, 2.14285, 0, 0, 0.497197,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0196533);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478019,-99) , 
10, 1.53495, 1, 0, 0.519989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492392,-99) , 
9, -3.05723, 1, 0, 0.495138,-99) , 
8, 1.85714, 0, 0, 0.496775,-99) , 
4, 0.999048, 1, 0, 0.498108,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0100294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498862,-99) , 
4, 0.999932, 1, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475004,-99) , 
4, 0.998572, 0, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464837,-99) , 
8, -1.85711, 0, 0, 0.499496,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0308217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.77413, 0, 1, 0.518223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4896,-99) , 
8, 0.156498, 1, 0, 0.495136,-99) , 
9, -2.14446, 1, 0, 0.503333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487479,-99) , 
9, -0.977684, 1, 0, 0.506543,-99) , 
NN(
0, 
0, 
-1, -1.3322, 1, -1, 0.486159,-99) , 
10, -0.843611, 0, 0, 0.494418,-99) , 
8, -0.142815, 0, 0, 0.499781,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0265631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477295,-99) , 
10, -0.0390505, 1, 0, 0.495065,-99) , 
10, -0.922395, 1, 0, 0.525159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
9, -2.13629, 1, 0, 0.506295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479405,-99) , 
9, -3.18542, 1, 0, 0.493754,-99) , 
10, -0.3821, 0, 0, 0.501454,-99) , 
5, 0.712478, 0, 0, 0.503805,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0189434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.07078, 1, 1, 0.508871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466131,-99) , 
5, -0.335601, 0, 0, 0.497264,-99) , 
10, -0.3821, 0, 0, 0.504175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468542,-99) , 
4, 0.998572, 0, 0, 0.50315,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0173542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.135859, 0, 1, 0.51482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49076,-99) , 
5, 0.0457948, 1, 0, 0.498329,-99) , 
3, 0.950099, 1, 0, 0.50192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4641,-99) , 
3, 9.27754, 1, 0, 0.500963,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.020626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.00003, 0, 1, 0.512533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491514,-99) , 
2, -0.280921, 0, 0, 0.511349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493619,-99) , 
2, 0.0361302, 0, 0, 0.497386,-99) , 
2, -0.0778646, 1, 0, 0.500384,-99) , 
2, 0.0717536, 0, 0, 0.502634,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0174917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.02731, 1, 1, 0.51148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481682,-99) , 
4, 0.999932, 0, 0, 0.499432,-99) , 
8, 0.714322, 0, 0, 0.503101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470501,-99) , 
4, 0.998572, 0, 0, 0.502157,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0234626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.748083, 1, 1, 0.525728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486425,-99) , 
10, -0.293596, 0, 0, 0.506016,-99) , 
5, 0.520348, 0, 0, 0.509456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491049,-99) , 
5, -0.238895, 1, 0, 0.498256,-99) , 
4, 0.999048, 1, 0, 0.499499,-99) , 
0, 0.499995, 0, 0, 0.502957,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.036372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480456,-99) , 
9, -2.82567, 1, 0, 0.500697,-99) , 
10, -0.0196578, 0, 0, 0.506156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495294,-99) , 
5, -0.335619, 0, 0, 0.505027,-99) , 
NN(
0, 
0, 
-1, 0.42609, 1, -1, 0.481455,-99) , 
8, 1.00001, 1, 0, 0.495862,-99) , 
9, -1.93243, 1, 0, 0.501461,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0342304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452244,-99) , 
5, 0.617345, 1, 0, 0.505536,-99) , 
10, 0.0280951, 1, 0, 0.512821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496883,-99) , 
5, -0.434764, 0, 0, 0.509816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488612,-99) , 
5, -0.524979, 1, 0, 0.493421,-99) , 
9, -2.03005, 0, 0, 0.499406,-99) , 
8, 0.71432, 0, 0, 0.503524,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.025174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496758,-99) , 
8, -0.540704, 0, 0, 0.524414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485853,-99) , 
9, -2.99158, 0, 0, 0.504291,-99) , 
10, -1.18603, 1, 0, 0.507265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455135,-99) , 
9, -3.15033, 0, 0, 0.490883,-99) , 
8, -1.28564, 0, 0, 0.505686,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0185828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489046,-99) , 
10, -0.267406, 1, 0, 0.524002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479616,-99) , 
4, 0.999819, 0, 0, 0.503779,-99) , 
4, 0.999524, 1, 0, 0.505303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512983,-99) , 
NN(
0, 
0, 
-1, 0.424933, 1, -1, 0.485008,-99) , 
9, -1.11639, 0, 0, 0.494155,-99) , 
0, 0.502852, 1, 0, 0.503609,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0177156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502535, 0, 1, 0.522835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494522,-99) , 
10, 0.736669, 0, 0, 0.501889,-99) , 
8, 1.28574, 0, 0, 0.505243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494846,-99) , 
9, -3.51318, 1, 0, 0.497231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477936,-99) , 
10, 3.02775, 1, 0, 0.4961,-99) , 
0, 0.499995, 0, 0, 0.499252,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0153535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484956,-99) , 
0, 0.496185, 0, 0, 0.532128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464403,-99) , 
4, 0.999728, 0, 0, 0.498761,-99) , 
4, 0.999524, 1, 0, 0.501586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478515,-99) , 
8, -0.573998, 0, 0, 0.500322,-99) , 
NN(
0, 
0, 
-1, 0.428607, 1, -1, 0.476687,-99) , 
9, -2.14733, 1, 0, 0.488416,-99) , 
3, 4.6823, 1, 0, 0.499115,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0135356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494668,-99) , 
9, -2.70932, 1, 0, 0.497887,-99) , 
9, 0.784086, 0, 0, 0.499163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47389,-99) , 
10, 3.36799, 1, 0, 0.497971,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0182689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495198,-99) , 
5, 0.423264, 0, 0, 0.501656,-99) , 
2, 0.071527, 0, 0, 0.508437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494473,-99) , 
0, 0.504712, 1, 0, 0.508115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494601,-99) , 
4, 0.999524, 1, 0, 0.496445,-99) , 
0, 0.503805, 0, 0, 0.49807,-99) , 
0, 0.494281, 1, 0, 0.500228,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0201429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461783,-99) , 
6, 0.00451521, 1, 0, 0.512823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457262,-99) , 
4, 0.999619, 0, 0, 0.50109,-99) , 
5, 0.522678, 0, 0, 0.503373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461966,-99) , 
6, 0.0237147, 1, 0, 0.502339,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00714774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526551,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.498465,-99) , 
4, 0.999524, 1, 0, 0.49986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469406,-99) , 
4, 0.998572, 0, 0, 0.498989,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.00987628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498144,-99) , 
10, 0.374782, 0, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484961,-99) , 
10, 3.24857, 1, 0, 0.500557,-99) , 
NN(
0, 
0, 
-1, -0.0500654, 1, -1, 0.487771,-99) , 
0, 0.504757, 1, 0, 0.499629,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497408,-99) , 
10, 1.12585, 0, 0, 0.500422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469068,-99) , 
5, -0.912476, 1, 0, 0.488255,-99) , 
10, 2.35609, 1, 0, 0.499231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476831,-99) , 
4, 0.998572, 0, 0, 0.498578,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0107597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471582,-99) , 
5, 0.425772, 0, 0, 0.511969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499212,-99) , 
0, 0.505709, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456787,-99) , 
4, 0.999705, 0, 0, 0.49912,-99) , 
4, 0.999524, 1, 0, 0.500116,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0101284);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0437352, 0, 1, 0.530012,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502782,-99) , 
NN(
0, 
0, 
-1, -0.218881, 0, -1, 0.489228,-99) , 
0, 0.503804, 1, 0, 0.50136,-99) , 
2, -0.214394, 1, 0, 0.502927,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.012773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.09547, 1, 1, 0.531377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489544,-99) , 
0, 0.491424, 0, 0, 0.501894,-99) , 
10, 1.79874, 0, 0, 0.503652,-99) , 
NN(
0, 
0, 
-1, -0.906114, 1, -1, 0.481429,-99) , 
10, 2.42185, 1, 0, 0.501657,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0121423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0155633, 0, 1, 0.514069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497944,-99) , 
2, 0.214153, 0, 0, 0.499227,-99) , 
3, 0.957074, 1, 0, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471988,-99) , 
3, 9.28394, 1, 0, 0.501683,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0252624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.490477, 1, 1, 0.517684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48175,-99) , 
5, -0.3348, 0, 0, 0.495889,-99) , 
10, 0.317639, 0, 0, 0.502025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483177,-99) , 
8, 1.75604, 0, 0, 0.501056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46506,-99) , 
9, 0.649648, 0, 0, 0.478608,-99) , 
9, -1.21152, 1, 0, 0.490164,-99) , 
8, 1.00001, 1, 0, 0.499399,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0174533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495459,-99) , 
5, 0.237219, 1, 0, 0.52076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519946,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.493098,-99) , 
5, 0.805493, 0, 0, 0.494473,-99) , 
8, 1.85716, 0, 0, 0.496274,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0114117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214327, 1, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47393,-99) , 
4, 0.99932, 0, 0, 0.503306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465828,-99) , 
4, 0.998571, 0, 0, 0.50223,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.00968453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452979,-99) , 
4, 0.998572, 0, 0, 0.502214,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0175532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49884,-99) , 
10, -0.782018, 1, 0, 0.503508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485325,-99) , 
10, -0.867736, 0, 0, 0.494484,-99) , 
8, -0.1428, 0, 0, 0.499933,-99) , 
NN(
0, 
0, 
-1, 0.505709, 0, -1, 0.48217,-99) , 
0, 0.504757, 1, 0, 0.498652,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0113757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486839,-99) , 
2, 0.214337, 1, 0, 0.503666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481432,-99) , 
10, 3.24857, 1, 0, 0.502531,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.017368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496351,-99) , 
0, 0.497138, 1, 0, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464191,-99) , 
5, -0.904949, 0, 0, 0.500032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512787,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.456892,-99) , 
5, -0.906114, 1, 0, 0.483185,-99) , 
10, 2.30562, 1, 0, 0.498363,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.022417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497553,-99) , 
9, -2.07078, 1, 0, 0.50338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487284,-99) , 
8, 0.353707, 0, 0, 0.49241,-99) , 
10, -0.3821, 0, 0, 0.498956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467853,-99) , 
4, 0.998572, 0, 0, 0.498075,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0154658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.61722, 0, 1, 0.532608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481379,-99) , 
3, 3.01609, 1, 0, 0.503928,-99) , 
5, 0.142023, 0, 0, 0.514638,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85712, 0, 1, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472157,-99) , 
5, 0.805411, 1, 0, 0.500759,-99) , 
2, -0.0715049, 1, 0, 0.503341,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.01591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487145,-99) , 
10, -0.661418, 1, 0, 0.528894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499243,-99) , 
8, 2.18368, 0, 0, 0.500719,-99) , 
4, 0.999524, 1, 0, 0.502982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45896,-99) , 
10, -1.18548, 0, 0, 0.480655,-99) , 
8, -1.28564, 0, 0, 0.500855,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0172537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.506329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449632,-99) , 
5, 0.328829, 0, 0, 0.488322,-99) , 
4, 0.99966, 0, 0, 0.505138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474248,-99) , 
4, 0.998571, 0, 0, 0.504252,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0161554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497032,-99) , 
9, -1.74048, 0, 0, 0.502225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468793,-99) , 
5, -0.904949, 0, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474744,-99) , 
10, 3.24857, 1, 0, 0.499417,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0150936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518916,-99) , 
NN(
0, 
0, 
-1, 1.81731, 0, -1, 0.486894,-99) , 
5, -0.621237, 0, 0, 0.491573,-99) , 
9, -0.726185, 1, 0, 0.502626,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0147753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487861,-99) , 
10, -0.278074, 1, 0, 0.522522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499293,-99) , 
0, 0.501809, 0, 0, 0.502346,-99) , 
4, 0.999524, 1, 0, 0.503776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483442,-99) , 
5, -0.23992, 1, 0, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.472971,-99) , 
8, 0.143084, 0, 0, 0.487195,-99) , 
0, 0.492376, 0, 0, 0.501931,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0189877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499355,-99) , 
5, -0.61933, 1, 0, 0.502328,-99) , 
8, 1.54116, 0, 0, 0.505181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535397,-99) , 
NN(
0, 
0, 
-1, 1.2211, 0, -1, 0.485408,-99) , 
5, -0.239419, 0, 0, 0.491631,-99) , 
9, -1.20998, 1, 0, 0.501183,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0220649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.550855, 0, 1, 0.526016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45926,-99) , 
5, 0.807937, 1, 0, 0.502035,-99) , 
10, -1.21007, 1, 0, 0.505405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452622,-99) , 
9, -3.10274, 0, 0, 0.485483,-99) , 
8, -1.28563, 0, 0, 0.503462,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0297537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.983105, 1, 1, 0.515239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492932,-99) , 
5, -0.52479, 1, 0, 0.497276,-99) , 
9, -1.92049, 0, 0, 0.503178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48112,-99) , 
9, -2.31254, 1, 0, 0.506835,-99) , 
NN(
0, 
0, 
-1, -0.755476, 0, -1, 0.486229,-99) , 
9, -1.70981, 1, 0, 0.494972,-99) , 
8, 0.428586, 1, 0, 0.499941,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0121683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495139,-99) , 
0, 0.497137, 0, 0, 0.522032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478348,-99) , 
9, -3.40405, 0, 0, 0.510588,-99) , 
NN(
0, 
0, 
-1, 1.39455, 1, -1, 0.498373,-99) , 
5, 0.617845, 0, 0, 0.500081,-99) , 
8, 1.85716, 0, 0, 0.5016,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0242512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336827, 0, 1, 0.505457,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.471662,-99) , 
9, -1.52159, 1, 0, 0.50293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487216,-99) , 
5, -0.338215, 0, 0, 0.497391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453262,-99) , 
8, 2.14283, 1, 0, 0.492746,-99) , 
9, -1.26658, 1, 0, 0.499797,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0205788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490785,-99) , 
5, -0.048623, 1, 0, 0.499339,-99) , 
4, 0.999048, 1, 0, 0.501391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463297,-99) , 
2, 0.152911, 1, 0, 0.494952,-99) , 
NN(
0, 
0, 
-1, -2.17817, 1, -1, 0.476127,-99) , 
2, -0.0715583, 0, 0, 0.489228,-99) , 
3, 4.56389, 1, 0, 0.499013,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0149397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.56198, 1, 1, 0.518596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478253,-99) , 
8, 1.85723, 1, 0, 0.51144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49911,-99) , 
9, -4.04531, 1, 0, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461372,-99) , 
5, -0.809706, 0, 0, 0.498812,-99) , 
10, 1.52821, 0, 0, 0.501076,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0177748);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.695972, 1, 1, 0.528271,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5229, 1, 1, 0.527839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477953,-99) , 
8, 1.62586, 1, 0, 0.505084,-99) , 
8, 1.85715, 0, 0, 0.506589,-99) , 
5, 0.80818, 0, 0, 0.507692,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0244865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.06491, 0, 1, 0.514667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462121,-99) , 
10, 0.484778, 1, 0, 0.508114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546872,-99) , 
NN(
0, 
0, 
-1, 0.999619, 0, -1, 0.492247,-99) , 
9, -3.6564, 1, 0, 0.49554,-99) , 
5, 0.332343, 0, 0, 0.499134,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0165705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142888, 1, 1, 0.52395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486203,-99) , 
3, 4.29342, 1, 0, 0.499863,-99) , 
0, 0.499996, 0, 0, 0.508922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497186,-99) , 
4, 0.999524, 1, 0, 0.498356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482847,-99) , 
10, 0.84818, 0, 0, 0.488767,-99) , 
0, 0.496186, 0, 0, 0.495246,-99) , 
2, -0.0714203, 1, 0, 0.497793,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0207826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477529,-99) , 
8, -1.28445, 0, 0, 0.505689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476845,-99) , 
3, 2.5563, 1, 0, 0.491194,-99) , 
8, -1.28575, 1, 0, 0.496633,-99) , 
5, -0.524158, 0, 0, 0.502675,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0241388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.17556, 1, 1, 0.537276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483402,-99) , 
8, 0.293889, 0, 0, 0.495949,-99) , 
9, -2.42753, 0, 0, 0.511865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489559,-99) , 
4, 0.999986, 0, 0, 0.499784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472853,-99) , 
4, 0.999714, 0, 0, 0.498125,-99) , 
5, 0.522474, 0, 0, 0.500785,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.013912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495177,-99) , 
2, 0.0288544, 0, 0, 0.498237,-99) , 
2, -0.215734, 1, 0, 0.499707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465931,-99) , 
4, 0.998571, 0, 0, 0.498746,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0145865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.521391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48171,-99) , 
5, -0.81057, 0, 0, 0.515498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48411,-99) , 
0, 0.505437, 1, 0, 0.501067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471674,-99) , 
7, -951.286, 0, 0, 0.488122,-99) , 
0, 0.492376, 0, 0, 0.499756,-99) , 
2, -0.0714605, 1, 0, 0.50269,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0226726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491441,-99) , 
5, 0.237621, 1, 0, 0.508739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49415,-99) , 
10, 1.21427, 0, 0, 0.497742,-99) , 
9, -2.8154, 1, 0, 0.501234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504501,-99) , 
NN(
0, 
0, 
-1, 2.8222, 1, -1, 0.474618,-99) , 
9, 2.17977, 0, 0, 0.486398,-99) , 
9, 0.51471, 1, 0, 0.499684,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00884358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466207,-99) , 
4, 0.999728, 0, 0, 0.500226,-99) , 
4, 0.999524, 1, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464397,-99) , 
4, 0.998572, 0, 0, 0.500328,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0162214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493595,-99) , 
7, -951.286, 1, 0, 0.507005,-99) , 
NN(
0, 
0, 
-1, -1.66658, 0, -1, 0.494853,-99) , 
8, 1.00003, 0, 0, 0.497708,-99) , 
9, -4.09508, 1, 0, 0.499248,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0333507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3681, 1, 1, 0.51499,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.484421,-99) , 
8, -0.928162, 0, 0, 0.505216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483917,-99) , 
5, 0.0424966, 1, 0, 0.522561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487802,-99) , 
9, 2.29255, 0, 0, 0.49033,-99) , 
9, -2.22532, 1, 0, 0.495702,-99) , 
10, -0.523235, 1, 0, 0.49924,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0238782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490835,-99) , 
9, -1.52964, 1, 0, 0.529511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499299,-99) , 
8, 1.27572, 0, 0, 0.501721,-99) , 
10, 0.532007, 0, 0, 0.50418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48763,-99) , 
5, -0.621827, 0, 0, 0.50086,-99) , 
NN(
0, 
0, 
-1, -0.14448, 1, -1, 0.464073,-99) , 
8, 1.57143, 1, 0, 0.492839,-99) , 
9, -1.26658, 1, 0, 0.500712,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0154806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0713479, 1, 1, 0.507313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475926,-99) , 
3, 9.28394, 1, 0, 0.506514,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.019362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456785,-99) , 
9, -4.05527, 1, 0, 0.492326,-99) , 
9, -3.6275, 0, 0, 0.510926,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.522945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489411,-99) , 
8, -0.0475788, 0, 0, 0.497784,-99) , 
8, -0.999972, 1, 0, 0.499749,-99) , 
10, -1.46619, 1, 0, 0.50128,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.014026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488955,-99) , 
3, 2.31698, 1, 0, 0.515707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490656,-99) , 
7, -951.286, 1, 0, 0.497701,-99) , 
3, 4.72622, 1, 0, 0.510083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497946,-99) , 
4, 0.999524, 1, 0, 0.499172,-99) , 
0, 0.505709, 0, 0, 0.500064,-99) , 
2, -0.0713712, 1, 0, 0.50192,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0167551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487526,-99) , 
5, 0.34857, 1, 0, 0.514909,-99) , 
NN(
0, 
0, 
-1, 0.522678, 0, 1, 0.504155,-99) , 
9, -3.36198, 1, 0, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480911,-99) , 
10, 3.26817, 1, 0, 0.504603,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0092759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499958,-99) , 
0, 0.499995, 0, 0, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475433,-99) , 
8, -2.02037, 0, 0, 0.502565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478,-99) , 
8, 2.14285, 1, 0, 0.50163,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0234979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.550708, 1, 1, 0.517867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496302,-99) , 
9, -1.79958, 0, 0, 0.498962,-99) , 
10, 0.372137, 0, 0, 0.504085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472128,-99) , 
8, 1.85716, 0, 0, 0.483879,-99) , 
10, 0.278432, 1, 0, 0.491936,-99) , 
8, 1.00001, 1, 0, 0.501422,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0281922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67204, 0, 1, 0.512386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463743,-99) , 
5, 0.848967, 1, 0, 0.509196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492151,-99) , 
9, -2.04523, 1, 0, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446447,-99) , 
4, 0.99981, 0, 0, 0.497515,-99) , 
5, -0.0483244, 0, 0, 0.502864,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0175277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499688,-99) , 
2, -0.207461, 1, 0, 0.505652,-99) , 
8, 1, 0, 0, 0.51141,-99) , 
NN(
NN(
0, 
0, 
-1, 0.522476, 0, 1, 0.504804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473542,-99) , 
2, -0.00728262, 1, 0, 0.493681,-99) , 
2, 0.00340655, 0, 0, 0.499907,-99) , 
2, -0.0714207, 1, 0, 0.502036,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0158375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62813, 0, 1, 0.511891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471211,-99) , 
0, 0.506163, 1, 0, 0.508283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51901,-99) , 
NN(
0, 
0, 
-1, -0.142812, 0, -1, 0.496131,-99) , 
10, -1.85411, 1, 0, 0.497876,-99) , 
0, 0.499995, 0, 0, 0.501477,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0149128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496295,-99) , 
10, 0.55255, 0, 0, 0.500596,-99) , 
4, 0.999048, 1, 0, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470829,-99) , 
3, 9.28394, 1, 0, 0.501541,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0135266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492659,-99) , 
3, 2.75502, 1, 0, 0.522582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489178,-99) , 
8, 0.143329, 0, 0, 0.494884,-99) , 
3, 4.72622, 1, 0, 0.514177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489098,-99) , 
8, -1.16317, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471161,-99) , 
8, -1.85705, 0, 0, 0.499609,-99) , 
2, -0.0713033, 1, 0, 0.502309,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.018126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493649,-99) , 
8, 1.85714, 0, 0, 0.494967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461757,-99) , 
4, 0.998572, 0, 0, 0.494061,-99) , 
9, -4.0888, 1, 0, 0.496107,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0476096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19707, 0, 1, 0.518403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269478,-99) , 
7, -1.85716, 0, 0, 0.496816,-99) , 
7, -951.286, 1, 0, 0.506557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479689,-99) , 
10, -0.390698, 0, 0, 0.518852,-99) , 
NN(
0, 
0, 
-1, 1.12408, 0, -1, 0.48985,-99) , 
9, -1.47152, 1, 0, 0.496407,-99) , 
5, -0.524634, 0, 0, 0.503187,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0330116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
9, -0.415565, 1, 0, 0.512514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443811,-99) , 
9, -2.32331, 1, 0, 0.491393,-99) , 
10, 0.132746, 0, 0, 0.506098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495492,-99) , 
9, -1.57735, 0, 0, 0.501378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455143,-99) , 
10, 0.897582, 1, 0, 0.497949,-99) , 
5, -0.238659, 1, 0, 0.501736,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0189366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498593,-99) , 
9, -1.23642, 0, 0, 0.504044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453824,-99) , 
8, -1.97946, 0, 0, 0.502483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529633,-99) , 
NN(
0, 
0, 
-1, 0.0465597, 1, -1, 0.481086,-99) , 
10, 0.556, 1, 0, 0.490132,-99) , 
8, 1.28575, 1, 0, 0.500575,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0135829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492932,-99) , 
3, 4.67917, 1, 0, 0.521552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494894,-99) , 
5, -0.43003, 1, 0, 0.505062,-99) , 
2, -0.139583, 1, 0, 0.514151,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470354,-99) , 
2, 0.302495, 1, 0, 0.502053,-99) , 
2, -0.0715712, 1, 0, 0.504289,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0122115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498424,-99) , 
4, 0.999954, 0, 0, 0.509452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487956,-99) , 
0, 0.496186, 0, 0, 0.49632,-99) , 
2, -0.0728913, 1, 0, 0.498578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473412,-99) , 
4, 0.999048, 0, 0, 0.497469,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0187328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0743757, 0, 1, 0.505727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490669,-99) , 
8, -1.57137, 1, 0, 0.492782,-99) , 
3, 2.50784, 1, 0, 0.500256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513453,-99) , 
NN(
0, 
0, 
-1, 0.989828, 0, -1, 0.463625,-99) , 
10, -0.898867, 1, 0, 0.485574,-99) , 
5, 0.713012, 1, 0, 0.498883,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0229873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.518144, 0, 1, 0.514689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476533,-99) , 
5, -0.524212, 0, 0, 0.513862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491116,-99) , 
3, 3.96792, 0, 0, 0.49423,-99) , 
2, 0.153024, 0, 0, 0.496371,-99) , 
2, -0.0714605, 1, 0, 0.499768,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0169555);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.80818, 0, 1, 0.505234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482654,-99) , 
3, 2.99395, 1, 0, 0.505232,-99) , 
NN(
0, 
0, 
-1, -1.10352, 1, -1, 0.475702,-99) , 
5, -0.238751, 1, 0, 0.491108,-99) , 
0, 0.5019, 1, 0, 0.50233,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0194784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494604,-99) , 
4, 0.999932, 0, 0, 0.508111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49332,-99) , 
9, 0.530057, 0, 0, 0.495619,-99) , 
0, 0.496186, 1, 0, 0.499823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448313,-99) , 
4, 0.998571, 0, 0, 0.498421,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0137882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.80135, 0, 1, 0.504214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487641,-99) , 
9, -1.30668, 1, 0, 0.496195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452533,-99) , 
5, 0.617341, 1, 0, 0.489028,-99) , 
8, 1.00003, 1, 0, 0.500867,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0160816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.507332,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.493748,-99) , 
0, 0.49809, 0, 0, 0.500703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447416,-99) , 
4, 0.998571, 0, 0, 0.499266,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0144644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489896,-99) , 
8, -1.48678, 0, 0, 0.514873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523615,-99) , 
NN(
0, 
0, 
-1, -0.265258, 0, -1, 0.495276,-99) , 
8, -1.28564, 1, 0, 0.496768,-99) , 
10, -1.79947, 1, 0, 0.498253,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0110885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142563, 0, 1, 0.519436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49789,-99) , 
10, -1.30085, 1, 0, 0.50027,-99) , 
0, 0.491424, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476936,-99) , 
4, 0.998571, 0, 0, 0.501083,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0124377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.769032, 0, 1, 0.515901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497499,-99) , 
0, 0.500811, 0, 0, 0.500245,-99) , 
0, 0.493328, 1, 0, 0.502619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477163,-99) , 
4, 0.999048, 0, 0, 0.501509,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0175865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496851,-99) , 
2, -0.120049, 1, 0, 0.515204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482794,-99) , 
2, -0.275536, 0, 0, 0.509475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498385,-99) , 
0, 0.495777, 0, 0, 0.504008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493012,-99) , 
2, 0.153014, 0, 0, 0.494531,-99) , 
0, 0.497138, 1, 0, 0.498406,-99) , 
2, -0.0714605, 1, 0, 0.500443,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.016946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49751,-99) , 
0, 0.495233, 0, 0, 0.524284,-99) , 
NN(
0, 
0, 
-1, -0.524831, 1, 1, 0.504611,-99) , 
4, 0.999524, 1, 0, 0.506109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498397,-99) , 
2, -0.139595, 0, 0, 0.509827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4822,-99) , 
3, 4.46688, 0, 0, 0.48681,-99) , 
2, -0.0715818, 1, 0, 0.491722,-99) , 
0, 0.500947, 1, 0, 0.502259,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00746677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531112,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28563, 1, 1, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471632,-99) , 
10, -1.83682, 0, 0, 0.500206,-99) , 
9, -4.09626, 1, 0, 0.501597,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0160975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491463,-99) , 
10, 3.16629, 1, 0, 0.524009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463567,-99) , 
8, 1.85724, 1, 0, 0.513435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499834,-99) , 
4, 0.999524, 1, 0, 0.501501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475707,-99) , 
5, -0.80966, 0, 0, 0.499996,-99) , 
10, 1.52337, 0, 0, 0.502396,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0155651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85705, 1, 1, 0.505213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480283,-99) , 
0, 0.489655, 0, 0, 0.504127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489796,-99) , 
2, -0.0714207, 1, 0, 0.495213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459743,-99) , 
8, -1.00004, 0, 0, 0.489914,-99) , 
0, 0.5019, 1, 0, 0.501238,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0148669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.536097, 0, 1, 0.524779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499712,-99) , 
8, -0.673422, 1, 0, 0.502006,-99) , 
10, -1.16699, 1, 0, 0.505475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47043,-99) , 
10, -1.39437, 0, 0, 0.486413,-99) , 
8, -1.28568, 0, 0, 0.503642,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0175449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484979,-99) , 
0, 0.493328, 0, 0, 0.514126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498543,-99) , 
2, -0.216497, 1, 0, 0.500373,-99) , 
3, 0.918057, 1, 0, 0.503844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491812,-99) , 
8, -0.714222, 1, 0, 0.499604,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.47721,-99) , 
2, 0.0713744, 1, 0, 0.492661,-99) , 
3, 4.50708, 1, 0, 0.501585,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0141527);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.786773, 0, 1, 0.505913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466914,-99) , 
4, 0.999048, 0, 0, 0.504243,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00978068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999926, 1, 1, 0.50501,-99) , 
NN(
0, 
0, 
-1, -0.714337, 0, -1, 0.496941,-99) , 
0, 0.49809, 1, 0, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4651,-99) , 
4, 0.998571, 0, 0, 0.499943,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0182932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.519881, 0, 1, 0.513534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495448,-99) , 
2, 0.0159808, 0, 0, 0.501718,-99) , 
2, -0.0306633, 1, 0, 0.505267,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.4843,-99) , 
2, 0.214219, 1, 0, 0.504206,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.014441);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.7113, 0, 1, 0.506377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496122,-99) , 
8, 0.99998, 0, 0, 0.502479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476868,-99) , 
5, 0.617634, 1, 0, 0.498734,-99) , 
3, 4.55908, 1, 0, 0.504861,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.018412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473349,-99) , 
8, -1.97951, 0, 0, 0.515063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484011,-99) , 
8, -0.918229, 0, 0, 0.50584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494125,-99) , 
4, 0.999524, 1, 0, 0.495522,-99) , 
0, 0.500947, 0, 0, 0.498326,-99) , 
8, -1.57134, 1, 0, 0.499353,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0126311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474993,-99) , 
4, 0.999048, 0, 0, 0.501383,-99) , 
5, 0.805492, 0, 0, 0.502984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441788,-99) , 
5, 0.140367, 1, 0, 0.48251,-99) , 
8, 1.85715, 1, 0, 0.501654,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0130654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498926,-99) , 
5, -0.908622, 1, 0, 0.512695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49619,-99) , 
5, 0.141652, 0, 0, 0.500238,-99) , 
10, 2.32219, 0, 0, 0.501486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457894,-99) , 
5, -0.3358, 1, 0, 0.480735,-99) , 
0, 0.490471, 0, 0, 0.500402,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0105123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478614,-99) , 
4, 0.999637, 0, 0, 0.501222,-99) , 
8, 2.14283, 0, 0, 0.502498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476776,-99) , 
4, 0.999048, 0, 0, 0.501363,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0223449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493842,-99) , 
5, -0.906526, 1, 0, 0.502069,-99) , 
3, 1.62804, 1, 0, 0.515167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487353,-99) , 
5, 0.147348, 1, 0, 0.510636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493238,-99) , 
5, 0.427514, 0, 0, 0.496942,-99) , 
9, -3.44065, 1, 0, 0.498978,-99) , 
9, 0.609836, 0, 0, 0.50064,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0236559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471068,-99) , 
10, -0.813018, 0, 0, 0.506625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487722,-99) , 
9, -2.54598, 0, 0, 0.496606,-99) , 
5, -0.239422, 1, 0, 0.501488,-99) , 
9, -4.09685, 1, 0, 0.502693,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00498148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214318, 0, 1, 0.501058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473469,-99) , 
4, 0.99932, 0, 0, 0.500231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474648,-99) , 
4, 0.998571, 0, 0, 0.499504,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0219296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497127,-99) , 
9, -2.11528, 1, 0, 0.504738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489831,-99) , 
10, -1.42484, 1, 0, 0.49554,-99) , 
5, -0.239421, 1, 0, 0.499974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472184,-99) , 
4, 0.999048, 0, 0, 0.498772,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.00938694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524379,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14283, 0, 1, 0.50136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460078,-99) , 
10, -0.82413, 1, 0, 0.485777,-99) , 
5, 0.635971, 1, 0, 0.499995,-99) , 
5, 0.80818, 0, 0, 0.501238,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0139357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.80818, 0, 1, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450652,-99) , 
8, -1.97956, 0, 0, 0.49997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535435,-99) , 
NN(
0, 
0, 
-1, -1.28232, 1, -1, 0.473378,-99) , 
10, 0.535361, 1, 0, 0.484588,-99) , 
8, 1.28572, 1, 0, 0.497603,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0135299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.503259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473455,-99) , 
4, 0.999528, 0, 0, 0.501822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451262,-99) , 
10, -0.794245, 1, 0, 0.480181,-99) , 
5, 0.7113, 1, 0, 0.499797,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0224074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462808,-99) , 
3, 4.70718, 1, 0, 0.508878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490231,-99) , 
4, 0.999997, 0, 0, 0.496124,-99) , 
4, 0.999932, 1, 0, 0.49875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467955,-99) , 
4, 0.998572, 0, 0, 0.497892,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0144857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485342,-99) , 
5, 0.0437397, 0, 0, 0.515161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496851,-99) , 
5, 0.520798, 0, 0, 0.502548,-99) , 
NN(
0, 
0, 
-1, 0.330463, 1, -1, 0.494788,-99) , 
2, 0.0305798, 0, 0, 0.497099,-99) , 
2, -0.214313, 1, 0, 0.498093,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0273044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559925,-99) , 
NN(
0, 
0, 
-1, 3.69353, 1, -1, 0.494582,-99) , 
10, -1.03191, 1, 0, 0.499518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
9, -0.313034, 1, 0, 0.509744,-99) , 
NN(
0, 
0, 
-1, -1.50667, 1, -1, 0.473554,-99) , 
10, -1.04185, 0, 0, 0.488618,-99) , 
8, -0.428508, 0, 0, 0.496215,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0103703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483895,-99) , 
8, 0.142582, 0, 0, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467516,-99) , 
5, 0.237177, 1, 0, 0.492061,-99) , 
0, 0.492376, 0, 0, 0.501888,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0199059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495117,-99) , 
8, -0.550857, 0, 0, 0.51996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479939,-99) , 
5, 0.617849, 1, 0, 0.499907,-99) , 
10, -1.18225, 1, 0, 0.502903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467813,-99) , 
10, -1.18548, 0, 0, 0.48813,-99) , 
8, -1.28564, 0, 0, 0.501454,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0245524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493992,-99) , 
8, -0.99997, 1, 0, 0.499163,-99) , 
9, -1.40534, 1, 0, 0.505799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498926,-99) , 
10, 0.294967, 1, 0, 0.521232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491298,-99) , 
9, -4.06785, 1, 0, 0.493419,-99) , 
8, 1.0789, 0, 0, 0.495813,-99) , 
10, 0.569726, 0, 0, 0.499247,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0209577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489989,-99) , 
10, -0.641719, 1, 0, 0.529476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454879,-99) , 
10, -1.51087, 1, 0, 0.485083,-99) , 
9, -3.0144, 0, 0, 0.512246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499001,-99) , 
9, -3.76215, 1, 0, 0.500768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466301,-99) , 
4, 0.999619, 0, 0, 0.499062,-99) , 
5, 0.522474, 0, 0, 0.501602,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0168061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499627,-99) , 
7, -951.286, 1, 0, 0.515232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498672,-99) , 
9, -1.27781, 0, 0, 0.501034,-99) , 
10, 0.596019, 0, 0, 0.505978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476701,-99) , 
4, 0.999048, 0, 0, 0.504722,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0177712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489023,-99) , 
9, -3.13533, 0, 0, 0.516272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491378,-99) , 
10, -0.847052, 0, 0, 0.501141,-99) , 
5, 0.521156, 0, 0, 0.503785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476095,-99) , 
4, 0.998571, 0, 0, 0.503012,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0111765);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525899,-99) , 
NN(
NN(
0, 
0, 
-1, -0.212785, 1, 1, 0.502993,-99) , 
NN(
0, 
0, 
-1, 0.143255, 0, -1, 0.479898,-99) , 
4, 0.999819, 0, 0, 0.500847,-99) , 
4, 0.999048, 1, 0, 0.50203,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0198915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487925,-99) , 
4, 0.999955, 0, 0, 0.503923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463728,-99) , 
10, -0.12972, 1, 0, 0.493351,-99) , 
5, 0.426083, 1, 0, 0.501664,-99) , 
4, 0.999048, 1, 0, 0.502641,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00701151);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479036,-99) , 
4, 0.999637, 0, 0, 0.499713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467044,-99) , 
5, 0.803713, 1, 0, 0.498552,-99) , 
4, 0.999048, 1, 0, 0.499686,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0356751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49024,-99) , 
8, 0.761942, 0, 0, 0.496123,-99) , 
10, 0.074576, 0, 0, 0.500767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4891,-99) , 
9, -0.905084, 1, 0, 0.498836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455173,-99) , 
8, 0.629678, 1, 0, 0.482289,-99) , 
10, 0.934297, 0, 0, 0.492338,-99) , 
9, -1.86901, 1, 0, 0.497043,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0341539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493428,-99) , 
9, -2.46948, 0, 0, 0.500431,-99) , 
8, 0.233145, 0, 0, 0.506651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492232,-99) , 
5, 0.0468541, 1, 0, 0.526455,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48679,-99) , 
9, -2.21325, 1, 0, 0.493633,-99) , 
10, -0.523235, 1, 0, 0.498471,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0123052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.521676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498327,-99) , 
4, 0.999932, 1, 0, 0.50115,-99) , 
0, 0.491424, 1, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462182,-99) , 
4, 0.998571, 0, 0, 0.501698,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0323755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.523595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46814,-99) , 
8, -1.83397, 1, 0, 0.481934,-99) , 
8, -1.11656, 0, 0, 0.513556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498535,-99) , 
5, 0.0494607, 1, 0, 0.528475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480804,-99) , 
10, 0.24011, 0, 0, 0.499455,-99) , 
9, -2.22532, 1, 0, 0.504309,-99) , 
10, -0.523235, 1, 0, 0.507736,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0280379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.842738, 1, 1, 0.53359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472937,-99) , 
10, -1.24174, 1, 0, 0.499938,-99) , 
8, -0.203144, 0, 0, 0.510586,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0493225, 1, 1, 0.532059,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495214,-99) , 
9, -2.22473, 1, 0, 0.501427,-99) , 
10, -0.523235, 1, 0, 0.504816,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0209385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.62729, 0, 1, 0.52442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444446,-99) , 
10, 0.426664, 1, 0, 0.51384,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.505005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470937,-99) , 
4, 0.999619, 0, 0, 0.503333,-99) , 
5, 0.522678, 0, 0, 0.505346,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0233894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494317,-99) , 
3, 4.29083, 1, 0, 0.50879,-99) , 
0, 0.492376, 1, 0, 0.512181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48946,-99) , 
3, 4.65723, 1, 0, 0.519178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490399,-99) , 
2, -0.00727785, 1, 0, 0.49578,-99) , 
2, 0.153062, 0, 0, 0.498333,-99) , 
2, -0.0714203, 1, 0, 0.500895,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0177624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.431523, 0, 1, 0.517747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499438,-99) , 
4, 0.999524, 1, 0, 0.502321,-99) , 
9, -1.09165, 0, 0, 0.506673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489943,-99) , 
7, -949.398, 0, 0, 0.498066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466362,-99) , 
5, 0.713014, 1, 0, 0.495046,-99) , 
0, 0.497138, 0, 0, 0.501952,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0135543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999546, 1, 1, 0.504944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473035,-99) , 
5, 0.805629, 1, 0, 0.503825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469397,-99) , 
4, 0.999048, 0, 0, 0.502358,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00843132);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538585,-99) , 
NN(
NN(
0, 
0, 
-1, -0.144207, 0, 1, 0.518719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499742,-99) , 
10, -1.85954, 1, 0, 0.501501,-99) , 
8, 1.85715, 0, 0, 0.502661,-99) , 
4, 0.998571, 1, 0, 0.503787,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0231899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483409,-99) , 
10, -1.24755, 1, 0, 0.521879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473139,-99) , 
8, -1.22523, 0, 0, 0.508103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
5, 0.331928, 0, 0, 0.49851,-99) , 
8, -1.28563, 1, 0, 0.500041,-99) , 
9, -3.11643, 1, 0, 0.501701,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.026182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27943, 1, 1, 0.519371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495481,-99) , 
7, -6.95896, 1, 0, 0.502692,-99) , 
10, -0.729509, 1, 0, 0.506158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489648,-99) , 
7, -951.286, 0, 0, 0.509547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464734,-99) , 
9, -3.83604, 0, 0, 0.49718,-99) , 
8, -0.714259, 0, 0, 0.504171,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0117956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.504807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469264,-99) , 
4, 0.999048, 0, 0, 0.503311,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0101941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214259, 0, 1, 0.502405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464847,-99) , 
10, -1.60944, 0, 0, 0.488304,-99) , 
8, -1.16315, 0, 0, 0.501201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47676,-99) , 
8, -1.85705, 0, 0, 0.500353,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0343386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493494,-99) , 
10, -1.47375, 0, 0, 0.52237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468785,-99) , 
10, -0.231927, 0, 0, 0.498278,-99) , 
9, -2.85971, 1, 0, 0.503096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486544,-99) , 
9, -2.12241, 0, 0, 0.497784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438203,-99) , 
10, 0.628662, 1, 0, 0.491783,-99) , 
5, 0.331012, 1, 0, 0.499938,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0322063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49665,-99) , 
9, -3.46396, 1, 0, 0.523142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47424,-99) , 
10, -1.65008, 1, 0, 0.493232,-99) , 
5, 0.332496, 1, 0, 0.508559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49602,-99) , 
8, -0.428295, 1, 0, 0.503682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485152,-99) , 
9, 0.983219, 0, 0, 0.490074,-99) , 
7, -949.398, 0, 0, 0.496215,-99) , 
9, -2.98526, 1, 0, 0.499139,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0112546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.25665, 1, 1, 0.522255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497266,-99) , 
3, 3.36828, 0, 0, 0.499756,-99) , 
5, 0.805629, 0, 0, 0.501045,-99) , 
2, 0.214245, 0, 0, 0.502163,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0487717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57146, 0, 1, 0.52448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357917,-99) , 
5, 0.139859, 1, 0, 0.430441,-99) , 
7, -1.06728, 0, 0, 0.507261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
9, -3.49923, 1, 0, 0.503469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475112,-99) , 
9, 1.62707, 0, 0, 0.483465,-99) , 
5, -0.619378, 0, 0, 0.49619,-99) , 
7, -951.286, 0, 0, 0.501612,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0159065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810675, 1, 1, 0.519358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495289,-99) , 
9, -1.4003, 1, 0, 0.504325,-99) , 
10, 1.69972, 0, 0, 0.505912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488153,-99) , 
10, 3.11026, 1, 0, 0.504901,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0141482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496383,-99) , 
7, -951.286, 1, 0, 0.501913,-99) , 
4, 0.999524, 1, 0, 0.503191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471722,-99) , 
4, 0.998572, 0, 0, 0.502325,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0153996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.22257, 0, 1, 0.506341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482118,-99) , 
10, 2.88662, 1, 0, 0.505569,-99) , 
NN(
0, 
0, 
-1, 1.32906, 0, -1, 0.479973,-99) , 
5, -0.904845, 0, 0, 0.503665,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0096992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47809,-99) , 
0, 0.489519, 0, 0, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480369,-99) , 
9, 1.51349, 1, 0, 0.501267,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0157661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491742,-99) , 
3, 3.00059, 1, 0, 0.507319,-99) , 
NN(
0, 
0, 
-1, -0.00332911, 1, -1, 0.495019,-99) , 
2, 0.0714948, 0, 0, 0.497284,-99) , 
5, 0.80818, 0, 0, 0.498526,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0195594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477069,-99) , 
10, -0.282158, 1, 0, 0.513997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496906,-99) , 
8, 1.85716, 0, 0, 0.498692,-99) , 
5, 0.616228, 0, 0, 0.500928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490898,-99) , 
8, 0.328238, 0, 0, 0.497785,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.47941,-99) , 
9, -1.75295, 1, 0, 0.489993,-99) , 
0, 0.495233, 0, 0, 0.498056,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0198484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480627,-99) , 
5, 0.231263, 0, 0, 0.528158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496511,-99) , 
8, -0.99997, 1, 0, 0.499455,-99) , 
10, -1.43489, 1, 0, 0.501605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478261,-99) , 
9, -3.79564, 0, 0, 0.499813,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0286172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05927, 1, 1, 0.518632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490226,-99) , 
7, -951.198, 1, 0, 0.502306,-99) , 
9, -2.38364, 1, 0, 0.507389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496248,-99) , 
9, -1.67167, 1, 0, 0.51715,-99) , 
NN(
0, 
0, 
-1, -1.16314, 0, -1, 0.486983,-99) , 
10, -0.828112, 0, 0, 0.49801,-99) , 
8, -0.428496, 0, 0, 0.504536,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.01751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -949.398, 0, 1, 0.51824,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497878, 0, 1, 0.508609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477823,-99) , 
5, 0.706185, 1, 0, 0.500515,-99) , 
0, 0.498725, 1, 0, 0.50405,-99) , 
0, 0.494281, 1, 0, 0.507,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0140914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474476,-99) , 
8, 1.84356, 1, 0, 0.510563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499281,-99) , 
8, 1.71521, 0, 0, 0.501022,-99) , 
10, 1.24146, 0, 0, 0.503153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4779,-99) , 
8, -1.8571, 0, 0, 0.502277,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0181645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493478,-99) , 
9, -0.55308, 1, 0, 0.509384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493971,-99) , 
7, -951.286, 0, 0, 0.500291,-99) , 
1, -0.00113238, 1, 0, 0.503897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476967,-99) , 
6, 0.0237843, 1, 0, 0.503221,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0381968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497715,-99) , 
10, -0.349411, 1, 0, 0.523635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478773,-99) , 
10, -1.28585, 1, 0, 0.496878,-99) , 
9, -2.55178, 0, 0, 0.50817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497552,-99) , 
9, -1.80877, 1, 0, 0.506394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464045,-99) , 
9, -2.89318, 1, 0, 0.489277,-99) , 
10, -0.0712648, 0, 0, 0.500225,-99) , 
5, 0.142011, 0, 0, 0.503183,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.019194);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214245, 0, 1, 0.508257,-99) , 
NN(
NN(
0, 
0, 
-1, -0.781328, 1, 1, 0.517234,-99) , 
NN(
0, 
0, 
-1, -1.35689, 1, -1, 0.490705,-99) , 
10, -0.258756, 0, 0, 0.498502,-99) , 
8, -0.142836, 0, 0, 0.504382,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0157726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481716,-99) , 
8, 1.65305, 1, 0, 0.504603,-99) , 
8, 2.14286, 0, 0, 0.505434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470535,-99) , 
4, 0.998571, 0, 0, 0.504466,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0157083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68799, 1, 1, 0.505241,-99) , 
NN(
0, 
0, 
-1, 1.16399, 0, -1, 0.483826,-99) , 
10, 2.51797, 1, 0, 0.503269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461742,-99) , 
10, -1.80739, 0, 0, 0.483889,-99) , 
8, -1.28564, 0, 0, 0.501408,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0153036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491755,-99) , 
8, -0.535329, 0, 0, 0.515412,-99) , 
NN(
0, 
0, 
-1, -2.97466, 0, -1, 0.497599,-99) , 
10, -1.18225, 1, 0, 0.500233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494843,-99) , 
0, 0.498091, 1, 0, 0.504633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461782,-99) , 
10, -1.97451, 0, 0, 0.484731,-99) , 
8, -1.28562, 0, 0, 0.49874,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0138947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478037,-99) , 
5, -0.902533, 1, 0, 0.506167,-99) , 
8, 1.29002, 0, 0, 0.516044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476683,-99) , 
8, 1.85718, 1, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465056,-99) , 
5, -0.90484, 0, 0, 0.499688,-99) , 
10, 2.37992, 0, 0, 0.501293,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.025858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492475,-99) , 
5, -0.0483143, 1, 0, 0.501865,-99) , 
10, -0.793417, 1, 0, 0.505111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495024,-99) , 
9, -3.42536, 1, 0, 0.501271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443398,-99) , 
10, -1.73291, 1, 0, 0.475329,-99) , 
5, 0.329901, 1, 0, 0.494708,-99) , 
8, -0.142806, 0, 0, 0.500994,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0332013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486022,-99) , 
4, 0.999982, 0, 0, 0.502963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463427,-99) , 
4, 0.999619, 0, 0, 0.50117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480338,-99) , 
8, 0.749729, 0, 0, 0.493992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4545,-99) , 
10, 0.118665, 1, 0, 0.48609,-99) , 
5, 0.425751, 1, 0, 0.497657,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.022659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472854,-99) , 
9, -1.5439, 1, 0, 0.500724,-99) , 
9, 0.459389, 0, 0, 0.510539,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488682,-99) , 
8, -0.142852, 1, 0, 0.496181,-99) , 
0, 0.499043, 1, 0, 0.500984,-99) , 
8, 1.28572, 0, 0, 0.50248,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0218084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499487,-99) , 
10, -0.260114, 1, 0, 0.505934,-99) , 
NN(
0, 
0, 
-1, 1.28574, 0, -1, 0.486769,-99) , 
10, 2.29449, 1, 0, 0.503011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489037,-99) , 
9, -1.18004, 1, 0, 0.501738,-99) , 
NN(
0, 
0, 
-1, -0.590944, 1, -1, 0.488153,-99) , 
10, -0.405726, 0, 0, 0.493253,-99) , 
8, 0.428598, 0, 0, 0.497164,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0167322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814221, 1, 1, 0.5057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485459,-99) , 
5, -0.904845, 0, 0, 0.504194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494564,-99) , 
8, 1.28574, 0, 0, 0.499555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464405,-99) , 
5, 0.709669, 1, 0, 0.496235,-99) , 
0, 0.497138, 0, 0, 0.500933,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0107021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814424, 1, 1, 0.503093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473094,-99) , 
10, 2.79476, 1, 0, 0.502085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470429,-99) , 
5, -0.941162, 0, 0, 0.488377,-99) , 
5, -0.904949, 0, 0, 0.501061,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0191853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490282,-99) , 
2, 0.0711103, 0, 0, 0.497802,-99) , 
10, 0.278432, 1, 0, 0.507066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498111,-99) , 
0, 0.499995, 0, 0, 0.506023,-99) , 
NN(
0, 
0, 
-1, -0.0328858, 1, -1, 0.493867,-99) , 
2, -0.0715049, 1, 0, 0.496102,-99) , 
8, 1.00001, 0, 0, 0.498552,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0176085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.662019, 1, 1, 0.514329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49461,-99) , 
8, 1.28571, 0, 0, 0.497188,-99) , 
3, 0.946318, 1, 0, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463494,-99) , 
3, 9.04907, 1, 0, 0.499876,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.018668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85714, 0, 1, 0.505498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476606,-99) , 
4, 0.999322, 0, 0, 0.504592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489187,-99) , 
8, -0.379707, 0, 0, 0.515969,-99) , 
NN(
0, 
0, 
-1, -2.22251, 0, -1, 0.469132,-99) , 
10, -0.82413, 1, 0, 0.491638,-99) , 
5, 0.617845, 1, 0, 0.502804,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0299456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497665,-99) , 
8, 1.20476, 1, 0, 0.534898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46238,-99) , 
10, 0.550515, 0, 0, 0.497539,-99) , 
5, -0.238898, 0, 0, 0.506303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490167,-99) , 
5, -0.524849, 1, 0, 0.493365,-99) , 
8, 1.17637, 0, 0, 0.496795,-99) , 
9, -1.81242, 0, 0, 0.500912,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0181773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428265,-99) , 
7, -0.428975, 0, 0, 0.497638,-99) , 
7, -951.286, 1, 0, 0.518526,-99) , 
NN(
NN(
0, 
0, 
-1, 0.214083, 0, 1, 0.502284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485922,-99) , 
7, -951.286, 0, 0, 0.491527,-99) , 
5, -0.755305, 0, 0, 0.499967,-99) , 
5, 0.712784, 0, 0, 0.501749,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.018365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49386,-99) , 
10, 0.372137, 0, 0, 0.497228,-99) , 
4, 0.999048, 1, 0, 0.498412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517695,-99) , 
NN(
0, 
0, 
-1, 0.520531, 1, -1, 0.482777,-99) , 
10, 0.3063, 1, 0, 0.488835,-99) , 
8, 1.00003, 1, 0, 0.496289,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0243624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499593,-99) , 
10, 0.372713, 1, 0, 0.535966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494566,-99) , 
8, 0.916164, 0, 0, 0.500261,-99) , 
9, -1.9086, 0, 0, 0.507701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517565,-99) , 
NN(
0, 
0, 
-1, -0.165679, 0, -1, 0.491679,-99) , 
9, -2.77811, 1, 0, 0.495234,-99) , 
5, -0.0496687, 0, 0, 0.500919,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.022818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.70448, 0, 1, 0.511513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460172,-99) , 
10, 0.772975, 1, 0, 0.507388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494783,-99) , 
10, 1.54622, 0, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43871,-99) , 
4, 0.999714, 0, 0, 0.497075,-99) , 
5, 0.141653, 0, 0, 0.500873,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0120462);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.506023,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00731185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537148,-99) , 
NN(
NN(
0, 
0, 
-1, -0.704643, 1, 1, 0.525474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499939,-99) , 
0, 0.505709, 0, 0, 0.500818,-99) , 
8, 1.85714, 0, 0, 0.502478,-99) , 
4, 0.998572, 1, 0, 0.50355,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.014181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49774,-99) , 
5, 0.0437088, 0, 0, 0.519346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486643,-99) , 
10, 1.3654, 1, 0, 0.509023,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.495628,-99) , 
2, -0.0509647, 1, 0, 0.498068,-99) , 
2, -0.214216, 1, 0, 0.499225,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0155472);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524391,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0668194, 1, 1, 0.505143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490626,-99) , 
8, -1.28553, 1, 0, 0.493603,-99) , 
3, 3.16774, 1, 0, 0.501331,-99) , 
5, 0.807937, 0, 0, 0.502502,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0102151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483199,-99) , 
7, -951.286, 0, 0, 0.513577,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85714, 0, 1, 0.502212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461389,-99) , 
4, 0.999705, 0, 0, 0.501051,-99) , 
4, 0.999524, 1, 0, 0.502014,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.023264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.18187, 0, 1, 0.507697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487661,-99) , 
9, -1.91636, 1, 0, 0.49523,-99) , 
5, -0.428995, 0, 0, 0.503109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515839,-99) , 
NN(
0, 
0, 
-1, -0.526109, 1, -1, 0.481351,-99) , 
2, 0.0709954, 0, 0, 0.489637,-99) , 
0, 0.502852, 1, 0, 0.501075,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0105964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487225,-99) , 
9, -0.809528, 1, 0, 0.513664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481263,-99) , 
8, 1.13608, 1, 0, 0.498889,-99) , 
8, 1.57145, 0, 0, 0.500426,-99) , 
4, 0.999048, 1, 0, 0.501274,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0161953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01053, 1, 1, 0.513812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49646,-99) , 
4, 0.999524, 1, 0, 0.499481,-99) , 
10, 0.919729, 0, 0, 0.502772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485656,-99) , 
9, 1.5772, 1, 0, 0.5018,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0371748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485683,-99) , 
9, -0.680818, 1, 0, 0.504094,-99) , 
9, 1.69564, 0, 0, 0.506442,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57146, 0, 1, 0.512658,-99) , 
NN(
0, 
0, 
-1, 0.4401, 1, -1, 0.375251,-99) , 
7, -1.51256, 0, 0, 0.497604,-99) , 
7, -951.198, 1, 0, 0.502177,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0147838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496248,-99) , 
8, 2.34694, 1, 0, 0.515579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518382,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494031,-99) , 
5, 0.805184, 0, 0, 0.495249,-99) , 
8, 1.85715, 0, 0, 0.496622,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00828923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525071,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.497723,-99) , 
2, -0.214396, 1, 0, 0.499078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47022,-99) , 
4, 0.998571, 0, 0, 0.498271,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0147398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490113,-99) , 
9, -2.59131, 0, 0, 0.500448,-99) , 
10, -1.55934, 1, 0, 0.501731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482177,-99) , 
9, -3.79564, 0, 0, 0.500229,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0110952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85678, 1, 1, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476567,-99) , 
10, 2.44617, 1, 0, 0.501932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465513,-99) , 
9, 1.63569, 0, 0, 0.487751,-99) , 
5, -0.904861, 0, 0, 0.500861,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0104892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142825, 0, 1, 0.512137,-99) , 
NN(
0, 
0, 
-1, 1.52337, 1, -1, 0.496049,-99) , 
0, 0.490471, 1, 0, 0.496893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464231,-99) , 
4, 0.998572, 0, 0, 0.495993,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0111041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499861,-99) , 
8, -0.999976, 1, 0, 0.502403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454133,-99) , 
5, 0.417864, 0, 0, 0.479018,-99) , 
4, 0.999728, 0, 0, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450195,-99) , 
4, 0.998572, 0, 0, 0.499207,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0336189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451325,-99) , 
5, -0.146983, 0, 0, 0.530576,-99) , 
NN(
0, 
0, 
-1, 0.710466, 1, -1, 0.495328,-99) , 
10, -0.605954, 1, 0, 0.500829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485299,-99) , 
9, -3.60628, 1, 0, 0.505213,-99) , 
NN(
0, 
0, 
-1, -0.513373, 0, -1, 0.471382,-99) , 
5, 0.332496, 1, 0, 0.488869,-99) , 
9, -2.9973, 0, 0, 0.49802,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0156275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483376,-99) , 
5, -0.914027, 0, 0, 0.503614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467602,-99) , 
4, 0.999048, 0, 0, 0.502527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471618,-99) , 
5, 0.805411, 1, 0, 0.501055,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0197856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49847,-99) , 
8, -0.714222, 1, 0, 0.502947,-99) , 
9, -1.44985, 1, 0, 0.511974,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474901,-99) , 
10, -1.48275, 0, 0, 0.486096,-99) , 
8, -1.09243, 0, 0, 0.501555,-99) , 
10, 0.495732, 0, 0, 0.505298,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00753442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499055,-99) , 
7, -951.286, 1, 0, 0.509504,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.498667,-99) , 
0, 0.494281, 1, 0, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476115,-99) , 
4, 0.998571, 0, 0, 0.500194,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0164166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488757,-99) , 
10, -0.55584, 1, 0, 0.519053,-99) , 
NN(
0, 
0, 
-1, 0.212494, 0, 1, 0.504805,-99) , 
4, 0.999524, 1, 0, 0.505903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476703,-99) , 
9, -3.09086, 0, 0, 0.495146,-99) , 
8, -1.28563, 0, 0, 0.504852,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0115876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.332206, 0, 1, 0.520633,-99) , 
NN(
NN(
0, 
0, 
-1, -0.717097, 0, 1, 0.510638,-99) , 
NN(
0, 
0, 
-1, 1.16328, 1, -1, 0.496929,-99) , 
9, -0.796582, 0, 0, 0.4999,-99) , 
8, 1.85716, 0, 0, 0.50131,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0105122);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142997, 0, 1, 0.526238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496881,-99) , 
10, -0.147884, 0, 0, 0.511635,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498246,-99) , 
2, 0.0513395, 0, 0, 0.500693,-99) , 
2, 0.21457, 0, 0, 0.502054,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0134901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.712783, 0, 1, 0.504714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48614,-99) , 
7, -951.286, 0, 0, 0.49869,-99) , 
NN(
0, 
0, 
-1, 0.491696, 0, -1, 0.47602,-99) , 
5, 0.0437332, 1, 0, 0.490501,-99) , 
0, 0.493329, 0, 0, 0.502562,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0146093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489153,-99) , 
5, -0.225297, 0, 0, 0.5146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495166,-99) , 
7, -951.286, 1, 0, 0.500294,-99) , 
8, 1.57143, 0, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483424,-99) , 
5, 0.807615, 1, 0, 0.500905,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0232065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487295,-99) , 
3, 2.96872, 1, 0, 0.518191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470589,-99) , 
8, 0.142902, 0, 0, 0.489673,-99) , 
3, 4.3897, 1, 0, 0.508358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488433,-99) , 
7, -951.286, 0, 0, 0.501512,-99) , 
NN(
0, 
0, 
-1, 1.53305, 1, -1, 0.493469,-99) , 
5, -0.714586, 1, 0, 0.495284,-99) , 
2, -0.0716276, 1, 0, 0.497708,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0137552);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.06544, 0, 1, 0.503837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489797,-99) , 
8, 1.77555, 1, 0, 0.51125,-99) , 
NN(
0, 
0, 
-1, 1.86433, 0, -1, 0.480324,-99) , 
8, 0.428604, 0, 0, 0.495974,-99) , 
9, -0.650827, 1, 0, 0.502182,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00776262);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499136,-99) , 
2, 0.214259, 0, 0, 0.500384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457733,-99) , 
4, 0.99932, 0, 0, 0.499139,-99) , 
4, 0.998571, 1, 0, 0.499934,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0249889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.59786, 1, 1, 0.542511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479936,-99) , 
10, 1.16114, 0, 0, 0.502532,-99) , 
9, -1.38001, 1, 0, 0.509212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480232,-99) , 
9, -2.39883, 1, 0, 0.494018,-99) , 
9, -1.4216, 0, 0, 0.497101,-99) , 
10, 0.443841, 0, 0, 0.501589,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0161259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489404,-99) , 
0, 0.49809, 0, 0, 0.508547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453815,-99) , 
4, 0.999619, 0, 0, 0.500513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47004,-99) , 
9, -2.60677, 0, 0, 0.487224,-99) , 
5, 0.468296, 1, 0, 0.49877,-99) , 
5, 0.713012, 0, 0, 0.499702,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0170989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498861,-99) , 
9, -1.33222, 1, 0, 0.506739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494563,-99) , 
9, -1.36507, 0, 0, 0.49655,-99) , 
10, 0.522183, 0, 0, 0.499838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469578,-99) , 
10, 3.36799, 1, 0, 0.498445,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0193986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497669,-99) , 
10, 0.491043, 0, 0, 0.502427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46173,-99) , 
8, -1.97956, 0, 0, 0.501141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535207,-99) , 
NN(
0, 
0, 
-1, 0.425524, 1, -1, 0.476249,-99) , 
10, 0.505994, 1, 0, 0.485987,-99) , 
8, 1.28572, 1, 0, 0.498836,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0149734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09061, 1, 1, 0.524715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481421,-99) , 
9, -3.59221, 0, 0, 0.515912,-99) , 
NN(
NN(
0, 
0, 
-1, -3.20446, 1, 1, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462885,-99) , 
8, -1.85712, 0, 0, 0.501041,-99) , 
5, 0.520796, 0, 0, 0.503878,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00612011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499756,-99) , 
2, 0.193862, 0, 0, 0.500926,-99) , 
2, -0.214261, 1, 0, 0.502038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483936,-99) , 
4, 0.999048, 0, 0, 0.50126,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0099858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48719,-99) , 
8, -1.97951, 0, 0, 0.518409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499684,-99) , 
8, 0.604722, 0, 0, 0.509201,-99) , 
NN(
0, 
0, 
-1, 2.04192, 1, -1, 0.497736,-99) , 
5, -0.809684, 1, 0, 0.499405,-99) , 
8, -1.57134, 1, 0, 0.500592,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0121648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526183,-99) , 
NN(
NN(
0, 
0, 
-1, 0.140615, 1, 1, 0.520114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
10, 1.54881, 0, 0, 0.498849,-99) , 
8, 1.85714, 0, 0, 0.500269,-99) , 
4, 0.998571, 1, 0, 0.501052,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0212438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.817205, 0, 1, 0.529164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486132,-99) , 
7, -951.286, 1, 0, 0.501724,-99) , 
10, -1.01773, 0, 0, 0.512079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485246,-99) , 
8, -0.0067831, 0, 0, 0.49774,-99) , 
10, -1.33113, 1, 0, 0.500415,-99) , 
8, -0.714259, 1, 0, 0.503024,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0133534);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21439, 1, 1, 0.503868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491515,-99) , 
8, 0.142724, 1, 0, 0.504866,-99) , 
NN(
0, 
0, 
-1, 0.67821, 1, -1, 0.488225,-99) , 
5, -0.33505, 1, 0, 0.495822,-99) , 
0, 0.499995, 1, 0, 0.501134,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0248574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497978,-99) , 
10, -0.400584, 1, 0, 0.50523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487918,-99) , 
10, -1.79588, 1, 0, 0.492892,-99) , 
8, -0.333342, 0, 0, 0.499927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470326,-99) , 
9, -1.80959, 1, 0, 0.483481,-99) , 
9, 0.216768, 0, 0, 0.489723,-99) , 
8, 0.999985, 1, 0, 0.497684,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0222506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0508846, 0, 1, 0.516971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475569,-99) , 
8, -1.09466, 0, 0, 0.495531,-99) , 
9, -3.01539, 0, 0, 0.5069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483814,-99) , 
5, 0.1406, 1, 0, 0.494661,-99) , 
10, -0.78161, 1, 0, 0.49788,-99) , 
8, -0.142836, 1, 0, 0.501486,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0112068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485635,-99) , 
8, -1.2847, 0, 0, 0.500858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458622,-99) , 
10, 2.99376, 1, 0, 0.499699,-99) , 
NN(
0, 
0, 
-1, 2.72319, 0, -1, 0.480323,-99) , 
5, -0.904829, 0, 0, 0.498261,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0178525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481185,-99) , 
7, -951.286, 0, 0, 0.530413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493976,-99) , 
0, 0.500947, 0, 0, 0.49687,-99) , 
4, 0.999524, 1, 0, 0.49912,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.480257,-99) , 
2, -0.214216, 0, 0, 0.498152,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.038273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85723, 0, 1, 0.519403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345254,-99) , 
7, -1.82845, 0, 0, 0.506505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
5, -0.0519742, 0, 0, 0.498718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461035,-99) , 
4, 0.999524, 0, 0, 0.496504,-99) , 
7, -951.286, 0, 0, 0.50138,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0336176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49805,-99) , 
9, 1.72126, 0, 0, 0.500346,-99) , 
5, 0.712783, 0, 0, 0.502659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485449,-99) , 
5, 0.235663, 0, 0, 0.505119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28156,-99) , 
7, -2.05896, 0, 0, 0.469253,-99) , 
7, -0.483335, 0, 0, 0.493269,-99) , 
7, -951.286, 1, 0, 0.498102,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.031651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497786,-99) , 
9, -2.64774, 0, 0, 0.527568,-99) , 
NN(
0, 
0, 
-1, 0.661771, 0, 1, 0.504646,-99) , 
5, 0.521156, 0, 0, 0.507911,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57154, 0, 1, 0.510316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347892,-99) , 
8, 0.430578, 1, 0, 0.446135,-99) , 
7, -1.06729, 0, 0, 0.498425,-99) , 
7, -951.286, 1, 0, 0.503323,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0292846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10227, 0, 1, 0.507206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448151,-99) , 
8, -1.6938, 0, 0, 0.475386,-99) , 
8, -1.28564, 0, 0, 0.503899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497129,-99) , 
8, 1.28573, 0, 0, 0.507129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316342,-99) , 
7, -1.93242, 0, 0, 0.468892,-99) , 
7, -0.42138, 0, 0, 0.493691,-99) , 
7, -6.95896, 1, 0, 0.498959,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0290577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38475, 1, 1, 0.502923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476064,-99) , 
8, -1.57134, 0, 0, 0.501105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493155,-99) , 
8, 0.429303, 0, 0, 0.507672,-99) , 
NN(
0, 
0, 
-1, -1.99875, 0, -1, 0.443909,-99) , 
7, -0.845546, 0, 0, 0.492915,-99) , 
7, -951.198, 1, 0, 0.497145,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.019784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493411,-99) , 
2, 0.2151, 0, 0, 0.49459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446172,-99) , 
4, 0.999705, 0, 0, 0.493227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444362,-99) , 
10, -0.454036, 1, 0, 0.474767,-99) , 
4, 0.999524, 0, 0, 0.491887,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0254511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491164,-99) , 
9, -0.139198, 1, 0, 0.509493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493855,-99) , 
9, -4.07936, 1, 0, 0.495991,-99) , 
10, 0.626365, 0, 0, 0.499157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475554,-99) , 
5, 0.23352, 1, 0, 0.500149,-99) , 
NN(
0, 
0, 
-1, -1.31247, 1, -1, 0.476349,-99) , 
0, 0.497138, 1, 0, 0.486357,-99) , 
8, 1.00003, 1, 0, 0.496342,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0153397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47561,-99) , 
8, 1.15439, 1, 0, 0.499581,-99) , 
8, 1.84682, 0, 0, 0.501142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470007,-99) , 
10, 3.60214, 1, 0, 0.494268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446073,-99) , 
8, 2.14293, 1, 0, 0.487895,-99) , 
10, 1.38529, 1, 0, 0.498587,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0138247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495065,-99) , 
8, -1.53056, 1, 0, 0.49646,-99) , 
8, 2.14286, 0, 0, 0.497475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471463,-99) , 
4, 0.998572, 0, 0, 0.496754,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0106891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526296,-99) , 
NN(
0, 
0, 
-1, 0.826308, 1, -1, 0.498105,-99) , 
8, -1.57095, 1, 0, 0.499505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485455,-99) , 
8, 0.141252, 0, 0, 0.49526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459982,-99) , 
5, -0.963739, 0, 0, 0.489111,-99) , 
5, -0.809658, 0, 0, 0.497922,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0138589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497655,-99) , 
8, -0.42851, 1, 0, 0.500485,-99) , 
2, 0.214374, 0, 0, 0.501764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483563,-99) , 
10, -0.794052, 1, 0, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453027,-99) , 
5, 0.848389, 1, 0, 0.485862,-99) , 
5, 0.712478, 1, 0, 0.500298,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0207072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.149131, 0, 1, 0.510542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495411,-99) , 
5, -0.522849, 1, 0, 0.49879,-99) , 
9, -1.97709, 0, 0, 0.503173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488444,-99) , 
8, 2.14286, 0, 0, 0.494307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462382,-99) , 
5, 0.617631, 1, 0, 0.489219,-99) , 
8, 1.00001, 1, 0, 0.500117,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0150077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490035,-99) , 
4, 0.999955, 0, 0, 0.501004,-99) , 
0, 0.505709, 0, 0, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477268,-99) , 
4, 0.999048, 0, 0, 0.501231,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0130724);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85644, 0, 1, 0.503876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479667,-99) , 
10, 2.59666, 1, 0, 0.490791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441948,-99) , 
8, 1.85716, 1, 0, 0.482096,-99) , 
10, 1.49899, 1, 0, 0.500034,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0140586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471751,-99) , 
10, -0.993966, 1, 0, 0.491072,-99) , 
9, -2.08239, 0, 0, 0.513775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484896,-99) , 
5, 0.384168, 1, 0, 0.498189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473504,-99) , 
4, 0.999528, 0, 0, 0.49702,-99) , 
5, 0.709859, 0, 0, 0.498667,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0204853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0425323, 0, 1, 0.505165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477271,-99) , 
8, 0.427681, 1, 0, 0.492893,-99) , 
9, -1.9958, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, -0.0707432, 0, -1, 0.488106,-99) , 
10, 1.47788, 1, 0, 0.498456,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0108347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497152,-99) , 
8, -1.85666, 1, 0, 0.498054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472719,-99) , 
5, -0.904849, 0, 0, 0.497136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479341,-99) , 
9, 1.46102, 1, 0, 0.496055,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0142457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
4, 0.999524, 1, 0, 0.496403,-99) , 
2, -0.214447, 1, 0, 0.497715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468574,-99) , 
3, 9.30816, 1, 0, 0.496971,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0247352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.765917, 1, 1, 0.52255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476135,-99) , 
9, -3.33023, 0, 0, 0.509494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489722,-99) , 
10, -1.51576, 0, 0, 0.509037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491314,-99) , 
10, 1.22964, 0, 0, 0.496063,-99) , 
9, -2.87201, 1, 0, 0.499037,-99) , 
5, 0.522473, 0, 0, 0.501015,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0141115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615466, 1, 1, 0.538296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484762,-99) , 
0, 0.495233, 0, 0, 0.520633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481854,-99) , 
9, 1.65311, 1, 0, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459216,-99) , 
4, 0.999705, 0, 0, 0.500653,-99) , 
4, 0.999524, 1, 0, 0.502209,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.00723197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484673,-99) , 
8, -1.16323, 0, 0, 0.499091,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481509,-99) , 
0, 0.491424, 0, 0, 0.497711,-99) , 
8, -1.85711, 1, 0, 0.4985,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0243019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494241,-99) , 
5, -0.145796, 1, 0, 0.500198,-99) , 
8, 1.55982, 0, 0, 0.50225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544739,-99) , 
NN(
0, 
0, 
-1, 1.21548, 0, -1, 0.484974,-99) , 
5, -0.14435, 0, 0, 0.492093,-99) , 
9, -1.26658, 1, 0, 0.499138,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0206897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477748,-99) , 
10, 0.17556, 1, 0, 0.534931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476867,-99) , 
8, -0.179582, 0, 0, 0.497756,-99) , 
9, -2.37788, 0, 0, 0.511309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493053,-99) , 
5, 0.0151183, 1, 0, 0.499618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464205,-99) , 
4, 0.999429, 0, 0, 0.498436,-99) , 
5, 0.522678, 0, 0, 0.500877,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0115888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.52116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496124,-99) , 
5, -0.138962, 0, 0, 0.499621,-99) , 
8, 1.85714, 0, 0, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477609,-99) , 
5, 0.80818, 1, 0, 0.499972,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00888556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
7, -951.286, 0, 0, 0.509764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477153,-99) , 
5, 0.832562, 1, 0, 0.499672,-99) , 
5, -0.714934, 1, 0, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483542,-99) , 
10, 3.24857, 1, 0, 0.500629,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0282674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.530446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38531,-99) , 
7, -0.714749, 0, 0, 0.495485,-99) , 
7, -951.286, 1, 0, 0.50903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497635,-99) , 
8, -1.57135, 1, 0, 0.499186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469337,-99) , 
4, 0.999619, 0, 0, 0.497745,-99) , 
5, 0.520415, 0, 0, 0.499894,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0167973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4863,-99) , 
10, -0.577494, 1, 0, 0.517138,-99) , 
NN(
0, 
0, 
-1, -0.99988, 1, 1, 0.503936,-99) , 
5, 0.617341, 0, 0, 0.505926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494225,-99) , 
7, -951.286, 0, 0, 0.500858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453207,-99) , 
0, 0.501492, 1, 0, 0.479951,-99) , 
5, 0.615372, 1, 0, 0.498181,-99) , 
0, 0.499043, 1, 0, 0.502674,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00613714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474714,-99) , 
8, -1.85705, 0, 0, 0.499975,-99) , 
0, 0.489519, 1, 0, 0.500799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474986,-99) , 
6, 0.0237791, 1, 0, 0.500149,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0243612);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495808,-99) , 
8, -0.142803, 1, 0, 0.500119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477447,-99) , 
8, -0.349366, 0, 0, 0.490144,-99) , 
10, -0.996228, 0, 0, 0.49777,-99) , 
4, 0.998571, 1, 0, 0.499171,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0211774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499049,-99) , 
8, -0.999603, 1, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.492392,-99) , 
7, -949.398, 0, 0, 0.497137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470697,-99) , 
9, -3.52011, 0, 0, 0.506644,-99) , 
NN(
0, 
0, 
-1, 0.333572, 0, -1, 0.476599,-99) , 
10, -1.12097, 1, 0, 0.487601,-99) , 
5, 0.522474, 1, 0, 0.495393,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0152813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
5, 0.331927, 1, 0, 0.502464,-99) , 
4, 0.999048, 1, 0, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0.143287, 0, -1, 0.475801,-99) , 
2, -0.214216, 0, 0, 0.502053,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0181192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212705, 1, 1, 0.509936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495223,-99) , 
9, -2.12956, 0, 0, 0.500205,-99) , 
8, 0.428614, 0, 0, 0.504021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428699,-99) , 
10, -1.2164, 1, 0, 0.466921,-99) , 
9, -2.45609, 0, 0, 0.484774,-99) , 
5, 0.713012, 1, 0, 0.502274,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0234444);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485135,-99) , 
10, -0.0445211, 1, 0, 0.506355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4898,-99) , 
10, 0.918048, 0, 0, 0.497436,-99) , 
5, -0.0486232, 0, 0, 0.501497,-99) , 
0, 0.505709, 0, 0, 0.50244,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0206747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498197,-99) , 
8, 1.85661, 0, 0, 0.501349,-99) , 
9, -0.951698, 0, 0, 0.503632,-99) , 
NN(
NN(
0, 
0, 
-1, -1.05231, 0, 1, 0.528067,-99) , 
NN(
0, 
0, 
-1, 0.754684, 0, -1, 0.486758,-99) , 
9, -1.91636, 1, 0, 0.494232,-99) , 
5, -0.429173, 0, 0, 0.500047,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.014651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999968, 1, 1, 0.50578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467231,-99) , 
4, 0.99932, 0, 0, 0.504644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466247,-99) , 
4, 0.998571, 0, 0, 0.503586,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0150582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526352,-99) , 
NN(
NN(
0, 
0, 
-1, -1.63829, 0, 1, 0.506223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487451,-99) , 
10, -0.0421206, 0, 0, 0.498626,-99) , 
5, 0.0468415, 0, 0, 0.501752,-99) , 
0, 0.489519, 1, 0, 0.502586,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0138939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.11629, 0, 1, 0.504867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454348,-99) , 
8, 1.57164, 1, 0, 0.490525,-99) , 
10, 1.38529, 1, 0, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491912,-99) , 
0, 0.496186, 0, 0, 0.498753,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0164527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494651,-99) , 
0, 0.492376, 1, 0, 0.496177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
9, 1.41108, 1, 0, 0.494982,-99) , 
NN(
0, 
0, 
-1, -0.309808, 1, -1, 0.473335,-99) , 
4, 0.999524, 0, 0, 0.493437,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00765098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473987,-99) , 
5, 0.806372, 1, 0, 0.501232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471392,-99) , 
4, 0.998571, 0, 0, 0.500403,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0198496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30727, 0, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456964,-99) , 
10, 1.24343, 1, 0, 0.503305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534081,-99) , 
NN(
0, 
0, 
-1, 0.272474, 0, -1, 0.488114,-99) , 
9, -2.27379, 1, 0, 0.493664,-99) , 
5, -0.428993, 0, 0, 0.499637,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0111571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468186,-99) , 
4, 0.999819, 0, 0, 0.498219,-99) , 
4, 0.999524, 1, 0, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494717,-99) , 
7, -949.398, 0, 0, 0.498124,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0136167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49784,-99) , 
9, -1.75174, 0, 0, 0.504423,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.495574,-99) , 
5, -0.048621, 0, 0, 0.499462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464891,-99) , 
4, 0.998571, 0, 0, 0.49851,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00958947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, -0.810948, 0, -1, 0.493162,-99) , 
2, 0.0714736, 1, 0, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471429,-99) , 
4, 0.998571, 0, 0, 0.500885,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0139167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475072,-99) , 
8, -1.57134, 0, 0, 0.504307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49043,-99) , 
7, -6.95896, 1, 0, 0.496377,-99) , 
0, 0.498997, 0, 0, 0.499894,-99) , 
0, 0.489519, 1, 0, 0.500701,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0140194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376288, 0, 1, 0.519873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475578,-99) , 
10, 3.15474, 1, 0, 0.502424,-99) , 
8, 1.57145, 0, 0, 0.504261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481217,-99) , 
5, 0.806372, 1, 0, 0.503183,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0168539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497584,-99) , 
9, -0.918822, 0, 0, 0.500002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467219,-99) , 
9, -0.323622, 1, 0, 0.484434,-99) , 
10, 1.40602, 1, 0, 0.498486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516966,-99) , 
NN(
0, 
0, 
-1, -0.945635, 0, -1, 0.480405,-99) , 
8, 0.710595, 0, 0, 0.487901,-99) , 
5, -0.809724, 0, 0, 0.496875,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0155986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44643,-99) , 
5, -0.809899, 0, 0, 0.498528,-99) , 
10, 1.09324, 0, 0, 0.500874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485123,-99) , 
7, -951.286, 1, 0, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438359,-99) , 
8, 2.14346, 1, 0, 0.49308,-99) , 
10, 1.36267, 1, 0, 0.499336,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0245691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486168,-99) , 
5, 0.635789, 1, 0, 0.518141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494786,-99) , 
9, -1.14991, 0, 0, 0.497362,-99) , 
4, 0.999524, 1, 0, 0.499516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495078,-99) , 
8, -0.144057, 1, 0, 0.508946,-99) , 
NN(
0, 
0, 
-1, 0.00763287, 0, -1, 0.480631,-99) , 
7, -949.398, 0, 0, 0.490736,-99) , 
5, -0.524227, 0, 0, 0.496595,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0127739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471753,-99) , 
5, 0.806373, 1, 0, 0.50285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471454,-99) , 
4, 0.99932, 0, 0, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457245,-99) , 
4, 0.998571, 0, 0, 0.500728,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0216627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496171,-99) , 
5, -0.619895, 1, 0, 0.498239,-99) , 
8, 1.51407, 0, 0, 0.500907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524522,-99) , 
NN(
0, 
0, 
-1, 1.21548, 0, -1, 0.482432,-99) , 
5, -0.239602, 0, 0, 0.487899,-99) , 
9, -1.26658, 1, 0, 0.496913,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0143905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56775, 1, 1, 0.521006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485535,-99) , 
5, -0.820151, 1, 0, 0.511452,-99) , 
NN(
NN(
0, 
0, 
-1, 0.367895, 0, 1, 0.502932,-99) , 
NN(
0, 
0, 
-1, 1.57146, 1, -1, 0.486704,-99) , 
9, -1.47771, 1, 0, 0.49847,-99) , 
10, 2.28745, 0, 0, 0.499833,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0177057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473148,-99) , 
9, -3.84374, 0, 0, 0.492978,-99) , 
8, -0.74605, 0, 0, 0.507993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524651,-99) , 
NN(
0, 
0, 
-1, 0.237177, 1, -1, 0.49572,-99) , 
8, -1.28564, 1, 0, 0.4971,-99) , 
10, -1.31675, 1, 0, 0.498914,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.015916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492234,-99) , 
8, -1.97955, 0, 0, 0.51891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484609,-99) , 
8, -1.13601, 0, 0, 0.502134,-99) , 
8, -1.57137, 1, 0, 0.503212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461058,-99) , 
8, -0.306206, 0, 0, 0.49374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45444,-99) , 
10, -0.134207, 1, 0, 0.482887,-99) , 
5, 0.7113, 1, 0, 0.501333,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0149409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.52222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496563,-99) , 
10, 1.35989, 0, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472082,-99) , 
10, 3.12729, 1, 0, 0.497849,-99) , 
8, 1.85714, 0, 0, 0.499545,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0224386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432347,-99) , 
8, -0.550576, 0, 0, 0.503559,-99) , 
10, -1.87182, 1, 0, 0.509735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474761,-99) , 
8, -1.85713, 0, 0, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465437,-99) , 
4, 0.999619, 0, 0, 0.501763,-99) , 
5, 0.330465, 0, 0, 0.504022,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0346936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495377,-99) , 
9, -2.31272, 0, 0, 0.507436,-99) , 
NN(
0, 
0, 
-1, 1.18165, 0, -1, 0.483112,-99) , 
10, -0.0552068, 1, 0, 0.500586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473018,-99) , 
10, -0.686809, 0, 0, 0.509992,-99) , 
NN(
0, 
0, 
-1, 0.611025, 0, -1, 0.487161,-99) , 
9, -2.11528, 1, 0, 0.492133,-99) , 
5, -0.239422, 0, 0, 0.496644,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0144715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.208871, 0, 1, 0.506152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484808,-99) , 
2, 0.0716951, 1, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466814,-99) , 
5, 0.613031, 1, 0, 0.494333,-99) , 
3, 4.54028, 1, 0, 0.503815,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00688886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488673,-99) , 
9, -3.20693, 0, 0, 0.511774,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.500896,-99) , 
8, -1.28568, 1, 0, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485662,-99) , 
4, 0.998571, 0, 0, 0.501516,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0160817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45676,-99) , 
10, -1.84274, 1, 0, 0.491287,-99) , 
8, -0.841529, 0, 0, 0.505903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528235,-99) , 
NN(
0, 
0, 
-1, -0.0612116, 0, -1, 0.49575,-99) , 
8, -1.28569, 1, 0, 0.497297,-99) , 
10, -1.43905, 1, 0, 0.498515,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0106362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494078,-99) , 
10, -0.908, 0, 0, 0.501023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476437,-99) , 
8, 2.30611, 1, 0, 0.500326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474065,-99) , 
8, -1.85711, 0, 0, 0.49944,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0120498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482939,-99) , 
9, -1.99151, 0, 0, 0.501029,-99) , 
10, -1.26729, 1, 0, 0.512065,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468319,-99) , 
4, 0.999378, 0, 0, 0.500466,-99) , 
5, 0.617845, 0, 0, 0.502103,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0145347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495097, 0, 1, 0.530786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498824,-99) , 
8, -0.999935, 1, 0, 0.501813,-99) , 
4, 0.999524, 1, 0, 0.50394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473797,-99) , 
8, -1.00052, 0, 0, 0.497768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456667,-99) , 
5, 0.421623, 1, 0, 0.490018,-99) , 
0, 0.5019, 1, 0, 0.501128,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.010419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477347,-99) , 
8, 2.14286, 1, 0, 0.501471,-99) , 
0, 0.493102, 1, 0, 0.502484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506422,-99) , 
NN(
0, 
0, 
-1, 0.490562, 1, -1, 0.48375,-99) , 
2, 0.0717789, 0, 0, 0.489436,-99) , 
0, 0.492376, 0, 0, 0.501029,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0161189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499997,-99) , 
9, -0.832272, 0, 0, 0.504082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49386,-99) , 
10, -2.19627, 1, 0, 0.49596,-99) , 
8, 0.265347, 0, 0, 0.499153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474686,-99) , 
0, 0.498091, 0, 0, 0.496026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468238,-99) , 
5, 0.0467103, 1, 0, 0.482955,-99) , 
8, 1.57145, 1, 0, 0.497503,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0267726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.818557, 0, 1, 0.504388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478605,-99) , 
8, -1.28379, 0, 0, 0.502343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465903,-99) , 
4, 0.999995, 0, 0, 0.495926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451821,-99) , 
4, 0.999905, 0, 0, 0.492485,-99) , 
5, -0.524834, 0, 0, 0.499053,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0108092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52833,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.510543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497556,-99) , 
5, 0.80818, 0, 0, 0.498506,-99) , 
2, 0.0717789, 0, 0, 0.500727,-99) , 
8, -1.85705, 1, 0, 0.501749,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00709316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50045, 0, 1, 0.50726,-99) , 
NN(
0, 
0, 
-1, 3.91917, 1, -1, 0.498075,-99) , 
3, 4.55908, 0, 0, 0.499796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484563,-99) , 
2, 0.214113, 1, 0, 0.499039,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0155635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478678,-99) , 
5, 0.324801, 0, 0, 0.514097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490193,-99) , 
10, -0.53678, 1, 0, 0.519012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490081,-99) , 
5, 0.236791, 1, 0, 0.498088,-99) , 
4, 0.999524, 1, 0, 0.499611,-99) , 
10, -1.79947, 1, 0, 0.500803,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0222543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465164,-99) , 
10, -1.96789, 1, 0, 0.493492,-99) , 
8, -0.891357, 0, 0, 0.510171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494644,-99) , 
8, -1.28564, 1, 0, 0.496241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460808,-99) , 
4, 0.999048, 0, 0, 0.494925,-99) , 
10, -1.30085, 1, 0, 0.497537,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0253374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.01147, 0, 1, 0.50721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470075,-99) , 
7, -0.484037, 0, 0, 0.497886,-99) , 
7, -951.286, 1, 0, 0.502749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467982,-99) , 
4, 0.998572, 0, 0, 0.50181,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0171003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460359,-99) , 
8, -1.97951, 0, 0, 0.504781,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.490456,-99) , 
8, 1.28574, 1, 0, 0.502627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472214,-99) , 
5, 0.807937, 1, 0, 0.501254,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0170185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519551,-99) , 
NN(
0, 
0, 
-1, -1.29097, 1, -1, 0.493423,-99) , 
10, -1.82093, 1, 0, 0.4955,-99) , 
4, 0.998571, 1, 0, 0.496771,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0342313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490567,-99) , 
5, -0.238946, 1, 0, 0.497023,-99) , 
8, 0.511039, 0, 0, 0.503205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484419,-99) , 
10, -0.275803, 1, 0, 0.509422,-99) , 
NN(
0, 
0, 
-1, 0.377675, 0, -1, 0.487827,-99) , 
5, 0.141855, 0, 0, 0.492874,-99) , 
9, -2.48251, 1, 0, 0.496859,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0192381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.53524, 1, 1, 0.506721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433119,-99) , 
5, -0.716424, 0, 0, 0.478389,-99) , 
7, -951.286, 0, 0, 0.492736,-99) , 
8, -0.999929, 0, 0, 0.504642,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00880693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.432948, 0, 1, 0.517564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498738,-99) , 
5, -0.809724, 1, 0, 0.50044,-99) , 
0, 0.491424, 1, 0, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472202,-99) , 
4, 0.998571, 0, 0, 0.501007,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0112518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485882,-99) , 
3, 6.66938, 1, 0, 0.501137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465342,-99) , 
7, -951.286, 0, 0, 0.48244,-99) , 
0, 0.504757, 1, 0, 0.499779,-99) , 
5, 0.807937, 0, 0, 0.501134,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0113755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.98478, 0, 1, 0.510776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490063,-99) , 
0, 0.499995, 1, 0, 0.496761,-99) , 
5, 0.522202, 0, 0, 0.499174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465401,-99) , 
4, 0.998571, 0, 0, 0.498274,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.022043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.23315, 1, 1, 0.513188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477127,-99) , 
9, -3.52662, 0, 0, 0.505188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490898,-99) , 
10, -1.36964, 0, 0, 0.508399,-99) , 
NN(
0, 
0, 
-1, 0.259881, 0, -1, 0.492726,-99) , 
9, -2.94185, 1, 0, 0.495545,-99) , 
5, 0.332343, 0, 0, 0.498255,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0179656);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493697,-99) , 
9, -1.43129, 1, 0, 0.506876,-99) , 
NN(
0, 
0, 
-1, -2.8746, 1, -1, 0.488065,-99) , 
9, -2.27738, 0, 0, 0.495057,-99) , 
8, 0.142836, 0, 0, 0.499981,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0086506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498576,-99) , 
2, 0.216429, 0, 0, 0.499812,-99) , 
3, 9.02197, 0, 0, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477035,-99) , 
4, 0.999048, 0, 0, 0.499855,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.013335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85705, 1, 1, 0.504906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487707,-99) , 
10, 1.06634, 0, 0, 0.493691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473976,-99) , 
5, 0.33217, 1, 0, 0.489116,-99) , 
0, 0.5019, 1, 0, 0.501698,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00755381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489247, 1, 1, 0.522654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499162,-99) , 
8, 1.57143, 0, 0, 0.500479,-99) , 
0, 0.490471, 1, 0, 0.501688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472009,-99) , 
4, 0.998571, 0, 0, 0.500888,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00796352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518107,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.497224,-99) , 
0, 0.505709, 0, 0, 0.498135,-99) , 
4, 0.999048, 1, 0, 0.498913,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00761112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48814,-99) , 
8, -1.04075, 0, 0, 0.498746,-99) , 
8, 2.14286, 0, 0, 0.499654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465961,-99) , 
4, 0.998572, 0, 0, 0.498748,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0263962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50639, 1, 1, 0.523418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459865,-99) , 
7, -1.06729, 0, 0, 0.508404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468657,-99) , 
4, 0.999524, 0, 0, 0.498415,-99) , 
7, -951.286, 0, 0, 0.503291,-99) , 
0, 0.504757, 0, 0, 0.504822,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0115569);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496458,-99) , 
4, 0.998571, 1, 0, 0.497272,-99) , 
8, -1.39443, 1, 0, 0.498181,-99) , 
8, -1.85705, 1, 0, 0.499492,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0179469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237009, 0, 1, 0.509836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472514,-99) , 
8, -0.724835, 0, 0, 0.490307,-99) , 
9, -2.98526, 0, 0, 0.505394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494888,-99) , 
0, 0.492836, 1, 0, 0.496932,-99) , 
NN(
0, 
0, 
-1, 0.142904, 0, -1, 0.480888,-99) , 
0, 0.491152, 0, 0, 0.49518,-99) , 
0, 0.499995, 0, 0, 0.498726,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0102148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502787,-99) , 
NN(
0, 
0, 
-1, 0.0544148, 0, -1, 0.494078,-99) , 
5, -0.239792, 0, 0, 0.498658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46451,-99) , 
4, 0.998572, 0, 0, 0.497746,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0121415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499563,-99) , 
8, -0.999935, 1, 0, 0.501378,-99) , 
4, 0.999048, 1, 0, 0.50223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477486,-99) , 
10, -0.0292252, 0, 0, 0.492228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468358,-99) , 
8, 0.713801, 1, 0, 0.485197,-99) , 
0, 0.502852, 1, 0, 0.499659,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.016727);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529079,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.505371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478098,-99) , 
10, -1.04521, 0, 0, 0.492729,-99) , 
8, -0.714216, 0, 0, 0.503026,-99) , 
9, -4.09685, 1, 0, 0.504204,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.01313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493117,-99) , 
4, 0.99907, 0, 0, 0.514139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49659,-99) , 
8, 2.14285, 0, 0, 0.497766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461588,-99) , 
4, 0.999705, 0, 0, 0.496744,-99) , 
4, 0.999524, 1, 0, 0.498065,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0134407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487064,-99) , 
10, -0.834286, 1, 0, 0.493266,-99) , 
3, 4.55908, 1, 0, 0.501414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427252,-99) , 
10, 1.54124, 1, 0, 0.466831,-99) , 
8, 1.85716, 1, 0, 0.499242,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.00892213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498905,-99) , 
4, 0.999524, 1, 0, 0.500558,-99) , 
2, -0.214434, 1, 0, 0.501799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488295,-99) , 
5, -0.673757, 0, 0, 0.496881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471121,-99) , 
5, 0.712782, 1, 0, 0.494774,-99) , 
0, 0.499043, 1, 0, 0.498851,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0159213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498359,-99) , 
3, 1.26008, 1, 0, 0.502294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487547,-99) , 
10, -1.84075, 1, 0, 0.493181,-99) , 
5, 0.331927, 1, 0, 0.499797,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.478012,-99) , 
2, -0.214434, 0, 0, 0.498693,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0123659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486309,-99) , 
0, 0.495233, 0, 0, 0.517005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497328,-99) , 
8, -1.85705, 1, 0, 0.498442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462389,-99) , 
4, 0.999705, 0, 0, 0.497435,-99) , 
4, 0.999524, 1, 0, 0.498932,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0132758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498638,-99) , 
0, 0.48952, 1, 0, 0.4995,-99) , 
10, -1.53524, 1, 0, 0.501814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423833,-99) , 
5, -0.810948, 0, 0, 0.475355,-99) , 
7, -951.286, 0, 0, 0.48968,-99) , 
8, -0.99997, 0, 0, 0.500013,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0218623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48444,-99) , 
0, 0.489519, 0, 0, 0.50618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465822,-99) , 
8, 2.2381, 1, 0, 0.504745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478347,-99) , 
9, -2.98721, 0, 0, 0.496994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448527,-99) , 
8, -1.9523, 0, 0, 0.488057,-99) , 
8, -0.99993, 0, 0, 0.502257,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0176614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524131,-99) , 
NN(
NN(
0, 
0, 
-1, -1.91983, 1, 1, 0.506227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493262,-99) , 
8, 0.600489, 0, 0, 0.497794,-99) , 
10, -0.000107311, 0, 0, 0.501983,-99) , 
5, 0.807615, 0, 0, 0.503079,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0131705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496585,-99) , 
0, 0.494281, 1, 0, 0.4993,-99) , 
3, 9.02828, 0, 0, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477364,-99) , 
4, 0.999048, 0, 0, 0.499626,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0220766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493624,-99) , 
5, 0.231358, 0, 0, 0.539135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48267,-99) , 
10, -1.96788, 1, 0, 0.502197,-99) , 
9, -3.54804, 0, 0, 0.516318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497488,-99) , 
9, -2.90686, 1, 0, 0.50138,-99) , 
NN(
0, 
0, 
-1, -2.95608, 0, -1, 0.4887,-99) , 
5, 0.237176, 1, 0, 0.497914,-99) , 
10, -1.30085, 1, 0, 0.501056,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0201782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494766,-99) , 
10, -1.35644, 1, 0, 0.502605,-99) , 
8, 0.488194, 0, 0, 0.506611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496859,-99) , 
9, -2.11705, 1, 0, 0.500583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458927,-99) , 
5, 0.712478, 1, 0, 0.498483,-99) , 
10, -0.180984, 1, 0, 0.502328,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0298075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.299205, 0, 1, 0.518325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467205,-99) , 
10, 0.860679, 0, 0, 0.499337,-99) , 
9, -1.40763, 1, 0, 0.508183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494699,-99) , 
9, -1.77964, 0, 0, 0.503809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458644,-99) , 
10, 0.774342, 1, 0, 0.500096,-99) , 
5, -0.0492772, 1, 0, 0.504555,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0202019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.507751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4528,-99) , 
4, 0.999705, 0, 0, 0.506253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461476,-99) , 
9, -2.82947, 1, 0, 0.481098,-99) , 
4, 0.999524, 0, 0, 0.504466,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0210326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494389,-99) , 
0, 0.500947, 1, 0, 0.502517,-99) , 
10, -1.03191, 1, 0, 0.505976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495804,-99) , 
10, -1.64294, 1, 0, 0.502739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470841,-99) , 
9, -3.7706, 0, 0, 0.494919,-99) , 
8, -0.428519, 0, 0, 0.502624,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0123672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497743,-99) , 
4, 0.998617, 0, 0, 0.518351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497284,-99) , 
3, 4.66234, 0, 0, 0.499226,-99) , 
3, 8.80206, 0, 0, 0.500684,-99) , 
4, 0.999524, 1, 0, 0.502023,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0105832);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489508,-99) , 
8, -1.22738, 0, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.485432,-99) , 
8, 1.65306, 1, 0, 0.500506,-99) , 
8, 2.14285, 0, 0, 0.501537,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0225667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.525439, 0, 1, 0.517345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496043,-99) , 
10, -0.280738, 0, 0, 0.4994,-99) , 
9, -1.93669, 0, 0, 0.505598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528062,-99) , 
NN(
0, 
0, 
-1, 0.615372, 1, -1, 0.488918,-99) , 
10, 0.0248925, 1, 0, 0.494711,-99) , 
8, 0.714318, 1, 0, 0.502318,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0108369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.503785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459586,-99) , 
10, -0.56748, 1, 0, 0.486303,-99) , 
4, 0.999524, 0, 0, 0.502534,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00695284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485706,-99) , 
0, 0.505709, 1, 0, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467664,-99) , 
3, 9.27754, 1, 0, 0.50066,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0130698);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
9, -1.96073, 1, 0, 0.497749,-99) , 
5, 0.80818, 0, 0, 0.498996,-99) , 
9, -4.09685, 1, 0, 0.50047,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.014431);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494838,-99) , 
2, -0.0711275, 1, 0, 0.497074,-99) , 
8, 2.14286, 0, 0, 0.498163,-99) , 
4, 0.999048, 1, 0, 0.499405,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.019472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499007,-99) , 
7, -951.286, 1, 0, 0.506714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480108,-99) , 
10, -0.0421206, 0, 0, 0.497204,-99) , 
5, -0.0486232, 0, 0, 0.501396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461301,-99) , 
4, 0.998572, 0, 0, 0.500339,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0115898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.34932, 0, 1, 0.516033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49806,-99) , 
9, -2.54548, 1, 0, 0.501114,-99) , 
5, 0.613849, 0, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47548,-99) , 
4, 0.998572, 0, 0, 0.502253,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0215812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48289,-99) , 
9, -1.5298, 1, 0, 0.532071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493218,-99) , 
0, 0.499044, 0, 0, 0.502148,-99) , 
5, 0.332214, 0, 0, 0.512273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470422,-99) , 
4, 0.999524, 0, 0, 0.504576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490495,-99) , 
10, -0.231372, 1, 0, 0.496728,-99) , 
8, -0.142803, 1, 0, 0.50045,-99) , 
8, 1.28574, 0, 0, 0.502334,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0230181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47543,-99) , 
8, 1.85704, 1, 0, 0.502537,-99) , 
9, -1.29924, 1, 0, 0.509293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489764,-99) , 
9, -2.76815, 1, 0, 0.495887,-99) , 
9, -1.22664, 0, 0, 0.498378,-99) , 
10, 0.641828, 0, 0, 0.501962,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0184776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499848,-99) , 
10, 0.672088, 0, 0, 0.504475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490873,-99) , 
5, -0.492465, 0, 0, 0.494693,-99) , 
9, -1.10966, 1, 0, 0.500875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525837,-99) , 
NN(
0, 
0, 
-1, -0.363198, 0, -1, 0.486541,-99) , 
10, -1.87182, 1, 0, 0.491996,-99) , 
5, 0.332343, 1, 0, 0.498447,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0382197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57154, 0, 1, 0.52082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353679,-99) , 
8, 0.724453, 1, 0, 0.451494,-99) , 
7, -1.06729, 0, 0, 0.5084,-99) , 
NN(
NN(
0, 
0, 
-1, -1.50976, 0, 1, 0.5087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486722,-99) , 
9, 0.779658, 0, 0, 0.492034,-99) , 
5, -0.0497775, 0, 0, 0.498177,-99) , 
7, -951.286, 0, 0, 0.503152,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0271399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.996351, 1, 1, 0.505449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402604,-99) , 
7, -1.46877, 0, 0, 0.497591,-99) , 
7, -951.286, 1, 0, 0.501422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504708,-99) , 
NN(
0, 
0, 
-1, -0.936564, 0, -1, 0.478453,-99) , 
10, 3.37052, 0, 0, 0.486204,-99) , 
5, -0.80969, 0, 0, 0.499089,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0384964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473163,-99) , 
8, -0.999933, 0, 0, 0.507383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486068,-99) , 
9, -3.43007, 1, 0, 0.494324,-99) , 
10, -0.171524, 0, 0, 0.502186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487673,-99) , 
8, 0.429247, 0, 0, 0.502201,-99) , 
NN(
0, 
0, 
-1, 0.330197, 1, -1, 0.416413,-99) , 
7, -1.38688, 0, 0, 0.491704,-99) , 
7, -951.286, 1, 0, 0.49713,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00925149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478321,-99) , 
5, -0.143689, 0, 0, 0.512092,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.497817,-99) , 
8, 1.85714, 0, 0, 0.498776,-99) , 
4, 0.998572, 1, 0, 0.499536,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0219235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483994,-99) , 
9, -0.243926, 1, 0, 0.50366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485915,-99) , 
9, -2.20763, 1, 0, 0.494142,-99) , 
8, 0.714325, 1, 0, 0.50093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475598,-99) , 
10, 3.12729, 1, 0, 0.499522,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0130441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493969,-99) , 
10, 1.53495, 1, 0, 0.515813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48831,-99) , 
5, 0.427517, 0, 0, 0.514524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486901,-99) , 
5, 0.422822, 1, 0, 0.498768,-99) , 
4, 0.999524, 1, 0, 0.499938,-99) , 
8, 1.85713, 0, 0, 0.501004,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0142742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0743757, 0, 1, 0.503547,-99) , 
NN(
0, 
0, 
-1, -0.0713974, 0, -1, 0.487061,-99) , 
3, 3.1481, 1, 0, 0.498351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469072,-99) , 
3, 9.28394, 1, 0, 0.497597,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0159793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496706,-99) , 
5, -0.714889, 1, 0, 0.498639,-99) , 
8, 2.14287, 0, 0, 0.499902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489585,-99) , 
8, 1.00001, 0, 0, 0.497764,-99) , 
NN(
0, 
0, 
-1, 0.502172, 0, -1, 0.471824,-99) , 
0, 0.499995, 1, 0, 0.48854,-99) , 
9, -0.46507, 1, 0, 0.497762,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.016609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495159,-99) , 
7, -951.286, 1, 0, 0.501461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446922,-99) , 
10, 0.838615, 0, 0, 0.484956,-99) , 
5, -0.80969, 0, 0, 0.500069,-99) , 
NN(
0, 
0, 
-1, -0.908619, 1, -1, 0.485667,-99) , 
10, 2.32673, 1, 0, 0.498652,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0156841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711379, 1, 1, 0.508645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485563,-99) , 
9, -3.63238, 0, 0, 0.505756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485154,-99) , 
2, 0.0714191, 1, 0, 0.498775,-99) , 
NN(
0, 
0, 
-1, 0.490562, 1, -1, 0.472251,-99) , 
0, 0.492376, 0, 0, 0.495856,-99) , 
7, -949.398, 0, 0, 0.50066,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0107235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498635, 1, 1, 0.503244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488823,-99) , 
5, -0.23865, 1, 0, 0.494307,-99) , 
0, 0.497138, 0, 0, 0.499611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468882,-99) , 
8, 2.14286, 1, 0, 0.498481,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0153894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497541,-99) , 
7, 1.25821, 0, 0, 0.50029,-99) , 
4, 0.999048, 1, 0, 0.502013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518832,-99) , 
NN(
0, 
0, 
-1, -1.28567, 0, -1, 0.491224,-99) , 
10, 3.27414, 0, 0, 0.492875,-99) , 
7, -951.286, 0, 0, 0.49734,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0173196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.518443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487265,-99) , 
9, -3.59987, 0, 0, 0.506946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496963,-99) , 
9, -2.38325, 1, 0, 0.499783,-99) , 
NN(
0, 
0, 
-1, -0.715777, 0, -1, 0.477696,-99) , 
8, -0.360523, 0, 0, 0.496831,-99) , 
8, -0.714261, 1, 0, 0.499067,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0179959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14799, 1, 1, 0.517257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477152,-99) , 
9, -3.5349, 0, 0, 0.508427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491938,-99) , 
10, -0.341105, 0, 0, 0.498926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459589,-99) , 
4, 0.999619, 0, 0, 0.497232,-99) , 
5, 0.42751, 0, 0, 0.499883,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0100938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497883,-99) , 
10, 1.32459, 0, 0, 0.499697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485593,-99) , 
9, 1.74225, 1, 0, 0.498985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458,-99) , 
10, 1.54124, 1, 0, 0.481538,-99) , 
8, 1.85716, 1, 0, 0.497865,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0244197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490728,-99) , 
8, 0.474248, 1, 0, 0.500221,-99) , 
8, 1.55979, 0, 0, 0.502196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485043,-99) , 
5, -0.529162, 0, 0, 0.49518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460696,-99) , 
8, 1.85715, 1, 0, 0.489861,-99) , 
9, -1.20998, 1, 0, 0.498544,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0128832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482375,-99) , 
0, 0.499043, 1, 0, 0.518783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469635,-99) , 
4, 0.999728, 0, 0, 0.501597,-99) , 
4, 0.999524, 1, 0, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474174,-99) , 
8, -1.8571, 0, 0, 0.501952,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0133678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49633,-99) , 
2, 0.0730876, 0, 0, 0.498509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467255,-99) , 
4, 0.99932, 0, 0, 0.497591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446147,-99) , 
4, 0.998571, 0, 0, 0.496268,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00900382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496651,-99) , 
8, 2.29248, 0, 0, 0.510819,-99) , 
NN(
NN(
0, 
0, 
-1, 0.426657, 1, -1, 0.497369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462286,-99) , 
10, 2.7477, 0, 0, 0.482362,-99) , 
5, -0.904832, 0, 0, 0.496221,-99) , 
8, 1.85712, 0, 0, 0.497195,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00756776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498847,-99) , 
6, 0.0101924, 0, 0, 0.500347,-99) , 
4, 0.999048, 1, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475035,-99) , 
6, 0.0237843, 1, 0, 0.50057,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0117856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.950147, 0, 1, 0.514429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497727,-99) , 
7, -951.286, 0, 0, 0.501895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464185,-99) , 
10, 2.84154, 1, 0, 0.500675,-99) , 
5, -0.904828, 1, 0, 0.50174,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00722411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524776,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.497639,-99) , 
4, 0.998572, 1, 0, 0.498414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475351,-99) , 
3, 9.03751, 1, 0, 0.497763,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00803608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497345,-99) , 
8, -0.142767, 0, 0, 0.516429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486759,-99) , 
5, -0.904862, 0, 0, 0.499384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467569,-99) , 
9, -2.40762, 0, 0, 0.48426,-99) , 
4, 0.999841, 0, 0, 0.498244,-99) , 
4, 0.999524, 1, 0, 0.499628,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0100752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499966,-99) , 
5, -0.853832, 1, 0, 0.518365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474635,-99) , 
5, -0.963778, 0, 0, 0.510965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499708,-99) , 
9, -4.07686, 1, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480336,-99) , 
10, 2.02833, 1, 0, 0.500112,-99) , 
5, -0.809852, 1, 0, 0.501826,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.015301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.996891, 0, 1, 0.504914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486499,-99) , 
8, 0.428612, 0, 0, 0.499661,-99) , 
NN(
0, 
0, 
-1, 2.51041, 0, -1, 0.474809,-99) , 
0, 0.499995, 1, 0, 0.49084,-99) , 
9, -0.760066, 1, 0, 0.501753,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0151671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999773, 1, 1, 0.506171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471903,-99) , 
4, 0.99932, 0, 0, 0.505168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463986,-99) , 
4, 0.998572, 0, 0, 0.504081,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0109356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469222,-99) , 
4, 0.999637, 0, 0, 0.500324,-99) , 
4, 0.999048, 1, 0, 0.501849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484446,-99) , 
9, -1.62105, 1, 0, 0.493273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468488,-99) , 
5, 0.233113, 1, 0, 0.486502,-99) , 
0, 0.492376, 0, 0, 0.500162,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0320817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64433, 1, 1, 0.537586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480605,-99) , 
5, -0.809852, 1, 0, 0.493684,-99) , 
9, -1.426, 1, 0, 0.500609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484096,-99) , 
10, -1.37639, 1, 0, 0.489233,-99) , 
8, 1.01391, 0, 0, 0.49286,-99) , 
10, 0.419717, 0, 0, 0.495796,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0342285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494553,-99) , 
10, -0.741667, 0, 0, 0.512416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48186,-99) , 
10, 0.284099, 0, 0, 0.497168,-99) , 
9, -2.36032, 1, 0, 0.502191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474026,-99) , 
10, -0.00493339, 1, 0, 0.508534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468251,-99) , 
8, 0.330325, 0, 0, 0.480499,-99) , 
9, -2.3659, 0, 0, 0.490206,-99) , 
5, 0.332343, 1, 0, 0.498872,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0363803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493602,-99) , 
9, -2.804, 0, 0, 0.537709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489785,-99) , 
9, -2.55357, 0, 0, 0.495953,-99) , 
8, 0.0446172, 0, 0, 0.503725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47718,-99) , 
5, 0.139199, 1, 0, 0.515422,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48708,-99) , 
9, -2.21325, 1, 0, 0.491938,-99) , 
10, -0.523235, 1, 0, 0.496355,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0236601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332164, 0, 1, 0.5094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491527,-99) , 
5, -0.0498555, 1, 0, 0.501214,-99) , 
9, -2.4183, 0, 0, 0.505628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509507,-99) , 
NN(
0, 
0, 
-1, 3.28735, 1, -1, 0.480712,-99) , 
8, 0.999816, 0, 0, 0.489274,-99) , 
9, 0.125517, 1, 0, 0.503453,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0153111);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.99907, 0, 1, 0.525507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495754,-99) , 
3, 4.56534, 0, 0, 0.498369,-99) , 
8, -1.85704, 1, 0, 0.49968,-99) , 
4, 0.999524, 1, 0, 0.50164,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.014743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490557,-99) , 
8, -0.540732, 0, 0, 0.513901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48193,-99) , 
9, -2.97548, 0, 0, 0.499081,-99) , 
10, -1.15963, 1, 0, 0.50136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468652,-99) , 
10, -1.65124, 0, 0, 0.488322,-99) , 
8, -1.28568, 0, 0, 0.500095,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0407684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491483,-99) , 
5, -0.0486092, 0, 0, 0.51215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384571,-99) , 
8, 0.723047, 1, 0, 0.476606,-99) , 
7, -1.1054, 0, 0, 0.505814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493664,-99) , 
10, 0.103236, 0, 0, 0.500362,-99) , 
NN(
0, 
0, 
-1, 1.24062, 0, -1, 0.482156,-99) , 
9, -1.56048, 1, 0, 0.492179,-99) , 
7, -951.286, 0, 0, 0.498841,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.020455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508691,-99) , 
NN(
0, 
0, 
-1, -0.431599, 1, -1, 0.491248,-99) , 
0, 0.505256, 1, 0, 0.507374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489565,-99) , 
5, 0.32862, 1, 0, 0.509137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484685,-99) , 
9, -0.798458, 0, 0, 0.493049,-99) , 
9, -2.81215, 1, 0, 0.497509,-99) , 
0, 0.495233, 0, 0, 0.504817,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0220225);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495562,-99) , 
9, -2.25343, 0, 0, 0.503899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487652,-99) , 
4, 0.999955, 1, 0, 0.493313,-99) , 
8, 0.142887, 1, 0, 0.498659,-99) , 
4, 0.999048, 1, 0, 0.499666,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0132753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498216,-99) , 
9, -3.57882, 1, 0, 0.50028,-99) , 
8, -1.56938, 1, 0, 0.501512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490943,-99) , 
10, 3.61822, 1, 0, 0.50232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463438,-99) , 
10, 1.63674, 0, 0, 0.489456,-99) , 
5, -0.809664, 0, 0, 0.499679,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0195947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484123,-99) , 
10, -0.586182, 1, 0, 0.491863,-99) , 
3, 4.67556, 1, 0, 0.505007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491293,-99) , 
9, -0.951213, 1, 0, 0.503088,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.484418,-99) , 
8, -0.715014, 1, 0, 0.490157,-99) , 
5, -0.714532, 0, 0, 0.501686,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0205127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480325,-99) , 
7, -951.286, 1, 0, 0.498413,-99) , 
8, -0.896422, 0, 0, 0.517149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499313,-99) , 
9, -2.90406, 1, 0, 0.50221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479791,-99) , 
10, -0.920415, 1, 0, 0.48791,-99) , 
5, 0.522678, 1, 0, 0.500001,-99) , 
10, -1.30085, 1, 0, 0.502927,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0214581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496082,-99) , 
5, 0.425391, 1, 0, 0.506574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468035,-99) , 
8, -1.9795, 0, 0, 0.505383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539015,-99) , 
NN(
0, 
0, 
-1, 0.0455571, 1, -1, 0.483954,-99) , 
10, 0.505994, 1, 0, 0.493133,-99) , 
8, 1.28574, 1, 0, 0.503516,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0245651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.968276, 0, 1, 0.506712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41085,-99) , 
7, -1.50048, 0, 0, 0.497506,-99) , 
7, -951.198, 1, 0, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471521,-99) , 
8, -1.85705, 0, 0, 0.501207,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0169411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809679, 1, 1, 0.510676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48857,-99) , 
5, -0.524638, 0, 0, 0.497495,-99) , 
6, 0.00226465, 1, 0, 0.502556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474623,-99) , 
6, 0.0237791, 1, 0, 0.501856,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0130446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490154, 1, 1, 0.514238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513623,-99) , 
NN(
0, 
0, 
-1, -0.223273, 1, -1, 0.494654,-99) , 
9, 1.60413, 0, 0, 0.495755,-99) , 
0, 0.491424, 1, 0, 0.497283,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0173339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493304,-99) , 
6, 0.0139653, 1, 0, 0.514387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495602,-99) , 
5, 0.522678, 0, 0, 0.4999,-99) , 
6, 0.00905852, 0, 0, 0.501522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474678,-99) , 
6, 0.0237791, 1, 0, 0.500848,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.010332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499085,-99) , 
0, 0.503805, 0, 0, 0.500522,-99) , 
8, 2.14282, 0, 0, 0.501717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508426,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.463908,-99) , 
10, -0.915453, 1, 0, 0.483944,-99) , 
5, 0.71039, 1, 0, 0.500068,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0171138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.506397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479326,-99) , 
2, -0.139448, 1, 0, 0.496066,-99) , 
2, -0.0714203, 0, 0, 0.504542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486793,-99) , 
10, 2.80493, 0, 0, 0.496679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476909,-99) , 
10, 3.58199, 1, 0, 0.488432,-99) , 
10, 2.32673, 1, 0, 0.502965,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00580106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52448,-99) , 
NN(
0, 
0, 
-1, 0.806372, 1, -1, 0.498139,-99) , 
9, -4.08378, 1, 0, 0.499349,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0095622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99984, 1, 1, 0.502786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463781,-99) , 
8, -0.428406, 0, 0, 0.489987,-99) , 
4, 0.999864, 0, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45885,-99) , 
4, 0.998571, 0, 0, 0.499984,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0108006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.429174, 1, 1, 0.503497,-99) , 
NN(
0, 
0, 
-1, 0.506253, 1, -1, 0.484124,-99) , 
0, 0.504757, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47045,-99) , 
4, 0.999048, 0, 0, 0.500838,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.014309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494387,-99) , 
3, 0.535088, 1, 0, 0.495903,-99) , 
3, 9.06289, 0, 0, 0.496603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472732,-99) , 
4, 0.998571, 0, 0, 0.495955,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0119317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496825,-99) , 
2, 0.0508348, 0, 0, 0.499146,-99) , 
2, 0.214066, 0, 0, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478671,-99) , 
5, 0.80818, 1, 0, 0.499329,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0219453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523633,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213989, 1, 1, 0.507068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425741,-99) , 
7, -1.51256, 0, 0, 0.497949,-99) , 
7, -951.198, 1, 0, 0.502635,-99) , 
8, -1.85704, 1, 0, 0.503381,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.013236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496219,-99) , 
5, 0.805001, 0, 0, 0.497436,-99) , 
NN(
0, 
0, 
-1, 0.424894, 1, -1, 0.485628,-99) , 
0, 0.502852, 1, 0, 0.49566,-99) , 
8, 2.14285, 0, 0, 0.496623,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.014842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49561,-99) , 
9, -1.89823, 0, 0, 0.513946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496692,-99) , 
0, 0.490063, 1, 0, 0.497646,-99) , 
0, 0.504757, 0, 0, 0.498905,-99) , 
NN(
0, 
0, 
-1, -0.239535, 1, -1, 0.468508,-99) , 
5, 0.712478, 1, 0, 0.496158,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00661067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.807616, 0, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478984,-99) , 
3, 8.99018, 1, 0, 0.502082,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0150666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498004,-99) , 
9, 0.502463, 1, 0, 0.509635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477583,-99) , 
8, 1.85732, 1, 0, 0.503926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496211,-99) , 
9, -0.860577, 0, 0, 0.497611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473433,-99) , 
5, -0.809648, 0, 0, 0.496266,-99) , 
10, 1.46464, 0, 0, 0.497697,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.012927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57139, 1, 1, 0.505962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487372,-99) , 
9, -3.81451, 0, 0, 0.504563,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0274412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496246,-99) , 
10, -0.659593, 0, 0, 0.531097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45891,-99) , 
10, 0.769186, 0, 0, 0.502105,-99) , 
9, -1.82196, 1, 0, 0.508011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524863,-99) , 
NN(
0, 
0, 
-1, 0.375346, 1, -1, 0.493544,-99) , 
9, -1.18187, 0, 0, 0.495823,-99) , 
5, -0.429701, 1, 0, 0.50052,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.019059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460116,-99) , 
5, 0.719041, 1, 0, 0.500371,-99) , 
5, 0.805001, 0, 0, 0.502041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477157,-99) , 
9, -0.626158, 0, 0, 0.485661,-99) , 
10, -0.0275729, 1, 0, 0.493539,-99) , 
8, 0.714293, 1, 0, 0.499492,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0147743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499265,-99) , 
5, 0.332343, 1, 0, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0.506117, 0, -1, 0.486711,-99) , 
0, 0.504757, 1, 0, 0.502955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517305,-99) , 
NN(
0, 
0, 
-1, 3.31391, 1, -1, 0.478089,-99) , 
8, 1.28525, 0, 0, 0.486554,-99) , 
9, 0.0722503, 1, 0, 0.500701,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0094855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479146,-99) , 
2, 0.214318, 1, 0, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471121,-99) , 
10, -1.84736, 0, 0, 0.499638,-99) , 
9, -4.09685, 1, 0, 0.500755,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0100381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497714,-99) , 
2, 0.214511, 0, 0, 0.498659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469411,-99) , 
3, 9.03751, 1, 0, 0.497831,-99) , 
8, -1.85711, 1, 0, 0.499278,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0156891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
8, 0.0700775, 0, 0, 0.50789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496313,-99) , 
8, -0.428518, 1, 0, 0.500269,-99) , 
9, -2.54548, 1, 0, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4791,-99) , 
2, 0.214085, 1, 0, 0.501817,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0144556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0530849, 1, 1, 0.508295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49474,-99) , 
9, -1.81636, 0, 0, 0.499078,-99) , 
8, 0.714303, 0, 0, 0.501875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475534,-99) , 
3, 9.27754, 1, 0, 0.501208,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0083701);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.8571, 1, 1, 0.503771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483063,-99) , 
0, 0.489519, 0, 0, 0.50312,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0206596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472718,-99) , 
10, -1.80047, 1, 0, 0.490026,-99) , 
8, -0.688439, 0, 0, 0.507662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522373,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.493061,-99) , 
8, -1.28563, 1, 0, 0.494412,-99) , 
10, -1.26785, 1, 0, 0.496756,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0142822);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.46619, 1, 1, 0.504564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493566,-99) , 
9, -2.48251, 0, 0, 0.505065,-99) , 
NN(
0, 
0, 
-1, -0.0193747, 0, -1, 0.488353,-99) , 
5, 0.0452851, 0, 0, 0.494853,-99) , 
0, 0.499995, 1, 0, 0.501243,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0256177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487744,-99) , 
8, 0.459984, 1, 0, 0.501391,-99) , 
8, 1.54116, 0, 0, 0.503799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489677,-99) , 
5, -0.432383, 0, 0, 0.497137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452418,-99) , 
8, 2.14285, 1, 0, 0.492536,-99) , 
9, -1.20998, 1, 0, 0.500462,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0186182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480266,-99) , 
10, 2.87778, 1, 0, 0.504739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477706,-99) , 
5, -0.965043, 1, 0, 0.489343,-99) , 
5, -0.918434, 0, 0, 0.503652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482804,-99) , 
9, -3.09581, 0, 0, 0.508509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452257,-99) , 
10, -0.239535, 1, 0, 0.492017,-99) , 
5, 0.712783, 1, 0, 0.502589,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.015941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473977,-99) , 
9, -3.18534, 0, 0, 0.495001,-99) , 
9, -2.11128, 0, 0, 0.511162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498654,-99) , 
8, 1.28574, 0, 0, 0.50272,-99) , 
NN(
0, 
0, 
-1, 0.501129, 0, -1, 0.493818,-99) , 
0, 0.495233, 1, 0, 0.496172,-99) , 
5, 0.712478, 0, 0, 0.497604,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0115168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472045,-99) , 
0, 0.489519, 0, 0, 0.503204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476445,-99) , 
2, -0.214455, 0, 0, 0.501869,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0202363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488391,-99) , 
8, 0.224559, 0, 0, 0.499905,-99) , 
10, -1.01462, 1, 0, 0.503037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464152,-99) , 
8, -1.77543, 0, 0, 0.496855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422066,-99) , 
10, -1.71484, 1, 0, 0.476205,-99) , 
5, 0.330001, 1, 0, 0.491787,-99) , 
8, -0.42851, 0, 0, 0.499637,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0126913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496168,-99) , 
8, -1.85705, 1, 0, 0.497284,-99) , 
NN(
0, 
0, 
-1, 0.377497, 0, -1, 0.474599,-99) , 
4, 0.999524, 0, 0, 0.49602,-99) , 
5, 0.807937, 0, 0, 0.497029,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0156705);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484571,-99) , 
9, 0.368479, 1, 0, 0.500029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472664,-99) , 
10, 0.532762, 1, 0, 0.483485,-99) , 
8, 1.28572, 1, 0, 0.497526,-99) , 
0, 0.505709, 0, 0, 0.498713,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0128733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497746,-99) , 
10, 2.69003, 0, 0, 0.51266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495667,-99) , 
5, 0.726069, 0, 0, 0.497163,-99) , 
5, -0.904862, 1, 0, 0.49835,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.480972,-99) , 
2, 0.214318, 1, 0, 0.497475,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0290963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494495,-99) , 
8, 1.56113, 0, 0, 0.498139,-99) , 
9, -1.37835, 0, 0, 0.501504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47201,-99) , 
10, -0.894021, 0, 0, 0.517113,-99) , 
NN(
0, 
0, 
-1, 0.534606, 0, -1, 0.487355,-99) , 
9, -2.27872, 1, 0, 0.49294,-99) , 
5, -0.240928, 0, 0, 0.497538,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0212003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489141,-99) , 
5, -0.429053, 0, 0, 0.50752,-99) , 
10, 1.69365, 0, 0, 0.512225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474545,-99) , 
0, 0.492376, 0, 0, 0.509005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49536,-99) , 
0, 0.492376, 1, 0, 0.498078,-99) , 
3, 1.14693, 1, 0, 0.501752,-99) , 
3, 4.55908, 0, 0, 0.503856,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0166072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493558,-99) , 
4, 0.999977, 0, 0, 0.505248,-99) , 
4, 0.999524, 1, 0, 0.509521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494278,-99) , 
10, -0.90581, 1, 0, 0.506281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495041,-99) , 
9, -2.54548, 1, 0, 0.497882,-99) , 
5, 0.427065, 0, 0, 0.499844,-99) , 
2, -0.0713712, 1, 0, 0.501624,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0204912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
9, -2.29346, 1, 0, 0.502665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485374,-99) , 
9, -2.47415, 0, 0, 0.495027,-99) , 
8, -0.265241, 0, 0, 0.500469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511626,-99) , 
NN(
0, 
0, 
-1, -0.927499, 1, -1, 0.469323,-99) , 
7, -951.286, 0, 0, 0.488233,-99) , 
8, -1.28563, 0, 0, 0.499281,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0204259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.23441, 1, 1, 0.508144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485159,-99) , 
10, 3.3839, 1, 0, 0.506984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468211,-99) , 
10, -1.41835, 0, 0, 0.489223,-99) , 
8, -1.28569, 0, 0, 0.50528,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0234824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497506,-99) , 
9, -0.544829, 0, 0, 0.50545,-99) , 
10, 0.0375147, 1, 0, 0.509604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495225,-99) , 
5, -0.43367, 0, 0, 0.505959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479913,-99) , 
5, 0.33001, 1, 0, 0.493903,-99) , 
9, -2.03005, 0, 0, 0.498312,-99) , 
8, 0.714324, 0, 0, 0.501761,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0126724);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53057,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.503607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47558,-99) , 
9, -2.30874, 0, 0, 0.487838,-99) , 
5, 0.713012, 1, 0, 0.502194,-99) , 
8, 2.14276, 0, 0, 0.503361,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0119429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503421,-99) , 
NN(
0, 
0, 
-1, 0.0713923, 1, -1, 0.491546,-99) , 
3, 4.6823, 1, 0, 0.501197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507572,-99) , 
NN(
0, 
0, 
-1, -0.333809, 1, -1, 0.482553,-99) , 
2, 0.0716065, 0, 0, 0.488616,-99) , 
0, 0.493328, 0, 0, 0.499305,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00709274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496304,-99) , 
5, -0.950202, 0, 0, 0.516759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499727,-99) , 
9, 0.247301, 0, 0, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475241,-99) , 
10, 2.72476, 1, 0, 0.499797,-99) , 
5, -0.904927, 1, 0, 0.501116,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0142396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.522057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496648,-99) , 
8, 0.714725, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463218,-99) , 
4, 0.998572, 0, 0, 0.499272,-99) , 
5, -0.904861, 1, 0, 0.50104,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0116811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.097679, 0, 1, 0.518665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487918,-99) , 
5, -0.143531, 1, 0, 0.499597,-99) , 
8, 0.428401, 1, 0, 0.511254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527132,-99) , 
NN(
0, 
0, 
-1, -1.16314, 0, -1, 0.496816,-99) , 
8, -1.85705, 1, 0, 0.497903,-99) , 
0, 0.502852, 0, 0, 0.499979,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0133148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489965,-99) , 
10, -0.263632, 1, 0, 0.514966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492248,-99) , 
9, -2.6054, 0, 0, 0.499417,-99) , 
4, 0.999524, 1, 0, 0.500525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468069,-99) , 
7, -951.286, 0, 0, 0.487061,-99) , 
0, 0.490471, 0, 0, 0.499814,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.012505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496908,-99) , 
6, 0.0101917, 0, 0, 0.499044,-99) , 
9, 1.60413, 0, 0, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471827,-99) , 
6, 0.0237843, 1, 0, 0.499579,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0144161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16699, 1, 1, 0.505558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46867,-99) , 
10, -1.99369, 0, 0, 0.489624,-99) , 
8, -1.28563, 0, 0, 0.504011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47796,-99) , 
3, 9.01337, 1, 0, 0.503256,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0185119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490125,-99) , 
8, -1.27447, 0, 0, 0.514522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491711,-99) , 
5, -0.143492, 1, 0, 0.499047,-99) , 
10, -1.67149, 1, 0, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466097,-99) , 
8, 2.14286, 1, 0, 0.499416,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0111999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481059,-99) , 
3, 1.23348, 0, 0, 0.497689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476731,-99) , 
5, 0.235137, 1, 0, 0.491831,-99) , 
0, 0.493328, 0, 0, 0.502462,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0163502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495436,-99) , 
5, 0.0735948, 1, 0, 0.50978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491917,-99) , 
5, -0.143491, 0, 0, 0.49641,-99) , 
9, -3.20446, 1, 0, 0.498743,-99) , 
8, -1.8571, 1, 0, 0.499608,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0140585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49478,-99) , 
2, -0.0782279, 1, 0, 0.504478,-99) , 
2, 0.0714402, 0, 0, 0.510383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497288,-99) , 
4, 0.999524, 1, 0, 0.498937,-99) , 
NN(
0, 
0, 
-1, 1.00014, 1, -1, 0.488615,-99) , 
0, 0.493419, 0, 0, 0.497062,-99) , 
0, 0.502852, 0, 0, 0.499151,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00958204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49894,-99) , 
10, 2.05833, 0, 0, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478731,-99) , 
8, 2.14285, 1, 0, 0.500521,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487883,-99) , 
0, 0.492376, 0, 0, 0.499131,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00889157);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.713012, 0, 1, 0.503914,-99) , 
NN(
0, 
0, 
-1, 0.142842, 0, -1, 0.485591,-99) , 
2, 0.214245, 1, 0, 0.502985,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0108661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85677, 0, 1, 0.5041,-99) , 
NN(
0, 
0, 
-1, -0.714216, 0, -1, 0.493206,-99) , 
9, -0.81715, 1, 0, 0.501464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480536,-99) , 
5, 0.807937, 1, 0, 0.500495,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0134917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.189341, 0, 1, 0.521698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495879,-99) , 
8, 0.714156, 1, 0, 0.514247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496572,-99) , 
5, 0.331011, 0, 0, 0.49982,-99) , 
9, -4.01846, 1, 0, 0.500776,-99) , 
0, 0.503805, 0, 0, 0.502264,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0117764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.75458, 1, 1, 0.519824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499279,-99) , 
9, -1.05441, 0, 0, 0.502084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478655,-99) , 
8, 1.85716, 1, 0, 0.500787,-99) , 
10, 2.30562, 0, 0, 0.502762,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0173122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499492,-99) , 
9, -2.28456, 0, 0, 0.504693,-99) , 
8, 0.403887, 0, 0, 0.510603,-99) , 
NN(
NN(
0, 
0, 
-1, -2.05293, 1, 1, 0.503938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444076,-99) , 
4, 0.999524, 0, 0, 0.500906,-99) , 
10, -0.335914, 1, 0, 0.505062,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0112402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999927, 1, 1, 0.503513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471935,-99) , 
5, 0.807615, 1, 0, 0.502583,-99) , 
NN(
0, 
0, 
-1, -0.295366, 1, -1, 0.476094,-99) , 
4, 0.999524, 0, 0, 0.500719,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0135031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485654,-99) , 
9, 0.609836, 1, 0, 0.505364,-99) , 
8, 1.85715, 0, 0, 0.507234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525585,-99) , 
NN(
0, 
0, 
-1, 1.28561, 1, -1, 0.497006,-99) , 
4, 0.999524, 1, 0, 0.499004,-99) , 
0, 0.497138, 1, 0, 0.502375,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.012572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498705,-99) , 
3, 2.41479, 1, 0, 0.517066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481705,-99) , 
0, 0.498091, 1, 0, 0.492093,-99) , 
3, 4.49489, 1, 0, 0.508556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524114,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.496566,-99) , 
4, 0.999048, 1, 0, 0.497467,-99) , 
2, -0.0715583, 1, 0, 0.499513,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0242167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.149134, 0, 1, 0.511031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495944,-99) , 
10, -1.24038, 1, 0, 0.50203,-99) , 
9, -1.81636, 0, 0, 0.505269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462866,-99) , 
9, -0.143531, 0, 0, 0.479736,-99) , 
10, 0.535361, 1, 0, 0.487368,-99) , 
8, 1.28574, 1, 0, 0.502563,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0109167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494631,-99) , 
4, 0.999955, 0, 0, 0.51604,-99) , 
NN(
0, 
0, 
-1, -1.25553, 1, 1, 0.502704,-99) , 
0, 0.492377, 1, 0, 0.504181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474117,-99) , 
4, 0.999048, 0, 0, 0.502936,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0182708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477321,-99) , 
10, -1.46754, 1, 0, 0.49644,-99) , 
8, -0.349366, 0, 0, 0.506979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497649,-99) , 
9, -2.83346, 1, 0, 0.500184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469166,-99) , 
8, 1.21701, 0, 0, 0.481335,-99) , 
5, 0.617845, 1, 0, 0.498187,-99) , 
10, -0.996228, 1, 0, 0.500288,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.016867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10255, 1, 1, 0.506555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483182,-99) , 
10, -1.22323, 0, 0, 0.491569,-99) , 
8, -0.714215, 0, 0, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47572,-99) , 
10, 3.39205, 1, 0, 0.501858,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.013294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495483,-99) , 
8, -0.142926, 0, 0, 0.517905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496816,-99) , 
3, 8.87473, 0, 0, 0.498017,-99) , 
0, 0.491424, 1, 0, 0.499631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453957,-99) , 
4, 0.998572, 0, 0, 0.498434,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0219894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482636,-99) , 
10, -1.20508, 1, 0, 0.518866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481648,-99) , 
8, -1.17288, 0, 0, 0.507829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49573,-99) , 
10, -0.590996, 1, 0, 0.498252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456585,-99) , 
4, 0.999048, 0, 0, 0.4968,-99) , 
9, -3.0687, 1, 0, 0.499216,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.022663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497969,-99) , 
5, -0.0494987, 1, 0, 0.505337,-99) , 
10, -1.3099, 1, 0, 0.507975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488485,-99) , 
9, -0.787688, 1, 0, 0.510209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461146,-99) , 
10, -1.91844, 1, 0, 0.487871,-99) , 
10, -1.55135, 0, 0, 0.499509,-99) , 
8, -0.714261, 0, 0, 0.506109,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0126663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49597,-99) , 
8, -0.428609, 0, 0, 0.50778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494778,-99) , 
7, -951.286, 0, 0, 0.498966,-99) , 
0, 0.500947, 0, 0, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485084,-99) , 
2, 0.21421, 1, 0, 0.500508,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0132507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.513834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480092,-99) , 
5, -0.864326, 1, 0, 0.491371,-99) , 
5, -0.715022, 0, 0, 0.508385,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00026, 0, 1, 0.512644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482497,-99) , 
8, 1.57144, 1, 0, 0.498767,-99) , 
2, -0.0716665, 1, 0, 0.501222,-99) , 
0, 0.500947, 0, 0, 0.503175,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0205307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498996,-99) , 
8, 1.85699, 0, 0, 0.50082,-99) , 
9, -0.951698, 0, 0, 0.503212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490027,-99) , 
9, -0.816172, 1, 0, 0.498553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401514,-99) , 
9, -2.31359, 1, 0, 0.468788,-99) , 
10, -0.105319, 0, 0, 0.493128,-99) , 
5, -0.429566, 0, 0, 0.499376,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0258479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479784,-99) , 
10, 0.273315, 1, 0, 0.50493,-99) , 
9, -1.20517, 0, 0, 0.50726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470392,-99) , 
4, 0.999905, 0, 0, 0.502776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451342,-99) , 
9, -2.42478, 1, 0, 0.483802,-99) , 
10, 0.0544148, 0, 0, 0.497324,-99) , 
5, -0.238898, 0, 0, 0.502628,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0257742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83626, 0, 1, 0.508025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470436,-99) , 
9, -1.39006, 1, 0, 0.483478,-99) , 
10, 0.599302, 1, 0, 0.504969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492938,-99) , 
9, -0.361892, 1, 0, 0.504478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437793,-99) , 
9, -2.17557, 1, 0, 0.478732,-99) , 
10, 0.196206, 0, 0, 0.497249,-99) , 
5, -0.333828, 0, 0, 0.501674,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.021332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.906114, 1, 1, 0.516045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483591,-99) , 
9, -3.50346, 0, 0, 0.505959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492762,-99) , 
9, -3.58401, 1, 0, 0.49523,-99) , 
5, 0.330702, 0, 0, 0.498542,-99) , 
10, 2.44186, 0, 0, 0.500169,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00836839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497936,-99) , 
0, 0.505709, 0, 0, 0.498808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481871,-99) , 
2, -0.214262, 0, 0, 0.498032,-99) , 
4, 0.998572, 1, 0, 0.498912,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0145233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476839,-99) , 
10, -1.74942, 0, 0, 0.498988,-99) , 
8, 2.14283, 0, 0, 0.500387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474737,-99) , 
8, -0.593663, 0, 0, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0.695365, 0, -1, 0.470995,-99) , 
10, -0.898867, 1, 0, 0.485877,-99) , 
5, 0.617845, 1, 0, 0.498441,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0127664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496174,-99) , 
0, 0.505709, 0, 0, 0.497386,-99) , 
8, 2.14282, 0, 0, 0.498657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477656,-99) , 
4, 0.999048, 0, 0, 0.497775,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0161566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.950492, 0, 1, 0.525237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48275,-99) , 
8, 1.00105, 0, 0, 0.496164,-99) , 
5, -0.905484, 1, 0, 0.509662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498662,-99) , 
10, 0.681148, 0, 0, 0.501884,-99) , 
NN(
0, 
0, 
-1, 1.85716, 1, -1, 0.484801,-99) , 
9, -1.08709, 1, 0, 0.49906,-99) , 
9, 0.181489, 0, 0, 0.500488,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0139226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488906,-99) , 
4, 0.999592, 0, 0, 0.50451,-99) , 
8, 2.14285, 0, 0, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47991,-99) , 
4, 0.998572, 0, 0, 0.504776,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0218361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479647,-99) , 
9, -2.95343, 0, 0, 0.503525,-99) , 
10, -1.92933, 1, 0, 0.508366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
5, -0.823524, 1, 0, 0.499216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460445,-99) , 
4, 0.999619, 0, 0, 0.49774,-99) , 
5, 0.235337, 0, 0, 0.501198,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0126997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493053,-99) , 
10, 1.54124, 1, 0, 0.520803,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0715603, 1, 1, 0.503731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450472,-99) , 
10, 1.0455, 0, 0, 0.490442,-99) , 
5, -0.809947, 0, 0, 0.501623,-99) , 
8, 1.85715, 0, 0, 0.50291,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0130011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.66534, 1, 1, 0.510172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498107,-99) , 
8, 1.04628, 0, 0, 0.499851,-99) , 
10, 0.257699, 0, 0, 0.503734,-99) , 
NN(
0, 
0, 
-1, 3.85033, 0, -1, 0.485954,-99) , 
10, 2.95212, 1, 0, 0.502593,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0133944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49001,-99) , 
5, -0.945616, 0, 0, 0.512678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493387,-99) , 
9, -1.58061, 1, 0, 0.499827,-99) , 
5, -0.904829, 1, 0, 0.500742,-99) , 
8, -1.85712, 1, 0, 0.502049,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00886345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498423,-99) , 
10, 2.3155, 0, 0, 0.499376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484326,-99) , 
10, 3.01147, 1, 0, 0.498517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457981,-99) , 
10, 1.5229, 1, 0, 0.483155,-99) , 
8, 1.85714, 1, 0, 0.497542,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00573341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.06921, 0, 1, 0.502276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47565,-99) , 
4, 0.998572, 0, 0, 0.501563,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0130547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472666,-99) , 
4, 0.999637, 0, 0, 0.501366,-99) , 
4, 0.999048, 1, 0, 0.502302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48787,-99) , 
3, 1.77993, 1, 0, 0.496365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471404,-99) , 
5, 0.613028, 1, 0, 0.492811,-99) , 
2, -0.0715985, 0, 0, 0.50061,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00774619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499211,-99) , 
4, 0.999524, 1, 0, 0.500627,-99) , 
NN(
0, 
0, 
-1, -0.713938, 0, -1, 0.48897,-99) , 
0, 0.503306, 1, 0, 0.499073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477619,-99) , 
0, 0.489519, 0, 0, 0.498416,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0117251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495803,-99) , 
9, -1.2834, 0, 0, 0.498648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470123,-99) , 
8, 2.30611, 1, 0, 0.497879,-99) , 
8, -1.85711, 1, 0, 0.498786,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0193923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213745, 0, 1, 0.505948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46642,-99) , 
10, -0.786719, 1, 0, 0.491544,-99) , 
5, 0.654101, 1, 0, 0.503922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508719,-99) , 
NN(
0, 
0, 
-1, -0.927485, 0, -1, 0.4815,-99) , 
9, 1.87623, 0, 0, 0.489952,-99) , 
5, -0.809659, 0, 0, 0.501784,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0164294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.403385, 0, 1, 0.525086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499954,-99) , 
8, -1.85803, 1, 0, 0.501285,-99) , 
4, 0.999524, 1, 0, 0.503483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487723,-99) , 
5, -0.623329, 0, 0, 0.494936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454471,-99) , 
8, 1.85716, 1, 0, 0.48901,-99) , 
9, -1.10966, 1, 0, 0.499458,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0184239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484246,-99) , 
10, 2.99787, 1, 0, 0.506868,-99) , 
NN(
0, 
0, 
-1, -1.47791, 1, -1, 0.492683,-99) , 
8, -0.550958, 0, 0, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476902,-99) , 
8, 2.14284, 1, 0, 0.502019,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0100088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49929,-99) , 
8, -0.999923, 1, 0, 0.501021,-99) , 
5, 0.80818, 0, 0, 0.502248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491661,-99) , 
8, 0.0475249, 0, 0, 0.49999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470945,-99) , 
8, 0.999878, 1, 0, 0.493945,-99) , 
0, 0.502852, 1, 0, 0.500981,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00841803);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519715,-99) , 
NN(
NN(
0, 
0, 
-1, -1.54276, 1, 1, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487882,-99) , 
9, -3.84939, 0, 0, 0.501507,-99) , 
9, 1.69564, 0, 0, 0.50252,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0130205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489274,-99) , 
9, -2.63892, 1, 0, 0.496828,-99) , 
NN(
0, 
0, 
-1, -0.525035, 1, -1, 0.47558,-99) , 
8, -0.714265, 0, 0, 0.492187,-99) , 
0, 0.500948, 1, 0, 0.500292,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0114333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496748,-99) , 
0, 0.504757, 0, 0, 0.497707,-99) , 
2, 0.214318, 0, 0, 0.498804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450772,-99) , 
4, 0.998571, 0, 0, 0.497567,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0128348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.514035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497938,-99) , 
8, -1.0408, 1, 0, 0.499807,-99) , 
10, -1.84565, 1, 0, 0.501018,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.475408,-99) , 
8, 1.57143, 1, 0, 0.498497,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0162997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495918,-99) , 
0, 0.503533, 1, 0, 0.512634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486728,-99) , 
0, 0.493328, 0, 0, 0.507462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494356,-99) , 
4, 0.999977, 1, 0, 0.497579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472536,-99) , 
4, 0.999524, 0, 0, 0.496272,-99) , 
2, -0.0713712, 1, 0, 0.49833,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0156974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.861208, 0, 1, 0.50479,-99) , 
NN(
0, 
0, 
-1, 0.142005, 1, -1, 0.49579,-99) , 
10, 0.606561, 1, 0, 0.501621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479044,-99) , 
8, -0.325804, 0, 0, 0.503185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427189,-99) , 
10, -0.455477, 1, 0, 0.4755,-99) , 
5, 0.713013, 1, 0, 0.499275,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.01394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49242,-99) , 
2, 0.0713476, 1, 0, 0.502693,-99) , 
8, 2.14286, 0, 0, 0.503862,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.485675,-99) , 
0, 0.504757, 1, 0, 0.502572,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00838106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498336,-99) , 
9, 1.48398, 1, 0, 0.511789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483071,-99) , 
0, 0.491424, 0, 0, 0.498935,-99) , 
10, 1.57448, 0, 0, 0.500957,-99) , 
8, 2.14284, 0, 0, 0.501928,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0235589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48076,-99) , 
5, -0.919235, 1, 0, 0.493459,-99) , 
8, 1.28904, 0, 0, 0.505972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471616,-99) , 
8, -1.29885, 0, 0, 0.506055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493014,-99) , 
10, -1.24461, 1, 0, 0.495022,-99) , 
9, -3.34832, 1, 0, 0.496899,-99) , 
10, 2.30562, 0, 0, 0.497827,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0148081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.123438, 0, 1, 0.511178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496578,-99) , 
0, 0.490562, 1, 0, 0.49806,-99) , 
0, 0.499995, 0, 0, 0.502591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466355,-99) , 
4, 0.998571, 0, 0, 0.501634,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0162484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528108,-99) , 
NN(
NN(
0, 
0, 
-1, -0.61937, 1, 1, 0.503422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475549,-99) , 
10, 2.36415, 0, 0, 0.489354,-99) , 
9, -0.892845, 1, 0, 0.499865,-99) , 
9, -4.09685, 1, 0, 0.501121,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0177433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.330698, 0, 1, 0.50983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495077,-99) , 
10, -0.108202, 0, 0, 0.499956,-99) , 
9, -1.81242, 0, 0, 0.504173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492763,-99) , 
8, 0.14288, 1, 0, 0.498508,-99) , 
NN(
0, 
0, 
-1, -1.38093, 1, -1, 0.479903,-99) , 
8, -0.999979, 0, 0, 0.495725,-99) , 
0, 0.499043, 1, 0, 0.500633,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0208198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490895,-99) , 
8, 0.700626, 1, 0, 0.503816,-99) , 
8, 1.85705, 0, 0, 0.505761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497626,-99) , 
9, -2.0479, 1, 0, 0.503585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4856,-99) , 
8, 0.203753, 0, 0, 0.491262,-99) , 
10, -0.341105, 0, 0, 0.498388,-99) , 
0, 0.497138, 1, 0, 0.501439,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0228437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485935,-99) , 
8, -0.14277, 0, 0, 0.518762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491781,-99) , 
10, -0.000691936, 0, 0, 0.505052,-99) , 
NN(
0, 
0, 
-1, 0.500683, 1, -1, 0.490587,-99) , 
5, -0.0496684, 1, 0, 0.498971,-99) , 
4, 0.999524, 1, 0, 0.500476,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.01705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.84075, 1, 1, 0.505673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491136,-99) , 
9, -2.08176, 1, 0, 0.496918,-99) , 
5, -0.048623, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463526,-99) , 
4, 0.998571, 0, 0, 0.499781,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0182673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499551,-99) , 
9, -1.46921, 1, 0, 0.527188,-99) , 
NN(
0, 
0, 
-1, 1.13568, 0, 1, 0.50318,-99) , 
10, 0.592046, 0, 0, 0.505175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49252,-99) , 
5, -0.527296, 0, 0, 0.499667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45024,-99) , 
8, 1.85714, 1, 0, 0.492311,-99) , 
9, -1.20998, 1, 0, 0.501379,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0141536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528755,-99) , 
NN(
NN(
0, 
0, 
-1, -0.743445, 1, 1, 0.512677,-99) , 
NN(
0, 
0, 
-1, -1.62224, 0, -1, 0.495959,-99) , 
10, 1.22431, 0, 0, 0.49986,-99) , 
9, -4.09685, 1, 0, 0.501159,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0151822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482081,-99) , 
10, 3.69421, 1, 0, 0.505919,-99) , 
8, -0.428519, 1, 0, 0.511216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498008,-99) , 
4, 0.999524, 1, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, -1.28882, 1, -1, 0.486407,-99) , 
0, 0.5019, 1, 0, 0.49694,-99) , 
10, 1.49899, 0, 0, 0.499559,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00909243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486607,-99) , 
0, 0.505709, 1, 0, 0.503387,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0155807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
0, 0.499042, 0, 0, 0.518134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484147,-99) , 
0, 0.491424, 0, 0, 0.502413,-99) , 
2, -0.15324, 1, 0, 0.50413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488154,-99) , 
0, 0.499996, 0, 0, 0.49712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469494,-99) , 
9, -3.00355, 0, 0, 0.490879,-99) , 
2, 0.0712088, 1, 0, 0.501729,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00930596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490524,-99) , 
10, 1.55898, 1, 0, 0.51942,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497887,-99) , 
8, 1.85716, 0, 0, 0.499312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47869,-99) , 
5, 0.80818, 1, 0, 0.498356,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0142812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493788,-99) , 
10, -0.349747, 1, 0, 0.522975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456455,-99) , 
10, -1.12049, 1, 0, 0.49331,-99) , 
9, -2.73373, 0, 0, 0.507896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499558,-99) , 
8, -1.57141, 1, 0, 0.500819,-99) , 
NN(
0, 
0, 
-1, 2.04743, 1, -1, 0.483415,-99) , 
5, -0.927616, 0, 0, 0.499633,-99) , 
5, 0.520002, 0, 0, 0.501195,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0115776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49248,-99) , 
5, -0.918453, 0, 0, 0.511472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
4, 0.999524, 1, 0, 0.500256,-99) , 
5, -0.809724, 1, 0, 0.502075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473094,-99) , 
3, 8.94697, 1, 0, 0.501208,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0197795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.971612, 1, 1, 0.512838,-99) , 
NN(
0, 
0, 
-1, 0.502535, 1, -1, 0.487586,-99) , 
8, -0.99997, 0, 0, 0.509075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495098,-99) , 
8, -0.507036, 0, 0, 0.507914,-99) , 
NN(
0, 
0, 
-1, 0.617846, 1, -1, 0.49379,-99) , 
10, -0.996228, 1, 0, 0.497306,-99) , 
0, 0.499995, 0, 0, 0.501392,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0100585);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.505029,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0129168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.805412, 0, 1, 0.506877,-99) , 
NN(
0, 
0, 
-1, 0.71248, 1, -1, 0.497291,-99) , 
0, 0.496866, 0, 0, 0.502743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490816,-99) , 
5, -0.673739, 0, 0, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474163,-99) , 
5, -0.143595, 1, 0, 0.491248,-99) , 
0, 0.503804, 1, 0, 0.501492,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0127337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999924, 1, 1, 0.504056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486118,-99) , 
9, -3.46859, 0, 0, 0.493805,-99) , 
10, -1.31675, 0, 0, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474976,-99) , 
5, 0.807937, 1, 0, 0.501178,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0118902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485719,-99) , 
5, -0.913969, 0, 0, 0.507077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498109,-99) , 
8, 1.85714, 0, 0, 0.499368,-99) , 
0, 0.497138, 1, 0, 0.502555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484347,-99) , 
5, 0.806372, 1, 0, 0.501693,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0164336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08477, 1, 1, 0.505225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492157,-99) , 
8, 0.180696, 0, 0, 0.497697,-99) , 
10, -0.3821, 0, 0, 0.502193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473879,-99) , 
4, 0.999048, 0, 0, 0.50101,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00544888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499989,-99) , 
0, 0.505029, 0, 0, 0.501034,-99) , 
0, 0.489519, 1, 0, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0.425752, 0, -1, 0.485296,-99) , 
4, 0.999524, 0, 0, 0.500593,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0156537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482542,-99) , 
8, -1.2856, 0, 0, 0.507511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490545,-99) , 
2, -0.00440465, 1, 0, 0.498127,-99) , 
2, 0.0305798, 0, 0, 0.500927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483424,-99) , 
2, -0.214313, 0, 0, 0.500039,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0166604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714215, 1, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480464,-99) , 
5, 0.806372, 1, 0, 0.506488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479873,-99) , 
4, 0.999048, 0, 0, 0.505384,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0125996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499607,-99) , 
7, -951.286, 0, 0, 0.515873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491448,-99) , 
0, 0.491741, 0, 0, 0.501957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491273,-99) , 
3, 4.67556, 0, 0, 0.494774,-99) , 
0, 0.499995, 1, 0, 0.499516,-99) , 
2, 0.214278, 0, 0, 0.500368,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0118742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483186,-99) , 
5, 0.0467361, 1, 0, 0.499991,-99) , 
10, 0.297599, 1, 0, 0.507065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516316,-99) , 
NN(
0, 
0, 
-1, 0.543438, 1, -1, 0.498029,-99) , 
5, 0.80068, 0, 0, 0.498934,-99) , 
8, 1.00003, 0, 0, 0.500758,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0126432);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527362,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999972, 1, 1, 0.504194,-99) , 
NN(
0, 
0, 
-1, -0.837769, 0, -1, 0.491719,-99) , 
5, 0.237011, 1, 0, 0.500368,-99) , 
10, -2.20558, 1, 0, 0.501445,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0196443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477994,-99) , 
5, -0.0553394, 0, 0, 0.500725,-99) , 
10, -0.839232, 0, 0, 0.513331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49242,-99) , 
5, 0.712478, 0, 0, 0.493705,-99) , 
2, 0.214245, 0, 0, 0.495002,-99) , 
8, -1.28568, 1, 0, 0.496829,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0157899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01773, 0, 1, 0.524438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489271,-99) , 
8, -1.14959, 0, 0, 0.499771,-99) , 
0, 0.499995, 0, 0, 0.508402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49756,-99) , 
10, -0.457942, 1, 0, 0.500381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472133,-99) , 
10, -1.03676, 0, 0, 0.488325,-99) , 
8, -0.360484, 0, 0, 0.498757,-99) , 
8, -0.714222, 1, 0, 0.500895,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0142901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498073,-99) , 
9, -2.46638, 0, 0, 0.503464,-99) , 
0, 0.490471, 1, 0, 0.504571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48296,-99) , 
3, 2.07248, 1, 0, 0.494268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46744,-99) , 
5, -0.818758, 1, 0, 0.487337,-99) , 
10, 2.28745, 1, 0, 0.502838,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0172941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495475,-99) , 
9, -0.215268, 1, 0, 0.507131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480386,-99) , 
5, -0.525035, 0, 0, 0.497435,-99) , 
10, 0.630689, 0, 0, 0.499689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486967,-99) , 
10, 0.323087, 1, 0, 0.498794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454375,-99) , 
10, 1.68386, 0, 0, 0.481126,-99) , 
5, -0.143706, 0, 0, 0.490858,-99) , 
8, 1.00003, 1, 0, 0.497766,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.016704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495988,-99) , 
9, -2.61312, 0, 0, 0.514156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495094,-99) , 
8, 0.142906, 1, 0, 0.50055,-99) , 
5, 0.520796, 0, 0, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480771,-99) , 
2, 0.214186, 1, 0, 0.501966,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00967997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497484,-99) , 
0, 0.492376, 1, 0, 0.498716,-99) , 
NN(
0, 
0, 
-1, 0.999252, 1, -1, 0.481116,-99) , 
4, 0.999592, 0, 0, 0.497761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466292,-99) , 
4, 0.998571, 0, 0, 0.496934,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0103888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492322,-99) , 
5, -0.840737, 1, 0, 0.510941,-99) , 
NN(
0, 
0, 
-1, -0.904961, 0, -1, 0.496642,-99) , 
10, 2.43422, 0, 0, 0.498026,-99) , 
4, 0.998571, 1, 0, 0.498884,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0108625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
10, -0.1112, 0, 0, 0.503609,-99) , 
8, -1.85692, 1, 0, 0.504285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472032,-99) , 
3, 1.56227, 0, 0, 0.488657,-99) , 
5, -0.904842, 0, 0, 0.50312,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.013648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498506,-99) , 
10, 0.564296, 1, 0, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0.805002, 0, 1, 0.501732,-99) , 
8, 0.714322, 0, 0, 0.504448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474414,-99) , 
5, -0.706633, 0, 0, 0.498136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461367,-99) , 
5, 0.232071, 1, 0, 0.489037,-99) , 
0, 0.503804, 1, 0, 0.50278,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0114904);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497835,-99) , 
7, -951.198, 1, 0, 0.506172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496568,-99) , 
5, 0.805946, 0, 0, 0.497694,-99) , 
0, 0.500947, 0, 0, 0.499997,-99) , 
8, -1.85711, 1, 0, 0.500637,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0169363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.41792, 0, 1, 0.505493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478219,-99) , 
5, 0.841832, 1, 0, 0.50423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492147,-99) , 
10, 1.52637, 1, 0, 0.507163,-99) , 
NN(
0, 
0, 
-1, -1.00043, 0, -1, 0.486582,-99) , 
7, -951.286, 0, 0, 0.493602,-99) , 
5, -0.619867, 0, 0, 0.501242,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0290707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482452,-99) , 
10, -1.77772, 1, 0, 0.499327,-99) , 
5, 0.0759269, 1, 0, 0.509824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436994,-99) , 
5, -0.148231, 0, 0, 0.518679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486251,-99) , 
5, 0.0452384, 1, 0, 0.497039,-99) , 
10, -0.810807, 1, 0, 0.49986,-99) , 
9, -3.171, 1, 0, 0.501798,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0205253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
9, -3.09581, 0, 0, 0.521898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485922,-99) , 
10, -0.239535, 1, 0, 0.511049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497806,-99) , 
9, -2.05293, 1, 0, 0.502595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487564,-99) , 
8, 0.0951198, 0, 0, 0.493471,-99) , 
10, -0.367079, 0, 0, 0.499039,-99) , 
5, 0.712782, 0, 0, 0.500172,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0232822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482977,-99) , 
9, -0.824236, 1, 0, 0.527455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46653,-99) , 
10, -2.16149, 1, 0, 0.498117,-99) , 
10, -1.66686, 0, 0, 0.512651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484568,-99) , 
8, -0.23803, 0, 0, 0.499043,-99) , 
10, -1.53282, 1, 0, 0.501428,-99) , 
8, -0.99993, 1, 0, 0.503138,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0154045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494243,-99) , 
8, 2.22904, 0, 0, 0.506524,-99) , 
8, 1.84356, 1, 0, 0.513117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496398,-99) , 
10, -1.5434, 1, 0, 0.499223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474712,-99) , 
8, -1.69379, 0, 0, 0.497956,-99) , 
8, 1.57145, 0, 0, 0.49954,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0155435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54447, 0, 1, 0.503621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477207,-99) , 
4, 0.999429, 0, 0, 0.502764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477992,-99) , 
9, -3.37614, 0, 0, 0.50164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461459,-99) , 
10, -0.164816, 1, 0, 0.490625,-99) , 
5, 0.522679, 1, 0, 0.500572,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.024876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.330001, 0, 1, 0.514863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471073,-99) , 
10, -2.04559, 1, 0, 0.491144,-99) , 
9, -3.6075, 0, 0, 0.507712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488397,-99) , 
8, 1.04086, 0, 0, 0.494455,-99) , 
10, -0.973027, 1, 0, 0.496932,-99) , 
8, -0.428508, 1, 0, 0.500252,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00957643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498421,-99) , 
10, -1.14447, 1, 0, 0.50061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457098,-99) , 
8, -1.97951, 0, 0, 0.483788,-99) , 
8, -1.57135, 0, 0, 0.499603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479413,-99) , 
3, 8.99736, 1, 0, 0.499026,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0140192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.520347, 0, 1, 0.503867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48469,-99) , 
8, -0.415131, 0, 0, 0.495918,-99) , 
9, -3.10479, 0, 0, 0.502203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488524,-99) , 
0, 0.505709, 1, 0, 0.501616,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0184438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.524696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483628,-99) , 
4, 0.999841, 0, 0, 0.502414,-99) , 
4, 0.999524, 1, 0, 0.504175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491309,-99) , 
9, -1.95271, 1, 0, 0.504433,-99) , 
NN(
0, 
0, 
-1, -1.63595, 1, -1, 0.485188,-99) , 
10, -1.01773, 0, 0, 0.492991,-99) , 
8, -0.428548, 0, 0, 0.500808,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0181031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483186,-99) , 
6, 0.00452677, 1, 0, 0.508968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494507,-99) , 
6, 0.00905687, 0, 0, 0.496554,-99) , 
9, 0.506931, 0, 0, 0.497849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47462,-99) , 
6, 0.0237755, 1, 0, 0.497259,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0294197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498465,-99) , 
0, 0.499361, 1, 0, 0.513043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489203,-99) , 
0, 0.494282, 0, 0, 0.508061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354743,-99) , 
7, -1.85338, 0, 0, 0.502162,-99) , 
NN(
0, 
0, 
-1, -0.809674, 0, -1, 0.493179,-99) , 
7, -951.286, 0, 0, 0.497758,-99) , 
9, 0.225577, 0, 0, 0.499088,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0182372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.27056, 0, 1, 0.506348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44378,-99) , 
7, -1.25478, 0, 0, 0.494462,-99) , 
7, -6.95896, 1, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459586,-99) , 
4, 0.998572, 0, 0, 0.499606,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0224395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.240708, 0, 1, 0.510525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494071,-99) , 
5, -0.33381, 1, 0, 0.498087,-99) , 
9, -1.97709, 0, 0, 0.502733,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.511647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463965,-99) , 
9, -1.6086, 1, 0, 0.483127,-99) , 
9, -0.31263, 0, 0, 0.490226,-99) , 
8, 1.00003, 1, 0, 0.500012,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0301948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1995, 1, 1, 0.511607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478507,-99) , 
10, 0.879823, 0, 0, 0.498507,-99) , 
5, -0.61971, 0, 0, 0.506822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496778,-99) , 
8, 1.57154, 0, 0, 0.502478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361345,-99) , 
7, -1.96494, 0, 0, 0.484013,-99) , 
7, -0.826444, 0, 0, 0.498135,-99) , 
7, -6.95896, 1, 0, 0.502619,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0157777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499982,-99) , 
9, -1.6103, 0, 0, 0.504507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490878,-99) , 
9, -2.43926, 1, 0, 0.49488,-99) , 
5, 0.117968, 0, 0, 0.498203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476149,-99) , 
5, 0.805945, 1, 0, 0.497185,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.029092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.434475, 0, 1, 0.519325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481435,-99) , 
5, 0.140118, 1, 0, 0.494182,-99) , 
9, -2.43761, 0, 0, 0.504528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532419,-99) , 
NN(
0, 
0, 
-1, 0.615567, 1, -1, 0.48933,-99) , 
10, -0.526233, 1, 0, 0.493865,-99) , 
8, 0.142875, 1, 0, 0.49924,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0206076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496411,-99) , 
8, 0.537868, 0, 0, 0.511674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496835,-99) , 
8, 2.25171, 0, 0, 0.498909,-99) , 
10, -0.218679, 1, 0, 0.502604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492738,-99) , 
9, -4.08445, 1, 0, 0.496293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456895,-99) , 
9, -0.227997, 1, 0, 0.491282,-99) , 
8, -0.1428, 0, 0, 0.498128,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0134769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498446,-99) , 
7, -951.286, 1, 0, 0.521176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496034,-99) , 
5, -0.23866, 0, 0, 0.501483,-99) , 
2, -0.21439, 1, 0, 0.502542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468972,-99) , 
6, 0.0236939, 1, 0, 0.501697,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0116187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498143,-99) , 
7, -951.286, 1, 0, 0.506917,-99) , 
NN(
0, 
0, 
-1, -0.963729, 0, -1, 0.496903,-99) , 
5, 0.118999, 0, 0, 0.500355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480427,-99) , 
5, 0.807615, 1, 0, 0.499455,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0289265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03005, 0, 1, 0.523927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450325,-99) , 
9, -2.65933, 0, 0, 0.496392,-99) , 
10, -0.821353, 1, 0, 0.509267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499237,-99) , 
8, -0.714233, 1, 0, 0.502917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455892,-99) , 
9, -3.17779, 1, 0, 0.484817,-99) , 
10, -0.551825, 0, 0, 0.498567,-99) , 
5, 0.140597, 0, 0, 0.502497,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0198072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491966,-99) , 
5, -0.923036, 0, 0, 0.506103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487003,-99) , 
3, 7.79214, 1, 0, 0.505179,-99) , 
NN(
NN(
0, 
0, 
-1, -0.505851, 0, 1, 0.520236,-99) , 
NN(
0, 
0, 
-1, 0.874435, 0, -1, 0.470516,-99) , 
10, -0.801188, 1, 0, 0.494798,-99) , 
5, 0.616228, 1, 0, 0.503758,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0134759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.75458, 1, 1, 0.512836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497118,-99) , 
8, -0.466536, 0, 0, 0.507726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
8, -0.42855, 1, 0, 0.499597,-99) , 
10, -1.15188, 1, 0, 0.501428,-99) , 
10, 2.30562, 0, 0, 0.502609,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0156123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488015,-99) , 
9, 0.368479, 1, 0, 0.503357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47369,-99) , 
7, -951.286, 0, 0, 0.493256,-99) , 
8, 1.57144, 1, 0, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480935,-99) , 
6, 0.0237791, 1, 0, 0.501786,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0208976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499017,-99) , 
9, -0.655044, 0, 0, 0.505328,-99) , 
8, 2.2653, 0, 0, 0.506933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493479,-99) , 
5, -0.43053, 0, 0, 0.506809,-99) , 
NN(
0, 
0, 
-1, -2.6777, 1, -1, 0.492136,-99) , 
9, -2.26251, 0, 0, 0.497924,-99) , 
8, 0.428582, 0, 0, 0.501515,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0189063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495849,-99) , 
2, 0.0271895, 0, 0, 0.500962,-99) , 
2, -0.217132, 1, 0, 0.502255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439891,-99) , 
10, -0.36955, 1, 0, 0.480254,-99) , 
4, 0.999524, 0, 0, 0.500714,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0155066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
4, 0.999995, 0, 0, 0.503929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466293,-99) , 
8, 0.143533, 0, 0, 0.485505,-99) , 
4, 0.999887, 0, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, 0.427537, 0, -1, 0.483331,-99) , 
4, 0.999524, 0, 0, 0.500661,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0148991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494905,-99) , 
8, -1.23623, 0, 0, 0.521251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484953,-99) , 
3, 8.72648, 1, 0, 0.504178,-99) , 
10, -1.66335, 1, 0, 0.505639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477749,-99) , 
8, -1.8571, 0, 0, 0.504694,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0053653);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.501859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469037,-99) , 
3, 8.99096, 1, 0, 0.50093,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0169664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0736344, 0, 1, 0.511934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45993,-99) , 
5, -0.854998, 0, 0, 0.498456,-99) , 
10, 1.50045, 0, 0, 0.501436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485184,-99) , 
9, -3.26055, 0, 0, 0.507848,-99) , 
NN(
0, 
0, 
-1, 0.612253, 0, -1, 0.473871,-99) , 
10, -0.82413, 1, 0, 0.490288,-99) , 
5, 0.522474, 1, 0, 0.49941,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.031786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.349747, 1, 1, 0.526792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483479,-99) , 
8, -0.0271441, 0, 0, 0.499141,-99) , 
9, -2.55178, 0, 0, 0.510735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476554,-99) , 
4, 0.999905, 0, 0, 0.502639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478288,-99) , 
9, -3.16021, 1, 0, 0.488988,-99) , 
10, 0.0985529, 0, 0, 0.496792,-99) , 
5, 0.237009, 0, 0, 0.50132,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0111962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488628,-99) , 
2, 0.0679979, 1, 0, 0.499083,-99) , 
NN(
0, 
0, 
-1, -0.334754, 0, -1, 0.491114,-99) , 
8, 0.71432, 1, 0, 0.496702,-99) , 
4, 0.999048, 1, 0, 0.497822,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0220785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497233,-99) , 
10, -0.0940359, 1, 0, 0.525122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460738,-99) , 
4, 0.999714, 0, 0, 0.498708,-99) , 
5, 0.522473, 0, 0, 0.502043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47918,-99) , 
10, -1.89514, 1, 0, 0.487164,-99) , 
5, -0.14662, 1, 0, 0.49576,-99) , 
9, -2.6054, 0, 0, 0.499877,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0205736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.533047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498838,-99) , 
9, -1.20517, 0, 0, 0.500919,-99) , 
4, 0.999524, 1, 0, 0.504557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492028,-99) , 
10, 0.739898, 0, 0, 0.50079,-99) , 
NN(
0, 
0, 
-1, 1.49019, 0, -1, 0.482891,-99) , 
9, -0.803682, 1, 0, 0.491738,-99) , 
5, -0.333828, 0, 0, 0.49913,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0185707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.15966, 0, 1, 0.507047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473045,-99) , 
5, -0.810685, 1, 0, 0.494775,-99) , 
9, -0.508422, 1, 0, 0.504649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497105,-99) , 
8, 1.03692, 0, 0, 0.500718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48104,-99) , 
2, 0.071706, 0, 0, 0.486282,-99) , 
9, -1.7121, 1, 0, 0.494958,-99) , 
0, 0.49809, 0, 0, 0.499883,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0181876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.074576, 0, 1, 0.505355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492068,-99) , 
5, -0.143759, 0, 0, 0.496817,-99) , 
9, -1.86901, 1, 0, 0.501629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490864,-99) , 
3, 4.6823, 0, 0, 0.496298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472809,-99) , 
8, -0.999979, 0, 0, 0.492852,-99) , 
0, 0.499995, 1, 0, 0.498622,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0190943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490863,-99) , 
8, -0.825826, 0, 0, 0.516248,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.4942,-99) , 
9, -3.33291, 1, 0, 0.497106,-99) , 
NN(
0, 
0, 
-1, -1.97956, 0, -1, 0.470941,-99) , 
8, -1.57135, 0, 0, 0.49557,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.015632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.769032, 0, 1, 0.50674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478492,-99) , 
4, 0.999524, 0, 0, 0.504623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496707,-99) , 
5, 0.681073, 1, 0, 0.50882,-99) , 
NN(
0, 
0, 
-1, -1.27334, 0, -1, 0.493268,-99) , 
5, 0.522473, 0, 0, 0.496091,-99) , 
0, 0.49809, 1, 0, 0.500316,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_6_8_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_6_8_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_6_8_noP *ReadBDT_maker_LHC19c2a_6_8_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_6_8_noP(theInpVar);
  }
}
