#include "LHC19c2a_TMVAClassification_BDT_4_6_noNsigma.class.h"

double ReadBDT_LHC19c2a_4_6_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_4_6_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.22594322637972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.813913, 1, 1, 0.580251,-99) , 
NN(
0, 
0, 
-1, -0.252928, 0, -1, 0.433194,-99) , 
4, 0.999932, 0, 0, 0.550546,-99) , 
NN(
0, 
0, 
-1, -0.158128, 0, -1, 0.162185,-99) , 
4, 0.999524, 0, 0, 0.500483,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.16301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.733285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301802,-99) , 
6, 0.0237968, 1, 0, 0.523711,-99) , 
5, -0.906608, 1, 0, 0.53329,-99) , 
NN(
0, 
0, 
-1, -0.158591, 0, -1, 0.18367,-99) , 
4, 0.999524, 0, 0, 0.488957,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.158481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.710913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458714,-99) , 
4, 0.999977, 0, 0, 0.505613,-99) , 
5, -0.906947, 1, 0, 0.514764,-99) , 
NN(
0, 
0, 
-1, -0.25217, 0, -1, 0.192799,-99) , 
4, 0.999524, 0, 0, 0.474955,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.113832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309172,-99) , 
6, 0.0237659, 1, 0, 0.502388,-99) , 
5, -0.906947, 1, 0, 0.510902,-99) , 
NN(
0, 
0, 
-1, -0.162125, 0, -1, 0.204609,-99) , 
4, 0.999524, 0, 0, 0.473628,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.137151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44882,-99) , 
5, -0.375291, 0, 0, 0.488792,-99) , 
5, -0.906953, 1, 0, 0.497616,-99) , 
NN(
0, 
0, 
-1, -0.1587, 0, -1, 0.211208,-99) , 
4, 0.999524, 0, 0, 0.46342,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.103417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671306,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.485426,-99) , 
5, -0.906955, 1, 0, 0.493605,-99) , 
NN(
0, 
0, 
-1, -0.251638, 0, -1, 0.222389,-99) , 
4, 0.999524, 0, 0, 0.461781,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.0994748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.86659, 1, 1, 0.607334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395936,-99) , 
4, 0.999819, 0, 0, 0.493895,-99) , 
5, -0.81323, 1, 0, 0.505257,-99) , 
NN(
0, 
0, 
-1, -0.15869, 0, -1, 0.234324,-99) , 
4, 0.999524, 0, 0, 0.473878,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.103713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.866599, 1, 1, 0.595342,-99) , 
NN(
0, 
0, 
-1, 0.0238025, 1, -1, 0.483063,-99) , 
5, -0.813238, 1, 0, 0.494321,-99) , 
NN(
0, 
0, 
-1, -0.25217, 0, -1, 0.240069,-99) , 
4, 0.999524, 0, 0, 0.465263,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.103585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367075,-99) , 
6, 0.0237968, 1, 0, 0.511959,-99) , 
NN(
0, 
0, 
-1, -0.164907, 0, -1, 0.386639,-99) , 
4, 0.999773, 0, 0, 0.499246,-99) , 
NN(
0, 
0, 
-1, 0.0289474, 0, -1, 0.194305,-99) , 
4, 0.999048, 0, 0, 0.477026,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0843819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492012,-99) , 
5, -0.907305, 1, 0, 0.498215,-99) , 
NN(
0, 
0, 
-1, -0.15957, 0, -1, 0.385445,-99) , 
4, 0.999728, 0, 0, 0.488499,-99) , 
NN(
0, 
0, 
-1, 0.0282469, 0, -1, 0.199277,-99) , 
4, 0.999048, 0, 0, 0.467854,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0795925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814382, 1, 1, 0.511494,-99) , 
NN(
0, 
0, 
-1, -0.252933, 0, -1, 0.427666,-99) , 
4, 0.999864, 0, 0, 0.498819,-99) , 
NN(
0, 
0, 
-1, 0.0260521, 0, -1, 0.2108,-99) , 
4, 0.999048, 0, 0, 0.478417,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.205778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433786,-99) , 
6, 0.00566575, 0, 0, 0.497832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357625,-99) , 
6, 0.0237968, 1, 0, 0.492437,-99) , 
NN(
0, 
0, 
-1, 0.0289474, 0, -1, 0.214562,-99) , 
4, 0.999048, 0, 0, 0.472912,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0966798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432997,-99) , 
4, 0.999728, 0, 0, 0.515975,-99) , 
NN(
0, 
0, 
-1, -0.0742796, 0, -1, 0.453981,-99) , 
0, 0.500947, 1, 0, 0.500007,-99) , 
NN(
0, 
0, 
-1, 0.122513, 0, -1, 0.228884,-99) , 
4, 0.999048, 0, 0, 0.481447,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0824864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.520985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368126,-99) , 
4, 0.999955, 0, 0, 0.472175,-99) , 
5, -0.252965, 0, 0, 0.496068,-99) , 
NN(
0, 
0, 
-1, 0.122485, 0, -1, 0.23873,-99) , 
4, 0.999048, 0, 0, 0.478594,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0859192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486513,-99) , 
0, 0.499995, 1, 0, 0.512497,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.4646,-99) , 
5, -0.25596, 0, 0, 0.488173,-99) , 
NN(
0, 
0, 
-1, 0.122513, 0, -1, 0.2581,-99) , 
4, 0.999048, 0, 0, 0.47256,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0753654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45152,-99) , 
5, -0.463904, 0, 0, 0.48579,-99) , 
5, -0.906955, 1, 0, 0.490994,-99) , 
NN(
0, 
0, 
-1, 0.122485, 0, -1, 0.257611,-99) , 
4, 0.999048, 0, 0, 0.47527,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0788148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.866581, 1, 1, 0.562998,-99) , 
NN(
0, 
0, 
-1, 0.0237494, 1, -1, 0.478957,-99) , 
5, -0.81322, 1, 0, 0.487132,-99) , 
NN(
0, 
0, 
-1, 0.205466, 0, -1, 0.259108,-99) , 
4, 0.999048, 0, 0, 0.472124,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.168302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439437,-99) , 
6, 0.00453361, 0, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376448,-99) , 
6, 0.0238024, 1, 0, 0.49725,-99) , 
NN(
0, 
0, 
-1, 0.212565, 0, -1, 0.262728,-99) , 
4, 0.999048, 0, 0, 0.48208,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0529502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499374,-99) , 
5, -0.814422, 1, 0, 0.505823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297054,-99) , 
5, -0.0757794, 0, 0, 0.429293,-99) , 
4, 0.999683, 0, 0, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0.216023, 0, -1, 0.297166,-99) , 
4, 0.999048, 0, 0, 0.486956,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0687384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419923,-99) , 
6, 0.0237969, 1, 0, 0.509862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301018,-99) , 
5, -0.0661626, 0, 0, 0.43346,-99) , 
4, 0.999683, 0, 0, 0.504269,-99) , 
NN(
0, 
0, 
-1, 0.216023, 0, -1, 0.300053,-99) , 
4, 0.999048, 0, 0, 0.490982,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0676778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485333,-99) , 
4, 0.999985, 0, 0, 0.50378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303622,-99) , 
5, -0.0697375, 0, 0, 0.421811,-99) , 
4, 0.999683, 0, 0, 0.497923,-99) , 
NN(
0, 
0, 
-1, 0.204509, 0, -1, 0.301721,-99) , 
4, 0.999048, 0, 0, 0.485362,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0464248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497628,-99) , 
5, -0.906991, 1, 0, 0.501337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316364,-99) , 
5, -0.0661626, 0, 0, 0.427164,-99) , 
4, 0.999683, 0, 0, 0.495979,-99) , 
NN(
0, 
0, 
-1, 0.215159, 0, -1, 0.307535,-99) , 
4, 0.999048, 0, 0, 0.483946,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.111276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478341,-99) , 
6, 0.00793382, 0, 0, 0.507921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421689,-99) , 
6, 0.0238025, 1, 0, 0.504584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330848,-99) , 
4, 0.998617, 0, 0, 0.425928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2044,-99) , 
5, -0.158727, 0, 0, 0.353802,-99) , 
4, 0.999524, 0, 0, 0.48888,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0808344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.531465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455422,-99) , 
4, 0.999977, 0, 0, 0.50001,-99) , 
5, -0.164015, 0, 0, 0.513565,-99) , 
NN(
0, 
0, 
-1, -0.255202, 0, -1, 0.362245,-99) , 
4, 0.999524, 0, 0, 0.497826,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0558071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430241,-99) , 
6, 0.0237708, 1, 0, 0.509217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326043,-99) , 
5, -0.159406, 0, 0, 0.433376,-99) , 
4, 0.999683, 0, 0, 0.503765,-99) , 
NN(
0, 
0, 
-1, 0.308659, 0, -1, 0.331085,-99) , 
4, 0.999048, 0, 0, 0.492884,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.059376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474185,-99) , 
5, -0.461954, 0, 0, 0.497439,-99) , 
5, -0.906615, 1, 0, 0.500321,-99) , 
NN(
0, 
0, 
-1, -0.255242, 0, -1, 0.362971,-99) , 
4, 0.999524, 0, 0, 0.486343,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0461339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494427,-99) , 
5, -0.814422, 1, 0, 0.499082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373853,-99) , 
5, 0.213951, 0, 0, 0.430005,-99) , 
4, 0.999683, 0, 0, 0.494178,-99) , 
NN(
0, 
0, 
-1, 0.308704, 0, -1, 0.339421,-99) , 
4, 0.999048, 0, 0, 0.484558,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.119406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447397,-99) , 
6, 0.00339813, 0, 0, 0.504514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438784,-99) , 
6, 0.0237891, 1, 0, 0.502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360616,-99) , 
4, 0.998617, 0, 0, 0.437523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229499,-99) , 
5, -0.252198, 0, 0, 0.378316,-99) , 
4, 0.999524, 0, 0, 0.489507,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0508117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488525,-99) , 
0, 0.499042, 1, 0, 0.502892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425538,-99) , 
4, 0.999683, 0, 0, 0.500624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39968,-99) , 
4, 0.998617, 0, 0, 0.458037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254534,-99) , 
5, -0.0645905, 0, 0, 0.386831,-99) , 
4, 0.999524, 0, 0, 0.488969,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0419223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495525,-99) , 
5, -0.162956, 0, 0, 0.504126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436533,-99) , 
4, 0.999683, 0, 0, 0.50211,-99) , 
NN(
0, 
0, 
-1, -0.1587, 0, -1, 0.389976,-99) , 
4, 0.999524, 0, 0, 0.490735,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0504481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488323,-99) , 
5, -0.867125, 1, 0, 0.537179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468977,-99) , 
5, -0.561537, 0, 0, 0.4973,-99) , 
5, -0.813979, 1, 0, 0.501228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390597,-99) , 
4, 0.998617, 0, 0, 0.450946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264512,-99) , 
5, -0.0705116, 0, 0, 0.385705,-99) , 
4, 0.999524, 0, 0, 0.48956,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0359837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493482,-99) , 
5, -0.867081, 1, 0, 0.534265,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.495429,-99) , 
5, -0.813915, 1, 0, 0.499281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403334,-99) , 
4, 0.998617, 0, 0, 0.456014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260765,-99) , 
5, -0.164076, 0, 0, 0.39551,-99) , 
4, 0.999524, 0, 0, 0.488746,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0301779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814681, 1, 1, 0.503504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447224,-99) , 
4, 0.999705, 0, 0, 0.501494,-99) , 
NN(
0, 
0, 
-1, -0.255214, 0, -1, 0.398196,-99) , 
4, 0.999524, 0, 0, 0.490986,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0380429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495517,-99) , 
5, -0.813889, 1, 0, 0.498858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439943,-99) , 
3, 9.42789, 1, 0, 0.49673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402384,-99) , 
4, 0.998617, 0, 0, 0.45867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28548,-99) , 
5, -0.0672507, 0, 0, 0.39789,-99) , 
4, 0.999524, 0, 0, 0.48671,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0721509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486393,-99) , 
6, 0.0090621, 0, 0, 0.504877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450116,-99) , 
6, 0.0237891, 1, 0, 0.502769,-99) , 
NN(
0, 
0, 
-1, -0.256423, 0, -1, 0.397324,-99) , 
4, 0.999524, 0, 0, 0.49219,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0451179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465482,-99) , 
4, 0.999705, 0, 0, 0.511443,-99) , 
NN(
0, 
0, 
-1, -0.356518, 0, -1, 0.479807,-99) , 
0, 0.503804, 1, 0, 0.508408,-99) , 
NN(
0, 
0, 
-1, -0.251562, 0, -1, 0.404319,-99) , 
4, 0.999524, 0, 0, 0.497961,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0334312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
0, 0.497138, 1, 0, 0.506204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453848,-99) , 
4, 0.999683, 0, 0, 0.504673,-99) , 
NN(
0, 
0, 
-1, -0.253658, 0, -1, 0.406255,-99) , 
4, 0.999524, 0, 0, 0.494913,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0757548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48365,-99) , 
6, 0.00679903, 0, 0, 0.50733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456324,-99) , 
6, 0.0237968, 1, 0, 0.505398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435375,-99) , 
4, 0.998617, 0, 0, 0.474207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281072,-99) , 
5, -0.158727, 0, 0, 0.41523,-99) , 
4, 0.999524, 0, 0, 0.496417,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0418267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.533095, 0, 1, 0.513434,-99) , 
NN(
0, 
0, 
-1, -0.265358, 0, -1, 0.479923,-99) , 
3, 7.96418, 1, 0, 0.511344,-99) , 
NN(
0, 
0, 
-1, -0.253691, 0, -1, 0.415178,-99) , 
4, 0.999524, 0, 0, 0.501787,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0300227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0695752, 0, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459371,-99) , 
4, 0.999683, 0, 0, 0.505965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448624,-99) , 
4, 0.998617, 0, 0, 0.479088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29402,-99) , 
5, -0.252198, 0, 0, 0.428835,-99) , 
4, 0.999524, 0, 0, 0.498225,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0277757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466952,-99) , 
6, 0.0237891, 1, 0, 0.502548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458515,-99) , 
3, 9.42789, 1, 0, 0.500981,-99) , 
NN(
0, 
0, 
-1, -0.253794, 0, -1, 0.417803,-99) , 
4, 0.999524, 0, 0, 0.492778,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0288594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493316,-99) , 
5, -0.0662032, 0, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43757,-99) , 
4, 0.99941, 0, 0, 0.498169,-99) , 
NN(
0, 
0, 
-1, 0.403099, 0, -1, 0.414119,-99) , 
4, 0.999048, 0, 0, 0.493129,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0180166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468395,-99) , 
3, 8.56798, 1, 0, 0.499111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440875,-99) , 
4, 0.99941, 0, 0, 0.497456,-99) , 
NN(
0, 
0, 
-1, 0.40212, 0, -1, 0.409178,-99) , 
4, 0.999048, 0, 0, 0.492206,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0229088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497242,-99) , 
5, -0.907107, 1, 0, 0.498716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449066,-99) , 
4, 0.999592, 0, 0, 0.496125,-99) , 
NN(
0, 
0, 
-1, 0.402173, 0, -1, 0.409741,-99) , 
4, 0.999048, 0, 0, 0.490973,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0269741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0741565, 0, 1, 0.505946,-99) , 
NN(
0, 
0, 
-1, 0.999909, 0, -1, 0.49181,-99) , 
5, -0.533102, 0, 0, 0.501387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451477,-99) , 
4, 0.998617, 0, 0, 0.4847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294606,-99) , 
5, -0.251613, 0, 0, 0.434224,-99) , 
4, 0.999524, 0, 0, 0.494729,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0263029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477401,-99) , 
5, -0.867081, 1, 0, 0.521167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479784,-99) , 
5, -0.645554, 0, 0, 0.497405,-99) , 
5, -0.813915, 1, 0, 0.499718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462664,-99) , 
5, 0.559011, 0, 0, 0.485494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301678,-99) , 
5, -0.251626, 0, 0, 0.436131,-99) , 
4, 0.999524, 0, 0, 0.493399,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0321325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490715,-99) , 
5, -0.867299, 1, 0, 0.519677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491537,-99) , 
2, 0.072551, 0, 0, 0.494565,-99) , 
5, -0.81422, 1, 0, 0.497032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458273,-99) , 
0, 0.499995, 1, 0, 0.487239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293893,-99) , 
5, -0.251562, 0, 0, 0.436254,-99) , 
4, 0.999524, 0, 0, 0.491011,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0199627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467497,-99) , 
3, 8.50346, 1, 0, 0.500485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44088,-99) , 
4, 0.99941, 0, 0, 0.498779,-99) , 
NN(
0, 
0, 
-1, 0.40212, 0, -1, 0.415803,-99) , 
4, 0.999048, 0, 0, 0.493903,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.028825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492715,-99) , 
4, 0.999985, 0, 0, 0.500173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45073,-99) , 
4, 0.999683, 0, 0, 0.498746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472634,-99) , 
4, 0.998617, 0, 0, 0.495042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326311,-99) , 
5, -0.0645564, 0, 0, 0.438071,-99) , 
4, 0.999524, 0, 0, 0.492769,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0305035);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488223,-99) , 
4, 0.999989, 0, 0, 0.49777,-99) , 
NN(
0, 
0, 
-1, -0.346304, 0, -1, 0.468706,-99) , 
4, 0.999773, 0, 0, 0.494931,-99) , 
NN(
0, 
0, 
-1, 0.403099, 0, -1, 0.431107,-99) , 
4, 0.999048, 0, 0, 0.491089,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0363437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492994,-99) , 
5, -0.351971, 0, 0, 0.511845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489737,-99) , 
2, 0.0793699, 0, 0, 0.493653,-99) , 
2, -0.0699269, 1, 0, 0.49657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476762,-99) , 
4, 0.998617, 0, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338473,-99) , 
5, 0.0289474, 0, 0, 0.440266,-99) , 
4, 0.999524, 0, 0, 0.491011,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0240786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496894,-99) , 
2, -0.0725347, 1, 0, 0.499976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467388,-99) , 
3, 9.42789, 1, 0, 0.498809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478416,-99) , 
5, 0.615755, 0, 0, 0.495544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315712,-99) , 
5, -0.252198, 0, 0, 0.448196,-99) , 
4, 0.999524, 0, 0, 0.493763,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0709303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453042,-99) , 
6, 0.00226322, 0, 0, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473412,-99) , 
6, 0.0237659, 1, 0, 0.501977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465446,-99) , 
4, 0.998617, 0, 0, 0.490816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310773,-99) , 
5, -0.25207, 0, 0, 0.443715,-99) , 
4, 0.999524, 0, 0, 0.49625,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0184467);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470518,-99) , 
0, 0.505709, 1, 0, 0.499911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472439,-99) , 
3, 8.50425, 1, 0, 0.498517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485211,-99) , 
0, 0.499043, 1, 0, 0.503525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339592,-99) , 
5, -0.0645905, 0, 0, 0.449431,-99) , 
4, 0.999524, 0, 0, 0.49366,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0153992);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.99941, 0, -1, 0.495956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356377,-99) , 
5, 0.396394, 0, 0, 0.438988,-99) , 
4, 0.999048, 0, 0, 0.492602,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.030268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481952,-99) , 
4, 0.999977, 1, 0, 0.508997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436053,-99) , 
4, 0.999841, 0, 0, 0.496395,-99) , 
5, 0.116061, 0, 0, 0.499847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46716,-99) , 
5, 0.442173, 0, 0, 0.494049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333502,-99) , 
5, -0.252198, 0, 0, 0.452063,-99) , 
4, 0.999524, 0, 0, 0.495099,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0290851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495104,-99) , 
4, 0.999932, 1, 0, 0.509388,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.492601,-99) , 
5, 0.114646, 0, 0, 0.497193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473845,-99) , 
2, 0.0713933, 0, 0, 0.485532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322919,-99) , 
5, -0.251666, 0, 0, 0.442855,-99) , 
4, 0.999524, 0, 0, 0.491913,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0180796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499658,-99) , 
5, -0.813985, 1, 0, 0.501596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478346,-99) , 
2, 0.0540644, 0, 0, 0.484334,-99) , 
0, 0.502852, 1, 0, 0.499229,-99) , 
NN(
0, 
0, 
-1, -0.253754, 0, -1, 0.446511,-99) , 
4, 0.999524, 0, 0, 0.494068,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0238183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.153015, 0, 1, 0.504614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464739,-99) , 
4, 0.999977, 0, 0, 0.490274,-99) , 
3, 4.77643, 1, 0, 0.5018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471763,-99) , 
5, 0.612312, 0, 0, 0.491081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334998,-99) , 
5, -0.253766, 0, 0, 0.450488,-99) , 
4, 0.999524, 0, 0, 0.496787,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0259508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496575,-99) , 
4, 0.999932, 1, 0, 0.512346,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.491285,-99) , 
5, 0.12055, 0, 0, 0.4973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435767,-99) , 
4, 0.998571, 0, 0, 0.494937,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0183585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473879,-99) , 
6, 0.0237969, 1, 0, 0.502668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457276,-99) , 
3, 9.42932, 1, 0, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0.399109, 0, -1, 0.440384,-99) , 
4, 0.999048, 0, 0, 0.497519,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0330074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
4, 0.999994, 0, 0, 0.501791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411969,-99) , 
5, -0.441813, 0, 0, 0.481911,-99) , 
4, 0.999864, 0, 0, 0.498856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369478,-99) , 
5, 0.399133, 0, 0, 0.443593,-99) , 
4, 0.999048, 0, 0, 0.495651,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0154111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487231,-99) , 
4, 0.99986, 0, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448159,-99) , 
4, 0.99941, 0, 0, 0.498732,-99) , 
NN(
0, 
0, 
-1, 0.403124, 0, -1, 0.443163,-99) , 
4, 0.999048, 0, 0, 0.495475,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0203891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49583,-99) , 
5, -0.162632, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467664,-99) , 
4, 0.999683, 0, 0, 0.499213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48099,-99) , 
5, 0.615755, 0, 0, 0.491873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349352,-99) , 
5, -0.252198, 0, 0, 0.45453,-99) , 
4, 0.999524, 0, 0, 0.494834,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0171166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497213,-99) , 
2, -0.0665533, 1, 0, 0.499674,-99) , 
NN(
0, 
0, 
-1, 0.120575, 0, -1, 0.470509,-99) , 
4, 0.999637, 0, 0, 0.497915,-99) , 
NN(
0, 
0, 
-1, 0.389886, 0, -1, 0.447948,-99) , 
4, 0.999048, 0, 0, 0.494993,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0157141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499359,-99) , 
5, -0.813913, 1, 0, 0.501262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444469,-99) , 
5, 0.209348, 0, 0, 0.474118,-99) , 
4, 0.999683, 0, 0, 0.499371,-99) , 
NN(
0, 
0, 
-1, 0.403099, 0, -1, 0.442439,-99) , 
4, 0.999048, 0, 0, 0.49607,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0256277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497148,-99) , 
4, 0.99999, 0, 0, 0.50392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439118,-99) , 
5, 0.0272896, 0, 0, 0.476558,-99) , 
4, 0.999796, 0, 0, 0.502075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48252,-99) , 
0, 0.499043, 1, 0, 0.501806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379073,-99) , 
5, -0.0645662, 0, 0, 0.460862,-99) , 
4, 0.999524, 0, 0, 0.498043,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0167769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49867,-99) , 
2, 0.0713849, 0, 0, 0.500789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392048,-99) , 
5, -0.252947, 0, 0, 0.467501,-99) , 
4, 0.99966, 0, 0, 0.497975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42581,-99) , 
4, 0.998572, 0, 0, 0.495295,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0229826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
5, 0.581689, 1, 0, 0.5046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476252,-99) , 
4, 0.999751, 0, 0, 0.503191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493157,-99) , 
4, 0.998617, 0, 0, 0.504002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399685,-99) , 
5, 0.117121, 0, 0, 0.461645,-99) , 
4, 0.999524, 0, 0, 0.49911,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0234679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0709224, 1, 1, 0.506827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364779,-99) , 
4, 0.99981, 0, 0, 0.490876,-99) , 
5, -0.533102, 0, 0, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443544,-99) , 
3, 8.72033, 1, 0, 0.499178,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0209082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493162,-99) , 
3, 4.18831, 1, 0, 0.511747,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.495784,-99) , 
2, -0.0699269, 1, 0, 0.498357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483323,-99) , 
5, 0.562389, 0, 0, 0.495094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38971,-99) , 
5, 0.0282568, 0, 0, 0.455844,-99) , 
4, 0.999524, 0, 0, 0.494235,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0192545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511623,-99) , 
NN(
0, 
0, 
-1, 0.999238, 0, -1, 0.493903,-99) , 
5, 0.11711, 0, 0, 0.499274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442086,-99) , 
3, 9.39852, 1, 0, 0.49716,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0162888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482957,-99) , 
0, 0.504757, 1, 0, 0.502394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460646,-99) , 
4, 0.99932, 0, 0, 0.500677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435962,-99) , 
4, 0.998571, 0, 0, 0.498266,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0143609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499854,-99) , 
2, 0.0711871, 0, 0, 0.502168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470597,-99) , 
4, 0.999683, 0, 0, 0.501239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475305,-99) , 
0, 0.496186, 0, 0, 0.491075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375308,-99) , 
5, -0.162152, 0, 0, 0.457281,-99) , 
4, 0.999524, 0, 0, 0.496978,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0230712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814424, 1, 1, 0.507691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493621,-99) , 
2, -0.0714544, 1, 0, 0.496716,-99) , 
0, 0.49809, 1, 0, 0.502113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493531,-99) , 
0, 0.497139, 0, 0, 0.505055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397091,-99) , 
5, 0.122513, 0, 0, 0.4614,-99) , 
4, 0.999524, 0, 0, 0.49813,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0185106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388735,-99) , 
4, 0.999333, 0, 0, 0.495512,-99) , 
5, 0.0271751, 0, 0, 0.500977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443025,-99) , 
3, 8.85502, 1, 0, 0.498419,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0182832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495461,-99) , 
5, -0.867124, 1, 0, 0.514932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484652,-99) , 
5, -0.561533, 0, 0, 0.496588,-99) , 
5, -0.813979, 1, 0, 0.498395,-99) , 
NN(
0, 
0, 
-1, -0.0689365, 0, -1, 0.450847,-99) , 
4, 0.999524, 0, 0, 0.493837,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0137897);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.493106,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0152283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
5, -0.813907, 1, 0, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468495,-99) , 
4, 0.999705, 0, 0, 0.499603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483097,-99) , 
0, 0.499043, 1, 0, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386516,-99) , 
5, -0.0672058, 0, 0, 0.464298,-99) , 
4, 0.999524, 0, 0, 0.496191,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.020506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496298,-99) , 
4, 0.99999, 0, 0, 0.501322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441435,-99) , 
5, 0.0192589, 0, 0, 0.475247,-99) , 
4, 0.999796, 0, 0, 0.499577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473062,-99) , 
0, 0.499043, 1, 0, 0.4904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396633,-99) , 
5, -0.0672058, 0, 0, 0.459303,-99) , 
4, 0.999524, 0, 0, 0.495688,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0123571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0707905, 1, 1, 0.502926,-99) , 
NN(
0, 
0, 
-1, 0.999413, 0, -1, 0.480668,-99) , 
4, 0.999637, 0, 0, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0.402102, 0, -1, 0.457033,-99) , 
4, 0.999048, 0, 0, 0.499001,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0151941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494142,-99) , 
3, 4.2263, 1, 0, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455787,-99) , 
4, 0.999411, 0, 0, 0.500115,-99) , 
NN(
0, 
0, 
-1, 0.399168, 0, -1, 0.45385,-99) , 
4, 0.999048, 0, 0, 0.497464,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.00919875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466664,-99) , 
6, 0.0237891, 1, 0, 0.49875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459597,-99) , 
0, 0.489519, 0, 0, 0.497627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436509,-99) , 
3, 9.39852, 1, 0, 0.495404,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0209383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493504,-99) , 
5, 0.12055, 0, 0, 0.49812,-99) , 
NN(
0, 
0, 
-1, 2.1688, 0, -1, 0.468563,-99) , 
0, 0.504757, 1, 0, 0.496204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454101,-99) , 
3, 8.70229, 1, 0, 0.494235,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0255807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495765,-99) , 
4, 0.999995, 0, 0, 0.502531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465414,-99) , 
5, 0.213937, 0, 0, 0.483872,-99) , 
4, 0.999887, 0, 0, 0.500097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480633,-99) , 
2, 0.0713695, 0, 0, 0.491291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392732,-99) , 
5, -0.251666, 0, 0, 0.46554,-99) , 
4, 0.999524, 0, 0, 0.496752,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0203051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486137,-99) , 
5, 0.395071, 1, 0, 0.502375,-99) , 
NN(
0, 
0, 
-1, -0.346325, 0, -1, 0.474683,-99) , 
4, 0.999773, 0, 0, 0.499691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402138,-99) , 
5, 0.496637, 0, 0, 0.453507,-99) , 
4, 0.999048, 0, 0, 0.497056,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0186091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497036,-99) , 
2, -0.0592648, 1, 0, 0.499844,-99) , 
NN(
0, 
0, 
-1, -0.533036, 0, -1, 0.482038,-99) , 
4, 0.999864, 0, 0, 0.497233,-99) , 
NN(
0, 
0, 
-1, 0.483619, 0, -1, 0.448501,-99) , 
4, 0.999048, 0, 0, 0.494463,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0485941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485325,-99) , 
6, 0.00905541, 0, 0, 0.498228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468434,-99) , 
6, 0.0237708, 1, 0, 0.497098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450601,-99) , 
4, 0.998572, 0, 0, 0.495366,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0580551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463117,-99) , 
6, 0.00226189, 0, 0, 0.504736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461529,-99) , 
6, 0.0237495, 1, 0, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459325,-99) , 
3, 8.72033, 1, 0, 0.50109,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0225018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492721,-99) , 
5, -0.350514, 0, 0, 0.51678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491346,-99) , 
2, -0.00339379, 1, 0, 0.499611,-99) , 
2, 0.0714061, 0, 0, 0.502588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464889,-99) , 
3, 8.8365, 1, 0, 0.500915,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0130659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
2, 0.075053, 0, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0.497137, 1, -1, 0.476226,-99) , 
4, 0.999637, 0, 0, 0.499759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411317,-99) , 
5, 0.4895, 0, 0, 0.461697,-99) , 
4, 0.999048, 0, 0, 0.497568,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0143188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494461,-99) , 
4, 0.999883, 0, 0, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476128,-99) , 
4, 0.999388, 0, 0, 0.502116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459026,-99) , 
4, 0.998571, 0, 0, 0.500496,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0158898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488565,-99) , 
3, 4.26957, 1, 0, 0.512075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478915,-99) , 
0, 0.504757, 1, 0, 0.499892,-99) , 
2, 0.0717038, 0, 0, 0.50193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41252,-99) , 
5, 0.399109, 0, 0, 0.469391,-99) , 
4, 0.999048, 0, 0, 0.500044,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0161001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493777,-99) , 
3, 4.43617, 1, 0, 0.513059,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.496114,-99) , 
2, 0.071481, 0, 0, 0.498962,-99) , 
NN(
0, 
0, 
-1, 0.403099, 0, -1, 0.463826,-99) , 
4, 0.999048, 0, 0, 0.496935,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0157577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717153, 0, 1, 0.506232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427022,-99) , 
4, 0.999864, 0, 0, 0.492703,-99) , 
5, -0.534779, 0, 0, 0.502001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458492,-99) , 
4, 0.998572, 0, 0, 0.500369,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0141651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0713487, 0, 1, 0.505485,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.494501,-99) , 
5, -0.252964, 0, 0, 0.499967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45073,-99) , 
4, 0.998571, 0, 0, 0.498178,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0230339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472045,-99) , 
0, 0.493328, 0, 0, 0.51401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494504,-99) , 
2, -0.0713047, 1, 0, 0.498036,-99) , 
3, 0.995785, 1, 0, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452886,-99) , 
3, 9.41652, 1, 0, 0.499863,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.018904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.508831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435877,-99) , 
4, 0.99981, 0, 0, 0.495025,-99) , 
5, -0.0713622, 0, 0, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458582,-99) , 
3, 9.41367, 1, 0, 0.499084,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.01279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497194,-99) , 
2, 0.0716863, 0, 0, 0.499078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471021,-99) , 
4, 0.99941, 0, 0, 0.498297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429591,-99) , 
5, 0.484479, 0, 0, 0.469101,-99) , 
4, 0.999048, 0, 0, 0.496616,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0106913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498981,-99) , 
2, 0.0710989, 0, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468629,-99) , 
4, 0.99941, 0, 0, 0.500178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430355,-99) , 
5, 0.403099, 0, 0, 0.47264,-99) , 
4, 0.999048, 0, 0, 0.498576,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0131487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499719,-99) , 
2, 0.0657386, 0, 0, 0.503475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447363,-99) , 
4, 0.999932, 0, 0, 0.491637,-99) , 
3, 4.75332, 1, 0, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462817,-99) , 
4, 0.998571, 0, 0, 0.499773,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0161516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48853,-99) , 
5, -0.628747, 0, 0, 0.520485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467589,-99) , 
0, 0.504757, 1, 0, 0.499124,-99) , 
2, 0.0693155, 0, 0, 0.502298,-99) , 
NN(
0, 
0, 
-1, 0.214545, 1, -1, 0.483997,-99) , 
3, 4.75611, 1, 0, 0.498804,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0187561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478176,-99) , 
5, 0.581691, 1, 0, 0.502595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468738,-99) , 
5, 0.400711, 0, 0, 0.485105,-99) , 
4, 0.999819, 0, 0, 0.500564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431026,-99) , 
5, 0.496637, 0, 0, 0.469361,-99) , 
4, 0.999048, 0, 0, 0.498766,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0150756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490719,-99) , 
3, 4.4348, 1, 0, 0.501579,-99) , 
NN(
0, 
0, 
-1, -0.532614, 0, -1, 0.487418,-99) , 
0, 0.502444, 1, 0, 0.499188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460441,-99) , 
0, 0.489519, 0, 0, 0.498059,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0158425);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495166,-99) , 
4, 0.999932, 1, 0, 0.506389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464127,-99) , 
4, 0.999864, 0, 0, 0.49594,-99) , 
5, 0.116296, 0, 0, 0.498949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461183,-99) , 
4, 0.998571, 0, 0, 0.497538,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0264417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.44665, 1, 1, 0.522116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492868,-99) , 
2, -0.0773671, 1, 0, 0.498014,-99) , 
2, 0.0721658, 0, 0, 0.502386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491467,-99) , 
6, 0.0238025, 0, 0, 0.493821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394025,-99) , 
4, 0.999429, 0, 0, 0.489371,-99) , 
5, -0.0646031, 0, 0, 0.49461,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0115699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.813897, 1, 1, 0.502056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45427,-99) , 
5, -0.163827, 0, 0, 0.485713,-99) , 
4, 0.999819, 0, 0, 0.500773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484255,-99) , 
0, 0.496186, 0, 0, 0.497915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42835,-99) , 
5, -0.160523, 0, 0, 0.477549,-99) , 
4, 0.999524, 0, 0, 0.498531,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0345632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490744,-99) , 
6, 0.0101985, 0, 0, 0.499689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47357,-99) , 
6, 0.0237968, 1, 0, 0.498705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457735,-99) , 
4, 0.998571, 0, 0, 0.497192,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0102927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717642, 0, 1, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471446,-99) , 
4, 0.99932, 0, 0, 0.501546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45931,-99) , 
4, 0.998572, 0, 0, 0.499994,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0131021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0722356, 0, 1, 0.503524,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.490985,-99) , 
5, -0.535555, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458933,-99) , 
4, 0.998571, 0, 0, 0.498125,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0289037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492885,-99) , 
6, 0.0101946, 0, 0, 0.500695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477633,-99) , 
6, 0.0237891, 1, 0, 0.499827,-99) , 
NN(
0, 
0, 
-1, 0.496652, 0, -1, 0.470008,-99) , 
4, 0.999048, 0, 0, 0.498134,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.00892943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.209328, 0, 1, 0.502582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47449,-99) , 
0, 0.489519, 0, 0, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462595,-99) , 
4, 0.998571, 0, 0, 0.500373,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0164754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499062,-99) , 
4, 0.999932, 1, 0, 0.510039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480692,-99) , 
4, 0.999932, 0, 0, 0.498629,-99) , 
5, 0.213935, 0, 0, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469869,-99) , 
4, 0.998571, 0, 0, 0.500163,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0113893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499583,-99) , 
4, 0.999932, 1, 0, 0.510478,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.497214,-99) , 
5, 0.213929, 0, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469094,-99) , 
4, 0.998571, 0, 0, 0.499217,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0386177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537251, 0, 1, 0.543169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460288,-99) , 
6, 0.00150922, 0, 0, 0.491381,-99) , 
6, 0.00792339, 0, 0, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462679,-99) , 
6, 0.0237708, 1, 0, 0.500191,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0147861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.758872, 0, 1, 0.508236,-99) , 
NN(
0, 
0, 
-1, 0.999333, 0, -1, 0.494634,-99) , 
5, 0.119286, 0, 0, 0.498771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469921,-99) , 
0, 0.490471, 0, 0, 0.497375,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.011732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500486, 1, 1, 0.503723,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.492139,-99) , 
5, -0.532293, 0, 0, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47632,-99) , 
3, 8.72033, 1, 0, 0.49905,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.015968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497914,-99) , 
2, -0.0714968, 1, 0, 0.501818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478014,-99) , 
5, -0.164192, 0, 0, 0.489412,-99) , 
3, 4.41484, 1, 0, 0.499215,-99) , 
NN(
0, 
0, 
-1, 0.0722493, 0, -1, 0.483205,-99) , 
0, 0.503805, 1, 0, 0.497613,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0135104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0713933, 0, 1, 0.504153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431279,-99) , 
4, 0.999905, 0, 0, 0.493525,-99) , 
5, -0.5323, 0, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474234,-99) , 
0, 0.489519, 0, 0, 0.50016,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0169002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489305,-99) , 
3, 4.30076, 1, 0, 0.509389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496268,-99) , 
2, -0.152181, 1, 0, 0.498123,-99) , 
2, 0.0721109, 0, 0, 0.5,-99) , 
NN(
0, 
0, 
-1, 0.492381, 0, -1, 0.471121,-99) , 
4, 0.999048, 0, 0, 0.498369,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0190569);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495941,-99) , 
3, 1.5638, 1, 0, 0.504137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485165,-99) , 
5, -0.0652645, 0, 0, 0.493544,-99) , 
3, 4.47895, 1, 0, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471847,-99) , 
0, 0.489519, 0, 0, 0.501046,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0231214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46186, 1, 1, 0.520054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494689,-99) , 
3, 1.43189, 1, 0, 0.500529,-99) , 
2, 0.0726681, 0, 0, 0.503343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475627,-99) , 
2, -0.0780132, 0, 0, 0.496112,-99) , 
NN(
0, 
0, 
-1, -0.251943, 0, -1, 0.463133,-99) , 
2, 0.0716191, 1, 0, 0.485193,-99) , 
3, 4.75611, 1, 0, 0.499888,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.023771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
4, 0.999998, 0, 0, 0.505829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460002,-99) , 
3, 4.3367, 1, 0, 0.495064,-99) , 
4, 0.999955, 0, 0, 0.502654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441238,-99) , 
5, 0.481523, 0, 0, 0.472524,-99) , 
4, 0.999048, 0, 0, 0.500952,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0193966);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497758,-99) , 
4, 0.999997, 0, 0, 0.505745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4542,-99) , 
3, 4.27735, 1, 0, 0.493359,-99) , 
4, 0.999932, 0, 0, 0.502654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474707,-99) , 
4, 0.998571, 0, 0, 0.501609,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.017589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999996, 0, 1, 0.506934,-99) , 
NN(
0, 
0, 
-1, -0.53308, 0, -1, 0.489135,-99) , 
4, 0.999909, 0, 0, 0.503463,-99) , 
NN(
0, 
0, 
-1, 0.496652, 0, -1, 0.473005,-99) , 
4, 0.999048, 0, 0, 0.501737,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0177443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214355, 0, 1, 0.50502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492061,-99) , 
6, 0.0237969, 0, 0, 0.496558,-99) , 
5, -0.348959, 0, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46407,-99) , 
4, 0.998572, 0, 0, 0.499945,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0115926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499088,-99) , 
5, -0.720867, 1, 0, 0.501051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473285,-99) , 
4, 0.999705, 0, 0, 0.500086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499005,-99) , 
5, 0.642482, 0, 0, 0.508048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423268,-99) , 
5, -0.158727, 0, 0, 0.484029,-99) , 
4, 0.999524, 0, 0, 0.498544,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0130507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216008, 0, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471401,-99) , 
4, 0.999705, 0, 0, 0.502492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494969,-99) , 
5, 0.643655, 0, 0, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430096,-99) , 
5, -0.158091, 0, 0, 0.481182,-99) , 
4, 0.999524, 0, 0, 0.500454,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0131831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490317,-99) , 
3, 4.3908, 1, 0, 0.510646,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.496997,-99) , 
2, 0.0719683, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470309,-99) , 
4, 0.998572, 0, 0, 0.498282,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0177846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49841,-99) , 
4, 0.999998, 0, 0, 0.505465,-99) , 
NN(
0, 
0, 
-1, 4.7741, 1, -1, 0.492509,-99) , 
4, 0.999955, 0, 0, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0.4895, 0, -1, 0.471614,-99) , 
4, 0.999048, 0, 0, 0.499956,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0142405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495173,-99) , 
3, 3.86661, 1, 0, 0.515379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498107,-99) , 
2, 0.153561, 0, 0, 0.500307,-99) , 
2, -0.0708259, 1, 0, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478138,-99) , 
3, 8.8365, 1, 0, 0.501839,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0140364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498894,-99) , 
2, 0.0306365, 0, 0, 0.503673,-99) , 
2, -0.214211, 1, 0, 0.504854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479676,-99) , 
3, 8.65907, 1, 0, 0.503661,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0245775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0267859, 0, 1, 0.508838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483474,-99) , 
5, 0.213936, 0, 0, 0.495373,-99) , 
4, 0.999955, 0, 0, 0.505271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494423,-99) , 
4, 0.998617, 1, 0, 0.505342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435632,-99) , 
5, -0.1587, 0, 0, 0.485511,-99) , 
4, 0.999524, 0, 0, 0.503389,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.01416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490327,-99) , 
3, 4.43168, 1, 0, 0.515518,-99) , 
NN(
0, 
0, 
-1, 0.121676, 0, 1, 0.502975,-99) , 
2, -0.0714547, 1, 0, 0.505185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47422,-99) , 
0, 0.489519, 0, 0, 0.50429,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.00638191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215236, 0, 1, 0.501759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478364,-99) , 
4, 0.999184, 0, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474498,-99) , 
4, 0.998571, 0, 0, 0.500099,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0068838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215144, 0, 1, 0.501662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479081,-99) , 
4, 0.999252, 0, 0, 0.500897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466804,-99) , 
4, 0.998572, 0, 0, 0.499652,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0153157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.81485, 1, 1, 0.525032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475594,-99) , 
5, -0.25816, 0, 0, 0.491794,-99) , 
3, 4.44586, 1, 0, 0.511915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496224,-99) , 
5, 0.121685, 0, 0, 0.498744,-99) , 
NN(
0, 
0, 
-1, -0.25584, 1, -1, 0.483761,-99) , 
0, 0.491424, 0, 0, 0.497765,-99) , 
2, -0.0712558, 1, 0, 0.500333,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.00692025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213314, 1, 1, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476857,-99) , 
4, 0.99932, 0, 0, 0.500665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470636,-99) , 
4, 0.998572, 0, 0, 0.499569,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0178137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49866,-99) , 
3, 2.84536, 1, 0, 0.516817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46981,-99) , 
2, -0.207475, 0, 0, 0.488026,-99) , 
3, 4.51057, 1, 0, 0.50581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482431,-99) , 
3, 4.34582, 1, 0, 0.508361,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494876,-99) , 
2, 0.152932, 0, 0, 0.496376,-99) , 
2, -0.0714825, 1, 0, 0.49807,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0201806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477186,-99) , 
0, 0.502852, 1, 0, 0.510144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495255,-99) , 
0, 0.493328, 1, 0, 0.497678,-99) , 
3, 1.43587, 1, 0, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465697,-99) , 
3, 9.41367, 1, 0, 0.500772,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.012968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497946,-99) , 
2, -0.031663, 1, 0, 0.500946,-99) , 
2, 0.212714, 0, 0, 0.502029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442817,-99) , 
5, 0.495613, 0, 0, 0.477606,-99) , 
4, 0.999048, 0, 0, 0.500646,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0219126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496822,-99) , 
6, 0.0101861, 0, 0, 0.504427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481919,-99) , 
6, 0.0237681, 1, 0, 0.50359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471824,-99) , 
3, 9.39852, 1, 0, 0.502451,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0143076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213861, 1, 1, 0.505454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484371,-99) , 
4, 0.999388, 0, 0, 0.504498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459491,-99) , 
4, 0.998571, 0, 0, 0.502887,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0129847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487178,-99) , 
5, -0.467023, 0, 0, 0.519425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497771,-99) , 
2, -0.0712558, 1, 0, 0.500213,-99) , 
3, 0.499636, 1, 0, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477592,-99) , 
3, 8.70229, 1, 0, 0.500413,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0113357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213611, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478077,-99) , 
3, 9.41652, 1, 0, 0.504087,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.00938933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.164958, 0, 1, 0.521757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49927,-99) , 
2, 0.0511689, 0, 0, 0.501528,-99) , 
2, 0.214405, 0, 0, 0.502593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469158,-99) , 
3, 9.39852, 1, 0, 0.501416,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0340763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.629318, 0, 1, 0.538462,-99) , 
NN(
0, 
0, 
-1, 0.00129538, 0, -1, 0.490496,-99) , 
6, 0.0068006, 0, 0, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479085,-99) , 
6, 0.0238024, 1, 0, 0.501836,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0160049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213367, 0, 1, 0.506648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484235,-99) , 
5, 0.114367, 0, 0, 0.493734,-99) , 
3, 5.85222, 1, 0, 0.50539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479896,-99) , 
3, 9.39852, 1, 0, 0.504471,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0123124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498401,-99) , 
2, 0.0309262, 0, 0, 0.502369,-99) , 
2, -0.213899, 1, 0, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478785,-99) , 
4, 0.998571, 0, 0, 0.502488,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0201296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498314,-99) , 
4, 0.999997, 0, 0, 0.506759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460677,-99) , 
3, 4.33919, 1, 0, 0.498412,-99) , 
4, 0.999932, 0, 0, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483926,-99) , 
4, 0.998571, 0, 0, 0.503908,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0261922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.51305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481516,-99) , 
0, 0.492376, 0, 0, 0.509991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488364,-99) , 
4, 0.999964, 0, 0, 0.504341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422862,-99) , 
4, 0.999238, 0, 0, 0.501407,-99) , 
5, 0.210202, 0, 0, 0.503633,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0213178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0715513, 1, 1, 0.505175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4812,-99) , 
4, 0.999995, 0, 0, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437014,-99) , 
4, 0.999905, 0, 0, 0.494377,-99) , 
5, -0.628764, 0, 0, 0.502647,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0109729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0472322, 0, 1, 0.502906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450083,-99) , 
5, -0.43968, 0, 0, 0.490608,-99) , 
4, 0.999864, 0, 0, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472534,-99) , 
4, 0.998571, 0, 0, 0.499858,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.011794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488105,-99) , 
4, 0.999932, 0, 0, 0.49854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460135,-99) , 
4, 0.998572, 0, 0, 0.497398,-99) , 
5, 0.768756, 0, 0, 0.498153,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0146439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493729,-99) , 
2, -0.0306315, 1, 0, 0.497191,-99) , 
2, 0.214193, 0, 0, 0.498185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475972,-99) , 
3, 9.41001, 1, 0, 0.497384,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0247911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0119281, 0, 1, 0.507559,-99) , 
NN(
0, 
0, 
-1, -0.536637, 1, -1, 0.464333,-99) , 
6, 0.00113346, 0, 0, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479267,-99) , 
6, 0.0238024, 1, 0, 0.499826,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0149472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495451,-99) , 
5, -0.465224, 0, 0, 0.520489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495313,-99) , 
2, -0.21436, 1, 0, 0.496766,-99) , 
3, 0.515753, 1, 0, 0.498525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482426,-99) , 
3, 8.84534, 1, 0, 0.497818,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.00818988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.209275, 0, 1, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468896,-99) , 
4, 0.999683, 0, 0, 0.500249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493972,-99) , 
5, 0.483286, 1, 0, 0.504696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44749,-99) , 
5, -0.158102, 0, 0, 0.488219,-99) , 
4, 0.999524, 0, 0, 0.499097,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0122911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91291, 1, 1, 0.509287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491494,-99) , 
2, -0.00325879, 1, 0, 0.496982,-99) , 
2, 0.0715501, 0, 0, 0.499155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473591,-99) , 
3, 9.41367, 1, 0, 0.498252,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0175539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477073,-99) , 
4, 0.999683, 0, 0, 0.500562,-99) , 
4, 0.999048, 1, 0, 0.503468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495554,-99) , 
6, 0.0237891, 0, 0, 0.49798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424815,-99) , 
4, 0.999333, 0, 0, 0.495073,-99) , 
5, 0.0234486, 0, 0, 0.498052,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0181862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495996,-99) , 
4, 0.999994, 0, 0, 0.500715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476341,-99) , 
5, 0.400707, 0, 0, 0.490494,-99) , 
4, 0.999864, 0, 0, 0.499041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470895,-99) , 
4, 0.998572, 0, 0, 0.498013,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0079676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498468,-99) , 
4, 0.999524, 1, 0, 0.499639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48449,-99) , 
0, 0.505301, 1, 0, 0.498824,-99) , 
NN(
0, 
0, 
-1, 0.489428, 0, -1, 0.48544,-99) , 
0, 0.491424, 0, 0, 0.497843,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.00934812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499613,-99) , 
4, 0.999524, 1, 0, 0.502095,-99) , 
NN(
0, 
0, 
-1, -0.0714552, 0, -1, 0.492509,-99) , 
3, 4.42086, 1, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, -0.165441, 1, -1, 0.484173,-99) , 
0, 0.491424, 0, 0, 0.498897,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0130767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47919, 1, 1, 0.510453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493572,-99) , 
2, -0.00307756, 1, 0, 0.499359,-99) , 
2, 0.0717304, 0, 0, 0.501293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479332,-99) , 
3, 9.41367, 1, 0, 0.500505,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0157348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60664, 1, 1, 0.516037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480467,-99) , 
5, -0.350684, 0, 0, 0.494384,-99) , 
3, 4.5204, 1, 0, 0.50772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491193,-99) , 
0, 0.493328, 0, 0, 0.502224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47867,-99) , 
2, -0.0073178, 1, 0, 0.492988,-99) , 
2, 0.00337156, 0, 0, 0.498083,-99) , 
2, -0.0714552, 1, 0, 0.499828,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0138531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498691,-99) , 
2, 0.106203, 0, 0, 0.500437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482288,-99) , 
5, 0.494079, 0, 0, 0.487092,-99) , 
4, 0.999909, 0, 0, 0.498297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487923,-99) , 
4, 0.998617, 1, 0, 0.500886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447182,-99) , 
5, 0.0289695, 0, 0, 0.481461,-99) , 
4, 0.999524, 0, 0, 0.496701,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0152016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497956,-99) , 
2, -0.112302, 1, 0, 0.500089,-99) , 
2, 0.214116, 0, 0, 0.501261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480765,-99) , 
2, 0.0783489, 1, 0, 0.49737,-99) , 
NN(
0, 
0, 
-1, -0.0727168, 0, -1, 0.477928,-99) , 
2, -0.0712513, 0, 0, 0.491009,-99) , 
3, 4.40491, 1, 0, 0.499062,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0206313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477934,-99) , 
0, 0.493328, 0, 0, 0.511515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496037,-99) , 
0, 0.500947, 0, 0, 0.499434,-99) , 
3, 0.996357, 1, 0, 0.502643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489402,-99) , 
2, -0.00330209, 0, 0, 0.498613,-99) , 
NN(
0, 
0, 
-1, -0.163375, 0, -1, 0.475972,-99) , 
2, 0.0715038, 1, 0, 0.491061,-99) , 
3, 4.76351, 1, 0, 0.500437,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0107323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.186796, 1, 1, 0.503315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434199,-99) , 
3, 4.28219, 1, 0, 0.490858,-99) , 
4, 0.999864, 0, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477081,-99) , 
4, 0.998572, 0, 0, 0.500371,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0109247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493957,-99) , 
3, 4.76741, 1, 0, 0.502122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475109,-99) , 
0, 0.489337, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481164,-99) , 
0, 0.505709, 1, 0, 0.500616,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0106201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.202737, 1, 1, 0.50231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471847,-99) , 
4, 0.999683, 0, 0, 0.501431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490399,-99) , 
0, 0.496186, 0, 0, 0.503912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44095,-99) , 
5, -0.0672265, 0, 0, 0.483741,-99) , 
4, 0.999524, 0, 0, 0.499748,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.00960527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481164,-99) , 
2, 0.0714671, 1, 0, 0.495398,-99) , 
3, 4.37429, 1, 0, 0.503032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463086,-99) , 
4, 0.999796, 0, 0, 0.498174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482286,-99) , 
4, 0.999524, 0, 0, 0.49676,-99) , 
0, 0.49809, 1, 0, 0.499868,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0163019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493915,-99) , 
2, 0.0303204, 0, 0, 0.498008,-99) , 
2, -0.21441, 1, 0, 0.499012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458881,-99) , 
5, 0.495593, 0, 0, 0.480838,-99) , 
4, 0.999048, 0, 0, 0.497989,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0119527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.502125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473647,-99) , 
5, 0.393313, 0, 0, 0.482437,-99) , 
4, 0.999864, 0, 0, 0.499976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490268,-99) , 
0, 0.499043, 1, 0, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4435,-99) , 
5, -0.158727, 0, 0, 0.486702,-99) , 
4, 0.999524, 0, 0, 0.498708,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0288503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490611,-99) , 
6, 0.0079235, 0, 0, 0.498808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480661,-99) , 
6, 0.0237708, 1, 0, 0.498141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477699,-99) , 
0, 0.505709, 1, 0, 0.497343,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0103038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491769,-99) , 
5, -0.875496, 1, 0, 0.510409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494152,-99) , 
5, -0.559775, 0, 0, 0.499976,-99) , 
5, -0.813238, 1, 0, 0.500919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474087,-99) , 
5, 0.207129, 1, 0, 0.494039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47554,-99) , 
5, -0.625819, 0, 0, 0.489063,-99) , 
0, 0.502852, 1, 0, 0.499228,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.00587513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488206,-99) , 
2, 0.0734133, 0, 0, 0.491197,-99) , 
0, 0.503306, 1, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479334,-99) , 
0, 0.489519, 0, 0, 0.499613,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0129539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35094, 0, 1, 0.504274,-99) , 
NN(
0, 
0, 
-1, -0.348806, 0, -1, 0.487138,-99) , 
4, 0.999864, 0, 0, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471834,-99) , 
4, 0.998571, 0, 0, 0.500427,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.00786082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49818,-99) , 
5, 0.758872, 0, 0, 0.513874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498227,-99) , 
2, 0.214273, 0, 0, 0.499074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478719,-99) , 
4, 0.999048, 0, 0, 0.498201,-99) , 
5, 0.678922, 0, 0, 0.49905,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.012474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499859,-99) , 
3, 4.80368, 0, 0, 0.502505,-99) , 
4, 0.999048, 1, 0, 0.506457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49726,-99) , 
6, 0.0238024, 0, 0, 0.498958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443848,-99) , 
4, 0.999238, 0, 0, 0.496935,-99) , 
5, 0.216014, 0, 0, 0.499374,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0172798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49616,-99) , 
2, 0.0155491, 0, 0, 0.502488,-99) , 
NN(
0, 
0, 
-1, 4.7739, 1, -1, 0.492095,-99) , 
4, 0.999955, 0, 0, 0.499424,-99) , 
NN(
0, 
0, 
-1, 0.495588, 0, -1, 0.479211,-99) , 
4, 0.999048, 0, 0, 0.498301,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0281486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.632349, 0, 1, 0.547127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474738,-99) , 
6, 0.00161923, 0, 0, 0.497714,-99) , 
6, 0.0113344, 0, 0, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480565,-99) , 
6, 0.0238025, 1, 0, 0.50153,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.013401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47723, 1, 1, 0.514862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496736,-99) , 
2, 0.15463, 0, 0, 0.498811,-99) , 
2, -0.069495, 1, 0, 0.501158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489225,-99) , 
2, 0.051081, 1, 0, 0.49788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462875,-99) , 
2, 0.214312, 1, 0, 0.49325,-99) , 
3, 4.76296, 1, 0, 0.499649,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0137687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498529,-99) , 
4, 0.999996, 0, 0, 0.503868,-99) , 
NN(
0, 
0, 
-1, -0.533084, 0, -1, 0.492066,-99) , 
4, 0.999909, 0, 0, 0.501583,-99) , 
NN(
0, 
0, 
-1, 0.492396, 0, -1, 0.481551,-99) , 
4, 0.999048, 0, 0, 0.500464,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.014866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77341, 1, 1, 0.519153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496502,-99) , 
3, 0.928065, 1, 0, 0.500109,-99) , 
2, 0.0713095, 0, 0, 0.502795,-99) , 
NN(
0, 
0, 
-1, -0.214462, 0, -1, 0.491666,-99) , 
3, 4.42086, 1, 0, 0.500408,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0125785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34753, 0, 1, 0.504311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453185,-99) , 
5, -0.533047, 0, 0, 0.496324,-99) , 
4, 0.999864, 0, 0, 0.503001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482207,-99) , 
4, 0.998572, 0, 0, 0.502236,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0154457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497759,-99) , 
3, 1.65351, 1, 0, 0.50379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487344,-99) , 
5, 0.115365, 0, 0, 0.494435,-99) , 
3, 4.75611, 1, 0, 0.502041,-99) , 
NN(
0, 
0, 
-1, -0.168197, 1, -1, 0.483953,-99) , 
0, 0.504757, 1, 0, 0.500853,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0125576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214116, 0, 1, 0.505098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483162,-99) , 
2, 0.112555, 1, 0, 0.498762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476852,-99) , 
2, -0.213889, 0, 0, 0.495891,-99) , 
3, 4.408, 1, 0, 0.503122,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.00741019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213922, 0, 1, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470336,-99) , 
4, 0.99941, 0, 0, 0.501088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465324,-99) , 
5, 0.495573, 0, 0, 0.486571,-99) , 
4, 0.999048, 0, 0, 0.500276,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0127654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481655,-99) , 
5, -0.462231, 0, 0, 0.514206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497099,-99) , 
2, -0.213046, 1, 0, 0.498188,-99) , 
3, 0.549454, 1, 0, 0.499519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478989,-99) , 
3, 9.41367, 1, 0, 0.498793,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0348372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.912183, 0, 1, 0.518822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488227,-99) , 
5, -0.858146, 1, 0, 0.50946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481802,-99) , 
6, 0.00339965, 0, 0, 0.49952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457097,-99) , 
6, 0.0238024, 1, 0, 0.498265,-99) , 
5, -0.81381, 1, 0, 0.499303,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.00747935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487711,-99) , 
3, 6.78913, 1, 0, 0.499252,-99) , 
5, 0.682512, 0, 0, 0.500447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48504,-99) , 
5, -0.575845, 0, 0, 0.495081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470309,-99) , 
5, 0.113306, 1, 0, 0.488138,-99) , 
0, 0.492376, 0, 0, 0.499166,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.00697639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49874,-99) , 
3, 8.34859, 0, 0, 0.499645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479031,-99) , 
4, 0.999388, 0, 0, 0.498722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480204,-99) , 
4, 0.998571, 0, 0, 0.498054,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0094615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493509,-99) , 
5, -0.165025, 0, 0, 0.520872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49908,-99) , 
2, -0.154691, 1, 0, 0.500103,-99) , 
4, 0.999524, 1, 0, 0.502261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484624,-99) , 
2, -0.193714, 0, 0, 0.497907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470801,-99) , 
2, 0.214312, 1, 0, 0.49436,-99) , 
3, 4.74401, 1, 0, 0.50075,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.00614714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499459,-99) , 
2, -0.213486, 1, 0, 0.500391,-99) , 
NN(
0, 
0, 
-1, -0.164021, 0, -1, 0.483501,-99) , 
3, 6.75063, 1, 0, 0.499377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476645,-99) , 
3, 9.41001, 1, 0, 0.498571,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0102565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35345, 0, 1, 0.503061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454786,-99) , 
5, -0.535233, 0, 0, 0.493693,-99) , 
4, 0.999864, 0, 0, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471206,-99) , 
4, 0.998572, 0, 0, 0.500447,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0126718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498368,-99) , 
2, 0.0461248, 0, 0, 0.500829,-99) , 
4, 0.999048, 1, 0, 0.502136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490489,-99) , 
0, 0.499995, 0, 0, 0.499019,-99) , 
NN(
0, 
0, 
-1, 0.0726478, 1, -1, 0.48409,-99) , 
5, -0.163489, 0, 0, 0.490986,-99) , 
3, 4.75332, 1, 0, 0.500023,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0123089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.513139, 1, 1, 0.505245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487038,-99) , 
2, 0.0716191, 1, 0, 0.497577,-99) , 
3, 4.41701, 1, 0, 0.503641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483958,-99) , 
5, -0.519259, 0, 0, 0.494329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478394,-99) , 
5, 0.121691, 1, 0, 0.49021,-99) , 
0, 0.503804, 1, 0, 0.502315,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0124508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68428, 1, 1, 0.515666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498959,-99) , 
2, 0.152299, 0, 0, 0.500709,-99) , 
2, -0.0720284, 1, 0, 0.502848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491797,-99) , 
0, 0.499995, 0, 0, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0.0717304, 1, -1, 0.4841,-99) , 
5, -0.158705, 0, 0, 0.491826,-99) , 
3, 4.75332, 1, 0, 0.500743,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0159715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.126016, 1, 1, 0.505479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471692,-99) , 
5, -0.255942, 0, 0, 0.492136,-99) , 
4, 0.999909, 0, 0, 0.503345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498739,-99) , 
4, 0.998617, 1, 0, 0.507545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438979,-99) , 
5, -0.162762, 0, 0, 0.488458,-99) , 
4, 0.999524, 0, 0, 0.501939,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.00718419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214865, 0, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468797,-99) , 
4, 0.999411, 0, 0, 0.500807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454271,-99) , 
5, 0.492396, 0, 0, 0.478507,-99) , 
4, 0.999048, 0, 0, 0.499568,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0112318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499026,-99) , 
2, -0.112817, 1, 0, 0.501087,-99) , 
2, 0.213478, 0, 0, 0.502421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483803,-99) , 
5, 0.488035, 1, 0, 0.500583,-99) , 
NN(
0, 
0, 
-1, 0.0728117, 1, -1, 0.484622,-99) , 
5, -0.258194, 0, 0, 0.492927,-99) , 
3, 4.75332, 1, 0, 0.500612,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.00616194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501811,-99) , 
NN(
0, 
0, 
-1, -0.213899, 0, -1, 0.494573,-99) , 
3, 4.48195, 1, 0, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479736,-99) , 
0, 0.489519, 0, 0, 0.499701,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0101728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492996,-99) , 
4, 0.999955, 0, 0, 0.500044,-99) , 
2, 0.214865, 0, 0, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.485862,-99) , 
4, 0.999048, 0, 0, 0.500074,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0153744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493594,-99) , 
4, 0.999955, 1, 0, 0.498858,-99) , 
4, 0.999048, 1, 0, 0.503579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
6, 0.0238024, 0, 0, 0.498715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432284,-99) , 
4, 0.999238, 0, 0, 0.496362,-99) , 
5, 0.216013, 0, 0, 0.498202,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.00513573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214748, 0, 1, 0.501229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480007,-99) , 
4, 0.999252, 0, 0, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478607,-99) , 
4, 0.998571, 0, 0, 0.499722,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0201877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496487,-99) , 
2, 0.139422, 0, 0, 0.507286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493353,-99) , 
2, -0.0034353, 1, 0, 0.499221,-99) , 
2, 0.0713933, 0, 0, 0.500679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481101,-99) , 
4, 0.999995, 0, 0, 0.499253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454714,-99) , 
4, 0.999905, 0, 0, 0.493396,-99) , 
5, -0.626473, 0, 0, 0.498959,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0087515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4909,-99) , 
2, 0.0711227, 0, 0, 0.494184,-99) , 
0, 0.501446, 1, 0, 0.500281,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.48694,-99) , 
0, 0.491424, 0, 0, 0.499301,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.012457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497507,-99) , 
0, 0.499995, 0, 0, 0.500889,-99) , 
4, 0.999048, 1, 0, 0.503761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497735,-99) , 
6, 0.0237968, 0, 0, 0.499487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44136,-99) , 
4, 0.999333, 0, 0, 0.497166,-99) , 
5, 0.120558, 0, 0, 0.499173,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00995099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.50292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480087,-99) , 
4, 0.999525, 1, 0, 0.488219,-99) , 
4, 0.999819, 0, 0, 0.501223,-99) , 
NN(
0, 
0, 
-1, 0.495573, 0, -1, 0.481454,-99) , 
4, 0.999048, 0, 0, 0.500116,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0164701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0124671, 1, 1, 0.539353,-99) , 
NN(
0, 
0, 
-1, 0.000539717, 0, -1, 0.495541,-99) , 
6, 0.0113336, 0, 0, 0.499689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479278,-99) , 
6, 0.0238024, 1, 0, 0.498946,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0127737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499413,-99) , 
3, 1.47296, 1, 0, 0.514545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497429,-99) , 
2, -0.156649, 1, 0, 0.499281,-99) , 
2, 0.066996, 0, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0.214446, 1, -1, 0.490995,-99) , 
3, 4.76351, 1, 0, 0.499606,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0129518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0276307, 0, 1, 0.510851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497482,-99) , 
0, 0.495233, 1, 0, 0.500269,-99) , 
3, 1.14047, 1, 0, 0.503711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495025,-99) , 
5, -0.721649, 1, 0, 0.497313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481421,-99) , 
2, 0.214266, 1, 0, 0.495212,-99) , 
3, 4.47231, 1, 0, 0.501924,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0096104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214865, 0, 1, 0.503883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486671,-99) , 
4, 0.99932, 0, 0, 0.503206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480578,-99) , 
4, 0.998571, 0, 0, 0.502385,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0111923);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.762632, 0, 1, 0.519144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492304,-99) , 
4, 0.999909, 0, 0, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475382,-99) , 
4, 0.999048, 0, 0, 0.500087,-99) , 
5, 0.682512, 0, 0, 0.501097,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0186157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498438,-99) , 
3, 1.74297, 1, 0, 0.526683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494301,-99) , 
4, 0.999977, 1, 0, 0.500493,-99) , 
4, 0.999524, 1, 0, 0.503293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482974,-99) , 
2, 0.227858, 1, 0, 0.498099,-99) , 
NN(
0, 
0, 
-1, -0.0735357, 0, -1, 0.482462,-99) , 
2, -0.0714547, 0, 0, 0.492967,-99) , 
3, 4.41422, 1, 0, 0.501081,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0115724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495245,-99) , 
3, 1.52478, 1, 0, 0.521088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499414,-99) , 
3, 0.528215, 1, 0, 0.501376,-99) , 
4, 0.999524, 1, 0, 0.503469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496633,-99) , 
5, 0.500035, 1, 0, 0.502158,-99) , 
NN(
0, 
0, 
-1, 0.0717153, 1, -1, 0.489294,-99) , 
5, 0.215172, 0, 0, 0.492687,-99) , 
3, 4.3959, 1, 0, 0.501146,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0102086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497528,-99) , 
3, 1.76518, 1, 0, 0.501235,-99) , 
2, 0.214545, 0, 0, 0.502191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486788,-99) , 
3, 8.84534, 1, 0, 0.501517,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0149607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497006,-99) , 
4, 0.999997, 0, 0, 0.502587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45892,-99) , 
3, 4.74401, 1, 0, 0.496051,-99) , 
4, 0.999932, 0, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479484,-99) , 
4, 0.998572, 0, 0, 0.500176,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0153102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489516,-99) , 
3, 2.99165, 1, 0, 0.513752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496775,-99) , 
3, 1.86264, 1, 0, 0.50099,-99) , 
2, 0.0698153, 0, 0, 0.502874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495179,-99) , 
5, 0.428826, 1, 0, 0.508834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481227,-99) , 
3, 5.87863, 1, 0, 0.488356,-99) , 
5, 0.0282339, 0, 0, 0.495775,-99) , 
3, 4.74401, 1, 0, 0.501518,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0118601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499279,-99) , 
2, 0.03051, 0, 0, 0.503348,-99) , 
2, -0.214303, 1, 0, 0.504388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482068,-99) , 
3, 9.18575, 1, 0, 0.496374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478371,-99) , 
5, -0.628169, 0, 0, 0.492289,-99) , 
3, 4.75332, 1, 0, 0.502101,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0104974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490736,-99) , 
3, 5.85224, 1, 0, 0.502392,-99) , 
5, 0.680822, 0, 0, 0.503442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489201,-99) , 
3, 8.72917, 1, 0, 0.502793,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0175467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.83075, 0, 1, 0.506269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479796,-99) , 
5, 0.395384, 0, 0, 0.491745,-99) , 
4, 0.999864, 0, 0, 0.503902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482708,-99) , 
4, 0.998572, 0, 0, 0.503131,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0127311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495473,-99) , 
2, 0.0308229, 0, 0, 0.498773,-99) , 
2, -0.213986, 1, 0, 0.499759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481036,-99) , 
3, 9.40736, 1, 0, 0.4991,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.00996675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484181,-99) , 
5, -0.158091, 0, 0, 0.517076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499112,-99) , 
2, -0.171276, 1, 0, 0.5,-99) , 
4, 0.999524, 1, 0, 0.501774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492119,-99) , 
2, -0.152822, 0, 0, 0.498874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466243,-99) , 
5, -0.252168, 0, 0, 0.485427,-99) , 
2, 0.0716191, 1, 0, 0.49436,-99) , 
3, 4.74401, 1, 0, 0.500362,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.00703714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213314, 1, 1, 0.501856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474541,-99) , 
4, 0.999252, 0, 0, 0.500949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472593,-99) , 
4, 0.998571, 0, 0, 0.499944,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.00821682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.022406, 0, 1, 0.505781,-99) , 
NN(
0, 
0, 
-1, 4.47895, 1, -1, 0.498083,-99) , 
0, 0.49682, 1, 0, 0.500634,-99) , 
NN(
0, 
0, 
-1, -0.25593, 1, -1, 0.48426,-99) , 
0, 0.491424, 0, 0, 0.499445,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0152935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35249, 0, 1, 0.504636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486683,-99) , 
5, 0.48841, 0, 0, 0.494735,-99) , 
4, 0.999932, 0, 0, 0.502163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483753,-99) , 
4, 0.998571, 0, 0, 0.501496,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0124102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0707248, 0, 1, 0.512511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497311,-99) , 
2, -0.0235937, 1, 0, 0.499886,-99) , 
4, 0.999524, 1, 0, 0.501192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489942,-99) , 
3, 8.70303, 0, 0, 0.494817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475235,-99) , 
2, -0.214033, 0, 0, 0.492189,-99) , 
3, 4.75611, 1, 0, 0.499483,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.016122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497848,-99) , 
2, 0.0304332, 0, 0, 0.500613,-99) , 
2, -0.214428, 1, 0, 0.501476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485871,-99) , 
4, 0.999995, 0, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450632,-99) , 
4, 0.999905, 0, 0, 0.494024,-99) , 
5, -0.625839, 0, 0, 0.49971,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00518753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499968,-99) , 
2, 0.214479, 0, 0, 0.501033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481534,-99) , 
3, 6.75371, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484382,-99) , 
3, 8.8365, 1, 0, 0.499335,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0226575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.546149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482906,-99) , 
5, -0.5323, 0, 0, 0.498897,-99) , 
6, 0.012467, 0, 0, 0.502408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482193,-99) , 
6, 0.0238024, 1, 0, 0.501661,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.015033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35345, 0, 1, 0.50434,-99) , 
NN(
0, 
0, 
-1, 0.300426, 0, -1, 0.48588,-99) , 
4, 0.999909, 0, 0, 0.501406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494805,-99) , 
0, 0.496186, 0, 0, 0.509528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453085,-99) , 
5, -0.158128, 0, 0, 0.493695,-99) , 
4, 0.999524, 0, 0, 0.500675,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.015242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60229, 1, 1, 0.516025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493803,-99) , 
2, 0.00330765, 0, 0, 0.498564,-99) , 
2, -0.0714968, 1, 0, 0.501002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489292,-99) , 
0, 0.499995, 0, 0, 0.49746,-99) , 
NN(
0, 
0, 
-1, 0.071481, 1, -1, 0.484706,-99) , 
5, -0.165953, 0, 0, 0.490668,-99) , 
3, 4.47895, 1, 0, 0.498833,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.00585009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48062,-99) , 
3, 6.73864, 1, 0, 0.499153,-99) , 
5, 0.58257, 0, 0, 0.500335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48496,-99) , 
3, 9.39852, 1, 0, 0.499788,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.011533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489827,-99) , 
3, 7.51852, 1, 0, 0.499581,-99) , 
5, 0.735925, 0, 0, 0.500375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485157,-99) , 
4, 0.999995, 0, 0, 0.498718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455571,-99) , 
4, 0.999905, 0, 0, 0.493192,-99) , 
5, -0.626105, 0, 0, 0.498681,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0264626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494212,-99) , 
5, -0.866989, 1, 0, 0.509063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490635,-99) , 
6, 0.00793403, 0, 0, 0.49716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464721,-99) , 
6, 0.0238024, 1, 0, 0.496197,-99) , 
5, -0.813794, 1, 0, 0.497396,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.00908711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498622,-99) , 
0, 0.499995, 0, 0, 0.505844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497325,-99) , 
3, 8.42298, 0, 0, 0.498135,-99) , 
2, -0.0711811, 1, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481085,-99) , 
4, 0.998571, 0, 0, 0.498791,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.00694114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496091,-99) , 
3, 1.06645, 0, 0, 0.509764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497575,-99) , 
3, 3.4163, 1, 0, 0.506124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486442,-99) , 
0, 0.505709, 1, 0, 0.50044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48112,-99) , 
5, -0.675116, 0, 0, 0.49078,-99) , 
5, -0.640919, 0, 0, 0.499709,-99) , 
5, -0.720712, 1, 0, 0.500757,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.012241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
4, 0.999997, 0, 0, 0.503222,-99) , 
NN(
0, 
0, 
-1, -0.535981, 0, -1, 0.491799,-99) , 
4, 0.999932, 0, 0, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481339,-99) , 
4, 0.998572, 0, 0, 0.499703,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0101846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495035,-99) , 
5, -0.469748, 0, 0, 0.518195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498155,-99) , 
4, 0.999524, 1, 0, 0.499542,-99) , 
3, 0.497577, 1, 0, 0.501082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490364,-99) , 
2, 0.030299, 1, 0, 0.496221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482734,-99) , 
2, -0.214541, 0, 0, 0.494476,-99) , 
3, 4.37429, 1, 0, 0.499647,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.00953989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.503893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494341,-99) , 
0, 0.499042, 0, 0, 0.49772,-99) , 
5, -0.162772, 1, 0, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478093,-99) , 
4, 0.998571, 0, 0, 0.500344,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.00936259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215093, 0, 1, 0.503439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477876,-99) , 
4, 0.99941, 0, 0, 0.502744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468998,-99) , 
5, 0.496637, 0, 0, 0.486794,-99) , 
4, 0.999048, 0, 0, 0.501853,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0073736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499441,-99) , 
3, 8.34859, 0, 0, 0.500793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479375,-99) , 
5, 0.307317, 0, 0, 0.490952,-99) , 
4, 0.99966, 0, 0, 0.499978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479552,-99) , 
4, 0.998571, 0, 0, 0.499243,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.00600482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
2, -0.132288, 1, 0, 0.500248,-99) , 
2, -0.213899, 1, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481703,-99) , 
3, 8.8365, 1, 0, 0.50015,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0123497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487854,-99) , 
5, -0.160485, 0, 0, 0.521269,-99) , 
NN(
0, 
0, 
-1, -0.0569675, 1, 1, 0.503185,-99) , 
4, 0.999524, 1, 0, 0.505079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498913,-99) , 
5, -0.628642, 1, 0, 0.50116,-99) , 
NN(
0, 
0, 
-1, -0.164183, 0, -1, 0.483067,-99) , 
2, 0.0712876, 1, 0, 0.49503,-99) , 
3, 4.76296, 1, 0, 0.503185,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0137186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499298,-99) , 
2, 0.0317033, 0, 0, 0.503483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492014,-99) , 
0, 0.491424, 1, 0, 0.494249,-99) , 
3, 2.76131, 1, 0, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474732,-99) , 
3, 9.41001, 1, 0, 0.499217,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.00534069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482979,-99) , 
4, 0.999048, 0, 0, 0.500066,-99) , 
5, 0.683709, 0, 0, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4821,-99) , 
0, 0.505709, 1, 0, 0.500015,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.00953537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497758,-99) , 
6, 0.0238025, 0, 0, 0.500138,-99) , 
5, -0.0652597, 0, 0, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485841,-99) , 
0, 0.489519, 0, 0, 0.501492,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0175807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4773,-99) , 
6, 0.00113182, 0, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487153,-99) , 
6, 0.0237681, 1, 0, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48408,-99) , 
0, 0.489519, 0, 0, 0.500219,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0127248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489587,-99) , 
4, 0.999955, 0, 0, 0.498519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465979,-99) , 
4, 0.999048, 0, 0, 0.496984,-99) , 
5, 0.768759, 0, 0, 0.497696,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0109557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166158, 0, 1, 0.515948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496367,-99) , 
2, -0.13137, 1, 0, 0.49745,-99) , 
2, -0.212934, 1, 0, 0.498427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479969,-99) , 
3, 9.41001, 1, 0, 0.49778,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.00964735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486415,-99) , 
4, 0.999909, 0, 0, 0.511865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49829,-99) , 
5, -0.813238, 1, 0, 0.499385,-99) , 
0, 0.492376, 1, 0, 0.50062,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.484809,-99) , 
4, 0.999048, 0, 0, 0.499746,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0135641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49782,-99) , 
3, 2.39264, 1, 0, 0.510074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487573,-99) , 
5, -0.0725615, 0, 0, 0.495822,-99) , 
3, 4.43168, 1, 0, 0.504447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489898,-99) , 
3, 4.4427, 1, 0, 0.503478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49614,-99) , 
2, -0.0500087, 1, 0, 0.497628,-99) , 
2, 0.153032, 0, 0, 0.498275,-99) , 
2, -0.071383, 1, 0, 0.499389,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.00823372);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.760876, 0, 1, 0.514836,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213314, 1, 1, 0.502978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484307,-99) , 
4, 0.999048, 0, 0, 0.502185,-99) , 
5, 0.680825, 0, 0, 0.502854,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.006745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499191,-99) , 
3, 0.523748, 1, 0, 0.500538,-99) , 
2, 0.214405, 0, 0, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488047,-99) , 
3, 8.74147, 1, 0, 0.500947,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.00876613);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.070706, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
3, 8.8365, 1, 0, 0.5035,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0109646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49884,-99) , 
2, 0.0294787, 0, 0, 0.501949,-99) , 
4, 0.999048, 1, 0, 0.503097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499498,-99) , 
2, 0.0712876, 0, 0, 0.504085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48404,-99) , 
5, -0.721585, 1, 0, 0.489393,-99) , 
5, -0.164736, 0, 0, 0.496272,-99) , 
3, 4.74401, 1, 0, 0.501794,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0125869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479197,-99) , 
4, 0.999683, 0, 0, 0.50091,-99) , 
4, 0.999048, 1, 0, 0.504131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498362,-99) , 
6, 0.0237969, 0, 0, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451575,-99) , 
4, 0.999333, 0, 0, 0.498471,-99) , 
5, 0.120551, 0, 0, 0.500193,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.00531194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166625, 0, 1, 0.517026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499719,-99) , 
3, 0.53279, 1, 0, 0.500751,-99) , 
2, 0.214757, 0, 0, 0.501612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482055,-99) , 
3, 9.39852, 1, 0, 0.500928,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.00885135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56877, 0, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485997,-99) , 
4, 0.99932, 0, 0, 0.502707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478527,-99) , 
4, 0.998571, 0, 0, 0.501841,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.00820333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237681, 0, 1, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497829,-99) , 
5, -0.159587, 1, 0, 0.501561,-99) , 
NN(
0, 
0, 
-1, 0.495588, 0, -1, 0.484949,-99) , 
4, 0.999048, 0, 0, 0.500638,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0053094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501638,-99) , 
NN(
0, 
0, 
-1, -0.348925, 1, -1, 0.490481,-99) , 
0, 0.491061, 0, 0, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484876,-99) , 
0, 0.505709, 1, 0, 0.50029,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0116153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35345, 0, 1, 0.503359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
5, 0.488089, 0, 0, 0.4975,-99) , 
4, 0.999932, 0, 0, 0.501895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481383,-99) , 
4, 0.998571, 0, 0, 0.501158,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.00849978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49747,-99) , 
2, -0.0507734, 1, 0, 0.499128,-99) , 
2, -0.213986, 1, 0, 0.499856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485022,-99) , 
4, 0.998571, 0, 0, 0.499323,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.00589525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499077,-99) , 
3, 8.54824, 0, 0, 0.500047,-99) , 
2, -0.214024, 1, 0, 0.500834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485438,-99) , 
4, 0.998572, 0, 0, 0.500276,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00705549);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.76389, 0, 1, 0.516785,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.502104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481231,-99) , 
4, 0.999048, 0, 0, 0.501226,-99) , 
5, 0.68371, 0, 0, 0.50203,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.00956115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497229,-99) , 
3, 2.75866, 1, 0, 0.501564,-99) , 
5, 0.68371, 0, 0, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485545,-99) , 
3, 9.40736, 1, 0, 0.501898,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0230205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499364,-99) , 
3, 4.7739, 0, 0, 0.50237,-99) , 
4, 0.999048, 1, 0, 0.504288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487781,-99) , 
6, 0.0135928, 0, 0, 0.493701,-99) , 
6, 0.0237891, 0, 0, 0.497128,-99) , 
5, -0.252965, 0, 0, 0.500801,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0100968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0186738, 0, 1, 0.508951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485996,-99) , 
4, 0.999524, 0, 0, 0.500906,-99) , 
3, 1.28775, 1, 0, 0.503438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490623,-99) , 
3, 8.47725, 1, 0, 0.5028,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.00540279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499603,-99) , 
3, 8.31177, 0, 0, 0.50046,-99) , 
2, 0.215003, 0, 0, 0.501271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478121,-99) , 
4, 0.998571, 0, 0, 0.500442,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00890354);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.211524, 1, 1, 0.503174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489346,-99) , 
2, -0.0782724, 0, 0, 0.498131,-99) , 
NN(
0, 
0, 
-1, 0.207456, 1, -1, 0.486972,-99) , 
2, 0.0713933, 1, 0, 0.494399,-99) , 
3, 4.75996, 1, 0, 0.501511,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.00768296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.216547, 0, 1, 0.502772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
3, 9.1769, 0, 0, 0.496884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479529,-99) , 
2, 0.214242, 1, 0, 0.494605,-99) , 
3, 4.74401, 1, 0, 0.501214,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.00596335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473243,-99) , 
4, 0.99941, 0, 0, 0.500902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472379,-99) , 
5, 0.495622, 0, 0, 0.487118,-99) , 
4, 0.999048, 0, 0, 0.500137,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.00838053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489951,-99) , 
0, 0.48961, 0, 0, 0.502764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498924,-99) , 
5, -0.801, 0, 0, 0.504528,-99) , 
NN(
0, 
0, 
-1, -0.641798, 0, -1, 0.495907,-99) , 
5, -0.721398, 1, 0, 0.497333,-99) , 
0, 0.49809, 1, 0, 0.500027,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.00861752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494249,-99) , 
4, 0.999955, 0, 0, 0.49949,-99) , 
0, 0.505709, 0, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0.495622, 0, -1, 0.478172,-99) , 
4, 0.999048, 0, 0, 0.498899,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0118918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477992,-99) , 
0, 0.494145, 0, 0, 0.509885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498191,-99) , 
3, 8.50425, 0, 0, 0.499664,-99) , 
4, 0.999524, 1, 0, 0.500582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510497,-99) , 
NN(
0, 
0, 
-1, -0.627566, 0, -1, 0.488774,-99) , 
0, 0.506253, 0, 0, 0.492885,-99) , 
0, 0.502852, 1, 0, 0.49949,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00718518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499501,-99) , 
2, -0.112251, 1, 0, 0.500998,-99) , 
2, 0.213928, 0, 0, 0.501677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49826,-99) , 
5, 0.392972, 1, 0, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0.071007, 1, -1, 0.491263,-99) , 
5, 0.114367, 0, 0, 0.494818,-99) , 
3, 4.41701, 1, 0, 0.500206,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.00959793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378207, 0, 1, 0.516844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498722,-99) , 
4, 0.999524, 1, 0, 0.500068,-99) , 
3, 0.518672, 1, 0, 0.501572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494119,-99) , 
0, 0.500948, 0, 0, 0.499028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48502,-99) , 
3, 5.44626, 1, 0, 0.48942,-99) , 
5, -0.164158, 0, 0, 0.493898,-99) , 
3, 4.4751, 1, 0, 0.499965,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0102605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489685,-99) , 
3, 1.52494, 1, 0, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0.528213, 1, 1, 0.502003,-99) , 
4, 0.999524, 1, 0, 0.503491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49372,-99) , 
2, -0.00367366, 0, 0, 0.498207,-99) , 
NN(
0, 
0, 
-1, 0.022494, 0, -1, 0.490429,-99) , 
2, 0.0711436, 1, 0, 0.495618,-99) , 
3, 4.3959, 1, 0, 0.501797,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0196026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.632364, 0, 1, 0.529455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490123,-99) , 
5, -0.252209, 0, 0, 0.498528,-99) , 
6, 0.0113336, 0, 0, 0.501427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483829,-99) , 
6, 0.0238024, 1, 0, 0.50077,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00801492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498973,-99) , 
2, 0.112908, 0, 0, 0.500285,-99) , 
2, -0.213371, 1, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470252,-99) , 
4, 0.998572, 0, 0, 0.500269,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00978764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498814,-99) , 
5, -0.626869, 0, 0, 0.508267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499231,-99) , 
5, -0.255801, 1, 0, 0.502092,-99) , 
0, 0.499859, 0, 0, 0.503246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491722,-99) , 
5, -0.518931, 0, 0, 0.497722,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.482827,-99) , 
5, 0.122485, 1, 0, 0.493758,-99) , 
0, 0.5019, 1, 0, 0.501398,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0111679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.089252, 1, 1, 0.50446,-99) , 
NN(
0, 
0, 
-1, 4.21216, 1, -1, 0.494817,-99) , 
4, 0.999955, 0, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0.495573, 0, -1, 0.478625,-99) , 
4, 0.999048, 0, 0, 0.500373,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0105748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00269419, 0, 1, 0.514218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498888,-99) , 
2, -0.215935, 1, 0, 0.499864,-99) , 
3, 0.711319, 1, 0, 0.50226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481569,-99) , 
5, 0.300127, 1, 0, 0.500433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48037,-99) , 
5, 0.0200047, 0, 0, 0.489157,-99) , 
2, -0.0709561, 0, 0, 0.496726,-99) , 
3, 4.38359, 1, 0, 0.501057,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0155899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496578,-99) , 
3, 1.58381, 1, 0, 0.514876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495863,-99) , 
2, -0.00349478, 1, 0, 0.501759,-99) , 
2, 0.0713095, 0, 0, 0.50361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493456,-99) , 
0, 0.499042, 0, 0, 0.500437,-99) , 
NN(
0, 
0, 
-1, 6.78772, 1, -1, 0.491068,-99) , 
5, -0.443045, 0, 0, 0.49706,-99) , 
3, 4.463, 1, 0, 0.502238,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.00972729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498312,-99) , 
0, 0.494281, 1, 0, 0.500416,-99) , 
3, 9.4271, 0, 0, 0.501368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
4, 0.998617, 1, 0, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471036,-99) , 
5, -0.158128, 0, 0, 0.492746,-99) , 
4, 0.999524, 0, 0, 0.500555,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.00851771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
2, -0.0293941, 1, 0, 0.501994,-99) , 
2, 0.215294, 0, 0, 0.503021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483764,-99) , 
3, 8.8545, 1, 0, 0.502197,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.00868054);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.348713, 1, 1, 0.503906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484159,-99) , 
4, 0.998572, 0, 0, 0.503188,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00961962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.218166, 0, 1, 0.502734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483737,-99) , 
5, 0.494079, 0, 0, 0.492011,-99) , 
4, 0.999796, 0, 0, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483978,-99) , 
4, 0.998572, 0, 0, 0.500786,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0106333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499551,-99) , 
2, -0.213654, 1, 0, 0.500741,-99) , 
4, 0.999048, 1, 0, 0.501663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482487,-99) , 
4, 0.999991, 0, 0, 0.497998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464157,-99) , 
4, 0.999905, 0, 0, 0.493634,-99) , 
5, -0.626473, 0, 0, 0.499783,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.00715986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215236, 0, 1, 0.502613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488371,-99) , 
4, 0.999184, 0, 0, 0.502203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47721,-99) , 
4, 0.998571, 0, 0, 0.501315,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0104739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498387,-99) , 
4, 0.999954, 0, 0, 0.510649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497306,-99) , 
2, 0.00493002, 0, 0, 0.500028,-99) , 
2, -0.0697875, 1, 0, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0.496637, 0, -1, 0.478109,-99) , 
4, 0.999048, 0, 0, 0.500548,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0066764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488391,-99) , 
0, 0.489927, 0, 0, 0.501667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491429,-99) , 
5, -0.259144, 0, 0, 0.497161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485187,-99) , 
0, 0.505074, 0, 0, 0.491968,-99) , 
0, 0.503804, 1, 0, 0.500706,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0113305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0665966, 0, 1, 0.508145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49515,-99) , 
2, 0.0228109, 0, 0, 0.498803,-99) , 
2, -0.0510453, 1, 0, 0.500405,-99) , 
NN(
0, 
0, 
-1, -0.0745441, 0, -1, 0.487873,-99) , 
2, -0.214303, 0, 0, 0.499714,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.00818697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.76389, 0, 1, 0.511074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494279,-99) , 
4, 0.999955, 0, 0, 0.49991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4829,-99) , 
4, 0.999048, 0, 0, 0.49919,-99) , 
5, 0.683709, 0, 0, 0.499808,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.00764721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506084,-99) , 
NN(
0, 
0, 
-1, 0.999271, 0, -1, 0.497854,-99) , 
5, 0.307308, 0, 0, 0.499574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478187,-99) , 
3, 8.72033, 1, 0, 0.498604,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0103694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49819,-99) , 
3, 1.429, 1, 0, 0.516703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47657,-99) , 
4, 0.999705, 0, 0, 0.500824,-99) , 
4, 0.999524, 1, 0, 0.502479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488619,-99) , 
2, -0.0782699, 0, 0, 0.494742,-99) , 
NN(
0, 
0, 
-1, -0.164115, 0, -1, 0.483136,-99) , 
2, 0.0713933, 1, 0, 0.490868,-99) , 
3, 4.75332, 1, 0, 0.500282,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.00767596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498027,-99) , 
2, -0.111898, 1, 0, 0.499066,-99) , 
2, 0.214545, 0, 0, 0.499977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480901,-99) , 
4, 0.998572, 0, 0, 0.499288,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0134038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50602, 1, 1, 0.503663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491075,-99) , 
3, 8.8365, 1, 0, 0.503069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486333,-99) , 
4, 0.999995, 0, 0, 0.498224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466214,-99) , 
4, 0.999905, 0, 0, 0.494108,-99) , 
5, -0.625818, 0, 0, 0.500958,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0132772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497662,-99) , 
3, 1.6196, 1, 0, 0.508454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486564,-99) , 
5, -0.0725615, 0, 0, 0.495437,-99) , 
3, 4.53294, 1, 0, 0.503547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497259,-99) , 
5, -0.158742, 0, 0, 0.499629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
2, -0.00722936, 1, 0, 0.494824,-99) , 
2, 0.00345856, 0, 0, 0.497473,-99) , 
2, -0.0713523, 1, 0, 0.498567,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.012151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0347245, 0, 1, 0.506834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495421,-99) , 
0, 0.490471, 1, 0, 0.496684,-99) , 
3, 1.32481, 1, 0, 0.49999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489551,-99) , 
3, 8.56694, 1, 0, 0.499486,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0127151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.632355, 0, 1, 0.524128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4806,-99) , 
5, -0.625823, 0, 0, 0.496161,-99) , 
6, 0.0113273, 0, 0, 0.49877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483062,-99) , 
6, 0.0237891, 1, 0, 0.49819,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0109313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.7906, 0, 1, 0.509371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488865,-99) , 
2, 0.0713095, 1, 0, 0.505604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495094,-99) , 
2, 0.139848, 0, 0, 0.503172,-99) , 
NN(
0, 
0, 
-1, -0.00295585, 1, -1, 0.495965,-99) , 
2, 0.0718465, 0, 0, 0.497254,-99) , 
5, -0.719378, 1, 0, 0.49863,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0187239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486024,-99) , 
5, -0.536563, 0, 0, 0.49927,-99) , 
0, 0.492376, 1, 0, 0.503546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493367,-99) , 
3, 4.47231, 1, 0, 0.501269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476148,-99) , 
2, 0.0110082, 0, 0, 0.493457,-99) , 
2, -0.00324273, 1, 0, 0.497833,-99) , 
2, 0.0715741, 0, 0, 0.498873,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.00858371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495597,-99) , 
5, -0.162628, 1, 0, 0.49931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478858,-99) , 
4, 0.999252, 0, 0, 0.498635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481058,-99) , 
4, 0.998571, 0, 0, 0.498003,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0099661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496616,-99) , 
2, 0.112535, 0, 0, 0.497932,-99) , 
2, -0.213899, 1, 0, 0.49881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479076,-99) , 
3, 9.41367, 1, 0, 0.498116,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00610633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.50346, 0, 1, 0.501717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481197,-99) , 
4, 0.999252, 0, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476081,-99) , 
4, 0.998571, 0, 0, 0.50015,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0145393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495474,-99) , 
3, 1.45845, 1, 0, 0.507921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492636,-99) , 
2, -0.00296828, 1, 0, 0.497665,-99) , 
2, 0.0718094, 0, 0, 0.499144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489091,-99) , 
5, -0.536536, 1, 0, 0.493468,-99) , 
NN(
0, 
0, 
-1, -0.0713238, 0, -1, 0.479829,-99) , 
2, 0.0712876, 1, 0, 0.488863,-99) , 
3, 4.74401, 1, 0, 0.497196,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.00943224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496943,-99) , 
3, 8.24165, 0, 0, 0.497844,-99) , 
2, 0.215021, 0, 0, 0.498636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480549,-99) , 
4, 0.998572, 0, 0, 0.497982,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.00457423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56877, 0, 1, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4864,-99) , 
4, 0.999252, 0, 0, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47939,-99) , 
4, 0.998572, 0, 0, 0.499941,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0186919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492251,-99) , 
5, -0.724558, 0, 0, 0.522258,-99) , 
NN(
0, 
0, 
-1, 0.000863557, 0, -1, 0.49413,-99) , 
6, 0.0090672, 0, 0, 0.498454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484159,-99) , 
6, 0.0238024, 1, 0, 0.497921,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0051525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.379336, 0, 1, 0.518388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
0, 0.489519, 1, 0, 0.500117,-99) , 
3, 0.50602, 1, 0, 0.501409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490855,-99) , 
3, 8.8365, 1, 0, 0.500949,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00386423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523412,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213617, 1, 1, 0.500854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481856,-99) , 
4, 0.998572, 0, 0, 0.500284,-99) , 
5, 0.768755, 0, 0, 0.500871,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00716802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497368,-99) , 
5, 0.027171, 1, 0, 0.501629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491036,-99) , 
4, 0.998571, 0, 0, 0.501248,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.00867149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483061,-99) , 
4, 0.999592, 0, 0, 0.501857,-99) , 
NN(
0, 
0, 
-1, 0.495588, 0, -1, 0.482513,-99) , 
4, 0.999048, 0, 0, 0.500797,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0124261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.82694, 1, 1, 0.508312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
2, 0.0780895, 0, 0, 0.500054,-99) , 
2, -0.0715513, 1, 0, 0.501529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
5, -0.908365, 0, 0, 0.511709,-99) , 
NN(
0, 
0, 
-1, 0.0712246, 1, -1, 0.48351,-99) , 
5, -0.839641, 1, 0, 0.492727,-99) , 
5, -0.625837, 0, 0, 0.499467,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0101603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492519,-99) , 
4, 0.999796, 0, 0, 0.502269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472714,-99) , 
4, 0.998572, 0, 0, 0.501415,-99) , 
5, 0.76777, 0, 0, 0.501876,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00856457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493727,-99) , 
3, 1.4189, 1, 0, 0.513365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498678,-99) , 
3, 0.565326, 1, 0, 0.49991,-99) , 
4, 0.999524, 1, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48721,-99) , 
3, 9.39852, 1, 0, 0.500703,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00911391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497653,-99) , 
3, 0.384323, 1, 0, 0.510892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497229,-99) , 
0, 0.5019, 0, 0, 0.49854,-99) , 
3, 0.553154, 1, 0, 0.499577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476596,-99) , 
3, 9.41704, 1, 0, 0.498779,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.00929092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488029,-99) , 
0, 0.500948, 1, 0, 0.505708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499285,-99) , 
6, 0.0237968, 0, 0, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473242,-99) , 
4, 0.999293, 0, 0, 0.499465,-99) , 
5, 0.309553, 0, 0, 0.500774,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00928633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.857462, 1, 1, 0.511635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471005,-99) , 
6, 0.0237969, 1, 0, 0.501925,-99) , 
5, -0.812917, 1, 0, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488913,-99) , 
0, 0.505709, 1, 0, 0.502286,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.00972554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487406,-99) , 
3, 1.86265, 1, 0, 0.513394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493525,-99) , 
4, 0.999955, 0, 0, 0.498889,-99) , 
4, 0.999524, 1, 0, 0.500276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480706,-99) , 
3, 9.39852, 1, 0, 0.499588,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0143585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493989,-99) , 
5, -0.536682, 0, 0, 0.508406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493357,-99) , 
2, 0.0123662, 0, 0, 0.497587,-99) , 
2, -0.111983, 1, 0, 0.499035,-99) , 
NN(
0, 
0, 
-1, 4.46817, 1, -1, 0.483463,-99) , 
2, 0.214429, 1, 0, 0.498185,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.00479683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483711,-99) , 
3, 6.998, 1, 0, 0.500679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489135,-99) , 
3, 8.6237, 1, 0, 0.500133,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0080866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49884,-99) , 
4, 0.999048, 1, 0, 0.499713,-99) , 
2, 0.214126, 0, 0, 0.500497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491343,-99) , 
5, -0.131417, 0, 0, 0.495609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475414,-99) , 
5, 0.403102, 1, 0, 0.492757,-99) , 
0, 0.5019, 1, 0, 0.498993,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.00590494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.50184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482504,-99) , 
4, 0.99932, 0, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483238,-99) , 
4, 0.998572, 0, 0, 0.50046,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0191921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.631816, 0, 1, 0.527288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489088,-99) , 
5, -0.251677, 0, 0, 0.497882,-99) , 
6, 0.0113317, 0, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490548,-99) , 
6, 0.0237968, 1, 0, 0.500259,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0096158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480809,-99) , 
0, 0.500675, 1, 0, 0.512008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489144,-99) , 
4, 0.999909, 0, 0, 0.49902,-99) , 
4, 0.999524, 1, 0, 0.500169,-99) , 
NN(
0, 
0, 
-1, -0.255923, 1, -1, 0.489552,-99) , 
0, 0.491424, 0, 0, 0.499402,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.004216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499814,-99) , 
2, 0.276012, 0, 0, 0.500478,-99) , 
2, -0.213348, 1, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0.495573, 0, -1, 0.486893,-99) , 
4, 0.999048, 0, 0, 0.500349,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.00875645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.493664,-99) , 
5, 0.120553, 1, 0, 0.500072,-99) , 
NN(
0, 
0, 
-1, 0.495613, 0, -1, 0.482688,-99) , 
4, 0.999048, 0, 0, 0.499123,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0240011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
5, -0.626903, 0, 0, 0.504197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471813,-99) , 
5, -0.439603, 1, 0, 0.482241,-99) , 
6, 0.0011317, 0, 0, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485359,-99) , 
6, 0.0237659, 1, 0, 0.500138,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0087844);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.763892, 0, 1, 0.512271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498986,-99) , 
2, -0.0733096, 1, 0, 0.500928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479338,-99) , 
2, 0.0716197, 1, 0, 0.49387,-99) , 
3, 3.51282, 1, 0, 0.498843,-99) , 
5, 0.683709, 0, 0, 0.499542,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00898826);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495952,-99) , 
5, -0.326551, 1, 0, 0.499209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478152,-99) , 
4, 0.998572, 0, 0, 0.498592,-99) , 
5, 0.767772, 0, 0, 0.499146,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.013973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491781,-99) , 
3, 1.6408, 1, 0, 0.515014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493509,-99) , 
4, 0.999977, 1, 0, 0.497075,-99) , 
4, 0.999524, 1, 0, 0.498934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.489768,-99) , 
5, -0.721154, 1, 0, 0.491769,-99) , 
3, 4.74401, 1, 0, 0.497567,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.012854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498378,-99) , 
2, 0.0317033, 0, 0, 0.502595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492858,-99) , 
5, 0.580063, 0, 0, 0.494938,-99) , 
3, 2.74922, 1, 0, 0.49976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487355,-99) , 
3, 9.39852, 1, 0, 0.499324,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0122445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494859,-99) , 
4, 0.999932, 0, 0, 0.504395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495513,-99) , 
2, -0.21375, 1, 0, 0.497168,-99) , 
5, -0.441843, 1, 0, 0.499904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485919,-99) , 
4, 0.998572, 0, 0, 0.499402,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0123797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498012,-99) , 
5, -0.294642, 0, 0, 0.518344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494981,-99) , 
3, 3.08203, 1, 0, 0.502789,-99) , 
3, 0.497575, 1, 0, 0.504076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497103,-99) , 
0, 0.502535, 1, 0, 0.504433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487586,-99) , 
0, 0.495868, 1, 0, 0.49366,-99) , 
0, 0.499995, 0, 0, 0.497698,-99) , 
3, 4.37429, 1, 0, 0.502686,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0115284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494416,-99) , 
0, 0.498091, 1, 0, 0.500463,-99) , 
4, 0.999048, 1, 0, 0.503987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
6, 0.0237708, 0, 0, 0.500424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455048,-99) , 
4, 0.999238, 0, 0, 0.498858,-99) , 
5, 0.213929, 0, 0, 0.500171,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.00708641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.908626, 0, 1, 0.517165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491187,-99) , 
5, -0.765861, 1, 0, 0.500695,-99) , 
5, -0.8401, 1, 0, 0.508408,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486315,-99) , 
0, 0.505709, 1, 0, 0.500828,-99) , 
5, -0.720174, 1, 0, 0.502076,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0101856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499617,-99) , 
5, -0.628449, 1, 0, 0.502282,-99) , 
4, 0.999048, 1, 0, 0.503655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490708,-99) , 
2, 0.0307104, 1, 0, 0.498051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483034,-99) , 
2, -0.214119, 0, 0, 0.496093,-99) , 
3, 4.47231, 1, 0, 0.502068,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.00663211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.557247, 1, 1, 0.502438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49296,-99) , 
5, 0.204868, 0, 0, 0.494777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481564,-99) , 
2, 0.21465, 1, 0, 0.493028,-99) , 
3, 4.76741, 1, 0, 0.500655,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00547604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49894,-99) , 
3, 8.31895, 0, 0, 0.499569,-99) , 
2, -0.213986, 1, 0, 0.50026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482107,-99) , 
4, 0.998572, 0, 0, 0.499615,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00763582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34859, 0, 1, 0.502573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485469,-99) , 
2, 0.0722077, 0, 0, 0.493799,-99) , 
4, 0.999592, 0, 0, 0.501958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480156,-99) , 
4, 0.998572, 0, 0, 0.501182,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.00799356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496723,-99) , 
3, 2.741, 1, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485452,-99) , 
5, 0.674442, 1, 0, 0.499835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483577,-99) , 
4, 0.998571, 0, 0, 0.499255,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0061928);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.763892, 0, 1, 0.516396,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.501454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476954,-99) , 
4, 0.999048, 0, 0, 0.500432,-99) , 
5, 0.683712, 0, 0, 0.501274,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.00833106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.78307, 0, 1, 0.512407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498259,-99) , 
0, 0.491696, 1, 0, 0.499094,-99) , 
0, 0.504757, 0, 0, 0.499927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495549,-99) , 
4, 0.998617, 1, 0, 0.502833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467865,-99) , 
5, 0.0240302, 0, 0, 0.490504,-99) , 
4, 0.999524, 0, 0, 0.499045,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.00450816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499852,-99) , 
3, 8.5394, 0, 0, 0.500771,-99) , 
2, 0.214865, 0, 0, 0.501537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481372,-99) , 
5, 0.496652, 0, 0, 0.491671,-99) , 
4, 0.999048, 0, 0, 0.500985,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00895081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.503202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475,-99) , 
4, 0.999932, 1, 0, 0.492594,-99) , 
5, 0.581419, 1, 0, 0.502435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484299,-99) , 
4, 0.998572, 0, 0, 0.50179,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0100109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48374,-99) , 
5, -0.551891, 0, 0, 0.509212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497053,-99) , 
5, 0.395369, 0, 0, 0.49814,-99) , 
3, 0.545431, 1, 0, 0.499044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479705,-99) , 
3, 9.41001, 1, 0, 0.498377,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00559182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42932, 0, 1, 0.501224,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.489655,-99) , 
4, 0.99966, 0, 0, 0.500277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474471,-99) , 
4, 0.998571, 0, 0, 0.499373,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.00676864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4898,-99) , 
0, 0.494508, 0, 0, 0.510882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499432,-99) , 
3, 9.42815, 0, 0, 0.500435,-99) , 
4, 0.999524, 1, 0, 0.501405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487428,-99) , 
0, 0.505709, 1, 0, 0.500863,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0054517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498935,-99) , 
2, 0.27569, 0, 0, 0.499816,-99) , 
2, -0.213988, 1, 0, 0.500425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487598,-99) , 
3, 9.39852, 1, 0, 0.499974,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00427365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499666,-99) , 
3, 9.39852, 0, 0, 0.500208,-99) , 
2, 0.215036, 0, 0, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485372,-99) , 
4, 0.998571, 0, 0, 0.5005,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.00759851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498328,-99) , 
5, -0.326672, 1, 0, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474975,-99) , 
4, 0.998572, 0, 0, 0.500228,-99) , 
5, 0.767467, 0, 0, 0.500695,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0075891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34832, 0, 1, 0.502159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459899,-99) , 
5, -0.109609, 0, 0, 0.492986,-99) , 
4, 0.999524, 0, 0, 0.501281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488926,-99) , 
5, -0.906969, 0, 0, 0.500801,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0102786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48039,-99) , 
5, -0.165447, 1, 0, 0.492367,-99) , 
0, 0.491015, 0, 0, 0.503427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483768,-99) , 
2, 0.00432927, 0, 0, 0.493948,-99) , 
2, -0.0704085, 1, 0, 0.496876,-99) , 
0, 0.5019, 1, 0, 0.502148,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.00784506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477764,-99) , 
4, 0.999728, 0, 0, 0.502279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494214,-99) , 
0, 0.497773, 1, 0, 0.497956,-99) , 
0, 0.500947, 0, 0, 0.49907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486164,-99) , 
4, 0.998572, 0, 0, 0.498607,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.00736958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497741,-99) , 
2, -0.213899, 1, 0, 0.498242,-99) , 
3, 9.42202, 0, 0, 0.498968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481186,-99) , 
4, 0.998571, 0, 0, 0.498337,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00829827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497819, 0, 1, 0.51069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493006,-99) , 
2, -0.0713028, 0, 0, 0.500136,-99) , 
5, 0.585649, 0, 0, 0.50111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503229,-99) , 
NN(
0, 
0, 
-1, -0.00369402, 1, -1, 0.490405,-99) , 
2, 0.0710831, 0, 0, 0.493338,-99) , 
0, 0.5019, 1, 0, 0.499605,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0105627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49573,-99) , 
5, -0.167094, 0, 0, 0.510623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496724,-99) , 
2, -0.112201, 1, 0, 0.498561,-99) , 
2, 0.214239, 0, 0, 0.499194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482256,-99) , 
3, 9.41966, 1, 0, 0.498607,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00612505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43846, 1, 1, 0.514841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499209,-99) , 
0, 0.503805, 0, 0, 0.500304,-99) , 
4, 0.999048, 1, 0, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480813,-99) , 
3, 9.41367, 1, 0, 0.500409,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.00643912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.421512, 1, 1, 0.501774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482357,-99) , 
3, 7.06176, 1, 0, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479277,-99) , 
3, 8.70229, 1, 0, 0.500037,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.00887232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499298,-99) , 
0, 0.499451, 1, 0, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0.490607, 0, -1, 0.496131,-99) , 
0, 0.493328, 0, 0, 0.501834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490673,-99) , 
2, 0.139409, 0, 0, 0.500538,-99) , 
NN(
0, 
0, 
-1, 4.06576, 1, -1, 0.489616,-99) , 
5, -0.439117, 0, 0, 0.496453,-99) , 
2, 0.0713938, 1, 0, 0.500859,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00720548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498087,-99) , 
4, 0.999932, 0, 0, 0.507407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485913,-99) , 
4, 0.999592, 0, 0, 0.500332,-99) , 
2, -0.070706, 1, 0, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482769,-99) , 
4, 0.998572, 0, 0, 0.500888,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00973896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492879,-99) , 
4, 0.999955, 0, 0, 0.499597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479175,-99) , 
4, 0.999048, 0, 0, 0.498631,-99) , 
5, 0.768755, 0, 0, 0.499168,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00895535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497282,-99) , 
4, 0.999524, 1, 0, 0.498352,-99) , 
3, 8.34552, 0, 0, 0.499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477511,-99) , 
4, 0.998572, 0, 0, 0.498248,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0105444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498216,-99) , 
0, 0.500811, 0, 0, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490551,-99) , 
4, 0.999524, 0, 0, 0.502039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488372,-99) , 
0, 0.491605, 0, 0, 0.499081,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.492589,-99) , 
5, -0.0705494, 0, 0, 0.495271,-99) , 
0, 0.49809, 0, 0, 0.498697,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0115665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0745589, 1, 1, 0.507311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495367,-99) , 
2, -0.0226015, 1, 0, 0.49947,-99) , 
2, 0.0512397, 0, 0, 0.500822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479819,-99) , 
3, 4.43012, 1, 0, 0.49124,-99) , 
2, 0.214478, 1, 0, 0.500298,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.00775483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0593473, 0, 1, 0.504406,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497386,-99) , 
3, 1.87508, 1, 0, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484218,-99) , 
3, 9.41001, 1, 0, 0.500053,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.00767211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
5, -0.44281, 0, 0, 0.504862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498585,-99) , 
2, -0.213611, 1, 0, 0.499257,-99) , 
0, 0.499043, 0, 0, 0.501366,-99) , 
NN(
0, 
0, 
-1, -0.158728, 1, -1, 0.487485,-99) , 
0, 0.504757, 1, 0, 0.500458,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.00575491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.514461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498949,-99) , 
2, 0.275401, 0, 0, 0.499533,-99) , 
2, -0.214245, 1, 0, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47951,-99) , 
3, 9.42075, 1, 0, 0.499593,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0103198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482503,-99) , 
5, -0.165447, 1, 0, 0.496392,-99) , 
0, 0.491015, 0, 0, 0.503419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489186,-99) , 
5, 0.122489, 1, 0, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487523,-99) , 
0, 0.502716, 0, 0, 0.497747,-99) , 
0, 0.5019, 1, 0, 0.50232,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.00857735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491907,-99) , 
2, 0.214242, 1, 0, 0.50174,-99) , 
0, 0.506344, 0, 0, 0.502197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489756,-99) , 
4, 0.999955, 0, 0, 0.499101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466093,-99) , 
4, 0.999524, 0, 0, 0.494508,-99) , 
0, 0.494281, 0, 0, 0.500727,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00611455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485561,-99) , 
5, 0.680824, 1, 0, 0.501505,-99) , 
NN(
0, 
0, 
-1, 0.496637, 0, -1, 0.489229,-99) , 
4, 0.999048, 0, 0, 0.50083,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0136142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494162,-99) , 
3, 1.72744, 1, 0, 0.513064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496761,-99) , 
3, 0.526415, 1, 0, 0.49833,-99) , 
4, 0.999524, 1, 0, 0.499868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48932,-99) , 
0, 0.499044, 0, 0, 0.499666,-99) , 
NN(
0, 
0, 
-1, 0.071813, 1, -1, 0.488632,-99) , 
5, 0.121703, 0, 0, 0.492067,-99) , 
3, 4.3687, 1, 0, 0.498174,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0092455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0418288, 0, 1, 0.508021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493336,-99) , 
2, 0.0715778, 1, 0, 0.499551,-99) , 
3, 1.33675, 1, 0, 0.502322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488493,-99) , 
3, 8.68021, 1, 0, 0.501684,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00542128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499413,-99) , 
0, 0.491424, 1, 0, 0.500245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478556,-99) , 
4, 0.999411, 0, 0, 0.499659,-99) , 
NN(
0, 
0, 
-1, 0.496652, 0, -1, 0.482787,-99) , 
4, 0.999048, 0, 0, 0.498748,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00662466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502481,-99) , 
NN(
0, 
0, 
-1, -0.0712068, 0, -1, 0.495972,-99) , 
3, 4.75332, 1, 0, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483023,-99) , 
0, 0.505709, 1, 0, 0.500569,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00880221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497944,-99) , 
2, 0.064337, 0, 0, 0.499059,-99) , 
4, 0.998571, 1, 0, 0.499796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494023,-99) , 
0, 0.493328, 1, 0, 0.496418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476976,-99) , 
2, -0.214032, 0, 0, 0.493899,-99) , 
3, 4.39379, 1, 0, 0.498529,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0119214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497675,-99) , 
3, 4.3334, 1, 0, 0.505429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494489,-99) , 
2, -0.0391432, 1, 0, 0.497123,-99) , 
2, 0.0308127, 0, 0, 0.499549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475674,-99) , 
5, -0.167011, 0, 0, 0.488828,-99) , 
2, -0.214033, 0, 0, 0.498961,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0101668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485398,-99) , 
3, 6.96126, 1, 0, 0.501468,-99) , 
3, 8.57033, 0, 0, 0.502323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493575,-99) , 
4, 0.998617, 1, 0, 0.50775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463793,-99) , 
5, -0.162103, 0, 0, 0.495648,-99) , 
4, 0.999524, 0, 0, 0.501698,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.00579754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
3, 9.42509, 0, 0, 0.50057,-99) , 
4, 0.999048, 1, 0, 0.501164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480202,-99) , 
4, 0.999887, 0, 0, 0.499651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481604,-99) , 
4, 0.999524, 0, 0, 0.49735,-99) , 
0, 0.495233, 0, 0, 0.500196,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00845025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485504,-99) , 
5, -0.906955, 0, 0, 0.50048,-99) , 
3, 8.34832, 0, 0, 0.501306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487841,-99) , 
5, 0.64784, 0, 0, 0.501009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467345,-99) , 
5, 0.0260212, 0, 0, 0.489076,-99) , 
4, 0.999524, 0, 0, 0.500171,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0198279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493088,-99) , 
5, -0.440357, 0, 0, 0.50256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478375,-99) , 
5, -0.532974, 1, 0, 0.485682,-99) , 
6, 0.00113276, 0, 0, 0.499861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484993,-99) , 
6, 0.0237891, 1, 0, 0.499319,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00926616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491943,-99) , 
0, 0.499043, 1, 0, 0.513866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497904,-99) , 
2, 0.214289, 0, 0, 0.49899,-99) , 
3, 0.542504, 1, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486308,-99) , 
3, 9.40736, 1, 0, 0.499714,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0097204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496484,-99) , 
4, 0.999964, 0, 0, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485585,-99) , 
4, 0.999252, 0, 0, 0.501355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486049,-99) , 
4, 0.998572, 0, 0, 0.500805,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0100964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.900796, 0, 1, 0.515116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478526,-99) , 
5, -0.799688, 0, 0, 0.496319,-99) , 
5, -0.839749, 1, 0, 0.505137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497432,-99) , 
3, 0.51575, 1, 0, 0.498558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488582,-99) , 
3, 8.84534, 1, 0, 0.498102,-99) , 
5, -0.71957, 1, 0, 0.499249,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0056692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214913, 0, 1, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490556,-99) , 
3, 8.70229, 1, 0, 0.50197,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0209879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488693,-99) , 
5, -0.629325, 0, 0, 0.512282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493095,-99) , 
5, 0.215156, 0, 0, 0.498014,-99) , 
6, 0.00792934, 0, 0, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484808,-99) , 
6, 0.0237891, 1, 0, 0.500238,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0173995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492325,-99) , 
4, 0.999991, 0, 0, 0.507665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473397,-99) , 
4, 0.99981, 0, 0, 0.504709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49619,-99) , 
2, 0.132702, 0, 0, 0.497145,-99) , 
2, 0.214312, 0, 0, 0.497998,-99) , 
5, -0.441441, 1, 0, 0.500479,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0093688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487207,-99) , 
4, 0.999864, 0, 0, 0.507926,-99) , 
NN(
0, 
0, 
-1, -0.213742, 1, 1, 0.501553,-99) , 
5, -0.533102, 1, 0, 0.503552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485492,-99) , 
4, 0.998571, 0, 0, 0.502904,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0169431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491368,-99) , 
4, 0.999961, 0, 0, 0.502847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463993,-99) , 
4, 0.999175, 0, 0, 0.501583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51159,-99) , 
NN(
0, 
0, 
-1, 0.640972, 1, -1, 0.49139,-99) , 
5, 0.74483, 0, 0, 0.494485,-99) , 
5, 0.308629, 1, 0, 0.500107,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00469951);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482509,-99) , 
3, 8.84534, 1, 0, 0.500854,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0140394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504752,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488708,-99) , 
6, 0.00226689, 0, 0, 0.499688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487526,-99) , 
6, 0.0238024, 1, 0, 0.499251,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0100532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487967,-99) , 
4, 0.999728, 0, 0, 0.502716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496468,-99) , 
4, 0.999524, 1, 0, 0.497302,-99) , 
0, 0.500947, 0, 0, 0.498696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47551,-99) , 
4, 0.998571, 0, 0, 0.497882,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00700827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488113,-99) , 
3, 2.16387, 1, 0, 0.512482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499242,-99) , 
6, 0.0238024, 0, 0, 0.4999,-99) , 
4, 0.999524, 1, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488781,-99) , 
3, 8.73833, 1, 0, 0.500546,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.00908966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499421,-99) , 
0, 0.502852, 0, 0, 0.502528,-99) , 
0, 0.493328, 1, 0, 0.50527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49216,-99) , 
3, 4.93425, 1, 0, 0.506847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497912,-99) , 
2, 0.039325, 0, 0, 0.499347,-99) , 
2, -0.153083, 1, 0, 0.500177,-99) , 
2, 0.0713938, 0, 0, 0.501097,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0048088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0233061, 1, 1, 0.511882,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.498698,-99) , 
4, 0.999524, 1, 0, 0.49951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485417,-99) , 
4, 0.998572, 0, 0, 0.499008,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.00735062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497367,-99) , 
5, -0.754998, 1, 0, 0.505393,-99) , 
NN(
0, 
0, 
-1, 0.50326, 0, -1, 0.491494,-99) , 
5, -0.532281, 1, 0, 0.496175,-99) , 
0, 0.5019, 1, 0, 0.501293,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00405939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.487952,-99) , 
4, 0.999048, 0, 0, 0.50071,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0112285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49939,-99) , 
5, -0.626896, 0, 0, 0.509406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496702,-99) , 
2, -0.0704683, 1, 0, 0.500545,-99) , 
0, 0.502308, 1, 0, 0.50577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493448,-99) , 
3, 1.03662, 0, 0, 0.502831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492628,-99) , 
5, -0.109461, 0, 0, 0.497361,-99) , 
5, -0.534787, 1, 0, 0.498991,-99) , 
0, 0.499043, 0, 0, 0.501834,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00626769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497768,-99) , 
3, 1.32242, 1, 0, 0.513725,-99) , 
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.50149,-99) , 
4, 0.999524, 1, 0, 0.502669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491676,-99) , 
3, 8.72033, 1, 0, 0.502172,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.016284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496363,-99) , 
6, 0.013598, 0, 0, 0.500384,-99) , 
6, 0.0237969, 0, 0, 0.504059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495583,-99) , 
4, 0.999048, 1, 0, 0.497116,-99) , 
2, 0.214206, 0, 0, 0.498377,-99) , 
5, -0.25381, 1, 0, 0.501162,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00936021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.504057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484531,-99) , 
4, 0.99941, 0, 0, 0.503529,-99) , 
NN(
0, 
0, 
-1, 0.496637, 0, -1, 0.489891,-99) , 
4, 0.999048, 0, 0, 0.502783,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00604169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499809,-99) , 
3, 8.18963, 0, 0, 0.500636,-99) , 
2, -0.214303, 1, 0, 0.501329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49545,-99) , 
4, 0.999524, 1, 0, 0.496477,-99) , 
0, 0.489428, 1, 0, 0.497342,-99) , 
0, 0.497138, 0, 0, 0.499703,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00614825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.502038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485986,-99) , 
5, 0.713676, 0, 0, 0.494982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477446,-99) , 
0, 0.496186, 0, 0, 0.488887,-99) , 
5, 0.58904, 1, 0, 0.500913,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.00656943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44507, 1, 1, 0.514433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498582,-99) , 
0, 0.504757, 0, 0, 0.499451,-99) , 
4, 0.999048, 1, 0, 0.50029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483194,-99) , 
3, 9.39852, 1, 0, 0.499696,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.00757573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495983,-99) , 
0, 0.504919, 1, 0, 0.501379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496922,-99) , 
0, 0.493205, 1, 0, 0.498033,-99) , 
0, 0.498181, 0, 0, 0.499889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492171,-99) , 
3, 2.48146, 0, 0, 0.498195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481148,-99) , 
5, -0.0699203, 1, 0, 0.491931,-99) , 
0, 0.492376, 0, 0, 0.499063,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.00401994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499874,-99) , 
2, -0.111175, 1, 0, 0.501009,-99) , 
2, 0.215118, 0, 0, 0.50168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494784,-99) , 
4, 0.998572, 0, 0, 0.501431,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0113626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497059,-99) , 
3, 1.87507, 1, 0, 0.515403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497241,-99) , 
4, 0.999977, 1, 0, 0.500931,-99) , 
4, 0.999524, 1, 0, 0.502424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498071,-99) , 
2, -0.00354586, 0, 0, 0.499944,-99) , 
NN(
0, 
0, 
-1, -0.252168, 0, -1, 0.487255,-99) , 
2, 0.0712876, 1, 0, 0.495717,-99) , 
3, 4.75611, 1, 0, 0.501154,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00947466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.840518, 1, 1, 0.503664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488778,-99) , 
5, 0.674443, 1, 0, 0.503072,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.481731,-99) , 
4, 0.999048, 0, 0, 0.50192,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00432433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499338,-99) , 
3, 8.57019, 0, 0, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483489,-99) , 
4, 0.99941, 0, 0, 0.499645,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491032,-99) , 
4, 0.999048, 0, 0, 0.49917,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.00647489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498736,-99) , 
2, -0.213315, 1, 0, 0.49964,-99) , 
5, -0.346332, 1, 0, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487798,-99) , 
4, 0.998572, 0, 0, 0.50108,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.00932526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484019,-99) , 
0, 0.500358, 1, 0, 0.510253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47303,-99) , 
4, 0.999705, 0, 0, 0.500099,-99) , 
4, 0.999524, 1, 0, 0.500972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484271,-99) , 
3, 1.55308, 0, 0, 0.498851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478033,-99) , 
5, 0.110513, 1, 0, 0.49305,-99) , 
0, 0.492376, 0, 0, 0.50015,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.00459641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499607,-99) , 
4, 0.999524, 1, 0, 0.500316,-99) , 
2, 0.214545, 0, 0, 0.500974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480853,-99) , 
4, 0.998571, 0, 0, 0.500263,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00796861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.51266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497196,-99) , 
2, 0.0230421, 0, 0, 0.499399,-99) , 
2, -0.132417, 1, 0, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.489433,-99) , 
2, -0.214032, 0, 0, 0.49953,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.00839549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498075,-99) , 
3, 1.31637, 1, 0, 0.500859,-99) , 
3, 8.50145, 0, 0, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486005,-99) , 
4, 0.998571, 0, 0, 0.5008,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.00581621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505437, 0, 1, 0.514466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49449,-99) , 
5, 0.0289467, 1, 0, 0.508383,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492588, 1, 1, 0.50168,-99) , 
NN(
0, 
0, 
-1, 0.0716191, 1, -1, 0.497271,-99) , 
3, 4.2012, 1, 0, 0.500693,-99) , 
0, 0.503804, 0, 0, 0.501471,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.00438001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499426,-99) , 
4, 0.999524, 1, 0, 0.500216,-99) , 
3, 9.39852, 0, 0, 0.500697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485443,-99) , 
4, 0.998571, 0, 0, 0.500157,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00521873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.261826, 1, 1, 0.513413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49946,-99) , 
3, 8.22912, 0, 0, 0.500237,-99) , 
0, 0.504757, 0, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.487456,-99) , 
4, 0.999048, 0, 0, 0.500338,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0124753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499037,-99) , 
4, 0.999998, 0, 0, 0.504258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473595,-99) , 
3, 4.74401, 1, 0, 0.49773,-99) , 
4, 0.999955, 0, 0, 0.502338,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.485229,-99) , 
4, 0.999048, 0, 0, 0.501408,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.00982832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485538,-99) , 
5, -0.160523, 0, 0, 0.51245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491595,-99) , 
4, 0.999864, 0, 0, 0.501104,-99) , 
4, 0.999524, 1, 0, 0.502184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488925,-99) , 
3, 8.8365, 1, 0, 0.50161,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.00529014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499093,-99) , 
3, 4.75996, 0, 0, 0.500111,-99) , 
0, 0.490471, 1, 0, 0.500809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485287,-99) , 
4, 0.998572, 0, 0, 0.500264,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00468613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480276,-99) , 
4, 0.99941, 0, 0, 0.500704,-99) , 
NN(
0, 
0, 
-1, 0.492381, 0, -1, 0.487687,-99) , 
4, 0.999048, 0, 0, 0.499995,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00892087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499718,-99) , 
6, 0.0237708, 0, 0, 0.502864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495489,-99) , 
3, 4.35081, 0, 0, 0.497948,-99) , 
5, -0.162633, 1, 0, 0.500709,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.488735,-99) , 
4, 0.999048, 0, 0, 0.50006,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00735408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498275,-99) , 
5, -0.382808, 0, 0, 0.512672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490096,-99) , 
3, 6.77224, 1, 0, 0.501345,-99) , 
3, 0.51022, 1, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487278,-99) , 
3, 8.72917, 1, 0, 0.501492,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0092641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499936,-99) , 
0, 0.497139, 0, 0, 0.509552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494386,-99) , 
3, 3.06201, 1, 0, 0.505454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498228,-99) , 
5, -0.848551, 1, 0, 0.499143,-99) , 
2, -0.0712558, 1, 0, 0.500264,-99) , 
5, 0.59017, 0, 0, 0.501083,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.00576842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488119,-99) , 
0, 0.500947, 1, 0, 0.51086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499922,-99) , 
3, 0.536105, 1, 0, 0.500867,-99) , 
4, 0.999524, 1, 0, 0.50181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490525,-99) , 
3, 8.8365, 1, 0, 0.50132,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.00821104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.764852, 0, 1, 0.503979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49241,-99) , 
3, 9.41001, 1, 0, 0.503574,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00995497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.516302, 1, 1, 0.503626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485846,-99) , 
5, -0.906456, 0, 0, 0.502928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491964,-99) , 
2, -0.0779732, 0, 0, 0.498504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482406,-99) , 
5, 0.0282568, 0, 0, 0.491233,-99) , 
2, 0.0716557, 1, 0, 0.496084,-99) , 
3, 4.41184, 1, 0, 0.501461,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00741506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494082,-99) , 
5, -0.761351, 1, 0, 0.505371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
2, 0.07211, 0, 0, 0.498937,-99) , 
5, -0.721576, 1, 0, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480725,-99) , 
4, 0.998572, 0, 0, 0.499338,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.00623201);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487147,-99) , 
4, 0.998617, 1, 0, 0.500974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472727,-99) , 
5, -0.0730571, 0, 0, 0.492255,-99) , 
4, 0.999524, 0, 0, 0.500676,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0162896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.016084, 1, 1, 0.519265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493512,-99) , 
5, -0.065269, 0, 0, 0.499393,-99) , 
6, 0.0113344, 0, 0, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48555,-99) , 
6, 0.0238024, 1, 0, 0.500675,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0130614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
4, 0.999997, 0, 0, 0.501996,-99) , 
NN(
0, 
0, 
-1, 4.26319, 1, -1, 0.493426,-99) , 
4, 0.999932, 0, 0, 0.499872,-99) , 
4, 0.998571, 1, 0, 0.500452,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00898664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498805,-99) , 
6, 0.0124678, 0, 0, 0.501489,-99) , 
6, 0.0238024, 0, 0, 0.50235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504879,-99) , 
NN(
0, 
0, 
-1, 3.80068, 1, -1, 0.495326,-99) , 
5, 0.714893, 0, 0, 0.497207,-99) , 
5, 0.309553, 1, 0, 0.501276,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00508223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489258,-99) , 
3, 8.44614, 1, 0, 0.501469,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00759041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.35094, 0, 1, 0.501644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485975,-99) , 
5, 0.486199, 0, 0, 0.492128,-99) , 
4, 0.999796, 0, 0, 0.500477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474861,-99) , 
4, 0.998572, 0, 0, 0.499578,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.018788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493365,-99) , 
5, -0.44185, 0, 0, 0.503342,-99) , 
NN(
0, 
0, 
-1, 0.000485504, 0, -1, 0.485828,-99) , 
6, 0.0011328, 0, 0, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486588,-99) , 
6, 0.0237891, 1, 0, 0.500076,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0174526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49554,-99) , 
6, 0.0124506, 0, 0, 0.499425,-99) , 
6, 0.0237708, 0, 0, 0.502044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495259,-99) , 
4, 0.999048, 1, 0, 0.497777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470417,-99) , 
0, 0.504757, 1, 0, 0.496233,-99) , 
5, -0.158138, 1, 0, 0.499409,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0117441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498088,-99) , 
4, 0.999957, 0, 0, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492121,-99) , 
4, 0.999099, 0, 0, 0.504045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495841,-99) , 
4, 0.999524, 1, 0, 0.499741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486663,-99) , 
5, 0.607991, 0, 0, 0.49501,-99) , 
5, 0.496631, 1, 0, 0.502911,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0137343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486001,-99) , 
5, -0.627971, 0, 0, 0.511985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48917,-99) , 
4, 0.999524, 0, 0, 0.50174,-99) , 
1, -0.00566537, 1, 0, 0.503414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489416,-99) , 
6, 0.0238024, 1, 0, 0.502898,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0130305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497745,-99) , 
6, 0.0135981, 0, 0, 0.500484,-99) , 
6, 0.0237969, 0, 0, 0.502823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495311,-99) , 
2, -0.19406, 1, 0, 0.496827,-99) , 
2, 0.21403, 0, 0, 0.498076,-99) , 
5, -0.0645995, 1, 0, 0.50092,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0103577);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.506451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499071,-99) , 
5, 0.587444, 0, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486553,-99) , 
0, 0.503805, 1, 0, 0.499926,-99) , 
5, -0.159587, 1, 0, 0.503481,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00922135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495098, 0, 1, 0.514768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49965,-99) , 
5, -0.348713, 1, 0, 0.502993,-99) , 
4, 0.999524, 1, 0, 0.504057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488792,-99) , 
2, -0.00366514, 1, 0, 0.496047,-99) , 
2, 0.0711155, 0, 0, 0.498621,-99) , 
0, 0.5019, 1, 0, 0.503007,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00613141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498874,-99) , 
0, 0.501129, 1, 0, 0.510853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497448,-99) , 
0, 0.495234, 0, 0, 0.507351,-99) , 
NN(
0, 
0, 
-1, -0.857697, 1, 1, 0.502175,-99) , 
5, 0.494067, 0, 0, 0.502834,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0069161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496706,-99) , 
0, 0.494281, 0, 0, 0.513417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493372,-99) , 
3, 3.16674, 1, 0, 0.502172,-99) , 
5, -0.443634, 0, 0, 0.509248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486099,-99) , 
6, 0.0237968, 1, 0, 0.499836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483688,-99) , 
0, 0.505709, 1, 0, 0.499286,-99) , 
2, -0.0714552, 1, 0, 0.501086,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.00832596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497963,-99) , 
2, -0.0702114, 1, 0, 0.499283,-99) , 
3, 8.31808, 0, 0, 0.500232,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.483888,-99) , 
4, 0.999048, 0, 0, 0.499345,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00391892);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214128, 1, 1, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480854,-99) , 
4, 0.998571, 0, 0, 0.50062,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0200348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497611,-99) , 
6, 0.00453332, 0, 0, 0.504938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484227,-99) , 
6, 0.00340014, 1, 0, 0.494828,-99) , 
5, -0.626089, 0, 0, 0.502652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483033,-99) , 
6, 0.0238024, 1, 0, 0.501936,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00975106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.504569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495381,-99) , 
0, 0.496185, 1, 0, 0.497776,-99) , 
5, 0.0271752, 1, 0, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482121,-99) , 
4, 0.998571, 0, 0, 0.501583,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.00846796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490707,-99) , 
3, 1.41936, 1, 0, 0.50931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498388,-99) , 
6, 0.0237969, 0, 0, 0.499077,-99) , 
4, 0.999524, 1, 0, 0.50004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480644,-99) , 
3, 9.39852, 1, 0, 0.499366,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0083497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497637, 1, 1, 0.502637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494378,-99) , 
0, 0.492149, 1, 0, 0.496552,-99) , 
0, 0.497138, 0, 0, 0.500174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482515,-99) , 
4, 0.998571, 0, 0, 0.499549,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0063667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487588,-99) , 
0, 0.500947, 1, 0, 0.509902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499565,-99) , 
0, 0.490471, 1, 0, 0.500478,-99) , 
4, 0.999524, 1, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48855,-99) , 
3, 8.72917, 1, 0, 0.500793,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0077346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494145,-99) , 
5, -0.166566, 1, 0, 0.512128,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50289,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496919,-99) , 
0, 0.494961, 0, 0, 0.501387,-99) , 
0, 0.504757, 0, 0, 0.502107,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.00832195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0405227, 0, 1, 0.505789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498425,-99) , 
0, 0.504757, 0, 0, 0.499778,-99) , 
3, 1.41936, 1, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485328,-99) , 
3, 9.39852, 1, 0, 0.50127,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0162684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.509351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492421,-99) , 
0, 0.502852, 1, 0, 0.507265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495124,-99) , 
6, 0.0124478, 0, 0, 0.49811,-99) , 
6, 0.0237659, 0, 0, 0.499279,-99) , 
5, 0.117111, 0, 0, 0.50172,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00924137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.209275, 0, 1, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483363,-99) , 
4, 0.999683, 0, 0, 0.502235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488226,-99) , 
2, -0.0714552, 1, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472766,-99) , 
0, 0.494281, 0, 0, 0.492692,-99) , 
4, 0.999524, 0, 0, 0.501349,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.019574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4959,-99) , 
6, 0.00339918, 0, 0, 0.50386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481848,-99) , 
6, 0.00339958, 1, 0, 0.490046,-99) , 
5, -0.625832, 0, 0, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480883,-99) , 
6, 0.0237968, 1, 0, 0.500017,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00991008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497176,-99) , 
4, 0.999955, 0, 0, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491957,-99) , 
4, 0.999048, 0, 0, 0.503347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497305,-99) , 
5, -0.0340841, 1, 0, 0.50066,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.495936,-99) , 
5, -0.345675, 0, 0, 0.498626,-99) , 
0, 0.497138, 1, 0, 0.500553,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0196528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497671,-99) , 
6, 0.00339918, 0, 0, 0.506075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487368,-99) , 
6, 0.00340042, 1, 0, 0.495576,-99) , 
5, -0.439709, 0, 0, 0.502311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487776,-99) , 
6, 0.0238024, 1, 0, 0.501776,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.00565777);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.502694,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.494857,-99) , 
4, 0.999048, 0, 0, 0.502264,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00737156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495093,-99) , 
3, 2.15629, 1, 0, 0.520922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499811,-99) , 
0, 0.491424, 1, 0, 0.500737,-99) , 
4, 0.999524, 1, 0, 0.502678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487968,-99) , 
3, 8.71744, 1, 0, 0.50202,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0116925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0056703, 1, 1, 0.509338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498214,-99) , 
6, 0.0136008, 0, 0, 0.500608,-99) , 
5, 0.0289444, 0, 0, 0.503743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494397,-99) , 
6, 0.0238024, 1, 0, 0.503401,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00954308);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.505249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48904,-99) , 
5, 0.677424, 1, 0, 0.498445,-99) , 
5, 0.765953, 0, 0, 0.50017,-99) , 
5, 0.301229, 1, 0, 0.504172,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0094347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498009,-99) , 
5, 0.0271795, 1, 0, 0.50249,-99) , 
4, 0.998571, 1, 0, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489255,-99) , 
0, 0.490471, 0, 0, 0.502454,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.00631618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499534,-99) , 
3, 8.56798, 0, 0, 0.500659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482046,-99) , 
4, 0.999388, 0, 0, 0.499842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471718,-99) , 
4, 0.998572, 0, 0, 0.498877,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.00904827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497044,-99) , 
3, 1.35858, 1, 0, 0.515615,-99) , 
NN(
0, 
0, 
-1, 0.216506, 0, 1, 0.502991,-99) , 
4, 0.999524, 1, 0, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494241,-99) , 
3, 8.8545, 1, 0, 0.503759,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.00746722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.683712, 0, 1, 0.503116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497867,-99) , 
5, -0.257768, 0, 0, 0.505533,-99) , 
NN(
0, 
0, 
-1, -0.162945, 0, -1, 0.494996,-99) , 
2, 0.0719174, 0, 0, 0.497199,-99) , 
0, 0.495233, 0, 0, 0.501621,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00711528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
3, 4.76875, 0, 0, 0.498285,-99) , 
5, -0.162632, 1, 0, 0.501097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487803,-99) , 
4, 0.998571, 0, 0, 0.500628,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00964442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00566626, 1, 1, 0.502612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488385,-99) , 
6, 0.0124646, 0, 0, 0.491591,-99) , 
5, -0.625823, 0, 0, 0.500115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488903,-99) , 
6, 0.0237968, 1, 0, 0.499704,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.00508357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498471,-99) , 
5, 0.683709, 0, 0, 0.498975,-99) , 
0, 0.491242, 1, 0, 0.499502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488666,-99) , 
0, 0.489519, 0, 0, 0.499194,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00783206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496997,-99) , 
5, -0.441848, 1, 0, 0.499429,-99) , 
2, -0.214103, 1, 0, 0.50008,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.490849,-99) , 
4, 0.999048, 0, 0, 0.499576,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0108805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498835,-99) , 
6, 0.00679871, 0, 0, 0.501118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479204,-99) , 
6, 0.00453273, 1, 0, 0.491485,-99) , 
5, -0.719852, 0, 0, 0.499639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4826,-99) , 
6, 0.0237968, 1, 0, 0.499024,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0147759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498929,-99) , 
4, 0.999048, 1, 0, 0.500486,-99) , 
2, -0.214119, 1, 0, 0.501921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491237,-99) , 
6, 0.0135832, 0, 0, 0.493984,-99) , 
6, 0.023771, 0, 0, 0.497251,-99) , 
5, -0.345216, 0, 0, 0.499911,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00854033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.641171, 1, 1, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493758,-99) , 
5, -0.906954, 0, 0, 0.503622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486108,-99) , 
0, 0.49809, 1, 0, 0.49396,-99) , 
4, 0.999048, 0, 0, 0.503094,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00528141);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506022, 1, 1, 0.502363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491157,-99) , 
3, 8.8365, 1, 0, 0.501883,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00518921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492761,-99) , 
0, 0.501083, 1, 0, 0.511229,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.500904,-99) , 
4, 0.999524, 1, 0, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490149,-99) , 
0, 0.490471, 0, 0, 0.501258,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00510675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495171,-99) , 
4, 0.999252, 0, 0, 0.511209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499447,-99) , 
3, 8.34753, 0, 0, 0.500223,-99) , 
4, 0.999524, 1, 0, 0.500894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487927,-99) , 
4, 0.998571, 0, 0, 0.50043,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00530766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491777,-99) , 
4, 0.999796, 0, 0, 0.507537,-99) , 
NN(
0, 
0, 
-1, 0.213542, 0, 1, 0.500881,-99) , 
0, 0.493329, 1, 0, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486335,-99) , 
4, 0.998571, 0, 0, 0.501262,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00931665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492866,-99) , 
0, 0.499043, 1, 0, 0.515918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497642,-99) , 
0, 0.5019, 0, 0, 0.499081,-99) , 
3, 0.542515, 1, 0, 0.50046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487228,-99) , 
3, 9.40736, 1, 0, 0.499998,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00645112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49892,-99) , 
0, 0.496185, 1, 0, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479803,-99) , 
4, 0.998572, 0, 0, 0.500176,-99) , 
5, 0.767466, 0, 0, 0.500715,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.012734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00339543, 1, 1, 0.505399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494635,-99) , 
6, 0.0135831, 0, 0, 0.497598,-99) , 
5, -0.345216, 0, 0, 0.502108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489373,-99) , 
6, 0.0237708, 1, 0, 0.501642,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0127565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49513,-99) , 
6, 0.0113193, 0, 0, 0.497957,-99) , 
6, 0.0237708, 0, 0, 0.501411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498515,-99) , 
4, 0.999048, 1, 0, 0.499468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476685,-99) , 
5, -0.193773, 0, 0, 0.497946,-99) , 
5, -0.251681, 1, 0, 0.499651,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00498409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.848551, 1, 1, 0.501792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487961,-99) , 
0, 0.495868, 0, 0, 0.495475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481872,-99) , 
0, 0.499995, 1, 0, 0.49147,-99) , 
5, 0.59017, 1, 0, 0.500911,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00424365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499779,-99) , 
5, -0.759459, 1, 0, 0.500832,-99) , 
5, 0.68371, 0, 0, 0.501345,-99) , 
0, 0.490471, 1, 0, 0.501778,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00719197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500539, 1, 1, 0.517573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495918,-99) , 
0, 0.495233, 0, 0, 0.510155,-99) , 
NN(
0, 
0, 
-1, 8.57019, 0, 1, 0.50261,-99) , 
4, 0.999524, 1, 0, 0.503329,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00562464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
2, 0.214312, 0, 0, 0.499978,-99) , 
NN(
0, 
0, 
-1, 0.0711994, 1, -1, 0.487348,-99) , 
3, 7.16653, 1, 0, 0.498978,-99) , 
5, 0.768756, 0, 0, 0.499331,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0125536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492587,-99) , 
6, 0.00113323, 0, 0, 0.508083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497933,-99) , 
6, 0.0034001, 1, 0, 0.501256,-99) , 
5, 0.122478, 0, 0, 0.503385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487212,-99) , 
6, 0.0238024, 1, 0, 0.502794,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0113236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498229,-99) , 
4, 0.999997, 0, 0, 0.502509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471706,-99) , 
3, 4.28219, 1, 0, 0.496537,-99) , 
4, 0.999932, 0, 0, 0.501032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485126,-99) , 
4, 0.998571, 0, 0, 0.500467,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.007485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.504362,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497656,-99) , 
5, -0.252964, 1, 0, 0.501055,-99) , 
NN(
0, 
0, 
-1, 0.484445, 1, -1, 0.489719,-99) , 
4, 0.999048, 0, 0, 0.500439,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.00756497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497485,-99) , 
4, 0.999932, 0, 0, 0.50526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494164,-99) , 
2, 0.0726941, 1, 0, 0.500512,-99) , 
0, 0.495233, 1, 0, 0.501702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487894,-99) , 
4, 0.998571, 0, 0, 0.501218,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0156424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475877,-99) , 
4, 0.999547, 0, 0, 0.501119,-99) , 
4, 0.999048, 1, 0, 0.503507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492256,-99) , 
6, 0.0022664, 1, 0, 0.495566,-99) , 
6, 0.0237969, 0, 0, 0.498247,-99) , 
5, -0.158742, 0, 0, 0.500649,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00844479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00339295, 1, 1, 0.504303,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.496146,-99) , 
5, -0.345221, 0, 0, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492968,-99) , 
6, 0.0237708, 1, 0, 0.500593,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00708135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494854,-99) , 
5, 0.120551, 1, 0, 0.499722,-99) , 
2, -0.214024, 1, 0, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485979,-99) , 
4, 0.998571, 0, 0, 0.499863,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0091203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
5, -0.442674, 1, 0, 0.500265,-99) , 
2, 0.0713933, 0, 0, 0.501581,-99) , 
NN(
0, 
0, 
-1, -0.259626, 1, -1, 0.48944,-99) , 
0, 0.491424, 0, 0, 0.500698,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00511241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507556,-99) , 
NN(
0, 
0, 
-1, 0.395071, 1, -1, 0.498888,-99) , 
4, 0.999048, 1, 0, 0.499383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484133,-99) , 
4, 0.999905, 0, 0, 0.498115,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494191,-99) , 
5, -0.158138, 1, 0, 0.496385,-99) , 
0, 0.499043, 1, 0, 0.498134,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0090959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.719821, 1, 1, 0.504405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495283,-99) , 
5, -0.532281, 0, 0, 0.499974,-99) , 
0, 0.500131, 1, 0, 0.501994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490597,-99) , 
3, 3.56248, 1, 0, 0.501881,-99) , 
NN(
0, 
0, 
-1, 0.492149, 0, -1, 0.49531,-99) , 
5, -0.257709, 1, 0, 0.498506,-99) , 
0, 0.497138, 0, 0, 0.500575,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.00496195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49932,-99) , 
0, 0.505981, 0, 0, 0.499873,-99) , 
0, 0.490471, 1, 0, 0.500561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478992,-99) , 
4, 0.998571, 0, 0, 0.49981,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00718044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.130949, 0, 1, 0.507781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49027,-99) , 
5, 0.484375, 1, 0, 0.505432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499193,-99) , 
4, 0.999048, 1, 0, 0.500125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490088,-99) , 
2, -0.213975, 0, 0, 0.499635,-99) , 
0, 0.495233, 1, 0, 0.501105,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00702352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00792025, 1, 1, 0.502317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478878,-99) , 
6, 0.0237659, 1, 0, 0.501635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504126,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.48717,-99) , 
5, -0.919818, 1, 0, 0.493071,-99) , 
5, -0.812915, 0, 0, 0.500835,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0104391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481407,-99) , 
6, 0.0147313, 1, 0, 0.502635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490459,-99) , 
6, 0.0237968, 1, 0, 0.502193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493076,-99) , 
2, -0.0472574, 1, 0, 0.498654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488971,-99) , 
3, 4.14682, 1, 0, 0.495943,-99) , 
0, 0.502852, 1, 0, 0.501301,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.00679651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.204595, 0, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492818,-99) , 
0, 0.506253, 1, 0, 0.502378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497956,-99) , 
3, 8.65125, 0, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486827,-99) , 
2, 0.214242, 1, 0, 0.498084,-99) , 
0, 0.502852, 0, 0, 0.498698,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00711766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497773,-99) , 
5, 0.0107073, 1, 0, 0.500757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477506,-99) , 
4, 0.999048, 0, 0, 0.499679,-99) , 
5, 0.768755, 0, 0, 0.500169,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00991258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485395,-99) , 
5, 0.716075, 1, 0, 0.50094,-99) , 
4, 0.999048, 1, 0, 0.503328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49784,-99) , 
6, 0.0237659, 0, 0, 0.499212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465807,-99) , 
4, 0.999333, 0, 0, 0.497934,-99) , 
5, 0.122474, 0, 0, 0.499568,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0078598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499017,-99) , 
6, 0.013598, 0, 0, 0.500253,-99) , 
6, 0.0237968, 0, 0, 0.501532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506178,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.49463,-99) , 
4, 0.999048, 1, 0, 0.496067,-99) , 
5, 0.122475, 1, 0, 0.499889,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00720794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49334,-99) , 
3, 1.87467, 1, 0, 0.518965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499536,-99) , 
6, 0.0237659, 0, 0, 0.500088,-99) , 
4, 0.999524, 1, 0, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484649,-99) , 
3, 9.41001, 1, 0, 0.501283,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00914005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.448578, 0, 1, 0.514305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
5, 0.12168, 0, 0, 0.501945,-99) , 
1, -0.00792283, 1, 0, 0.503166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486935,-99) , 
6, 0.0237708, 1, 0, 0.502577,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.00841431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.41367, 0, 1, 0.503663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490594,-99) , 
4, 0.999252, 0, 0, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486021,-99) , 
4, 0.998571, 0, 0, 0.502628,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00898524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.728285, 1, 1, 0.5044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493229,-99) , 
5, -0.906456, 0, 0, 0.503963,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00742366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496742,-99) , 
3, 1.41936, 1, 0, 0.511697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498643,-99) , 
0, 0.490471, 1, 0, 0.499447,-99) , 
4, 0.999524, 1, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483574,-99) , 
3, 9.39852, 1, 0, 0.500001,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00756226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
6, 0.0237681, 0, 0, 0.500622,-99) , 
3, 8.3121, 0, 0, 0.501492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468466,-99) , 
0, 0.493963, 0, 0, 0.496693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467437,-99) , 
0, 0.500947, 1, 0, 0.488308,-99) , 
4, 0.999524, 0, 0, 0.500279,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00719591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46863, 1, 1, 0.511023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498362,-99) , 
5, -0.25872, 0, 0, 0.502884,-99) , 
3, 4.79158, 1, 0, 0.508183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49924,-99) , 
3, 7.76073, 0, 0, 0.500243,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.486841,-99) , 
4, 0.999524, 0, 0, 0.499321,-99) , 
2, -0.0712063, 1, 0, 0.500926,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.01183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488235,-99) , 
4, 0.999683, 0, 0, 0.50289,-99) , 
4, 0.999048, 1, 0, 0.504641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498002,-99) , 
6, 0.0147312, 0, 0, 0.499533,-99) , 
6, 0.0237969, 0, 0, 0.501656,-99) , 
5, -0.158143, 0, 0, 0.503017,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0105207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
5, -0.439146, 0, 0, 0.504329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489521,-99) , 
6, 0.015868, 1, 0, 0.503802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491566,-99) , 
6, 0.0238024, 1, 0, 0.503354,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0130904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.510419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
3, 8.57148, 0, 0, 0.499652,-99) , 
5, -0.346344, 1, 0, 0.504478,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.484451,-99) , 
4, 0.999048, 0, 0, 0.503399,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.00589835);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214086, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483484,-99) , 
3, 9.41367, 1, 0, 0.501788,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0107513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999995, 0, 1, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486897,-99) , 
4, 0.999905, 0, 0, 0.507541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498347,-99) , 
2, 0.132452, 0, 0, 0.49929,-99) , 
2, 0.214076, 0, 0, 0.499958,-99) , 
5, -0.532617, 1, 0, 0.502285,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.00823316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492963,-99) , 
3, 8.71113, 1, 0, 0.503164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488033,-99) , 
0, 0.505709, 1, 0, 0.502583,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0115725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.402094, 0, 1, 0.505278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484541,-99) , 
5, -0.629342, 0, 0, 0.495697,-99) , 
1, 0.0079351, 1, 0, 0.504336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486819,-99) , 
6, 0.0238024, 1, 0, 0.503698,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00975724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.504134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49549,-99) , 
3, 4.78037, 0, 0, 0.497036,-99) , 
5, -0.2558, 1, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476838,-99) , 
4, 0.998572, 0, 0, 0.499771,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00629699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488016,-99) , 
3, 1.43368, 0, 0, 0.508465,-99) , 
NN(
0, 
0, 
-1, 0.503033, 1, -1, 0.49866,-99) , 
0, 0.503804, 0, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485545,-99) , 
3, 9.39852, 1, 0, 0.499144,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00401282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498635,-99) , 
0, 0.495369, 0, 0, 0.506037,-99) , 
NN(
0, 
0, 
-1, 0.999146, 0, -1, 0.499153,-99) , 
5, 0.492374, 0, 0, 0.500041,-99) , 
0, 0.505709, 0, 0, 0.500493,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00646219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485637,-99) , 
4, 0.99932, 0, 0, 0.501218,-99) , 
2, -0.214024, 1, 0, 0.501904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484909,-99) , 
4, 0.998571, 0, 0, 0.501305,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00598386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486787,-99) , 
3, 2.14376, 1, 0, 0.511215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499803,-99) , 
6, 0.0238024, 0, 0, 0.500455,-99) , 
4, 0.999524, 1, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488893,-99) , 
3, 8.64484, 1, 0, 0.500888,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00746164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489472,-99) , 
3, 5.92021, 1, 0, 0.500891,-99) , 
3, 8.23891, 0, 0, 0.501453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505677,-99) , 
NN(
0, 
0, 
-1, 0.309561, 0, -1, 0.485562,-99) , 
2, 0.0716197, 0, 0, 0.493577,-99) , 
4, 0.999524, 0, 0, 0.500719,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0124329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497127,-99) , 
5, -0.251682, 0, 0, 0.505504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49678,-99) , 
2, -0.0708259, 1, 0, 0.498628,-99) , 
1, -0.00113464, 1, 0, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482429,-99) , 
6, 0.0238024, 1, 0, 0.500812,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0101219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499076,-99) , 
1, -0.00340224, 1, 0, 0.501597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487877,-99) , 
5, -0.839757, 1, 0, 0.492519,-99) , 
5, -0.626105, 0, 0, 0.49956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477491,-99) , 
6, 0.0238024, 1, 0, 0.498768,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00589929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.32293, 1, 1, 0.519684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487476,-99) , 
3, 6.63089, 1, 0, 0.500121,-99) , 
4, 0.999048, 1, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487859,-99) , 
3, 8.66791, 1, 0, 0.500609,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00759064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48471,-99) , 
3, 1.87456, 1, 0, 0.510502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499028,-99) , 
6, 0.0237968, 0, 0, 0.499812,-99) , 
4, 0.999524, 1, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489601,-99) , 
3, 9.41001, 1, 0, 0.500417,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0101745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.43051, 0, 1, 0.503527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482813,-99) , 
4, 0.999683, 0, 0, 0.502941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488283,-99) , 
2, 0.0711037, 1, 0, 0.501671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467521,-99) , 
5, -0.158033, 0, 0, 0.492334,-99) , 
4, 0.999524, 0, 0, 0.501963,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0139273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
6, 0.00339824, 0, 0, 0.503484,-99) , 
NN(
0, 
0, 
-1, 0.00453113, 1, -1, 0.491446,-99) , 
5, -0.532285, 0, 0, 0.499932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48735,-99) , 
6, 0.0237891, 1, 0, 0.49947,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0127018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491108,-99) , 
4, 0.999991, 0, 0, 0.504042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488103,-99) , 
4, 0.99981, 0, 0, 0.502659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498262,-99) , 
4, 0.999048, 1, 0, 0.499016,-99) , 
NN(
0, 
0, 
-1, -0.0416861, 0, -1, 0.492662,-99) , 
0, 0.5019, 1, 0, 0.49784,-99) , 
5, -0.440357, 1, 0, 0.499621,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0103258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
3, 1.72212, 1, 0, 0.514728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496233,-99) , 
5, 0.116488, 1, 0, 0.501592,-99) , 
4, 0.999524, 1, 0, 0.502847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487998,-99) , 
3, 8.56248, 1, 0, 0.502142,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00671052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495058,-99) , 
4, 0.999909, 0, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487193,-99) , 
5, 0.674733, 1, 0, 0.499948,-99) , 
NN(
0, 
0, 
-1, 0.495573, 1, -1, 0.484679,-99) , 
4, 0.999048, 0, 0, 0.499122,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00657367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494192,-99) , 
4, 0.999177, 0, 0, 0.51066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499091,-99) , 
2, 0.214207, 0, 0, 0.499789,-99) , 
4, 0.999728, 1, 0, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482521,-99) , 
4, 0.998572, 0, 0, 0.500236,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00591631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.502333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49315,-99) , 
4, 0.999456, 0, 0, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486109,-99) , 
4, 0.998571, 0, 0, 0.501315,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00578356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.481966,-99) , 
4, 0.999048, 0, 0, 0.500955,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0126121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495039,-99) , 
6, 0.00113324, 0, 0, 0.504015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489336,-99) , 
6, 0.00453348, 1, 0, 0.494411,-99) , 
5, -0.439153, 0, 0, 0.500558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482956,-99) , 
6, 0.0238025, 1, 0, 0.499918,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.00758552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497456, 1, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491152,-99) , 
0, 0.492376, 0, 0, 0.502411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49815,-99) , 
6, 0.0238025, 0, 0, 0.499282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471795,-99) , 
4, 0.999238, 0, 0, 0.498347,-99) , 
5, 0.208294, 0, 0, 0.499401,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00333098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514783,-99) , 
NN(
0, 
0, 
-1, 8.71379, 1, -1, 0.499421,-99) , 
0, 0.505891, 0, 0, 0.499981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478638,-99) , 
0, 0.489519, 0, 0, 0.499381,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00768634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42895, 1, 1, 0.511401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498041,-99) , 
0, 0.490471, 1, 0, 0.498734,-99) , 
4, 0.999524, 1, 0, 0.499923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481569,-99) , 
3, 9.40736, 1, 0, 0.499287,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00467223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21177, 1, 1, 0.5019,-99) , 
NN(
0, 
0, 
-1, 0.497137, 1, -1, 0.490102,-99) , 
4, 0.999048, 0, 0, 0.501257,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0126515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477984,-99) , 
4, 0.999592, 0, 0, 0.50171,-99) , 
4, 0.999048, 1, 0, 0.503042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495205,-99) , 
6, 0.00906749, 0, 0, 0.497525,-99) , 
6, 0.0238025, 0, 0, 0.499228,-99) , 
5, -0.0652644, 0, 0, 0.500772,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00417678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.23802, 0, 1, 0.50831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499994,-99) , 
2, 0.214641, 0, 0, 0.500377,-99) , 
0, 0.493328, 1, 0, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481324,-99) , 
4, 0.998571, 0, 0, 0.500792,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0087449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481366,-99) , 
4, 0.999333, 0, 0, 0.50012,-99) , 
6, 0.0238024, 0, 0, 0.501444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49092,-99) , 
4, 0.999048, 0, 0, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0.236139, 1, -1, 0.490903,-99) , 
5, 0.522278, 0, 0, 0.49511,-99) , 
5, 0.121684, 1, 0, 0.499542,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0101621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495964,-99) , 
4, 0.999955, 0, 0, 0.506548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491229,-99) , 
0, 0.5019, 1, 0, 0.499246,-99) , 
5, -0.5331, 1, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.47973,-99) , 
4, 0.999048, 0, 0, 0.500399,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0079894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498779,-99) , 
5, -0.345687, 0, 0, 0.501507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486905,-99) , 
6, 0.0238024, 1, 0, 0.500973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481108,-99) , 
3, 1.62855, 0, 0, 0.495755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477149,-99) , 
5, 0.205442, 1, 0, 0.491257,-99) , 
0, 0.492376, 0, 0, 0.499959,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0128358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49683,-99) , 
5, 0.0173216, 1, 0, 0.507569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494259,-99) , 
2, -0.0226277, 1, 0, 0.498339,-99) , 
2, 0.0512151, 0, 0, 0.499938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47646,-99) , 
3, 4.51946, 1, 0, 0.489334,-99) , 
2, 0.214446, 1, 0, 0.499361,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.00719985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490323,-99) , 
3, 4.54202, 1, 0, 0.508463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497649,-99) , 
5, -0.461016, 1, 0, 0.499291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48933,-99) , 
5, -0.906448, 0, 0, 0.498896,-99) , 
2, 0.214289, 0, 0, 0.499439,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00612311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497704,-99) , 
2, -0.0301346, 1, 0, 0.498941,-99) , 
2, 0.214641, 0, 0, 0.499471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4843,-99) , 
4, 0.998571, 0, 0, 0.49894,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0114352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
6, 0.0237708, 0, 0, 0.498891,-99) , 
5, 0.0271719, 0, 0, 0.500376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488708,-99) , 
3, 2.43298, 1, 0, 0.49929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479716,-99) , 
0, 0.499994, 0, 0, 0.487923,-99) , 
5, -0.160523, 1, 0, 0.494157,-99) , 
2, -0.0714326, 0, 0, 0.499273,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.011543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495647,-99) , 
5, -0.599791, 0, 0, 0.502253,-99) , 
6, 0.0238025, 0, 0, 0.503491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498617,-99) , 
4, 0.999048, 1, 0, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484907,-99) , 
0, 0.503804, 1, 0, 0.499114,-99) , 
5, -0.0662068, 1, 0, 0.50173,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00927235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.548086, 1, 1, 0.502609,-99) , 
NN(
0, 
0, 
-1, 0.00322164, 1, -1, 0.493233,-99) , 
5, 0.581689, 1, 0, 0.501801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486131,-99) , 
3, 3.68567, 1, 0, 0.497517,-99) , 
NN(
0, 
0, 
-1, -0.207626, 1, -1, 0.486526,-99) , 
5, -0.534859, 1, 0, 0.489981,-99) , 
2, -0.0715934, 0, 0, 0.499713,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.00881683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00979652, 0, 1, 0.503796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490006,-99) , 
6, 0.0158255, 1, 0, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485288,-99) , 
6, 0.0237399, 1, 0, 0.502646,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.00853539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.514579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497422,-99) , 
6, 0.00340033, 1, 0, 0.500354,-99) , 
4, 0.999048, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484288,-99) , 
6, 0.0238024, 1, 0, 0.500538,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0071264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497571,-99) , 
5, -0.439136, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0.00452721, 0, -1, 0.491635,-99) , 
0, 0.491424, 0, 0, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484262,-99) , 
6, 0.0237891, 1, 0, 0.499704,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0142814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498731,-99) , 
4, 0.999991, 0, 0, 0.507376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480298,-99) , 
4, 0.99981, 0, 0, 0.505114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494425,-99) , 
5, 0.536722, 1, 0, 0.507593,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.494689,-99) , 
4, 0.999524, 1, 0, 0.49619,-99) , 
5, -0.532298, 1, 0, 0.498926,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00925332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682512, 0, 1, 0.503612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491994,-99) , 
0, 0.501083, 0, 0, 0.496444,-99) , 
2, -0.071085, 0, 0, 0.502397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505748,-99) , 
NN(
0, 
0, 
-1, 0.490789, 0, -1, 0.490246,-99) , 
2, 0.0714221, 0, 0, 0.494197,-99) , 
0, 0.492376, 0, 0, 0.501545,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0061525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498783,-99) , 
5, -0.36201, 1, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491332,-99) , 
5, 0.67473, 1, 0, 0.500307,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.482788,-99) , 
4, 0.999048, 0, 0, 0.499367,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00798364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214182, 1, 1, 0.501855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486094,-99) , 
5, -0.906617, 0, 0, 0.501243,-99) , 
NN(
NN(
0, 
0, 
-1, -0.260608, 1, 1, 0.50599,-99) , 
NN(
0, 
0, 
-1, 9.19496, 0, -1, 0.486444,-99) , 
0, 0.496185, 1, 0, 0.492585,-99) , 
3, 4.76296, 1, 0, 0.499612,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00632043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499068,-99) , 
3, 4.34537, 0, 0, 0.500649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48615,-99) , 
4, 0.999388, 0, 0, 0.500016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481449,-99) , 
4, 0.998572, 0, 0, 0.499368,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0101838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494007,-99) , 
5, 0.480733, 0, 0, 0.496209,-99) , 
5, -0.159581, 1, 0, 0.500511,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.483315,-99) , 
4, 0.999048, 0, 0, 0.499587,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0104395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494886,-99) , 
4, 0.999955, 0, 0, 0.501427,-99) , 
4, 0.999048, 1, 0, 0.50219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494075,-99) , 
3, 2.01316, 0, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, -0.319658, 0, -1, 0.495397,-99) , 
5, -0.533095, 1, 0, 0.497171,-99) , 
0, 0.49809, 1, 0, 0.499664,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.010246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497956,-99) , 
3, 2.03548, 0, 0, 0.503246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495869,-99) , 
5, -0.463906, 1, 0, 0.496729,-99) , 
5, -0.534794, 1, 0, 0.498787,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.486569,-99) , 
4, 0.999048, 0, 0, 0.498125,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0138546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480955,-99) , 
4, 0.999592, 0, 0, 0.503368,-99) , 
4, 0.999048, 1, 0, 0.504402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494656,-99) , 
6, 0.0147132, 0, 0, 0.495832,-99) , 
6, 0.0237681, 0, 0, 0.497493,-99) , 
5, -0.158138, 0, 0, 0.500641,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00788058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
5, -0.345221, 0, 0, 0.502482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486806,-99) , 
6, 0.0158182, 1, 0, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481843,-99) , 
6, 0.0237272, 1, 0, 0.501197,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00842826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493114,-99) , 
5, -0.911393, 0, 0, 0.504014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49774,-99) , 
2, -0.213621, 1, 0, 0.49855,-99) , 
5, -0.534867, 1, 0, 0.500275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478489,-99) , 
5, 0.496637, 1, 0, 0.490403,-99) , 
4, 0.999048, 0, 0, 0.49974,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0061351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
4, 0.999955, 0, 0, 0.506371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499343,-99) , 
2, -0.210067, 1, 0, 0.500163,-99) , 
5, -0.627897, 1, 0, 0.501683,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.489938,-99) , 
4, 0.999048, 0, 0, 0.50105,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0100177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00565879, 0, 1, 0.502273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492614,-99) , 
5, -0.893085, 1, 0, 0.494619,-99) , 
5, -0.438754, 0, 0, 0.49953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474393,-99) , 
6, 0.0237708, 1, 0, 0.498609,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0101198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498618,-99) , 
6, 0.00566659, 0, 0, 0.501949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493306,-99) , 
6, 0.00339999, 1, 0, 0.496974,-99) , 
5, -0.534535, 0, 0, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480668,-99) , 
6, 0.0238024, 1, 0, 0.499772,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0109206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497778,-99) , 
5, -0.532626, 0, 0, 0.503484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483892,-99) , 
6, 0.0158681, 1, 0, 0.502794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486314,-99) , 
6, 0.0238024, 1, 0, 0.502199,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0100303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.505009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497307,-99) , 
0, 0.494282, 1, 0, 0.499266,-99) , 
5, -0.0662032, 1, 0, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480805,-99) , 
4, 0.998571, 0, 0, 0.50202,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0103094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498935,-99) , 
6, 0.0135814, 0, 0, 0.501107,-99) , 
6, 0.0237681, 0, 0, 0.504076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497178,-99) , 
0, 0.499043, 0, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476294,-99) , 
0, 0.504757, 1, 0, 0.498379,-99) , 
5, -0.251681, 1, 0, 0.501173,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0106182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.665911, 0, 1, 0.505921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489823,-99) , 
0, 0.504349, 1, 0, 0.499466,-99) , 
5, -0.532285, 1, 0, 0.501507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489372,-99) , 
0, 0.494689, 0, 0, 0.507115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49466,-99) , 
0, 0.491968, 1, 0, 0.495826,-99) , 
4, 0.999524, 1, 0, 0.496908,-99) , 
0, 0.499043, 0, 0, 0.498829,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00585718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505845, 0, 1, 0.512851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499621,-99) , 
5, -0.627818, 1, 0, 0.501167,-99) , 
0, 0.504757, 0, 0, 0.50192,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.48884,-99) , 
4, 0.999048, 0, 0, 0.501213,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00792594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499964,-99) , 
6, 0.0135814, 0, 0, 0.501646,-99) , 
6, 0.0237681, 0, 0, 0.504772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498553,-99) , 
4, 0.999048, 1, 0, 0.499572,-99) , 
NN(
0, 
0, 
-1, 0.457723, 1, -1, 0.492034,-99) , 
2, 0.0714619, 1, 0, 0.49824,-99) , 
5, -0.345221, 1, 0, 0.501066,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0104722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498266,-99) , 
5, -0.625823, 0, 0, 0.503883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483072,-99) , 
1, 0.0124672, 1, 0, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490943,-99) , 
6, 0.0238024, 1, 0, 0.502671,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00555729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.39852, 0, 1, 0.502424,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491083,-99) , 
4, 0.999048, 0, 0, 0.501806,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00605741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.512395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498635,-99) , 
2, 0.213457, 0, 0, 0.499363,-99) , 
3, 9.41367, 0, 0, 0.499949,-99) , 
4, 0.999048, 1, 0, 0.500651,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00766655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501265, 1, 1, 0.522521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488473,-99) , 
0, 0.494281, 0, 0, 0.512908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499246,-99) , 
0, 0.490471, 1, 0, 0.499936,-99) , 
3, 9.42945, 0, 0, 0.500798,-99) , 
4, 0.999524, 1, 0, 0.501953,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00932796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490252,-99) , 
6, 0.00793183, 1, 0, 0.505056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4986,-99) , 
6, 0.0147305, 0, 0, 0.499782,-99) , 
5, -0.0662032, 0, 0, 0.501953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486653,-99) , 
6, 0.0237968, 1, 0, 0.501397,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0109548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.190969, 1, 1, 0.50449,-99) , 
NN(
0, 
0, 
-1, 0.0680659, 1, -1, 0.492499,-99) , 
3, 3.63579, 1, 0, 0.503114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488538,-99) , 
2, 0.0717304, 1, 0, 0.499464,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.49034,-99) , 
5, -0.252175, 1, 0, 0.494758,-99) , 
3, 4.74401, 1, 0, 0.501531,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00659326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499728,-99) , 
3, 4.31672, 1, 0, 0.509112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480527,-99) , 
0, 0.490471, 0, 0, 0.499944,-99) , 
2, 0.0511702, 0, 0, 0.501528,-99) , 
NN(
0, 
0, 
-1, 4.53422, 1, -1, 0.490002,-99) , 
2, 0.214405, 1, 0, 0.500902,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0133368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496315,-99) , 
6, 0.00566387, 1, 0, 0.502182,-99) , 
6, 0.0237892, 0, 0, 0.504961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496202,-99) , 
3, 0.538326, 1, 0, 0.497902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481211,-99) , 
3, 8.86587, 1, 0, 0.497105,-99) , 
5, -0.346343, 1, 0, 0.500503,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00583258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214855, 0, 1, 0.50236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481581,-99) , 
4, 0.998572, 0, 0, 0.50164,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0117781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497835,-99) , 
3, 1.28537, 1, 0, 0.500867,-99) , 
6, 0.0237969, 0, 0, 0.502725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495822,-99) , 
4, 0.999048, 1, 0, 0.497665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476054,-99) , 
0, 0.504757, 1, 0, 0.496441,-99) , 
5, -0.158143, 1, 0, 0.49987,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00449886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.162103, 0, 1, 0.518234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499735,-99) , 
2, 0.132766, 0, 0, 0.500442,-99) , 
2, 0.214405, 0, 0, 0.50137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486742,-99) , 
3, 9.39852, 1, 0, 0.500852,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.00490785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0709398, 1, 1, 0.509477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499973,-99) , 
0, 0.505573, 0, 0, 0.500702,-99) , 
0, 0.493328, 1, 0, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0.496637, 1, -1, 0.488983,-99) , 
4, 0.999048, 0, 0, 0.501217,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00957349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.92636, 1, 1, 0.514773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487208,-99) , 
3, 7.08012, 1, 0, 0.50235,-99) , 
4, 0.999524, 1, 0, 0.503531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488317,-99) , 
3, 8.71744, 1, 0, 0.502847,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00468047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491369,-99) , 
3, 9.39852, 1, 0, 0.501732,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.011747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48165,-99) , 
6, 0.0101966, 1, 0, 0.504037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495851,-99) , 
6, 0.0147312, 0, 0, 0.497171,-99) , 
5, -0.253805, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488687,-99) , 
6, 0.0237968, 1, 0, 0.500317,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0131321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441386,-99) , 
4, 0.999524, 0, 0, 0.498545,-99) , 
6, 0.00226388, 0, 0, 0.502284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484844,-99) , 
6, 0.0237708, 1, 0, 0.501654,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0093321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490789, 1, 1, 0.51111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497461,-99) , 
5, -0.533095, 1, 0, 0.499806,-99) , 
0, 0.492376, 1, 0, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.485265,-99) , 
4, 0.999048, 0, 0, 0.500099,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00668233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485943,-99) , 
0, 0.505886, 0, 0, 0.493725,-99) , 
0, 0.503986, 1, 0, 0.500604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50641,-99) , 
NN(
0, 
0, 
-1, 0.490789, 1, -1, 0.486496,-99) , 
2, -0.0706107, 1, 0, 0.491689,-99) , 
0, 0.492376, 0, 0, 0.499677,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00664866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499326,-99) , 
3, 0.439399, 1, 0, 0.500561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482544,-99) , 
3, 9.53693, 0, 0, 0.491566,-99) , 
3, 7.43734, 1, 0, 0.499919,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.49071,-99) , 
5, 0.495567, 1, 0, 0.498769,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00553622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499643,-99) , 
4, 0.999465, 1, 0, 0.50047,-99) , 
6, 0.0238024, 0, 0, 0.50112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505513,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491637,-99) , 
5, 0.750523, 0, 0, 0.494174,-99) , 
5, 0.403092, 1, 0, 0.499974,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00742535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498289,-99) , 
2, -0.0302863, 1, 0, 0.500421,-99) , 
2, 0.214545, 0, 0, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486039,-99) , 
4, 0.998572, 0, 0, 0.500486,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00930929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0282077, 0, 1, 0.504165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489206,-99) , 
6, 0.0135931, 1, 0, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49247,-99) , 
6, 0.0237891, 1, 0, 0.502911,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00599057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.31311, 0, 1, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483034,-99) , 
4, 0.99941, 0, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0.496637, 0, -1, 0.483289,-99) , 
4, 0.999048, 0, 0, 0.500322,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00754882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494816,-99) , 
5, -0.169022, 1, 0, 0.508392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492767,-99) , 
5, 0.488077, 1, 0, 0.500885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492285,-99) , 
0, 0.500947, 0, 0, 0.496749,-99) , 
0, 0.499043, 1, 0, 0.499335,-99) , 
0, 0.504757, 0, 0, 0.499935,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00672183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498738,-99) , 
3, 8.3295, 0, 0, 0.499355,-99) , 
2, 0.213865, 0, 0, 0.499975,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.477194,-99) , 
4, 0.999048, 0, 0, 0.49876,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0127857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495783,-99) , 
4, 0.999524, 0, 0, 0.503934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49111,-99) , 
2, -0.0146813, 1, 0, 0.497495,-99) , 
2, 0.0031317, 0, 0, 0.501074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49105,-99) , 
3, 4.51091, 1, 0, 0.499533,-99) , 
NN(
0, 
0, 
-1, -0.091114, 1, -1, 0.487914,-99) , 
2, -0.139695, 1, 0, 0.494421,-99) , 
2, -0.0716822, 0, 0, 0.499895,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00499983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496684,-99) , 
0, 0.498874, 1, 0, 0.498908,-99) , 
0, 0.505891, 0, 0, 0.499449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485748,-99) , 
0, 0.489519, 0, 0, 0.499065,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00395712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497789,-99) , 
4, 0.999252, 0, 0, 0.508476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499896,-99) , 
3, 8.57019, 0, 0, 0.500575,-99) , 
4, 0.999524, 1, 0, 0.501057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481544,-99) , 
4, 0.998571, 0, 0, 0.500384,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00627004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0743041, 1, 1, 0.50906,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.498734,-99) , 
2, 0.0509814, 0, 0, 0.500525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476815,-99) , 
3, 4.43792, 1, 0, 0.489239,-99) , 
2, 0.214242, 1, 0, 0.499902,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00860187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498315,-99) , 
5, -0.345208, 0, 0, 0.502165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487215,-99) , 
6, 0.0147149, 1, 0, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4864,-99) , 
6, 0.0237708, 1, 0, 0.500945,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00693809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.875269, 1, 1, 0.505418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498226,-99) , 
4, 0.998571, 1, 0, 0.498809,-99) , 
5, -0.625832, 1, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48654,-99) , 
0, 0.490471, 0, 0, 0.499706,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00465449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.514948, 0, 1, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492602,-99) , 
5, 0.674443, 1, 0, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487572,-99) , 
4, 0.998571, 0, 0, 0.500853,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00683121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488282,-99) , 
2, 0.214405, 1, 0, 0.501054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495513,-99) , 
0, 0.505437, 0, 0, 0.49865,-99) , 
NN(
0, 
0, 
-1, 0.204522, 0, -1, 0.487529,-99) , 
5, -0.166095, 1, 0, 0.493969,-99) , 
0, 0.5019, 1, 0, 0.49968,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0120793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498009,-99) , 
4, 0.999991, 0, 0, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475657,-99) , 
4, 0.99981, 0, 0, 0.50181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495835,-99) , 
4, 0.998572, 1, 0, 0.496869,-99) , 
2, -0.214508, 1, 0, 0.497672,-99) , 
5, -0.439723, 1, 0, 0.49921,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00425985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490222,-99) , 
3, 8.73182, 1, 0, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49012,-99) , 
5, -0.906608, 0, 0, 0.50051,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00886583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
6, 0.000755454, 0, 0, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482036,-99) , 
6, 0.0158641, 1, 0, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484235,-99) , 
6, 0.0237968, 1, 0, 0.500402,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00727147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496912,-99) , 
5, -0.628752, 0, 0, 0.50311,-99) , 
NN(
0, 
0, 
-1, 0.0721109, 1, -1, 0.497884,-99) , 
0, 0.500947, 0, 0, 0.499229,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.481418,-99) , 
4, 0.999048, 0, 0, 0.498273,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0120099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494587,-99) , 
1, -0.00113038, 0, 0, 0.499728,-99) , 
6, 0.0237708, 0, 0, 0.501768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
4, 0.999048, 1, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, -0.163442, 1, -1, 0.488131,-99) , 
5, -0.0200564, 0, 0, 0.495563,-99) , 
5, -0.251681, 1, 0, 0.498618,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00430006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499241,-99) , 
4, 0.999524, 1, 0, 0.49996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488959,-99) , 
2, 0.214445, 1, 0, 0.499376,-99) , 
0, 0.505709, 0, 0, 0.499751,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00841589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0852964, 0, 1, 0.503656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496978,-99) , 
0, 0.492376, 1, 0, 0.498486,-99) , 
3, 1.88218, 1, 0, 0.500892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483792,-99) , 
3, 9.41652, 1, 0, 0.500291,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.00745296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999096, 0, 1, 0.514004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494547,-99) , 
5, 0.496657, 1, 0, 0.506199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
0, 0.504757, 0, 0, 0.498829,-99) , 
3, 9.4271, 0, 0, 0.49947,-99) , 
4, 0.999524, 1, 0, 0.500107,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00596013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213779, 1, 1, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489105,-99) , 
4, 0.999592, 0, 0, 0.501131,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.483606,-99) , 
4, 0.999048, 0, 0, 0.50019,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00722255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485446,-99) , 
0, 0.500947, 1, 0, 0.507942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494867,-99) , 
5, -0.81397, 0, 0, 0.500616,-99) , 
4, 0.999728, 1, 0, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482166,-99) , 
4, 0.998571, 0, 0, 0.500683,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.00494849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499344,-99) , 
2, 0.215236, 0, 0, 0.499945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473664,-99) , 
4, 0.999411, 0, 0, 0.499242,-99) , 
NN(
0, 
0, 
-1, 0.496637, 1, -1, 0.487078,-99) , 
4, 0.999048, 0, 0, 0.49858,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00657214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493166,-99) , 
0, 0.490562, 0, 0, 0.502087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511778,-99) , 
NN(
0, 
0, 
-1, -0.563024, 0, -1, 0.497277,-99) , 
5, -0.814603, 1, 0, 0.498717,-99) , 
0, 0.499995, 1, 0, 0.500968,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00759405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48774, 0, 1, 0.502911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490718,-99) , 
2, 0.13959, 0, 0, 0.498004,-99) , 
2, 0.0715741, 1, 0, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48581,-99) , 
0, 0.489519, 0, 0, 0.501592,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00430495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.402634, 1, 1, 0.501029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483266,-99) , 
3, 6.66533, 1, 0, 0.500093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491588,-99) , 
3, 8.72033, 1, 0, 0.499708,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00636168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498772,-99) , 
4, 0.999048, 1, 0, 0.499478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485856,-99) , 
2, -0.214508, 0, 0, 0.498815,-99) , 
NN(
0, 
0, 
-1, 0.302074, 1, -1, 0.492334,-99) , 
0, 0.493329, 0, 0, 0.497888,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00463682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494811,-99) , 
0, 0.506145, 1, 0, 0.506421,-99) , 
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.500985,-99) , 
0, 0.503759, 0, 0, 0.501586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4863,-99) , 
5, -0.352138, 1, 0, 0.493178,-99) , 
0, 0.491424, 0, 0, 0.500975,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0129792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497045,-99) , 
2, 0.0309041, 0, 0, 0.501822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494061,-99) , 
3, 4.73347, 0, 0, 0.497287,-99) , 
3, 1.86265, 1, 0, 0.499378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48368,-99) , 
3, 9.39852, 1, 0, 0.498825,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00651075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
1, 0.00565975, 1, 0, 0.499731,-99) , 
6, 0.0237708, 0, 0, 0.500168,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.490734,-99) , 
4, 0.999048, 0, 0, 0.499652,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00825044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493522,-99) , 
3, 2.55252, 1, 0, 0.509793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486963,-99) , 
0, 0.496186, 1, 0, 0.492986,-99) , 
5, -0.0733002, 1, 0, 0.503071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492179,-99) , 
0, 0.504212, 1, 0, 0.499357,-99) , 
NN(
0, 
0, 
-1, -0.0780208, 1, -1, 0.491897,-99) , 
0, 0.493328, 0, 0, 0.498365,-99) , 
2, 0.0716197, 0, 0, 0.499217,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0108412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486398,-99) , 
6, 0.0113312, 1, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49645,-99) , 
5, -0.840402, 1, 0, 0.498953,-99) , 
5, -0.441436, 0, 0, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486511,-99) , 
6, 0.0237968, 1, 0, 0.501533,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0068385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071922, 0, 1, 0.509095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498727,-99) , 
6, 0.0237659, 0, 0, 0.499389,-99) , 
4, 0.999524, 1, 0, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470911,-99) , 
3, 9.40736, 1, 0, 0.49931,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00550493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484792,-99) , 
3, 6.29551, 1, 0, 0.499134,-99) , 
5, 0.678922, 0, 0, 0.499882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479122,-99) , 
3, 9.39852, 1, 0, 0.499151,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00739236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.363913, 1, 1, 0.514893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498292,-99) , 
4, 0.999048, 1, 0, 0.498934,-99) , 
3, 0.53279, 1, 0, 0.5004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498545,-99) , 
3, 9.1769, 0, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.490098,-99) , 
2, 0.0711994, 1, 0, 0.497114,-99) , 
3, 4.74401, 1, 0, 0.499774,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0058764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
4, 0.999679, 1, 0, 0.499561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488532,-99) , 
4, 0.999388, 0, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474982,-99) , 
4, 0.998571, 0, 0, 0.498235,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00582133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216017, 0, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487589,-99) , 
6, 0.0158578, 1, 0, 0.501873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492792,-99) , 
6, 0.0237891, 1, 0, 0.501544,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00506559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499206,-99) , 
2, 0.131465, 0, 0, 0.499895,-99) , 
2, 0.213007, 0, 0, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.485267,-99) , 
4, 0.999048, 0, 0, 0.499577,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00351403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499992,-99) , 
4, 0.999691, 1, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476075,-99) , 
4, 0.99941, 0, 0, 0.499821,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.487159,-99) , 
4, 0.999048, 0, 0, 0.499131,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00995792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.510585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497439,-99) , 
2, 0.0121126, 0, 0, 0.500392,-99) , 
2, -0.112274, 1, 0, 0.501749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476211,-99) , 
3, 4.46737, 1, 0, 0.490074,-99) , 
2, 0.214242, 1, 0, 0.501108,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0059454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491062,-99) , 
4, 0.999404, 0, 0, 0.507142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499048,-99) , 
3, 8.09907, 0, 0, 0.499706,-99) , 
4, 0.999728, 1, 0, 0.500311,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.487651,-99) , 
4, 0.999048, 0, 0, 0.499623,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00591366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00679076, 0, 1, 0.502216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485378,-99) , 
1, 0.012449, 1, 0, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48954,-99) , 
6, 0.0237681, 1, 0, 0.501157,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0160103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.504986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48271,-99) , 
4, 0.999977, 0, 0, 0.495769,-99) , 
2, 0.0716511, 1, 0, 0.503543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482361,-99) , 
0, 0.501265, 1, 0, 0.499628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475114,-99) , 
0, 0.494281, 0, 0, 0.492565,-99) , 
4, 0.999524, 0, 0, 0.502532,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0120582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497746,-99) , 
2, 0.0374009, 0, 0, 0.500761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486064,-99) , 
5, 0.494085, 0, 0, 0.491573,-99) , 
4, 0.999864, 0, 0, 0.499284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483756,-99) , 
4, 0.998571, 0, 0, 0.498743,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00560843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213681, 1, 1, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0.495613, 1, -1, 0.485342,-99) , 
4, 0.999048, 0, 0, 0.501221,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00688035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.356401, 1, 1, 0.511569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4987,-99) , 
5, -0.439723, 1, 0, 0.50041,-99) , 
0, 0.503805, 0, 0, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0.495593, 1, -1, 0.488264,-99) , 
4, 0.999048, 0, 0, 0.500789,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0055086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499258,-99) , 
5, -0.728749, 1, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, 3.14792, 1, -1, 0.494857,-99) , 
5, -0.813238, 0, 0, 0.499914,-99) , 
NN(
0, 
0, 
-1, 0.495613, 0, -1, 0.486606,-99) , 
4, 0.999048, 0, 0, 0.499195,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00424289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486117,-99) , 
5, -0.906937, 0, 0, 0.500303,-99) , 
NN(
0, 
0, 
-1, 0.489524, 1, -1, 0.485554,-99) , 
4, 0.999048, 0, 0, 0.499509,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0094813);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49888,-99) , 
3, 1.5895, 1, 0, 0.508597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497626,-99) , 
5, -0.0661976, 0, 0, 0.500219,-99) , 
2, 0.0707248, 0, 0, 0.5014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495272,-99) , 
2, 0.071262, 0, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0.0717054, 1, -1, 0.492485,-99) , 
5, -0.0713319, 0, 0, 0.495986,-99) , 
3, 4.47231, 1, 0, 0.500263,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00899402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
0, 0.500947, 1, 0, 0.510063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498535,-99) , 
0, 0.500947, 0, 0, 0.50038,-99) , 
4, 0.999524, 1, 0, 0.501301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487518,-99) , 
3, 8.8545, 1, 0, 0.500717,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0077961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498844,-99) , 
6, 0.0238025, 0, 0, 0.499602,-99) , 
3, 9.4271, 0, 0, 0.500331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485311,-99) , 
0, 0.495868, 0, 0, 0.497649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47608,-99) , 
0, 0.499995, 1, 0, 0.490319,-99) , 
4, 0.999524, 0, 0, 0.499408,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00558642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.56877, 0, 1, 0.501679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490369,-99) , 
0, 0.501129, 1, 0, 0.500704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476464,-99) , 
0, 0.495233, 0, 0, 0.492518,-99) , 
4, 0.999524, 0, 0, 0.500842,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0133749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49879,-99) , 
4, 0.999998, 0, 0, 0.503477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485976,-99) , 
2, -0.0724434, 0, 0, 0.498962,-99) , 
4, 0.999955, 0, 0, 0.502279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480917,-99) , 
4, 0.998617, 1, 0, 0.494066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479263,-99) , 
5, 0.024071, 0, 0, 0.488932,-99) , 
4, 0.999524, 0, 0, 0.501053,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00606934);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214086, 1, 1, 0.502527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486294,-99) , 
3, 8.7258, 1, 0, 0.501789,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00635345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237708, 0, 1, 0.502349,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497158,-99) , 
5, 0.0234477, 1, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.485216,-99) , 
4, 0.999048, 0, 0, 0.499786,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00599838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0.999547, 0, -1, 0.497871,-99) , 
5, -0.162772, 1, 0, 0.500479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474216,-99) , 
0, 0.498091, 0, 0, 0.4876,-99) , 
4, 0.999048, 0, 0, 0.499787,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0034232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42815, 0, 1, 0.500817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489071,-99) , 
4, 0.999388, 0, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485984,-99) , 
4, 0.998571, 0, 0, 0.499795,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00589871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499245,-99) , 
4, 0.999524, 1, 0, 0.500101,-99) , 
2, 0.211941, 0, 0, 0.500846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504322,-99) , 
NN(
0, 
0, 
-1, -0.0712232, 0, -1, 0.49301,-99) , 
5, 0.208313, 0, 0, 0.496018,-99) , 
3, 4.74401, 1, 0, 0.499932,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00917179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496671,-99) , 
0, 0.494935, 0, 0, 0.501337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495184,-99) , 
2, 0.0708428, 0, 0, 0.496785,-99) , 
0, 0.498997, 1, 0, 0.49937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
0, 0.489519, 0, 0, 0.498824,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0103311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492049,-99) , 
4, 0.999905, 0, 0, 0.504387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488782,-99) , 
0, 0.491424, 0, 0, 0.500036,-99) , 
5, -0.0964213, 1, 0, 0.501996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497871,-99) , 
5, -0.812625, 0, 0, 0.502887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484535,-99) , 
5, -0.660015, 0, 0, 0.488922,-99) , 
5, -0.768535, 1, 0, 0.496355,-99) , 
5, -0.626098, 0, 0, 0.500666,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00841539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498715,-99) , 
2, -0.0187263, 1, 0, 0.501246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482427,-99) , 
2, -0.275193, 0, 0, 0.500569,-99) , 
NN(
0, 
0, 
-1, 4.55217, 1, -1, 0.484,-99) , 
2, 0.214429, 1, 0, 0.499655,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00407109);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483469,-99) , 
3, 9.40736, 1, 0, 0.500892,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00424364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.500864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488499,-99) , 
5, 0.680822, 1, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474472,-99) , 
4, 0.998571, 0, 0, 0.49948,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00711192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.51009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496666,-99) , 
5, 0.116078, 1, 0, 0.506301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497742,-99) , 
5, -0.0672643, 0, 0, 0.499334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491535,-99) , 
4, 0.999524, 1, 0, 0.494224,-99) , 
2, 0.0718471, 1, 0, 0.498457,-99) , 
0, 0.492376, 1, 0, 0.499274,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00710979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499284,-99) , 
6, 0.0237968, 0, 0, 0.500135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479654,-99) , 
4, 0.999411, 0, 0, 0.499211,-99) , 
NN(
0, 
0, 
-1, 0.46129, 0, -1, 0.491924,-99) , 
5, 0.305834, 1, 0, 0.497683,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00899908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999528, 1, 1, 0.502994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487484,-99) , 
3, 8.26915, 0, 0, 0.493293,-99) , 
3, 5.29472, 1, 0, 0.501483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495475,-99) , 
5, 0.74308, 0, 0, 0.497019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487523,-99) , 
2, -0.0715451, 0, 0, 0.495295,-99) , 
5, 0.307313, 1, 0, 0.500193,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0093319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566264, 0, 1, 0.507864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496654,-99) , 
5, 0.212558, 0, 0, 0.498787,-99) , 
0, 0.503804, 0, 0, 0.499701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479988,-99) , 
6, 0.0237891, 1, 0, 0.498998,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00427917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488947,-99) , 
5, -0.906972, 0, 0, 0.499778,-99) , 
3, 9.42932, 0, 0, 0.500531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48819,-99) , 
5, 0.20933, 0, 0, 0.495246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480513,-99) , 
0, 0.500946, 1, 0, 0.490963,-99) , 
4, 0.999524, 0, 0, 0.499659,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00451778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484789,-99) , 
3, 7.07632, 1, 0, 0.50067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489301,-99) , 
3, 8.72033, 1, 0, 0.50016,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00994119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.120738, 1, 1, 0.503644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485176,-99) , 
2, 0.0715135, 1, 0, 0.496795,-99) , 
3, 2.81707, 1, 0, 0.501053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508326,-99) , 
NN(
0, 
0, 
-1, 0.683504, 1, -1, 0.487848,-99) , 
5, 0.768345, 0, 0, 0.493931,-99) , 
5, 0.59017, 1, 0, 0.500445,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00707535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49304,-99) , 
0, 0.490154, 0, 0, 0.502353,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.497657,-99) , 
0, 0.494281, 1, 0, 0.49855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478197,-99) , 
4, 0.998571, 0, 0, 0.497851,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00891905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0942102, 0, 1, 0.502785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482537,-99) , 
2, 0.0734831, 1, 0, 0.495662,-99) , 
4, 0.999955, 0, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0.216041, 0, -1, 0.486706,-99) , 
4, 0.999524, 0, 0, 0.499605,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00841294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496565,-99) , 
5, 0.0282036, 0, 0, 0.499314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485662,-99) , 
6, 0.0158664, 1, 0, 0.498833,-99) , 
6, 0.0238024, 0, 0, 0.499207,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00932079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494609,-99) , 
6, 0.00302247, 0, 0, 0.499111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486565,-99) , 
6, 0.0158681, 1, 0, 0.498669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478925,-99) , 
6, 0.0238024, 1, 0, 0.497963,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0102014);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496337,-99) , 
0, 0.497138, 0, 0, 0.502402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495304,-99) , 
0, 0.494281, 1, 0, 0.496835,-99) , 
5, -0.534794, 1, 0, 0.49857,-99) , 
4, 0.998571, 1, 0, 0.499132,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0101969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498724,-99) , 
5, 0.0538526, 1, 0, 0.501309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48643,-99) , 
6, 0.0022664, 1, 0, 0.491424,-99) , 
5, -0.62648, 0, 0, 0.499095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484677,-99) , 
6, 0.0237968, 1, 0, 0.498575,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00554042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497681,-99) , 
3, 0.383745, 1, 0, 0.508828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498859,-99) , 
0, 0.490471, 1, 0, 0.499556,-99) , 
3, 0.552585, 1, 0, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491041,-99) , 
3, 9.41652, 1, 0, 0.499999,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0124542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481591,-99) , 
6, 0.0101675, 1, 0, 0.502878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494189,-99) , 
6, 0.0135556, 0, 0, 0.496308,-99) , 
5, -0.25296, 0, 0, 0.499741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4878,-99) , 
6, 0.0237272, 1, 0, 0.499308,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00606646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.839758, 1, 1, 0.506498,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5058, 0, 1, 0.505982,-99) , 
NN(
0, 
0, 
-1, 0.489927, 0, -1, 0.49848,-99) , 
0, 0.503805, 0, 0, 0.499203,-99) , 
5, -0.626105, 1, 0, 0.500941,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00820295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487152,-99) , 
4, 0.99981, 0, 0, 0.502829,-99) , 
5, -0.493083, 0, 0, 0.504085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498618,-99) , 
2, 0.214281, 0, 0, 0.499592,-99) , 
NN(
0, 
0, 
-1, 0.738642, 0, -1, 0.491041,-99) , 
5, 0.627463, 1, 0, 0.498632,-99) , 
5, -0.439723, 1, 0, 0.500652,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.00684762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488252,-99) , 
6, 0.0147346, 1, 0, 0.5016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48931,-99) , 
6, 0.0238024, 1, 0, 0.501247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479222,-99) , 
5, -0.875277, 1, 0, 0.493683,-99) , 
5, -0.812915, 0, 0, 0.500545,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.00911338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.256896, 1, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49663,-99) , 
0, 0.501129, 1, 0, 0.500874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496576,-99) , 
5, -0.258693, 0, 0, 0.505847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49071,-99) , 
3, 4.34586, 0, 0, 0.493409,-99) , 
2, 0.0714221, 0, 0, 0.496038,-99) , 
0, 0.495233, 0, 0, 0.499647,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00875662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499848,-99) , 
6, 0.0238025, 0, 0, 0.501845,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.49474,-99) , 
5, -0.0697479, 1, 0, 0.499116,-99) , 
NN(
0, 
0, 
-1, 0.495613, 1, -1, 0.476869,-99) , 
4, 0.999048, 0, 0, 0.497942,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0101141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497674,-99) , 
3, 1.55164, 1, 0, 0.511093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490436,-99) , 
5, 0.0282394, 0, 0, 0.501134,-99) , 
3, 4.36657, 1, 0, 0.507094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497411,-99) , 
2, -0.00311928, 1, 0, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48327,-99) , 
4, 0.999048, 0, 0, 0.49957,-99) , 
2, 0.0715741, 0, 0, 0.500933,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0102352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499208,-99) , 
6, 0.0101949, 0, 0, 0.501536,-99) , 
6, 0.0237891, 0, 0, 0.503322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492726,-99) , 
2, -0.0033796, 1, 0, 0.497759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478014,-99) , 
2, 0.207437, 0, 0, 0.486461,-99) , 
2, 0.0714252, 1, 0, 0.495734,-99) , 
5, -0.0646031, 1, 0, 0.500288,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00984472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
6, 0.00226643, 1, 0, 0.501787,-99) , 
6, 0.0237969, 0, 0, 0.504265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494584,-99) , 
5, -0.0973322, 0, 0, 0.501318,-99) , 
NN(
0, 
0, 
-1, 4.7739, 1, -1, 0.496761,-99) , 
0, 0.49809, 0, 0, 0.49905,-99) , 
5, -0.346344, 1, 0, 0.5013,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00860587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489826,-99) , 
6, 0.0135811, 1, 0, 0.501928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493765,-99) , 
6, 0.00792247, 0, 0, 0.496343,-99) , 
0, 0.500947, 1, 0, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484834,-99) , 
6, 0.0237681, 1, 0, 0.499926,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00547815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499068,-99) , 
3, 1.33235, 1, 0, 0.510111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492271,-99) , 
4, 0.999796, 0, 0, 0.50049,-99) , 
4, 0.999524, 1, 0, 0.501398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491017,-99) , 
3, 8.71379, 1, 0, 0.500927,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0101401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0236916, 0, 1, 0.504464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495969,-99) , 
4, 0.999048, 1, 0, 0.498388,-99) , 
5, 0.122475, 1, 0, 0.502617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489529,-99) , 
3, 1.58602, 0, 0, 0.496768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486335,-99) , 
5, 0.020529, 1, 0, 0.493367,-99) , 
0, 0.492376, 0, 0, 0.501662,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00333974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49994,-99) , 
3, 9.41367, 0, 0, 0.500429,-99) , 
0, 0.490471, 1, 0, 0.500987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480539,-99) , 
5, 0.492396, 1, 0, 0.491666,-99) , 
4, 0.999048, 0, 0, 0.500481,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0073927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497439,-99) , 
5, -0.162628, 1, 0, 0.500555,-99) , 
3, 8.56054, 0, 0, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0.496652, 1, -1, 0.489764,-99) , 
4, 0.999048, 0, 0, 0.500575,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00603199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491193,-99) , 
5, -0.813238, 0, 0, 0.499502,-99) , 
3, 8.56877, 0, 0, 0.500475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491599,-99) , 
5, 0.303372, 0, 0, 0.500261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481114,-99) , 
0, 0.495233, 0, 0, 0.493774,-99) , 
4, 0.999524, 0, 0, 0.499856,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0063904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498911,-99) , 
5, 0.216021, 0, 0, 0.500819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484621,-99) , 
6, 0.0158676, 1, 0, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487885,-99) , 
6, 0.0238024, 1, 0, 0.499813,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00627999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492947,-99) , 
3, 5.40881, 1, 0, 0.500244,-99) , 
5, 0.680822, 0, 0, 0.500975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480915,-99) , 
3, 9.39852, 1, 0, 0.500279,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00714161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498796,-99) , 
5, -0.720967, 1, 0, 0.499969,-99) , 
4, 0.998571, 1, 0, 0.500451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493074,-99) , 
2, 0.0029306, 0, 0, 0.499055,-99) , 
NN(
0, 
0, 
-1, 0.503487, 0, -1, 0.484241,-99) , 
2, -0.0718444, 0, 0, 0.496002,-99) , 
0, 0.500947, 1, 0, 0.499307,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00516324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999252, 0, 1, 0.511323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
3, 9.42789, 0, 0, 0.499852,-99) , 
4, 0.999524, 1, 0, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474036,-99) , 
4, 0.998571, 0, 0, 0.499634,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0102889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496542,-99) , 
2, 0.031342, 0, 0, 0.499315,-99) , 
2, -0.213371, 1, 0, 0.499928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481487,-99) , 
4, 0.998572, 0, 0, 0.499287,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00465646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494238,-99) , 
0, 0.494553, 0, 0, 0.499297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486903,-99) , 
4, 0.999048, 0, 0, 0.498679,-99) , 
0, 0.490471, 1, 0, 0.499362,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00718727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.162955, 0, 1, 0.507038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486261,-99) , 
3, 7.04215, 1, 0, 0.500839,-99) , 
0, 0.495233, 1, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489266,-99) , 
3, 8.67422, 1, 0, 0.501823,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00763012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.720982, 1, 1, 0.502717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487133,-99) , 
5, -0.166852, 1, 0, 0.494789,-99) , 
2, -0.0710845, 0, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478814,-99) , 
4, 0.998571, 0, 0, 0.500608,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00867016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492117,-99) , 
4, 0.999773, 0, 0, 0.50332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497138,-99) , 
2, -0.212806, 1, 0, 0.497799,-99) , 
0, 0.499995, 0, 0, 0.499648,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.486394,-99) , 
4, 0.999048, 0, 0, 0.498942,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00894608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495992,-99) , 
0, 0.492149, 0, 0, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0.214835, 1, -1, 0.497191,-99) , 
0, 0.497138, 1, 0, 0.499813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482919,-99) , 
3, 8.73182, 1, 0, 0.499055,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.00745812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.777666, 1, 1, 0.510929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
0, 0.497138, 0, 0, 0.50085,-99) , 
5, -0.813239, 0, 0, 0.505169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499785,-99) , 
0, 0.498091, 1, 0, 0.506651,-99) , 
NN(
0, 
0, 
-1, -0.59789, 0, -1, 0.497774,-99) , 
5, 0.560765, 0, 0, 0.498826,-99) , 
5, -0.719858, 1, 0, 0.499864,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00596714);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492314,-99) , 
4, 0.999048, 0, 0, 0.501518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482518,-99) , 
5, -0.857704, 1, 0, 0.494913,-99) , 
5, -0.813238, 0, 0, 0.500911,-99) , 
0, 0.490471, 1, 0, 0.501343,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00839796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00679795, 0, 1, 0.503161,-99) , 
NN(
0, 
0, 
-1, 2.03339, 0, -1, 0.494288,-99) , 
5, -0.53308, 0, 0, 0.500557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488211,-99) , 
6, 0.0237968, 1, 0, 0.500104,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0109051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495458,-99) , 
6, 0.00339956, 1, 0, 0.499082,-99) , 
6, 0.0237969, 0, 0, 0.501505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497373,-99) , 
4, 0.999048, 1, 0, 0.498126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484561,-99) , 
0, 0.503804, 1, 0, 0.496928,-99) , 
5, -0.251682, 1, 0, 0.499178,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00553226);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50821,-99) , 
NN(
NN(
0, 
0, 
-1, 0.587445, 0, 1, 0.501771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484277,-99) , 
5, -0.158129, 1, 0, 0.495399,-99) , 
0, 0.503532, 1, 0, 0.50103,-99) , 
0, 0.490471, 1, 0, 0.501381,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00936747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489749,-99) , 
6, 0.00792505, 1, 0, 0.502908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49659,-99) , 
6, 0.0147251, 0, 0, 0.497859,-99) , 
5, 0.0271752, 0, 0, 0.499679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490746,-99) , 
6, 0.0237891, 1, 0, 0.499352,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00549494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497567,-99) , 
0, 0.491877, 0, 0, 0.503043,-99) , 
0, 0.489519, 1, 0, 0.50475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
2, -0.132192, 1, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489499,-99) , 
2, -0.213786, 0, 0, 0.498813,-99) , 
0, 0.493328, 1, 0, 0.499672,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00648417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237681, 0, 1, 0.503773,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486181,-99) , 
0, 0.499042, 0, 0, 0.492595,-99) , 
5, -0.136485, 0, 0, 0.500622,-99) , 
5, -0.252214, 1, 0, 0.502165,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00361206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
2, 0.214865, 0, 0, 0.500271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484598,-99) , 
4, 0.99941, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.488323,-99) , 
4, 0.999048, 0, 0, 0.49923,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0106399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
4, 0.999998, 0, 0, 0.502223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479846,-99) , 
3, 4.25856, 1, 0, 0.496291,-99) , 
4, 0.999955, 0, 0, 0.50048,-99) , 
NN(
0, 
0, 
-1, 0.492433, 1, -1, 0.484453,-99) , 
4, 0.999048, 0, 0, 0.499625,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00714715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499699,-99) , 
4, 0.999048, 1, 0, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0.265007, 0, -1, 0.490642,-99) , 
0, 0.5019, 1, 0, 0.499355,-99) , 
5, -0.159587, 1, 0, 0.501849,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0111664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.146034, 0, 1, 0.502115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486146,-99) , 
2, -0.0107043, 1, 0, 0.496315,-99) , 
2, 0.00354471, 0, 0, 0.499509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502185,-99) , 
NN(
0, 
0, 
-1, 4.80334, 0, -1, 0.491064,-99) , 
0, 0.502852, 0, 0, 0.493206,-99) , 
2, -0.0712626, 0, 0, 0.498396,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00731188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3389, 1, 1, 0.513647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
0, 0.492376, 1, 0, 0.499818,-99) , 
4, 0.999524, 1, 0, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484959,-99) , 
3, 8.8365, 1, 0, 0.500436,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00739367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498916,-99) , 
0, 0.491696, 0, 0, 0.505373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492856,-99) , 
5, -0.625832, 0, 0, 0.498983,-99) , 
0, 0.496186, 1, 0, 0.501077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488409,-99) , 
6, 0.0237681, 1, 0, 0.500617,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00578302);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489972, 0, 1, 0.508289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496892,-99) , 
4, 0.999955, 0, 0, 0.500208,-99) , 
4, 0.999048, 1, 0, 0.500799,-99) , 
0, 0.491424, 1, 0, 0.501351,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00368109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509186,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.498989,-99) , 
2, -0.132467, 1, 0, 0.49953,-99) , 
NN(
0, 
0, 
-1, -0.165447, 1, -1, 0.49132,-99) , 
2, -0.214075, 0, 0, 0.499081,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0121552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494329,-99) , 
5, -0.595806, 0, 0, 0.501102,-99) , 
6, 0.0237494, 0, 0, 0.501822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494493,-99) , 
4, 0.999932, 1, 0, 0.499626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475881,-99) , 
4, 0.998571, 0, 0, 0.497177,-99) , 
5, 0.212558, 1, 0, 0.500635,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00723861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00679606, 0, 1, 0.501838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496254,-99) , 
6, 0.0135931, 0, 0, 0.497486,-99) , 
5, -0.158138, 0, 0, 0.499511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484316,-99) , 
6, 0.0237891, 1, 0, 0.498969,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00834683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0978951, 1, 1, 0.502755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476958,-99) , 
3, 4.25856, 1, 0, 0.496299,-99) , 
4, 0.999955, 0, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0.492396, 1, -1, 0.484021,-99) , 
4, 0.999048, 0, 0, 0.499961,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0096752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49556,-99) , 
2, 0.206732, 1, 0, 0.505114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495484,-99) , 
2, -0.00405762, 1, 0, 0.499289,-99) , 
2, 0.0707374, 0, 0, 0.500412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49545,-99) , 
0, 0.491424, 1, 0, 0.49678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48511,-99) , 
5, 0.67301, 1, 0, 0.496099,-99) , 
0, 0.499043, 0, 0, 0.497903,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00868291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493056, 1, 1, 0.510397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
3, 4.41422, 0, 0, 0.501086,-99) , 
5, -0.627971, 1, 0, 0.503411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496906,-99) , 
2, -0.0510446, 1, 0, 0.498009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482929,-99) , 
2, -0.214303, 0, 0, 0.497278,-99) , 
0, 0.495233, 1, 0, 0.498848,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00735569);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493668,-99) , 
3, 1.7596, 0, 0, 0.507392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498028,-99) , 
3, 1.34295, 1, 0, 0.499824,-99) , 
0, 0.491424, 1, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486469,-99) , 
3, 8.72343, 1, 0, 0.499763,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0161143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498528,-99) , 
4, 0.999995, 0, 0, 0.50413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456344,-99) , 
3, 1.7502, 1, 0, 0.492616,-99) , 
4, 0.999905, 0, 0, 0.502232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481552,-99) , 
4, 0.999683, 0, 0, 0.497809,-99) , 
4, 0.999048, 1, 0, 0.499167,-99) , 
5, 0.215156, 1, 0, 0.50145,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00474227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427229, 1, 1, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486121,-99) , 
3, 7.18176, 1, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481397,-99) , 
3, 9.39852, 1, 0, 0.499857,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00806272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49197,-99) , 
6, 0.0135792, 1, 0, 0.501854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492463,-99) , 
6, 0.00113163, 1, 0, 0.495157,-99) , 
0, 0.5019, 1, 0, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487842,-99) , 
6, 0.0237659, 1, 0, 0.5001,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00730403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
2, 0.134329, 0, 0, 0.499333,-99) , 
2, 0.215434, 0, 0, 0.499845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.47727,-99) , 
2, -0.0704853, 1, 0, 0.487055,-99) , 
4, 0.999524, 0, 0, 0.498683,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00765883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498285,-99) , 
2, -0.0708259, 1, 0, 0.500332,-99) , 
0, 0.501582, 1, 0, 0.502036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493996,-99) , 
5, -0.159582, 0, 0, 0.496892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482649,-99) , 
6, 0.0238024, 1, 0, 0.496387,-99) , 
0, 0.500947, 0, 0, 0.497852,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00724229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499428,-99) , 
6, 0.0124649, 0, 0, 0.500725,-99) , 
6, 0.0237969, 0, 0, 0.502383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507345,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.496365,-99) , 
4, 0.999048, 1, 0, 0.497488,-99) , 
5, -0.0652588, 1, 0, 0.500416,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491982,-99) , 
4, 0.999932, 0, 0, 0.49824,-99) , 
2, 0.215392, 0, 0, 0.49893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483222,-99) , 
4, 0.998571, 0, 0, 0.498374,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00763063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238025, 0, 1, 0.502634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495223,-99) , 
0, 0.502852, 0, 0, 0.496337,-99) , 
5, 0.0271719, 1, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482931,-99) , 
4, 0.998571, 0, 0, 0.499912,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0134849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.503403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460237,-99) , 
3, 1.81138, 1, 0, 0.493831,-99) , 
4, 0.999892, 0, 0, 0.501883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489188,-99) , 
4, 0.999524, 0, 0, 0.499406,-99) , 
NN(
0, 
0, 
-1, 0.502172, 0, -1, 0.492399,-99) , 
0, 0.498091, 1, 0, 0.496039,-99) , 
5, 0.308622, 1, 0, 0.500661,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00843197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491637,-99) , 
3, 4.57531, 1, 0, 0.501929,-99) , 
5, 0.309564, 0, 0, 0.503922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495771,-99) , 
0, 0.495777, 0, 0, 0.500394,-99) , 
NN(
0, 
0, 
-1, 4.76875, 1, -1, 0.496503,-99) , 
5, -0.0695775, 1, 0, 0.49879,-99) , 
0, 0.5019, 0, 0, 0.499794,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0100454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497895,-99) , 
5, -0.760143, 1, 0, 0.499175,-99) , 
5, 0.678922, 0, 0, 0.499994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489329,-99) , 
5, -0.25215, 1, 0, 0.499609,-99) , 
NN(
0, 
0, 
-1, -0.0710745, 1, -1, 0.486833,-99) , 
0, 0.504621, 0, 0, 0.491486,-99) , 
0, 0.5019, 1, 0, 0.498355,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00798979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497542,-99) , 
3, 3.52772, 1, 0, 0.505679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497994,-99) , 
4, 0.998571, 1, 0, 0.49848,-99) , 
5, -0.626479, 1, 0, 0.50017,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.487963,-99) , 
0, 0.504757, 1, 0, 0.499377,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00872321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.505643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479037,-99) , 
4, 0.999547, 0, 0, 0.499341,-99) , 
5, -0.159576, 1, 0, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0.489524, 1, -1, 0.490403,-99) , 
4, 0.999048, 0, 0, 0.502229,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0103376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499521,-99) , 
6, 0.00453327, 0, 0, 0.502705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494827,-99) , 
6, 0.0136012, 0, 0, 0.497367,-99) , 
5, -0.345681, 0, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483766,-99) , 
6, 0.0238024, 1, 0, 0.499864,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00543919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.167061, 0, 1, 0.513597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499055,-99) , 
2, 0.275755, 0, 0, 0.499854,-99) , 
2, -0.213899, 1, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485678,-99) , 
3, 9.40736, 1, 0, 0.500052,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00644205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514634,-99) , 
NN(
NN(
0, 
0, 
-1, 8.56903, 0, 1, 0.50194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477813,-99) , 
5, 0.307338, 0, 0, 0.487181,-99) , 
4, 0.999592, 0, 0, 0.500933,-99) , 
4, 0.998571, 1, 0, 0.501434,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00548795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.503582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493314,-99) , 
5, -0.137234, 0, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490056,-99) , 
0, 0.504757, 1, 0, 0.499132,-99) , 
5, -0.252214, 1, 0, 0.501317,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00567027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.816101, 0, 1, 0.508878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494076,-99) , 
5, -0.77283, 1, 0, 0.505183,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.500576,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.493724,-99) , 
5, -0.478847, 0, 0, 0.499116,-99) , 
5, -0.719378, 1, 0, 0.500114,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00315376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509661,-99) , 
NN(
0, 
0, 
-1, 0.503163, 1, -1, 0.499097,-99) , 
0, 0.50394, 0, 0, 0.499423,-99) , 
NN(
0, 
0, 
-1, -0.166566, 1, -1, 0.492626,-99) , 
0, 0.504757, 1, 0, 0.49898,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00778361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49415,-99) , 
4, 0.999948, 0, 0, 0.500287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489923,-99) , 
5, 0.577373, 0, 0, 0.493879,-99) , 
4, 0.999864, 0, 0, 0.499254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481438,-99) , 
4, 0.998572, 0, 0, 0.498641,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0088202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
2, -0.111438, 1, 0, 0.497935,-99) , 
2, 0.214765, 0, 0, 0.498636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488992,-99) , 
3, 8.8365, 1, 0, 0.498218,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00409855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.506789,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.498751,-99) , 
2, -0.214303, 1, 0, 0.499207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483475,-99) , 
5, -0.87563, 1, 0, 0.493376,-99) , 
5, -0.813448, 0, 0, 0.498665,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0165747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479623,-99) , 
6, 0.00452489, 0, 0, 0.510904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495524,-99) , 
6, 0.00339582, 1, 0, 0.499798,-99) , 
4, 0.999524, 1, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478526,-99) , 
6, 0.0237708, 1, 0, 0.500051,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0104067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478074,-99) , 
0, 0.5019, 1, 0, 0.504659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497886,-99) , 
0, 0.499995, 0, 0, 0.500243,-99) , 
3, 0.995788, 1, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487819,-99) , 
3, 9.41652, 1, 0, 0.500763,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00402599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490841,-99) , 
6, 0.0237891, 1, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486292,-99) , 
0, 0.505709, 1, 0, 0.500333,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00773001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.712062, 0, 1, 0.505242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
5, 0.528261, 0, 0, 0.499801,-99) , 
5, -0.534873, 1, 0, 0.501527,-99) , 
NN(
0, 
0, 
-1, 0.495573, 1, -1, 0.488252,-99) , 
4, 0.999048, 0, 0, 0.500818,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0053337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499337,-99) , 
4, 0.998617, 0, 0, 0.50742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498803,-99) , 
3, 8.50425, 0, 0, 0.49956,-99) , 
4, 0.999524, 1, 0, 0.500268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487595,-99) , 
0, 0.489519, 0, 0, 0.499909,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00760231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490435,-99) , 
4, 0.999905, 0, 0, 0.505786,-99) , 
5, 0.299297, 0, 0, 0.507812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489251,-99) , 
0, 0.489376, 0, 0, 0.50076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494338,-99) , 
0, 0.502161, 0, 0, 0.496588,-99) , 
0, 0.49995, 1, 0, 0.499814,-99) , 
0, 0.502852, 0, 0, 0.500974,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00885553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.510564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494952,-99) , 
3, 5.92702, 1, 0, 0.501263,-99) , 
5, 0.121708, 0, 0, 0.504158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49572,-99) , 
3, 0.360019, 1, 0, 0.508883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49805,-99) , 
0, 0.505709, 0, 0, 0.498583,-99) , 
3, 0.518672, 1, 0, 0.499507,-99) , 
3, 4.4751, 0, 0, 0.500491,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00752246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.43734, 0, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493798,-99) , 
5, 0.48865, 1, 0, 0.501358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48981,-99) , 
0, 0.504213, 1, 0, 0.494186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480685,-99) , 
5, -0.719357, 0, 0, 0.491672,-99) , 
0, 0.502852, 1, 0, 0.49999,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00638653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498834,-99) , 
2, -0.186593, 1, 0, 0.499588,-99) , 
2, 0.219682, 0, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.492891,-99) , 
3, 4.74401, 1, 0, 0.498762,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00897872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497094,-99) , 
5, -0.220501, 0, 0, 0.500792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48507,-99) , 
6, 0.0237495, 1, 0, 0.500347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507226,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.485615,-99) , 
5, -0.919818, 1, 0, 0.493147,-99) , 
5, -0.812915, 0, 0, 0.499677,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00845935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.503458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483422,-99) , 
4, 0.999333, 0, 0, 0.502678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492221,-99) , 
0, 0.493601, 0, 0, 0.499835,-99) , 
NN(
0, 
0, 
-1, 0.352059, 0, -1, 0.492984,-99) , 
0, 0.499043, 1, 0, 0.497145,-99) , 
5, 0.210202, 1, 0, 0.501257,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00418216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508971,-99) , 
NN(
0, 
0, 
-1, 5.80329, 1, -1, 0.49902,-99) , 
5, 0.590172, 0, 0, 0.499885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489604,-99) , 
0, 0.490471, 0, 0, 0.499393,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00703469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499078,-99) , 
0, 0.499995, 0, 0, 0.50099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493618,-99) , 
2, 0.071123, 0, 0, 0.49588,-99) , 
5, -0.680201, 0, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, 0.75887, 0, -1, 0.488007,-99) , 
5, 0.678921, 1, 0, 0.499312,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.00826255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499299,-99) , 
3, 1.56322, 1, 0, 0.512353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491543,-99) , 
5, 0.0215955, 0, 0, 0.499281,-99) , 
3, 4.3778, 1, 0, 0.507166,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49169,-99) , 
0, 0.490471, 0, 0, 0.501713,-99) , 
2, 0.0715747, 0, 0, 0.502702,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00813324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490762,-99) , 
4, 0.999905, 0, 0, 0.499123,-99) , 
6, 0.0237969, 0, 0, 0.501091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493698,-99) , 
4, 0.999977, 1, 0, 0.497382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481307,-99) , 
4, 0.998617, 1, 0, 0.490239,-99) , 
4, 0.999524, 0, 0, 0.496355,-99) , 
5, -0.162633, 1, 0, 0.498929,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00622707);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.50967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497927,-99) , 
4, 0.999524, 1, 0, 0.498478,-99) , 
NN(
0, 
0, 
-1, -0.352436, 1, -1, 0.491119,-99) , 
0, 0.504757, 1, 0, 0.498022,-99) , 
2, 0.214446, 0, 0, 0.498681,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.00780687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.158529, 0, 1, 0.50373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47633,-99) , 
3, 4.76626, 1, 0, 0.497197,-99) , 
4, 0.999909, 0, 0, 0.502471,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.493025,-99) , 
4, 0.999048, 0, 0, 0.501968,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00787638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76761, 1, 1, 0.516308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498573,-99) , 
6, 0.0237891, 0, 0, 0.499518,-99) , 
4, 0.999524, 1, 0, 0.501116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488429,-99) , 
3, 8.84799, 1, 0, 0.500574,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00815204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680016, 0, 1, 0.503209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49043,-99) , 
6, 0.00566731, 1, 0, 0.496401,-99) , 
5, -0.533087, 0, 0, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489426,-99) , 
6, 0.0238024, 1, 0, 0.500783,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00787858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499886,-99) , 
3, 2.56318, 1, 0, 0.510722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491143,-99) , 
0, 0.499042, 0, 0, 0.497112,-99) , 
5, -0.0652379, 1, 0, 0.505298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49338,-99) , 
5, 0.581417, 1, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 4.41184, 1, -1, 0.49575,-99) , 
0, 0.499043, 1, 0, 0.498519,-99) , 
2, 0.0713933, 0, 0, 0.499746,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00348319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499783,-99) , 
4, 0.999691, 1, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481374,-99) , 
4, 0.99941, 0, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0.495632, 1, -1, 0.490344,-99) , 
4, 0.999048, 0, 0, 0.499384,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0124489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.58904, 0, 1, 0.505076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4875,-99) , 
5, 0.262972, 1, 0, 0.49556,-99) , 
0, 0.493328, 0, 0, 0.503782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494745,-99) , 
6, 0.0113269, 0, 0, 0.496866,-99) , 
6, 0.0237891, 0, 0, 0.49822,-99) , 
5, -0.158742, 0, 0, 0.500768,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00634521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.5062,-99) , 
NN(
NN(
0, 
0, 
-1, 0.6535, 1, 1, 0.504759,-99) , 
NN(
0, 
0, 
-1, -0.171034, 1, -1, 0.497224,-99) , 
5, 0.58257, 0, 0, 0.497915,-99) , 
0, 0.504757, 0, 0, 0.498463,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0110635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496954,-99) , 
5, -0.510019, 0, 0, 0.501637,-99) , 
6, 0.0238025, 0, 0, 0.50277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494552,-99) , 
4, 0.999977, 1, 0, 0.498465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477786,-99) , 
4, 0.998617, 1, 0, 0.490063,-99) , 
4, 0.999524, 0, 0, 0.497159,-99) , 
5, -0.0646031, 1, 0, 0.500516,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0114129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499039,-99) , 
1, 0.00113375, 0, 0, 0.502324,-99) , 
6, 0.0237969, 0, 0, 0.505306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494824,-99) , 
5, 0.582152, 1, 0, 0.503446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495222,-99) , 
0, 0.50326, 0, 0, 0.497338,-99) , 
0, 0.496185, 1, 0, 0.499318,-99) , 
5, -0.345221, 1, 0, 0.501908,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00875658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495745,-99) , 
3, 3.93542, 1, 0, 0.500537,-99) , 
6, 0.0238025, 0, 0, 0.501437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491496,-99) , 
4, 0.999977, 1, 0, 0.496324,-99) , 
NN(
0, 
0, 
-1, 0.523358, 1, -1, 0.487212,-99) , 
4, 0.999524, 0, 0, 0.494902,-99) , 
5, -0.064604, 1, 0, 0.498808,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0118203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47755,-99) , 
5, -0.8153, 0, 0, 0.503752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496924,-99) , 
5, -0.813926, 1, 0, 0.498133,-99) , 
6, 0.00680062, 0, 0, 0.499555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486176,-99) , 
6, 0.0238025, 1, 0, 0.499075,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.00654563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.504471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488443,-99) , 
4, 0.999592, 0, 0, 0.499046,-99) , 
5, -0.252951, 1, 0, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485211,-99) , 
4, 0.998571, 0, 0, 0.501207,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00991783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498221,-99) , 
2, 0.0150923, 0, 0, 0.501956,-99) , 
NN(
0, 
0, 
-1, 4.76626, 1, -1, 0.495523,-99) , 
4, 0.999955, 0, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.486382,-99) , 
4, 0.999048, 0, 0, 0.49933,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0108351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0713253, 1, 1, 0.510494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496127,-99) , 
4, 0.999905, 1, 0, 0.499489,-99) , 
3, 2.11072, 0, 0, 0.50483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494973,-99) , 
3, 8.4703, 1, 0, 0.504111,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.496905,-99) , 
3, 4.39023, 0, 0, 0.498484,-99) , 
5, -0.441436, 1, 0, 0.500832,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00695762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499964,-99) , 
3, 3.82296, 1, 0, 0.502887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493554,-99) , 
5, 0.678922, 1, 0, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486767,-99) , 
0, 0.505709, 1, 0, 0.501799,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00648354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499294,-99) , 
0, 0.497954, 0, 0, 0.508292,-99) , 
NN(
0, 
0, 
-1, 8.56903, 0, 1, 0.502265,-99) , 
4, 0.999524, 1, 0, 0.502808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487664,-99) , 
0, 0.505709, 1, 0, 0.502226,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00729338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.559021, 1, 1, 0.503443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487047,-99) , 
5, -0.875278, 1, 0, 0.495184,-99) , 
5, -0.812915, 0, 0, 0.502676,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00640807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499592,-99) , 
6, 0.0067907, 0, 0, 0.500714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470275,-99) , 
6, 0.00679065, 1, 0, 0.491156,-99) , 
5, -0.813042, 0, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487001,-99) , 
6, 0.0237681, 1, 0, 0.49943,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.00757927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498703,-99) , 
4, 0.999991, 0, 0, 0.504888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491354,-99) , 
4, 0.99981, 0, 0, 0.503775,-99) , 
NN(
NN(
0, 
0, 
-1, 0.465454, 1, 1, 0.506735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486768,-99) , 
4, 0.999887, 0, 0, 0.49806,-99) , 
4, 0.999524, 1, 0, 0.499054,-99) , 
5, -0.5323, 1, 0, 0.500497,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00777964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0705358, 1, 1, 0.506744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497401,-99) , 
6, 0.0237891, 0, 0, 0.498098,-99) , 
4, 0.999524, 1, 0, 0.498878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484346,-99) , 
0, 0.505709, 1, 0, 0.498325,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0110388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497599,-99) , 
6, 0.0056659, 1, 0, 0.502221,-99) , 
6, 0.0237969, 0, 0, 0.504465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494871,-99) , 
0, 0.499995, 0, 0, 0.496913,-99) , 
4, 0.999048, 1, 0, 0.498305,-99) , 
5, -0.25296, 1, 0, 0.501325,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00727709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0727965, 0, 1, 0.504503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494294,-99) , 
0, 0.499859, 1, 0, 0.499661,-99) , 
0, 0.5019, 0, 0, 0.50063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486514,-99) , 
0, 0.498771, 1, 0, 0.496006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48253,-99) , 
0, 0.495234, 0, 0, 0.492503,-99) , 
5, 0.492374, 1, 0, 0.499605,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00691064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132572, 0, 1, 0.502395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485425,-99) , 
2, 0.214174, 1, 0, 0.501536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496636,-99) , 
5, -0.0672549, 0, 0, 0.499312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490899,-99) , 
5, -0.439085, 1, 0, 0.494666,-99) , 
0, 0.502535, 1, 0, 0.4971,-99) , 
0, 0.499995, 1, 0, 0.500059,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0063424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491763,-99) , 
6, 0.000755639, 0, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479989,-99) , 
6, 0.015868, 1, 0, 0.499523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483502,-99) , 
6, 0.0238024, 1, 0, 0.498949,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00882746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498738,-99) , 
5, -0.42985, 0, 0, 0.501234,-99) , 
6, 0.0237892, 0, 0, 0.502894,-99) , 
NN(
0, 
0, 
-1, -0.193773, 0, -1, 0.49587,-99) , 
5, -0.251681, 1, 0, 0.499321,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00653522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498196,-99) , 
5, -0.439723, 1, 0, 0.500036,-99) , 
3, 9.39852, 0, 0, 0.500581,-99) , 
NN(
0, 
0, 
-1, 0.492381, 1, -1, 0.486912,-99) , 
4, 0.999048, 0, 0, 0.499854,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0067455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.587444, 0, 1, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483167,-99) , 
6, 0.0237891, 1, 0, 0.50154,-99) , 
NN(
0, 
0, 
-1, 0.5058, 0, -1, 0.492903,-99) , 
0, 0.502852, 1, 0, 0.500313,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00830869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498567,-99) , 
5, -0.26557, 0, 0, 0.501135,-99) , 
6, 0.0237892, 0, 0, 0.501867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509288,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.4959,-99) , 
4, 0.999048, 1, 0, 0.497389,-99) , 
5, 0.0282036, 1, 0, 0.500297,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00841551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376219, 1, 1, 0.510855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487736,-99) , 
2, -0.0703615, 0, 0, 0.500935,-99) , 
0, 0.496186, 1, 0, 0.504182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519486,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.498193,-99) , 
6, 0.0238025, 0, 0, 0.49923,-99) , 
5, 0.0240295, 0, 0, 0.500984,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00717039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499362,-99) , 
5, 0.114653, 0, 0, 0.501758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485239,-99) , 
6, 0.0147309, 1, 0, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485144,-99) , 
6, 0.0237968, 1, 0, 0.500446,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00838678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498093,-99) , 
0, 0.498997, 0, 0, 0.502622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497293,-99) , 
4, 0.999524, 1, 0, 0.498779,-99) , 
5, -0.5323, 1, 0, 0.499954,-99) , 
0, 0.489519, 1, 0, 0.500326,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00834451);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.50506,-99) , 
NN(
NN(
0, 
0, 
-1, 0.692676, 0, 1, 0.50247,-99) , 
NN(
0, 
0, 
-1, 0.5019, 0, -1, 0.494929,-99) , 
0, 0.500947, 1, 0, 0.50064,-99) , 
5, -0.158737, 1, 0, 0.503056,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00782203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.503288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495876,-99) , 
0, 0.495777, 1, 0, 0.499662,-99) , 
0, 0.499043, 0, 0, 0.501171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487129,-99) , 
5, -0.906902, 0, 0, 0.500626,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.00839814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492742,-99) , 
5, -0.813202, 0, 0, 0.500943,-99) , 
3, 8.56903, 0, 0, 0.501821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505901,-99) , 
NN(
0, 
0, 
-1, 0.295794, 0, -1, 0.480202,-99) , 
2, 0.0713933, 0, 0, 0.490542,-99) , 
4, 0.999524, 0, 0, 0.500793,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00724905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499287,-99) , 
6, 0.00604342, 0, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481442,-99) , 
6, 0.0158641, 1, 0, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483822,-99) , 
6, 0.0237968, 1, 0, 0.500249,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00994223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.50405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475559,-99) , 
4, 0.999429, 0, 0, 0.50286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493198,-99) , 
5, 0.286458, 0, 0, 0.501554,-99) , 
NN(
0, 
0, 
-1, 4.43225, 1, -1, 0.495467,-99) , 
0, 0.500947, 0, 0, 0.49693,-99) , 
5, 0.0234477, 1, 0, 0.500772,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00490296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499841,-99) , 
4, 0.999524, 1, 0, 0.5004,-99) , 
NN(
0, 
0, 
-1, 4.47895, 1, -1, 0.49531,-99) , 
0, 0.50317, 1, 0, 0.499604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0.492693, 1, -1, 0.492044,-99) , 
5, 0.3916, 0, 0, 0.49405,-99) , 
0, 0.494281, 0, 0, 0.498534,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0040442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499567,-99) , 
2, -0.213899, 1, 0, 0.500337,-99) , 
3, 9.40736, 0, 0, 0.500935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489968,-99) , 
4, 0.998571, 0, 0, 0.500553,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00854088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487772,-99) , 
4, 0.999954, 0, 0, 0.502764,-99) , 
4, 0.999524, 1, 0, 0.505681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487959,-99) , 
6, 0.0238025, 1, 0, 0.500411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481564,-99) , 
0, 0.505709, 1, 0, 0.49978,-99) , 
2, 0.0711436, 0, 0, 0.50085,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00594912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.188372, 0, 1, 0.501248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489179,-99) , 
5, 0.494077, 0, 0, 0.49405,-99) , 
4, 0.999864, 0, 0, 0.500213,-99) , 
NN(
0, 
0, 
-1, 0.495613, 1, -1, 0.490143,-99) , 
4, 0.999048, 0, 0, 0.49967,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00621692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.581454, 0, 1, 0.509403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49885,-99) , 
3, 8.56798, 0, 0, 0.499502,-99) , 
4, 0.999524, 1, 0, 0.500381,-99) , 
NN(
0, 
0, 
-1, 0.50453, 0, -1, 0.490241,-99) , 
0, 0.503805, 1, 0, 0.499376,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00557645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.367177, 1, 1, 0.509958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498679,-99) , 
0, 0.505709, 0, 0, 0.499205,-99) , 
3, 0.50602, 1, 0, 0.499955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486604,-99) , 
3, 8.8365, 1, 0, 0.499384,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00822678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497007,-99) , 
3, 3.45231, 1, 0, 0.501527,-99) , 
5, 0.682512, 0, 0, 0.502105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489607,-99) , 
0, 0.490471, 0, 0, 0.50151,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00686532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.509539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496154,-99) , 
0, 0.496049, 0, 0, 0.500621,-99) , 
0, 0.491424, 1, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489185,-99) , 
5, -0.906455, 0, 0, 0.500809,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00450252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499287,-99) , 
2, -0.274263, 1, 0, 0.499835,-99) , 
2, 0.214828, 0, 0, 0.500287,-99) , 
NN(
0, 
0, 
-1, 0.496652, 1, -1, 0.486324,-99) , 
4, 0.999048, 0, 0, 0.499542,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00697719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487105,-99) , 
6, 0.000700652, 0, 0, 0.499822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484955,-99) , 
6, 0.0147132, 1, 0, 0.499149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48412,-99) , 
6, 0.0237681, 1, 0, 0.498607,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0073526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.716294, 0, 1, 0.506908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494913,-99) , 
2, -0.0168125, 1, 0, 0.497967,-99) , 
3, 1.81691, 0, 0, 0.502809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508705,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497449,-99) , 
5, 0.728858, 0, 0, 0.497997,-99) , 
5, -0.627627, 1, 0, 0.499141,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00318938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.5394, 0, 1, 0.500576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487571,-99) , 
5, -0.907189, 0, 0, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483125,-99) , 
4, 0.998571, 0, 0, 0.499473,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.00637756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499975,-99) , 
0, 0.496186, 1, 0, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487555,-99) , 
1, 0.0124602, 1, 0, 0.501385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47361,-99) , 
6, 0.0237891, 1, 0, 0.500407,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00569656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.545437, 1, 1, 0.501678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48951,-99) , 
0, 0.499451, 1, 0, 0.497243,-99) , 
3, 4.75611, 1, 0, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491852,-99) , 
0, 0.490471, 0, 0, 0.500414,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00607726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
2, 0.207607, 1, 0, 0.502845,-99) , 
0, 0.493329, 1, 0, 0.505588,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497857,-99) , 
2, 0.0715747, 0, 0, 0.499253,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00871211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49777,-99) , 
5, -0.501121, 0, 0, 0.50161,-99) , 
6, 0.0237494, 0, 0, 0.502052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495483,-99) , 
3, 4.52785, 0, 0, 0.497622,-99) , 
NN(
0, 
0, 
-1, 0.613697, 1, -1, 0.489419,-99) , 
0, 0.496186, 0, 0, 0.494932,-99) , 
5, 0.309553, 1, 0, 0.500573,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00500591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492833,-99) , 
3, 4.53422, 1, 0, 0.509206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499525,-99) , 
2, 0.132786, 0, 0, 0.500184,-99) , 
NN(
0, 
0, 
-1, 3.54187, 1, -1, 0.492517,-99) , 
0, 0.503805, 1, 0, 0.499459,-99) , 
2, 0.214405, 0, 0, 0.500011,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00405455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514377,-99) , 
NN(
0, 
0, 
-1, -0.906617, 0, -1, 0.499176,-99) , 
0, 0.489519, 1, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.483003,-99) , 
4, 0.999048, 0, 0, 0.498699,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00965069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494425,-99) , 
5, 0.297353, 1, 0, 0.508635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494205,-99) , 
2, 0.207443, 1, 0, 0.50096,-99) , 
2, 0.0713938, 1, 0, 0.506099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497636,-99) , 
2, 0.0500851, 0, 0, 0.499099,-99) , 
2, 0.213101, 0, 0, 0.499926,-99) , 
3, 4.75611, 0, 0, 0.501105,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0116483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488015,-99) , 
6, 0.00566617, 1, 0, 0.509323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
3, 1.93581, 1, 0, 0.500774,-99) , 
5, 0.403094, 0, 0, 0.502241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484421,-99) , 
6, 0.0238024, 1, 0, 0.501602,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0128185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.508344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495974,-99) , 
5, -0.0389485, 0, 0, 0.50058,-99) , 
5, -0.534973, 1, 0, 0.503069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487429,-99) , 
5, -0.0779829, 0, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483558,-99) , 
5, 0.489485, 1, 0, 0.492699,-99) , 
4, 0.999524, 0, 0, 0.502127,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00604309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.34855, 1, 1, 0.510431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498226,-99) , 
2, 0.21604, 0, 0, 0.49872,-99) , 
4, 0.999048, 1, 0, 0.499367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487044,-99) , 
3, 8.84534, 1, 0, 0.498844,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0120463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495587,-99) , 
2, -0.0704128, 0, 0, 0.506383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496807,-99) , 
3, 2.4132, 0, 0, 0.500209,-99) , 
5, -0.251682, 0, 0, 0.503401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491524,-99) , 
5, 0.298151, 0, 0, 0.493471,-99) , 
0, 0.489519, 1, 0, 0.495076,-99) , 
0, 0.494281, 0, 0, 0.501805,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00732032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488894,-99) , 
4, 0.999592, 0, 0, 0.501977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486829,-99) , 
5, 0.670515, 1, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.491607,-99) , 
4, 0.999048, 0, 0, 0.500835,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0098242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.49225, 0, 1, 0.504068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486583,-99) , 
4, 0.999429, 0, 0, 0.503277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510657,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.494589,-99) , 
4, 0.999048, 1, 0, 0.496852,-99) , 
5, 0.215149, 1, 0, 0.501645,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00846784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496026,-99) , 
2, 0.0714252, 1, 0, 0.50444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497906,-99) , 
6, 0.0237968, 0, 0, 0.498999,-99) , 
5, 0.162569, 0, 0, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486811,-99) , 
5, -0.906448, 0, 0, 0.500053,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00939668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499592,-99) , 
6, 0.00339804, 0, 0, 0.503871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49644,-99) , 
6, 0.0147259, 0, 0, 0.497326,-99) , 
5, -0.251682, 0, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480118,-99) , 
6, 0.0237891, 1, 0, 0.500004,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0104567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499407,-99) , 
5, -0.626461, 0, 0, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494986,-99) , 
4, 0.999524, 0, 0, 0.503474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494186,-99) , 
0, 0.490033, 0, 0, 0.504403,-99) , 
NN(
0, 
0, 
-1, 0.49487, 0, -1, 0.494399,-99) , 
0, 0.493963, 1, 0, 0.498701,-99) , 
0, 0.497138, 0, 0, 0.501528,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00408928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0714685, 0, 1, 0.511421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499802,-99) , 
6, 0.0237968, 0, 0, 0.500399,-99) , 
4, 0.999524, 1, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490391,-99) , 
3, 9.39852, 1, 0, 0.501042,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0049814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488274,-99) , 
3, 9.39852, 1, 0, 0.501676,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00676959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237708, 0, 1, 0.504155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499844,-99) , 
3, 0.508537, 1, 0, 0.501148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491322,-99) , 
5, 0.464588, 0, 0, 0.494592,-99) , 
3, 4.3304, 1, 0, 0.499694,-99) , 
5, -0.345221, 1, 0, 0.501622,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00792017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493071,-99) , 
6, 0.00679209, 1, 0, 0.508661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499793,-99) , 
5, -0.884185, 1, 0, 0.500731,-99) , 
5, 0.216013, 0, 0, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485515,-99) , 
6, 0.0237968, 1, 0, 0.502193,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0061174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03455, 0, 1, 0.505267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499367,-99) , 
5, -0.461954, 1, 0, 0.500372,-99) , 
5, -0.533102, 1, 0, 0.501908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487271,-99) , 
4, 0.998571, 0, 0, 0.501401,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0110581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495511,-99) , 
5, -0.893597, 1, 0, 0.497499,-99) , 
5, -0.441436, 0, 0, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486478,-99) , 
6, 0.0238025, 1, 0, 0.501817,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.00890395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497932,-99) , 
3, 3.59238, 1, 0, 0.502846,-99) , 
6, 0.0237681, 0, 0, 0.503824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498254,-99) , 
0, 0.492376, 1, 0, 0.499566,-99) , 
NN(
0, 
0, 
-1, 0.58904, 0, -1, 0.489549,-99) , 
4, 0.999524, 0, 0, 0.498114,-99) , 
5, -0.158742, 1, 0, 0.501232,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00867968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495968,-99) , 
3, 2.67345, 1, 0, 0.510319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490957,-99) , 
0, 0.49809, 1, 0, 0.499068,-99) , 
5, -0.0645938, 1, 0, 0.505842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499002,-99) , 
2, -0.0536388, 1, 0, 0.500049,-99) , 
2, 0.302673, 0, 0, 0.500693,-99) , 
2, -0.0714552, 1, 0, 0.50161,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00780258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42509, 0, 1, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.486503,-99) , 
4, 0.999048, 0, 0, 0.502466,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00950034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498024,-99) , 
3, 3.98044, 0, 0, 0.501372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478176,-99) , 
3, 4.20423, 1, 0, 0.496061,-99) , 
4, 0.999955, 0, 0, 0.499811,-99) , 
NN(
0, 
0, 
-1, 0.496657, 1, -1, 0.488625,-99) , 
4, 0.999048, 0, 0, 0.499213,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0104955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487823,-99) , 
4, 0.999958, 0, 0, 0.501476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493523,-99) , 
5, 0.581422, 0, 0, 0.497307,-99) , 
4, 0.999932, 0, 0, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484873,-99) , 
4, 0.998572, 0, 0, 0.499908,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00601243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498463,-99) , 
0, 0.499451, 1, 0, 0.501035,-99) , 
0, 0.490471, 1, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489093,-99) , 
4, 0.998572, 0, 0, 0.501124,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00596446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497997,-99) , 
3, 0.939135, 1, 0, 0.49909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491029,-99) , 
3, 8.85165, 1, 0, 0.49874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486832,-99) , 
5, -0.906523, 0, 0, 0.498268,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00711537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499576,-99) , 
6, 0.0124664, 0, 0, 0.501203,-99) , 
6, 0.0238025, 0, 0, 0.501956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496711,-99) , 
3, 4.52238, 0, 0, 0.498362,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.491381,-99) , 
5, 0.125158, 0, 0, 0.496572,-99) , 
5, -0.0697526, 1, 0, 0.499777,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00517347);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214291, 1, 1, 0.502211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486973,-99) , 
3, 9.39852, 1, 0, 0.501683,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0111799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483707,-99) , 
6, 0.00452966, 0, 0, 0.509995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493129,-99) , 
6, 0.00793222, 1, 0, 0.499976,-99) , 
4, 0.999524, 1, 0, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49017,-99) , 
6, 0.0237968, 1, 0, 0.500527,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00936802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488535,-99) , 
6, 0.00792405, 1, 0, 0.503779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496914,-99) , 
5, -0.853423, 1, 0, 0.497878,-99) , 
5, 0.0260088, 0, 0, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48787,-99) , 
6, 0.0237968, 1, 0, 0.499566,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00824065);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.495588, 1, 1, 0.513684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497512,-99) , 
5, -0.439723, 1, 0, 0.499932,-99) , 
3, 8.47487, 0, 0, 0.500656,-99) , 
4, 0.999048, 1, 0, 0.501379,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00789487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497563,-99) , 
6, 0.00420411, 0, 0, 0.500513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490073,-99) , 
6, 0.014715, 1, 0, 0.500039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486163,-99) , 
6, 0.0237708, 1, 0, 0.499546,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00722094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.355209, 0, 1, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485374,-99) , 
5, 0.674084, 1, 0, 0.502087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488076,-99) , 
4, 0.998572, 0, 0, 0.501607,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00947295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494475,-99) , 
5, -0.710968, 0, 0, 0.50195,-99) , 
6, 0.0238024, 0, 0, 0.502545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508088,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496073,-99) , 
5, 0.747522, 0, 0, 0.49755,-99) , 
5, 0.213929, 1, 0, 0.50127,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00667025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.508934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495184,-99) , 
1, 0.0011338, 1, 0, 0.498411,-99) , 
0, 0.504757, 0, 0, 0.499105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48496,-99) , 
6, 0.0238025, 1, 0, 0.498597,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00333258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729776, 1, 1, 0.500852,-99) , 
NN(
0, 
0, 
-1, -0.875964, 1, -1, 0.494107,-99) , 
5, -0.813945, 0, 0, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489388,-99) , 
0, 0.505709, 1, 0, 0.499823,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00755996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0714952, 1, 1, 0.503031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49682,-99) , 
2, 0.132711, 0, 0, 0.497555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485409,-99) , 
2, 0.21433, 1, 0, 0.496928,-99) , 
0, 0.499995, 0, 0, 0.498969,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0109015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48672,-99) , 
6, 0.00452582, 0, 0, 0.510842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497989,-99) , 
3, 9.4271, 0, 0, 0.498844,-99) , 
4, 0.999524, 1, 0, 0.499973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485611,-99) , 
6, 0.0237708, 1, 0, 0.499463,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0166098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475179,-99) , 
6, 0.00339277, 0, 0, 0.510766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492999,-99) , 
6, 0.00452362, 1, 0, 0.49901,-99) , 
4, 0.999524, 1, 0, 0.500114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484688,-99) , 
6, 0.0237494, 1, 0, 0.499556,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_4_6_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_4_6_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_4_6_noNsigma *ReadBDT_maker_LHC19c2a_4_6_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_4_6_noNsigma(theInpVar);
  }
}
