#include "LHC19c2a_TMVAClassification_BDT_8_12_noP.class.h"

double ReadBDT_LHC19c2a_8_12_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_8_12_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.70309009625886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.0533, 1, 1, 0.83334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221793,-99) , 
9, -3.44441, 1, 0, 0.323761,-99) , 
5, 0.714177, 1, 0, 0.730063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278316,-99) , 
9, -1.40889, 1, 0, 0.402546,-99) , 
NN(
0, 
0, 
-1, -1.52859, 1, -1, 0.0576551,-99) , 
5, 0.523773, 1, 0, 0.241115,-99) , 
9, -2.23105, 1, 0, 0.500176,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.604093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618975, 1, 1, 0.803181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.225133,-99) , 
4, 0.999524, 0, 0, 0.753828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35597,-99) , 
7, -951.286, 0, 0, 0.482702,-99) , 
NN(
0, 
0, 
-1, -1.88285, 1, -1, 0.128344,-99) , 
5, 0.428536, 1, 0, 0.3177,-99) , 
9, -2.68072, 1, 0, 0.487663,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.445885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30731, 1, 1, 0.765535,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.430043,-99) , 
9, -2.29482, 1, 0, 0.611141,-99) , 
NN(
0, 
0, 
-1, -2.31273, 1, -1, 0.219595,-99) , 
5, 0.61901, 1, 0, 0.48523,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.388435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.875884, 0, 1, 0.842111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239863,-99) , 
4, 0.999905, 0, 0, 0.539843,-99) , 
9, -3.25573, 1, 0, 0.613697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179663,-99) , 
4, 0.999048, 0, 0, 0.449482,-99) , 
NN(
0, 
0, 
-1, -1.56316, 1, -1, 0.112909,-99) , 
9, -2.28587, 1, 0, 0.266358,-99) , 
5, 0.61901, 1, 0, 0.502095,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.358534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.06198, 1, 1, 0.810432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387663,-99) , 
9, -1.79053, 1, 0, 0.49008,-99) , 
9, -3.28405, 1, 0, 0.563421,-99) , 
NN(
0, 
0, 
-1, -1.90648, 1, -1, 0.233479,-99) , 
5, 0.714243, 1, 0, 0.478734,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.349765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75083, 1, 1, 0.79854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.71809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499872,-99) , 
9, -3.88989, 1, 0, 0.588758,-99) , 
5, 0.523741, 1, 0, 0.72753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286351,-99) , 
8, -0.425517, 0, 0, 0.509888,-99) , 
NN(
0, 
0, 
-1, -1.70352, 1, -1, 0.247977,-99) , 
5, 0.523774, 1, 0, 0.412353,-99) , 
9, -3.28405, 1, 0, 0.479202,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.276228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.707369, 0, 1, 0.791756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.756132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477444,-99) , 
8, -0.232537, 0, 0, 0.595944,-99) , 
9, -3.79503, 1, 0, 0.663998,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.38488,-99) , 
9, -2.94408, 1, 0, 0.467962,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.217032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.868571, 0, 1, 0.73376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228387,-99) , 
8, 2.14379, 1, 0, 0.487333,-99) , 
9, -3.32811, 1, 0, 0.537336,-99) , 
NN(
0, 
0, 
-1, -2.64869, 1, -1, 0.165501,-99) , 
4, 0.999524, 0, 0, 0.493149,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.187948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.767241, 0, 1, 0.736132,-99) , 
NN(
0, 
0, 
-1, 2.14301, 1, -1, 0.472372,-99) , 
9, -3.44177, 1, 0, 0.517283,-99) , 
NN(
0, 
0, 
-1, -2.72727, 1, -1, 0.180905,-99) , 
4, 0.999524, 0, 0, 0.478183,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.19183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.895233, 0, 1, 0.694873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280202,-99) , 
5, 0.809478, 1, 0, 0.486105,-99) , 
9, -3.28108, 1, 0, 0.529404,-99) , 
NN(
0, 
0, 
-1, -2.26017, 1, -1, 0.191124,-99) , 
4, 0.999524, 0, 0, 0.491201,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.21986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.25868, 1, 1, 0.577928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260777,-99) , 
4, 0.999048, 0, 0, 0.557233,-99) , 
NN(
0, 
0, 
-1, 0.714195, 1, -1, 0.361693,-99) , 
9, -1.95498, 1, 0, 0.479811,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.155759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.766943, 0, 1, 0.663144,-99) , 
NN(
0, 
0, 
-1, -0.714218, 0, -1, 0.471403,-99) , 
9, -3.41502, 1, 0, 0.503609,-99) , 
NN(
0, 
0, 
-1, -2.56591, 1, -1, 0.207383,-99) , 
4, 0.999524, 0, 0, 0.471634,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.188081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.22194, 1, 1, 0.566221,-99) , 
NN(
0, 
0, 
-1, -1.34228, 1, -1, 0.418338,-99) , 
4, 0.999977, 0, 0, 0.519315,-99) , 
NN(
0, 
0, 
-1, -2.63866, 1, -1, 0.224074,-99) , 
4, 0.999524, 0, 0, 0.487847,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.117495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.96954, 1, 1, 0.523225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.187039,-99) , 
8, 2.42863, 1, 0, 0.509717,-99) , 
NN(
0, 
0, 
-1, -2.504, 1, -1, 0.240337,-99) , 
4, 0.999524, 0, 0, 0.481422,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.158486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.86871, 0, 1, 0.648117,-99) , 
NN(
0, 
0, 
-1, -0.714006, 0, -1, 0.468874,-99) , 
9, -3.28405, 1, 0, 0.504332,-99) , 
NN(
0, 
0, 
-1, -1.88621, 1, -1, 0.289148,-99) , 
5, 0.809477, 1, 0, 0.470914,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.152843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374098,-99) , 
8, -0.931757, 0, 0, 0.512958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.202978,-99) , 
8, 2.42853, 1, 0, 0.499829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.176327,-99) , 
4, 0.998572, 0, 0, 0.482736,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.246622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363096,-99) , 
4, 0.999905, 0, 0, 0.596066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357704,-99) , 
7, -951.286, 0, 0, 0.443353,-99) , 
5, -0.659885, 0, 0, 0.535577,-99) , 
NN(
0, 
0, 
-1, -1.56182, 1, -1, 0.385151,-99) , 
5, 0.428536, 1, 0, 0.475247,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0937004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.721804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497374,-99) , 
9, -4.03907, 1, 0, 0.512533,-99) , 
NN(
0, 
0, 
-1, 0.619017, 1, -1, 0.289347,-99) , 
8, 2.14287, 1, 0, 0.497638,-99) , 
NN(
0, 
0, 
-1, -2.01682, 1, -1, 0.237086,-99) , 
4, 0.999048, 0, 0, 0.479279,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.131129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37786, 0, 1, 0.71801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253543,-99) , 
8, -1.14934, 0, 0, 0.496741,-99) , 
9, -4.09426, 1, 0, 0.510643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275638,-99) , 
9, -0.851892, 1, 0, 0.405011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.114057,-99) , 
5, 0.714229, 1, 0, 0.293252,-99) , 
8, 1.85717, 1, 0, 0.487181,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.136294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0557151, 0, 1, 0.571077,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.452635,-99) , 
9, -2.84764, 1, 0, 0.491037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.186549,-99) , 
4, 0.998572, 0, 0, 0.476101,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.13114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39477,-99) , 
8, -0.795791, 0, 0, 0.504516,-99) , 
NN(
0, 
0, 
-1, 0.523926, 1, -1, 0.296906,-99) , 
8, 2.14283, 1, 0, 0.491354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.191053,-99) , 
4, 0.998571, 0, 0, 0.477161,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.10196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46178, 0, 1, 0.676732,-99) , 
NN(
0, 
0, 
-1, -1.28562, 0, -1, 0.48217,-99) , 
9, -3.9343, 1, 0, 0.497116,-99) , 
NN(
0, 
0, 
-1, -1.887, 1, -1, 0.333484,-99) , 
5, 0.809479, 1, 0, 0.472217,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.111479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47424, 1, 1, 0.52476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250196,-99) , 
10, -2.3368, 1, 0, 0.369058,-99) , 
8, -1.2856, 0, 0, 0.511241,-99) , 
NN(
0, 
0, 
-1, -1.44468, 1, -1, 0.345483,-99) , 
5, 0.809475, 1, 0, 0.486416,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0958707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.24444, 1, 1, 0.517164,-99) , 
NN(
0, 
0, 
-1, 0.238065, 1, -1, 0.394183,-99) , 
9, -1.17411, 1, 0, 0.493077,-99) , 
NN(
0, 
0, 
-1, -2.18526, 1, -1, 0.261684,-99) , 
4, 0.999048, 0, 0, 0.478019,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.181343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19858, 0, 1, 0.678615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405333,-99) , 
8, 0.142519, 0, 0, 0.498716,-99) , 
9, -3.48732, 1, 0, 0.520359,-99) , 
NN(
0, 
0, 
-1, 0.595341, 1, -1, 0.410218,-99) , 
5, 0.333301, 1, 0, 0.472301,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.128497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485046,-99) , 
8, -0.0659223, 0, 0, 0.545955,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.453223,-99) , 
9, -2.63065, 1, 0, 0.491085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220287,-99) , 
8, 2.42844, 1, 0, 0.480052,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0865421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.12603, 0, 1, 0.676104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360141,-99) , 
8, -0.713999, 0, 0, 0.483407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245835,-99) , 
4, 0.998571, 0, 0, 0.472458,-99) , 
9, -3.94568, 1, 0, 0.486476,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.110448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.821384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476072,-99) , 
9, -4.24902, 1, 0, 0.543443,-99) , 
8, -0.287526, 0, 0, 0.596013,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.460098,-99) , 
9, -3.32811, 1, 0, 0.484517,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0838767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361788,-99) , 
8, -1.44883, 0, 0, 0.509557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285522,-99) , 
8, 2.42852, 1, 0, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20228,-99) , 
4, 0.997619, 0, 0, 0.4929,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0791763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.705634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278241,-99) , 
8, -1.38081, 0, 0, 0.491882,-99) , 
9, -4.12042, 1, 0, 0.503948,-99) , 
NN(
0, 
0, 
-1, 0.618995, 1, -1, 0.323856,-99) , 
8, 1.85712, 1, 0, 0.485158,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.107583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.764514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.747887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490614,-99) , 
9, -4.43324, 1, 0, 0.515497,-99) , 
8, 0.267558, 0, 0, 0.544934,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.449355,-99) , 
9, -2.84764, 1, 0, 0.479761,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.120524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477364,-99) , 
4, 0.999996, 0, 0, 0.524283,-99) , 
NN(
0, 
0, 
-1, 0.528053, 1, -1, 0.435237,-99) , 
4, 0.999955, 0, 0, 0.502806,-99) , 
NN(
0, 
0, 
-1, -2.18526, 1, -1, 0.309612,-99) , 
4, 0.999048, 0, 0, 0.490962,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0750159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489974,-99) , 
8, -0.86871, 0, 0, 0.589604,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487838,-99) , 
9, -3.28405, 1, 0, 0.507725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255778,-99) , 
8, 2.42852, 1, 0, 0.498059,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0802907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08177, 0, 1, 0.656858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291235,-99) , 
8, -1.28557, 0, 0, 0.502776,-99) , 
9, -3.91043, 1, 0, 0.514088,-99) , 
NN(
0, 
0, 
-1, -0.193698, 1, -1, 0.314774,-99) , 
4, 0.999048, 0, 0, 0.5023,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0583006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06733, 0, 1, 0.630671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318521,-99) , 
8, -1.19039, 0, 0, 0.492422,-99) , 
9, -3.87146, 1, 0, 0.503785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264362,-99) , 
8, 2.4285, 1, 0, 0.494802,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0611517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22862, 0, 1, 0.651496,-99) , 
NN(
0, 
0, 
-1, -1.2854, 0, -1, 0.485912,-99) , 
9, -3.9343, 1, 0, 0.497682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221933,-99) , 
4, 0.997619, 0, 0, 0.490433,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0885877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366709,-99) , 
8, -1.57146, 0, 0, 0.517961,-99) , 
NN(
0, 
0, 
-1, 2.145, 1, -1, 0.413223,-99) , 
9, -0.747486, 1, 0, 0.50557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258017,-99) , 
4, 0.997619, 0, 0, 0.498831,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.136224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65237, 1, 1, 0.675007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.705519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440869,-99) , 
9, -4.3698, 1, 0, 0.512325,-99) , 
8, -0.707972, 0, 0, 0.580131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444212,-99) , 
8, 0.431481, 0, 0, 0.490334,-99) , 
NN(
0, 
0, 
-1, -1.89119, 1, -1, 0.311387,-99) , 
4, 0.999524, 0, 0, 0.474066,-99) , 
9, -3.28108, 1, 0, 0.493795,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0808815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.307292, 0, 1, 0.576578,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.477721,-99) , 
9, -3.28405, 1, 0, 0.496884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263496,-99) , 
8, 2.42841, 1, 0, 0.488235,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.137192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40387,-99) , 
4, 0.999905, 0, 0, 0.551666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412951,-99) , 
9, -0.2769, 1, 0, 0.534801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443558,-99) , 
8, 0.252293, 0, 0, 0.482465,-99) , 
NN(
0, 
0, 
-1, 0.67356, 1, -1, 0.253502,-99) , 
10, 0.608603, 1, 0, 0.449319,-99) , 
5, 0.238059, 1, 0, 0.494085,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0717785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.335289, 0, 1, 0.572056,-99) , 
NN(
0, 
0, 
-1, 0.904714, 1, -1, 0.480592,-99) , 
9, -3.32513, 1, 0, 0.49722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289841,-99) , 
8, 2.42851, 1, 0, 0.48938,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0483306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09391, 0, 1, 0.601965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352383,-99) , 
8, -1.1853, 0, 0, 0.494669,-99) , 
9, -3.90671, 1, 0, 0.503141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2925,-99) , 
8, 2.42852, 1, 0, 0.495641,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0634349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22876, 0, 1, 0.613758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40183,-99) , 
8, -0.673453, 0, 0, 0.489277,-99) , 
9, -3.9343, 1, 0, 0.498126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292069,-99) , 
8, 2.42843, 1, 0, 0.490654,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0923408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.758461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487537,-99) , 
9, -4.31081, 1, 0, 0.52887,-99) , 
8, -0.0744063, 0, 0, 0.55815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422243,-99) , 
4, 0.999977, 0, 0, 0.476984,-99) , 
NN(
0, 
0, 
-1, -2.14563, 1, -1, 0.319183,-99) , 
4, 0.999524, 0, 0, 0.463269,-99) , 
9, -3.22762, 1, 0, 0.482252,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.107721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473657,-99) , 
9, -3.72366, 1, 0, 0.507138,-99) , 
8, 0.435336, 0, 0, 0.529402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426882,-99) , 
5, 0.142813, 1, 0, 0.470918,-99) , 
NN(
0, 
0, 
-1, 1.29409, 1, -1, 0.263752,-99) , 
4, 0.999524, 0, 0, 0.453165,-99) , 
9, -2.62528, 1, 0, 0.482931,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.102866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96552, 1, 1, 0.655518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480344,-99) , 
9, -4.12416, 1, 0, 0.503667,-99) , 
8, 0.206443, 0, 0, 0.534574,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.455029,-99) , 
9, -2.63065, 1, 0, 0.486071,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.140096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714392, 0, 1, 0.622156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45189,-99) , 
8, -0.655493, 0, 0, 0.541675,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.44975,-99) , 
9, -2.90969, 1, 0, 0.477207,-99) , 
1, -0.00439438, 1, 0, 0.497426,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0782537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.179179, 0, 1, 0.558083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438869,-99) , 
8, 0.142866, 0, 0, 0.490311,-99) , 
9, -2.90509, 1, 0, 0.510038,-99) , 
NN(
0, 
0, 
-1, -0.523984, 1, -1, 0.364573,-99) , 
5, 0.904714, 1, 0, 0.501577,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.078462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394365,-99) , 
8, -1.57333, 0, 0, 0.517732,-99) , 
NN(
0, 
0, 
-1, 2.145, 1, -1, 0.433078,-99) , 
9, -0.90616, 1, 0, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335607,-99) , 
4, 0.998571, 0, 0, 0.498886,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0501796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495121,-99) , 
9, -3.81364, 1, 0, 0.504145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388965,-99) , 
8, -1.53055, 0, 0, 0.498243,-99) , 
NN(
0, 
0, 
-1, 0.6191, 1, -1, 0.374653,-99) , 
8, 2.14274, 1, 0, 0.490412,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.060382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.01285, 1, 1, 0.512953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341897,-99) , 
8, -1.8434, 0, 0, 0.507897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563278,-99) , 
NN(
0, 
0, 
-1, 0.428547, 1, -1, 0.296461,-99) , 
9, -1.13688, 1, 0, 0.40322,-99) , 
8, 1.85704, 1, 0, 0.497514,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.113255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10953, 0, 1, 0.681717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440437,-99) , 
9, -2.97254, 1, 0, 0.493616,-99) , 
8, 0.752144, 0, 0, 0.518649,-99) , 
NN(
0, 
0, 
-1, 0.714244, 1, -1, 0.454005,-99) , 
9, -2.13833, 1, 0, 0.489829,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0844455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.169242, 0, 1, 0.582552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489607,-99) , 
9, -0.984133, 1, 0, 0.566671,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.470151,-99) , 
1, 0.00200832, 0, 0, 0.499493,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0751322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481152,-99) , 
5, 0.237983, 1, 0, 0.513963,-99) , 
NN(
0, 
0, 
-1, -1.75502, 1, -1, 0.436032,-99) , 
4, 0.999819, 0, 0, 0.504469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325581,-99) , 
4, 0.998095, 0, 0, 0.499359,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0525614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65585, 1, 1, 0.517923,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.408616,-99) , 
8, -1.44807, 0, 0, 0.511479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360988,-99) , 
8, 2.42852, 1, 0, 0.50632,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0448364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.966068, 0, 1, 0.614441,-99) , 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.489347,-99) , 
9, -3.73506, 1, 0, 0.498229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387176,-99) , 
8, -1.5713, 0, 0, 0.493096,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0683673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493757,-99) , 
9, -4.28297, 1, 0, 0.584415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4502,-99) , 
8, -0.142627, 0, 0, 0.495641,-99) , 
9, -3.91043, 1, 0, 0.501766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283129,-99) , 
9, -2.32757, 1, 0, 0.397573,-99) , 
5, 0.904713, 1, 0, 0.495811,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0522859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0502822, 0, 1, 0.555568,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487388,-99) , 
9, -3.08966, 1, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383622,-99) , 
8, -1.57123, 0, 0, 0.496833,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0525716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.29469, 1, 1, 0.51438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394968,-99) , 
10, -2.17745, 1, 0, 0.446728,-99) , 
8, -0.999874, 0, 0, 0.506435,-99) , 
NN(
0, 
0, 
-1, 0.940974, 1, -1, 0.39319,-99) , 
5, 0.90469, 1, 0, 0.500137,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0425593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494913,-99) , 
9, -3.54412, 1, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, -2.25019, 1, -1, 0.425645,-99) , 
8, -1.28557, 0, 0, 0.497358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348686,-99) , 
3, 8.63683, 1, 0, 0.492864,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0439632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.34174, 1, 1, 0.511304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374946,-99) , 
7, -951.286, 0, 0, 0.430369,-99) , 
10, 1.55585, 1, 0, 0.50453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385528,-99) , 
3, 8.07184, 1, 0, 0.500025,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0638372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480655,-99) , 
5, 0.142813, 1, 0, 0.506838,-99) , 
NN(
0, 
0, 
-1, -1.98287, 1, -1, 0.439923,-99) , 
4, 0.999819, 0, 0, 0.498814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34797,-99) , 
4, 0.998095, 0, 0, 0.494441,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0628078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489618,-99) , 
9, -2.74656, 1, 0, 0.506435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40803,-99) , 
9, -4.38218, 1, 0, 0.434655,-99) , 
8, -0.99987, 0, 0, 0.497786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359933,-99) , 
4, 0.998095, 0, 0, 0.493859,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0280938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11091, 0, 1, 0.600799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372666,-99) , 
4, 0.998095, 0, 0, 0.497218,-99) , 
9, -3.89476, 1, 0, 0.503283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346707,-99) , 
8, -1.85697, 0, 0, 0.4993,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0689962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498755,-99) , 
9, -3.02499, 1, 0, 0.514099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429512,-99) , 
9, -4.13418, 1, 0, 0.454427,-99) , 
8, -0.427908, 0, 0, 0.498668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333391,-99) , 
4, 0.998095, 0, 0, 0.494235,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0753693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495671,-99) , 
9, -2.14354, 1, 0, 0.524567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459708,-99) , 
9, -4.05706, 1, 0, 0.476145,-99) , 
8, -0.142757, 0, 0, 0.507981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357562,-99) , 
4, 0.998095, 0, 0, 0.503859,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0668808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45476,-99) , 
4, 0.999819, 0, 0, 0.516695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404788,-99) , 
8, -1.57127, 0, 0, 0.511878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366549,-99) , 
4, 0.998095, 0, 0, 0.507807,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0739751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.550463, 0, 1, 0.646347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488504,-99) , 
10, -1.12048, 1, 0, 0.499768,-99) , 
1, 0.00682455, 0, 0, 0.511314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56947,-99) , 
NN(
0, 
0, 
-1, -1.40783, 0, -1, 0.446895,-99) , 
9, -4.1742, 1, 0, 0.466735,-99) , 
8, -0.428313, 0, 0, 0.50006,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0720736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487763,-99) , 
9, -2.01682, 1, 0, 0.516232,-99) , 
1, -0.00901092, 1, 0, 0.521269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463435,-99) , 
7, -951.286, 0, 0, 0.498007,-99) , 
NN(
0, 
0, 
-1, 0.347721, 1, -1, 0.441967,-99) , 
5, 0.142829, 1, 0, 0.4715,-99) , 
0, 0.499995, 1, 0, 0.504013,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0571027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40945,-99) , 
8, 2.34686, 1, 0, 0.512359,-99) , 
9, -4.0252, 1, 0, 0.51752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400861,-99) , 
8, -1.57104, 0, 0, 0.512253,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0613484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.45628, 1, 1, 0.523661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469899,-99) , 
9, -1.81948, 0, 0, 0.483527,-99) , 
8, 0.1429, 0, 0, 0.506011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381293,-99) , 
4, 0.998095, 0, 0, 0.502645,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0708228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.52231, 1, 1, 0.53321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477006,-99) , 
9, -1.79838, 0, 0, 0.490534,-99) , 
8, 0.713897, 0, 0, 0.504911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379999,-99) , 
7, -951.286, 0, 0, 0.430584,-99) , 
10, 1.55585, 1, 0, 0.498979,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0528949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49607,-99) , 
7, -951.286, 0, 0, 0.520587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368368,-99) , 
10, 0.595341, 1, 0, 0.484607,-99) , 
5, 0.238069, 1, 0, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391668,-99) , 
4, 0.999048, 0, 0, 0.498947,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0512778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435723,-99) , 
8, -1.56986, 0, 0, 0.513813,-99) , 
NN(
0, 
0, 
-1, 0.269793, 1, -1, 0.464736,-99) , 
0, 0.502852, 1, 0, 0.505934,-99) , 
NN(
0, 
0, 
-1, -2.19764, 1, -1, 0.418135,-99) , 
5, 0.904712, 1, 0, 0.500957,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0669313);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.40708, 1, 1, 0.57044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482995,-99) , 
7, -950.08, 0, 0, 0.513351,-99) , 
NN(
0, 
0, 
-1, 0.939527, 1, -1, 0.470563,-99) , 
5, 0.0475947, 1, 0, 0.49109,-99) , 
9, -3.91043, 1, 0, 0.496456,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0347302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470975,-99) , 
8, -1.06244, 0, 0, 0.54081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383425,-99) , 
4, 0.998571, 0, 0, 0.496397,-99) , 
9, -3.32513, 1, 0, 0.503926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38738,-99) , 
3, 8.62065, 1, 0, 0.50041,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0573611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48624,-99) , 
1, -0.000943163, 1, 0, 0.511269,-99) , 
NN(
0, 
0, 
-1, -0.142636, 0, -1, 0.475657,-99) , 
0, 0.499043, 1, 0, 0.496195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388082,-99) , 
4, 0.998095, 0, 0, 0.493355,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0332473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.12172, 1, 1, 0.507945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308765,-99) , 
9, -2.37504, 1, 0, 0.438136,-99) , 
5, 0.904714, 1, 0, 0.503871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414661,-99) , 
10, 2.19995, 1, 0, 0.500817,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0441758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404872,-99) , 
8, -1.28754, 0, 0, 0.499098,-99) , 
9, -4.34084, 1, 0, 0.503277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396782,-99) , 
9, 0.192667, 1, 0, 0.480429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356887,-99) , 
8, 2.23988, 1, 0, 0.447734,-99) , 
10, 1.37907, 1, 0, 0.497804,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0500377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487542,-99) , 
5, 0.23807, 1, 0, 0.507365,-99) , 
NN(
0, 
0, 
-1, -0.42846, 0, -1, 0.473212,-99) , 
0, 0.499995, 1, 0, 0.495513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395417,-99) , 
3, 7.95824, 1, 0, 0.491795,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0410987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459416,-99) , 
8, -0.427418, 0, 0, 0.496577,-99) , 
9, -4.22229, 1, 0, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424908,-99) , 
9, 0.272271, 1, 0, 0.497706,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0362273);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46645,-99) , 
8, -0.142776, 0, 0, 0.490812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382598,-99) , 
3, 8.39381, 1, 0, 0.487576,-99) , 
9, -4.0934, 1, 0, 0.491964,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0673676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498084, 1, 1, 0.607431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483238,-99) , 
8, 1.54543, 0, 0, 0.491723,-99) , 
NN(
0, 
0, 
-1, 0.714119, 1, -1, 0.443615,-99) , 
9, -1.30316, 1, 0, 0.481992,-99) , 
1, 0.00855322, 0, 0, 0.488765,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0992121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454919,-99) , 
9, -3.06336, 1, 0, 0.486397,-99) , 
8, 1.11376, 0, 0, 0.502825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421442,-99) , 
9, 0.202777, 1, 0, 0.499306,-99) , 
NN(
0, 
0, 
-1, -1.47708, 1, -1, 0.310483,-99) , 
5, 0.714243, 1, 0, 0.467978,-99) , 
9, -1.97463, 1, 0, 0.489411,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0617359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.72084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487643,-99) , 
8, 0.544329, 0, 0, 0.500184,-99) , 
8, 0.917402, 0, 0, 0.515726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448784,-99) , 
3, 4.1772, 1, 0, 0.49264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332697,-99) , 
4, 0.999524, 0, 0, 0.480323,-99) , 
9, -2.2114, 1, 0, 0.499082,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0723341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.19021, 0, 1, 0.654596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417871,-99) , 
10, -0.593841, 1, 0, 0.491178,-99) , 
8, 0.825793, 0, 0, 0.512461,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.472446,-99) , 
9, -2.03891, 1, 0, 0.496049,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0858721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
5, 0.714172, 0, 0, 0.495996,-99) , 
8, 1.28277, 0, 0, 0.511657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464908,-99) , 
8, 1.00228, 1, 0, 0.495278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259431,-99) , 
5, 0.809478, 1, 0, 0.470271,-99) , 
9, -1.68734, 1, 0, 0.499116,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0694671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485533,-99) , 
9, -2.51061, 1, 0, 0.506383,-99) , 
8, 1.84606, 0, 0, 0.512541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464654,-99) , 
7, -951.286, 0, 0, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255243,-99) , 
5, 0.71425, 1, 0, 0.471644,-99) , 
9, -1.27336, 1, 0, 0.503989,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0683948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.89913, 1, 1, 0.545752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484869,-99) , 
5, 0.723262, 0, 0, 0.491347,-99) , 
8, 0.999966, 0, 0, 0.50596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471,-99) , 
4, 0.999524, 1, 0, 0.506362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271534,-99) , 
9, -1.56086, 1, 0, 0.459335,-99) , 
5, 0.809478, 1, 0, 0.499518,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0946986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472688,-99) , 
4, 0.999995, 0, 0, 0.529678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425198,-99) , 
4, 0.999905, 0, 0, 0.522731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483365,-99) , 
4, 0.999524, 1, 0, 0.495269,-99) , 
NN(
0, 
0, 
-1, 0.746286, 1, -1, 0.362754,-99) , 
10, 0.595341, 1, 0, 0.477471,-99) , 
5, 0.238066, 1, 0, 0.501597,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0516742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444441,-99) , 
8, -1.57308, 0, 0, 0.515892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436326,-99) , 
7, -951.286, 0, 0, 0.463734,-99) , 
10, 1.37907, 1, 0, 0.510572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397329,-99) , 
4, 0.998095, 0, 0, 0.507602,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.078286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.108712, 1, 1, 0.637425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46848,-99) , 
9, -3.06298, 1, 0, 0.496585,-99) , 
8, 0.85644, 0, 0, 0.515492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470332,-99) , 
5, 0.120137, 1, 0, 0.494232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326501,-99) , 
5, 0.809477, 1, 0, 0.475692,-99) , 
9, -1.98321, 1, 0, 0.49984,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0364129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53373, 0, 1, 0.511503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429554,-99) , 
10, 2.2413, 1, 0, 0.491304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295824,-99) , 
5, 0.71424, 1, 0, 0.464688,-99) , 
9, -1.32383, 1, 0, 0.501221,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0343676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.08025, 1, 1, 0.508635,-99) , 
NN(
0, 
0, 
-1, 1.84453, 1, -1, 0.451988,-99) , 
9, -0.80727, 1, 0, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349846,-99) , 
8, -1.85674, 0, 0, 0.497526,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.101959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0775552, 0, 1, 0.595024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468749,-99) , 
8, 1.15118, 0, 0, 0.482764,-99) , 
1, -0.002983, 1, 0, 0.504982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466435,-99) , 
7, -951.286, 0, 0, 0.491586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280759,-99) , 
5, 0.714246, 1, 0, 0.461512,-99) , 
9, -1.51271, 1, 0, 0.493621,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0750933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.534426, 1, 1, 0.59502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480052,-99) , 
9, -4.40247, 1, 0, 0.489407,-99) , 
8, 0.473178, 0, 0, 0.516435,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.472529,-99) , 
9, -2.03891, 1, 0, 0.498469,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0662061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.396872, 1, 1, 0.617559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495685,-99) , 
9, -4.18642, 1, 0, 0.504496,-99) , 
8, 0.622999, 0, 0, 0.520428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449725,-99) , 
5, 0.0475857, 1, 0, 0.494692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30971,-99) , 
4, 0.999524, 0, 0, 0.481824,-99) , 
10, -0.130361, 1, 0, 0.503944,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0565026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427939,-99) , 
8, -1.38898, 0, 0, 0.509479,-99) , 
9, -4.41001, 1, 0, 0.512497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473429,-99) , 
7, -951.286, 0, 0, 0.507692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27942,-99) , 
5, 0.142834, 1, 0, 0.46445,-99) , 
10, 1.03536, 1, 0, 0.505501,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0672704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461133,-99) , 
10, -0.680424, 1, 0, 0.511772,-99) , 
8, 0.663025, 0, 0, 0.522648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45818,-99) , 
5, -0.0476266, 1, 0, 0.486995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339963,-99) , 
4, 0.999524, 0, 0, 0.476406,-99) , 
10, -0.301468, 1, 0, 0.500073,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0519409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0057274, 1, 1, 0.515521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421925,-99) , 
7, -951.288, 0, 0, 0.457545,-99) , 
9, -0.651345, 1, 0, 0.509805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564437,-99) , 
NN(
0, 
0, 
-1, -0.714183, 1, -1, 0.452608,-99) , 
1, -0.00439438, 1, 0, 0.469106,-99) , 
0, 0.5019, 1, 0, 0.501127,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0598968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486028,-99) , 
4, 0.999524, 1, 0, 0.492717,-99) , 
8, 1.00799, 0, 0, 0.504125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476754,-99) , 
10, 0.284459, 1, 0, 0.489001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340588,-99) , 
4, 0.999524, 0, 0, 0.478058,-99) , 
9, -2.03538, 1, 0, 0.493523,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0363184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474613,-99) , 
8, -0.13995, 0, 0, 0.496086,-99) , 
9, -4.05443, 1, 0, 0.499277,-99) , 
NN(
0, 
0, 
-1, -0.60155, 1, -1, 0.419514,-99) , 
5, 0.904654, 1, 0, 0.494989,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.063261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448754,-99) , 
10, -0.465033, 1, 0, 0.502536,-99) , 
8, 0.915928, 0, 0, 0.511961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478578,-99) , 
9, -2.1355, 1, 0, 0.485571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305179,-99) , 
4, 0.999524, 0, 0, 0.473676,-99) , 
10, -0.0633817, 1, 0, 0.496421,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54568, 1, 1, 0.506413,-99) , 
NN(
0, 
0, 
-1, -1.76146, 0, -1, 0.451879,-99) , 
8, -0.99963, 0, 0, 0.499631,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.427564,-99) , 
4, 0.999048, 0, 0, 0.496022,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0284067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445519,-99) , 
3, 6.41349, 1, 0, 0.499452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426481,-99) , 
0, 0.505709, 1, 0, 0.495998,-99) , 
NN(
0, 
0, 
-1, -0.566862, 1, -1, 0.42632,-99) , 
5, 0.904714, 1, 0, 0.492225,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0568893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482179,-99) , 
8, 0.57087, 0, 0, 0.502456,-99) , 
NN(
0, 
0, 
-1, 0.71424, 1, -1, 0.479879,-99) , 
9, -2.16059, 1, 0, 0.492173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404585,-99) , 
3, 8.64028, 1, 0, 0.489472,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0472736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488786,-99) , 
1, -0.00134846, 1, 0, 0.512564,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48524,-99) , 
10, -0.177718, 1, 0, 0.500344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420845,-99) , 
3, 8.63428, 1, 0, 0.497905,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.103255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494319,-99) , 
8, -0.00697243, 0, 0, 0.52074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265998,-99) , 
7, -1.28864, 0, 0, 0.493153,-99) , 
7, -950.08, 1, 0, 0.505161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400254,-99) , 
8, -1.85698, 0, 0, 0.502519,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0488087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412666,-99) , 
10, -0.404803, 1, 0, 0.501722,-99) , 
8, 0.739459, 0, 0, 0.512409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463319,-99) , 
5, 0.142695, 1, 0, 0.489013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325983,-99) , 
4, 0.999524, 0, 0, 0.478079,-99) , 
10, -0.208662, 1, 0, 0.496667,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0788889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.785665, 0, 1, 0.563175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467793,-99) , 
8, 1.05328, 0, 0, 0.478152,-99) , 
1, 0.00182294, 0, 0, 0.505186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450793,-99) , 
5, 0.120147, 1, 0, 0.487505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356581,-99) , 
5, 0.809478, 1, 0, 0.474511,-99) , 
10, 0.127924, 1, 0, 0.494425,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0396762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474814,-99) , 
5, 0.530383, 1, 0, 0.540131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484067,-99) , 
8, 1.00185, 0, 0, 0.492615,-99) , 
9, -3.91274, 1, 0, 0.495736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428385,-99) , 
3, 8.22717, 1, 0, 0.493511,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0642871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480726,-99) , 
1, -0.00408816, 1, 0, 0.495495,-99) , 
8, 0.915876, 0, 0, 0.505169,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.474571,-99) , 
10, -0.0655857, 1, 0, 0.492699,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0467429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.3435, 1, 1, 0.564489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
7, -949.779, 1, 0, 0.505482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412417,-99) , 
5, -0.904742, 1, 0, 0.450592,-99) , 
10, 1.24137, 1, 0, 0.49951,-99) , 
1, -0.00733313, 1, 0, 0.503904,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0457158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431121,-99) , 
10, -0.534303, 1, 0, 0.50348,-99) , 
8, 0.638161, 0, 0, 0.516098,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.480908,-99) , 
10, -0.350498, 1, 0, 0.498415,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0216302);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.1363, 0, 1, 0.507621,-99) , 
NN(
0, 
0, 
-1, 1.98653, 1, -1, 0.459177,-99) , 
10, 1.37907, 1, 0, 0.502963,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0508767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370227,-99) , 
10, -1.66514, 1, 0, 0.487418,-99) , 
8, -0.558919, 0, 0, 0.525104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488547,-99) , 
8, 1.29001, 0, 0, 0.495493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419914,-99) , 
4, 0.999048, 0, 0, 0.49191,-99) , 
10, -1.385, 1, 0, 0.497896,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0690722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.147, 1, 1, 0.583515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478791,-99) , 
9, -1.80978, 1, 0, 0.501268,-99) , 
7, -949.779, 0, 0, 0.530413,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0203937, 1, 1, 0.633204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476532,-99) , 
7, -951.286, 1, 0, 0.492455,-99) , 
1, 0.00603436, 0, 0, 0.502909,-99) , 
5, -0.714281, 1, 0, 0.509036,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0328793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.589589, 0, 1, 0.581005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435942,-99) , 
4, 0.999048, 0, 0, 0.499092,-99) , 
10, -1.47068, 1, 0, 0.505952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369011,-99) , 
10, -2.17832, 1, 0, 0.4441,-99) , 
9, -3.12153, 0, 0, 0.467598,-99) , 
8, -0.99991, 0, 0, 0.501259,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0378586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484888,-99) , 
8, -0.715906, 0, 0, 0.508658,-99) , 
NN(
0, 
0, 
-1, 0.2381, 1, -1, 0.460467,-99) , 
0, 0.504757, 1, 0, 0.505013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0.499044, 0, -1, 0.43284,-99) , 
7, -951.287, 0, 0, 0.459072,-99) , 
10, 1.40258, 1, 0, 0.500649,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0314189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.05772, 0, 1, 0.513486,-99) , 
NN(
0, 
0, 
-1, 0.809471, 1, -1, 0.486577,-99) , 
10, 0.127924, 1, 0, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411813,-99) , 
3, 8.63428, 1, 0, 0.501071,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0513707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486164,-99) , 
1, 0.00224338, 0, 0, 0.516407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484028,-99) , 
5, -0.637186, 1, 0, 0.492239,-99) , 
0, 0.497138, 1, 0, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0.508258, 1, -1, 0.445893,-99) , 
5, 0.904713, 1, 0, 0.499298,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0368878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3358, 0, 1, 0.513278,-99) , 
NN(
0, 
0, 
-1, 0.714235, 1, -1, 0.48274,-99) , 
10, 0.413945, 1, 0, 0.504669,-99) , 
NN(
0, 
0, 
-1, 8.43153, 1, -1, 0.46499,-99) , 
3, 4.37797, 1, 0, 0.4969,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0331133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494929,-99) , 
8, 0.999966, 0, 0, 0.502858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368235,-99) , 
5, 0.619273, 0, 0, 0.459647,-99) , 
4, 0.999728, 0, 0, 0.49896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434484,-99) , 
4, 0.998095, 0, 0, 0.497324,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0389781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485535,-99) , 
5, -0.142871, 1, 0, 0.498235,-99) , 
10, -1.9834, 1, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438143,-99) , 
8, -1.57106, 0, 0, 0.498671,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0409949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430633, 0, 1, 0.521531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488602,-99) , 
1, 0.00682455, 0, 0, 0.497046,-99) , 
0, 0.494281, 1, 0, 0.502163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445126,-99) , 
2, -0.214379, 0, 0, 0.499462,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0441356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499525,-99) , 
9, -4.22985, 1, 0, 0.505522,-99) , 
8, 0.870098, 0, 0, 0.514341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477135,-99) , 
8, 1.29292, 0, 0, 0.498028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351866,-99) , 
4, 0.999524, 0, 0, 0.488846,-99) , 
10, -0.132533, 1, 0, 0.503411,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0666196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00146741, 1, 1, 0.537873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411074,-99) , 
10, -1.91745, 1, 0, 0.455839,-99) , 
8, -0.42008, 0, 0, 0.520575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467478,-99) , 
4, 0.999991, 0, 0, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379713,-99) , 
4, 0.99981, 0, 0, 0.495386,-99) , 
5, 0.523729, 0, 0, 0.503956,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0524067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454575,-99) , 
10, -0.730202, 1, 0, 0.501636,-99) , 
8, 0.614741, 0, 0, 0.51465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491079,-99) , 
8, 0.147142, 1, 0, 0.49884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311008,-99) , 
10, 0.32135, 1, 0, 0.412577,-99) , 
5, 0.809457, 1, 0, 0.489467,-99) , 
10, -0.363945, 1, 0, 0.502002,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0528363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.187631, 1, 1, 0.60619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49604,-99) , 
9, -4.36981, 1, 0, 0.503137,-99) , 
8, 0.852826, 0, 0, 0.517078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484311,-99) , 
8, 0.431781, 1, 0, 0.497925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375745,-99) , 
5, 0.809479, 1, 0, 0.485106,-99) , 
9, -1.97463, 1, 0, 0.50466,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0442455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.426937, 1, 1, 0.571822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46869,-99) , 
4, 0.999048, 0, 0, 0.515867,-99) , 
9, -3.72969, 1, 0, 0.520899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490471,-99) , 
10, -0.461526, 1, 0, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0.501896, 0, -1, 0.442865,-99) , 
8, -0.997288, 0, 0, 0.495335,-99) , 
0, 0.499043, 1, 0, 0.510026,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0352715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40703, 1, 1, 0.514674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459495,-99) , 
8, -1.5713, 0, 0, 0.512201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422418,-99) , 
3, 8.62065, 1, 0, 0.509588,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0292046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.740592, 0, 1, 0.595917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430161,-99) , 
4, 0.999048, 0, 0, 0.498719,-99) , 
9, -3.64288, 1, 0, 0.505275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423735,-99) , 
5, -0.619489, 1, 0, 0.45103,-99) , 
8, -1.2856, 0, 0, 0.501167,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0676225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.483406, 1, 1, 0.596481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473101,-99) , 
9, -3.64939, 1, 0, 0.488007,-99) , 
8, 0.5325, 0, 0, 0.504008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480886,-99) , 
8, 1.29001, 0, 0, 0.494803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393885,-99) , 
5, 0.809478, 1, 0, 0.484534,-99) , 
10, -0.208662, 1, 0, 0.495144,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.03769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496214,-99) , 
8, -0.338427, 0, 0, 0.563012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468576,-99) , 
10, 1.28224, 1, 0, 0.498869,-99) , 
10, -1.26668, 1, 0, 0.504987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432068,-99) , 
5, -0.142871, 1, 0, 0.458774,-99) , 
9, -2.83595, 0, 0, 0.477022,-99) , 
8, -0.714216, 0, 0, 0.499953,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0267737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496266,-99) , 
8, 2.0639, 0, 0, 0.499146,-99) , 
9, -0.788612, 0, 0, 0.502235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445662,-99) , 
10, 1.85981, 1, 0, 0.473095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412497,-99) , 
8, 2.17922, 1, 0, 0.456235,-99) , 
10, 1.28368, 1, 0, 0.497169,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0467479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.512766, 1, 1, 0.567897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490203,-99) , 
9, -2.18214, 0, 0, 0.498578,-99) , 
8, 0.440643, 0, 0, 0.512634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459447,-99) , 
10, 1.81208, 1, 0, 0.496882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310981,-99) , 
4, 0.999524, 0, 0, 0.485902,-99) , 
10, -0.129699, 1, 0, 0.501183,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0465204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431848,-99) , 
10, 0.0207415, 1, 0, 0.505566,-99) , 
8, 1.19306, 0, 0, 0.511955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483229,-99) , 
8, 2.14611, 0, 0, 0.492018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402567,-99) , 
5, 0.714248, 1, 0, 0.479334,-99) , 
10, 0.238081, 1, 0, 0.501423,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0260253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.449893, 0, 1, 0.51429,-99) , 
NN(
0, 
0, 
-1, 0.80945, 1, -1, 0.490783,-99) , 
10, -0.561082, 1, 0, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422504,-99) , 
8, -1.85695, 0, 0, 0.498612,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.021198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498487,-99) , 
9, -3.73506, 1, 0, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449474,-99) , 
8, -1.57123, 0, 0, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426989,-99) , 
3, 7.95824, 1, 0, 0.498103,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.031129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496137,-99) , 
5, -0.714281, 1, 0, 0.502539,-99) , 
9, -3.84856, 1, 0, 0.506962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423113,-99) , 
8, -1.57106, 0, 0, 0.503118,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0503373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422626,-99) , 
10, -1.13295, 1, 0, 0.498143,-99) , 
8, 0.0509319, 0, 0, 0.51943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465701,-99) , 
4, 0.999955, 0, 0, 0.495445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382518,-99) , 
4, 0.999048, 0, 0, 0.490443,-99) , 
10, -0.796833, 1, 0, 0.500694,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0262032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494863,-99) , 
5, -0.619046, 1, 0, 0.501848,-99) , 
10, -2.04629, 1, 0, 0.504299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451569,-99) , 
8, -1.57123, 0, 0, 0.502055,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0646654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.34549, 1, 1, 0.600132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487476,-99) , 
1, 0.00682455, 0, 0, 0.49559,-99) , 
10, -1.06125, 1, 0, 0.506665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486228,-99) , 
5, -0.905074, 0, 0, 0.52151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448163,-99) , 
9, -4.35866, 1, 0, 0.463503,-99) , 
9, -2.71725, 0, 0, 0.479052,-99) , 
8, -0.428476, 0, 0, 0.499516,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0578194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0983167, 0, 1, 0.596527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472768,-99) , 
8, 0.605575, 0, 0, 0.498457,-99) , 
10, -0.85108, 1, 0, 0.509658,-99) , 
NN(
NN(
0, 
0, 
-1, -1.69109, 1, 1, 0.544766,-99) , 
NN(
0, 
0, 
-1, -1.64172, 1, -1, 0.467563,-99) , 
1, 0.00205527, 0, 0, 0.491673,-99) , 
8, -0.142776, 0, 0, 0.503407,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.045859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471943,-99) , 
8, -0.428261, 0, 0, 0.508559,-99) , 
10, -1.62781, 1, 0, 0.513635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470109,-99) , 
7, -951.286, 0, 0, 0.501044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407089,-99) , 
5, 0.523696, 1, 0, 0.475618,-99) , 
8, -0.999676, 0, 0, 0.509134,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.073993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.726935, 1, 1, 0.591896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463125,-99) , 
1, -0.00134846, 1, 0, 0.490547,-99) , 
8, 0.234034, 0, 0, 0.513726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484952,-99) , 
8, 0.146168, 1, 0, 0.492803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413512,-99) , 
4, 0.999524, 0, 0, 0.487486,-99) , 
10, -0.352671, 1, 0, 0.500531,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0435382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495045,-99) , 
8, -0.631812, 0, 0, 0.535965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471628,-99) , 
8, -0.142636, 0, 0, 0.503446,-99) , 
10, -1.46236, 1, 0, 0.508645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483254,-99) , 
5, -0.142971, 1, 0, 0.494436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418778,-99) , 
0, 0.490336, 1, 0, 0.465497,-99) , 
0, 0.491425, 0, 0, 0.504888,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0486207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.545121, 1, 1, 0.617818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462351,-99) , 
10, -0.95237, 1, 0, 0.50129,-99) , 
8, 0.406874, 0, 0, 0.517102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497248,-99) , 
8, 0.443379, 1, 0, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397053,-99) , 
4, 0.999524, 0, 0, 0.497246,-99) , 
10, -0.397855, 1, 0, 0.506825,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.047874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.914744, 1, 1, 0.518989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483151,-99) , 
10, -1.69013, 1, 0, 0.497218,-99) , 
8, -0.142828, 0, 0, 0.511401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4646,-99) , 
9, -2.32864, 1, 0, 0.494101,-99) , 
NN(
0, 
0, 
-1, -0.54393, 0, -1, 0.459413,-99) , 
8, -0.136526, 0, 0, 0.481652,-99) , 
3, 4.17451, 1, 0, 0.504948,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0308964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714293, 1, 1, 0.51484,-99) , 
NN(
0, 
0, 
-1, 1.51589, 1, -1, 0.477288,-99) , 
10, 1.58017, 1, 0, 0.511963,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0426373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76278, 1, 1, 0.600832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399895,-99) , 
10, -2.4472, 1, 0, 0.465961,-99) , 
8, -1.09142, 0, 0, 0.531856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482273,-99) , 
5, 0.0475947, 1, 0, 0.492702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443904,-99) , 
2, -0.214179, 0, 0, 0.490253,-99) , 
9, -3.59956, 1, 0, 0.495012,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0536862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41921,-99) , 
10, -1.5257, 1, 0, 0.493025,-99) , 
8, -0.314985, 0, 0, 0.515386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480831,-99) , 
2, -0.0595192, 1, 0, 0.487237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426993,-99) , 
4, 0.999048, 0, 0, 0.484451,-99) , 
10, -1.23092, 1, 0, 0.491239,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0808856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.377471, 0, 1, 0.600567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478242,-99) , 
1, -0.00439438, 1, 0, 0.493642,-99) , 
10, -0.598521, 1, 0, 0.508546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46614,-99) , 
8, -0.605634, 0, 0, 0.503384,-99) , 
NN(
0, 
0, 
-1, 0.0475938, 1, -1, 0.4703,-99) , 
10, -1.26976, 1, 0, 0.486074,-99) , 
8, 0.143049, 0, 0, 0.498692,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0428972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483132,-99) , 
8, -0.968204, 0, 0, 0.552736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473849,-99) , 
4, 0.999524, 0, 0, 0.513052,-99) , 
9, -3.67992, 1, 0, 0.51601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469992,-99) , 
8, -1.57127, 0, 0, 0.514016,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0227261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38391, 1, 1, 0.508551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463914,-99) , 
5, 0.904691, 1, 0, 0.506333,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.462672,-99) , 
2, -0.214379, 0, 0, 0.504037,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0257427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.914109, 0, 1, 0.509119,-99) , 
NN(
0, 
0, 
-1, -0.142866, 1, -1, 0.475382,-99) , 
10, 1.15709, 1, 0, 0.504685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421989,-99) , 
8, -1.85699, 0, 0, 0.502568,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0501817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490784,-99) , 
10, -0.642541, 1, 0, 0.503919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470775,-99) , 
9, -2.41099, 0, 0, 0.484608,-99) , 
8, -0.00676231, 0, 0, 0.496549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395379,-99) , 
8, -1.85699, 0, 0, 0.493852,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0298555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494299,-99) , 
4, 0.99999, 0, 0, 0.505964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428308,-99) , 
4, 0.999563, 1, 0, 0.469767,-99) , 
4, 0.999796, 0, 0, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438621,-99) , 
4, 0.998571, 0, 0, 0.500441,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0457126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85568, 1, 1, 0.525687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490163,-99) , 
9, -1.3129, 0, 0, 0.497175,-99) , 
8, 1.0001, 0, 0, 0.504684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456025,-99) , 
8, 0.0777328, 0, 0, 0.503116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392967,-99) , 
9, -1.77463, 1, 0, 0.476258,-99) , 
5, 0.809478, 1, 0, 0.500876,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0434182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.168673, 0, 1, 0.527363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484627,-99) , 
8, 0.717205, 0, 0, 0.503199,-99) , 
10, -0.71223, 1, 0, 0.512394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437181,-99) , 
10, -0.419485, 0, 0, 0.474521,-99) , 
0, 0.491425, 0, 0, 0.508964,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0447414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423606,-99) , 
10, -1.76825, 1, 0, 0.493487,-99) , 
8, -0.543876, 0, 0, 0.52649,-99) , 
NN(
NN(
0, 
0, 
-1, -3.066, 1, 1, 0.508926,-99) , 
NN(
0, 
0, 
-1, -0.0675801, 0, -1, 0.484539,-99) , 
5, 0.0475984, 1, 0, 0.497184,-99) , 
10, -1.34964, 1, 0, 0.502742,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0628201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.379721, 0, 1, 0.536014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469086,-99) , 
8, 1.00269, 0, 0, 0.498555,-99) , 
10, -0.363945, 1, 0, 0.516638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472516,-99) , 
8, 0.0439834, 0, 0, 0.491666,-99) , 
NN(
0, 
0, 
-1, 0.809457, 1, -1, 0.465685,-99) , 
10, -0.301468, 1, 0, 0.479102,-99) , 
1, 0.000687785, 0, 0, 0.495641,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0252635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495139,-99) , 
4, 0.999524, 1, 0, 0.498994,-99) , 
9, -4.34084, 1, 0, 0.501673,-99) , 
NN(
0, 
0, 
-1, 1.63211, 1, -1, 0.459252,-99) , 
10, 1.55585, 1, 0, 0.498405,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0608795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47385,-99) , 
9, -4.3786, 1, 0, 0.491927,-99) , 
8, -0.668806, 0, 0, 0.527175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490473,-99) , 
9, -2.26473, 1, 0, 0.50867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459292,-99) , 
5, -0.333376, 1, 0, 0.486401,-99) , 
8, 0.428614, 0, 0, 0.498587,-99) , 
10, -1.4734, 1, 0, 0.503185,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0356416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0283854, 0, 1, 0.525257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483914,-99) , 
8, 0.431543, 0, 0, 0.501709,-99) , 
10, -0.902905, 1, 0, 0.509122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455103,-99) , 
0, 0.505709, 1, 0, 0.50649,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0411991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.514645, 0, 1, 0.532645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481328,-99) , 
7, -14.5802, 1, 0, 0.495121,-99) , 
10, -1.40575, 1, 0, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390593,-99) , 
8, -1.85517, 0, 0, 0.498375,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.042498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471657,-99) , 
10, -0.354352, 1, 0, 0.550833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446553,-99) , 
4, 0.999524, 0, 0, 0.495523,-99) , 
9, -2.23356, 1, 0, 0.508958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454628,-99) , 
5, 0.332758, 1, 0, 0.485542,-99) , 
4, 0.999524, 1, 0, 0.49035,-99) , 
8, 0.428717, 0, 0, 0.49887,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0241095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45351, 0, 1, 0.506164,-99) , 
NN(
0, 
0, 
-1, 1.63211, 1, -1, 0.466845,-99) , 
10, 1.24647, 1, 0, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409092,-99) , 
3, 8.63428, 1, 0, 0.498452,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0363809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499254,-99) , 
10, -0.255554, 1, 0, 0.511454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479031,-99) , 
5, -0.714302, 1, 0, 0.488827,-99) , 
8, 0.428692, 0, 0, 0.499143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429421,-99) , 
3, 8.62065, 1, 0, 0.497118,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0607796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477673,-99) , 
8, -0.752765, 0, 0, 0.49577,-99) , 
8, -0.378459, 0, 0, 0.51768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486006,-99) , 
1, -0.00433779, 1, 0, 0.501762,-99) , 
NN(
0, 
0, 
-1, -0.523819, 1, -1, 0.472181,-99) , 
8, 0.143936, 0, 0, 0.492975,-99) , 
10, -1.29003, 1, 0, 0.498152,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.051269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477283,-99) , 
9, -1.74268, 1, 0, 0.526993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494616,-99) , 
1, 0.00661225, 0, 0, 0.503876,-99) , 
8, 1.00003, 0, 0, 0.509833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451812,-99) , 
10, 2.00394, 1, 0, 0.50725,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0640532);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.523824, 0, 1, 0.560889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473851,-99) , 
5, 0.872921, 1, 0, 0.527022,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.485088,-99) , 
5, 0.61896, 0, 0, 0.498155,-99) , 
1, -0.00283878, 1, 0, 0.512467,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0382065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480319,-99) , 
10, 1.27619, 1, 0, 0.554929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445232,-99) , 
8, 1.40891, 1, 0, 0.533739,-99) , 
NN(
0, 
0, 
-1, 1.65295, 0, 1, 0.504721,-99) , 
9, -1.30316, 0, 0, 0.509935,-99) , 
8, 2.14276, 0, 0, 0.512739,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.038123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.351325, 0, 1, 0.566338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496142,-99) , 
8, 0.877724, 0, 0, 0.506804,-99) , 
10, -1.28733, 1, 0, 0.512096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475187,-99) , 
7, -951.286, 0, 0, 0.496433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440865,-99) , 
5, 0.523688, 1, 0, 0.48083,-99) , 
8, -0.713955, 0, 0, 0.506336,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.036831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58111, 1, 1, 0.514211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441861,-99) , 
5, 0.142765, 1, 0, 0.488443,-99) , 
8, -0.999839, 0, 0, 0.511038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450491,-99) , 
10, 2.1984, 1, 0, 0.50885,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0482724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.857413, 1, 1, 0.548304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491412,-99) , 
9, -2.49185, 0, 0, 0.498902,-99) , 
8, 0.0323717, 0, 0, 0.515177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480983,-99) , 
3, 2.35817, 1, 0, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.426129,-99) , 
5, 0.809478, 1, 0, 0.492966,-99) , 
10, -0.352671, 1, 0, 0.503947,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0353792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442287,-99) , 
10, -1.22941, 1, 0, 0.505969,-99) , 
8, -0.0465734, 0, 0, 0.522969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
8, 2.14312, 0, 0, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451392,-99) , 
4, 0.999048, 0, 0, 0.501064,-99) , 
10, -0.915482, 1, 0, 0.507864,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0285747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
8, 1.81799, 0, 0, 0.504295,-99) , 
9, -1.14812, 0, 0, 0.508159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470276,-99) , 
7, -951.287, 0, 0, 0.495383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418112,-99) , 
5, 0.142832, 1, 0, 0.481171,-99) , 
10, 1.0348, 1, 0, 0.504267,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0448801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.996152, 0, 1, 0.518091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
9, -0.597528, 1, 0, 0.522627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361976,-99) , 
5, 0.142837, 1, 0, 0.492613,-99) , 
10, 0.967681, 1, 0, 0.514074,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0298449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47462,-99) , 
8, -1.28562, 0, 0, 0.519995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446465,-99) , 
5, 0.90469, 1, 0, 0.501058,-99) , 
0, 0.497138, 1, 0, 0.50903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444083,-99) , 
3, 8.37762, 1, 0, 0.506896,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0481673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.392941, 0, 1, 0.581305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475184,-99) , 
5, -0.0476131, 1, 0, 0.493384,-99) , 
10, -0.555582, 1, 0, 0.506821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557791,-99) , 
NN(
0, 
0, 
-1, -3.12827, 0, -1, 0.485091,-99) , 
9, -4.39064, 1, 0, 0.489324,-99) , 
8, 0.142913, 0, 0, 0.499032,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0551723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397573,-99) , 
5, 0.714235, 1, 0, 0.481151,-99) , 
9, -1.52332, 1, 0, 0.530782,-99) , 
NN(
NN(
0, 
0, 
-1, -0.80953, 0, 1, 0.530185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485163,-99) , 
5, -0.714293, 1, 0, 0.492908,-99) , 
9, -1.34532, 0, 0, 0.498821,-99) , 
8, 1.57134, 0, 0, 0.503395,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0306294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.26524, 0, 1, 0.513211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550049,-99) , 
NN(
0, 
0, 
-1, 0.714243, 1, -1, 0.483393,-99) , 
9, -1.64956, 1, 0, 0.491296,-99) , 
10, 0.379509, 1, 0, 0.506963,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.031701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9135, 1, 1, 0.555032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466874,-99) , 
4, 0.999524, 1, 0, 0.488245,-99) , 
5, 0.863897, 1, 0, 0.526992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499069,-99) , 
9, -3.46721, 1, 0, 0.503369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442754,-99) , 
4, 0.99974, 0, 0, 0.499827,-99) , 
5, 0.714235, 0, 0, 0.505578,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0488993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456707,-99) , 
10, 0.643138, 1, 0, 0.512245,-99) , 
1, -0.00312168, 1, 0, 0.523223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48284,-99) , 
4, 0.999986, 0, 0, 0.50702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393585,-99) , 
4, 0.999715, 0, 0, 0.502454,-99) , 
5, 0.523772, 0, 0, 0.50952,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0387118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
9, -2.20969, 0, 0, 0.502021,-99) , 
8, 0.656925, 0, 0, 0.508766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475833,-99) , 
8, 1.00296, 0, 0, 0.494691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395009,-99) , 
4, 0.999524, 0, 0, 0.488749,-99) , 
10, -0.332412, 1, 0, 0.498831,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.031869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.978965, 0, 1, 0.584042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450953,-99) , 
8, -0.673233, 0, 0, 0.501574,-99) , 
10, -1.72561, 1, 0, 0.506546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438076,-99) , 
10, -2.00529, 0, 0, 0.465857,-99) , 
8, -1.28557, 0, 0, 0.503484,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0464146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480424,-99) , 
10, -0.47721, 1, 0, 0.507144,-99) , 
8, 1.11661, 0, 0, 0.512582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497166,-99) , 
8, 0.195538, 0, 0, 0.516467,-99) , 
NN(
0, 
0, 
-1, 1.48288, 0, -1, 0.473042,-99) , 
8, 0.724061, 1, 0, 0.485341,-99) , 
10, 0.156658, 1, 0, 0.503216,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.029143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485699,-99) , 
10, 0.110255, 1, 0, 0.499411,-99) , 
10, -2.24741, 1, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384548,-99) , 
8, -1.85674, 0, 0, 0.498669,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0464407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09499, 1, 1, 0.548799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48556,-99) , 
8, 0.905628, 0, 0, 0.503994,-99) , 
10, -0.757561, 1, 0, 0.510553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452544,-99) , 
5, -0.142941, 1, 0, 0.47973,-99) , 
10, -2.19401, 1, 0, 0.48674,-99) , 
8, -0.14161, 0, 0, 0.502261,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0208377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48762,-99) , 
5, 0.238066, 1, 0, 0.49599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442791,-99) , 
3, 6.68166, 1, 0, 0.494117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450609,-99) , 
3, 8.22717, 1, 0, 0.492629,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0468015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439742,-99) , 
9, -0.897753, 1, 0, 0.549502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414674,-99) , 
10, 0.175985, 1, 0, 0.518928,-99) , 
NN(
0, 
0, 
-1, 0.999774, 0, -1, 0.48923,-99) , 
5, 0.714243, 0, 0, 0.495277,-99) , 
8, 2.14282, 0, 0, 0.498625,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0563355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0321819, 1, 1, 0.569214,-99) , 
NN(
0, 
0, 
-1, 0.619018, 1, -1, 0.474262,-99) , 
9, -1.5648, 1, 0, 0.514918,-99) , 
NN(
NN(
0, 
0, 
-1, -0.809536, 0, 1, 0.536771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460974,-99) , 
10, -0.895988, 1, 0, 0.482483,-99) , 
9, -1.75684, 0, 0, 0.493282,-99) , 
8, 0.999949, 0, 0, 0.499181,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0388942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651879,-99) , 
NN(
0, 
0, 
-1, 2.40134, 0, -1, 0.455773,-99) , 
9, -1.17638, 1, 0, 0.533738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487891,-99) , 
5, -0.809589, 0, 0, 0.5285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437373,-99) , 
10, 0.447071, 1, 0, 0.496952,-99) , 
9, -1.17634, 0, 0, 0.501503,-99) , 
8, 1.8571, 0, 0, 0.504595,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0373547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487679,-99) , 
8, -0.72396, 0, 0, 0.561923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495201,-99) , 
9, -1.3927, 0, 0, 0.504919,-99) , 
10, -1.561, 1, 0, 0.508577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395975,-99) , 
10, -2.29683, 1, 0, 0.452939,-99) , 
10, -1.81939, 0, 0, 0.475098,-99) , 
8, -0.99988, 0, 0, 0.504484,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0290344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476814,-99) , 
9, -1.16865, 1, 0, 0.545014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497052,-99) , 
9, -1.48134, 0, 0, 0.501779,-99) , 
8, 1.85712, 0, 0, 0.505748,-99) , 
NN(
0, 
0, 
-1, 0.443452, 0, -1, 0.450835,-99) , 
5, 0.90471, 1, 0, 0.502949,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0272981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48843,-99) , 
5, 0.333307, 1, 0, 0.500382,-99) , 
10, -2.1919, 1, 0, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408382,-99) , 
8, -1.85675, 0, 0, 0.499856,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0404819);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142918, 1, 1, 0.586077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493463,-99) , 
10, -1.49084, 1, 0, 0.497972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443682,-99) , 
9, -3.05327, 0, 0, 0.464716,-99) , 
8, -0.996219, 0, 0, 0.493913,-99) , 
1, 0.00682455, 0, 0, 0.501348,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.049639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.560966, 1, 1, 0.58684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420088,-99) , 
4, 0.999524, 0, 0, 0.499055,-99) , 
9, -2.34443, 1, 0, 0.515818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475142,-99) , 
9, -0.904892, 1, 0, 0.518828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464199,-99) , 
5, 0.333304, 1, 0, 0.487974,-99) , 
9, -1.95341, 0, 0, 0.494061,-99) , 
8, 0.428622, 0, 0, 0.503939,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0468372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49133, 0, 1, 0.52176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44382,-99) , 
10, 0.595341, 1, 0, 0.512117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480335,-99) , 
9, -2.51439, 1, 0, 0.493789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41072,-99) , 
4, 0.99981, 0, 0, 0.489764,-99) , 
5, 0.428537, 0, 0, 0.498266,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0425522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498392,-99) , 
8, 0.0855509, 0, 0, 0.576826,-99) , 
NN(
0, 
0, 
-1, 2.10194, 0, 1, 0.50988,-99) , 
10, -0.89654, 1, 0, 0.516358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487309,-99) , 
8, -0.686994, 0, 0, 0.517471,-99) , 
NN(
0, 
0, 
-1, -1.3889, 1, -1, 0.469435,-99) , 
9, -2.44929, 0, 0, 0.481304,-99) , 
8, -0.14282, 0, 0, 0.504213,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0360872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461577,-99) , 
9, -1.20238, 1, 0, 0.529547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496894,-99) , 
10, -1.58816, 1, 0, 0.500887,-99) , 
8, 1.85721, 0, 0, 0.504093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483009,-99) , 
5, -0.0476692, 1, 0, 0.504923,-99) , 
NN(
0, 
0, 
-1, -0.619084, 0, -1, 0.434504,-99) , 
7, -951.286, 0, 0, 0.471539,-99) , 
8, -0.999645, 0, 0, 0.500216,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0397488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.146446, 0, 1, 0.56538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493546,-99) , 
8, 0.940404, 0, 0, 0.501268,-99) , 
NN(
0, 
0, 
-1, 0.714235, 1, -1, 0.479903,-99) , 
10, -0.0197183, 1, 0, 0.493047,-99) , 
1, 0.00682455, 0, 0, 0.498792,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0323704);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.124468, 0, 1, 0.579773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496256,-99) , 
5, 0.714242, 0, 0, 0.503164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433857,-99) , 
3, 8.63778, 1, 0, 0.501228,-99) , 
1, 0.00682455, 0, 0, 0.507555,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0155093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.66085, 1, 1, 0.506821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471633,-99) , 
8, -1.57126, 0, 0, 0.505297,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0361092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427968,-99) , 
9, -0.978217, 1, 0, 0.531264,-99) , 
NN(
NN(
0, 
0, 
-1, 0.656885, 0, 1, 0.508828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480598,-99) , 
5, -0.714279, 1, 0, 0.493868,-99) , 
10, -0.301468, 1, 0, 0.502049,-99) , 
8, 2.14273, 0, 0, 0.503761,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0442837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492402,-99) , 
8, -0.985061, 0, 0, 0.560041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481992,-99) , 
8, -0.264538, 0, 0, 0.510491,-99) , 
10, -1.76096, 1, 0, 0.513304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440257,-99) , 
5, -0.619033, 1, 0, 0.461873,-99) , 
8, -1.28557, 0, 0, 0.509359,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0170112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62375, 1, 1, 0.504375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449365,-99) , 
5, -0.428611, 1, 0, 0.47555,-99) , 
8, -1.16314, 0, 0, 0.502269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426487,-99) , 
8, -1.857, 0, 0, 0.500351,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0191248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550381,-99) , 
NN(
NN(
0, 
0, 
-1, 1.10948, 0, 1, 0.507282,-99) , 
NN(
0, 
0, 
-1, 0.714235, 1, -1, 0.490095,-99) , 
10, 0.112556, 1, 0, 0.501503,-99) , 
8, 2.4285, 0, 0, 0.503121,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0717107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333207, 1, 1, 0.572737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473063,-99) , 
8, -0.558844, 0, 0, 0.493868,-99) , 
1, 0.00186654, 0, 0, 0.517324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494921,-99) , 
9, -0.143229, 1, 0, 0.523631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475038,-99) , 
1, 0.00499802, 0, 0, 0.489976,-99) , 
5, -0.904752, 1, 0, 0.494034,-99) , 
10, -1.385, 1, 0, 0.498244,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0248347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.546545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459303,-99) , 
0, 0.498095, 0, 0, 0.494631,-99) , 
5, -0.333395, 0, 0, 0.526742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499531,-99) , 
10, -1.9834, 1, 0, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459597,-99) , 
8, -1.57104, 0, 0, 0.501227,-99) , 
2, 0.0722833, 0, 0, 0.505847,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0320658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493774,-99) , 
8, -0.973645, 0, 0, 0.566521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462769,-99) , 
9, -3.37329, 0, 0, 0.506019,-99) , 
10, -1.72561, 1, 0, 0.509565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446876,-99) , 
10, -2.29907, 1, 0, 0.476224,-99) , 
8, -1.2856, 0, 0, 0.507099,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0339773);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0476278, 1, 1, 0.559288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492694,-99) , 
8, 1.00004, 0, 0, 0.49904,-99) , 
NN(
0, 
0, 
-1, -0.783412, 0, -1, 0.463859,-99) , 
0, 0.491424, 0, 0, 0.496008,-99) , 
1, 0.00560609, 0, 0, 0.502863,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0405177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643663,-99) , 
NN(
0, 
0, 
-1, 0.61901, 1, -1, 0.467287,-99) , 
9, -1.37593, 1, 0, 0.532794,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453999,-99) , 
10, 0.0960593, 1, 0, 0.494721,-99) , 
9, -1.17634, 0, 0, 0.499347,-99) , 
8, 1.5715, 0, 0, 0.504164,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0576986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498736,-99) , 
10, -1.05984, 1, 0, 0.557457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479267,-99) , 
8, 0.60545, 0, 0, 0.503166,-99) , 
10, -0.805406, 1, 0, 0.510133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493135,-99) , 
9, -1.45357, 1, 0, 0.530358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458322,-99) , 
5, -0.61903, 1, 0, 0.474484,-99) , 
9, -2.39882, 0, 0, 0.487927,-99) , 
8, -0.1428, 0, 0, 0.502307,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0417726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.14968, 0, 1, 0.532684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4758,-99) , 
8, 0.455879, 1, 0, 0.490929,-99) , 
1, 0.00200832, 0, 0, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410121,-99) , 
8, -1.85697, 0, 0, 0.501207,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0248306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.539137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497006,-99) , 
8, 2.42842, 0, 0, 0.499454,-99) , 
3, 0.498458, 1, 0, 0.502944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456567,-99) , 
5, 0.523778, 0, 0, 0.474505,-99) , 
1, -0.0040017, 1, 0, 0.483426,-99) , 
3, 4.21945, 1, 0, 0.498876,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0303874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51468, 1, 1, 0.530587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474723,-99) , 
5, 0.333392, 1, 0, 0.49687,-99) , 
3, 4.27094, 1, 0, 0.519625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490419,-99) , 
8, -0.543635, 0, 0, 0.519637,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492995,-99) , 
10, -1.34964, 1, 0, 0.497903,-99) , 
2, -0.0715266, 1, 0, 0.501846,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0265837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493614,-99) , 
0, 0.497139, 1, 0, 0.502014,-99) , 
8, 2.14269, 0, 0, 0.504832,-99) , 
NN(
0, 
0, 
-1, 1.51588, 1, -1, 0.468657,-99) , 
10, 1.62751, 1, 0, 0.502281,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0367928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437399,-99) , 
10, -1.81513, 1, 0, 0.496055,-99) , 
8, -0.609316, 0, 0, 0.523807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446407,-99) , 
4, 0.999048, 0, 0, 0.503219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404602,-99) , 
5, 0.237944, 1, 0, 0.457974,-99) , 
9, -3.19732, 0, 0, 0.500092,-99) , 
10, -1.42439, 1, 0, 0.504191,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0453073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.612, 1, 1, 0.542938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452398,-99) , 
5, 0.333047, 0, 0, 0.493615,-99) , 
3, 4.02116, 1, 0, 0.524721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493807,-99) , 
2, -0.00153689, 1, 0, 0.558196,-99) , 
NN(
0, 
0, 
-1, 0.545078, 1, -1, 0.487047,-99) , 
1, 0.00560609, 0, 0, 0.495065,-99) , 
2, 0.0713191, 0, 0, 0.500477,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0258053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551909,-99) , 
NN(
NN(
0, 
0, 
-1, 2.1428, 0, 1, 0.51005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466397,-99) , 
10, 2.31117, 1, 0, 0.508521,-99) , 
9, -4.04223, 1, 0, 0.510663,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0114799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43818,-99) , 
3, 6.81603, 1, 0, 0.498303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445731,-99) , 
3, 8.39117, 1, 0, 0.496657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429185,-99) , 
8, -1.85675, 0, 0, 0.49495,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0177569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90711, 0, 1, 0.556833,-99) , 
NN(
0, 
0, 
-1, -3.30958, 0, -1, 0.496158,-99) , 
10, -1.69179, 1, 0, 0.500243,-99) , 
NN(
0, 
0, 
-1, -2.28335, 1, -1, 0.473457,-99) , 
8, -1.28531, 0, 0, 0.498189,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.016341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.503996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427206,-99) , 
0, 0.495233, 0, 0, 0.482177,-99) , 
5, 0.809477, 1, 0, 0.501073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420111,-99) , 
1, 0.0124237, 1, 0, 0.498664,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0255732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493185,-99) , 
8, -0.0194564, 0, 0, 0.507408,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.492235,-99) , 
10, -0.902905, 1, 0, 0.497033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444649,-99) , 
3, 8.37762, 1, 0, 0.495376,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0293516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8897, 1, 1, 0.560648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496487,-99) , 
8, 0.347342, 0, 0, 0.505942,-99) , 
9, -3.5951, 1, 0, 0.509958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447297,-99) , 
10, -2.38362, 1, 0, 0.475344,-99) , 
8, -1.28541, 0, 0, 0.507281,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0229551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0734357, 0, 1, 0.521,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.496696,-99) , 
10, -0.796833, 1, 0, 0.505176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425682,-99) , 
1, 0.0119067, 1, 0, 0.502727,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0443661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48878,-99) , 
8, -0.493359, 0, 0, 0.517956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457975,-99) , 
5, 0.714243, 1, 0, 0.499299,-99) , 
10, -0.208662, 1, 0, 0.509306,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.541299,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.473645,-99) , 
1, 0.00244592, 0, 0, 0.490483,-99) , 
3, 4.1245, 1, 0, 0.505179,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0439339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417344,-99) , 
10, -1.66509, 1, 0, 0.494804,-99) , 
8, -0.543888, 0, 0, 0.518898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489099,-99) , 
10, -0.936811, 1, 0, 0.492401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403758,-99) , 
8, -0.0272154, 0, 0, 0.453622,-99) , 
9, -3.10877, 0, 0, 0.489075,-99) , 
10, -1.385, 1, 0, 0.49437,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0370168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97463, 1, 1, 0.542906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489233,-99) , 
5, 0.333365, 1, 0, 0.515901,-99) , 
0, 0.504666, 1, 0, 0.528872,-99) , 
NN(
NN(
0, 
0, 
-1, -0.401437, 1, 1, 0.509557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455797,-99) , 
5, 0.428552, 1, 0, 0.487578,-99) , 
9, -2.84764, 0, 0, 0.502702,-99) , 
0, 0.502852, 0, 0, 0.506822,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0586334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.805861, 1, 1, 0.57598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495124,-99) , 
9, -0.699452, 0, 0, 0.503465,-99) , 
9, -2.5078, 1, 0, 0.517464,-99) , 
NN(
NN(
0, 
0, 
-1, -0.018139, 1, 1, 0.535397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464557,-99) , 
5, -0.619011, 1, 0, 0.47674,-99) , 
9, -2.30337, 0, 0, 0.490871,-99) , 
8, 0.142891, 0, 0, 0.505673,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0577311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714306, 0, 1, 0.566594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487287,-99) , 
10, -1.58897, 1, 0, 0.49131,-99) , 
1, -0.0026657, 1, 0, 0.508833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530737,-99) , 
NN(
0, 
0, 
-1, -0.428631, 1, -1, 0.45427,-99) , 
10, -2.27078, 1, 0, 0.479567,-99) , 
8, -0.999874, 0, 0, 0.505245,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0333082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28854, 0, 1, 0.537633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491767,-99) , 
5, 0.618973, 1, 0, 0.527478,-99) , 
NN(
NN(
0, 
0, 
-1, -3.16541, 1, 1, 0.517135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467517,-99) , 
9, -3.06036, 0, 0, 0.494161,-99) , 
0, 0.497047, 1, 0, 0.505258,-99) , 
0, 0.502852, 0, 0, 0.508732,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0464593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498294,-99) , 
9, -2.64552, 0, 0, 0.534702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437989,-99) , 
10, -0.67705, 1, 0, 0.475671,-99) , 
5, 0.863903, 1, 0, 0.519639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485381,-99) , 
3, 3.13937, 1, 0, 0.503573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428272,-99) , 
4, 0.99981, 0, 0, 0.499547,-99) , 
5, 0.523775, 0, 0, 0.50621,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0277491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428635,-99) , 
9, -1.2133, 1, 0, 0.534225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499008,-99) , 
9, -1.19102, 0, 0, 0.502325,-99) , 
8, 1.85703, 0, 0, 0.504957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468913,-99) , 
10, 1.94956, 1, 0, 0.503142,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.040523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0270826, 0, 1, 0.575743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495298,-99) , 
8, 1.49766, 0, 0, 0.499543,-99) , 
1, -0.00458084, 1, 0, 0.50877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553118,-99) , 
NN(
0, 
0, 
-1, -0.264732, 0, -1, 0.461824,-99) , 
9, -1.04747, 1, 0, 0.479147,-99) , 
10, 0.967681, 1, 0, 0.503991,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0244288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.0639, 0, 1, 0.50972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475367,-99) , 
8, 1.02383, 1, 0, 0.489543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414665,-99) , 
8, 2.18622, 1, 0, 0.469828,-99) , 
10, 1.24647, 1, 0, 0.50522,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0730168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439035,-99) , 
10, -1.2291, 1, 0, 0.512901,-99) , 
8, -0.0399627, 0, 0, 0.526075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479249,-99) , 
9, -1.61109, 1, 0, 0.519984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476395,-99) , 
9, -1.58565, 0, 0, 0.491707,-99) , 
8, 1.29048, 0, 0, 0.499986,-99) , 
10, -0.902905, 1, 0, 0.507962,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0537135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452572,-99) , 
5, 0.52378, 1, 0, 0.49635,-99) , 
9, -1.46361, 1, 0, 0.541851,-99) , 
NN(
NN(
0, 
0, 
-1, 0.911339, 0, 1, 0.519462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472543,-99) , 
9, -1.23477, 0, 0, 0.491807,-99) , 
10, -0.0177007, 1, 0, 0.511302,-99) , 
8, 1.57143, 0, 0, 0.515644,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0233976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.31018, 1, 1, 0.570407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49975,-99) , 
9, -1.16929, 0, 0, 0.503797,-99) , 
8, 1.7826, 0, 0, 0.508357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508519,-99) , 
NN(
0, 
0, 
-1, 1.26591, 1, -1, 0.455306,-99) , 
1, -0.00278198, 1, 0, 0.471113,-99) , 
10, 1.24137, 1, 0, 0.504057,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0413703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.583009, 1, 1, 0.567607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467545,-99) , 
10, 0.240681, 1, 0, 0.502336,-99) , 
8, 1.54516, 0, 0, 0.507996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463582,-99) , 
7, -951.286, 0, 0, 0.492661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41263,-99) , 
5, 0.0475658, 1, 0, 0.47714,-99) , 
10, 0.994204, 1, 0, 0.503314,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0397357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453009,-99) , 
8, 2.45574, 0, 0, 0.486292,-99) , 
9, -1.07888, 1, 0, 0.544921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496967,-99) , 
8, 1.39382, 0, 0, 0.503766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426673,-99) , 
8, 1.16427, 1, 0, 0.475177,-99) , 
10, 0.387422, 1, 0, 0.497746,-99) , 
8, 1.85703, 0, 0, 0.502241,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.048539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486448,-99) , 
10, 0.662255, 1, 0, 0.514709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481838,-99) , 
10, -1.65663, 1, 0, 0.494449,-99) , 
8, -0.0611472, 0, 0, 0.508148,-99) , 
NN(
0, 
0, 
-1, -2.30573, 1, -1, 0.46095,-99) , 
8, -1.28558, 0, 0, 0.504467,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0508974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397423,-99) , 
5, 0.333341, 1, 0, 0.476553,-99) , 
9, -1.20282, 1, 0, 0.536861,-99) , 
NN(
NN(
0, 
0, 
-1, 1.39383, 0, 1, 0.50939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441929,-99) , 
1, 0.00276032, 0, 0, 0.470934,-99) , 
10, 0.387422, 1, 0, 0.50129,-99) , 
8, 1.85711, 0, 0, 0.504674,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0264247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470743,-99) , 
5, -0.523776, 1, 0, 0.485499,-99) , 
0, 0.500948, 1, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436073,-99) , 
8, -1.85695, 0, 0, 0.499715,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0424622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494295, 0, 1, 0.569152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429459,-99) , 
4, 0.999524, 0, 0, 0.500153,-99) , 
10, -0.531782, 1, 0, 0.511497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474387,-99) , 
9, -3.34227, 0, 0, 0.517982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466466,-99) , 
10, -1.28953, 1, 0, 0.483056,-99) , 
0, 0.501899, 0, 0, 0.49056,-99) , 
8, 0.143086, 0, 0, 0.502258,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0561212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.26395, 1, 1, 0.569105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47529,-99) , 
5, 0.238085, 1, 0, 0.492017,-99) , 
10, -1.05293, 1, 0, 0.50009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490974,-99) , 
9, -1.69064, 1, 0, 0.524893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438542,-99) , 
9, -4.38153, 1, 0, 0.453755,-99) , 
9, -2.81905, 0, 0, 0.474839,-99) , 
8, -0.426272, 0, 0, 0.493544,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0302324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.818607, 1, 1, 0.541926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478675,-99) , 
3, 2.33658, 1, 0, 0.4986,-99) , 
5, 0.523791, 0, 0, 0.513086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490753,-99) , 
10, -1.97318, 1, 0, 0.492782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459133,-99) , 
5, 0.904705, 1, 0, 0.491059,-99) , 
2, -0.0712486, 1, 0, 0.495101,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0492328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48421,-99) , 
1, 0.00290268, 0, 0, 0.500087,-99) , 
8, 0.0733703, 0, 0, 0.511842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477827,-99) , 
8, 1.3695, 0, 0, 0.487163,-99) , 
8, -0.424621, 1, 0, 0.491731,-99) , 
10, -0.796833, 1, 0, 0.498645,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0350573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493525,-99) , 
10, -1.72472, 1, 0, 0.547666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471693,-99) , 
8, -0.236743, 0, 0, 0.498681,-99) , 
10, -1.49538, 1, 0, 0.502348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443428,-99) , 
7, -951.286, 0, 0, 0.495163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436302,-99) , 
9, -3.97613, 0, 0, 0.473303,-99) , 
8, -0.998632, 0, 0, 0.498764,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0369929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495904,-99) , 
9, -1.38372, 0, 0, 0.500594,-99) , 
8, 1.51662, 0, 0, 0.505175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497077,-99) , 
9, -0.282395, 1, 0, 0.511342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431698,-99) , 
1, 0.00286421, 0, 0, 0.45374,-99) , 
8, 1.00501, 1, 0, 0.474405,-99) , 
10, 0.684647, 1, 0, 0.498631,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0341016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39854, 0, 1, 0.522976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466498,-99) , 
10, 1.27719, 1, 0, 0.515806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483944,-99) , 
10, 0.166615, 1, 0, 0.498753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464675,-99) , 
10, -1.18463, 0, 0, 0.477711,-99) , 
8, -0.713969, 0, 0, 0.494981,-99) , 
0, 0.5019, 0, 0, 0.499483,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0537394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461772,-99) , 
10, -0.601182, 1, 0, 0.500692,-99) , 
8, 0.754634, 0, 0, 0.51137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462075,-99) , 
10, 1.26766, 1, 0, 0.535898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479445,-99) , 
9, -2.26058, 1, 0, 0.484108,-99) , 
8, 2.14409, 0, 0, 0.490761,-99) , 
10, -0.208662, 1, 0, 0.501883,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0489555);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.52382, 0, 1, 0.55938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488546,-99) , 
9, -2.30296, 0, 0, 0.503427,-99) , 
NN(
0, 
0, 
-1, -0.461224, 0, -1, 0.475995,-99) , 
5, 0.142817, 0, 0, 0.49005,-99) , 
1, 0.00560609, 0, 0, 0.497449,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0168418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45783,-99) , 
8, -1.70714, 0, 0, 0.502872,-99) , 
8, 2.42853, 0, 0, 0.504594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459648,-99) , 
4, 0.998572, 0, 0, 0.503176,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0141949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.0639, 0, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 1.35855, 1, -1, 0.477073,-99) , 
10, 1.24137, 1, 0, 0.501775,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0611682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452387,-99) , 
10, -1.84917, 1, 0, 0.494887,-99) , 
8, -0.673025, 0, 0, 0.517852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477249,-99) , 
7, -950.08, 0, 0, 0.506118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4732,-99) , 
10, -1.08175, 1, 0, 0.48002,-99) , 
5, -0.428583, 1, 0, 0.490125,-99) , 
10, -1.45524, 1, 0, 0.494674,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0225962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497525,-99) , 
9, -1.07986, 0, 0, 0.500296,-99) , 
8, 2.14277, 0, 0, 0.502591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523813,-99) , 
NN(
0, 
0, 
-1, -0.388998, 1, -1, 0.448753,-99) , 
5, 0.854833, 1, 0, 0.471023,-99) , 
5, 0.809479, 1, 0, 0.498493,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0323522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487911,-99) , 
5, -0.238986, 1, 0, 0.54573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489653,-99) , 
10, 0.840537, 1, 0, 0.507374,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.466437,-99) , 
8, -1.28554, 0, 0, 0.504303,-99) , 
1, 0.00682455, 0, 0, 0.507532,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0260429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496011,-99) , 
7, -951.287, 1, 0, 0.534537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492508,-99) , 
10, -2.16102, 1, 0, 0.495105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433482,-99) , 
8, -1.77389, 0, 0, 0.493126,-99) , 
8, 2.14301, 0, 0, 0.495534,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0154745);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483785,-99) , 
10, 0.533997, 1, 0, 0.496655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448474,-99) , 
9, -3.97254, 0, 0, 0.494872,-99) , 
10, -2.46347, 1, 0, 0.496161,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0184302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.75747, 1, 1, 0.539747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497285,-99) , 
9, -0.90616, 0, 0, 0.501307,-99) , 
8, 2.14289, 0, 0, 0.503586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449083,-99) , 
3, 8.6342, 1, 0, 0.502129,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0235173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503281, 0, 1, 0.508567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468337,-99) , 
0, 0.506072, 1, 0, 0.506905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496434,-99) , 
0, 0.489792, 1, 0, 0.505667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425142,-99) , 
8, -0.143016, 0, 0, 0.475083,-99) , 
0, 0.491425, 0, 0, 0.504028,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0372993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455168,-99) , 
10, -1.52568, 1, 0, 0.504431,-99) , 
8, -0.335979, 0, 0, 0.522915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497299,-99) , 
9, -2.4606, 1, 0, 0.509059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405165,-99) , 
9, -2.94074, 0, 0, 0.490154,-99) , 
5, 0.238066, 1, 0, 0.501169,-99) , 
10, -1.24962, 1, 0, 0.505762,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0380878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496108,-99) , 
9, -2.52378, 1, 0, 0.511514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484087,-99) , 
2, 0.0737909, 0, 0, 0.490807,-99) , 
5, -0.428583, 1, 0, 0.497718,-99) , 
NN(
0, 
0, 
-1, -0.810032, 0, -1, 0.465573,-99) , 
0, 0.491425, 0, 0, 0.494877,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.03538);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.41975, 1, 1, 0.513716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486225,-99) , 
9, -2.18214, 0, 0, 0.492628,-99) , 
8, 0.746113, 0, 0, 0.497541,-99) , 
10, -0.245731, 0, 0, 0.505165,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0339403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475238,-99) , 
10, -1.75623, 1, 0, 0.553495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496955,-99) , 
8, 0.333473, 0, 0, 0.507255,-99) , 
10, -1.58816, 1, 0, 0.509941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473745,-99) , 
7, -951.286, 0, 0, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447479,-99) , 
9, -3.95507, 0, 0, 0.481939,-99) , 
8, -0.99987, 0, 0, 0.506508,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0370852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.779821, 0, 1, 0.53619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460181,-99) , 
4, 0.99955, 0, 0, 0.505581,-99) , 
10, -1.43803, 1, 0, 0.510283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424389,-99) , 
8, -0.351355, 0, 0, 0.503078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415939,-99) , 
9, -1.64628, 1, 0, 0.486096,-99) , 
5, 0.80948, 1, 0, 0.507042,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.110521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463926,-99) , 
5, 0.809271, 1, 0, 0.517621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44847,-99) , 
8, -1.28569, 0, 0, 0.511889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477459,-99) , 
7, -0.459129, 0, 0, 0.541501,-99) , 
NN(
0, 
0, 
-1, -0.142376, 1, -1, 0.324178,-99) , 
7, -1.03574, 0, 0, 0.496423,-99) , 
7, -951.286, 1, 0, 0.503268,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0331478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462501,-99) , 
10, -2.05064, 1, 0, 0.493425,-99) , 
8, -0.579367, 0, 0, 0.511466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486708,-99) , 
0, 0.499995, 0, 0, 0.492375,-99) , 
8, 2.42922, 0, 0, 0.493723,-99) , 
10, -1.37843, 1, 0, 0.496871,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0168678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532542,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.493921,-99) , 
4, 0.999048, 1, 0, 0.495836,-99) , 
8, 2.42854, 0, 0, 0.497237,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0174449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497853,-99) , 
10, -1.7447, 1, 0, 0.500834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438854,-99) , 
9, -3.90365, 0, 0, 0.499035,-99) , 
10, -2.17141, 1, 0, 0.501534,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0540396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480595,-99) , 
4, 0.999995, 0, 0, 0.512367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45746,-99) , 
4, 0.999905, 0, 0, 0.508635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48672,-99) , 
4, 0.999525, 1, 0, 0.493856,-99) , 
NN(
0, 
0, 
-1, 0.171594, 0, -1, 0.454883,-99) , 
5, 0.85478, 1, 0, 0.485919,-99) , 
5, 0.238031, 1, 0, 0.498311,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0208841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499998,-99) , 
8, -0.558932, 0, 0, 0.526209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499259,-99) , 
8, -0.428352, 1, 0, 0.50359,-99) , 
10, -1.34964, 1, 0, 0.507876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458439,-99) , 
1, 0.0096605, 1, 0, 0.505603,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0278609);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.536559,-99) , 
NN(
NN(
0, 
0, 
-1, 1.04228, 0, 1, 0.509084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476662,-99) , 
8, 0.703611, 1, 0, 0.488415,-99) , 
10, 0.112556, 1, 0, 0.502482,-99) , 
8, 2.14262, 0, 0, 0.504478,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.028524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451972,-99) , 
9, -0.910481, 1, 0, 0.537142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484218,-99) , 
10, 0.238081, 1, 0, 0.499452,-99) , 
8, 2.14275, 0, 0, 0.501679,-99) , 
2, -0.213618, 1, 0, 0.503584,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0306953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4925,-99) , 
10, -1.71797, 1, 0, 0.527467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49167,-99) , 
5, 0.523774, 0, 0, 0.497797,-99) , 
9, -3.31048, 1, 0, 0.500897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536121,-99) , 
NN(
0, 
0, 
-1, 0.499037, 1, -1, 0.459691,-99) , 
1, -0.00249022, 1, 0, 0.480309,-99) , 
8, -0.99988, 0, 0, 0.498375,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0293484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466449,-99) , 
5, -0.428575, 0, 0, 0.502166,-99) , 
1, 0.00410023, 0, 0, 0.521698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493789,-99) , 
8, -1.30334, 0, 0, 0.535262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471028,-99) , 
8, -0.427211, 0, 0, 0.495059,-99) , 
10, -1.9356, 1, 0, 0.498129,-99) , 
2, -0.0710035, 1, 0, 0.502474,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0308476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58076,-99) , 
NN(
NN(
0, 
0, 
-1, -0.543888, 0, 1, 0.520982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490213,-99) , 
9, -1.4832, 0, 0, 0.497487,-99) , 
10, -1.38391, 1, 0, 0.501784,-99) , 
8, 2.42852, 0, 0, 0.504603,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0296401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483067,-99) , 
5, 0.333291, 1, 0, 0.497187,-99) , 
10, -2.18051, 1, 0, 0.499463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417984,-99) , 
8, -1.85698, 0, 0, 0.497398,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0329723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493159,-99) , 
8, 1.81255, 0, 0, 0.496393,-99) , 
9, -1.14812, 0, 0, 0.500207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467207,-99) , 
7, -951.287, 0, 0, 0.490399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436576,-99) , 
5, 0.0475836, 1, 0, 0.480518,-99) , 
10, 1.0348, 1, 0, 0.497302,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0270141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497092,-99) , 
9, -1.27875, 0, 0, 0.501118,-99) , 
8, 1.71966, 0, 0, 0.504063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485638,-99) , 
8, 2.16865, 0, 0, 0.495398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385646,-99) , 
5, 0.523752, 1, 0, 0.480324,-99) , 
10, 0.835097, 1, 0, 0.499636,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0462405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.04764, 0, 1, 0.533277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486857,-99) , 
10, 0.732611, 1, 0, 0.523636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481467,-99) , 
9, -1.61109, 1, 0, 0.520829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477027,-99) , 
5, 0.333263, 1, 0, 0.496757,-99) , 
8, 1.28551, 0, 0, 0.501611,-99) , 
2, -0.0730265, 1, 0, 0.505552,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0235643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.51929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423944,-99) , 
4, 0.999714, 0, 0, 0.500769,-99) , 
5, 0.619008, 0, 0, 0.505734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453224,-99) , 
3, 8.22717, 1, 0, 0.50395,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0289225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23664, 0, 1, 0.508542,-99) , 
NN(
0, 
0, 
-1, 1.85756, 1, -1, 0.473417,-99) , 
10, 1.47238, 1, 0, 0.505072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519968,-99) , 
NN(
0, 
0, 
-1, -3.61779, 0, -1, 0.444574,-99) , 
10, -2.26592, 1, 0, 0.469556,-99) , 
8, -0.999874, 0, 0, 0.50067,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.010079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
8, 2.30602, 0, 0, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458301,-99) , 
10, 2.28097, 1, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425825,-99) , 
8, -1.85699, 0, 0, 0.49789,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0250778);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42843, 0, 1, 0.508292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481784,-99) , 
9, -2.46527, 1, 0, 0.498187,-99) , 
NN(
0, 
0, 
-1, 0.238004, 0, -1, 0.461732,-99) , 
8, -0.142648, 0, 0, 0.485364,-99) , 
3, 4.2422, 1, 0, 0.503575,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0398902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491555,-99) , 
9, -1.36871, 0, 0, 0.496408,-99) , 
8, 1.5387, 0, 0, 0.502349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486277,-99) , 
8, 2.14441, 0, 0, 0.495858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397044,-99) , 
5, 0.619008, 1, 0, 0.483216,-99) , 
10, 0.693881, 1, 0, 0.498212,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0524257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00655212, 1, 1, 0.581887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473491,-99) , 
9, -1.57094, 1, 0, 0.508968,-99) , 
5, -0.428528, 0, 0, 0.545478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460467,-99) , 
10, -0.339157, 1, 0, 0.517854,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.484215,-99) , 
4, 0.999524, 1, 0, 0.487041,-99) , 
1, 0.00367803, 0, 0, 0.498001,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0455055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56125, 0, 1, 0.523513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454771,-99) , 
8, 1.57337, 1, 0, 0.492552,-99) , 
9, -1.32383, 1, 0, 0.516863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495421,-99) , 
10, -0.794491, 1, 0, 0.505691,-99) , 
NN(
0, 
0, 
-1, -0.724003, 0, -1, 0.450735,-99) , 
9, -3.27833, 0, 0, 0.495436,-99) , 
0, 0.499995, 1, 0, 0.50942,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0346256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465731,-99) , 
10, 0.636652, 1, 0, 0.516858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480969,-99) , 
5, -0.45579, 1, 0, 0.494206,-99) , 
5, 0.428538, 0, 0, 0.502591,-99) , 
NN(
0, 
0, 
-1, -2.34838, 1, -1, 0.466352,-99) , 
9, -3.9727, 0, 0, 0.500327,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0416659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493077,-99) , 
5, -0.714297, 1, 0, 0.498682,-99) , 
8, 1.47111, 0, 0, 0.504159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474103,-99) , 
5, -0.591862, 0, 0, 0.492337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412499,-99) , 
5, 0.714241, 1, 0, 0.482359,-99) , 
9, -1.53096, 1, 0, 0.498397,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0345454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0868424, 0, 1, 0.521225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485454,-99) , 
10, 0.383625, 1, 0, 0.503546,-99) , 
0, 0.499043, 0, 0, 0.511017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431117,-99) , 
1, 0.0119067, 1, 0, 0.508633,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0271081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.916016, 0, 1, 0.513434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446238,-99) , 
5, 0.714223, 1, 0, 0.495619,-99) , 
10, -0.0567307, 1, 0, 0.505967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443045,-99) , 
8, -1.85698, 0, 0, 0.504332,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0296414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49816,-99) , 
8, 2.13729, 0, 0, 0.502167,-99) , 
9, -0.794573, 0, 0, 0.504891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477764,-99) , 
7, -951.286, 0, 0, 0.495626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38529,-99) , 
9, -2.00792, 1, 0, 0.45679,-99) , 
10, 0.461535, 0, 0, 0.479739,-99) , 
5, -0.714281, 0, 0, 0.49906,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0504802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430276,-99) , 
7, -0.714333, 0, 0, 0.554124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474434,-99) , 
5, -0.523903, 0, 0, 0.503199,-99) , 
7, -951.286, 0, 0, 0.531324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498626,-99) , 
7, -951.286, 0, 0, 0.510186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476696,-99) , 
10, -0.983018, 1, 0, 0.493145,-99) , 
5, 0.142833, 1, 0, 0.501887,-99) , 
2, -0.0710035, 1, 0, 0.507199,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0489296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145648, 0, 1, 0.564645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489981,-99) , 
1, 0.00120473, 0, 0, 0.505414,-99) , 
10, -0.836788, 1, 0, 0.512213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471183,-99) , 
10, -1.45613, 1, 0, 0.48958,-99) , 
NN(
0, 
0, 
-1, -0.142925, 1, -1, 0.452959,-99) , 
8, -1.50325, 0, 0, 0.484332,-99) , 
8, -0.142776, 0, 0, 0.502316,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0519658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497361,-99) , 
10, -0.0616453, 1, 0, 0.537085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454569,-99) , 
8, -0.248798, 0, 0, 0.479612,-99) , 
9, -2.83218, 0, 0, 0.515383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
4, 0.999991, 0, 0, 0.499853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41758,-99) , 
4, 0.99981, 0, 0, 0.495972,-99) , 
5, 0.428537, 0, 0, 0.503391,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0302459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71995, 0, 1, 0.525913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443814,-99) , 
10, 0.885018, 1, 0, 0.520124,-99) , 
NN(
NN(
0, 
0, 
-1, -3.38958, 1, 1, 0.505264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453512,-99) , 
4, 0.99981, 0, 0, 0.502756,-99) , 
5, 0.428519, 0, 0, 0.509321,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0254498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493393,-99) , 
8, 0.456123, 0, 0, 0.502525,-99) , 
10, -2.1919, 1, 0, 0.50501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449212,-99) , 
8, -1.85674, 0, 0, 0.503579,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0584039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.55947, 1, 1, 0.545508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471766,-99) , 
8, 1.4083, 0, 0, 0.500615,-99) , 
10, 0.076846, 1, 0, 0.516965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488868,-99) , 
8, -0.306384, 0, 0, 0.509706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466336,-99) , 
9, -2.00984, 0, 0, 0.48231,-99) , 
10, -1.20674, 1, 0, 0.493766,-99) , 
8, 0.428645, 0, 0, 0.504306,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0179873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.80192, 0, 1, 0.50482,-99) , 
NN(
0, 
0, 
-1, 0.142817, 1, -1, 0.478439,-99) , 
10, 0.967681, 1, 0, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434458,-99) , 
1, -0.012758, 0, 0, 0.498947,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0213556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498087, 0, 1, 0.528206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492065,-99) , 
2, 0.112597, 0, 0, 0.494747,-99) , 
8, 2.42852, 0, 0, 0.496313,-99) , 
2, -0.213802, 1, 0, 0.497939,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0265365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543548,-99) , 
NN(
NN(
0, 
0, 
-1, -0.809526, 0, 1, 0.527834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490525,-99) , 
5, -0.523821, 1, 0, 0.495725,-99) , 
9, -0.666552, 0, 0, 0.49943,-99) , 
10, -2.20814, 1, 0, 0.501364,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.021698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498849,-99) , 
9, -2.16059, 1, 0, 0.506224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457112,-99) , 
5, 0.809479, 0, 0, 0.480143,-99) , 
4, 0.999796, 0, 0, 0.503599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466672,-99) , 
4, 0.998571, 0, 0, 0.50242,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0374867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.208514, 1, 1, 0.570486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458044,-99) , 
10, -0.0759673, 1, 0, 0.496658,-99) , 
8, 1.24252, 0, 0, 0.50444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484601,-99) , 
8, 2.14491, 0, 0, 0.493576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412467,-99) , 
5, 0.619011, 1, 0, 0.483086,-99) , 
10, 0.612761, 1, 0, 0.499531,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0300291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497618,-99) , 
5, 0.0475952, 0, 0, 0.523983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493301,-99) , 
2, -0.0230247, 1, 0, 0.499113,-99) , 
2, 0.050396, 0, 0, 0.50395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485351,-99) , 
0, 0.503167, 1, 0, 0.513592,-99) , 
NN(
0, 
0, 
-1, -0.141953, 0, -1, 0.470575,-99) , 
0, 0.500946, 0, 0, 0.483655,-99) , 
3, 4.37807, 1, 0, 0.499934,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0119007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42842, 0, 1, 0.505033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465208,-99) , 
4, 0.998572, 0, 0, 0.503807,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0335812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.328901, 1, 1, 0.57874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461754,-99) , 
8, 1.14977, 0, 0, 0.500457,-99) , 
10, -0.121036, 1, 0, 0.513008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542404,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.492196,-99) , 
4, 0.999524, 1, 0, 0.495904,-99) , 
8, 0.714322, 0, 0, 0.502024,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0273779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76248, 0, 1, 0.51034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451445,-99) , 
10, 0.923421, 1, 0, 0.506207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440125,-99) , 
4, 0.999973, 0, 0, 0.496989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416301,-99) , 
4, 0.999905, 0, 0, 0.49227,-99) , 
5, 0.0475958, 0, 0, 0.499341,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0582127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.704696, 1, 1, 0.541456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406952,-99) , 
5, 0.61913, 1, 0, 0.483092,-99) , 
8, 1.28807, 1, 0, 0.513855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467049,-99) , 
10, 0.354384, 1, 0, 0.54019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474904,-99) , 
10, -1.41627, 1, 0, 0.482703,-99) , 
8, 1.24446, 0, 0, 0.489712,-99) , 
9, -1.39431, 0, 0, 0.495373,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0194603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449468,-99) , 
8, -1.80792, 0, 0, 0.500881,-99) , 
8, 2.00512, 0, 0, 0.503005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516477,-99) , 
NN(
0, 
0, 
-1, 1.63204, 1, -1, 0.447167,-99) , 
0, 0.497137, 1, 0, 0.476945,-99) , 
10, 1.24137, 1, 0, 0.500008,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.024205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49871,-99) , 
10, -1.02539, 1, 0, 0.504472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445597,-99) , 
9, -3.79226, 0, 0, 0.485014,-99) , 
8, -0.428476, 0, 0, 0.499439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411977,-99) , 
1, 0.0119067, 1, 0, 0.496655,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0354862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 1, 1, 0.542555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49386,-99) , 
7, -951.286, 1, 0, 0.502205,-99) , 
1, 0.00579008, 0, 0, 0.506224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439178,-99) , 
9, -4.35848, 1, 0, 0.460269,-99) , 
9, -3.00864, 0, 0, 0.476024,-99) , 
8, -0.713962, 0, 0, 0.500683,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0369152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.809486, 0, 1, 0.549497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539116,-99) , 
NN(
0, 
0, 
-1, 0.201247, 1, -1, 0.488785,-99) , 
8, 2.42862, 0, 0, 0.490511,-99) , 
1, 0.0040614, 0, 0, 0.500431,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0314251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.03844, 1, 1, 0.556947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46238,-99) , 
4, 0.999048, 0, 0, 0.506434,-99) , 
10, -0.832946, 1, 0, 0.512305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492994,-99) , 
10, -2.15705, 1, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457878,-99) , 
0, 0.492377, 0, 0, 0.494681,-99) , 
8, -0.142671, 0, 0, 0.506156,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0593399);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.71434, 0, 1, 0.554281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481873,-99) , 
9, -1.71691, 0, 0, 0.487062,-99) , 
NN(
0, 
0, 
-1, 1.33755, 1, -1, 0.464426,-99) , 
10, 0.684647, 1, 0, 0.482473,-99) , 
1, -0.0026657, 1, 0, 0.499591,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0249154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144676, 0, 1, 0.52989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482657,-99) , 
5, 0.714166, 1, 0, 0.521499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493362,-99) , 
9, -0.749716, 0, 0, 0.496472,-99) , 
8, 2.42852, 0, 0, 0.498007,-99) , 
0, 0.493329, 1, 0, 0.501811,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0263676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.30416, 0, 1, 0.544879,-99) , 
NN(
NN(
0, 
0, 
-1, 0.146158, 0, 1, 0.513733,-99) , 
NN(
0, 
0, 
-1, 0.777623, 1, -1, 0.492268,-99) , 
0, 0.498091, 0, 0, 0.503007,-99) , 
10, -1.97318, 1, 0, 0.506007,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0265726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499947,-99) , 
9, -4.30757, 1, 0, 0.503005,-99) , 
8, 1.561, 0, 0, 0.506922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479884,-99) , 
5, -0.904948, 0, 0, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0.0476404, 1, -1, 0.452675,-99) , 
8, 1.28807, 1, 0, 0.480247,-99) , 
9, -1.32141, 1, 0, 0.501146,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0313179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.75247, 1, 1, 0.560224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490089,-99) , 
8, -0.0473409, 0, 0, 0.50542,-99) , 
10, -1.57322, 1, 0, 0.508711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507234,-99) , 
NN(
0, 
0, 
-1, -3.64124, 0, -1, 0.454557,-99) , 
10, -2.24227, 1, 0, 0.472643,-99) , 
8, -0.999685, 0, 0, 0.504337,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0304102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.428555, 0, 1, 0.553002,-99) , 
NN(
NN(
0, 
0, 
-1, 1.84822, 0, 1, 0.50479,-99) , 
NN(
0, 
0, 
-1, 2.145, 1, -1, 0.474316,-99) , 
9, -1.0001, 1, 0, 0.500436,-99) , 
1, 0.0040614, 0, 0, 0.509065,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0490852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238192, 0, 1, 0.560387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484885,-99) , 
8, 0.22512, 0, 0, 0.500463,-99) , 
1, -0.00249022, 1, 0, 0.514177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491923,-99) , 
5, -0.428557, 1, 0, 0.524754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484378,-99) , 
9, -1.70151, 1, 0, 0.492147,-99) , 
0, 0.502853, 0, 0, 0.497873,-99) , 
10, -0.132533, 1, 0, 0.507104,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0484549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.719651, 1, 1, 0.61163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481058,-99) , 
10, -1.41474, 1, 0, 0.500646,-99) , 
8, 0.290568, 0, 0, 0.515602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489651,-99) , 
8, 2.1439, 0, 0, 0.494522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419893,-99) , 
4, 0.999524, 0, 0, 0.490016,-99) , 
10, -0.541539, 1, 0, 0.501081,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0403099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376609, 0, 1, 0.528774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495902,-99) , 
8, 0.143113, 1, 0, 0.502766,-99) , 
10, -0.539744, 1, 0, 0.512318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420907,-99) , 
10, -2.34926, 1, 0, 0.455021,-99) , 
9, -3.12153, 0, 0, 0.481939,-99) , 
8, -0.999839, 0, 0, 0.508531,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0269448);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.81799, 0, 1, 0.510933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48232,-99) , 
8, 1.35694, 1, 0, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415178,-99) , 
5, 0.0476074, 1, 0, 0.48664,-99) , 
10, 1.0305, 1, 0, 0.507401,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0298748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.537264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491669,-99) , 
2, 0.0710194, 0, 0, 0.499252,-99) , 
0, 0.502534, 1, 0, 0.512953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496917,-99) , 
1, -0.00535207, 1, 0, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0.499859, 1, -1, 0.483442,-99) , 
0, 0.497138, 1, 0, 0.495293,-99) , 
0, 0.500947, 0, 0, 0.500139,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0243367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.535141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483215,-99) , 
10, 0.91886, 1, 0, 0.501946,-99) , 
1, 0.00682455, 0, 0, 0.504672,-99) , 
NN(
0, 
0, 
-1, -2.19003, 1, -1, 0.456714,-99) , 
9, -3.93746, 0, 0, 0.501472,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0253468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499638,-99) , 
10, -1.51337, 1, 0, 0.502006,-99) , 
9, -0.112057, 0, 0, 0.504527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470341,-99) , 
8, -1.58614, 0, 0, 0.526324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439662,-99) , 
9, -2.68541, 0, 0, 0.464354,-99) , 
10, -2.13253, 1, 0, 0.482568,-99) , 
8, -0.713997, 0, 0, 0.500596,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0171189);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549798,-99) , 
NN(
NN(
0, 
0, 
-1, -0.960566, 0, 1, 0.504975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4493,-99) , 
9, -3.93801, 0, 0, 0.487555,-99) , 
8, -0.67345, 0, 0, 0.501559,-99) , 
8, 2.42852, 0, 0, 0.503113,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0292606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.614513, 0, 1, 0.532798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475462,-99) , 
5, 0.619011, 1, 0, 0.519057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496386,-99) , 
10, -1.58897, 1, 0, 0.499176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424746,-99) , 
9, -3.91326, 0, 0, 0.476649,-99) , 
8, -0.999839, 0, 0, 0.496455,-99) , 
0, 0.494281, 1, 0, 0.501207,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.030933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458672,-99) , 
9, -0.778832, 1, 0, 0.549138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499757,-99) , 
8, 0.433132, 0, 0, 0.533438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474681,-99) , 
0, 0.493329, 0, 0, 0.500376,-99) , 
9, -0.670422, 0, 0, 0.503477,-99) , 
8, 2.14281, 0, 0, 0.506238,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0339688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428688, 0, 1, 0.538329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469594,-99) , 
10, 1.15763, 1, 0, 0.507277,-99) , 
1, -0.00111011, 1, 0, 0.51895,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0733252, 0, 1, 0.513178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478525,-99) , 
0, 0.49949, 1, 0, 0.493221,-99) , 
0, 0.501628, 0, 0, 0.500946,-99) , 
0, 0.497139, 1, 0, 0.508378,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0156408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482907,-99) , 
9, -3.31277, 0, 0, 0.500313,-99) , 
9, -4.24589, 1, 0, 0.501615,-99) , 
8, 2.42846, 0, 0, 0.503067,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0611881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523749, 0, 1, 0.558646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482654,-99) , 
9, -2.40317, 1, 0, 0.496955,-99) , 
1, -0.00283878, 1, 0, 0.510014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486388,-99) , 
5, -0.714303, 0, 0, 0.51694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478057,-99) , 
1, 0.00520754, 0, 0, 0.486438,-99) , 
9, -2.28108, 0, 0, 0.494555,-99) , 
8, 0.428622, 0, 0, 0.501537,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0298315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498178,-99) , 
10, 0.1601, 1, 0, 0.515056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490625,-99) , 
9, -1.43547, 0, 0, 0.496341,-99) , 
8, 1.00003, 0, 0, 0.501439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46161,-99) , 
2, 0.214735, 1, 0, 0.49963,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0286764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.54225, 1, 1, 0.511503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486721,-99) , 
10, -0.110505, 1, 0, 0.504008,-99) , 
NN(
0, 
0, 
-1, 0.161642, 1, -1, 0.465482,-99) , 
0, 0.503804, 0, 0, 0.486296,-99) , 
0, 0.5019, 1, 0, 0.506106,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0273786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.476472, 0, 1, 0.543066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482696,-99) , 
10, 0.422004, 1, 0, 0.496751,-99) , 
10, -0.783412, 1, 0, 0.513452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493631,-99) , 
1, 0.00268605, 0, 0, 0.509242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481617,-99) , 
9, -2.29482, 0, 0, 0.491239,-99) , 
0, 0.501898, 0, 0, 0.494919,-99) , 
2, 0.0713191, 0, 0, 0.498232,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0423834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455672,-99) , 
10, 1.32957, 1, 0, 0.490589,-99) , 
9, -1.37976, 1, 0, 0.526602,-99) , 
NN(
NN(
0, 
0, 
-1, 0.372176, 0, 1, 0.51042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480435,-99) , 
10, 0.761611, 0, 0, 0.490139,-99) , 
10, -0.629031, 1, 0, 0.499598,-99) , 
8, 1.57143, 0, 0, 0.503414,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0339873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523897, 0, 1, 0.538304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460368,-99) , 
7, 0.423497, 0, 0, 0.512559,-99) , 
7, -951.286, 1, 0, 0.524479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471856,-99) , 
8, -1.57065, 0, 0, 0.506138,-99) , 
NN(
0, 
0, 
-1, 0.0429025, 1, -1, 0.481406,-99) , 
5, 0.80948, 1, 0, 0.502775,-99) , 
0, 0.502852, 0, 0, 0.506251,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0314362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
8, -0.355416, 0, 0, 0.542436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414846,-99) , 
4, 0.999048, 0, 0, 0.498504,-99) , 
10, -0.973166, 1, 0, 0.504892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552446,-99) , 
NN(
0, 
0, 
-1, -1.24024, 0, -1, 0.464342,-99) , 
9, -4.36978, 1, 0, 0.477285,-99) , 
9, -3.28108, 0, 0, 0.499857,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.028303);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.288, 1, 1, 0.529292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487429,-99) , 
10, -0.259663, 1, 0, 0.516749,-99) , 
NN(
0, 
0, 
-1, 0.99974, 0, -1, 0.490629,-99) , 
5, 0.714243, 0, 0, 0.496378,-99) , 
9, -0.278945, 0, 0, 0.498784,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0255462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49519,-99) , 
8, 1.64812, 0, 0, 0.499861,-99) , 
NN(
0, 
0, 
-1, -0.333391, 1, -1, 0.473458,-99) , 
10, 0.835097, 1, 0, 0.495646,-99) , 
8, 2.42852, 0, 0, 0.497146,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0335419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458767,-99) , 
3, 6.79805, 1, 0, 0.500054,-99) , 
8, 0.168673, 0, 0, 0.51035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495268,-99) , 
10, -0.298677, 1, 0, 0.504617,-99) , 
NN(
0, 
0, 
-1, 0.0474742, 1, -1, 0.47788,-99) , 
8, 0.715114, 0, 0, 0.493033,-99) , 
10, -0.715267, 1, 0, 0.499511,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0220617);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472529,-99) , 
8, 0.363784, 0, 0, 0.528534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4979,-99) , 
9, -4.34116, 1, 0, 0.500489,-99) , 
9, -0.749716, 0, 0, 0.503561,-99) , 
8, 2.42854, 0, 0, 0.505697,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.038583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494458,-99) , 
10, 0.00323927, 1, 0, 0.52181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49718,-99) , 
8, 0.732528, 0, 0, 0.502739,-99) , 
9, -2.3565, 0, 0, 0.511014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540207,-99) , 
NN(
0, 
0, 
-1, 0.551338, 0, -1, 0.47717,-99) , 
9, -2.07827, 1, 0, 0.490553,-99) , 
5, -0.71429, 0, 0, 0.506228,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.039503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.182765, 0, 1, 0.533478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489586,-99) , 
8, 0.905467, 0, 0, 0.501925,-99) , 
10, -1.02176, 1, 0, 0.508401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473673,-99) , 
5, -0.714311, 0, 0, 0.493353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444653,-99) , 
9, -3.95507, 0, 0, 0.474181,-99) , 
8, -0.998447, 0, 0, 0.504258,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0439433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.33848, 0, 1, 0.516625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49925,-99) , 
9, -0.277636, 1, 0, 0.533279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446051,-99) , 
8, 1.95685, 0, 0, 0.474176,-99) , 
8, 1.00853, 1, 0, 0.495478,-99) , 
10, 0.408243, 1, 0, 0.510651,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0282418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.04389, 1, 1, 0.511045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442615,-99) , 
4, 0.999563, 1, 0, 0.483223,-99) , 
4, 0.999796, 0, 0, 0.5083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471794,-99) , 
4, 0.998571, 0, 0, 0.507161,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0333387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.321494, 0, 1, 0.541427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4521,-99) , 
9, -2.98705, 0, 0, 0.499704,-99) , 
10, -1.23132, 1, 0, 0.503929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44291,-99) , 
5, -0.427419, 1, 0, 0.460994,-99) , 
9, -3.00622, 0, 0, 0.478894,-99) , 
8, -0.714142, 0, 0, 0.499237,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0342437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458996,-99) , 
10, 0.398095, 1, 0, 0.514716,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.490919,-99) , 
5, 0.714243, 0, 0, 0.49573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414012,-99) , 
10, -2.46798, 1, 0, 0.465323,-99) , 
9, -3.93746, 0, 0, 0.493678,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0485319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491545,-99) , 
1, -0.00439438, 1, 0, 0.505167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443795,-99) , 
4, 0.999714, 0, 0, 0.502511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477811,-99) , 
10, -0.630078, 1, 0, 0.499176,-99) , 
NN(
0, 
0, 
-1, -1.35609, 1, -1, 0.467637,-99) , 
8, 0.167997, 0, 0, 0.486496,-99) , 
5, 0.619009, 1, 0, 0.49817,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0398459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.512256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410231,-99) , 
4, 0.999619, 0, 0, 0.508682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484859,-99) , 
10, -0.539135, 1, 0, 0.506891,-99) , 
NN(
0, 
0, 
-1, -0.39317, 0, -1, 0.462075,-99) , 
9, -2.69903, 0, 0, 0.488033,-99) , 
5, 0.619009, 1, 0, 0.503131,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0484451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493152,-99) , 
10, -1.16997, 1, 0, 0.558391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477645,-99) , 
8, 0.388929, 0, 0, 0.499861,-99) , 
10, -0.996485, 1, 0, 0.50709,-99) , 
NN(
NN(
0, 
0, 
-1, -0.914345, 0, 1, 0.540261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430092,-99) , 
10, -1.82675, 1, 0, 0.467134,-99) , 
9, -2.68403, 0, 0, 0.487148,-99) , 
8, -0.427148, 0, 0, 0.501789,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0282728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0715266, 1, 1, 0.52922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498275,-99) , 
8, 2.29251, 0, 0, 0.500715,-99) , 
0, 0.49333, 1, 0, 0.50538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436025,-99) , 
5, 0.145897, 0, 0, 0.489073,-99) , 
NN(
0, 
0, 
-1, -0.523853, 1, -1, 0.453824,-99) , 
10, -1.90347, 1, 0, 0.469564,-99) , 
8, -0.713999, 0, 0, 0.498802,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0255958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428481, 1, 1, 0.54213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488709,-99) , 
5, 0.523699, 0, 0, 0.505852,-99) , 
8, 0.434797, 1, 0, 0.525811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499398,-99) , 
10, -1.3488, 1, 0, 0.503559,-99) , 
NN(
0, 
0, 
-1, 0.499859, 1, -1, 0.479763,-99) , 
8, -0.713962, 0, 0, 0.499231,-99) , 
0, 0.5019, 0, 0, 0.504819,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0181131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499324,-99) , 
10, -0.256283, 1, 0, 0.505624,-99) , 
NN(
0, 
0, 
-1, 0.999533, 1, -1, 0.468823,-99) , 
4, 0.999728, 0, 0, 0.503343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464171,-99) , 
4, 0.999048, 0, 0, 0.501615,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0204447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461451,-99) , 
9, -0.910481, 1, 0, 0.537955,-99) , 
NN(
NN(
0, 
0, 
-1, -2.16128, 1, 1, 0.504804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462013,-99) , 
8, -1.77396, 0, 0, 0.503431,-99) , 
8, 2.14299, 0, 0, 0.505467,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0372572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.514885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476361,-99) , 
2, 0.0112114, 0, 0, 0.501347,-99) , 
2, -0.00303581, 1, 0, 0.509059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479566,-99) , 
3, 4.05198, 1, 0, 0.499294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45357,-99) , 
5, -0.714297, 0, 0, 0.488518,-99) , 
2, 0.0717866, 1, 0, 0.505279,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0241321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497506,-99) , 
8, -0.877974, 0, 0, 0.528937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489651,-99) , 
5, -0.142869, 1, 0, 0.497104,-99) , 
10, -1.67322, 1, 0, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437348,-99) , 
8, -1.85675, 0, 0, 0.498715,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0252887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485967,-99) , 
0, 0.495237, 0, 0, 0.532538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486082,-99) , 
8, -0.124392, 0, 0, 0.519082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497256,-99) , 
9, -4.03907, 1, 0, 0.499576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447041,-99) , 
4, 0.999757, 0, 0, 0.496579,-99) , 
5, 0.714244, 0, 0, 0.501235,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0704576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483875,-99) , 
6, 0.00445151, 0, 0, 0.507579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432882,-99) , 
1, 0.0115636, 1, 0, 0.504999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413253,-99) , 
1, -0.0116875, 0, 0, 0.501866,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0240445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49783,-99) , 
10, 2.19528, 1, 0, 0.539792,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.526141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459233,-99) , 
10, 0.955461, 1, 0, 0.501191,-99) , 
5, -0.809525, 1, 0, 0.5044,-99) , 
9, -0.240146, 0, 0, 0.506986,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0505372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497673,-99) , 
8, -0.213072, 0, 0, 0.569898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470175,-99) , 
10, 1.73716, 1, 0, 0.510192,-99) , 
10, -1.05677, 1, 0, 0.516308,-99) , 
NN(
NN(
0, 
0, 
-1, -0.918181, 0, 1, 0.528663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459152,-99) , 
5, -0.523808, 1, 0, 0.472109,-99) , 
9, -2.71966, 0, 0, 0.488314,-99) , 
8, -0.428453, 0, 0, 0.508891,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.026246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09035, 0, 1, 0.538015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
9, -2.11749, 0, 0, 0.507186,-99) , 
9, -3.50547, 1, 0, 0.510666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441893,-99) , 
8, -1.8567, 0, 0, 0.508912,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0295071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15413, 1, 1, 0.566707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455139,-99) , 
10, -1.45669, 1, 0, 0.499945,-99) , 
8, -0.288538, 0, 0, 0.515838,-99) , 
NN(
NN(
0, 
0, 
-1, 1.95817, 1, 1, 0.526205,-99) , 
NN(
0, 
0, 
-1, -1.13607, 1, -1, 0.495277,-99) , 
9, -0.302643, 0, 0, 0.498565,-99) , 
10, -0.997002, 1, 0, 0.503485,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0192051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474365,-99) , 
8, -0.697446, 0, 0, 0.498883,-99) , 
10, -2.2548, 1, 0, 0.500865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435571,-99) , 
8, -1.85509, 0, 0, 0.49916,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0205696);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.25946, 0, 1, 0.542399,-99) , 
NN(
NN(
0, 
0, 
-1, 0.523771, 0, 1, 0.505378,-99) , 
NN(
0, 
0, 
-1, 0.142841, 1, -1, 0.472556,-99) , 
0, 0.491428, 0, 0, 0.502378,-99) , 
10, -1.88073, 1, 0, 0.505681,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0289921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.538154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492589,-99) , 
2, 0.0708577, 1, 0, 0.518028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490292,-99) , 
5, 0.714218, 0, 0, 0.495194,-99) , 
3, 4.23371, 0, 0, 0.499823,-99) , 
1, -0.00808972, 1, 0, 0.502168,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0338124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458296,-99) , 
9, -3.48582, 0, 0, 0.530273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489892,-99) , 
8, 0.170132, 0, 0, 0.502797,-99) , 
10, -1.28687, 1, 0, 0.505289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483805,-99) , 
5, -0.142937, 0, 0, 0.500071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401322,-99) , 
9, -4.40536, 1, 0, 0.447712,-99) , 
9, -3.9014, 0, 0, 0.483381,-99) , 
8, -0.714177, 0, 0, 0.501217,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0166493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42843, 0, 1, 0.504606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423915,-99) , 
4, 0.999508, 1, 0, 0.474578,-99) , 
4, 0.999728, 0, 0, 0.50231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457579,-99) , 
4, 0.998572, 0, 0, 0.500931,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0133542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493838,-99) , 
7, -951.286, 1, 0, 0.526503,-99) , 
NN(
0, 
0, 
-1, 1.77696, 1, -1, 0.497039,-99) , 
3, 0.534882, 1, 0, 0.499599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455537,-99) , 
3, 8.6413, 1, 0, 0.498349,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0147489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48071, 0, 1, 0.504578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455316,-99) , 
3, 6.66855, 1, 0, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448685,-99) , 
3, 8.21353, 1, 0, 0.501194,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.041845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492094,-99) , 
9, -3.63508, 1, 0, 0.500494,-99) , 
8, 0.487688, 0, 0, 0.510289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48667,-99) , 
0, 0.494418, 0, 0, 0.504414,-99) , 
NN(
0, 
0, 
-1, -0.238122, 1, -1, 0.477854,-99) , 
0, 0.497139, 1, 0, 0.488988,-99) , 
10, -0.506409, 1, 0, 0.498413,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0200328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
0, 0.503124, 0, 0, 0.498139,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.469056,-99) , 
0, 0.504756, 1, 0, 0.495852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427532,-99) , 
8, -1.85674, 0, 0, 0.494115,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0332464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442437,-99) , 
10, -0.323878, 1, 0, 0.505526,-99) , 
8, 0.819951, 0, 0, 0.511127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493494,-99) , 
9, -2.05124, 1, 0, 0.498161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439745,-99) , 
5, 0.809479, 1, 0, 0.493073,-99) , 
10, -0.129699, 1, 0, 0.503338,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0275235);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.68072, 1, 1, 0.5501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451894,-99) , 
2, -0.216658, 0, 0, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0.171605, 0, -1, 0.47343,-99) , 
5, 0.80948, 1, 0, 0.498824,-99) , 
1, 0.00579008, 0, 0, 0.503925,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.026153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.25898, 0, 1, 0.534291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499125,-99) , 
2, 0.0708577, 0, 0, 0.503261,-99) , 
10, -1.14709, 1, 0, 0.508427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482257,-99) , 
5, -0.429525, 0, 0, 0.501623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434135,-99) , 
9, -3.99311, 0, 0, 0.476858,-99) , 
8, -0.999905, 0, 0, 0.504656,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0246124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494926,-99) , 
3, 1.74283, 1, 0, 0.504575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457925,-99) , 
3, 8.6342, 1, 0, 0.503283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443212,-99) , 
8, -1.85697, 0, 0, 0.501761,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0195664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09896, 1, 1, 0.505342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41374,-99) , 
5, 0.714154, 1, 0, 0.479709,-99) , 
9, -3.41204, 0, 0, 0.50153,-99) , 
NN(
0, 
0, 
-1, -2.38452, 0, -1, 0.459294,-99) , 
2, -0.211248, 0, 0, 0.499345,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0363076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00451, 1, 1, 0.53836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453812,-99) , 
10, -0.404734, 0, 0, 0.488178,-99) , 
0, 0.498093, 0, 0, 0.514164,-99) , 
NN(
NN(
0, 
0, 
-1, -2.45995, 1, 1, 0.521656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4873,-99) , 
3, 0.712504, 1, 0, 0.492067,-99) , 
2, -0.129695, 1, 0, 0.494451,-99) , 
3, 4.25656, 0, 0, 0.498442,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0426263);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499039,-99) , 
9, -2.41876, 1, 0, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444101,-99) , 
10, -1.81955, 0, 0, 0.510498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48472,-99) , 
8, 1.53536, 0, 0, 0.493065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42274,-99) , 
10, 0.934472, 1, 0, 0.488715,-99) , 
5, 0.142833, 1, 0, 0.499984,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0214579);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558928,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999685, 1, 1, 0.507697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444311,-99) , 
9, -3.95492, 0, 0, 0.505392,-99) , 
10, -2.45982, 1, 0, 0.506783,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0404553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00655212, 1, 1, 0.549221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488472,-99) , 
5, 0.619011, 0, 0, 0.496944,-99) , 
1, 0.0040614, 0, 0, 0.505393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501073,-99) , 
NN(
0, 
0, 
-1, -2.13358, 1, -1, 0.45357,-99) , 
9, -3.27374, 0, 0, 0.470051,-99) , 
8, -0.999715, 0, 0, 0.501082,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0128855);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506442,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0279629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499747,-99) , 
9, -2.65172, 0, 0, 0.518215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484352,-99) , 
0, 0.496944, 1, 0, 0.500077,-99) , 
0, 0.498498, 0, 0, 0.50597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487105,-99) , 
9, -2.40003, 1, 0, 0.503612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461468,-99) , 
1, -0.00138993, 1, 0, 0.474052,-99) , 
5, 0.0476086, 1, 0, 0.490481,-99) , 
0, 0.5019, 1, 0, 0.502712,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0355391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495047,-99) , 
4, 0.999995, 0, 0, 0.509691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466967,-99) , 
4, 0.999905, 0, 0, 0.506476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488227,-99) , 
8, 1.46728, 0, 0, 0.49502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445935,-99) , 
10, 0.594953, 1, 0, 0.489364,-99) , 
5, 0.333304, 1, 0, 0.499344,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0384359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.720426, 0, 1, 0.529707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463918,-99) , 
8, 0.428684, 1, 0, 0.493568,-99) , 
3, 4.13898, 1, 0, 0.516957,-99) , 
NN(
NN(
0, 
0, 
-1, -2.39718, 1, 1, 0.511581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481704,-99) , 
1, -0.00215937, 1, 0, 0.492646,-99) , 
5, -0.238112, 1, 0, 0.500403,-99) , 
2, -0.0715266, 1, 0, 0.5034,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0126373);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499826,-99) , 
10, -1.96365, 1, 0, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457485,-99) , 
8, -1.2854, 0, 0, 0.499787,-99) , 
10, -2.46347, 1, 0, 0.501856,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0197856);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42854, 0, 1, 0.509892,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0178398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490058,-99) , 
10, -0.464902, 1, 0, 0.495162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45145,-99) , 
9, -3.95249, 0, 0, 0.493553,-99) , 
10, -2.46347, 1, 0, 0.494719,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0437873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488522,-99) , 
10, -0.967336, 1, 0, 0.497276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464665,-99) , 
1, -0.00233647, 1, 0, 0.479937,-99) , 
8, -0.428524, 0, 0, 0.492793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447973,-99) , 
3, 8.39886, 1, 0, 0.491462,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0452176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.244203, 0, 1, 0.548322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480408,-99) , 
8, 0.605611, 0, 0, 0.504287,-99) , 
10, -0.728141, 1, 0, 0.51102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483968,-99) , 
0, 0.49714, 0, 0, 0.505183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392153,-99) , 
10, -1.7862, 1, 0, 0.472495,-99) , 
9, -3.47474, 0, 0, 0.493237,-99) , 
8, -0.142749, 0, 0, 0.504784,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0316224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.793457, 0, 1, 0.510597,-99) , 
NN(
NN(
0, 
0, 
-1, -0.841248, 1, 1, 0.524467,-99) , 
NN(
0, 
0, 
-1, -1.00003, 0, -1, 0.47148,-99) , 
7, -951.286, 0, 0, 0.492394,-99) , 
5, -0.523819, 0, 0, 0.504788,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0827686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97517, 0, 1, 0.517402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461321,-99) , 
3, 3.66924, 1, 0, 0.496259,-99) , 
5, -0.238225, 0, 0, 0.506242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477815,-99) , 
7, 0.00360815, 0, 0, 0.517896,-99) , 
NN(
0, 
0, 
-1, 0.716193, 1, -1, 0.267078,-99) , 
7, -1.49446, 0, 0, 0.488012,-99) , 
7, -951.286, 1, 0, 0.49612,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0242188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
8, 1.85772, 0, 0, 0.501189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424229,-99) , 
4, 0.999728, 0, 0, 0.498506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404517,-99) , 
10, -0.949579, 1, 0, 0.448247,-99) , 
4, 0.999524, 0, 0, 0.494824,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0216952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4825,-99) , 
8, -1.50053, 0, 0, 0.535631,-99) , 
NN(
NN(
0, 
0, 
-1, -1.63196, 1, 1, 0.505569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424751,-99) , 
8, -1.28168, 1, 0, 0.461506,-99) , 
8, -0.996242, 0, 0, 0.502586,-99) , 
10, -2.06592, 1, 0, 0.504626,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0312563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544912,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.496382,-99) , 
10, -1.2713, 1, 0, 0.499672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452517,-99) , 
8, -1.11823, 0, 0, 0.499134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400581,-99) , 
5, 0.154447, 1, 0, 0.447943,-99) , 
10, -1.7102, 1, 0, 0.476895,-99) , 
9, -3.28405, 0, 0, 0.495613,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0306326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.74853, 1, 1, 0.505826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470602,-99) , 
9, -2.23167, 0, 0, 0.489558,-99) , 
5, 0.333304, 1, 0, 0.498945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509444,-99) , 
NN(
0, 
0, 
-1, -3.42015, 0, -1, 0.453911,-99) , 
10, -2.17745, 1, 0, 0.475833,-99) , 
8, -0.99991, 0, 0, 0.496173,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0139178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536644,-99) , 
NN(
0, 
0, 
-1, -0.918107, 0, -1, 0.496057,-99) , 
10, -1.9834, 1, 0, 0.497795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459367,-99) , 
8, -1.57127, 0, 0, 0.496036,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0463566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0567328, 1, 1, 0.522804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473089,-99) , 
5, 0.809477, 1, 0, 0.517191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488424,-99) , 
10, -0.134535, 1, 0, 0.501347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471196,-99) , 
10, -2.26455, 1, 0, 0.47778,-99) , 
9, -2.52289, 0, 0, 0.491297,-99) , 
1, 0.00120473, 0, 0, 0.501325,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0333818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.514023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471711,-99) , 
10, 1.30119, 1, 0, 0.508892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494615,-99) , 
2, -0.0710108, 1, 0, 0.50197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475998,-99) , 
5, 0.80943, 0, 0, 0.480938,-99) , 
0, 0.49528, 1, 0, 0.489668,-99) , 
0, 0.499996, 0, 0, 0.496273,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0216388);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.904735, 1, 1, 0.505388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452112,-99) , 
7, -951.288, 0, 0, 0.489943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439805,-99) , 
9, -3.97892, 0, 0, 0.470662,-99) , 
8, -0.99987, 0, 0, 0.50108,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0395235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09095, 1, 1, 0.551793,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494665,-99) , 
10, -0.753755, 1, 0, 0.502873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494252,-99) , 
5, -0.809589, 0, 0, 0.512937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460372,-99) , 
5, -0.619033, 1, 0, 0.471935,-99) , 
9, -2.66402, 0, 0, 0.484329,-99) , 
8, -0.142785, 0, 0, 0.496404,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0246658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0582791, 0, 1, 0.50973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484532,-99) , 
0, 0.494281, 1, 0, 0.490781,-99) , 
3, 3.36458, 1, 0, 0.504449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446729,-99) , 
3, 8.6342, 1, 0, 0.502897,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0115947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499369,-99) , 
10, -0.762243, 1, 0, 0.524526,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.496801,-99) , 
4, 0.999524, 1, 0, 0.498938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466599,-99) , 
3, 8.3483, 1, 0, 0.497916,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0162812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42107, 1, 1, 0.523339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498949,-99) , 
8, 2.14278, 0, 0, 0.50211,-99) , 
9, -0.670422, 0, 0, 0.504484,-99) , 
NN(
0, 
0, 
-1, -0.133811, 0, -1, 0.470783,-99) , 
0, 0.504757, 1, 0, 0.501742,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0145991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.380148, 1, 1, 0.531083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498787,-99) , 
10, -2.28618, 1, 0, 0.50068,-99) , 
9, -0.2769, 0, 0, 0.503052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451669,-99) , 
5, 0.904713, 1, 0, 0.50055,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0215458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471688,-99) , 
8, -0.468852, 0, 0, 0.49953,-99) , 
10, -1.76731, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0.496189, 0, -1, 0.471259,-99) , 
8, -1.28554, 0, 0, 0.499437,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0192182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497641,-99) , 
10, 1.88747, 1, 0, 0.52341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494134,-99) , 
9, -1.054, 0, 0, 0.495907,-99) , 
8, 2.14282, 0, 0, 0.497517,-99) , 
9, -0.474422, 0, 0, 0.499843,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0406564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542707,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00224338, 0, 1, 0.516879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47782,-99) , 
2, 0.0154667, 0, 0, 0.496069,-99) , 
2, -0.0311652, 1, 0, 0.502286,-99) , 
2, 0.213662, 0, 0, 0.504282,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0392026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4739,-99) , 
5, -0.333475, 0, 0, 0.522437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464478,-99) , 
5, 0.714245, 1, 0, 0.499897,-99) , 
10, -0.161411, 1, 0, 0.506913,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00253646, 0, 1, 0.54291,-99) , 
NN(
0, 
0, 
-1, -0.871699, 1, -1, 0.482911,-99) , 
5, -0.523778, 1, 0, 0.491354,-99) , 
9, -2.68549, 0, 0, 0.501309,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0286251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460994,-99) , 
9, -1.03861, 1, 0, 0.532699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47283,-99) , 
5, 0.809479, 1, 0, 0.500988,-99) , 
8, 1.85712, 0, 0, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458463,-99) , 
10, 1.85247, 1, 0, 0.500952,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0237272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48081,-99) , 
3, 1.90933, 0, 0, 0.501502,-99) , 
5, -0.809512, 0, 0, 0.525991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473828,-99) , 
10, 0.481984, 1, 0, 0.499023,-99) , 
8, 2.14271, 0, 0, 0.501422,-99) , 
9, -0.668191, 0, 0, 0.504214,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.022879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581449,-99) , 
NN(
0, 
0, 
-1, -3.78945, 0, -1, 0.4918,-99) , 
10, -2.22726, 1, 0, 0.494225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441265,-99) , 
8, -1.85693, 0, 0, 0.492854,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.037691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.558844, 0, 1, 0.529516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460365,-99) , 
4, 0.999524, 0, 0, 0.508978,-99) , 
10, -1.37433, 1, 0, 0.512646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473316,-99) , 
7, -0.0141615, 0, 0, 0.508608,-99) , 
NN(
0, 
0, 
-1, 0.427713, 1, -1, 0.474065,-99) , 
7, -950.08, 0, 0, 0.492563,-99) , 
2, -0.0708767, 0, 0, 0.509072,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.020865);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492741,-99) , 
10, -2.21055, 1, 0, 0.494406,-99) , 
2, 0.132498, 0, 0, 0.496176,-99) , 
2, 0.214165, 0, 0, 0.497913,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0373773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10557, 1, 1, 0.531008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46837,-99) , 
9, -3.45462, 0, 0, 0.521079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477674,-99) , 
4, 0.999982, 0, 0, 0.500664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437131,-99) , 
4, 0.999631, 0, 0, 0.497992,-99) , 
5, 0.714244, 0, 0, 0.502898,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0363084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49948,-99) , 
5, 0.13822, 1, 0, 0.561444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488089,-99) , 
7, -951.286, 1, 0, 0.496976,-99) , 
1, -0.00548496, 1, 0, 0.502535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475913,-99) , 
9, -1.15118, 1, 0, 0.493087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447088,-99) , 
0, 0.494284, 0, 0, 0.48164,-99) , 
5, -0.809525, 0, 0, 0.498792,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0769222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00198, 0, 1, 0.529429,-99) , 
NN(
0, 
0, 
-1, -0.103644, 1, -1, 0.264291,-99) , 
7, -1.57755, 0, 0, 0.501024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484315,-99) , 
5, 0.142757, 0, 0, 0.513719,-99) , 
NN(
0, 
0, 
-1, -0.137288, 0, -1, 0.479124,-99) , 
10, -1.45279, 1, 0, 0.483918,-99) , 
7, -949.779, 0, 0, 0.493493,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0163058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.74692, 1, 1, 0.50499,-99) , 
NN(
0, 
0, 
-1, 0.237582, 0, -1, 0.455057,-99) , 
8, -1.28557, 0, 0, 0.501039,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0245875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.48952, 1, 1, 0.503593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44652,-99) , 
4, 0.99974, 0, 0, 0.500429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452688,-99) , 
0, 0.497137, 0, 0, 0.486182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405405,-99) , 
10, 0.372343, 1, 0, 0.473884,-99) , 
5, 0.714243, 1, 0, 0.495058,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0283275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487177,-99) , 
5, 0.809477, 0, 0, 0.489702,-99) , 
2, 0.210723, 0, 0, 0.491496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44593,-99) , 
3, 8.39117, 1, 0, 0.490119,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0174816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49613,-99) , 
3, 2.43667, 1, 0, 0.512218,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.494538,-99) , 
2, -0.0654705, 1, 0, 0.49783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458746,-99) , 
3, 8.22717, 1, 0, 0.496511,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0443042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714377, 0, 1, 0.544187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480459,-99) , 
5, 0.428553, 0, 0, 0.492389,-99) , 
8, 0.434797, 1, 0, 0.507921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484796,-99) , 
8, 0.641566, 0, 0, 0.491761,-99) , 
9, -4.28959, 1, 0, 0.495387,-99) , 
9, -2.23366, 0, 0, 0.501467,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0232767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.655437, 0, 1, 0.524313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497652,-99) , 
5, 0.904713, 0, 0, 0.500342,-99) , 
10, -1.45524, 1, 0, 0.504303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492771,-99) , 
0, 0.504076, 0, 0, 0.511602,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.471209,-99) , 
5, -0.523794, 1, 0, 0.486343,-99) , 
0, 0.5019, 1, 0, 0.500454,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0172496);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.51023, 1, 1, 0.54369,-99) , 
NN(
NN(
0, 
0, 
-1, 1.79006, 1, 1, 0.536851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49817,-99) , 
10, -2.22365, 1, 0, 0.499713,-99) , 
9, -0.670422, 0, 0, 0.503335,-99) , 
8, 2.14283, 0, 0, 0.505675,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0135971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464538,-99) , 
8, -0.931401, 0, 0, 0.498668,-99) , 
10, -2.1919, 1, 0, 0.49989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446394,-99) , 
8, -1.85668, 0, 0, 0.498535,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0236327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.223249, 1, 1, 0.508348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472478,-99) , 
8, 0.734289, 0, 0, 0.495951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444,-99) , 
5, 0.927392, 1, 0, 0.482304,-99) , 
5, 0.80948, 1, 0, 0.504997,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0361711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.163942, 1, 1, 0.520156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476941,-99) , 
10, -0.383245, 1, 0, 0.49499,-99) , 
8, 1.00078, 0, 0, 0.50181,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504349, 1, 1, 0.527908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455046,-99) , 
9, -3.0721, 1, 0, 0.471848,-99) , 
1, 0.00268605, 0, 0, 0.487366,-99) , 
0, 0.5019, 1, 0, 0.498807,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0176278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488476,-99) , 
3, 2.29381, 1, 0, 0.520734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497021,-99) , 
8, 2.14012, 0, 0, 0.499198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46051,-99) , 
10, 1.5637, 1, 0, 0.497586,-99) , 
5, -0.904752, 1, 0, 0.499994,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0793354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475319,-99) , 
6, 0.00303262, 0, 0, 0.506676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353944,-99) , 
1, 0.012739, 1, 0, 0.501859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464203,-99) , 
1, -0.0108299, 0, 0, 0.500484,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.017257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
8, -0.378216, 0, 0, 0.515793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4685,-99) , 
9, -2.98568, 0, 0, 0.497746,-99) , 
10, -1.18707, 1, 0, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428731,-99) , 
8, -1.857, 0, 0, 0.49971,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0247257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499843,-99) , 
8, 1.03464, 0, 0, 0.505448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449324,-99) , 
8, 1.23726, 1, 0, 0.474712,-99) , 
10, 0.686943, 1, 0, 0.500294,-99) , 
9, -0.105119, 0, 0, 0.501945,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0158734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476222,-99) , 
4, 0.999864, 0, 0, 0.498754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445112,-99) , 
4, 0.998572, 0, 0, 0.497129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434884,-99) , 
8, -1.85674, 0, 0, 0.495509,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0234418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491584,-99) , 
9, -1.32141, 1, 0, 0.504857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45509,-99) , 
4, 0.999563, 1, 0, 0.481427,-99) , 
4, 0.999796, 0, 0, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437719,-99) , 
4, 0.998571, 0, 0, 0.500685,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0307736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.03543, 0, 1, 0.508344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478703,-99) , 
8, 0.224595, 1, 0, 0.488543,-99) , 
10, 0.0926755, 1, 0, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439125,-99) , 
8, -1.85693, 0, 0, 0.499325,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0228734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459599,-99) , 
9, -0.897403, 1, 0, 0.522985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48132,-99) , 
8, -1.04048, 0, 0, 0.499741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4607,-99) , 
5, 0.86393, 1, 0, 0.482516,-99) , 
5, 0.809477, 1, 0, 0.49753,-99) , 
8, 2.14278, 0, 0, 0.499014,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.012731);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.1984, 1, -1, 0.493635,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0584361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436414,-99) , 
10, -1.38785, 1, 0, 0.496893,-99) , 
8, -0.147371, 0, 0, 0.508531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489457,-99) , 
9, -2.39284, 1, 0, 0.504757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468737,-99) , 
1, 0.00331795, 0, 0, 0.477359,-99) , 
5, -0.619046, 1, 0, 0.487092,-99) , 
10, -1.07857, 1, 0, 0.492618,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0296095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486929,-99) , 
2, 0.00321942, 0, 0, 0.517379,-99) , 
2, 0.0772293, 0, 0, 0.526096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554698,-99) , 
NN(
0, 
0, 
-1, 0.505708, 1, -1, 0.495031,-99) , 
9, -0.105119, 0, 0, 0.498324,-99) , 
1, -0.00283878, 1, 0, 0.504553,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0166476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.737249, 0, 1, 0.548048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497461,-99) , 
10, 1.24137, 0, 0, 0.499788,-99) , 
8, 2.42852, 0, 0, 0.501573,-99) , 
5, 0.904715, 0, 0, 0.504177,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0279822);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.23736, 1, 1, 0.510038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445881,-99) , 
10, -1.89207, 1, 0, 0.480131,-99) , 
10, -0.674464, 0, 0, 0.489134,-99) , 
8, -0.713999, 0, 0, 0.506157,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0211675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496274,-99) , 
9, -0.847018, 0, 0, 0.499236,-99) , 
8, 2.14287, 0, 0, 0.501248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435425,-99) , 
10, 1.94956, 1, 0, 0.498029,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0252814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491558,-99) , 
10, -1.4132, 1, 0, 0.498411,-99) , 
1, -0.0040017, 1, 0, 0.508622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497939,-99) , 
3, 0.541148, 1, 0, 0.502103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476225,-99) , 
0, 0.495234, 1, 0, 0.483552,-99) , 
3, 1.93115, 1, 0, 0.494367,-99) , 
3, 4.36372, 0, 0, 0.497097,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0739807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490163,-99) , 
8, -0.42861, 0, 0, 0.51344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465688,-99) , 
10, 1.93996, 1, 0, 0.509702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499932,-99) , 
8, 0.143041, 0, 0, 0.524438,-99) , 
NN(
0, 
0, 
-1, 0.430288, 1, -1, 0.303232,-99) , 
7, -1.32159, 0, 0, 0.49171,-99) , 
7, -951.286, 1, 0, 0.499663,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0459229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468503,-99) , 
10, -0.800069, 1, 0, 0.504625,-99) , 
8, 0.555448, 0, 0, 0.513429,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490792, 0, 1, 0.528832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477671,-99) , 
8, 0.435114, 1, 0, 0.485689,-99) , 
0, 0.492379, 1, 0, 0.491232,-99) , 
10, -0.428799, 1, 0, 0.501602,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0217763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85577, 0, 1, 0.505395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423624,-99) , 
8, 1.85994, 1, 0, 0.484596,-99) , 
9, -0.937094, 1, 0, 0.502428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47448,-99) , 
5, -0.0476266, 0, 0, 0.489226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440438,-99) , 
8, -0.429593, 0, 0, 0.475629,-99) , 
0, 0.492377, 0, 0, 0.499054,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0263121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494046,-99) , 
10, -0.691086, 1, 0, 0.502503,-99) , 
NN(
0, 
0, 
-1, -0.955615, 1, -1, 0.478536,-99) , 
2, 0.0719532, 1, 0, 0.498151,-99) , 
9, -0.0170143, 0, 0, 0.500246,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0191533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467277,-99) , 
3, 6.28311, 1, 0, 0.503327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457187,-99) , 
3, 8.21353, 1, 0, 0.501869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424808,-99) , 
10, -2.31316, 1, 0, 0.466047,-99) , 
9, -3.93746, 0, 0, 0.499489,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0333392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478839,-99) , 
10, 1.22909, 1, 0, 0.529265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498248,-99) , 
8, -0.242821, 0, 0, 0.513975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480865,-99) , 
5, -0.14287, 1, 0, 0.493639,-99) , 
10, -1.14927, 1, 0, 0.499065,-99) , 
8, 1.85703, 0, 0, 0.501889,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0252988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34511, 1, 1, 0.536405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452032,-99) , 
3, 4.22341, 0, 0, 0.475381,-99) , 
5, 0.523714, 1, 0, 0.515887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496234,-99) , 
10, -1.77435, 1, 0, 0.498945,-99) , 
NN(
0, 
0, 
-1, -3.97892, 0, -1, 0.465977,-99) , 
8, -1.2856, 0, 0, 0.496402,-99) , 
2, -0.0759521, 1, 0, 0.49974,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0178243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.19105, 0, 1, 0.519391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455134,-99) , 
4, 0.999796, 0, 0, 0.498724,-99) , 
5, 0.619006, 0, 0, 0.50392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441057,-99) , 
4, 0.998571, 0, 0, 0.502087,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0208728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498853,-99) , 
10, -0.697817, 1, 0, 0.505694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471805,-99) , 
9, -3.36313, 0, 0, 0.492188,-99) , 
8, 0.144862, 0, 0, 0.499493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464344,-99) , 
10, 2.23439, 1, 0, 0.498216,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0351046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471485,-99) , 
3, 6.13757, 1, 0, 0.507178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448926,-99) , 
4, 0.999619, 0, 0, 0.505167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480072,-99) , 
4, 0.999524, 1, 0, 0.493612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424379,-99) , 
10, 0.629182, 1, 0, 0.486404,-99) , 
5, 0.619006, 1, 0, 0.500177,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0389678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.965445, 0, 1, 0.535361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440045,-99) , 
8, -0.321769, 0, 0, 0.49851,-99) , 
10, -1.70122, 1, 0, 0.504145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464223,-99) , 
4, 0.999995, 0, 0, 0.490697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445298,-99) , 
4, 0.999905, 0, 0, 0.487901,-99) , 
5, 0.14283, 0, 0, 0.495618,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0350925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480782,-99) , 
8, -0.508813, 0, 0, 0.54542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488476,-99) , 
8, 0.524368, 0, 0, 0.500526,-99) , 
10, -1.17635, 1, 0, 0.505763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449056,-99) , 
5, 0.0476069, 1, 0, 0.470994,-99) , 
9, -3.1235, 0, 0, 0.486335,-99) , 
8, -0.713559, 0, 0, 0.502099,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.045948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494622,-99) , 
10, -0.953086, 0, 0, 0.57049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482179,-99) , 
8, 0.0425438, 0, 0, 0.500385,-99) , 
5, -0.523792, 1, 0, 0.510615,-99) , 
NN(
NN(
0, 
0, 
-1, -1.35177, 1, 1, 0.524787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486268,-99) , 
1, -0.00283878, 1, 0, 0.493976,-99) , 
8, -0.139216, 1, 0, 0.498978,-99) , 
9, -2.517, 1, 0, 0.503774,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0315118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4981, 1, 1, 0.580275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451,-99) , 
9, -4.09185, 0, 0, 0.493427,-99) , 
8, -0.796755, 0, 0, 0.520575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494877,-99) , 
10, -1.03208, 1, 0, 0.49849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451965,-99) , 
9, -3.25612, 0, 0, 0.495812,-99) , 
10, -1.452, 1, 0, 0.499856,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0290637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492343,-99) , 
5, -0.591892, 0, 0, 0.531614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465842,-99) , 
5, 0.428499, 1, 0, 0.518344,-99) , 
NN(
NN(
0, 
0, 
-1, 0.940995, 0, 1, 0.535265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489128,-99) , 
9, -2.23366, 0, 0, 0.496698,-99) , 
5, 0.904713, 0, 0, 0.499121,-99) , 
1, 0.0040614, 0, 0, 0.502216,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0224345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499975,-99) , 
9, -1.38372, 0, 0, 0.50404,-99) , 
8, 1.52906, 0, 0, 0.507963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527861,-99) , 
NN(
0, 
0, 
-1, 1.67092, 1, -1, 0.477764,-99) , 
8, 2.43604, 0, 0, 0.484803,-99) , 
10, 0.703282, 1, 0, 0.503016,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0320147);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.4285, 0, 1, 0.512505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492612,-99) , 
0, 0.503804, 1, 0, 0.514415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472283,-99) , 
9, -0.747486, 0, 0, 0.4779,-99) , 
2, -0.0729802, 1, 0, 0.485181,-99) , 
0, 0.500947, 1, 0, 0.50497,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0185804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497091,-99) , 
9, -1.2261, 1, 0, 0.532668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496186,-99) , 
9, -1.37309, 0, 0, 0.499255,-99) , 
8, 1.85712, 0, 0, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470689,-99) , 
10, 2.00394, 1, 0, 0.500577,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0147305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497802,-99) , 
5, -0.904756, 1, 0, 0.500112,-99) , 
8, 2.14269, 0, 0, 0.502149,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.480441,-99) , 
9, -0.530992, 1, 0, 0.500123,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.027704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.223179, 0, 1, 0.515565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491978,-99) , 
0, 0.500676, 0, 0, 0.500145,-99) , 
10, -0.619841, 1, 0, 0.506344,-99) , 
NN(
0, 
0, 
-1, 0.430633, 0, -1, 0.474822,-99) , 
0, 0.491424, 0, 0, 0.503532,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0283025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680353, 0, 1, 0.511129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447286,-99) , 
1, -0.0112194, 0, 0, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439138,-99) , 
1, 0.0119067, 1, 0, 0.506634,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0196986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496818,-99) , 
5, 0.142834, 1, 0, 0.504693,-99) , 
10, -2.46347, 1, 0, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457337,-99) , 
1, -0.0122449, 0, 0, 0.504385,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0222897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486533,-99) , 
3, 3.28187, 1, 0, 0.515808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495867,-99) , 
5, -0.909287, 1, 0, 0.498459,-99) , 
2, 0.0713332, 0, 0, 0.501601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467464,-99) , 
5, 0.904705, 1, 0, 0.499872,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0472099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30406, 0, 1, 0.562527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457776,-99) , 
8, -0.639567, 0, 0, 0.509711,-99) , 
10, -1.96997, 1, 0, 0.515132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491015,-99) , 
9, -2.51257, 1, 0, 0.501849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430629,-99) , 
9, -3.34046, 1, 0, 0.467262,-99) , 
10, -0.73131, 0, 0, 0.494106,-99) , 
5, -0.238113, 0, 0, 0.506402,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0269964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492253,-99) , 
10, -0.122363, 0, 0, 0.520168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49584,-99) , 
8, 1.33853, 0, 0, 0.501231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478971,-99) , 
9, -1.57402, 1, 0, 0.485244,-99) , 
10, 0.452218, 1, 0, 0.497009,-99) , 
1, -0.00733313, 1, 0, 0.498637,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0156076);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.11569, 1, 1, 0.507803,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0175426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499014,-99) , 
8, -1.64688, 0, 0, 0.532423,-99) , 
NN(
NN(
0, 
0, 
-1, -1.24919, 1, 1, 0.503881,-99) , 
NN(
0, 
0, 
-1, -2.77015, 0, -1, 0.470169,-99) , 
8, -0.714006, 0, 0, 0.499353,-99) , 
10, -2.12343, 1, 0, 0.501139,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0349737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462781,-99) , 
4, 0.999819, 0, 0, 0.50584,-99) , 
4, 0.999048, 1, 0, 0.509692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48462,-99) , 
5, 0.0611646, 0, 0, 0.495929,-99) , 
NN(
0, 
0, 
-1, -0.317204, 1, -1, 0.462434,-99) , 
5, 0.714194, 1, 0, 0.489415,-99) , 
0, 0.497138, 0, 0, 0.501217,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0314539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444302,-99) , 
5, 0.142791, 0, 0, 0.490049,-99) , 
8, -1.10649, 0, 0, 0.527671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494894,-99) , 
10, -1.27529, 1, 0, 0.49801,-99) , 
NN(
0, 
0, 
-1, 0.0470561, 1, -1, 0.477376,-99) , 
8, -0.424582, 0, 0, 0.494663,-99) , 
10, -1.6787, 1, 0, 0.498585,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0274358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482397,-99) , 
8, 0.167964, 0, 0, 0.508992,-99) , 
10, -1.22375, 1, 0, 0.520519,-99) , 
NN(
NN(
0, 
0, 
-1, -0.225496, 1, 1, 0.509101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476339,-99) , 
2, -0.00130413, 1, 0, 0.493116,-99) , 
0, 0.499042, 1, 0, 0.502351,-99) , 
2, 0.0733765, 0, 0, 0.505591,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0176174);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5662,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.495073,-99) , 
9, -4.32256, 1, 0, 0.497107,-99) , 
9, -0.0553645, 0, 0, 0.499825,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.02921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467987,-99) , 
3, 2.58813, 1, 0, 0.532614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492514,-99) , 
3, 0.936367, 1, 0, 0.497461,-99) , 
2, 0.136177, 0, 0, 0.500097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476221,-99) , 
9, -2.40724, 1, 0, 0.492683,-99) , 
NN(
0, 
0, 
-1, 0.498094, 0, -1, 0.456879,-99) , 
2, -0.0715338, 0, 0, 0.482274,-99) , 
3, 4.38175, 1, 0, 0.496678,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0133321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543251,-99) , 
NN(
0, 
0, 
-1, -3.55342, 0, -1, 0.497417,-99) , 
10, -1.7885, 1, 0, 0.499763,-99) , 
NN(
0, 
0, 
-1, 0.496188, 0, -1, 0.468749,-99) , 
8, -1.28536, 0, 0, 0.497429,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0319658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535742,-99) , 
NN(
NN(
0, 
0, 
-1, 1.24966, 0, 1, 0.510415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471017,-99) , 
8, 1.02691, 1, 0, 0.489891,-99) , 
10, 0.368228, 1, 0, 0.505307,-99) , 
9, -0.061088, 0, 0, 0.507124,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0227222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06051, 1, 1, 0.533966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478605,-99) , 
5, 0.809479, 1, 0, 0.502885,-99) , 
8, 1.8571, 0, 0, 0.505783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453053,-99) , 
4, 0.999048, 0, 0, 0.503514,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0245949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55035, 1, 1, 0.539613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478931,-99) , 
0, 0.5019, 1, 0, 0.49759,-99) , 
10, -1.29117, 1, 0, 0.501366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52325,-99) , 
NN(
0, 
0, 
-1, -0.333359, 1, -1, 0.474644,-99) , 
10, -2.50016, 1, 0, 0.481573,-99) , 
8, -0.714184, 0, 0, 0.497778,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0289478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.55875, 1, 1, 0.51026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457912,-99) , 
10, -2.00653, 0, 0, 0.507585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491628,-99) , 
8, 1.52017, 0, 0, 0.498613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447364,-99) , 
10, 0.628899, 1, 0, 0.493077,-99) , 
5, 0.333285, 1, 0, 0.501617,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0142096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493397,-99) , 
5, -0.238092, 0, 0, 0.509747,-99) , 
2, 0.0747238, 0, 0, 0.520839,-99) , 
NN(
0, 
0, 
-1, 0.214735, 1, -1, 0.495357,-99) , 
0, 0.503805, 0, 0, 0.498245,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0240728);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940996, 1, 1, 0.531354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488201,-99) , 
8, 0.428612, 0, 0, 0.496418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446277,-99) , 
4, 0.999048, 0, 0, 0.49482,-99) , 
5, 0.904715, 0, 0, 0.49682,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0210723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498166,-99) , 
9, -2.20771, 1, 0, 0.51079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460935,-99) , 
10, 0.612642, 1, 0, 0.495915,-99) , 
5, 0.23807, 1, 0, 0.50405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446007,-99) , 
8, -1.85693, 0, 0, 0.50258,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0442128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0616453, 1, 1, 0.547843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477086,-99) , 
8, 0.137996, 0, 0, 0.497314,-99) , 
9, -2.32123, 0, 0, 0.519896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493598,-99) , 
8, -0.170492, 0, 0, 0.504746,-99) , 
NN(
0, 
0, 
-1, 2.04674, 0, -1, 0.458748,-99) , 
8, 1.57065, 1, 0, 0.499267,-99) , 
5, 0.428536, 0, 0, 0.507055,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.019304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495122,-99) , 
8, 1.85676, 0, 0, 0.49793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46381,-99) , 
7, -951.286, 0, 0, 0.47714,-99) , 
10, 1.41072, 1, 0, 0.495839,-99) , 
9, -4.16231, 1, 0, 0.497315,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0727443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333459, 0, 1, 0.531792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458892,-99) , 
0, 0.491424, 0, 0, 0.501974,-99) , 
3, 4.26455, 0, 0, 0.508021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456347,-99) , 
7, -0.85245, 0, 0, 0.518937,-99) , 
NN(
0, 
0, 
-1, 0.715697, 1, -1, 0.286225,-99) , 
7, -1.49451, 0, 0, 0.490605,-99) , 
7, -951.286, 1, 0, 0.498372,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0164052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578169,-99) , 
NN(
0, 
0, 
-1, 1.091, 1, -1, 0.495658,-99) , 
10, -2.04629, 1, 0, 0.498434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464575,-99) , 
8, -1.57128, 0, 0, 0.496806,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0440361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487656,-99) , 
9, -1.67435, 0, 0, 0.493598,-99) , 
8, 1.24966, 0, 0, 0.498758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479923,-99) , 
2, 0.0529803, 0, 0, 0.487872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422176,-99) , 
5, 0.714245, 1, 0, 0.480525,-99) , 
10, 0.360262, 1, 0, 0.493422,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0429877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441383,-99) , 
10, -1.66509, 1, 0, 0.511557,-99) , 
8, -0.543801, 0, 0, 0.528672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489978,-99) , 
8, 2.1439, 0, 0, 0.494139,-99) , 
NN(
0, 
0, 
-1, 0.4981, 0, -1, 0.451509,-99) , 
10, 1.75192, 1, 0, 0.490916,-99) , 
10, -1.385, 1, 0, 0.497523,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.04261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495235, 1, 1, 0.531284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48751,-99) , 
9, -3.15801, 1, 0, 0.496472,-99) , 
1, -0.00111011, 1, 0, 0.509619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4705,-99) , 
9, -1.16549, 1, 0, 0.505361,-99) , 
NN(
0, 
0, 
-1, 0.259378, 1, -1, 0.484804,-99) , 
5, -0.428583, 1, 0, 0.492413,-99) , 
0, 0.499043, 1, 0, 0.502403,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0207193);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496272,-99) , 
10, -0.463754, 1, 0, 0.504062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468969,-99) , 
8, -1.70704, 0, 0, 0.502748,-99) , 
8, 2.42854, 0, 0, 0.504311,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0213106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41948, 1, 1, 0.515152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497035,-99) , 
9, -4.2457, 1, 0, 0.500051,-99) , 
5, -0.333347, 1, 0, 0.505724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460754,-99) , 
1, 0.0096605, 1, 0, 0.503622,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0273446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0747238, 0, 1, 0.523152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49146,-99) , 
5, 0.238082, 1, 0, 0.510926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493381,-99) , 
4, 0.999524, 1, 0, 0.496088,-99) , 
0, 0.495596, 1, 0, 0.501274,-99) , 
0, 0.502852, 0, 0, 0.504839,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0375831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.538527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495431,-99) , 
5, -0.523803, 0, 0, 0.51085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483715,-99) , 
5, -0.523778, 1, 0, 0.49465,-99) , 
9, -2.62786, 0, 0, 0.504792,-99) , 
2, -0.214379, 1, 0, 0.50655,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0292304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.53272, 1, 1, 0.555631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455764,-99) , 
9, -3.45462, 0, 0, 0.508696,-99) , 
4, 0.999524, 1, 0, 0.517546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4992,-99) , 
0, 0.491426, 1, 0, 0.502795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422758,-99) , 
4, 0.999714, 0, 0, 0.499682,-99) , 
5, 0.523774, 0, 0, 0.505538,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0312905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476918,-99) , 
4, 0.999909, 0, 0, 0.520837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492546,-99) , 
2, 0.0150196, 0, 0, 0.502823,-99) , 
2, -0.0592285, 1, 0, 0.50623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47885,-99) , 
4, 0.999048, 0, 0, 0.504972,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0253517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.758544, 0, 1, 0.512455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545565,-99) , 
NN(
0, 
0, 
-1, 0.714206, 1, -1, 0.489714,-99) , 
8, -0.419789, 1, 0, 0.493902,-99) , 
10, -0.208662, 1, 0, 0.503971,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0304327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487053,-99) , 
8, 1.57133, 1, 0, 0.509935,-99) , 
5, 0.904714, 0, 0, 0.511737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455858,-99) , 
8, -0.136818, 0, 0, 0.479024,-99) , 
10, 0.0897273, 0, 0, 0.487868,-99) , 
0, 0.503804, 1, 0, 0.508915,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0206149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.93765, 1, 1, 0.530681,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14224, 0, 1, 0.506783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463231,-99) , 
10, 1.59275, 1, 0, 0.50521,-99) , 
5, -0.904749, 1, 0, 0.507934,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0342435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499654,-99) , 
10, -1.46087, 1, 0, 0.537559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457628,-99) , 
4, 0.999048, 0, 0, 0.504671,-99) , 
9, -3.13582, 1, 0, 0.508535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450711,-99) , 
10, -2.48977, 1, 0, 0.466519,-99) , 
9, -2.98797, 0, 0, 0.48706,-99) , 
8, -0.71404, 0, 0, 0.504618,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0397444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470116,-99) , 
10, -0.772822, 0, 0, 0.505877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484667,-99) , 
1, 0.00331795, 0, 0, 0.492343,-99) , 
5, -0.238106, 1, 0, 0.497657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458558,-99) , 
10, 2.14402, 1, 0, 0.496134,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0389246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492668,-99) , 
10, -0.552632, 1, 0, 0.556972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451625,-99) , 
0, 0.492377, 0, 0, 0.505285,-99) , 
8, 0.472686, 0, 0, 0.512154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484627,-99) , 
8, 0.146111, 1, 0, 0.489185,-99) , 
0, 0.504757, 0, 0, 0.492187,-99) , 
10, -0.332412, 1, 0, 0.502236,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0277374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494194,-99) , 
10, -1.23199, 1, 0, 0.49819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469647,-99) , 
0, 0.500947, 0, 0, 0.485301,-99) , 
8, -0.673167, 0, 0, 0.495578,-99) , 
8, 2.42853, 0, 0, 0.497202,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.03127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.901811, 1, 1, 0.511615,-99) , 
NN(
0, 
0, 
-1, -2.23821, 1, -1, 0.463819,-99) , 
4, 0.999524, 0, 0, 0.508282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410561,-99) , 
10, -1.49075, 1, 0, 0.480012,-99) , 
5, -0.333331, 1, 0, 0.489346,-99) , 
9, -3.28108, 0, 0, 0.504851,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0233783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480526,-99) , 
9, -1.12413, 1, 0, 0.516487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492738,-99) , 
9, -1.17634, 0, 0, 0.495513,-99) , 
8, 1.85703, 0, 0, 0.497438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468049,-99) , 
5, 0.904712, 1, 0, 0.495985,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0160052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495762,-99) , 
0, 0.492968, 1, 0, 0.497997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463181,-99) , 
0, 0.48952, 0, 0, 0.496818,-99) , 
2, -0.214179, 1, 0, 0.498722,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0296872);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498183,-99) , 
8, 0.135354, 0, 0, 0.512969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487917,-99) , 
8, 1.00076, 0, 0, 0.498101,-99) , 
10, -0.712939, 1, 0, 0.503686,-99) , 
0, 0.48952, 1, 0, 0.505367,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0343095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470088,-99) , 
8, 2.3469, 1, 0, 0.500359,-99) , 
9, -1.17638, 1, 0, 0.535952,-99) , 
NN(
NN(
0, 
0, 
-1, -0.178745, 0, 1, 0.516586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488418,-99) , 
2, -0.071423, 1, 0, 0.493024,-99) , 
10, -1.06538, 1, 0, 0.499839,-99) , 
8, 1.8571, 0, 0, 0.503132,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.06899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714634, 0, 1, 0.532625,-99) , 
NN(
0, 
0, 
-1, 0.716229, 1, -1, 0.30381,-99) , 
7, -1.57755, 0, 0, 0.508014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490042,-99) , 
9, -2.07254, 0, 0, 0.505515,-99) , 
NN(
0, 
0, 
-1, 2.47019, 1, -1, 0.487384,-99) , 
5, 0.0475857, 0, 0, 0.494539,-99) , 
7, -949.779, 0, 0, 0.501991,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0380647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491945,-99) , 
1, -0.00134846, 1, 0, 0.503113,-99) , 
8, 0.813804, 0, 0, 0.509719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483838,-99) , 
0, 0.502851, 0, 0, 0.489359,-99) , 
8, -0.423319, 1, 0, 0.493378,-99) , 
10, -0.177718, 1, 0, 0.502298,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0317859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.435207, 0, 1, 0.552598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493408,-99) , 
5, -0.0476367, 1, 0, 0.507241,-99) , 
10, -0.561301, 1, 0, 0.513929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496443,-99) , 
10, -1.42085, 1, 0, 0.515618,-99) , 
NN(
0, 
0, 
-1, 4.04456, 1, -1, 0.491183,-99) , 
0, 0.501899, 0, 0, 0.496279,-99) , 
8, 0.143974, 0, 0, 0.505983,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0370922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49918,-99) , 
4, 0.999955, 0, 0, 0.514646,-99) , 
4, 0.999048, 1, 0, 0.516657,-99) , 
NN(
0, 
0, 
-1, 0.142785, 0, -1, 0.470145,-99) , 
0, 0.503804, 1, 0, 0.511118,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.033906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468911,-99) , 
10, -1.57557, 1, 0, 0.505789,-99) , 
8, -0.378748, 0, 0, 0.520724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483967,-99) , 
9, -1.34004, 1, 0, 0.522129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495764,-99) , 
9, -1.21739, 0, 0, 0.500012,-99) , 
8, 1.57184, 0, 0, 0.503803,-99) , 
10, -1.298, 1, 0, 0.507149,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0225012);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545759,-99) , 
NN(
NN(
0, 
0, 
-1, 1.13978, 0, 1, 0.531942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472356,-99) , 
10, 0.553205, 1, 0, 0.500041,-99) , 
9, -0.730639, 0, 0, 0.503472,-99) , 
8, 2.42853, 0, 0, 0.504783,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0439318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490133,-99) , 
10, -0.49356, 1, 0, 0.559289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448146,-99) , 
4, 0.999524, 0, 0, 0.503851,-99) , 
9, -2.34443, 1, 0, 0.514243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49103,-99) , 
5, -0.904776, 0, 0, 0.523928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485656,-99) , 
5, -0.714244, 1, 0, 0.493169,-99) , 
9, -1.98321, 0, 0, 0.499604,-99) , 
8, 0.428622, 0, 0, 0.506215,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0337063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481127,-99) , 
9, -3.34475, 0, 0, 0.504277,-99) , 
8, 0.0404592, 0, 0, 0.516414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476023,-99) , 
9, -2.63354, 0, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463656,-99) , 
4, 0.999524, 0, 0, 0.498708,-99) , 
10, -0.821338, 1, 0, 0.504735,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.019657);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499463,-99) , 
8, 1.3941, 0, 0, 0.503124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427405,-99) , 
5, -0.238208, 1, 0, 0.487341,-99) , 
10, 0.545078, 1, 0, 0.499481,-99) , 
8, 2.42843, 0, 0, 0.501075,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0213909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499584,-99) , 
7, -951.286, 1, 0, 0.505866,-99) , 
9, -4.38638, 1, 0, 0.507761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515916,-99) , 
NN(
0, 
0, 
-1, -0.904722, 1, -1, 0.462872,-99) , 
9, -0.484349, 1, 0, 0.479873,-99) , 
10, 1.28368, 1, 0, 0.504652,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0198657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464831,-99) , 
9, -3.79599, 0, 0, 0.504831,-99) , 
10, -2.24741, 1, 0, 0.506283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463004,-99) , 
8, -1.85676, 0, 0, 0.505167,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0283618);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.41713, 1, 1, 0.551904,-99) , 
NN(
NN(
0, 
0, 
-1, 1.11687, 0, 1, 0.507871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474263,-99) , 
8, 1.00303, 1, 0, 0.487177,-99) , 
10, 0.154462, 1, 0, 0.50028,-99) , 
10, -2.09897, 1, 0, 0.503116,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0350421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4948,-99) , 
1, -0.00602228, 1, 0, 0.498302,-99) , 
8, 1.36302, 0, 0, 0.502386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479724,-99) , 
9, -0.928456, 1, 0, 0.499623,-99) , 
NN(
0, 
0, 
-1, 2.08932, 0, -1, 0.442291,-99) , 
5, -0.238104, 1, 0, 0.48213,-99) , 
10, 0.504219, 1, 0, 0.497222,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0376693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499756,-99) , 
9, -2.20969, 0, 0, 0.503862,-99) , 
8, 0.759813, 0, 0, 0.510511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480125,-99) , 
9, -1.01118, 1, 0, 0.512272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471034,-99) , 
9, -0.25574, 0, 0, 0.477934,-99) , 
8, 0.723995, 1, 0, 0.488871,-99) , 
10, -0.208662, 1, 0, 0.500572,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0405691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481,-99) , 
10, -0.216148, 1, 0, 0.505977,-99) , 
8, 1.3048, 0, 0, 0.510318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481142,-99) , 
9, -1.10472, 1, 0, 0.496036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41301,-99) , 
5, 0.714243, 1, 0, 0.487523,-99) , 
10, 0.4502, 1, 0, 0.504179,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0294367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85708, 0, 1, 0.512764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48198,-99) , 
9, -2.60484, 1, 0, 0.494999,-99) , 
0, 0.495778, 0, 0, 0.506802,-99) , 
NN(
0, 
0, 
-1, 0.141729, 1, -1, 0.481091,-99) , 
0, 0.504757, 1, 0, 0.504753,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0359899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47571,-99) , 
3, 4.04555, 1, 0, 0.508942,-99) , 
8, -0.0223177, 0, 0, 0.518061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486111,-99) , 
9, -2.35924, 1, 0, 0.491725,-99) , 
9, -0.106728, 0, 0, 0.494785,-99) , 
10, -0.902905, 1, 0, 0.502087,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0224517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493864,-99) , 
3, 2.3799, 1, 0, 0.516702,-99) , 
5, 0.80947, 0, 0, 0.523931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474141,-99) , 
4, 0.999955, 0, 0, 0.495016,-99) , 
4, 0.999048, 1, 0, 0.497105,-99) , 
2, 0.0713191, 0, 0, 0.501954,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0212991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478466,-99) , 
7, -951.287, 0, 0, 0.499617,-99) , 
9, -1.11547, 1, 0, 0.528197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
0, 0.500948, 0, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451262,-99) , 
8, -1.84333, 0, 0, 0.499513,-99) , 
8, 1.85713, 0, 0, 0.502111,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0226528);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499075,-99) , 
10, 0.138921, 1, 0, 0.516839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496319,-99) , 
10, -1.82636, 1, 0, 0.500321,-99) , 
8, 1.00004, 0, 0, 0.504858,-99) , 
0, 0.48952, 1, 0, 0.506445,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0259561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454848,-99) , 
9, -1.07244, 0, 0, 0.490237,-99) , 
9, -1.45719, 1, 0, 0.516907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49517,-99) , 
9, -2.03443, 0, 0, 0.500046,-99) , 
NN(
0, 
0, 
-1, 0.265461, 1, -1, 0.4812,-99) , 
2, -0.074625, 0, 0, 0.496731,-99) , 
8, 1.57147, 0, 0, 0.499463,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0131937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493483,-99) , 
9, -2.56591, 1, 0, 0.526706,-99) , 
NN(
NN(
0, 
0, 
-1, 7.94704, 0, 1, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433767,-99) , 
4, 0.999728, 0, 0, 0.500239,-99) , 
4, 0.999524, 1, 0, 0.502218,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.016736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496857,-99) , 
10, -1.95964, 1, 0, 0.498746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459421,-99) , 
8, -1.27913, 0, 0, 0.49675,-99) , 
10, -2.45982, 1, 0, 0.498702,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0316394);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.03124, 0, 1, 0.512392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519989,-99) , 
NN(
0, 
0, 
-1, 1.69811, 0, -1, 0.46046,-99) , 
9, -1.12448, 1, 0, 0.4849,-99) , 
5, -0.809516, 0, 0, 0.507472,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0242607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.405924, 0, 1, 0.531799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487094,-99) , 
8, -0.0593382, 0, 0, 0.501525,-99) , 
10, -1.29918, 1, 0, 0.50615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456374,-99) , 
10, -2.30364, 1, 0, 0.480538,-99) , 
8, -1.28336, 0, 0, 0.5042,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0469661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530654,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.505894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364695,-99) , 
7, -1.14408, 0, 0, 0.490009,-99) , 
7, -950.08, 1, 0, 0.497119,-99) , 
2, 0.214165, 0, 0, 0.498691,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0310965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498239,-99) , 
2, 0.00331367, 0, 0, 0.509921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466949,-99) , 
0, 0.49528, 1, 0, 0.486503,-99) , 
2, -0.0715266, 0, 0, 0.505824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491598,-99) , 
8, 0.876397, 0, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.466873,-99) , 
10, 0.205089, 1, 0, 0.488377,-99) , 
0, 0.499996, 1, 0, 0.499734,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0323131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465071,-99) , 
0, 0.496189, 0, 0, 0.498454,-99) , 
5, 0.863903, 1, 0, 0.518477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493059,-99) , 
3, 2.15808, 0, 0, 0.497209,-99) , 
NN(
0, 
0, 
-1, 0.0683939, 1, -1, 0.482364,-99) , 
3, 2.37252, 1, 0, 0.490687,-99) , 
5, 0.809479, 0, 0, 0.494341,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0460947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479996,-99) , 
10, -1.09569, 1, 0, 0.554998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490207,-99) , 
10, -2.47633, 1, 0, 0.499841,-99) , 
8, -0.194778, 0, 0, 0.512251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469949,-99) , 
3, 4.27078, 1, 0, 0.519869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484778,-99) , 
8, -0.420207, 1, 0, 0.488357,-99) , 
0, 0.494283, 1, 0, 0.49507,-99) , 
10, -0.901628, 1, 0, 0.500431,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0224217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.06955, 0, 1, 0.550866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488981,-99) , 
0, 0.495234, 0, 0, 0.499842,-99) , 
10, -1.65357, 1, 0, 0.503199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447239,-99) , 
8, -1.22828, 0, 0, 0.478266,-99) , 
9, -3.91043, 0, 0, 0.501523,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0176666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540558,-99) , 
NN(
0, 
0, 
-1, -3.40544, 0, -1, 0.495034,-99) , 
10, -1.81455, 1, 0, 0.497159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446055,-99) , 
10, -2.47326, 1, 0, 0.475394,-99) , 
9, -3.9343, 0, 0, 0.495753,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0374679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47585,-99) , 
10, -0.477085, 1, 0, 0.501041,-99) , 
8, 1.1166, 0, 0, 0.506768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495525,-99) , 
0, 0.492379, 1, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415013,-99) , 
5, 0.714244, 1, 0, 0.491258,-99) , 
10, 0.156658, 1, 0, 0.501407,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0274485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489296,-99) , 
5, 0.714196, 1, 0, 0.516091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47049,-99) , 
8, 0.725824, 0, 0, 0.491462,-99) , 
2, -0.0762289, 0, 0, 0.511568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530848,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.493928,-99) , 
4, 0.999524, 1, 0, 0.496448,-99) , 
0, 0.497138, 1, 0, 0.502747,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0280035);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.2144, 1, 1, 0.513076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508159,-99) , 
NN(
0, 
0, 
-1, -1.85711, 1, -1, 0.477264,-99) , 
10, -1.44563, 0, 0, 0.487212,-99) , 
8, -0.714218, 0, 0, 0.508274,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.03862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470403,-99) , 
10, 0.497499, 1, 0, 0.504935,-99) , 
9, -0.794573, 0, 0, 0.50766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48512,-99) , 
9, -0.810183, 1, 0, 0.507114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403567,-99) , 
9, -2.05543, 1, 0, 0.471029,-99) , 
10, 0.378612, 0, 0, 0.491758,-99) , 
5, -0.619054, 0, 0, 0.503061,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0350294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.913792, 1, 1, 0.573454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462981,-99) , 
9, -0.883748, 1, 0, 0.529381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495261,-99) , 
9, -1.64651, 0, 0, 0.501376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481807,-99) , 
9, -2.56514, 1, 0, 0.490867,-99) , 
5, -0.428575, 0, 0, 0.497464,-99) , 
8, 1.85712, 0, 0, 0.500412,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0429554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00352494, 0, 1, 0.529625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445547,-99) , 
5, 0.523686, 0, 0, 0.481398,-99) , 
2, 0.0713112, 1, 0, 0.51546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48318,-99) , 
3, 2.41213, 1, 0, 0.517361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484488,-99) , 
1, 0.00224338, 0, 0, 0.492614,-99) , 
2, 0.050396, 0, 0, 0.49731,-99) , 
3, 4.1246, 0, 0, 0.501213,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0292003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.994787, 1, 1, 0.532991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470796,-99) , 
0, 0.49374, 1, 0, 0.493917,-99) , 
0, 0.496189, 0, 0, 0.519718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496088,-99) , 
8, 1.24976, 0, 0, 0.500711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458051,-99) , 
8, 1.6575, 0, 0, 0.476998,-99) , 
10, 0.347996, 1, 0, 0.497574,-99) , 
10, 0.835097, 0, 0, 0.501814,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0261973);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.26524, 0, 1, 0.510522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571014,-99) , 
NN(
0, 
0, 
-1, 0.523773, 1, -1, 0.487184,-99) , 
9, -1.66754, 1, 0, 0.496743,-99) , 
10, 0.379509, 1, 0, 0.506552,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0334318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497106,-99) , 
8, -0.215923, 0, 0, 0.556124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43819,-99) , 
9, -2.99025, 0, 0, 0.498774,-99) , 
10, -1.10751, 1, 0, 0.503851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480691,-99) , 
9, -1.81233, 1, 0, 0.520327,-99) , 
NN(
0, 
0, 
-1, -1.61904, 1, -1, 0.469491,-99) , 
9, -2.699, 0, 0, 0.483734,-99) , 
8, -0.428515, 0, 0, 0.498562,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0330589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.75429, 1, 1, 0.577416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454335,-99) , 
10, -2.34852, 1, 0, 0.498726,-99) , 
8, -1.08361, 0, 0, 0.536644,-99) , 
NN(
NN(
0, 
0, 
-1, 0.714246, 0, 1, 0.510728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488569,-99) , 
5, -0.619055, 1, 0, 0.496149,-99) , 
0, 0.499044, 0, 0, 0.502292,-99) , 
9, -3.56512, 1, 0, 0.506095,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0262883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.785833, 1, 1, 0.511586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470983,-99) , 
8, -0.714006, 0, 0, 0.49773,-99) , 
0, 0.497818, 1, 0, 0.506045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493975,-99) , 
9, -1.69612, 1, 0, 0.510339,-99) , 
NN(
0, 
0, 
-1, -3.42277, 1, -1, 0.470486,-99) , 
8, 0.428727, 0, 0, 0.488343,-99) , 
0, 0.5019, 1, 0, 0.502239,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0237788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477747,-99) , 
5, -0.428603, 0, 0, 0.507499,-99) , 
1, 0.00410023, 0, 0, 0.515058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494775,-99) , 
8, 1.28566, 0, 0, 0.498317,-99) , 
NN(
0, 
0, 
-1, 0.618948, 1, -1, 0.483464,-99) , 
0, 0.494282, 0, 0, 0.495377,-99) , 
2, -0.0715266, 1, 0, 0.498867,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0307592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468852,-99) , 
10, -2.03516, 1, 0, 0.503711,-99) , 
8, -0.854474, 0, 0, 0.526909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493211,-99) , 
9, -0.65575, 0, 0, 0.497016,-99) , 
8, 2.42854, 0, 0, 0.498909,-99) , 
10, -1.50688, 1, 0, 0.503174,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0377484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472251,-99) , 
5, -0.333312, 0, 0, 0.523373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486985,-99) , 
0, 0.494283, 0, 0, 0.501953,-99) , 
10, -0.831781, 1, 0, 0.50596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47756,-99) , 
8, -0.834925, 0, 0, 0.507372,-99) , 
NN(
0, 
0, 
-1, -0.256687, 0, -1, 0.443624,-99) , 
10, -1.50844, 1, 0, 0.487763,-99) , 
9, -3.25862, 0, 0, 0.502551,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0332755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523949, 0, 1, 0.533155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474435,-99) , 
5, 0.428541, 1, 0, 0.520485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471998,-99) , 
8, -1.4176, 0, 0, 0.525897,-99) , 
NN(
0, 
0, 
-1, 4.38438, 1, -1, 0.489878,-99) , 
10, -1.95145, 1, 0, 0.49266,-99) , 
1, 0.0040614, 0, 0, 0.497263,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0319422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53388, 1, 1, 0.531222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451445,-99) , 
9, -4.01269, 0, 0, 0.489694,-99) , 
8, -0.781607, 0, 0, 0.511644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485608,-99) , 
5, -0.238108, 1, 0, 0.494149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460216,-99) , 
10, 2.17325, 1, 0, 0.492371,-99) , 
10, -0.997049, 1, 0, 0.497866,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0260255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476062,-99) , 
5, 0.809429, 1, 0, 0.509368,-99) , 
0, 0.503803, 0, 0, 0.514925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497942,-99) , 
2, -0.0613254, 1, 0, 0.504983,-99) , 
NN(
0, 
0, 
-1, 0.428535, 1, -1, 0.481492,-99) , 
3, 2.65269, 1, 0, 0.49937,-99) , 
3, 4.21945, 0, 0, 0.502568,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0272921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494607,-99) , 
8, -1.288, 0, 0, 0.531928,-99) , 
NN(
NN(
0, 
0, 
-1, -3.20125, 1, 1, 0.509042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449527,-99) , 
9, -3.46171, 0, 0, 0.496952,-99) , 
8, -0.142627, 0, 0, 0.505416,-99) , 
10, -1.94801, 1, 0, 0.50744,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0267594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424225,-99) , 
10, -1.58798, 1, 0, 0.5054,-99) , 
8, -0.307389, 0, 0, 0.520118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498661,-99) , 
8, 1.8571, 0, 0, 0.502068,-99) , 
NN(
0, 
0, 
-1, 0.497137, 1, -1, 0.461769,-99) , 
4, 0.999524, 0, 0, 0.499349,-99) , 
9, -3.28405, 1, 0, 0.502972,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0321689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488028,-99) , 
2, -0.0073885, 1, 0, 0.516589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480702,-99) , 
0, 0.493329, 0, 0, 0.498095,-99) , 
2, 0.00330117, 1, 0, 0.506322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
8, -0.444466, 0, 0, 0.516842,-99) , 
NN(
0, 
0, 
-1, 4.08056, 1, -1, 0.468771,-99) , 
9, -2.76396, 1, 0, 0.484645,-99) , 
2, -0.0715266, 0, 0, 0.502457,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0264015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472704,-99) , 
0, 0.498092, 1, 0, 0.500044,-99) , 
8, -0.543876, 0, 0, 0.517139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497892,-99) , 
9, -3.07942, 1, 0, 0.500788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446127,-99) , 
2, 0.0713332, 1, 0, 0.484729,-99) , 
3, 4.1245, 1, 0, 0.497369,-99) , 
10, -1.34964, 1, 0, 0.501042,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0329681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496304,-99) , 
9, -0.897403, 1, 0, 0.536442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496876,-99) , 
5, -0.714311, 0, 0, 0.526877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487062,-99) , 
9, -1.86347, 1, 0, 0.506559,-99) , 
9, -1.08209, 0, 0, 0.509531,-99) , 
8, 2.14277, 0, 0, 0.511084,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.022768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49402,-99) , 
9, -2.63065, 0, 0, 0.503772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442173,-99) , 
4, 0.999728, 0, 0, 0.501764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441142,-99) , 
9, -2.57221, 1, 0, 0.471269,-99) , 
4, 0.999524, 0, 0, 0.499589,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.027402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.789838, 0, 1, 0.511944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48565,-99) , 
8, 0.687145, 1, 0, 0.493075,-99) , 
10, -0.162802, 1, 0, 0.50332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435832,-99) , 
8, -1.85693, 0, 0, 0.501595,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0167831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0572978, 0, 1, 0.505078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46784,-99) , 
8, 0.144735, 0, 0, 0.486423,-99) , 
3, 4.23371, 1, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447865,-99) , 
4, 0.998572, 0, 0, 0.499709,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0237642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482373,-99) , 
10, 0.802165, 1, 0, 0.521339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492723,-99) , 
10, -1.21515, 1, 0, 0.497062,-99) , 
8, 1.6529, 0, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465727,-99) , 
8, 2.4285, 1, 0, 0.498471,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0266828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495503,-99) , 
1, -0.00357725, 1, 0, 0.502613,-99) , 
9, -0.105119, 0, 0, 0.504644,-99) , 
NN(
0, 
0, 
-1, 0.428335, 0, -1, 0.469254,-99) , 
0, 0.491425, 0, 0, 0.501534,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0341959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.358448, 0, 1, 0.532273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495849,-99) , 
8, 0.714252, 0, 0, 0.508964,-99) , 
9, -3.0933, 1, 0, 0.514036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490633,-99) , 
0, 0.504988, 0, 0, 0.496946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456492,-99) , 
0, 0.506163, 1, 0, 0.493037,-99) , 
0, 0.499995, 1, 0, 0.506701,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0380699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497904,-99) , 
3, 3.16986, 1, 0, 0.513713,-99) , 
NN(
0, 
0, 
-1, -0.071946, 0, -1, 0.489502,-99) , 
3, 4.38613, 1, 0, 0.509177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45633,-99) , 
10, -1.63336, 1, 0, 0.48941,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.434869,-99) , 
8, -1.25487, 0, 0, 0.472573,-99) , 
9, -3.28405, 0, 0, 0.502481,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0290298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494289,-99) , 
5, -0.61452, 0, 0, 0.507056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483065,-99) , 
2, 0.0965755, 0, 0, 0.489614,-99) , 
5, 0.619006, 1, 0, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453541,-99) , 
4, 0.998572, 0, 0, 0.501285,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0274716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476036,-99) , 
9, -3.90465, 0, 0, 0.507785,-99) , 
NN(
0, 
0, 
-1, -0.0476407, 1, -1, 0.476329,-99) , 
0, 0.490472, 0, 0, 0.50585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498878,-99) , 
0, 0.498091, 1, 0, 0.507684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407964,-99) , 
5, -0.14285, 1, 0, 0.477739,-99) , 
1, 0.00682455, 1, 0, 0.503517,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0140639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499204,-99) , 
8, 2.1311, 0, 0, 0.501526,-99) , 
NN(
0, 
0, 
-1, -0.809558, 1, -1, 0.477271,-99) , 
10, 1.32522, 1, 0, 0.498947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451874,-99) , 
4, 0.999048, 0, 0, 0.496895,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0170272);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486358,-99) , 
2, 0.0727031, 1, 0, 0.500672,-99) , 
NN(
0, 
0, 
-1, 0.434772, 0, -1, 0.480345,-99) , 
0, 0.493828, 0, 0, 0.497407,-99) , 
0, 0.48952, 1, 0, 0.49867,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0265199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940995, 1, 1, 0.534048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480775,-99) , 
9, -3.7472, 0, 0, 0.513966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486407,-99) , 
8, 0.387804, 0, 0, 0.497104,-99) , 
8, -0.428522, 1, 0, 0.501531,-99) , 
5, 0.904713, 0, 0, 0.503351,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0211978);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49168,-99) , 
0, 0.495234, 1, 0, 0.496337,-99) , 
9, -4.1799, 1, 0, 0.497743,-99) , 
8, 2.42852, 0, 0, 0.499332,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0196739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495678,-99) , 
10, 0.0643658, 1, 0, 0.503314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453029,-99) , 
10, -1.65508, 0, 0, 0.47414,-99) , 
8, -0.995367, 0, 0, 0.500507,-99) , 
10, -2.46347, 1, 0, 0.501657,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0457376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904778, 0, 1, 0.534173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428355,-99) , 
5, 0.523778, 1, 0, 0.490029,-99) , 
8, 1.28759, 1, 0, 0.513843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48558,-99) , 
5, -0.809513, 1, 0, 0.489504,-99) , 
8, 1.50127, 0, 0, 0.494788,-99) , 
9, -1.39431, 0, 0, 0.499306,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0332376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437647, 0, 1, 0.551753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485817,-99) , 
8, 0.959176, 0, 0, 0.49825,-99) , 
10, -0.56714, 1, 0, 0.506008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491507,-99) , 
8, -0.30631, 0, 0, 0.502966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463833,-99) , 
9, -2.35615, 0, 0, 0.483356,-99) , 
10, -1.19146, 1, 0, 0.493501,-99) , 
8, 0.1429, 0, 0, 0.500386,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0320371);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.619046, 0, 1, 0.524514,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483966,-99) , 
3, 5.24264, 0, 0, 0.489674,-99) , 
2, -0.00350627, 1, 0, 0.501104,-99) , 
2, 0.0713191, 0, 0, 0.505372,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0350014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45496,-99) , 
3, 7.51439, 1, 0, 0.500888,-99) , 
8, 1.05769, 0, 0, 0.506313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481725,-99) , 
9, -1.38873, 1, 0, 0.49929,-99) , 
NN(
0, 
0, 
-1, 1.49746, 0, -1, 0.46734,-99) , 
5, -0.428582, 1, 0, 0.485823,-99) , 
10, 0.127924, 1, 0, 0.498975,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0199551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42679, 0, 1, 0.519315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494607,-99) , 
10, -2.09897, 1, 0, 0.496837,-99) , 
0, 0.492377, 1, 0, 0.499524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437174,-99) , 
4, 0.998571, 0, 0, 0.497823,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0289848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05539, 0, 1, 0.556874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496727,-99) , 
0, 0.504757, 0, 0, 0.501329,-99) , 
9, -3.21168, 1, 0, 0.508612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493825,-99) , 
10, -1.62851, 1, 0, 0.500024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429937,-99) , 
3, 2.48575, 0, 0, 0.459238,-99) , 
5, 0.274356, 0, 0, 0.494095,-99) , 
5, 0.0476038, 1, 0, 0.50127,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0350432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496017,-99) , 
8, -0.256154, 0, 0, 0.56001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494565,-99) , 
5, -0.142873, 1, 0, 0.50477,-99) , 
10, -1.0973, 1, 0, 0.509868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494142,-99) , 
10, -2.23771, 1, 0, 0.516065,-99) , 
NN(
0, 
0, 
-1, -1.16315, 0, -1, 0.477762,-99) , 
5, 0.142799, 0, 0, 0.493218,-99) , 
8, -0.428476, 0, 0, 0.505516,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0307878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457143,-99) , 
3, 2.01458, 0, 0, 0.481406,-99) , 
8, -1.28209, 0, 0, 0.527898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497326,-99) , 
0, 0.49714, 1, 0, 0.504766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454566,-99) , 
8, -1.25708, 1, 0, 0.477841,-99) , 
8, -0.713064, 0, 0, 0.501719,-99) , 
10, -1.9356, 1, 0, 0.503752,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0399373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495631,-99) , 
9, -0.61684, 1, 0, 0.538883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497732,-99) , 
10, -1.11163, 1, 0, 0.506066,-99) , 
10, 0.174145, 0, 0, 0.511134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481882,-99) , 
8, 0.889531, 0, 0, 0.541828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
9, -0.0931578, 0, 0, 0.48609,-99) , 
10, -0.00312975, 1, 0, 0.498836,-99) , 
8, 0.71443, 1, 0, 0.506757,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0242072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.222367, 0, 1, 0.508423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450922,-99) , 
0, 0.497138, 0, 0, 0.487665,-99) , 
8, -0.999645, 0, 0, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454415,-99) , 
4, 0.998571, 0, 0, 0.50437,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0136854);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.626225, 0, 1, 0.50495,-99) , 
NN(
0, 
0, 
-1, 1.23108, 1, -1, 0.472548,-99) , 
10, 1.52147, 1, 0, 0.502225,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.024323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499172,-99) , 
2, -0.00369833, 0, 0, 0.506171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469868,-99) , 
5, 0.904715, 1, 0, 0.504404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479452,-99) , 
0, 0.499045, 0, 0, 0.499167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451115,-99) , 
8, -0.428604, 0, 0, 0.486545,-99) , 
2, 0.0708574, 1, 0, 0.501123,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0312404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00546074, 0, 1, 0.512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410841,-99) , 
1, 0.0127411, 1, 0, 0.508973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451283,-99) , 
1, -0.0108299, 0, 0, 0.506783,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.03449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61889, 0, 1, 0.533132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487328,-99) , 
9, -1.5425, 1, 0, 0.502236,-99) , 
10, -0.222057, 1, 0, 0.518822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497935,-99) , 
5, 0.904687, 0, 0, 0.502073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475468,-99) , 
5, -0.619035, 1, 0, 0.48556,-99) , 
9, -2.57228, 0, 0, 0.495514,-99) , 
2, 0.0717946, 0, 0, 0.499708,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0336519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715709, 1, 1, 0.544212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498745,-99) , 
8, -0.990209, 1, 0, 0.504755,-99) , 
3, 4.00091, 0, 0, 0.514426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48632,-99) , 
8, 1.28636, 1, 0, 0.511258,-99) , 
NN(
0, 
0, 
-1, -3.8083, 0, -1, 0.484949,-99) , 
9, -1.38889, 0, 0, 0.490925,-99) , 
0, 0.500948, 0, 0, 0.497269,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.044528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.587099, 1, 1, 0.576547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483635,-99) , 
8, 1.28586, 0, 0, 0.500204,-99) , 
10, -0.317494, 1, 0, 0.513133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490991,-99) , 
5, -0.523851, 0, 0, 0.511891,-99) , 
NN(
0, 
0, 
-1, -0.939414, 1, -1, 0.484444,-99) , 
9, -2.83291, 0, 0, 0.497353,-99) , 
8, 0.428622, 0, 0, 0.504486,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0379678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48954,-99) , 
10, -0.0406956, 1, 0, 0.508752,-99) , 
8, 1.77001, 0, 0, 0.511458,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498097, 0, 1, 0.522063,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.459662,-99) , 
8, 1.41432, 1, 0, 0.49109,-99) , 
10, 0.967681, 1, 0, 0.508124,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0264487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.504937, 0, 1, 0.533856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498108,-99) , 
9, -1.50348, 0, 0, 0.504386,-99) , 
10, -1.13146, 1, 0, 0.508031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498181,-99) , 
0, 0.498092, 0, 0, 0.511653,-99) , 
NN(
0, 
0, 
-1, -1.17082, 0, -1, 0.45972,-99) , 
7, -951.286, 1, 0, 0.478266,-99) , 
9, -3.41502, 0, 0, 0.5036,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0277157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488669,-99) , 
5, 0.279178, 1, 0, 0.540634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466634,-99) , 
10, 2.19288, 1, 0, 0.503777,-99) , 
9, -3.4152, 1, 0, 0.506621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482359,-99) , 
0, 0.498096, 0, 0, 0.505768,-99) , 
NN(
0, 
0, 
-1, -1.77136, 0, -1, 0.455109,-99) , 
5, 0.0475363, 0, 0, 0.475932,-99) , 
8, -0.999691, 0, 0, 0.502726,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0308544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.48783, 0, 1, 0.545167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484681,-99) , 
10, 0.727086, 1, 0, 0.505456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477932,-99) , 
9, -1.6507, 0, 0, 0.486656,-99) , 
3, 4.17442, 1, 0, 0.501514,-99) , 
10, -2.04389, 1, 0, 0.504157,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0791093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485836,-99) , 
5, 0.238046, 0, 0, 0.542155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390792,-99) , 
7, -0.954662, 0, 0, 0.481876,-99) , 
7, 0.260026, 0, 0, 0.505482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487963,-99) , 
0, 0.502218, 0, 0, 0.492546,-99) , 
0, 0.491427, 1, 0, 0.495505,-99) , 
7, -950.08, 0, 0, 0.501023,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0299608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490566,-99) , 
9, -1.90994, 0, 0, 0.499112,-99) , 
10, -1.58632, 1, 0, 0.502333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514243,-99) , 
NN(
0, 
0, 
-1, -4.09368, 0, -1, 0.454479,-99) , 
9, -3.1235, 0, 0, 0.473556,-99) , 
8, -0.999839, 0, 0, 0.498872,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.023039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.00497, 1, 1, 0.532855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491746,-99) , 
8, 0.141191, 1, 0, 0.495741,-99) , 
0, 0.495233, 0, 0, 0.521338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496697,-99) , 
8, 0.968578, 0, 0, 0.500995,-99) , 
NN(
0, 
0, 
-1, -0.0476367, 1, -1, 0.477799,-99) , 
10, 0.967681, 1, 0, 0.497202,-99) , 
2, -0.0715266, 1, 0, 0.50143,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0375977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.779, 0, 1, 0.577907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497508,-99) , 
8, 0.206451, 0, 0, 0.509938,-99) , 
5, -0.52322, 1, 0, 0.519704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487501,-99) , 
8, 0.714363, 1, 0, 0.498901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429111,-99) , 
4, 0.999524, 0, 0, 0.494691,-99) , 
9, -2.57228, 1, 0, 0.504491,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0265061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498106,-99) , 
8, -0.142947, 0, 0, 0.533527,-99) , 
NN(
0, 
0, 
-1, 0.120881, 0, 1, 0.507294,-99) , 
2, 0.15295, 0, 0, 0.50992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471179,-99) , 
5, 0.523725, 1, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0.0476153, 0, -1, 0.464895,-99) , 
0, 0.498091, 0, 0, 0.483048,-99) , 
2, -0.0715266, 0, 0, 0.505051,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0249097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13998, 0, 1, 0.50752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479701,-99) , 
9, -2.06927, 0, 0, 0.490957,-99) , 
5, 0.523771, 1, 0, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45914,-99) , 
9, 0.133245, 1, 0, 0.500025,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0263357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48784,-99) , 
8, 1.28564, 1, 0, 0.504638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466038,-99) , 
5, -0.00230894, 0, 0, 0.486,-99) , 
2, -0.0746282, 0, 0, 0.501371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455657,-99) , 
5, 0.904714, 1, 0, 0.499103,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0317331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483266,-99) , 
10, 0.267261, 1, 0, 0.506415,-99) , 
5, -0.292521, 1, 0, 0.509033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496354,-99) , 
9, -2.98923, 1, 0, 0.502672,-99) , 
NN(
0, 
0, 
-1, -1.55838, 1, -1, 0.463043,-99) , 
3, 3.22326, 1, 0, 0.49117,-99) , 
5, -0.428584, 0, 0, 0.502586,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0445724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470148,-99) , 
8, 1.85682, 1, 0, 0.506762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411705,-99) , 
7, -1.03155, 0, 0, 0.494533,-99) , 
7, -14.5802, 1, 0, 0.50008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451185,-99) , 
4, 0.998571, 0, 0, 0.498645,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0524372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494006,-99) , 
8, -0.142959, 0, 0, 0.506517,-99) , 
NN(
0, 
0, 
-1, 0.504439, 0, -1, 0.477876,-99) , 
0, 0.502852, 1, 0, 0.501714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484026,-99) , 
7, 0.130918, 0, 0, 0.504844,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.319192,-99) , 
7, -1.59461, 0, 0, 0.486524,-99) , 
7, -14.5802, 1, 0, 0.493335,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0473539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476365,-99) , 
10, 0.421724, 1, 0, 0.555033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455505,-99) , 
5, 0.142853, 1, 0, 0.489225,-99) , 
9, -1.49165, 1, 0, 0.513896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49633,-99) , 
8, -0.059983, 0, 0, 0.508386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477327,-99) , 
0, 0.502853, 0, 0, 0.481487,-99) , 
10, -0.929156, 1, 0, 0.491655,-99) , 
8, 1.28572, 0, 0, 0.496013,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0175242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555444,-99) , 
NN(
NN(
0, 
0, 
-1, 1.50486, 0, 1, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0.494286, 0, -1, 0.476983,-99) , 
10, 0.667358, 1, 0, 0.498117,-99) , 
8, 2.42853, 0, 0, 0.499929,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0242474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53825,-99) , 
NN(
0, 
0, 
-1, 4.82371, 1, -1, 0.491281,-99) , 
3, 8.3483, 0, 0, 0.492684,-99) , 
4, 0.999048, 1, 0, 0.496048,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0145004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461753,-99) , 
0, 0.4902, 0, 0, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465302,-99) , 
0, 0.505709, 1, 0, 0.498692,-99) , 
8, 2.42854, 0, 0, 0.499857,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0328912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.180362, 1, 1, 0.554932,-99) , 
NN(
0, 
0, 
-1, 4.38438, 1, -1, 0.490327,-99) , 
9, -2.05671, 1, 0, 0.506264,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498102, 1, 1, 0.520002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481895,-99) , 
10, -1.34554, 1, 0, 0.488969,-99) , 
5, -0.904761, 1, 0, 0.492714,-99) , 
8, 0.714249, 0, 0, 0.497519,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.02506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493127,-99) , 
5, 0.23805, 1, 0, 0.50329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471626,-99) , 
5, 0.523673, 0, 0, 0.484259,-99) , 
3, 4.36372, 1, 0, 0.499539,-99) , 
9, -0.0170143, 0, 0, 0.501186,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0405894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.64189, 1, 1, 0.517489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465839,-99) , 
9, -3.07286, 0, 0, 0.486037,-99) , 
8, 0.144029, 0, 0, 0.505257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479658,-99) , 
8, -0.904463, 0, 0, 0.500182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460878,-99) , 
9, -1.40753, 0, 0, 0.478885,-99) , 
8, 0.14303, 1, 0, 0.488951,-99) , 
5, 0.428537, 0, 0, 0.494911,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0250135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.32513, 1, 1, 0.510436,-99) , 
NN(
0, 
0, 
-1, 0.618934, 1, -1, 0.49224,-99) , 
0, 0.498227, 0, 0, 0.500466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43201,-99) , 
9, -1.79881, 0, 0, 0.467246,-99) , 
0, 0.504757, 1, 0, 0.497708,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0397081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457776,-99) , 
10, -1.76826, 1, 0, 0.501195,-99) , 
8, -0.579292, 0, 0, 0.5199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491396,-99) , 
9, -1.99221, 1, 0, 0.50769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438734,-99) , 
8, 0.0116066, 0, 0, 0.494807,-99) , 
5, 0.0475923, 1, 0, 0.501747,-99) , 
10, -1.34964, 1, 0, 0.505125,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0319852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490545,-99) , 
10, -1.17986, 1, 0, 0.498703,-99) , 
1, -0.0057274, 1, 0, 0.503333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482548,-99) , 
9, -2.03631, 0, 0, 0.491393,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.4675,-99) , 
2, 0.0680694, 1, 0, 0.486875,-99) , 
0, 0.49809, 1, 0, 0.494996,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0315477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.377458, 0, 1, 0.519558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461147,-99) , 
10, 0.772682, 1, 0, 0.48844,-99) , 
8, 0.714452, 1, 0, 0.508414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493376,-99) , 
5, 0.714369, 0, 0, 0.512225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486227,-99) , 
9, -3.21745, 1, 0, 0.490764,-99) , 
8, 1.57178, 0, 0, 0.49389,-99) , 
0, 0.496186, 1, 0, 0.498847,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0284311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499688,-99) , 
3, 0.685938, 0, 0, 0.514891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492219,-99) , 
2, 0.151619, 0, 0, 0.495217,-99) , 
3, 0.917606, 1, 0, 0.500282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470405,-99) , 
10, -0.168195, 1, 0, 0.495098,-99) , 
NN(
0, 
0, 
-1, -0.714109, 0, -1, 0.470694,-99) , 
7, -951.286, 1, 0, 0.480986,-99) , 
3, 4.36372, 1, 0, 0.496467,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.019042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49947,-99) , 
8, 1.85712, 0, 0, 0.50293,-99) , 
NN(
0, 
0, 
-1, -2.37686, 1, -1, 0.481839,-99) , 
0, 0.5019, 1, 0, 0.498467,-99) , 
NN(
0, 
0, 
-1, -2.47797, 1, -1, 0.453149,-99) , 
9, -3.93746, 0, 0, 0.495503,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.030203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491154,-99) , 
3, 2.5393, 1, 0, 0.507306,-99) , 
10, -2.06908, 1, 0, 0.509693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481071,-99) , 
0, 0.498772, 1, 0, 0.492671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457747,-99) , 
0, 0.493332, 0, 0, 0.486849,-99) , 
3, 4.36372, 1, 0, 0.505199,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0317234);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.2821, 0, 1, 0.537152,-99) , 
NN(
NN(
0, 
0, 
-1, -3.03511, 1, 1, 0.511449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452979,-99) , 
9, -2.9066, 0, 0, 0.490511,-99) , 
5, 0.0475938, 1, 0, 0.501292,-99) , 
10, -1.9356, 1, 0, 0.504025,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0353163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.268962, 1, 1, 0.56278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460535,-99) , 
0, 0.501901, 1, 0, 0.500186,-99) , 
9, -2.04122, 1, 0, 0.515942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499061,-99) , 
9, -3.68364, 1, 0, 0.504672,-99) , 
NN(
0, 
0, 
-1, -0.702251, 1, -1, 0.475559,-99) , 
5, 0.523701, 1, 0, 0.496011,-99) , 
8, 0.714419, 0, 0, 0.503218,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0151681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.525894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481475,-99) , 
5, 0.632583, 1, 0, 0.496789,-99) , 
8, 2.14278, 0, 0, 0.498441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458747,-99) , 
5, 0.904681, 1, 0, 0.496505,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0371034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496598,-99) , 
4, 0.999995, 0, 0, 0.511804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44708,-99) , 
4, 0.999905, 0, 0, 0.508028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494227,-99) , 
8, 0.340595, 0, 0, 0.506998,-99) , 
NN(
0, 
0, 
-1, -2.53279, 0, -1, 0.476459,-99) , 
10, -0.66105, 1, 0, 0.49173,-99) , 
5, 0.142825, 1, 0, 0.500304,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0456461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44316, 0, 1, 0.514798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437486,-99) , 
8, 1.64366, 1, 0, 0.486494,-99) , 
10, 1.24137, 1, 0, 0.509963,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57166, 0, 1, 0.510994,-99) , 
NN(
0, 
0, 
-1, 0.736742, 1, -1, 0.364507,-99) , 
7, -1.39891, 0, 0, 0.492337,-99) , 
7, -950.08, 1, 0, 0.500192,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.029918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495229,-99) , 
8, 2.14137, 0, 0, 0.498225,-99) , 
9, -0.772259, 0, 0, 0.500684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469638,-99) , 
9, -1.00431, 1, 0, 0.489184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450365,-99) , 
10, -0.0927493, 0, 0, 0.479409,-99) , 
5, -0.714287, 0, 0, 0.495641,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0398947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49271,-99) , 
10, 0.0431249, 1, 0, 0.53812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494941,-99) , 
10, -0.878861, 1, 0, 0.511322,-99) , 
8, 0.828336, 0, 0, 0.516399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494083,-99) , 
0, 0.49238, 1, 0, 0.499668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434994,-99) , 
5, 0.714247, 1, 0, 0.492949,-99) , 
10, 0.452832, 1, 0, 0.509946,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0286657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497061,-99) , 
9, -2.36662, 1, 0, 0.509874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490541,-99) , 
1, 0.00331795, 0, 0, 0.496671,-99) , 
5, -0.428581, 1, 0, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458959,-99) , 
4, 0.999048, 0, 0, 0.499848,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0236633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494218,-99) , 
5, -0.637192, 0, 0, 0.504718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4695,-99) , 
5, 0.904714, 1, 0, 0.502875,-99) , 
NN(
0, 
0, 
-1, -0.142852, 0, -1, 0.461826,-99) , 
0, 0.491427, 0, 0, 0.49919,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0235661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.74853, 1, 1, 0.507787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46744,-99) , 
9, -3.09831, 0, 0, 0.482619,-99) , 
8, -0.999874, 0, 0, 0.504726,-99) , 
NN(
0, 
0, 
-1, 0.142808, 1, -1, 0.470356,-99) , 
0, 0.504757, 1, 0, 0.502027,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0261298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
10, -1.75256, 1, 0, 0.529919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484491,-99) , 
5, 0.523777, 1, 0, 0.496702,-99) , 
10, -1.57322, 1, 0, 0.498701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463232,-99) , 
8, -1.57154, 0, 0, 0.506647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402191,-99) , 
9, -3.05112, 0, 0, 0.459523,-99) , 
10, -2.09356, 1, 0, 0.480793,-99) , 
8, -0.99987, 0, 0, 0.496518,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.052405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494653,-99) , 
10, -0.719196, 0, 0, 0.534048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465191,-99) , 
10, 0.446842, 0, 0, 0.497054,-99) , 
9, -2.40711, 1, 0, 0.506346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475823,-99) , 
8, 1.47421, 1, 0, 0.514192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481155,-99) , 
8, 1.3438, 0, 0, 0.48644,-99) , 
9, -1.67927, 0, 0, 0.491513,-99) , 
5, -0.428583, 1, 0, 0.496826,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0328324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0311236, 0, 1, 0.53844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483166,-99) , 
5, -0.714282, 0, 0, 0.500291,-99) , 
10, -0.968357, 1, 0, 0.505194,-99) , 
NN(
NN(
0, 
0, 
-1, -1.66822, 1, 1, 0.527428,-99) , 
NN(
0, 
0, 
-1, -1.71489, 1, -1, 0.47358,-99) , 
10, -1.11131, 0, 0, 0.48905,-99) , 
8, -0.427418, 0, 0, 0.500967,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0228771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.136772, 0, 1, 0.515493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467587,-99) , 
2, 0.0713332, 1, 0, 0.496231,-99) , 
10, -0.813368, 1, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449219,-99) , 
8, -1.85674, 0, 0, 0.501166,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0110544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464223,-99) , 
4, 0.999683, 0, 0, 0.499316,-99) , 
4, 0.999048, 1, 0, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460677,-99) , 
3, 8.34575, 1, 0, 0.499855,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0471212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484605,-99) , 
8, 2.24322, 1, 0, 0.554484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471205,-99) , 
10, -0.0493733, 1, 0, 0.506299,-99) , 
9, -1.17834, 0, 0, 0.510565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47394,-99) , 
9, -2.41948, 1, 0, 0.482475,-99) , 
1, -0.00733313, 1, 0, 0.490102,-99) , 
5, -0.333342, 0, 0, 0.502457,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0275101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479337,-99) , 
3, 1.19743, 0, 0, 0.513762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495514,-99) , 
8, 0.357897, 0, 0, 0.503994,-99) , 
NN(
0, 
0, 
-1, 0.808172, 0, -1, 0.487714,-99) , 
10, -0.496862, 1, 0, 0.495704,-99) , 
5, -0.90476, 1, 0, 0.497655,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0197163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.701398, 1, 1, 0.519814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492533,-99) , 
9, -2.325, 0, 0, 0.498375,-99) , 
8, 1.61227, 0, 0, 0.501275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43119,-99) , 
8, -1.85698, 0, 0, 0.499441,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0361995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479272,-99) , 
7, -951.286, 1, 0, 0.495743,-99) , 
8, -0.433565, 0, 0, 0.509541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49595,-99) , 
10, -0.452331, 1, 0, 0.502826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456307,-99) , 
10, -0.7599, 0, 0, 0.483424,-99) , 
8, 0.143058, 0, 0, 0.496655,-99) , 
10, -1.34964, 1, 0, 0.499032,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0119898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499812,-99) , 
9, -0.298667, 0, 0, 0.50188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459274,-99) , 
2, 0.0294095, 0, 0, 0.476588,-99) , 
0, 0.491424, 0, 0, 0.499665,-99) , 
2, -0.213802, 1, 0, 0.501597,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0267325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459181,-99) , 
8, 1.2902, 1, 0, 0.498741,-99) , 
7, -951.286, 0, 0, 0.515606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491876,-99) , 
10, -2.228, 1, 0, 0.493673,-99) , 
8, 2.14083, 0, 0, 0.495506,-99) , 
9, -0.749716, 0, 0, 0.497925,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0181518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.34112, 1, 1, 0.543299,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.527469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499798,-99) , 
0, 0.494283, 1, 0, 0.503492,-99) , 
8, -0.713021, 1, 0, 0.506844,-99) , 
9, -3.9727, 1, 0, 0.508817,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0267515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497062,-99) , 
10, -0.962827, 1, 0, 0.503754,-99) , 
NN(
0, 
0, 
-1, -3.96184, 0, -1, 0.477322,-99) , 
8, -0.428313, 0, 0, 0.497398,-99) , 
10, -2.46347, 1, 0, 0.499001,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0349051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452495,-99) , 
10, -0.857061, 1, 0, 0.507265,-99) , 
8, 0.302066, 0, 0, 0.518816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484688,-99) , 
9, -1.22066, 1, 0, 0.523169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475175,-99) , 
8, 0.552054, 0, 0, 0.496796,-99) , 
8, 0.143984, 1, 0, 0.501975,-99) , 
10, -0.683557, 1, 0, 0.508412,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.015342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54997,-99) , 
NN(
NN(
0, 
0, 
-1, -2.09907, 1, 1, 0.504901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463316,-99) , 
8, -1.8567, 0, 0, 0.503786,-99) , 
9, 0.249347, 0, 0, 0.505788,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0210588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485425,-99) , 
10, 0.633576, 1, 0, 0.50362,-99) , 
8, 2.14274, 0, 0, 0.505965,-99) , 
NN(
0, 
0, 
-1, 1.00283, 0, -1, 0.475892,-99) , 
9, -0.431719, 1, 0, 0.503399,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0279111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499162,-99) , 
5, -0.619058, 0, 0, 0.519685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493463,-99) , 
8, 1.52743, 0, 0, 0.497125,-99) , 
9, -1.39431, 0, 0, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0.439536, 0, -1, 0.467562,-99) , 
0, 0.491425, 0, 0, 0.499406,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0147213);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492742,-99) , 
0, 0.498813, 0, 0, 0.521819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476004,-99) , 
8, -0.714182, 0, 0, 0.498432,-99) , 
10, -1.97318, 1, 0, 0.50014,-99) , 
0, 0.505709, 0, 0, 0.501725,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0290842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.986146, 0, 1, 0.528391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49277,-99) , 
5, -0.351596, 0, 0, 0.499368,-99) , 
9, -2.6068, 1, 0, 0.508435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538478,-99) , 
NN(
0, 
0, 
-1, -3.20826, 0, -1, 0.490447,-99) , 
10, -2.0293, 1, 0, 0.495009,-99) , 
5, 0.238065, 1, 0, 0.502458,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0360472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497507,-99) , 
10, 0.327053, 1, 0, 0.535597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496836,-99) , 
10, -1.87887, 1, 0, 0.505712,-99) , 
9, -1.97517, 0, 0, 0.514459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491543,-99) , 
9, -1.26687, 1, 0, 0.50633,-99) , 
NN(
0, 
0, 
-1, -0.101071, 0, -1, 0.481186,-99) , 
10, -0.185316, 0, 0, 0.495623,-99) , 
5, 0.0475982, 0, 0, 0.505033,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0321394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904681, 0, 1, 0.513637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463065,-99) , 
3, 8.33212, 1, 0, 0.512071,-99) , 
NN(
0, 
0, 
-1, -2.30488, 1, -1, 0.458278,-99) , 
9, -3.96954, 0, 0, 0.508718,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0159178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3919, 0, 1, 0.505702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449813,-99) , 
8, 0.14266, 0, 0, 0.476089,-99) , 
0, 0.490472, 0, 0, 0.503941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472359,-99) , 
2, -0.212281, 0, 0, 0.502359,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0366801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.287032, 0, 1, 0.536883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43094,-99) , 
10, 0.615336, 0, 0, 0.48764,-99) , 
9, -1.85186, 1, 0, 0.506213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485812,-99) , 
8, 2.24327, 1, 0, 0.526842,-99) , 
NN(
0, 
0, 
-1, 0.312546, 1, -1, 0.488698,-99) , 
9, -1.21122, 0, 0, 0.491956,-99) , 
5, -0.523819, 1, 0, 0.496639,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.018564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214372, 1, 1, 0.50588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52775,-99) , 
NN(
0, 
0, 
-1, 0.333258, 1, -1, 0.472494,-99) , 
2, 0.0645738, 0, 0, 0.485983,-99) , 
0, 0.502852, 1, 0, 0.50276,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0221383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458733,-99) , 
8, -0.424007, 0, 0, 0.513233,-99) , 
NN(
0, 
0, 
-1, -0.0104141, 0, -1, 0.496062,-99) , 
2, 0.0719532, 0, 0, 0.499107,-99) , 
0, 0.505709, 0, 0, 0.50124,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0348972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.60319, 1, 1, 0.511637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438831,-99) , 
8, 0.429833, 0, 0, 0.474668,-99) , 
3, 4.68082, 1, 0, 0.505932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485904,-99) , 
10, -0.88834, 1, 0, 0.496228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422771,-99) , 
9, -4.19747, 0, 0, 0.49195,-99) , 
5, 0.238064, 1, 0, 0.499784,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0620874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493584,-99) , 
8, 0.144782, 0, 0, 0.524833,-99) , 
NN(
0, 
0, 
-1, 0.716345, 1, -1, 0.427478,-99) , 
7, -1.03155, 0, 0, 0.505009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468145,-99) , 
10, 0.151933, 1, 0, 0.496995,-99) , 
NN(
0, 
0, 
-1, -1.6614, 1, -1, 0.46699,-99) , 
5, -0.619061, 0, 0, 0.484929,-99) , 
7, -949.779, 0, 0, 0.496046,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0394378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00146741, 1, 1, 0.520462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446447,-99) , 
5, 0.918328, 0, 0, 0.480965,-99) , 
5, 0.877506, 1, 0, 0.514498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489566,-99) , 
9, -2.97412, 1, 0, 0.498281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446062,-99) , 
10, -1.81955, 0, 0, 0.49503,-99) , 
5, 0.142831, 0, 0, 0.50416,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0280171);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493195,-99) , 
5, -0.455793, 1, 0, 0.502233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477469,-99) , 
5, 0.0883932, 0, 0, 0.490366,-99) , 
0, 0.498092, 0, 0, 0.496377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46063,-99) , 
5, 0.904714, 1, 0, 0.494625,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.039061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.45646, 1, 1, 0.536009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488098,-99) , 
0, 0.492381, 0, 0, 0.514111,-99) , 
1, 0.0040614, 0, 0, 0.519116,-99) , 
NN(
NN(
0, 
0, 
-1, 0.119611, 0, 1, 0.517487,-99) , 
NN(
0, 
0, 
-1, -2.54426, 0, -1, 0.483416,-99) , 
10, -0.71698, 1, 0, 0.499764,-99) , 
5, 0.142834, 1, 0, 0.510066,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.046785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461543,-99) , 
8, 2.34691, 1, 0, 0.485328,-99) , 
9, -1.20282, 1, 0, 0.533254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484876,-99) , 
9, -1.27602, 1, 0, 0.50824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484269,-99) , 
9, -1.35237, 0, 0, 0.489162,-99) , 
5, -0.523817, 1, 0, 0.495619,-99) , 
8, 1.85712, 0, 0, 0.499039,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0251638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.537864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49286,-99) , 
5, -0.904733, 0, 0, 0.516505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492006,-99) , 
5, -0.809525, 1, 0, 0.494836,-99) , 
9, -0.906457, 0, 0, 0.497555,-99) , 
8, 2.14277, 0, 0, 0.499833,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0429463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.569346, 1, 1, 0.541398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48247,-99) , 
8, -1.23098, 0, 0, 0.508901,-99) , 
10, 0.130032, 0, 0, 0.514279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485706,-99) , 
9, -2.31429, 0, 0, 0.532961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457519,-99) , 
0, 0.497141, 0, 0, 0.48552,-99) , 
10, -0.0384868, 1, 0, 0.495393,-99) , 
8, 0.714419, 1, 0, 0.507578,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0272509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498916,-99) , 
8, 0.131353, 0, 0, 0.514062,-99) , 
9, -0.887083, 0, 0, 0.521345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475905,-99) , 
5, 0.863897, 1, 0, 0.510574,-99) , 
NN(
0, 
0, 
-1, 0.378632, 1, -1, 0.493327,-99) , 
5, 0.523771, 0, 0, 0.49893,-99) , 
2, -0.0710035, 1, 0, 0.502972,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0199314);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496881,-99) , 
5, 0.238068, 1, 0, 0.504433,-99) , 
10, -2.49179, 1, 0, 0.505825,-99) , 
9, 0.389504, 0, 0, 0.5073,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0394604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454528,-99) , 
10, -1.88106, 1, 0, 0.49913,-99) , 
8, -0.680278, 0, 0, 0.518448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493932,-99) , 
0, 0.49578, 0, 0, 0.50647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481256,-99) , 
2, -0.0729483, 1, 0, 0.488301,-99) , 
0, 0.499044, 1, 0, 0.498717,-99) , 
10, -1.4734, 1, 0, 0.501826,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0127563);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.63086, 0, 1, 0.538282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499804,-99) , 
5, 0.809447, 0, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463656,-99) , 
4, 0.999048, 0, 0, 0.501172,-99) , 
10, -2.11311, 1, 0, 0.503208,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0512098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400928,-99) , 
7, -1.32153, 0, 0, 0.511266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481463,-99) , 
0, 0.502853, 1, 0, 0.501504,-99) , 
7, -951.286, 0, 0, 0.506779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465752,-99) , 
5, 0.904714, 1, 0, 0.504854,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.022339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493634,-99) , 
0, 0.503532, 0, 0, 0.526699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481411,-99) , 
8, -0.711661, 0, 0, 0.518108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494476,-99) , 
0, 0.496598, 1, 0, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462291,-99) , 
0, 0.502126, 1, 0, 0.498977,-99) , 
0, 0.502852, 0, 0, 0.502046,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0381699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486665,-99) , 
8, 0.714169, 1, 0, 0.519717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488142,-99) , 
5, 0.306179, 0, 0, 0.501843,-99) , 
5, -0.619021, 1, 0, 0.507269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468868,-99) , 
5, -0.714292, 0, 0, 0.50532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480747,-99) , 
5, -0.809523, 1, 0, 0.487316,-99) , 
1, -0.00111011, 1, 0, 0.493985,-99) , 
0, 0.499043, 0, 0, 0.499616,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0135252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.962986, 0, 1, 0.535924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499996,-99) , 
5, 0.80948, 0, 0, 0.502698,-99) , 
10, -1.72626, 1, 0, 0.505706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453958,-99) , 
8, -1.85676, 0, 0, 0.504361,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0429706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238104, 0, 1, 0.536145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487831,-99) , 
3, 2.74409, 1, 0, 0.508337,-99) , 
3, 4.05198, 0, 0, 0.515214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442887,-99) , 
7, -1.03667, 0, 0, 0.504015,-99) , 
NN(
0, 
0, 
-1, -1.49053, 1, -1, 0.48305,-99) , 
7, -951.286, 0, 0, 0.494678,-99) , 
0, 0.5019, 0, 0, 0.499131,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.045834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.558543, 1, 1, 0.546703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49423,-99) , 
8, 2.38778, 0, 0, 0.498346,-99) , 
9, -2.06854, 1, 0, 0.514006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48238,-99) , 
9, -0.946111, 1, 0, 0.527872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477141,-99) , 
5, -0.333357, 1, 0, 0.488795,-99) , 
9, -2.00146, 0, 0, 0.496882,-99) , 
8, 0.428645, 0, 0, 0.504571,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.022681);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.904714, 0, 1, 0.511339,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0288515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29884, 1, 1, 0.510102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4668,-99) , 
5, 0.93646, 1, 0, 0.507046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530667,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.484582,-99) , 
0, 0.505709, 0, 0, 0.487114,-99) , 
5, 0.333304, 0, 0, 0.495197,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0343393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523746, 1, 1, 0.549078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446696,-99) , 
5, 0.428538, 1, 0, 0.495372,-99) , 
9, -1.20238, 1, 0, 0.515115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497797,-99) , 
10, -0.461912, 1, 0, 0.516725,-99) , 
NN(
0, 
0, 
-1, -0.740884, 1, -1, 0.488293,-99) , 
8, 0.554416, 0, 0, 0.496037,-99) , 
10, 0.379509, 0, 0, 0.501495,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0379732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456664,-99) , 
10, -0.680977, 1, 0, 0.54156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493756,-99) , 
8, 1.09535, 0, 0, 0.504044,-99) , 
10, -0.561747, 1, 0, 0.509517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495784,-99) , 
8, -0.455266, 1, 0, 0.516778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476458,-99) , 
5, -0.14285, 1, 0, 0.488869,-99) , 
9, -2.30337, 0, 0, 0.496023,-99) , 
8, 0.142948, 0, 0, 0.503441,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0227923);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489069,-99) , 
8, -0.0610496, 0, 0, 0.499312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463187,-99) , 
8, 2.14286, 1, 0, 0.497624,-99) , 
9, -0.103074, 0, 0, 0.500166,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.033703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464427,-99) , 
10, -2.01748, 1, 0, 0.502449,-99) , 
8, -0.796838, 0, 0, 0.523841,-99) , 
NN(
NN(
0, 
0, 
-1, -0.216392, 1, 1, 0.518249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487265,-99) , 
0, 0.496187, 1, 0, 0.493279,-99) , 
2, -0.0715266, 1, 0, 0.497675,-99) , 
10, -1.4734, 1, 0, 0.501799,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0357211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.989772, 0, 1, 0.539155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496567,-99) , 
9, -1.06697, 0, 0, 0.500185,-99) , 
10, -1.70122, 1, 0, 0.506158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478721,-99) , 
9, -1.68132, 1, 0, 0.497351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43637,-99) , 
10, -0.903817, 0, 0, 0.489196,-99) , 
5, -0.523819, 0, 0, 0.500534,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0229784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497432,-99) , 
3, 0.498248, 1, 0, 0.500932,-99) , 
3, 7.96989, 0, 0, 0.50263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486442,-99) , 
9, -1.62052, 1, 0, 0.502408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459243,-99) , 
2, -0.0692707, 1, 0, 0.470903,-99) , 
5, -0.428576, 1, 0, 0.483615,-99) , 
0, 0.494281, 0, 0, 0.498509,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0327249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498953,-99) , 
9, -2.2502, 0, 0, 0.505556,-99) , 
8, 1.3973, 0, 0, 0.509923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486595,-99) , 
8, -0.139281, 0, 0, 0.523275,-99) , 
NN(
0, 
0, 
-1, 0.0476138, 1, -1, 0.472693,-99) , 
8, 1.00228, 1, 0, 0.495514,-99) , 
9, -1.53337, 1, 0, 0.505943,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0288937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.07697, 1, 1, 0.51436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476106,-99) , 
5, 0.523782, 1, 0, 0.495877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444672,-99) , 
8, -1.28543, 0, 0, 0.491662,-99) , 
0, 0.496186, 0, 0, 0.5067,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0263091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474777,-99) , 
10, -1.76825, 1, 0, 0.512407,-99) , 
8, -0.543444, 0, 0, 0.528638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468004,-99) , 
4, 0.999048, 0, 0, 0.50228,-99) , 
9, 0.108144, 0, 0, 0.504031,-99) , 
10, -1.34964, 1, 0, 0.50861,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0347514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.21952, 0, 1, 0.526324,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.471139,-99) , 
5, -0.428546, 0, 0, 0.5168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467844,-99) , 
8, 1.85876, 1, 0, 0.514712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491179,-99) , 
10, 1.22911, 0, 0, 0.493342,-99) , 
9, -0.639929, 0, 0, 0.49669,-99) , 
10, -0.902905, 1, 0, 0.502953,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0311971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904713, 0, 1, 0.514018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480767,-99) , 
2, 0.0781233, 1, 0, 0.503468,-99) , 
NN(
0, 
0, 
-1, -2.40221, 0, -1, 0.469571,-99) , 
2, -0.0715266, 0, 0, 0.493193,-99) , 
3, 4.37807, 1, 0, 0.510053,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0215655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478188,-99) , 
4, 0.999932, 0, 0, 0.500321,-99) , 
5, 0.904705, 0, 0, 0.502513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449608,-99) , 
4, 0.998572, 0, 0, 0.50104,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0344274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49114,-99) , 
0, 0.496186, 0, 0, 0.502905,-99) , 
8, 1.84445, 0, 0, 0.504899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462807,-99) , 
5, -0.614586, 0, 0, 0.478841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423454,-99) , 
5, 0.619008, 1, 0, 0.472014,-99) , 
9, -1.26693, 1, 0, 0.498077,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0249149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
8, -0.994829, 1, 0, 0.501523,-99) , 
0, 0.48952, 1, 0, 0.503291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450535,-99) , 
10, -1.67633, 1, 0, 0.50307,-99) , 
NN(
0, 
0, 
-1, -2.4027, 1, -1, 0.443536,-99) , 
8, -1.0986, 0, 0, 0.476002,-99) , 
9, -3.41077, 0, 0, 0.499246,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0235356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472248,-99) , 
5, -0.238101, 0, 0, 0.516894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485555,-99) , 
5, 0.523772, 1, 0, 0.49865,-99) , 
10, -1.385, 1, 0, 0.501914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472099,-99) , 
2, 0.214156, 1, 0, 0.500462,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0248386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486119,-99) , 
5, 0.940995, 1, 0, 0.539877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495625,-99) , 
5, -0.637187, 0, 0, 0.506993,-99) , 
NN(
0, 
0, 
-1, -0.143857, 0, -1, 0.482434,-99) , 
0, 0.504757, 1, 0, 0.505036,-99) , 
5, 0.904713, 0, 0, 0.506851,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0289792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461351,-99) , 
8, 0.78702, 0, 0, 0.500629,-99) , 
10, -0.918087, 1, 0, 0.516658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489719,-99) , 
7, -951.286, 1, 0, 0.498878,-99) , 
NN(
0, 
0, 
-1, -0.655313, 0, -1, 0.482896,-99) , 
0, 0.500947, 1, 0, 0.49441,-99) , 
5, 0.809477, 0, 0, 0.497262,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0251884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.936456, 1, 1, 0.539393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488093,-99) , 
10, -0.67662, 1, 0, 0.495882,-99) , 
9, -0.105119, 0, 0, 0.497841,-99) , 
5, 0.90471, 0, 0, 0.500069,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0373435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.95348, 1, 1, 0.535815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467125,-99) , 
10, -0.167242, 1, 0, 0.496931,-99) , 
3, 3.9607, 1, 0, 0.521274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481097,-99) , 
9, -1.63929, 1, 0, 0.502451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481855,-99) , 
9, -1.46981, 0, 0, 0.491582,-99) , 
2, -0.00395184, 1, 0, 0.497505,-99) , 
2, 0.0708577, 0, 0, 0.501856,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0271417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498901,-99) , 
9, -1.75492, 0, 0, 0.502541,-99) , 
8, 1.33854, 0, 0, 0.507871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52688,-99) , 
NN(
0, 
0, 
-1, 1.78515, 0, -1, 0.477142,-99) , 
8, 0.44868, 1, 0, 0.488353,-99) , 
10, 0.4502, 1, 0, 0.502558,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0338543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.85644, 0, 1, 0.512663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498056,-99) , 
5, -0.714292, 0, 0, 0.515299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47719,-99) , 
10, 0.254496, 1, 0, 0.487481,-99) , 
8, 0.717205, 1, 0, 0.497958,-99) , 
9, -2.03891, 1, 0, 0.506432,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0328387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.89803, 0, 1, 0.568044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496929,-99) , 
9, -0.38294, 0, 0, 0.503786,-99) , 
10, -0.120609, 1, 0, 0.514629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493979,-99) , 
9, -1.07897, 1, 0, 0.525792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473072,-99) , 
10, -0.735337, 1, 0, 0.494212,-99) , 
10, 0.109582, 0, 0, 0.499576,-99) , 
8, 0.71431, 0, 0, 0.504996,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0187163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493884,-99) , 
5, 0.0475801, 1, 0, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461048,-99) , 
4, 0.999388, 0, 0, 0.500008,-99) , 
4, 0.998572, 1, 0, 0.501465,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.04107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479525,-99) , 
8, 0.588059, 0, 0, 0.55441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493287,-99) , 
0, 0.49714, 1, 0, 0.505435,-99) , 
10, -0.326765, 1, 0, 0.51364,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498094, 0, 1, 0.526984,-99) , 
NN(
0, 
0, 
-1, -0.869643, 1, -1, 0.482829,-99) , 
10, 0.174835, 0, 0, 0.488957,-99) , 
8, 0.428622, 0, 0, 0.500111,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0325511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.558111, 1, 1, 0.546804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495411,-99) , 
7, -951.286, 1, 0, 0.506297,-99) , 
10, -0.326765, 1, 0, 0.513282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476394,-99) , 
9, -0.668572, 1, 0, 0.521816,-99) , 
NN(
0, 
0, 
-1, -0.523845, 0, -1, 0.490372,-99) , 
10, -0.354512, 0, 0, 0.497577,-99) , 
8, 0.42857, 0, 0, 0.504652,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0326222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564175, 1, 1, 0.556327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493998,-99) , 
8, 0.333464, 0, 0, 0.506718,-99) , 
10, -1.51033, 1, 0, 0.510241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446827,-99) , 
10, -2.32457, 1, 0, 0.474676,-99) , 
9, -3.12153, 0, 0, 0.487095,-99) , 
8, -0.999875, 0, 0, 0.507421,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0256263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50534, 0, 1, 0.513456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484974,-99) , 
0, 0.506389, 1, 0, 0.5115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485412,-99) , 
10, 0.0467791, 1, 0, 0.498881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450575,-99) , 
8, -1.5705, 0, 0, 0.496596,-99) , 
0, 0.499043, 0, 0, 0.502905,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0488274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478367,-99) , 
6, 0.00181988, 0, 0, 0.504588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396261,-99) , 
1, 0.0127394, 1, 0, 0.501409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459869,-99) , 
1, -0.0108299, 0, 0, 0.499873,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0379932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.517534, 1, 1, 0.52315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458696,-99) , 
10, -0.180313, 0, 0, 0.497759,-99) , 
5, -0.428599, 0, 0, 0.51146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552309,-99) , 
NN(
0, 
0, 
-1, -0.862952, 1, -1, 0.483576,-99) , 
5, -0.618395, 1, 0, 0.49024,-99) , 
9, -2.68351, 0, 0, 0.503822,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.034648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18928, 0, 1, 0.567917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486982,-99) , 
8, 1.76247, 0, 0, 0.507789,-99) , 
10, 0.191481, 1, 0, 0.520888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491117,-99) , 
9, -1.43547, 0, 0, 0.495367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438848,-99) , 
0, 0.48952, 0, 0, 0.493256,-99) , 
8, 1.00003, 0, 0, 0.500689,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0364112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466267,-99) , 
10, 0.207449, 1, 0, 0.507773,-99) , 
8, 1.52906, 0, 0, 0.510191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47722,-99) , 
0, 0.496188, 0, 0, 0.497043,-99) , 
NN(
0, 
0, 
-1, 0.587515, 1, -1, 0.446988,-99) , 
5, -0.238114, 1, 0, 0.483658,-99) , 
10, 0.684647, 1, 0, 0.504309,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0339849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713159, 1, 1, 0.563836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487032,-99) , 
8, -0.515395, 0, 0, 0.500138,-99) , 
8, 0.260483, 0, 0, 0.50987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478855,-99) , 
8, 1.04353, 0, 0, 0.489911,-99) , 
8, -0.423822, 1, 0, 0.493391,-99) , 
10, -0.537353, 1, 0, 0.500507,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0275554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497441,-99) , 
8, 0.836074, 0, 0, 0.503149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483825,-99) , 
9, -2.21237, 1, 0, 0.487726,-99) , 
10, -0.136277, 1, 0, 0.496945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451865,-99) , 
8, 2.14286, 1, 0, 0.49466,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0117296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536728,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492198, 1, 1, 0.502205,-99) , 
NN(
0, 
0, 
-1, 0.49052, 1, -1, 0.473583,-99) , 
0, 0.491427, 0, 0, 0.499787,-99) , 
2, 0.212969, 0, 0, 0.501623,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.03391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469491,-99) , 
8, -1.64703, 1, 0, 0.49641,-99) , 
8, -1.22435, 0, 0, 0.528177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464386,-99) , 
8, -0.642295, 0, 0, 0.517605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493158,-99) , 
10, -0.934662, 1, 0, 0.496303,-99) , 
9, -2.9979, 1, 0, 0.500128,-99) , 
10, -1.8781, 1, 0, 0.502482,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0303785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.52449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477256,-99) , 
0, 0.498096, 0, 0, 0.494067,-99) , 
2, -0.0688197, 0, 0, 0.515596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469336,-99) , 
3, 3.58101, 1, 0, 0.50444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472029,-99) , 
9, -2.20064, 0, 0, 0.48052,-99) , 
8, -0.428274, 0, 0, 0.498046,-99) , 
3, 4.16016, 0, 0, 0.501734,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0169575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.941005, 1, 1, 0.540272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481586,-99) , 
5, 0.541923, 1, 0, 0.515616,-99) , 
NN(
0, 
0, 
-1, 1.8571, 1, -1, 0.496458,-99) , 
0, 0.502852, 0, 0, 0.499514,-99) , 
5, 0.90471, 0, 0, 0.501645,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0402269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.530796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
10, -0.526009, 0, 0, 0.503331,-99) , 
10, -1.23418, 1, 0, 0.509179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48633,-99) , 
9, -1.93427, 0, 0, 0.497336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464359,-99) , 
9, -1.91226, 1, 0, 0.480234,-99) , 
8, 1.00007, 1, 0, 0.492807,-99) , 
0, 0.49809, 1, 0, 0.500907,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.029518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.52841, 0, 1, 0.535956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478555,-99) , 
5, -0.237783, 0, 0, 0.523759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498474,-99) , 
9, -1.96864, 1, 0, 0.510131,-99) , 
NN(
0, 
0, 
-1, -3.02467, 0, -1, 0.49086,-99) , 
5, -0.238113, 1, 0, 0.499938,-99) , 
10, -1.34964, 1, 0, 0.504459,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.022105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489164,-99) , 
10, 0.968655, 1, 0, 0.503889,-99) , 
9, -3.70557, 1, 0, 0.50596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459096,-99) , 
5, -0.619681, 1, 0, 0.475469,-99) , 
8, -1.28561, 0, 0, 0.503578,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0334674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29021, 0, 1, 0.520543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465491,-99) , 
3, 1.64887, 1, 0, 0.488565,-99) , 
5, -0.714302, 0, 0, 0.512343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495023,-99) , 
5, -0.809483, 1, 0, 0.499811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436093,-99) , 
0, 0.494689, 1, 0, 0.468372,-99) , 
2, 0.0702233, 1, 0, 0.494072,-99) , 
0, 0.499043, 0, 0, 0.501801,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0523212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487579,-99) , 
5, -0.523746, 0, 0, 0.528567,-99) , 
NN(
0, 
0, 
-1, -1.84565, 0, -1, 0.438297,-99) , 
7, -1.14408, 0, 0, 0.512974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532311,-99) , 
NN(
0, 
0, 
-1, 1.85654, 1, -1, 0.492739,-99) , 
5, 0.809448, 0, 0, 0.496593,-99) , 
7, -950.08, 0, 0, 0.505634,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0276091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48952,-99) , 
10, 1.39776, 1, 0, 0.507589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454731,-99) , 
0, 0.49224, 1, 0, 0.488474,-99) , 
0, 0.493329, 0, 0, 0.504616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477997,-99) , 
9, -2.14694, 0, 0, 0.494474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449294,-99) , 
9, -1.12975, 1, 0, 0.486397,-99) , 
2, -0.071946, 0, 0, 0.501375,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0163297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466667,-99) , 
8, 1.73651, 1, 0, 0.526028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49847,-99) , 
9, -4.34084, 1, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447857,-99) , 
1, 0.0113528, 1, 0, 0.498283,-99) , 
10, 1.55585, 0, 0, 0.500647,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0319308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498348,-99) , 
7, -14.5802, 1, 0, 0.508612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467493,-99) , 
8, -1.57133, 0, 0, 0.506475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458655,-99) , 
9, -2.99828, 0, 0, 0.490152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441487,-99) , 
10, 0.608603, 1, 0, 0.485106,-99) , 
5, 0.428515, 1, 0, 0.498572,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0244375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458558,-99) , 
4, 0.999796, 0, 0, 0.505523,-99) , 
4, 0.999524, 1, 0, 0.507076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484472,-99) , 
2, 0.135009, 0, 0, 0.49995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453328,-99) , 
4, 0.999524, 0, 0, 0.493231,-99) , 
2, 0.0701447, 1, 0, 0.504523,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0235647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.51276, 1, 1, 0.504407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454587,-99) , 
4, 0.99974, 0, 0, 0.501791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473701,-99) , 
8, 0.00503181, 0, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0.903464, 0, -1, 0.470505,-99) , 
10, -0.637318, 1, 0, 0.486139,-99) , 
5, 0.714243, 1, 0, 0.498682,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0330055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.94769, 1, 1, 0.505701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446625,-99) , 
10, -1.88073, 0, 0, 0.502342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488977,-99) , 
8, -0.182494, 0, 0, 0.50934,-99) , 
NN(
0, 
0, 
-1, 0.309922, 0, -1, 0.474977,-99) , 
10, -1.06906, 1, 0, 0.487126,-99) , 
5, 0.142834, 1, 0, 0.495252,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0297376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534761,-99) , 
NN(
NN(
0, 
0, 
-1, -2.95623, 1, 1, 0.509768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484887,-99) , 
9, -1.86656, 0, 0, 0.494495,-99) , 
5, -0.333347, 1, 0, 0.500669,-99) , 
10, -2.22499, 1, 0, 0.502118,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0516122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472508,-99) , 
10, -1.76826, 1, 0, 0.506258,-99) , 
8, -0.543888, 0, 0, 0.520953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47906,-99) , 
7, 0.418655, 0, 0, 0.502081,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.483854,-99) , 
7, -949.779, 0, 0, 0.493704,-99) , 
10, -1.34964, 1, 0, 0.498748,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.039241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
10, -0.458611, 1, 0, 0.553688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484063,-99) , 
10, -1.05927, 1, 0, 0.502127,-99) , 
8, 0.472756, 0, 0, 0.509593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492154,-99) , 
10, 0.70376, 1, 0, 0.51175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47708,-99) , 
10, 0.63821, 0, 0, 0.485726,-99) , 
8, 1.58255, 0, 0, 0.492802,-99) , 
10, -0.301468, 1, 0, 0.501365,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0180408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
2, -0.0302047, 1, 0, 0.501095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453676,-99) , 
8, -1.30334, 0, 0, 0.479088,-99) , 
10, -1.9356, 0, 0, 0.499328,-99) , 
2, 0.214593, 0, 0, 0.501019,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0187182);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.62699, 1, 1, 0.543081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496156,-99) , 
3, 4.0343, 0, 0, 0.499246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463256,-99) , 
4, 0.999773, 0, 0, 0.497673,-99) , 
4, 0.999524, 1, 0, 0.501099,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0197501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24998, 1, 1, 0.514512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454732,-99) , 
9, -3.63935, 0, 0, 0.497214,-99) , 
5, -0.333347, 1, 0, 0.504282,-99) , 
NN(
0, 
0, 
-1, -1.63123, 0, -1, 0.463374,-99) , 
10, -2.13599, 0, 0, 0.501994,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0239263);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494676,-99) , 
10, 0.832758, 1, 0, 0.525827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496932,-99) , 
8, 1.53373, 0, 0, 0.499894,-99) , 
9, -1.3795, 0, 0, 0.503695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516178,-99) , 
NN(
0, 
0, 
-1, -1.3436, 1, -1, 0.476222,-99) , 
2, -0.0613254, 1, 0, 0.484211,-99) , 
5, -0.809514, 0, 0, 0.500051,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0236726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.56101, 0, 1, 0.506636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47153,-99) , 
8, 1.86508, 1, 0, 0.509701,-99) , 
NN(
0, 
0, 
-1, 1.18787, 0, -1, 0.477174,-99) , 
5, -0.714279, 0, 0, 0.489235,-99) , 
9, -1.30316, 1, 0, 0.502807,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0334912);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.543806, 0, 1, 0.529296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499444,-99) , 
9, -2.0009, 1, 0, 0.50855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421291,-99) , 
10, -1.07841, 0, 0, 0.486349,-99) , 
8, -0.138058, 0, 0, 0.503887,-99) , 
10, -1.34964, 1, 0, 0.508617,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0130214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48333,-99) , 
8, -0.931739, 0, 0, 0.498677,-99) , 
NN(
0, 
0, 
-1, -0.369057, 1, -1, 0.481773,-99) , 
5, 0.80948, 1, 0, 0.496579,-99) , 
8, 2.42853, 0, 0, 0.498066,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0195688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.66364, 1, 1, 0.515939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481191,-99) , 
3, 4.37807, 1, 0, 0.499956,-99) , 
0, 0.501491, 0, 0, 0.502651,-99) , 
NN(
0, 
0, 
-1, -0.238053, 0, -1, 0.475775,-99) , 
0, 0.504757, 1, 0, 0.500536,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.025324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484919,-99) , 
10, 0.191284, 1, 0, 0.50895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490366,-99) , 
5, 0.904659, 0, 0, 0.49191,-99) , 
3, 4.23371, 0, 0, 0.495324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465348,-99) , 
4, 0.998571, 0, 0, 0.49445,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0197811);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.518659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495389,-99) , 
10, -1.25033, 1, 0, 0.497942,-99) , 
NN(
0, 
0, 
-1, -3.70117, 0, -1, 0.470913,-99) , 
8, -0.714216, 0, 0, 0.494271,-99) , 
10, -2.12343, 1, 0, 0.495569,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0382865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08002, 1, 1, 0.551506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476799,-99) , 
5, 0.714249, 1, 0, 0.50437,-99) , 
10, -0.887529, 1, 0, 0.509065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470664,-99) , 
5, 0.523699, 1, 0, 0.498475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448788,-99) , 
9, -2.45709, 0, 0, 0.478804,-99) , 
9, -3.10053, 1, 0, 0.489075,-99) , 
8, -0.142776, 0, 0, 0.502008,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0393726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.971866, 1, 1, 0.57416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458894,-99) , 
10, 1.50463, 1, 0, 0.540531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497998,-99) , 
10, -0.544091, 1, 0, 0.507447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481535,-99) , 
9, -2.13155, 0, 0, 0.490587,-99) , 
8, 0.238137, 0, 0, 0.498503,-99) , 
8, 1.85712, 0, 0, 0.502326,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0504519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12828, 1, 1, 0.540838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46571,-99) , 
10, -1.56098, 1, 0, 0.494224,-99) , 
8, -0.322893, 0, 0, 0.514803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478775,-99) , 
8, 0.327237, 0, 0, 0.521929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479923,-99) , 
5, -0.714281, 1, 0, 0.493081,-99) , 
10, -0.332589, 1, 0, 0.499174,-99) , 
9, -2.63065, 1, 0, 0.504958,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0332741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
8, 1.30248, 0, 0, 0.508653,-99) , 
5, 0.673451, 1, 0, 0.515342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48962,-99) , 
2, 0.0604552, 0, 0, 0.49401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420002,-99) , 
9, -2.25634, 0, 0, 0.462902,-99) , 
5, 0.464812, 1, 0, 0.490342,-99) , 
5, 0.619006, 0, 0, 0.496936,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0289003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.660888, 0, 1, 0.578554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480036,-99) , 
8, 1.66663, 0, 0, 0.502655,-99) , 
10, 0.191481, 1, 0, 0.519552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53327,-99) , 
NN(
0, 
0, 
-1, 0.628013, 1, -1, 0.49456,-99) , 
8, 0.809481, 0, 0, 0.497519,-99) , 
8, 0.999966, 0, 0, 0.503476,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0319576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476005,-99) , 
10, -0.296381, 1, 0, 0.505383,-99) , 
8, 1.10948, 0, 0, 0.510081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492625,-99) , 
9, -1.91027, 1, 0, 0.496766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443329,-99) , 
5, 0.80948, 1, 0, 0.492889,-99) , 
10, 0.127924, 1, 0, 0.503952,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0294334);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.51604,-99) , 
NN(
NN(
0, 
0, 
-1, -0.119089, 0, 1, 0.515911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459936,-99) , 
5, 0.238015, 1, 0, 0.490417,-99) , 
10, -1.02742, 1, 0, 0.501222,-99) , 
8, 0.714234, 0, 0, 0.506593,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0410851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461923,-99) , 
9, -2.6683, 0, 0, 0.540807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442969,-99) , 
9, -2.30663, 0, 0, 0.501981,-99) , 
10, -0.326765, 1, 0, 0.508678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461831,-99) , 
2, 0.0709782, 1, 0, 0.503005,-99) , 
NN(
0, 
0, 
-1, -1.24483, 1, -1, 0.47585,-99) , 
9, -3.04847, 0, 0, 0.491611,-99) , 
8, 0.428708, 0, 0, 0.499263,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0296017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.556876, 1, 1, 0.538341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471268,-99) , 
9, -2.27811, 0, 0, 0.500173,-99) , 
10, -0.32557, 1, 0, 0.506437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494439,-99) , 
8, -0.235414, 0, 0, 0.504568,-99) , 
NN(
0, 
0, 
-1, -2.8352, 0, -1, 0.479524,-99) , 
10, -1.14048, 1, 0, 0.490589,-99) , 
8, 0.429421, 0, 0, 0.497654,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0154798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
10, -1.37228, 1, 0, 0.50201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454307,-99) , 
8, -1.0986, 0, 0, 0.482976,-99) , 
9, -3.40316, 0, 0, 0.499082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418958,-99) , 
1, -0.012758, 0, 0, 0.496803,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0186291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.909247, 0, 1, 0.507791,-99) , 
NN(
0, 
0, 
-1, -0.719785, 1, -1, 0.477934,-99) , 
5, -0.904742, 0, 0, 0.504606,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0269312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.854833, 1, 1, 0.529498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497325,-99) , 
5, 0.0339817, 1, 0, 0.506621,-99) , 
5, 0.809477, 0, 0, 0.509504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489824,-99) , 
10, 0.737731, 0, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0.153337, 1, -1, 0.465261,-99) , 
3, 4.14877, 1, 0, 0.488297,-99) , 
2, -0.0715266, 0, 0, 0.505683,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0224066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493055,-99) , 
9, -3.22762, 0, 0, 0.508684,-99) , 
2, -0.211903, 1, 0, 0.510726,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490765,-99) , 
0, 0.498091, 1, 0, 0.50062,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.028627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469286,-99) , 
10, -0.627188, 1, 0, 0.507643,-99) , 
8, 0.544712, 0, 0, 0.513164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495747,-99) , 
5, 0.550971, 0, 0, 0.499501,-99) , 
NN(
0, 
0, 
-1, -1.47716, 1, -1, 0.46734,-99) , 
5, 0.714239, 1, 0, 0.49467,-99) , 
10, -0.442246, 1, 0, 0.503163,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.027071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.24976, 0, 1, 0.512462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49384,-99) , 
8, 2.14638, 0, 0, 0.499261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426898,-99) , 
5, 0.714243, 1, 0, 0.491901,-99) , 
10, 0.379509, 1, 0, 0.506422,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0116562);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529592,-99) , 
NN(
0, 
0, 
-1, -1.19041, 0, -1, 0.496611,-99) , 
2, -0.213802, 1, 0, 0.498266,-99) , 
8, 2.42852, 0, 0, 0.49959,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0372721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.698504, 1, 1, 0.55012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492225,-99) , 
5, -0.619017, 1, 0, 0.499511,-99) , 
8, 0.21575, 0, 0, 0.508398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448109,-99) , 
5, -0.33339, 0, 0, 0.520361,-99) , 
NN(
0, 
0, 
-1, -2.16106, 0, -1, 0.490847,-99) , 
10, -0.332589, 1, 0, 0.497194,-99) , 
9, -2.62786, 1, 0, 0.501343,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0463867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.45127, 0, 1, 0.528333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477416,-99) , 
8, -0.712862, 0, 0, 0.514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418094,-99) , 
7, -1.32159, 0, 0, 0.500913,-99) , 
7, -951.286, 1, 0, 0.50689,-99) , 
10, -2.00632, 1, 0, 0.508346,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0240915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.448051, 1, 1, 0.528994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495548,-99) , 
3, 2.18484, 0, 0, 0.502202,-99) , 
3, 0.534693, 1, 0, 0.504901,-99) , 
NN(
0, 
0, 
-1, 0.496189, 0, -1, 0.478387,-99) , 
3, 4.38526, 1, 0, 0.499782,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0365969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471871,-99) , 
4, 0.999955, 1, 0, 0.512208,-99) , 
4, 0.999048, 1, 0, 0.522229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490783,-99) , 
2, 0.0845492, 1, 0, 0.514646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484276,-99) , 
3, 1.60769, 1, 0, 0.497732,-99) , 
3, 4.60955, 0, 0, 0.500625,-99) , 
5, 0.809477, 0, 0, 0.503486,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0335339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442451,-99) , 
10, -2.44549, 1, 0, 0.478635,-99) , 
8, -1.21585, 0, 0, 0.514384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487467,-99) , 
0, 0.502898, 1, 0, 0.504331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47572,-99) , 
7, -951.286, 0, 0, 0.489397,-99) , 
0, 0.499996, 0, 0, 0.494515,-99) , 
10, -1.71138, 1, 0, 0.496684,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0312209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499294,-99) , 
7, -951.286, 1, 0, 0.508456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439566,-99) , 
4, 0.999048, 0, 0, 0.505726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489637,-99) , 
8, -0.288462, 0, 0, 0.5071,-99) , 
NN(
0, 
0, 
-1, -0.950632, 1, -1, 0.473411,-99) , 
5, 0.33332, 1, 0, 0.490198,-99) , 
9, -2.68072, 0, 0, 0.500215,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0148085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498877,-99) , 
9, -0.561655, 0, 0, 0.502673,-99) , 
8, 2.42842, 0, 0, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446543,-99) , 
1, -0.0123865, 0, 0, 0.502487,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0221757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47482,-99) , 
4, 0.999819, 0, 0, 0.504608,-99) , 
2, -0.195881, 1, 0, 0.506312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434202,-99) , 
9, -2.59621, 1, 0, 0.473702,-99) , 
4, 0.999524, 0, 0, 0.504028,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0298098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.17579, 0, 1, 0.517177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485472,-99) , 
9, -2.69247, 0, 0, 0.496325,-99) , 
1, -0.000643858, 1, 0, 0.504706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513793,-99) , 
NN(
0, 
0, 
-1, 0.773874, 0, -1, 0.474034,-99) , 
9, -1.97673, 1, 0, 0.4837,-99) , 
5, -0.714281, 0, 0, 0.499666,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0256722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479776,-99) , 
4, 0.999819, 0, 0, 0.506922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465589,-99) , 
4, 0.999048, 0, 0, 0.505624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471898,-99) , 
9, -2.48651, 1, 0, 0.489231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443932,-99) , 
9, -1.22658, 1, 0, 0.480422,-99) , 
2, -0.0715266, 0, 0, 0.501082,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0328816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457671,-99) , 
9, -2.83614, 0, 0, 0.528737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478547,-99) , 
8, 0.687072, 0, 0, 0.497984,-99) , 
10, -0.625694, 1, 0, 0.501804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537033,-99) , 
NN(
0, 
0, 
-1, -3.35887, 0, -1, 0.484345,-99) , 
10, -2.48817, 1, 0, 0.487529,-99) , 
8, 0.142889, 0, 0, 0.495466,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0255478);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0809253, 0, 1, 0.525079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497917,-99) , 
9, -3.15768, 1, 0, 0.503343,-99) , 
NN(
0, 
0, 
-1, 0.282733, 1, -1, 0.484585,-99) , 
5, -0.142895, 1, 0, 0.492848,-99) , 
0, 0.504757, 0, 0, 0.495423,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0407116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49808, 0, 1, 0.567379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470678,-99) , 
9, -3.91021, 0, 0, 0.497243,-99) , 
8, -0.779518, 0, 0, 0.519189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487165,-99) , 
9, -0.970113, 0, 0, 0.491711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441312,-99) , 
10, 0.961388, 1, 0, 0.465921,-99) , 
8, 1.8586, 1, 0, 0.489105,-99) , 
10, -1.43803, 1, 0, 0.494087,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.023773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.03181, 1, 1, 0.537197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492543,-99) , 
5, 0.714243, 0, 0, 0.496759,-99) , 
9, -3.67992, 1, 0, 0.49947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462522,-99) , 
8, -1.57133, 0, 0, 0.497773,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0372558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486759,-99) , 
5, 0.809453, 1, 0, 0.516139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470014,-99) , 
0, 0.506253, 1, 0, 0.513228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490654,-99) , 
7, -951.286, 0, 0, 0.508455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470165,-99) , 
0, 0.497022, 0, 0, 0.483802,-99) , 
0, 0.495596, 1, 0, 0.4985,-99) , 
0, 0.49809, 0, 0, 0.505971,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.050039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486518,-99) , 
5, -0.142898, 0, 0, 0.510899,-99) , 
0, 0.503804, 0, 0, 0.518284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472508,-99) , 
2, -0.00351952, 1, 0, 0.504225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470702,-99) , 
2, -0.00326473, 0, 0, 0.490339,-99) , 
1, 0.000687785, 0, 0, 0.496621,-99) , 
2, 0.0713112, 0, 0, 0.500531,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.028475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496783,-99) , 
5, -0.0478851, 0, 0, 0.516421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49482,-99) , 
2, 0.149987, 0, 0, 0.497448,-99) , 
3, 2.95927, 0, 0, 0.501143,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00456, 1, 1, 0.528441,-99) , 
NN(
0, 
0, 
-1, 0.142953, 0, -1, 0.465656,-99) , 
9, -1.64314, 0, 0, 0.482184,-99) , 
3, 4.37807, 1, 0, 0.497422,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0311425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470065,-99) , 
10, -1.21905, 1, 0, 0.508734,-99) , 
8, -0.0222579, 0, 0, 0.516676,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505981, 1, 1, 0.530011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491552,-99) , 
5, -0.523824, 1, 0, 0.498833,-99) , 
0, 0.504757, 0, 0, 0.501353,-99) , 
10, -0.903956, 1, 0, 0.506138,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0112622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542517,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999914, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467262,-99) , 
4, 0.999637, 0, 0, 0.500876,-99) , 
4, 0.999048, 1, 0, 0.502861,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0113537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449323,-99) , 
9, -3.73364, 0, 0, 0.498225,-99) , 
10, -2.18051, 1, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460282,-99) , 
8, -1.85671, 0, 0, 0.499197,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0239201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498361,-99) , 
9, -1.99877, 1, 0, 0.512962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494346,-99) , 
9, -1.16721, 0, 0, 0.497647,-99) , 
5, -0.14285, 1, 0, 0.504183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460198,-99) , 
10, 2.21766, 1, 0, 0.502496,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0335443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08707, 1, 1, 0.535779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484222,-99) , 
3, 4.08588, 1, 0, 0.507705,-99) , 
7, -951.286, 1, 0, 0.520354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495529,-99) , 
8, 0.71776, 1, 0, 0.50715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487949,-99) , 
8, 1.23009, 0, 0, 0.492217,-99) , 
10, 0.311404, 0, 0, 0.496807,-99) , 
2, -0.0710035, 1, 0, 0.501053,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0250827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46995, 1, 1, 0.537456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499939,-99) , 
2, 0.0717946, 0, 0, 0.503924,-99) , 
8, 2.14379, 0, 0, 0.506124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435597,-99) , 
10, -2.36902, 1, 0, 0.465916,-99) , 
5, -0.2381, 1, 0, 0.476804,-99) , 
9, -3.46721, 0, 0, 0.502196,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.023821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489495,-99) , 
4, 0.999524, 0, 0, 0.521199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496133,-99) , 
7, -949.779, 1, 0, 0.501679,-99) , 
2, 0.0713332, 0, 0, 0.505132,-99) , 
NN(
0, 
0, 
-1, 1.00257, 0, -1, 0.454833,-99) , 
9, -0.261458, 1, 0, 0.501565,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0260141);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14348, 0, 1, 0.511507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485412,-99) , 
0, 0.505955, 1, 0, 0.505628,-99) , 
NN(
0, 
0, 
-1, 1.57206, 1, -1, 0.483129,-99) , 
0, 0.503261, 0, 0, 0.492135,-99) , 
0, 0.499996, 1, 0, 0.504827,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0342738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492693,-99) , 
7, -951.286, 0, 0, 0.522396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491348,-99) , 
0, 0.49809, 0, 0, 0.501352,-99) , 
8, -0.142627, 1, 0, 0.506196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426514,-99) , 
10, -1.49848, 1, 0, 0.482778,-99) , 
5, -0.428561, 1, 0, 0.492566,-99) , 
9, -3.24409, 0, 0, 0.503652,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0490286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406648,-99) , 
7, -1.49441, 0, 0, 0.514313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486344,-99) , 
10, -0.443819, 0, 0, 0.498507,-99) , 
7, -951.286, 0, 0, 0.506916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542566,-99) , 
NN(
0, 
0, 
-1, -1.67427, 1, -1, 0.467041,-99) , 
8, -0.322434, 0, 0, 0.480245,-99) , 
9, -3.26599, 0, 0, 0.502142,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0481768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0194564, 0, 1, 0.523263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468609,-99) , 
9, -1.9763, 0, 0, 0.494625,-99) , 
10, -0.881404, 1, 0, 0.506437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535881,-99) , 
NN(
0, 
0, 
-1, 0.0833338, 0, -1, 0.483004,-99) , 
9, -2.84481, 1, 0, 0.489511,-99) , 
5, -0.523811, 0, 0, 0.500769,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0193337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495509,-99) , 
0, 0.497138, 1, 0, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464658,-99) , 
10, 2.14402, 1, 0, 0.50039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453878,-99) , 
4, 0.998572, 0, 0, 0.49906,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0332888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.03631, 1, 1, 0.5142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485486,-99) , 
4, 0.999524, 1, 0, 0.49174,-99) , 
5, 0.3333, 1, 0, 0.505272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427366,-99) , 
3, 8.63683, 1, 0, 0.503122,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0112425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
10, -1.74681, 1, 0, 0.500389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45049,-99) , 
0, 0.499042, 1, 0, 0.479828,-99) , 
8, -1.2854, 0, 0, 0.498819,-99) , 
2, 0.212793, 0, 0, 0.500732,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0443306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48317,-99) , 
5, -0.238112, 0, 0, 0.520604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49233,-99) , 
9, -1.73843, 1, 0, 0.499591,-99) , 
10, -0.310106, 1, 0, 0.508014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56939,-99) , 
NN(
0, 
0, 
-1, -1.57805, 1, -1, 0.465012,-99) , 
8, -0.321354, 0, 0, 0.481316,-99) , 
9, -3.28405, 0, 0, 0.503297,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0340936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480979,-99) , 
8, 0.0929788, 0, 0, 0.545676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486546,-99) , 
8, 0.306358, 0, 0, 0.503041,-99) , 
10, -0.886115, 1, 0, 0.507289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494583,-99) , 
9, -2.20551, 1, 0, 0.51295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476806,-99) , 
10, -2.37284, 1, 0, 0.485108,-99) , 
10, -0.942748, 0, 0, 0.493383,-99) , 
8, -0.142597, 0, 0, 0.502368,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0193998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00111011, 1, 1, 0.506183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479285,-99) , 
2, -0.0783594, 1, 0, 0.490406,-99) , 
0, 0.492377, 0, 0, 0.50437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529978,-99) , 
NN(
0, 
0, 
-1, 0.715882, 1, -1, 0.483486,-99) , 
2, 0.275387, 0, 0, 0.491129,-99) , 
2, 0.0713191, 1, 0, 0.501994,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0340404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00222, 1, 1, 0.523521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492668,-99) , 
8, 1.04515, 0, 0, 0.49755,-99) , 
9, -1.77112, 0, 0, 0.506467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480491,-99) , 
5, 0.428867, 1, 0, 0.50854,-99) , 
NN(
0, 
0, 
-1, 0.238075, 0, -1, 0.474852,-99) , 
9, -2.60474, 1, 0, 0.487026,-99) , 
0, 0.5019, 1, 0, 0.502357,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0192007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.536211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496625,-99) , 
5, -0.5238, 1, 0, 0.50147,-99) , 
8, -1.44887, 1, 0, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422,-99) , 
8, 2.4285, 1, 0, 0.501331,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0236406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.527821, 1, 1, 0.512192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460818,-99) , 
2, 0.0705052, 1, 0, 0.493144,-99) , 
8, -0.3055, 0, 0, 0.506174,-99) , 
NN(
0, 
0, 
-1, 2.46949, 0, -1, 0.46763,-99) , 
8, 2.14295, 1, 0, 0.50417,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0265451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480183,-99) , 
8, -1.28563, 0, 0, 0.507358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450812,-99) , 
2, 0.0747863, 0, 0, 0.468952,-99) , 
4, 0.999728, 0, 0, 0.504424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450368,-99) , 
4, 0.998572, 0, 0, 0.502895,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0369879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25296, 1, 1, 0.532943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498537,-99) , 
10, -0.440354, 0, 0, 0.503198,-99) , 
9, -1.95184, 0, 0, 0.509583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450255,-99) , 
9, -2.66858, 0, 0, 0.525917,-99) , 
NN(
0, 
0, 
-1, -2.30663, 0, -1, 0.479963,-99) , 
10, -0.326765, 1, 0, 0.487522,-99) , 
8, 0.428744, 1, 0, 0.499615,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0338363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.706686, 1, 1, 0.573187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48215,-99) , 
0, 0.497138, 0, 0, 0.498031,-99) , 
8, 0.290558, 0, 0, 0.508216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485658,-99) , 
8, 1.69544, 0, 0, 0.49005,-99) , 
8, -0.424582, 1, 0, 0.492707,-99) , 
10, -0.537353, 1, 0, 0.49944,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0250565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465963,-99) , 
5, -0.142582, 0, 0, 0.508765,-99) , 
8, -0.668806, 0, 0, 0.523788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482583,-99) , 
5, 0.714242, 1, 0, 0.497522,-99) , 
NN(
0, 
0, 
-1, -0.904778, 1, -1, 0.467919,-99) , 
10, 1.56929, 1, 0, 0.494659,-99) , 
10, -1.4734, 1, 0, 0.499291,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0392366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482847,-99) , 
10, -0.759285, 1, 0, 0.495634,-99) , 
8, 1.50253, 0, 0, 0.499701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475582,-99) , 
5, -0.932078, 1, 0, 0.492883,-99) , 
NN(
0, 
0, 
-1, 2.19931, 0, -1, 0.453832,-99) , 
5, -0.714281, 1, 0, 0.476724,-99) , 
10, 0.667358, 1, 0, 0.494682,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0381634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492021,-99) , 
6, 0.00528938, 0, 0, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442776,-99) , 
1, 0.0111051, 1, 0, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450973,-99) , 
1, -0.0123422, 0, 0, 0.499863,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0203125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49308, 0, 1, 0.533548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477833,-99) , 
8, -0.795821, 0, 0, 0.502299,-99) , 
10, -2.06908, 1, 0, 0.504266,-99) , 
NN(
0, 
0, 
-1, 2.46949, 0, -1, 0.471176,-99) , 
8, 2.1428, 1, 0, 0.502572,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0246684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.267475, 0, 1, 0.5172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
8, 0.00300835, 0, 0, 0.529322,-99) , 
NN(
0, 
0, 
-1, -2.41547, 0, -1, 0.493503,-99) , 
10, -0.681972, 1, 0, 0.498613,-99) , 
9, -2.84686, 1, 0, 0.504101,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0234678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494177,-99) , 
10, -0.350193, 1, 0, 0.516192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495191,-99) , 
0, 0.502853, 0, 0, 0.49834,-99) , 
5, 0.714242, 0, 0, 0.501861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475103,-99) , 
2, -0.13922, 1, 0, 0.493701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454556,-99) , 
0, 0.502851, 1, 0, 0.486074,-99) , 
2, -0.0712486, 0, 0, 0.499017,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0245151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.7622, 0, 1, 0.508249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455895,-99) , 
0, 0.495236, 0, 0, 0.493803,-99) , 
10, 0.91112, 1, 0, 0.505786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409085,-99) , 
1, -0.0123865, 0, 0, 0.502916,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0325829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
10, -1.07392, 1, 0, 0.501534,-99) , 
8, -0.99988, 1, 0, 0.504059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427845,-99) , 
8, -1.37161, 0, 0, 0.483065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402127,-99) , 
5, -0.0441787, 1, 0, 0.444339,-99) , 
10, -1.72021, 1, 0, 0.466908,-99) , 
9, -3.28405, 0, 0, 0.497287,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0331446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491994,-99) , 
5, -0.809523, 0, 0, 0.508439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457632,-99) , 
3, 8.21353, 1, 0, 0.506872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496952,-99) , 
0, 0.498091, 0, 0, 0.506091,-99) , 
NN(
0, 
0, 
-1, -0.768133, 0, -1, 0.448151,-99) , 
7, -951.286, 1, 0, 0.4681,-99) , 
9, -3.41502, 0, 0, 0.5011,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.025321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.58505, 0, 1, 0.530846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483786,-99) , 
8, 1.28916, 1, 0, 0.515364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488175,-99) , 
9, -2.76858, 0, 0, 0.497717,-99) , 
0, 0.495234, 1, 0, 0.502383,-99) , 
5, -0.90476, 1, 0, 0.50554,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0200277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49864,-99) , 
10, -1.37314, 1, 0, 0.507551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473077,-99) , 
10, -0.915482, 0, 0, 0.495623,-99) , 
5, 0.033983, 0, 0, 0.500745,-99) , 
NN(
0, 
0, 
-1, 0.90018, 0, -1, 0.477608,-99) , 
5, 0.809475, 1, 0, 0.497833,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.018294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478349,-99) , 
0, 0.503805, 1, 0, 0.499169,-99) , 
10, -1.62823, 1, 0, 0.50164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473108,-99) , 
0, 0.498093, 0, 0, 0.500345,-99) , 
NN(
0, 
0, 
-1, -1.65923, 0, -1, 0.467474,-99) , 
5, -0.0476936, 0, 0, 0.482443,-99) , 
8, -0.999685, 0, 0, 0.499286,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0148535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489522, 1, 1, 0.503826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436815,-99) , 
5, 0.714243, 0, 0, 0.476828,-99) , 
4, 0.999728, 0, 0, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46107,-99) , 
4, 0.998572, 0, 0, 0.500647,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0314455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4314,-99) , 
8, -0.839077, 0, 0, 0.507437,-99) , 
10, -2.27278, 1, 0, 0.510795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475957,-99) , 
3, 4.38029, 1, 0, 0.498635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428406,-99) , 
5, 0.0339904, 1, 0, 0.494196,-99) , 
5, 0.142833, 0, 0, 0.501938,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0174501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499038,-99) , 
10, 0.0453775, 1, 0, 0.522634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49618,-99) , 
5, 0.904713, 0, 0, 0.497972,-99) , 
0, 0.492378, 1, 0, 0.500952,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.467695,-99) , 
8, 2.14285, 1, 0, 0.499184,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0260574);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.33247, 1, 1, 0.542166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492671,-99) , 
7, -951.286, 0, 0, 0.506522,-99) , 
NN(
0, 
0, 
-1, 0.362468, 1, -1, 0.491028,-99) , 
5, -0.333346, 1, 0, 0.49735,-99) , 
9, -3.97624, 1, 0, 0.499693,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0409428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.31429, 0, 1, 0.54895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486592,-99) , 
8, 1.47639, 0, 0, 0.503685,-99) , 
10, -0.0597733, 1, 0, 0.512553,-99) , 
NN(
NN(
0, 
0, 
-1, -1.19476, 1, 1, 0.511619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477786,-99) , 
9, -1.83632, 0, 0, 0.487598,-99) , 
7, -951.286, 1, 0, 0.498419,-99) , 
8, 0.714363, 0, 0, 0.503529,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0307489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0293303, 0, 1, 0.530175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47828,-99) , 
2, 0.0713191, 1, 0, 0.499453,-99) , 
10, -0.956865, 1, 0, 0.50364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476413,-99) , 
5, -0.143445, 0, 0, 0.496591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421206,-99) , 
10, -2.1334, 1, 0, 0.470041,-99) , 
9, -3.68716, 0, 0, 0.48804,-99) , 
8, -0.428313, 0, 0, 0.499539,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.036601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85717, 0, 1, 0.508919,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.403346,-99) , 
7, -1.59461, 0, 0, 0.498851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487327,-99) , 
10, -0.788398, 1, 0, 0.491433,-99) , 
NN(
0, 
0, 
-1, 0.00394861, 1, -1, 0.470873,-99) , 
8, -0.142831, 0, 0, 0.484147,-99) , 
7, -949.779, 0, 0, 0.492194,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0263046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492771,-99) , 
5, -0.904785, 0, 0, 0.516021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490394,-99) , 
5, -0.809462, 1, 0, 0.493687,-99) , 
9, -0.651345, 0, 0, 0.496004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450135,-99) , 
8, 2.42859, 1, 0, 0.494684,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0353128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.545592, 0, 1, 0.537511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494926,-99) , 
9, -1.95323, 0, 0, 0.502601,-99) , 
5, -0.310634, 1, 0, 0.507911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485433,-99) , 
9, -1.95428, 1, 0, 0.498623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455919,-99) , 
10, -0.65935, 0, 0, 0.491941,-99) , 
5, -0.619052, 0, 0, 0.503153,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0238565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428567, 0, 1, 0.520845,-99) , 
NN(
0, 
0, 
-1, 0.492695, 1, -1, 0.474782,-99) , 
10, 0.835097, 1, 0, 0.511546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49412,-99) , 
10, -1.42881, 1, 0, 0.497466,-99) , 
10, 1.62115, 0, 0, 0.499373,-99) , 
0, 0.495234, 1, 0, 0.502705,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0252775);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.20738, 1, 1, 0.509166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45203,-99) , 
9, -1.39515, 1, 0, 0.471349,-99) , 
2, 0.0666913, 0, 0, 0.483384,-99) , 
8, 1.57149, 1, 0, 0.505697,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0145296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498951,-99) , 
10, -1.61978, 1, 0, 0.501348,-99) , 
0, 0.48952, 1, 0, 0.502531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456464,-99) , 
8, 0.715724, 0, 0, 0.473963,-99) , 
5, -0.619015, 1, 0, 0.482127,-99) , 
2, -0.0723291, 0, 0, 0.498909,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0248191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48043,-99) , 
10, 0.308811, 1, 0, 0.511579,-99) , 
NN(
0, 
0, 
-1, -0.300318, 1, -1, 0.496654,-99) , 
5, -0.183693, 0, 0, 0.504603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469848,-99) , 
5, 0.904713, 1, 0, 0.5029,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0355614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489916,-99) , 
5, -0.619059, 0, 0, 0.505945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46196,-99) , 
2, 0.0765845, 0, 0, 0.481389,-99) , 
0, 0.49333, 0, 0, 0.502149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522501,-99) , 
NN(
0, 
0, 
-1, -0.183314, 0, -1, 0.470534,-99) , 
8, -0.714019, 1, 0, 0.479921,-99) , 
2, -0.071946, 0, 0, 0.498163,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0360243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49081,-99) , 
2, -0.0668842, 0, 0, 0.51812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482979,-99) , 
10, -0.68698, 1, 0, 0.497148,-99) , 
5, -0.0476345, 1, 0, 0.506714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487274,-99) , 
1, -0.000878174, 1, 0, 0.506734,-99) , 
NN(
0, 
0, 
-1, 1.19896, 0, -1, 0.483335,-99) , 
5, 0.523776, 0, 0, 0.489782,-99) , 
0, 0.499996, 1, 0, 0.500692,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0336263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.372316, 0, 1, 0.518699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439039,-99) , 
10, 1.12684, 0, 0, 0.490782,-99) , 
9, -1.18536, 1, 0, 0.508901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494478,-99) , 
9, -1.75603, 0, 0, 0.502146,-99) , 
NN(
0, 
0, 
-1, 2.15801, 0, -1, 0.460209,-99) , 
10, 0.595341, 1, 0, 0.497367,-99) , 
5, -0.238114, 1, 0, 0.502268,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0412405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.40932, 0, 1, 0.558572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497187,-99) , 
9, -0.160028, 0, 0, 0.505516,-99) , 
10, -0.132561, 1, 0, 0.51395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49319,-99) , 
8, -0.344905, 0, 0, 0.528045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480902,-99) , 
5, -0.619045, 1, 0, 0.488382,-99) , 
9, -1.83632, 0, 0, 0.49642,-99) , 
8, 0.71433, 0, 0, 0.50273,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0292522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.875719, 0, 1, 0.512549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476909,-99) , 
5, -0.333342, 1, 0, 0.499065,-99) , 
10, 0.185264, 1, 0, 0.507992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48354,-99) , 
0, 0.49019, 1, 0, 0.497198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465643,-99) , 
0, 0.489066, 0, 0, 0.488198,-99) , 
0, 0.491424, 0, 0, 0.50623,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.028283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25491, 0, 1, 0.564764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460304,-99) , 
2, -0.0729802, 0, 0, 0.494895,-99) , 
10, 0.226838, 1, 0, 0.511726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463778,-99) , 
8, -1.66647, 0, 0, 0.503188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469967,-99) , 
0, 0.502852, 0, 0, 0.480527,-99) , 
2, 0.0650812, 1, 0, 0.498744,-99) , 
8, 1.00004, 0, 0, 0.502254,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0479338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464018,-99) , 
10, -0.011777, 1, 0, 0.502716,-99) , 
9, -1.17834, 0, 0, 0.508233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478518,-99) , 
10, -0.950135, 0, 0, 0.508196,-99) , 
NN(
0, 
0, 
-1, 0.997548, 0, -1, 0.476306,-99) , 
9, -2.62803, 1, 0, 0.484355,-99) , 
5, -0.142875, 0, 0, 0.497302,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.030146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435995,-99) , 
5, 0.904637, 1, 0, 0.501349,-99) , 
8, 0.638161, 0, 0, 0.506359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492042,-99) , 
9, -1.85427, 1, 0, 0.50024,-99) , 
NN(
0, 
0, 
-1, -1.32233, 0, -1, 0.478598,-99) , 
7, -951.286, 1, 0, 0.489642,-99) , 
10, -0.366118, 1, 0, 0.497761,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0279065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495359,-99) , 
10, 1.23831, 0, 0, 0.499698,-99) , 
8, -0.998389, 1, 0, 0.501674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457191,-99) , 
10, -2.37144, 1, 0, 0.468055,-99) , 
5, -0.333396, 1, 0, 0.477335,-99) , 
9, -3.20004, 0, 0, 0.496758,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.046822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496945,-99) , 
8, 0.623059, 0, 0, 0.550086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468112,-99) , 
5, 0.714247, 1, 0, 0.506582,-99) , 
10, -0.356585, 1, 0, 0.513147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471015,-99) , 
9, -0.65498, 1, 0, 0.527596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478875,-99) , 
9, -2.26071, 0, 0, 0.482056,-99) , 
10, 0.109582, 0, 0, 0.48885,-99) , 
8, 0.428779, 0, 0, 0.499774,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0319834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.76396, 1, 1, 0.512676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487335,-99) , 
8, 1.4984, 0, 0, 0.495006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436466,-99) , 
10, 0.9531, 1, 0, 0.491635,-99) , 
5, 0.142829, 1, 0, 0.502851,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0373174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91427, 0, 1, 0.538937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478463,-99) , 
9, -0.492392, 0, 0, 0.492739,-99) , 
10, 1.14697, 1, 0, 0.518491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493018,-99) , 
8, 0.228101, 0, 0, 0.501219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480196,-99) , 
8, -0.167106, 1, 0, 0.48663,-99) , 
10, -0.629031, 1, 0, 0.493312,-99) , 
8, 1.57142, 0, 0, 0.496724,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0402893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.20747, 0, 1, 0.522947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46867,-99) , 
8, 2.15618, 0, 0, 0.489516,-99) , 
10, 0.308811, 1, 0, 0.516849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494452,-99) , 
9, -3.21168, 1, 0, 0.498512,-99) , 
NN(
0, 
0, 
-1, -2.1877, 1, -1, 0.4709,-99) , 
3, 1.03032, 0, 0, 0.490768,-99) , 
5, -0.333341, 0, 0, 0.506249,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0395898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.867242, 0, 1, 0.54231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472939,-99) , 
10, 0.103234, 0, 0, 0.502501,-99) , 
9, -2.57747, 1, 0, 0.511406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489764,-99) , 
5, 0.555487, 1, 0, 0.524349,-99) , 
NN(
0, 
0, 
-1, 0.238081, 0, -1, 0.486121,-99) , 
1, 0.00273808, 0, 0, 0.493821,-99) , 
5, -0.333367, 1, 0, 0.500867,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0280564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478839,-99) , 
7, -951.286, 0, 0, 0.527838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497753,-99) , 
8, 0.143754, 1, 0, 0.506481,-99) , 
5, 0.809479, 0, 0, 0.509308,-99) , 
NN(
NN(
0, 
0, 
-1, -1.92289, 1, 1, 0.518347,-99) , 
NN(
0, 
0, 
-1, 0.523479, 1, -1, 0.4849,-99) , 
0, 0.490472, 1, 0, 0.490821,-99) , 
0, 0.496186, 0, 0, 0.503088,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0160062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498273,-99) , 
5, -0.637187, 1, 0, 0.502147,-99) , 
5, 0.90471, 0, 0, 0.503445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520903,-99) , 
NN(
0, 
0, 
-1, -1.66083, 1, -1, 0.460049,-99) , 
8, -1.24258, 0, 0, 0.483377,-99) , 
10, -1.88073, 0, 0, 0.501711,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0372878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523733, 0, 1, 0.544631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454601,-99) , 
5, 0.714247, 1, 0, 0.505157,-99) , 
0, 0.499997, 0, 0, 0.520046,-99) , 
NN(
NN(
0, 
0, 
-1, 1.6962, 1, 1, 0.529395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485792,-99) , 
3, 1.28819, 0, 0, 0.499336,-99) , 
2, 0.0508043, 0, 0, 0.505099,-99) , 
3, 4.2422, 0, 0, 0.508126,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0253294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49837,-99) , 
8, 1.15116, 0, 0, 0.504276,-99) , 
9, -4.12081, 1, 0, 0.506685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483932,-99) , 
8, 1.15892, 0, 0, 0.497865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387899,-99) , 
8, 2.24186, 1, 0, 0.473993,-99) , 
10, 1.22216, 1, 0, 0.502625,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0268616);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.831192, 0, 1, 0.51102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
10, 0.191256, 0, 0, 0.511925,-99) , 
NN(
0, 
0, 
-1, 1.04149, 0, -1, 0.480339,-99) , 
9, -1.31024, 1, 0, 0.497512,-99) , 
5, -0.523817, 0, 0, 0.50652,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0125267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488454,-99) , 
9, -3.26599, 0, 0, 0.499797,-99) , 
2, 0.134894, 0, 0, 0.501037,-99) , 
2, 0.216386, 0, 0, 0.502499,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0252314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.80623, 1, 1, 0.53719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494458,-99) , 
10, -0.33117, 0, 0, 0.503215,-99) , 
9, -3.49006, 1, 0, 0.506119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442061,-99) , 
9, -3.54762, 0, 0, 0.468642,-99) , 
8, -1.28537, 0, 0, 0.503105,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0228903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49226,-99) , 
2, 0.0701447, 1, 0, 0.505231,-99) , 
8, 2.1363, 0, 0, 0.506967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442562,-99) , 
8, 1.73318, 1, 0, 0.484497,-99) , 
10, 1.37907, 1, 0, 0.504622,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0279311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496177, 0, 1, 0.52931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485309,-99) , 
0, 0.502852, 1, 0, 0.502536,-99) , 
10, -1.12378, 1, 0, 0.505847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455983,-99) , 
0, 0.500626, 0, 0, 0.478061,-99) , 
0, 0.49428, 1, 0, 0.489133,-99) , 
9, -3.38958, 0, 0, 0.503314,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0298379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.479882, 0, 1, 0.55062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483096,-99) , 
9, -2.04207, 1, 0, 0.497768,-99) , 
10, -0.775102, 1, 0, 0.516629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493445,-99) , 
10, 1.14581, 0, 0, 0.496986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423039,-99) , 
10, 1.32344, 1, 0, 0.475127,-99) , 
8, 1.85708, 1, 0, 0.495099,-99) , 
2, 0.0719532, 0, 0, 0.498881,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0196129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940993, 1, 1, 0.535611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499402,-99) , 
10, -1.385, 1, 0, 0.504769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40442,-99) , 
7, -1.59461, 0, 0, 0.491423,-99) , 
7, -14.5802, 1, 0, 0.497555,-99) , 
5, 0.904712, 0, 0, 0.499551,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.021566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.533218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491582,-99) , 
7, -14.5802, 1, 0, 0.498739,-99) , 
NN(
0, 
0, 
-1, -2.24837, 1, -1, 0.468048,-99) , 
9, -3.86305, 0, 0, 0.496526,-99) , 
2, -0.21475, 1, 0, 0.498353,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0268459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492236,-99) , 
8, 1.00003, 1, 0, 0.505584,-99) , 
0, 0.506253, 0, 0, 0.507524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
2, 0.0717866, 0, 0, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0.495597, 1, -1, 0.480384,-99) , 
5, 0.428475, 0, 0, 0.488826,-99) , 
0, 0.49809, 0, 0, 0.498177,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0251402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491804,-99) , 
5, 0.428541, 1, 0, 0.504538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488332,-99) , 
9, -3.87146, 1, 0, 0.490977,-99) , 
1, 0.000464428, 0, 0, 0.4972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458355,-99) , 
3, 8.22972, 1, 0, 0.495983,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0199107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.794573, 0, 1, 0.505854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526209,-99) , 
NN(
0, 
0, 
-1, -0.924378, 1, -1, 0.478448,-99) , 
5, -0.959191, 1, 0, 0.488331,-99) , 
5, -0.714287, 0, 0, 0.501543,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.027077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493691,-99) , 
5, -0.523817, 0, 0, 0.504988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485074,-99) , 
5, -0.523858, 1, 0, 0.491732,-99) , 
9, -2.68072, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463115,-99) , 
4, 0.998572, 0, 0, 0.499329,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0143187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.52784, 0, 1, 0.506273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47227,-99) , 
10, 2.14402, 1, 0, 0.504869,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_8_12_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_8_12_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_8_12_noP *ReadBDT_maker_LHC19c2a_8_12_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_8_12_noP(theInpVar);
  }
}
