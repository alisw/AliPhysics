#include "LHC19c2b_TMVAClassification_BDT_4_6.class.h"

double ReadBDT_LHC19c2b_4_6::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_4_6::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.366959182764097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28981,-99) , 
5, 0.999524, 0, 0, 0.673578,-99) , 
NN(
NN(
0, 
0, 
-1, 1.0816, 1, 1, 0.629746,-99) , 
NN(
0, 
0, 
-1, -1.41492, 1, -1, 0.344218,-99) , 
12, 3.80033, 0, 0, 0.37645,-99) , 
9, -951.286, 0, 0, 0.500871,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.253553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.137288, 1, 1, 0.684021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334304,-99) , 
9, -0.429223, 0, 0, 0.437879,-99) , 
6, 0.492676, 1, 0, 0.641161,-99) , 
NN(
0, 
0, 
-1, 1.57139, 1, -1, 0.404738,-99) , 
9, -951.286, 0, 0, 0.503483,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.213718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.641298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318408,-99) , 
5, 0.999524, 0, 0, 0.614316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.184894,-99) , 
10, -1.69385, 0, 0, 0.471805,-99) , 
NN(
0, 
0, 
-1, 2.25167, 1, -1, 0.188336,-99) , 
10, 1.57137, 1, 0, 0.438518,-99) , 
9, -951.286, 0, 0, 0.511283,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.196808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0652671, 0, 1, 0.6405,-99) , 
NN(
0, 
0, 
-1, -0.714717, 0, -1, 0.44061,-99) , 
6, 0.403476, 1, 0, 0.595623,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.420563,-99) , 
9, -951.286, 0, 0, 0.492936,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.193147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278253,-99) , 
10, -1.84351, 0, 0, 0.541792,-99) , 
NN(
0, 
0, 
-1, 2.23809, 1, -1, 0.26214,-99) , 
10, 1.8571, 1, 0, 0.524764,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.246451,-99) , 
5, 0.999524, 0, 0, 0.502424,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.201441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493209,-99) , 
5, 0.999977, 0, 0, 0.583615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393088,-99) , 
12, 0.33037, 1, 0, 0.453911,-99) , 
9, -951.286, 0, 0, 0.507017,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.257704,-99) , 
5, 0.999524, 0, 0, 0.487545,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.191756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429203,-99) , 
5, 0.999524, 0, 0, 0.579972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377428,-99) , 
9, -1.57147, 0, 0, 0.562687,-99) , 
NN(
NN(
0, 
0, 
-1, -0.836307, 1, 1, 0.631759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310206,-99) , 
11, -1.44143, 1, 0, 0.410741,-99) , 
12, 3.77212, 0, 0, 0.437801,-99) , 
9, -951.286, 0, 0, 0.489444,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.142405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233869,-99) , 
10, -2.14286, 0, 0, 0.52612,-99) , 
NN(
0, 
0, 
-1, -0.108223, 1, -1, 0.401108,-99) , 
5, 0.999955, 0, 0, 0.494009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223937,-99) , 
5, 0.999048, 0, 0, 0.481269,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.137643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.46453, 0, 1, 0.560088,-99) , 
NN(
0, 
0, 
-1, 0.150232, 1, -1, 0.418386,-99) , 
6, 0.590612, 1, 0, 0.541731,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.427727,-99) , 
9, -951.286, 0, 0, 0.474833,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0781356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253281,-99) , 
7, 0.0238062, 1, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.19798,-99) , 
10, -2.26531, 0, 0, 0.49065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211375,-99) , 
10, 2.14274, 1, 0, 0.479707,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0658353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263734,-99) , 
10, -2.0204, 0, 0, 0.49016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233673,-99) , 
10, 2.14285, 1, 0, 0.480645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242382,-99) , 
5, 0.999048, 0, 0, 0.469242,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.219593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418453,-99) , 
7, 0.00566464, 0, 0, 0.484732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259085,-99) , 
7, 0.023792, 1, 0, 0.475281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23767,-99) , 
5, 0.999048, 0, 0, 0.464293,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0604673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279829,-99) , 
7, 0.0237841, 1, 0, 0.494332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216709,-99) , 
10, -2.2653, 0, 0, 0.485986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237255,-99) , 
10, 2.1428, 1, 0, 0.476503,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0618618);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.469108,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0969824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294341,-99) , 
5, 0.999048, 0, 0, 0.501706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197912,-99) , 
8, 2.02249, 0, 0, 0.347385,-99) , 
10, -1.61224, 0, 0, 0.487938,-99) , 
NN(
0, 
0, 
-1, 2.3469, 1, -1, 0.292047,-99) , 
10, 1.85709, 1, 0, 0.476245,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0625702);
  fForest.push_back( 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.468756,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0492844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295515,-99) , 
7, 0.023792, 1, 0, 0.49225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237684,-99) , 
10, -2.2653, 0, 0, 0.485007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255359,-99) , 
10, 2.14277, 1, 0, 0.476694,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0783327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398347,-99) , 
5, 0.999909, 0, 0, 0.490152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275472,-99) , 
10, -2.14285, 0, 0, 0.482649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280485,-99) , 
5, 0.999048, 0, 0, 0.473594,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.149743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339903,-99) , 
5, 0.999048, 0, 0, 0.512241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366394,-99) , 
11, 2.14028, 0, 0, 0.428585,-99) , 
8, 2.09593, 0, 0, 0.477513,-99) , 
NN(
0, 
0, 
-1, -0.344705, 1, -1, 0.335886,-99) , 
10, 1.57142, 1, 0, 0.464654,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.136808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.89745, 0, 1, 0.518629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369087,-99) , 
9, -1.57147, 0, 0, 0.506037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361575,-99) , 
11, -2.37572, 1, 0, 0.4105,-99) , 
11, 3.22523, 0, 0, 0.430611,-99) , 
9, -951.286, 0, 0, 0.461984,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.173258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00820445, 0, 1, 0.556749,-99) , 
NN(
0, 
0, 
-1, 1.85714, 1, -1, 0.403744,-99) , 
7, 0.00453403, 0, 0, 0.46674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283103,-99) , 
7, 0.0238062, 1, 0, 0.458984,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.086582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359444,-99) , 
10, -1.57145, 0, 0, 0.491117,-99) , 
NN(
0, 
0, 
-1, 2.92213, 0, -1, 0.40705,-99) , 
5, 0.999955, 0, 0, 0.469632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293891,-99) , 
5, 0.999048, 0, 0, 0.461912,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.147247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91876, 0, 1, 0.587117,-99) , 
NN(
0, 
0, 
-1, 0.00226728, 0, -1, 0.437599,-99) , 
7, 0.0079354, 0, 0, 0.466145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287246,-99) , 
7, 0.0238062, 1, 0, 0.458804,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.131577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483018,-99) , 
3, 2.19703, 0, 0, 0.524274,-99) , 
NN(
0, 
0, 
-1, 1.2857, 1, -1, 0.422101,-99) , 
7, 0.00339766, 0, 0, 0.476364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291112,-99) , 
7, 0.0237841, 1, 0, 0.469005,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.109525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444485,-99) , 
7, 0.00340125, 0, 0, 0.491343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316253,-99) , 
7, 0.0238087, 1, 0, 0.484169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2857,-99) , 
10, 2.14285, 1, 0, 0.477377,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0448851);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.477573,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0398648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339128,-99) , 
7, 0.023792, 1, 0, 0.495343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284743,-99) , 
10, -2.26529, 0, 0, 0.489691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314267,-99) , 
10, 2.14285, 1, 0, 0.483634,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0714319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482019,-99) , 
3, 3.66138, 0, 0, 0.493314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272567,-99) , 
10, -2.26529, 0, 0, 0.48758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30242,-99) , 
10, 2.14285, 1, 0, 0.481354,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.043209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345671,-99) , 
7, 0.0237526, 1, 0, 0.497347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269766,-99) , 
10, 2.26522, 1, 0, 0.491112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302109,-99) , 
10, -2.14285, 0, 0, 0.485114,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0410986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349279,-99) , 
10, 2.0204, 1, 0, 0.495652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324081,-99) , 
10, -2.14284, 0, 0, 0.490158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328454,-99) , 
5, 0.999048, 0, 0, 0.48318,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0703578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.78647, 0, 1, 0.561724,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.474646,-99) , 
11, -3.47737, 1, 0, 0.485993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293774,-99) , 
5, 0.998572, 0, 0, 0.480507,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0756989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31692,-99) , 
10, 2.18361, 1, 0, 0.504368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272013,-99) , 
3, 1.70054, 0, 0, 0.413559,-99) , 
10, -1.28572, 0, 0, 0.49285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352824,-99) , 
2, -0.21427, 0, 0, 0.485888,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0905925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342113,-99) , 
7, 0.023792, 1, 0, 0.502934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318363,-99) , 
3, 1.93895, 0, 0, 0.424411,-99) , 
10, -1.16328, 0, 0, 0.489184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54245,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.35995,-99) , 
6, -0.43874, 1, 0, 0.405915,-99) , 
10, 1.28566, 1, 0, 0.478232,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0964565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459399,-99) , 
5, 0.999994, 0, 0, 0.489754,-99) , 
NN(
0, 
0, 
-1, 2.91688, 0, -1, 0.402449,-99) , 
5, 0.999864, 0, 0, 0.478232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291234,-99) , 
5, 0.998572, 0, 0, 0.472869,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0766766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48538,-99) , 
6, 0.683818, 1, 0, 0.579109,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.471172,-99) , 
3, 3.89092, 0, 0, 0.479435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30778,-99) , 
5, 0.998572, 0, 0, 0.474424,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0705986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480832,-99) , 
6, 0.507417, 1, 0, 0.549148,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.477175,-99) , 
3, 3.41799, 0, 0, 0.488854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315891,-99) , 
5, 0.998572, 0, 0, 0.483928,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0923599);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.571615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490987,-99) , 
6, -0.158996, 1, 0, 0.523519,-99) , 
NN(
0, 
0, 
-1, 1.72152, 0, -1, 0.450651,-99) , 
9, -951.286, 0, 0, 0.481321,-99) , 
11, 3.29932, 0, 0, 0.490941,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0779928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467787,-99) , 
0, 0.500947, 1, 0, 0.513302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352396,-99) , 
3, 2.92554, 0, 0, 0.43131,-99) , 
5, 0.999864, 0, 0, 0.503685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362704,-99) , 
5, 0.999048, 0, 0, 0.497817,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0534142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.461872, 1, 1, 0.564599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397521,-99) , 
6, 0.229309, 1, 0, 0.488734,-99) , 
3, 3.45254, 0, 0, 0.50119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373552,-99) , 
4, 9.11848, 1, 0, 0.49509,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0688628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.297459, 1, 1, 0.541963,-99) , 
NN(
0, 
0, 
-1, -0.999989, 0, -1, 0.475056,-99) , 
3, 2.96047, 0, 0, 0.494119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365099,-99) , 
4, 9.42599, 1, 0, 0.488492,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.075675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494933,-99) , 
10, -1.00008, 0, 0, 0.588149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441463,-99) , 
7, 0.0021537, 0, 0, 0.481284,-99) , 
7, 0.00904562, 0, 0, 0.497281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358558,-99) , 
7, 0.0237449, 1, 0, 0.491895,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0511995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494006,-99) , 
11, 2.72239, 0, 0, 0.504214,-99) , 
NN(
0, 
0, 
-1, 2.43486, 0, -1, 0.432566,-99) , 
5, 0.999864, 0, 0, 0.494877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332973,-99) , 
5, 0.998572, 0, 0, 0.49035,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0662161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
6, 0.0477587, 1, 0, 0.52724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386626,-99) , 
10, -0.999989, 0, 0, 0.476663,-99) , 
3, 2.44893, 0, 0, 0.498023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340635,-99) , 
5, 0.998572, 0, 0, 0.493604,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0635595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0277609, 1, 1, 0.531259,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.474341,-99) , 
3, 2.44892, 0, 0, 0.49833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334779,-99) , 
5, 0.998572, 0, 0, 0.493897,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0571145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459207,-99) , 
5, 0.999932, 0, 0, 0.504073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345594,-99) , 
5, 0.998572, 0, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345271,-99) , 
10, -2.14284, 0, 0, 0.495254,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0860432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4602, 0, 1, 0.583063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456456,-99) , 
9, -951.286, 0, 0, 0.481243,-99) , 
7, 0.00906997, 0, 0, 0.496385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363862,-99) , 
7, 0.0238087, 1, 0, 0.491306,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0620561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484279,-99) , 
3, 2.68003, 0, 0, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396112,-99) , 
4, 9.27753, 1, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362827,-99) , 
10, 2.14281, 1, 0, 0.494449,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0521867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484953,-99) , 
10, 0.433072, 1, 0, 0.579332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416138,-99) , 
6, 0.368702, 1, 0, 0.495242,-99) , 
3, 3.94467, 0, 0, 0.501492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382843,-99) , 
4, 9.52224, 1, 0, 0.496607,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0596414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485735,-99) , 
7, 0.00906901, 0, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380143,-99) , 
7, 0.0238062, 1, 0, 0.493605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36521,-99) , 
10, 2.14285, 1, 0, 0.489469,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0363204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36512, 1, 1, 0.50849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403818,-99) , 
2, -0.214589, 0, 0, 0.503839,-99) , 
NN(
0, 
0, 
-1, 2.66508, 0, -1, 0.423735,-99) , 
0, 0.503805, 1, 0, 0.496609,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0452548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485032,-99) , 
10, 0.439858, 1, 0, 0.580152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434225,-99) , 
6, 0.276159, 1, 0, 0.490719,-99) , 
3, 3.9446, 0, 0, 0.497344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389504,-99) , 
4, 9.50466, 1, 0, 0.492911,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0901271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43051,-99) , 
3, 3.72156, 0, 0, 0.507207,-99) , 
6, 0.229422, 1, 0, 0.54131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474517,-99) , 
6, -0.625664, 1, 0, 0.489594,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.31807,-99) , 
10, -1.57142, 0, 0, 0.479185,-99) , 
11, -3.43039, 1, 0, 0.488138,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0802853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49594,-99) , 
3, 1.70865, 0, 0, 0.548661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46138,-99) , 
12, -0.307624, 1, 0, 0.481344,-99) , 
7, 0.00680248, 0, 0, 0.49812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374249,-99) , 
7, 0.0238087, 1, 0, 0.493347,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0432912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494709,-99) , 
7, 0.0090614, 0, 0, 0.505633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390437,-99) , 
7, 0.0237868, 1, 0, 0.501089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36044,-99) , 
5, 0.998572, 0, 0, 0.49728,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.035716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.90434, 0, 1, 0.510106,-99) , 
NN(
0, 
0, 
-1, -0.064231, 1, -1, 0.418441,-99) , 
10, 1.77543, 1, 0, 0.504354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371747,-99) , 
10, -2.14285, 0, 0, 0.50055,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0821942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399953,-99) , 
7, 0.0238062, 1, 0, 0.515469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42802,-99) , 
6, -0.531892, 1, 0, 0.455208,-99) , 
10, 1.16324, 1, 0, 0.505024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549458,-99) , 
NN(
0, 
0, 
-1, -1.93879, 0, -1, 0.337981,-99) , 
8, 1.97333, 0, 0, 0.44032,-99) , 
10, -1.28571, 0, 0, 0.497018,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.065366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432038,-99) , 
6, 0.366235, 1, 0, 0.500148,-99) , 
3, 3.94465, 0, 0, 0.50607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454356,-99) , 
6, -0.302895, 1, 0, 0.473573,-99) , 
NN(
0, 
0, 
-1, 2.38505, 0, -1, 0.434796,-99) , 
3, 1.71813, 0, 0, 0.460757,-99) , 
0, 0.499995, 1, 0, 0.491264,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0762481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458702,-99) , 
3, 4.02663, 0, 0, 0.491571,-99) , 
6, 0.31023, 1, 0, 0.525658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386139,-99) , 
5, 0.999905, 0, 0, 0.49129,-99) , 
NN(
0, 
0, 
-1, 2.91856, 0, -1, 0.374709,-99) , 
6, 0.161703, 1, 0, 0.479032,-99) , 
3, 3.20651, 0, 0, 0.489591,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.103506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.38696, 0, 1, 0.630792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419886,-99) , 
3, 3.476, 0, 0, 0.48334,-99) , 
6, 0.301401, 1, 0, 0.522759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468179,-99) , 
3, 2.37467, 0, 0, 0.48321,-99) , 
NN(
0, 
0, 
-1, 2.71849, 0, -1, 0.391291,-99) , 
6, -0.00153697, 1, 0, 0.470635,-99) , 
3, 2.96048, 0, 0, 0.48568,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0591336);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471203,-99) , 
6, 0.468913, 1, 0, 0.532014,-99) , 
NN(
0, 
0, 
-1, 0.0741073, 1, -1, 0.484099,-99) , 
3, 3.17971, 0, 0, 0.494559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368871,-99) , 
5, 0.998572, 0, 0, 0.491093,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0523039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.832172, 1, 1, 0.573418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483335,-99) , 
9, -951.286, 1, 0, 0.535796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409807,-99) , 
12, 2.27209, 1, 0, 0.49685,-99) , 
NN(
0, 
0, 
-1, -1.45782, 0, -1, 0.302521,-99) , 
8, 1.58744, 0, 0, 0.483739,-99) , 
11, 1.18927, 0, 0, 0.492931,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.048866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473975,-99) , 
9, -951.286, 1, 0, 0.542896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383593,-99) , 
10, 2.14281, 1, 0, 0.496594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323095,-99) , 
11, 1.22079, 0, 0, 0.409093,-99) , 
3, 1.48775, 0, 0, 0.485243,-99) , 
11, 3.12661, 0, 0, 0.491609,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0466152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479198,-99) , 
9, -951.286, 1, 0, 0.541273,-99) , 
NN(
0, 
0, 
-1, 1.50064, 0, -1, 0.484786,-99) , 
11, 3.28636, 0, 0, 0.491015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361281,-99) , 
5, 0.998572, 0, 0, 0.487499,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0562136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465275,-99) , 
7, 0.0022675, 0, 0, 0.499253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396643,-99) , 
7, 0.0238087, 1, 0, 0.495321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349033,-99) , 
5, 0.998572, 0, 0, 0.491453,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.021813);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414857,-99) , 
7, 0.0238062, 1, 0, 0.497736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413025,-99) , 
2, -0.214223, 0, 0, 0.494241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370862,-99) , 
5, 0.998572, 0, 0, 0.490939,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0494249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489724,-99) , 
6, -0.699522, 1, 0, 0.528284,-99) , 
NN(
0, 
0, 
-1, 1.5622, 0, -1, 0.481189,-99) , 
11, 0.990198, 0, 0, 0.490259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36427,-99) , 
5, 0.998572, 0, 0, 0.486878,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0616098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48579,-99) , 
6, -0.251703, 1, 0, 0.506846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377544,-99) , 
8, 1.71406, 0, 0, 0.461923,-99) , 
10, -0.999988, 0, 0, 0.4987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380629,-99) , 
5, 0.998572, 0, 0, 0.495582,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0528092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494829,-99) , 
6, 0.476966, 1, 0, 0.539889,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.483805,-99) , 
3, 3.2065, 0, 0, 0.496264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391042,-99) , 
4, 9.52224, 1, 0, 0.491942,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0669014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.39536, 1, 1, 0.516954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418167,-99) , 
11, 1.76663, 0, 0, 0.475525,-99) , 
3, 1.71601, 0, 0, 0.50362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389629,-99) , 
5, 0.998572, 0, 0, 0.500591,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0451734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.121586, 1, 1, 0.524992,-99) , 
NN(
0, 
0, 
-1, -0.0904026, 1, -1, 0.483345,-99) , 
3, 2.71444, 0, 0, 0.497934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408965,-99) , 
4, 9.50853, 1, 0, 0.494205,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0666222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.65304, 0, 1, 0.524821,-99) , 
NN(
0, 
0, 
-1, 2.74346, 0, -1, 0.471658,-99) , 
6, -0.0643516, 1, 0, 0.502252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482805,-99) , 
10, -1.7619, 1, 0, 0.506962,-99) , 
NN(
0, 
0, 
-1, 1.54168, 0, -1, 0.382063,-99) , 
8, 1.71737, 0, 0, 0.459891,-99) , 
10, -1.00001, 0, 0, 0.494594,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0449522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499959,-99) , 
6, 0.124521, 1, 0, 0.526649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415008,-99) , 
6, -0.162703, 1, 0, 0.485809,-99) , 
3, 2.71455, 0, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418342,-99) , 
4, 9.10661, 1, 0, 0.496257,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.085291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440128,-99) , 
3, 3.27681, 0, 0, 0.492592,-99) , 
6, 0.119456, 1, 0, 0.51718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451223,-99) , 
5, 0.999991, 0, 0, 0.488243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353292,-99) , 
5, 0.999815, 0, 0, 0.478895,-99) , 
3, 2.71444, 0, 0, 0.492439,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0943552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45393,-99) , 
3, 2.66508, 0, 0, 0.495801,-99) , 
6, -0.312845, 1, 0, 0.506495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468509,-99) , 
9, -951.286, 1, 0, 0.51816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394658,-99) , 
9, -951.286, 0, 0, 0.440423,-99) , 
11, 1.52482, 0, 0, 0.470763,-99) , 
3, 1.9667, 0, 0, 0.491852,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0606271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491767,-99) , 
6, -0.102183, 1, 0, 0.513691,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.472464,-99) , 
3, 2.05072, 0, 0, 0.494446,-99) , 
NN(
0, 
0, 
-1, 4.1649, 0, -1, 0.411457,-99) , 
6, 0.683663, 1, 0, 0.489476,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0533846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490695,-99) , 
3, 1.45755, 0, 0, 0.547057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483997,-99) , 
11, 2.09881, 0, 0, 0.490074,-99) , 
7, 0.00906901, 0, 0, 0.4985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413876,-99) , 
7, 0.0238087, 1, 0, 0.495221,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0313325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.518126, 1, 1, 0.580734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397205,-99) , 
10, -2.14284, 0, 0, 0.499571,-99) , 
3, 3.60979, 0, 0, 0.506618,-99) , 
NN(
0, 
0, 
-1, 4.17843, 0, -1, 0.430334,-99) , 
6, 0.684497, 1, 0, 0.502071,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.040687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.184892, 1, 1, 0.517292,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.482066,-99) , 
3, 2.19553, 0, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423877,-99) , 
4, 9.12253, 1, 0, 0.496473,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0433007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.516931, 1, 1, 0.568702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453732,-99) , 
6, 0.122767, 1, 0, 0.495458,-99) , 
3, 3.58231, 0, 0, 0.502145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37069,-99) , 
3, 4.16697, 0, 0, 0.434961,-99) , 
6, 0.684165, 1, 0, 0.498081,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.060379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48024,-99) , 
3, 1.46069, 0, 0, 0.533376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480397,-99) , 
11, 2.21036, 0, 0, 0.485343,-99) , 
7, 0.00680165, 0, 0, 0.497157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408505,-99) , 
7, 0.0238062, 1, 0, 0.493764,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0315124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.38511, 0, 1, 0.508736,-99) , 
NN(
0, 
0, 
-1, 4.59782, 0, -1, 0.450092,-99) , 
6, 0.684758, 1, 0, 0.505129,-99) , 
NN(
0, 
0, 
-1, 0.5058, 1, -1, 0.454405,-99) , 
0, 0.502852, 1, 0, 0.498505,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0217603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435742,-99) , 
6, 0.562769, 1, 0, 0.495894,-99) , 
3, 4.16655, 0, 0, 0.499572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421657,-99) , 
4, 9.52224, 1, 0, 0.496405,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.039196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495766,-99) , 
3, 2.94448, 0, 0, 0.506235,-99) , 
NN(
0, 
0, 
-1, 0.999996, 1, -1, 0.459415,-99) , 
7, 0.00113292, 0, 0, 0.498485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415079,-99) , 
7, 0.023792, 1, 0, 0.495308,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0482213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43831, 0, 1, 0.549286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477519,-99) , 
3, 2.46912, 0, 0, 0.494259,-99) , 
7, 0.0101797, 0, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416534,-99) , 
7, 0.0237526, 1, 0, 0.497479,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0337733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467822,-99) , 
6, 0.490049, 1, 0, 0.502408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415002,-99) , 
10, 2.02032, 1, 0, 0.498863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396537,-99) , 
10, -2.14285, 0, 0, 0.496171,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0522941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469078,-99) , 
6, 0.214206, 1, 0, 0.504074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418442,-99) , 
8, 1.74733, 0, 0, 0.472404,-99) , 
10, -0.795952, 0, 0, 0.49656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411671,-99) , 
10, 2.14276, 1, 0, 0.493872,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0335212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550758,-99) , 
NN(
0, 
0, 
-1, 0.645333, 1, -1, 0.48514,-99) , 
3, 4.1541, 0, 0, 0.488602,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0555332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4238,-99) , 
3, 4.31653, 0, 0, 0.474053,-99) , 
6, 0.646222, 1, 0, 0.533106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401847,-99) , 
5, 0.99981, 0, 0, 0.500611,-99) , 
NN(
0, 
0, 
-1, 0.539479, 1, -1, 0.439704,-99) , 
6, 0.267806, 1, 0, 0.492028,-99) , 
3, 3.66691, 0, 0, 0.497173,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0469445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473902,-99) , 
3, 1.71658, 0, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, -0.714308, 0, -1, 0.458941,-99) , 
7, 0.00113375, 0, 0, 0.493741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421812,-99) , 
7, 0.0238087, 1, 0, 0.490964,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0313302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562352,-99) , 
NN(
0, 
0, 
-1, 0.562062, 1, -1, 0.489468,-99) , 
3, 4.16655, 0, 0, 0.493135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404416,-99) , 
10, 2.14275, 1, 0, 0.490422,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0495155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493399,-99) , 
8, 2.74817, 0, 0, 0.506002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421227,-99) , 
8, 3.37818, 0, 0, 0.480965,-99) , 
6, 0.0295762, 1, 0, 0.497166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425647,-99) , 
2, -0.213471, 0, 0, 0.493766,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0317689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77819, 1, 1, 0.530756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308332,-99) , 
8, 1.50472, 0, 0, 0.493228,-99) , 
11, 1.10977, 0, 0, 0.500591,-99) , 
NN(
0, 
0, 
-1, 4.17096, 0, -1, 0.434397,-99) , 
6, 0.684759, 1, 0, 0.496608,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.027909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.919776, 1, 1, 0.535973,-99) , 
NN(
0, 
0, 
-1, 1.42565, 0, -1, 0.491488,-99) , 
6, -0.812825, 1, 0, 0.495987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424134,-99) , 
4, 9.52058, 1, 0, 0.493025,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0442949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483228,-99) , 
10, -0.714311, 0, 0, 0.509344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477895,-99) , 
2, 0.0716194, 0, 0, 0.484304,-99) , 
0, 0.499043, 1, 0, 0.498943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409682,-99) , 
4, 9.50466, 1, 0, 0.495397,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0430048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.156976, 1, 1, 0.563566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454037,-99) , 
6, 0.0584366, 1, 0, 0.493977,-99) , 
3, 3.46539, 0, 0, 0.499786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520525,-99) , 
NN(
0, 
0, 
-1, 0.432165, 1, -1, 0.42077,-99) , 
3, 4.33914, 0, 0, 0.450521,-99) , 
6, 0.587653, 1, 0, 0.494929,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0451565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.593744, 1, 1, 0.547862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452968,-99) , 
6, 0.180371, 1, 0, 0.495588,-99) , 
3, 3.6612, 0, 0, 0.501798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529576,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.442756,-99) , 
6, -0.438294, 1, 0, 0.467071,-99) , 
10, 0.999998, 1, 0, 0.495213,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0420235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482327,-99) , 
3, 2.6886, 0, 0, 0.493629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405464,-99) , 
5, 0.998572, 0, 0, 0.49127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413598,-99) , 
7, 0.023792, 1, 0, 0.488279,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0394427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333312, 1, 1, 0.548077,-99) , 
NN(
0, 
0, 
-1, 0.0603954, 1, -1, 0.489468,-99) , 
3, 3.26011, 0, 0, 0.497125,-99) , 
NN(
0, 
0, 
-1, -0.102466, 1, -1, 0.440365,-99) , 
6, 0.590599, 1, 0, 0.491636,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0435178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41283, 0, 1, 0.539401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478977,-99) , 
9, -951.286, 0, 0, 0.493109,-99) , 
7, 0.0102026, 0, 0, 0.498455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424161,-99) , 
7, 0.0238062, 1, 0, 0.495612,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0447966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.253024, 1, 1, 0.55722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442508,-99) , 
6, -0.00178784, 1, 0, 0.490835,-99) , 
3, 3.0976, 0, 0, 0.500038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455299,-99) , 
3, 4.1115, 0, 0, 0.482358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377291,-99) , 
10, 1.00154, 1, 0, 0.458777,-99) , 
6, 0.497331, 1, 0, 0.494362,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0367306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495912,-99) , 
8, 1.9247, 0, 0, 0.512073,-99) , 
NN(
0, 
0, 
-1, 2.1002, 0, -1, 0.485946,-99) , 
6, -0.438609, 1, 0, 0.495862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422653,-99) , 
5, 0.999048, 0, 0, 0.49306,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0409437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.201309, 1, 1, 0.558701,-99) , 
NN(
0, 
0, 
-1, 0.999723, 0, -1, 0.491556,-99) , 
3, 2.99071, 0, 0, 0.500205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525267,-99) , 
NN(
0, 
0, 
-1, 4.81566, 1, -1, 0.446181,-99) , 
3, 4.16544, 0, 0, 0.468081,-99) , 
6, 0.403056, 1, 0, 0.494461,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0344206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47676,-99) , 
10, -0.714292, 0, 0, 0.50025,-99) , 
3, 3.80246, 0, 0, 0.50337,-99) , 
NN(
0, 
0, 
-1, 0.156109, 1, -1, 0.442194,-99) , 
6, 0.681187, 1, 0, 0.49967,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0369191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476957,-99) , 
7, 0.00226584, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424872,-99) , 
7, 0.023792, 1, 0, 0.496923,-99) , 
6, -0.906412, 1, 0, 0.499827,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.017466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569936,-99) , 
NN(
0, 
0, 
-1, 0.524303, 1, -1, 0.495582,-99) , 
3, 4.20811, 0, 0, 0.498019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412871,-99) , 
6, 0.778355, 1, 0, 0.49573,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0396852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143017, 0, 1, 0.562864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488966,-99) , 
6, -0.915209, 1, 0, 0.509097,-99) , 
12, 3.52482, 1, 0, 0.525156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497099,-99) , 
6, -0.588167, 1, 0, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364432,-99) , 
8, 1.61823, 0, 0, 0.494165,-99) , 
11, 0.874947, 0, 0, 0.50032,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0412462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499775,-99) , 
6, -0.918147, 1, 0, 0.517229,-99) , 
12, 3.77819, 1, 0, 0.532994,-99) , 
NN(
NN(
0, 
0, 
-1, -0.466609, 1, 1, 0.510273,-99) , 
NN(
0, 
0, 
-1, -1.42594, 0, -1, 0.410288,-99) , 
3, 1.54009, 0, 0, 0.500706,-99) , 
11, 1.19761, 0, 0, 0.506465,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0265071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.531898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375262,-99) , 
10, -1.85711, 0, 0, 0.50099,-99) , 
12, -1.3261, 1, 0, 0.504411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441482,-99) , 
4, 9.42599, 1, 0, 0.501758,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0206009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458926,-99) , 
6, 0.684497, 1, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, -0.349648, 1, -1, 0.451776,-99) , 
0, 0.504757, 1, 0, 0.497807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415388,-99) , 
10, 2.14285, 1, 0, 0.495263,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.069754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97703, 0, 1, 0.588933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440729,-99) , 
12, 2.22917, 0, 0, 0.494622,-99) , 
8, 1.80746, 0, 0, 0.513922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485588,-99) , 
6, -0.17151, 1, 0, 0.496523,-99) , 
NN(
0, 
0, 
-1, 1.94684, 0, -1, 0.427509,-99) , 
3, 2.10423, 0, 0, 0.485571,-99) , 
6, -0.438769, 1, 0, 0.496071,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0377369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0172263, 1, 1, 0.516473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442795,-99) , 
6, -0.30845, 1, 0, 0.490336,-99) , 
8, 2.74813, 0, 0, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440982,-99) , 
4, 9.52452, 1, 0, 0.498454,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0328226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481854,-99) , 
3, 1.87042, 0, 0, 0.499085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427992,-99) , 
6, 0.772529, 1, 0, 0.496972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434239,-99) , 
7, 0.0238062, 1, 0, 0.494541,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.033225);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495206,-99) , 
6, -0.55831, 1, 0, 0.501935,-99) , 
NN(
0, 
0, 
-1, 2.34618, 0, -1, 0.470191,-99) , 
3, 1.47794, 0, 0, 0.494811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431667,-99) , 
10, 2.1428, 1, 0, 0.49284,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0299901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.759282, 1, 1, 0.537217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476108,-99) , 
8, 1.20362, 0, 0, 0.493472,-99) , 
9, -951.286, 1, 0, 0.51888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424824,-99) , 
10, 1.85703, 1, 0, 0.49754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339035,-99) , 
8, 1.53349, 0, 0, 0.491145,-99) , 
11, 1.04356, 0, 0, 0.496375,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0328236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495811,-99) , 
6, -0.168305, 1, 0, 0.506313,-99) , 
NN(
0, 
0, 
-1, -0.388319, 1, -1, 0.4838,-99) , 
3, 2.2054, 0, 0, 0.495151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438046,-99) , 
10, 2.14285, 1, 0, 0.493366,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0212704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.80591, 0, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 1.00516, 1, -1, 0.47194,-99) , 
6, 0.497333, 1, 0, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444694,-99) , 
2, -0.214418, 0, 0, 0.498426,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.020219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496846,-99) , 
10, 0.432959, 1, 0, 0.538385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464,-99) , 
6, 0.270227, 1, 0, 0.494844,-99) , 
3, 3.7497, 0, 0, 0.498556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432856,-99) , 
6, 0.778355, 1, 0, 0.496807,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0496325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443535,-99) , 
3, 2.77313, 0, 0, 0.496917,-99) , 
6, -0.0131545, 1, 0, 0.50941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446157,-99) , 
6, -0.364828, 1, 0, 0.490394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361665,-99) , 
5, 0.99981, 0, 0, 0.482483,-99) , 
3, 2.46852, 0, 0, 0.493996,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0507347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489907,-99) , 
8, 1.76707, 0, 0, 0.54094,-99) , 
NN(
0, 
0, 
-1, 1.903, 1, -1, 0.489309,-99) , 
6, -0.464609, 1, 0, 0.497899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463864,-99) , 
9, -951.286, 1, 0, 0.501255,-99) , 
NN(
0, 
0, 
-1, -1.38488, 0, -1, 0.391675,-99) , 
12, 2.61886, 0, 0, 0.47042,-99) , 
3, 1.47794, 0, 0, 0.491841,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0538262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462306,-99) , 
3, 3.09964, 0, 0, 0.499567,-99) , 
6, 0.0195822, 1, 0, 0.513779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443897,-99) , 
6, -0.229321, 1, 0, 0.497431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383062,-99) , 
5, 0.99981, 0, 0, 0.490156,-99) , 
8, 2.79608, 0, 0, 0.499539,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0511513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423005,-99) , 
12, 1.40273, 1, 0, 0.497897,-99) , 
6, -0.325426, 1, 0, 0.505044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456829,-99) , 
5, 0.999995, 0, 0, 0.48459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382096,-99) , 
5, 0.999905, 0, 0, 0.474954,-99) , 
3, 1.97634, 0, 0, 0.492665,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0425923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490911,-99) , 
6, -0.248327, 1, 0, 0.500547,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.475277,-99) , 
3, 1.95926, 0, 0, 0.490582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432795,-99) , 
7, 0.0238087, 1, 0, 0.488353,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0400686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488342,-99) , 
6, -0.00244843, 1, 0, 0.505337,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.48407,-99) , 
3, 1.96182, 0, 0, 0.49693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440407,-99) , 
7, 0.0238087, 1, 0, 0.494772,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0401819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498524,-99) , 
6, -0.0888525, 1, 0, 0.510437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446672,-99) , 
6, -0.494916, 1, 0, 0.486183,-99) , 
3, 2.22245, 0, 0, 0.49872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429238,-99) , 
7, 0.0237868, 1, 0, 0.49609,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0366575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.7081, 0, 1, 0.566333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426484,-99) , 
10, 1.8572, 1, 0, 0.496498,-99) , 
6, -0.0518846, 1, 0, 0.509298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448619,-99) , 
6, -0.360588, 1, 0, 0.493735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384305,-99) , 
5, 0.99981, 0, 0, 0.487315,-99) , 
8, 2.46814, 0, 0, 0.498038,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0353469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491628,-99) , 
8, 2.75751, 0, 0, 0.501877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44384,-99) , 
7, 0.0238087, 1, 0, 0.499687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461767,-99) , 
3, 2.58631, 0, 0, 0.473959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433881,-99) , 
6, 0.390608, 1, 0, 0.467666,-99) , 
0, 0.5019, 1, 0, 0.493829,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0323698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.625977, 1, 1, 0.561014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437772,-99) , 
12, 1.75348, 1, 0, 0.494431,-99) , 
6, -0.557738, 1, 0, 0.50051,-99) , 
NN(
0, 
0, 
-1, -1.57378, 0, -1, 0.471668,-99) , 
3, 1.47469, 0, 0, 0.494155,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0436444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467338,-99) , 
3, 1.22025, 0, 0, 0.521925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485906,-99) , 
6, -0.81285, 1, 0, 0.48955,-99) , 
7, 0.00793527, 0, 0, 0.495759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438662,-99) , 
7, 0.0238062, 1, 0, 0.493615,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0207916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478452,-99) , 
6, 0.280778, 1, 0, 0.498305,-99) , 
3, 4.19064, 0, 0, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445844,-99) , 
4, 9.52058, 1, 0, 0.498553,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0290271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451837,-99) , 
10, -1.57143, 0, 0, 0.499617,-99) , 
11, -3.71296, 1, 0, 0.502864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48587,-99) , 
6, -0.0968346, 1, 0, 0.497753,-99) , 
NN(
0, 
0, 
-1, -0.331358, 1, -1, 0.473737,-99) , 
8, 2.41944, 0, 0, 0.485505,-99) , 
0, 0.499043, 1, 0, 0.495608,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0208694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534267,-99) , 
NN(
0, 
0, 
-1, 1.50544, 0, -1, 0.492532,-99) , 
6, -0.906412, 1, 0, 0.494535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439917,-99) , 
0, 0.505709, 1, 0, 0.492749,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0192135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147652, 1, 1, 0.540106,-99) , 
NN(
0, 
0, 
-1, 0.439398, 1, -1, 0.494863,-99) , 
3, 3.74463, 0, 0, 0.498817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440073,-99) , 
6, 0.778081, 1, 0, 0.497214,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0350299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496148,-99) , 
6, 0.154654, 1, 0, 0.505935,-99) , 
6, -0.0986899, 1, 0, 0.514365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445348,-99) , 
6, -0.184912, 1, 0, 0.498177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398096,-99) , 
5, 0.99981, 0, 0, 0.49218,-99) , 
3, 2.46848, 0, 0, 0.501732,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0438165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.201887, 1, 1, 0.577658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495303,-99) , 
11, -4.23611, 1, 0, 0.50185,-99) , 
6, -0.100428, 1, 0, 0.513208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407184,-99) , 
10, -1.85714, 0, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 2.02995, 0, -1, 0.440849,-99) , 
6, -0.37378, 1, 0, 0.489321,-99) , 
8, 2.4353, 0, 0, 0.501185,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0443232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465657,-99) , 
8, 2.88569, 0, 0, 0.504429,-99) , 
6, -0.2085, 1, 0, 0.511041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454981,-99) , 
5, 0.999982, 0, 0, 0.491127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397039,-99) , 
5, 0.99981, 0, 0, 0.485714,-99) , 
8, 2.42717, 0, 0, 0.498325,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0441397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71529, 0, 1, 0.554853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457279,-99) , 
12, 1.27214, 1, 0, 0.495505,-99) , 
6, -0.555065, 1, 0, 0.500947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464385,-99) , 
9, -951.286, 1, 0, 0.501309,-99) , 
NN(
0, 
0, 
-1, -1.40022, 0, -1, 0.417381,-99) , 
12, 2.80283, 0, 0, 0.474974,-99) , 
3, 1.48428, 0, 0, 0.49514,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0457307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.67066, 0, 1, 0.560821,-99) , 
NN(
0, 
0, 
-1, 0.712567, 1, -1, 0.492283,-99) , 
6, -0.0969845, 1, 0, 0.502847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490581,-99) , 
10, -0.714722, 1, 0, 0.507146,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.465401,-99) , 
9, -951.286, 0, 0, 0.480907,-99) , 
8, 2.43424, 0, 0, 0.491791,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0405263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.8326, 0, 1, 0.550803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470185,-99) , 
10, 0.71421, 1, 0, 0.500955,-99) , 
6, 0.0451013, 1, 0, 0.511112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456023,-99) , 
6, -0.314998, 1, 0, 0.492615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402703,-99) , 
5, 0.99981, 0, 0, 0.487236,-99) , 
3, 2.45557, 0, 0, 0.497547,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0376841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433013,-99) , 
4, 9.53351, 1, 0, 0.498926,-99) , 
6, -0.333535, 1, 0, 0.503573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483044,-99) , 
8, 1.68248, 0, 0, 0.496679,-99) , 
NN(
0, 
0, 
-1, 1.65524, 0, -1, 0.44514,-99) , 
6, -0.519871, 1, 0, 0.483099,-99) , 
3, 1.96679, 0, 0, 0.49517,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0318675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.547363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477887,-99) , 
10, -0.428588, 0, 0, 0.493571,-99) , 
8, 3.71642, 0, 0, 0.498861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508953,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.427613,-99) , 
3, 4.10552, 0, 0, 0.463809,-99) , 
6, 0.585949, 1, 0, 0.495414,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0248462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495017,-99) , 
12, -1.61899, 1, 0, 0.497655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448502,-99) , 
7, 0.023792, 1, 0, 0.495788,-99) , 
NN(
0, 
0, 
-1, 0.505573, 1, -1, 0.462085,-99) , 
0, 0.502852, 1, 0, 0.491353,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0149745);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0238087, 1, -1, 0.492513,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0341591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4843,-99) , 
3, 1.73039, 0, 0, 0.503193,-99) , 
NN(
0, 
0, 
-1, -0.532659, 1, -1, 0.473186,-99) , 
7, 0.00113381, 0, 0, 0.49827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446683,-99) , 
7, 0.0238088, 1, 0, 0.496291,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0192245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85695, 1, 1, 0.503488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411165,-99) , 
12, 2.31581, 0, 0, 0.480844,-99) , 
3, 1.47794, 0, 0, 0.49881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450274,-99) , 
7, 0.0238062, 1, 0, 0.496977,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0394282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.112896, 1, 1, 0.515712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478237,-99) , 
6, -0.662857, 1, 0, 0.488927,-99) , 
8, 3.07117, 0, 0, 0.497608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442138,-99) , 
4, 9.50853, 1, 0, 0.495418,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0220026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496425,-99) , 
7, 0.0113352, 0, 0, 0.499651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447937,-99) , 
7, 0.0238062, 1, 0, 0.497714,-99) , 
NN(
0, 
0, 
-1, 0.296073, 1, -1, 0.468266,-99) , 
0, 0.502852, 1, 0, 0.493855,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0347391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461112,-99) , 
6, 0.0673886, 1, 0, 0.497115,-99) , 
8, 3.5257, 0, 0, 0.502109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462337,-99) , 
6, 0.721222, 1, 0, 0.497402,-99) , 
NN(
0, 
0, 
-1, 0.547091, 1, -1, 0.442267,-99) , 
3, 3.75593, 0, 0, 0.471269,-99) , 
6, 0.400993, 1, 0, 0.496581,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0350704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492767,-99) , 
6, 0.127327, 1, 0, 0.508374,-99) , 
NN(
0, 
0, 
-1, -0.473219, 1, -1, 0.484496,-99) , 
3, 2.27709, 0, 0, 0.495386,-99) , 
NN(
0, 
0, 
-1, 0.150257, 1, -1, 0.460229,-99) , 
6, 0.684759, 1, 0, 0.493284,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0164284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85712, 1, 1, 0.504088,-99) , 
NN(
0, 
0, 
-1, -1.57318, 0, -1, 0.483443,-99) , 
3, 1.48448, 0, 0, 0.499754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453624,-99) , 
7, 0.0238087, 1, 0, 0.498,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0152824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498829,-99) , 
7, 0.0090624, 0, 0, 0.502676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461179,-99) , 
7, 0.023792, 1, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, -0.14294, 0, -1, 0.464917,-99) , 
0, 0.504757, 1, 0, 0.499021,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0292828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479403,-99) , 
6, 0.721614, 1, 0, 0.523252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492744,-99) , 
3, 2.92333, 0, 0, 0.498151,-99) , 
NN(
0, 
0, 
-1, 0.146861, 1, -1, 0.44809,-99) , 
6, 0.551185, 1, 0, 0.495272,-99) , 
3, 3.89256, 0, 0, 0.497675,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.031686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.38796, 1, 1, 0.570599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402167,-99) , 
11, -0.0231614, 0, 0, 0.50077,-99) , 
8, 1.68218, 0, 0, 0.514557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446057,-99) , 
3, 1.79329, 0, 0, 0.496418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416085,-99) , 
12, 2.18636, 1, 0, 0.491437,-99) , 
6, -0.532313, 1, 0, 0.498394,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0404365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142897, 0, 1, 0.551817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474796,-99) , 
6, -0.832481, 1, 0, 0.502393,-99) , 
12, 3.77237, 1, 0, 0.517572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49162,-99) , 
6, -0.514162, 1, 0, 0.497997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397736,-99) , 
8, 1.57351, 0, 0, 0.49275,-99) , 
11, 1.0624, 0, 0, 0.497422,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0191511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47517,-99) , 
6, 0.439609, 1, 0, 0.500788,-99) , 
3, 4.19513, 0, 0, 0.502636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434455,-99) , 
6, 0.778356, 1, 0, 0.500813,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.019983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490575,-99) , 
4, 4.73074, 1, 0, 0.518568,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494187,-99) , 
2, 0.0720432, 0, 0, 0.497766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444911,-99) , 
5, 0.998572, 0, 0, 0.496414,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0178299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498013,-99) , 
3, 3.28399, 0, 0, 0.501944,-99) , 
NN(
0, 
0, 
-1, -2.91442, 0, -1, 0.467796,-99) , 
6, 0.567494, 1, 0, 0.499121,-99) , 
3, 4.3977, 0, 0, 0.500622,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0407822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435706,-99) , 
5, 0.999768, 0, 0, 0.503561,-99) , 
8, 3.40751, 0, 0, 0.507642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466052,-99) , 
6, 0.746905, 1, 0, 0.512395,-99) , 
NN(
0, 
0, 
-1, 3.14319, 0, -1, 0.454211,-99) , 
3, 3.79845, 0, 0, 0.479511,-99) , 
6, 0.310166, 1, 0, 0.501471,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0220477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482943,-99) , 
3, 1.47454, 0, 0, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446188,-99) , 
10, 2.14278, 1, 0, 0.499178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450169,-99) , 
0, 0.505709, 1, 0, 0.497557,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0261657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454947,-99) , 
9, -951.286, 0, 0, 0.539649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473336,-99) , 
6, 0.309516, 1, 0, 0.496696,-99) , 
5, 0.999524, 1, 0, 0.499513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459836,-99) , 
4, 9.52452, 1, 0, 0.497942,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.017462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.84802, 1, 1, 0.514404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379279,-99) , 
8, 1.53349, 0, 0, 0.495336,-99) , 
11, 1.0624, 0, 0, 0.498865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45699,-99) , 
10, -0.551115, 0, 0, 0.481976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454168,-99) , 
10, 0.428577, 1, 0, 0.472433,-99) , 
0, 0.503805, 1, 0, 0.496475,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0169707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534951,-99) , 
NN(
0, 
0, 
-1, 0.659699, 1, -1, 0.494068,-99) , 
3, 4.39773, 0, 0, 0.495354,-99) , 
NN(
0, 
0, 
-1, 2.31717, 0, -1, 0.464528,-99) , 
0, 0.504757, 1, 0, 0.493588,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0357232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490602,-99) , 
5, 0.999524, 1, 0, 0.498526,-99) , 
6, 0.109386, 1, 0, 0.50769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477001,-99) , 
5, 0.99999, 0, 0, 0.493818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431664,-99) , 
5, 0.99978, 0, 0, 0.49014,-99) , 
8, 3.05255, 0, 0, 0.495967,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0246175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497961,-99) , 
6, 0.299414, 1, 0, 0.511917,-99) , 
NN(
0, 
0, 
-1, -0.0653335, 1, -1, 0.490228,-99) , 
8, 3.39039, 0, 0, 0.495355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438637,-99) , 
5, 0.998572, 0, 0, 0.493924,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0214966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495614,-99) , 
8, 3.81325, 0, 0, 0.499545,-99) , 
NN(
0, 
0, 
-1, 0.430564, 1, -1, 0.468169,-99) , 
6, 0.567497, 1, 0, 0.496954,-99) , 
3, 4.41101, 0, 0, 0.498437,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0139676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498263,-99) , 
7, 0.0124712, 0, 0, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458117,-99) , 
7, 0.0238087, 1, 0, 0.499105,-99) , 
3, 4.38081, 0, 0, 0.500864,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0279337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457445,-99) , 
10, 1.28804, 1, 0, 0.505261,-99) , 
6, 0.366727, 1, 0, 0.518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442947,-99) , 
5, 0.999714, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, -2.96314, 0, -1, 0.464344,-99) , 
6, 0.244683, 1, 0, 0.499634,-99) , 
3, 3.20657, 0, 0, 0.503818,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0217979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494244,-99) , 
8, 2.41944, 0, 0, 0.502815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464453,-99) , 
7, 0.023792, 1, 0, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0.142758, 0, -1, 0.464855,-99) , 
0, 0.504757, 1, 0, 0.499242,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0308722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48854,-99) , 
8, 1.24207, 0, 0, 0.514818,-99) , 
10, -0.999564, 1, 0, 0.522158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496994,-99) , 
10, -1.85714, 1, 0, 0.500272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400124,-99) , 
8, 1.60956, 0, 0, 0.494635,-99) , 
11, 0.874947, 0, 0, 0.500213,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0270642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.471147, 1, 1, 0.520463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49258,-99) , 
6, -0.470756, 1, 0, 0.502005,-99) , 
8, 3.71101, 0, 0, 0.50542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453618,-99) , 
0, 0.505709, 1, 0, 0.503742,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0334479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437606,-99) , 
10, 2.14294, 1, 0, 0.505609,-99) , 
6, -0.647888, 1, 0, 0.508231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494154,-99) , 
10, -0.428286, 1, 0, 0.508528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360469,-99) , 
10, -1.2792, 0, 0, 0.44199,-99) , 
12, 2.73094, 0, 0, 0.488759,-99) , 
3, 1.47786, 0, 0, 0.503951,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0234182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463326,-99) , 
2, -0.214281, 0, 0, 0.505182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483624,-99) , 
11, -1.80028, 0, 0, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0.714254, 1, -1, 0.466033,-99) , 
9, -951.286, 0, 0, 0.481125,-99) , 
0, 0.5019, 1, 0, 0.500789,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0252631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499118,-99) , 
9, -951.286, 0, 0, 0.51736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490148,-99) , 
6, -0.625849, 1, 0, 0.495103,-99) , 
2, 0.0721925, 0, 0, 0.498363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439833,-99) , 
5, 0.998572, 0, 0, 0.496871,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0278493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49404,-99) , 
6, -0.466265, 1, 0, 0.499968,-99) , 
10, -1.85545, 1, 0, 0.502764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445715,-99) , 
6, -0.630665, 1, 0, 0.493278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410443,-99) , 
10, -1.57378, 0, 0, 0.48295,-99) , 
3, 1.48427, 0, 0, 0.49833,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0326666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.394775, 1, 1, 0.508176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464625,-99) , 
9, -951.286, 0, 0, 0.48588,-99) , 
3, 1.73039, 0, 0, 0.501311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453229,-99) , 
7, 0.0238062, 1, 0, 0.499478,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0248199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498777,-99) , 
3, 2.92103, 0, 0, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0.150257, 1, -1, 0.46604,-99) , 
6, 0.68707, 1, 0, 0.50228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484959,-99) , 
10, -0.718204, 1, 0, 0.49738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407365,-99) , 
6, -0.797587, 1, 0, 0.473188,-99) , 
3, 1.23834, 0, 0, 0.498455,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0252129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46713,-99) , 
3, 1.67188, 0, 0, 0.501286,-99) , 
6, -0.647385, 1, 0, 0.503453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493268,-99) , 
3, 1.24269, 0, 0, 0.50327,-99) , 
NN(
0, 
0, 
-1, 1.32532, 0, -1, 0.445621,-99) , 
6, -0.734847, 1, 0, 0.48302,-99) , 
3, 1.47469, 0, 0, 0.498985,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0314836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48827,-99) , 
9, -951.286, 1, 0, 0.519576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475156,-99) , 
6, -0.180084, 1, 0, 0.495237,-99) , 
8, 3.27632, 0, 0, 0.500106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521869,-99) , 
NN(
0, 
0, 
-1, 0.15382, 1, -1, 0.453984,-99) , 
5, 0.999524, 1, 0, 0.47414,-99) , 
6, 0.590599, 1, 0, 0.497605,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0234201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482461,-99) , 
8, 2.14539, 0, 0, 0.495917,-99) , 
7, 0.0124711, 0, 0, 0.49826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459778,-99) , 
7, 0.0238087, 1, 0, 0.496803,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0205418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492892,-99) , 
4, 4.71849, 1, 0, 0.522264,-99) , 
NN(
0, 
0, 
-1, 0.309906, 1, -1, 0.494566,-99) , 
2, 0.0714475, 0, 0, 0.498686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432475,-99) , 
5, 0.998572, 0, 0, 0.497019,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0117849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470905,-99) , 
6, 0.524069, 1, 0, 0.498986,-99) , 
3, 4.21388, 0, 0, 0.500449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455165,-99) , 
6, 0.77808, 1, 0, 0.499215,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0130995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476726,-99) , 
6, 0.346521, 1, 0, 0.49692,-99) , 
8, 4.61065, 0, 0, 0.498451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449883,-99) , 
6, 0.76731, 1, 0, 0.496999,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0183888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0297579, 1, 1, 0.507491,-99) , 
NN(
0, 
0, 
-1, -0.249954, 1, -1, 0.492061,-99) , 
8, 2.74025, 0, 0, 0.498589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453567,-99) , 
7, 0.023792, 1, 0, 0.496909,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0336824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464176,-99) , 
3, 1.22186, 0, 0, 0.515675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491653,-99) , 
6, -0.812913, 1, 0, 0.494791,-99) , 
7, 0.00680178, 0, 0, 0.499893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45438,-99) , 
7, 0.0238062, 1, 0, 0.498185,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0221972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
9, -951.286, 1, 0, 0.516548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398052,-99) , 
8, 1.52985, 0, 0, 0.497162,-99) , 
11, 1.15034, 0, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445012,-99) , 
5, 0.998572, 0, 0, 0.499404,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0288803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410777,-99) , 
11, 0.055124, 0, 0, 0.49621,-99) , 
8, 1.692, 0, 0, 0.508639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439872,-99) , 
12, 1.84276, 1, 0, 0.496522,-99) , 
NN(
0, 
0, 
-1, 1.66149, 0, -1, 0.436463,-99) , 
3, 1.78371, 0, 0, 0.491453,-99) , 
6, -0.531992, 1, 0, 0.496625,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.034649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
6, -0.287333, 1, 0, 0.504976,-99) , 
NN(
0, 
0, 
-1, 1.0408, 1, -1, 0.473479,-99) , 
6, 0.496594, 1, 0, 0.500291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489891,-99) , 
10, -1.65306, 1, 0, 0.500182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428962,-99) , 
11, 2.03199, 0, 0, 0.457176,-99) , 
8, 1.76819, 0, 0, 0.48553,-99) , 
10, -0.428584, 0, 0, 0.495324,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0223952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.2799, 1, 1, 0.533782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47577,-99) , 
6, 0.0696802, 1, 0, 0.497182,-99) , 
3, 3.33589, 0, 0, 0.500198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469389,-99) , 
10, 0.145078, 1, 0, 0.491871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429838,-99) , 
4, 4.80426, 1, 0, 0.478348,-99) , 
6, 0.497563, 1, 0, 0.49723,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0390355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55551,-99) , 
NN(
0, 
0, 
-1, 1.57231, 1, -1, 0.48986,-99) , 
6, 0.195689, 1, 0, 0.502721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487426,-99) , 
8, 2.33538, 0, 0, 0.494354,-99) , 
NN(
0, 
0, 
-1, 2.62955, 0, -1, 0.461268,-99) , 
6, -0.121512, 1, 0, 0.488571,-99) , 
8, 3.06909, 0, 0, 0.493189,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0319388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36599, 1, 1, 0.537264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493907,-99) , 
10, -1.57076, 1, 0, 0.497033,-99) , 
6, -0.426475, 1, 0, 0.501529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484199,-99) , 
3, 1.37468, 0, 0, 0.495199,-99) , 
NN(
0, 
0, 
-1, 1.67351, 0, -1, 0.439404,-99) , 
11, 0.000745228, 0, 0, 0.4843,-99) , 
8, 1.81227, 0, 0, 0.496427,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0258772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.536904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455314,-99) , 
3, 2.18792, 0, 0, 0.483368,-99) , 
4, 4.73274, 1, 0, 0.515721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497246,-99) , 
8, 3.07962, 0, 0, 0.503194,-99) , 
NN(
0, 
0, 
-1, 2.66911, 0, -1, 0.487615,-99) , 
0, 0.49809, 1, 0, 0.495286,-99) , 
2, 0.0713547, 0, 0, 0.498494,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0346396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.61248, 0, 1, 0.535078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47919,-99) , 
3, 2.87852, 0, 0, 0.503609,-99) , 
6, -0.033011, 1, 0, 0.5108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494122,-99) , 
8, 2.00923, 0, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, -0.22233, 1, -1, 0.463689,-99) , 
6, -0.382672, 1, 0, 0.49334,-99) , 
3, 2.22237, 0, 0, 0.502178,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0200013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49152,-99) , 
6, 0.195257, 1, 0, 0.503497,-99) , 
3, 4.43667, 0, 0, 0.504761,-99) , 
NN(
0, 
0, 
-1, 0.142696, 1, -1, 0.473871,-99) , 
0, 0.504757, 1, 0, 0.503006,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0233182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455725,-99) , 
12, 2.80451, 0, 0, 0.501058,-99) , 
8, 1.50746, 0, 0, 0.514225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499204,-99) , 
10, -1.57077, 1, 0, 0.501879,-99) , 
NN(
0, 
0, 
-1, -0.429033, 0, -1, 0.463556,-99) , 
3, 1.65441, 0, 0, 0.498103,-99) , 
6, -0.627421, 1, 0, 0.501809,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0212932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494851,-99) , 
10, -0.142849, 0, 0, 0.502883,-99) , 
8, 4.21875, 0, 0, 0.504877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444257,-99) , 
10, 0.156084, 1, 0, 0.476274,-99) , 
6, 0.684497, 1, 0, 0.503205,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0212278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.532783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475909,-99) , 
10, 1.01182, 1, 0, 0.519691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450733,-99) , 
5, 0.999641, 0, 0, 0.501076,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.45959,-99) , 
6, 0.45384, 1, 0, 0.49825,-99) , 
3, 3.69864, 0, 0, 0.500797,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0209838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.12493, 0, 1, 0.523165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494789,-99) , 
4, 0.560278, 1, 0, 0.497511,-99) , 
2, 0.0726838, 0, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463888,-99) , 
4, 9.27753, 1, 0, 0.499684,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0221528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.526427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48617,-99) , 
4, 4.85062, 1, 0, 0.518351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463082,-99) , 
5, 0.999851, 0, 0, 0.499616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460526,-99) , 
6, 0.321977, 1, 0, 0.497897,-99) , 
3, 3.2065, 0, 0, 0.502556,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0112636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.19692, 0, 1, 0.503365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462062,-99) , 
6, 0.777201, 1, 0, 0.502195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461336,-99) , 
7, 0.023792, 1, 0, 0.500662,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0138655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498757,-99) , 
8, 3.80206, 0, 0, 0.501243,-99) , 
NN(
0, 
0, 
-1, 0.717429, 1, -1, 0.468973,-99) , 
6, 0.561752, 1, 0, 0.498489,-99) , 
3, 4.43667, 0, 0, 0.499748,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.013543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476663,-99) , 
6, 0.524072, 1, 0, 0.501295,-99) , 
8, 4.69326, 0, 0, 0.502284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456685,-99) , 
6, 0.778081, 1, 0, 0.501074,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0240319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498576,-99) , 
2, -0.0715932, 1, 0, 0.504813,-99) , 
6, 0.0540711, 1, 0, 0.510104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472759,-99) , 
6, -0.230339, 1, 0, 0.496605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445321,-99) , 
10, -1.85714, 0, 0, 0.493898,-99) , 
3, 2.71444, 0, 0, 0.499663,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0224601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494152,-99) , 
9, -951.286, 1, 0, 0.509105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455614,-99) , 
5, 0.999905, 0, 0, 0.496653,-99) , 
3, 2.45556, 0, 0, 0.502087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464804,-99) , 
6, -0.629224, 1, 0, 0.475423,-99) , 
2, 0.0700037, 0, 0, 0.48287,-99) , 
0, 0.502852, 1, 0, 0.499594,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0256668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49429,-99) , 
11, -2.25378, 0, 0, 0.501124,-99) , 
6, 0.0488556, 1, 0, 0.508511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478342,-99) , 
5, 0.999986, 0, 0, 0.492599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426748,-99) , 
5, 0.999714, 0, 0, 0.489782,-99) , 
8, 2.79608, 0, 0, 0.497212,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0419922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494159,-99) , 
12, 1.12402, 1, 0, 0.548726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486389,-99) , 
9, -951.286, 1, 0, 0.502312,-99) , 
11, -1.88467, 0, 0, 0.509364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493601,-99) , 
10, -1.00037, 1, 0, 0.507202,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.478581,-99) , 
9, -951.286, 0, 0, 0.489566,-99) , 
8, 2.79707, 0, 0, 0.497424,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0356031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497016,-99) , 
11, -2.13885, 0, 0, 0.509603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459174,-99) , 
9, -951.286, 0, 0, 0.481475,-99) , 
12, 1.57788, 1, 0, 0.504891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47141,-99) , 
6, -0.739407, 1, 0, 0.494507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425651,-99) , 
11, 0.0956517, 0, 0, 0.486481,-99) , 
3, 1.47276, 0, 0, 0.500883,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0382824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145082, 1, 1, 0.551307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488663,-99) , 
9, -951.286, 1, 0, 0.506958,-99) , 
5, 0.999524, 1, 0, 0.512576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486021,-99) , 
9, -951.286, 0, 0, 0.496391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444807,-99) , 
6, -0.11076, 1, 0, 0.492822,-99) , 
3, 2.4684, 0, 0, 0.501311,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0311965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49549, 1, 1, 0.537757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452244,-99) , 
12, -0.0865976, 1, 0, 0.502069,-99) , 
11, -2.36316, 0, 0, 0.512002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486846,-99) , 
4, 2.60316, 0, 0, 0.495418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442535,-99) , 
5, 0.99981, 0, 0, 0.492237,-99) , 
8, 2.79608, 0, 0, 0.50012,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0191327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496664,-99) , 
8, 3.04706, 0, 0, 0.502162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461781,-99) , 
6, 0.659698, 1, 0, 0.500195,-99) , 
3, 4.43667, 0, 0, 0.5015,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0242494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.520408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437071,-99) , 
12, 2.32261, 1, 0, 0.499115,-99) , 
6, -0.522906, 1, 0, 0.50343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481552,-99) , 
10, -0.718155, 1, 0, 0.496812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420047,-99) , 
6, -0.79411, 1, 0, 0.477315,-99) , 
3, 1.23342, 0, 0, 0.500059,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0143214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535436,-99) , 
NN(
0, 
0, 
-1, 1.52314, 0, -1, 0.497444,-99) , 
11, 1.41361, 0, 0, 0.49969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470398,-99) , 
6, -0.871823, 1, 0, 0.491761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432027,-99) , 
6, -0.775693, 1, 0, 0.479203,-99) , 
3, 1.22965, 0, 0, 0.497068,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0128884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496941,-99) , 
4, 9.42864, 0, 0, 0.498548,-99) , 
5, 0.999524, 1, 0, 0.500029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463498,-99) , 
5, 0.998572, 0, 0, 0.499094,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0110095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460952,-99) , 
5, 0.999705, 0, 0, 0.500872,-99) , 
5, 0.999524, 1, 0, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455595,-99) , 
5, 0.998572, 0, 0, 0.501249,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0342321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484374,-99) , 
9, -951.286, 0, 0, 0.565448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483821,-99) , 
6, -0.064627, 1, 0, 0.498609,-99) , 
5, 0.999524, 1, 0, 0.503335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479287,-99) , 
8, 2.48455, 0, 0, 0.493275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455092,-99) , 
6, 0.497568, 1, 0, 0.487522,-99) , 
4, 4.75894, 1, 0, 0.500168,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0282295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.511093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454699,-99) , 
4, 9.43759, 1, 0, 0.508326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492782,-99) , 
8, 1.86624, 0, 0, 0.499303,-99) , 
NN(
0, 
0, 
-1, 2.14394, 0, -1, 0.466168,-99) , 
6, -0.388321, 1, 0, 0.492741,-99) , 
3, 2.198, 0, 0, 0.500742,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0239599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486736,-99) , 
9, -951.286, 1, 0, 0.532008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
6, -0.616407, 1, 0, 0.500968,-99) , 
11, -3.89714, 1, 0, 0.503728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484732,-99) , 
3, 1.05883, 0, 0, 0.494509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413904,-99) , 
6, -0.768374, 1, 0, 0.478871,-99) , 
3, 1.23342, 0, 0, 0.50052,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0309156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.3122, 1, 1, 0.509318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440033,-99) , 
12, 2.81987, 0, 0, 0.486752,-99) , 
8, 1.48509, 0, 0, 0.505162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550738,-99) , 
NN(
0, 
0, 
-1, 2.02042, 1, -1, 0.448155,-99) , 
9, -951.286, 0, 0, 0.48712,-99) , 
10, 1.28571, 1, 0, 0.502869,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0194795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.03589, 0, 1, 0.527232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485422,-99) , 
6, 0.7405, 1, 0, 0.515476,-99) , 
NN(
NN(
0, 
0, 
-1, 1.39712, 0, 1, 0.511484,-99) , 
NN(
0, 
0, 
-1, 1.45158, 0, -1, 0.493053,-99) , 
6, -0.728231, 1, 0, 0.496323,-99) , 
3, 3.66138, 0, 0, 0.498712,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0114876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53303,-99) , 
NN(
NN(
0, 
0, 
-1, 3.57624, 0, 1, 0.502354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465204,-99) , 
9, -951.286, 0, 0, 0.485877,-99) , 
6, 0.383083, 1, 0, 0.499689,-99) , 
3, 4.41098, 0, 0, 0.500711,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0198942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.14598, 1, 1, 0.529071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440909,-99) , 
3, 1.43803, 0, 0, 0.500804,-99) , 
11, 0.881473, 0, 0, 0.503342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487852,-99) , 
10, -0.714808, 1, 0, 0.496996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423758,-99) , 
6, -0.77189, 1, 0, 0.482652,-99) , 
3, 1.2296, 0, 0, 0.500675,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0165515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499121,-99) , 
6, -0.523368, 1, 0, 0.503686,-99) , 
NN(
0, 
0, 
-1, -0.79572, 1, -1, 0.483539,-99) , 
3, 1.23824, 0, 0, 0.501108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503764,-99) , 
NN(
0, 
0, 
-1, -0.699429, 1, -1, 0.475026,-99) , 
8, 3.29766, 0, 0, 0.482043,-99) , 
0, 0.502852, 1, 0, 0.498622,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0111741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488552,-99) , 
3, 1.43739, 0, 0, 0.498234,-99) , 
NN(
0, 
0, 
-1, 1.8151, 0, -1, 0.478027,-99) , 
0, 0.503805, 1, 0, 0.496428,-99) , 
3, 4.43667, 0, 0, 0.497526,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0233207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49221,-99) , 
4, 9.04404, 0, 0, 0.49432,-99) , 
5, 0.999524, 1, 0, 0.496378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446931,-99) , 
5, 0.998572, 0, 0, 0.495127,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0225322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494228,-99) , 
2, -0.0713995, 1, 0, 0.500866,-99) , 
6, 0.294194, 1, 0, 0.50914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494754,-99) , 
3, 1.16832, 0, 0, 0.507722,-99) , 
NN(
0, 
0, 
-1, 1.59035, 0, -1, 0.49201,-99) , 
11, 0.568507, 0, 0, 0.496678,-99) , 
8, 3.40109, 0, 0, 0.499792,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0223174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442036,-99) , 
12, 2.47538, 1, 0, 0.506116,-99) , 
NN(
0, 
0, 
-1, -0.239907, 0, -1, 0.490713,-99) , 
8, 1.77725, 0, 0, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464157,-99) , 
7, 0.023792, 1, 0, 0.500549,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.032989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478114,-99) , 
9, -951.286, 1, 0, 0.502345,-99) , 
10, -0.998817, 1, 0, 0.513275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484556,-99) , 
10, 0.714326, 1, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 1.51081, 0, -1, 0.458589,-99) , 
3, 1.54824, 0, 0, 0.498207,-99) , 
11, 1.10552, 0, 0, 0.50102,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0194496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479651,-99) , 
9, -951.286, 1, 0, 0.504804,-99) , 
10, -0.999951, 1, 0, 0.514132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449282,-99) , 
8, 1.55964, 0, 0, 0.498172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433359,-99) , 
12, 2.5822, 1, 0, 0.496101,-99) , 
11, 1.0624, 0, 0, 0.499522,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0148791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496332,-99) , 
8, 1.44824, 0, 0, 0.509875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473801,-99) , 
8, 1.87029, 0, 0, 0.497155,-99) , 
6, -0.625664, 1, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456584,-99) , 
5, 0.998572, 0, 0, 0.499012,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0284898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.679093, 1, 1, 0.533754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461703,-99) , 
6, -0.821742, 1, 0, 0.496401,-99) , 
8, 1.36274, 0, 0, 0.511746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494882,-99) , 
6, -0.398291, 1, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0.505047, 0, -1, 0.463715,-99) , 
3, 1.66482, 0, 0, 0.495023,-99) , 
6, -0.625601, 1, 0, 0.498859,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0261738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459248,-99) , 
9, -951.286, 0, 0, 0.536226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493562,-99) , 
5, 0.999955, 1, 0, 0.497946,-99) , 
5, 0.999524, 1, 0, 0.500436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470407,-99) , 
4, 9.40614, 1, 0, 0.499198,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0306513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489207,-99) , 
6, -0.264711, 1, 0, 0.501465,-99) , 
8, 3.49423, 0, 0, 0.504504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480785,-99) , 
11, -2.77141, 0, 0, 0.495943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440998,-99) , 
12, 0.274107, 1, 0, 0.486886,-99) , 
6, 0.403748, 1, 0, 0.501382,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0212823);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49637,-99) , 
6, 0.00157643, 1, 0, 0.503802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47619,-99) , 
6, -0.47842, 1, 0, 0.492077,-99) , 
8, 2.56972, 0, 0, 0.497296,-99) , 
3, 4.4367, 0, 0, 0.498473,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0166403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493286,-99) , 
3, 2.54179, 0, 0, 0.498196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465831,-99) , 
7, 0.0238062, 1, 0, 0.496945,-99) , 
3, 4.3977, 0, 0, 0.498211,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0238016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143752, 0, 1, 0.534139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488677,-99) , 
6, -0.866713, 1, 0, 0.50221,-99) , 
12, 3.52482, 1, 0, 0.511561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459793,-99) , 
12, 2.00508, 1, 0, 0.500482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443027,-99) , 
8, 1.61917, 0, 0, 0.497049,-99) , 
11, 0.874947, 0, 0, 0.499956,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0166352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4954,-99) , 
8, 3.80206, 0, 0, 0.497619,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.473492,-99) , 
6, 0.564805, 1, 0, 0.495581,-99) , 
3, 4.43667, 0, 0, 0.496412,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0268716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464809,-99) , 
9, -951.286, 0, 0, 0.546955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487277,-99) , 
12, 0.377949, 0, 0, 0.49664,-99) , 
5, 0.999524, 1, 0, 0.499962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471228,-99) , 
4, 9.41001, 1, 0, 0.498778,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0260932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49738,-99) , 
11, -1.58308, 0, 0, 0.504327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477642,-99) , 
9, -951.286, 0, 0, 0.490494,-99) , 
8, 1.99869, 0, 0, 0.499164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456601,-99) , 
6, 0.7772, 1, 0, 0.498013,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0135392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.40141, 0, 1, 0.524732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482296,-99) , 
6, 0.270229, 1, 0, 0.499116,-99) , 
8, 4.09373, 0, 0, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467263,-99) , 
6, 0.778355, 1, 0, 0.500573,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0239341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457139,-99) , 
10, 1.00277, 1, 0, 0.498437,-99) , 
6, 0.471877, 1, 0, 0.512842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
8, 2.95658, 0, 0, 0.499508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457312,-99) , 
9, -951.286, 0, 0, 0.479831,-99) , 
6, 0.23246, 1, 0, 0.497408,-99) , 
8, 3.72384, 0, 0, 0.500209,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0186149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.10445, 0, 1, 0.509578,-99) , 
NN(
0, 
0, 
-1, 0.999843, 0, -1, 0.495972,-99) , 
8, 2.99917, 0, 0, 0.499716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462625,-99) , 
11, -3.23401, 0, 0, 0.498133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444698,-99) , 
9, -951.286, 0, 0, 0.475115,-99) , 
6, 0.590914, 1, 0, 0.497373,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0234357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494821,-99) , 
4, 4.72767, 1, 0, 0.515606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488621,-99) , 
2, -0.00426292, 1, 0, 0.497913,-99) , 
2, 0.0307158, 0, 0, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467583,-99) , 
2, -0.214133, 0, 0, 0.500909,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.023708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452705,-99) , 
5, 0.999619, 0, 0, 0.50366,-99) , 
8, 3.29485, 0, 0, 0.506112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489931,-99) , 
11, -2.45197, 0, 0, 0.497989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441222,-99) , 
10, 1.57244, 1, 0, 0.492522,-99) , 
6, 0.216587, 1, 0, 0.502523,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0187101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.8175, 0, 1, 0.52289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464217,-99) , 
2, 0.275511, 1, 0, 0.512783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499689,-99) , 
8, 1.54387, 0, 0, 0.51018,-99) , 
NN(
0, 
0, 
-1, 1.84461, 0, -1, 0.494843,-99) , 
6, -0.627502, 1, 0, 0.498376,-99) , 
2, 0.0714447, 0, 0, 0.500633,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0170901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.348627, 1, 1, 0.508649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444452,-99) , 
5, 0.999905, 0, 0, 0.497037,-99) , 
8, 2.09742, 0, 0, 0.504049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47216,-99) , 
0, 0.505709, 1, 0, 0.503002,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.036008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476294,-99) , 
9, -951.286, 0, 0, 0.550597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488921,-99) , 
6, -0.251703, 1, 0, 0.500311,-99) , 
5, 0.999524, 1, 0, 0.503739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48217,-99) , 
2, 0.0782043, 1, 0, 0.504506,-99) , 
NN(
0, 
0, 
-1, 2.34037, 0, -1, 0.455785,-99) , 
2, -0.0714407, 0, 0, 0.488687,-99) , 
4, 4.6529, 1, 0, 0.500615,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0321493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.5881, 0, 1, 0.535168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482392,-99) , 
10, 1.28568, 1, 0, 0.504455,-99) , 
6, -0.0919038, 1, 0, 0.50924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
5, 0.999995, 0, 0, 0.496227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462303,-99) , 
5, 0.999905, 0, 0, 0.492898,-99) , 
8, 2.43487, 0, 0, 0.501012,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0455446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497852,-99) , 
12, 1.05102, 1, 0, 0.524897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487129,-99) , 
9, -951.286, 1, 0, 0.498967,-99) , 
11, -1.58986, 0, 0, 0.504311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471687,-99) , 
12, 3.30186, 1, 0, 0.510842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465244,-99) , 
11, 2.44583, 0, 0, 0.48329,-99) , 
9, -951.286, 0, 0, 0.493596,-99) , 
3, 1.95456, 0, 0, 0.499967,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0213513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28625, 0, 1, 0.509784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492521,-99) , 
7, 0.0124259, 0, 0, 0.496765,-99) , 
8, 2.42876, 0, 0, 0.503417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469526,-99) , 
7, 0.0237252, 1, 0, 0.502126,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0122986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.449337, 1, 1, 0.528878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497658,-99) , 
10, 1.57139, 0, 0, 0.499299,-99) , 
8, 4.31736, 0, 0, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460305,-99) , 
6, 0.777199, 1, 0, 0.500075,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0278038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485187,-99) , 
3, 1.23103, 0, 0, 0.507901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47755,-99) , 
7, 0.000862846, 0, 0, 0.487725,-99) , 
7, 0.00113252, 0, 0, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471054,-99) , 
7, 0.0237868, 1, 0, 0.503324,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0194119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484599,-99) , 
3, 1.187, 0, 0, 0.506525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492585,-99) , 
11, 1.0624, 0, 0, 0.496107,-99) , 
0, 0.498091, 1, 0, 0.501183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466653,-99) , 
6, 0.777201, 1, 0, 0.500246,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.025111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490427,-99) , 
9, -951.286, 0, 0, 0.560541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
4, 0.557074, 1, 0, 0.499245,-99) , 
5, 0.999524, 1, 0, 0.503517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490649,-99) , 
4, 9.26909, 0, 0, 0.498179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44498,-99) , 
6, 0.486703, 1, 0, 0.490019,-99) , 
4, 4.62894, 1, 0, 0.500675,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0210119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488327,-99) , 
2, -0.0709913, 0, 0, 0.509986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468556,-99) , 
8, 2.0041, 0, 0, 0.498891,-99) , 
11, -0.093455, 0, 0, 0.502135,-99) , 
3, 4.43667, 0, 0, 0.503098,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0263261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454985,-99) , 
9, -951.286, 0, 0, 0.535415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483996,-99) , 
6, 0.0292129, 1, 0, 0.497348,-99) , 
5, 0.999524, 1, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474143,-99) , 
4, 9.25868, 1, 0, 0.498737,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0179303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497135,-99) , 
11, -2.48454, 0, 0, 0.507247,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.49524,-99) , 
8, 2.09643, 0, 0, 0.502648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471976,-99) , 
7, 0.0238087, 1, 0, 0.501498,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0190521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463328,-99) , 
9, -951.286, 0, 0, 0.527929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496259,-99) , 
4, 0.571101, 1, 0, 0.497976,-99) , 
5, 0.999524, 1, 0, 0.499876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470333,-99) , 
4, 9.42206, 1, 0, 0.498685,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.016409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45932, 0, 1, 0.515197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464628,-99) , 
0, 0.491424, 0, 0, 0.500867,-99) , 
6, -0.627085, 1, 0, 0.504208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467614,-99) , 
2, -0.214238, 0, 0, 0.502548,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0151107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494784,-99) , 
5, 0.999955, 1, 0, 0.497948,-99) , 
4, 9.18778, 0, 0, 0.499077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466163,-99) , 
5, 0.999048, 0, 0, 0.497848,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0122511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496383,-99) , 
0, 0.497954, 1, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466196,-99) , 
0, 0.505709, 1, 0, 0.499501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472238,-99) , 
2, 0.214289, 1, 0, 0.498352,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0139862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495727,-99) , 
6, -0.547054, 1, 0, 0.499399,-99) , 
8, 4.69073, 0, 0, 0.500509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461045,-99) , 
5, 0.998572, 0, 0, 0.499519,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0151687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.51631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497049,-99) , 
3, 3.20657, 0, 0, 0.500547,-99) , 
2, 0.0507203, 0, 0, 0.50298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475644,-99) , 
2, 0.213915, 1, 0, 0.50183,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0198107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.623018, 1, 1, 0.505363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475166,-99) , 
9, -951.286, 1, 0, 0.503836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437024,-99) , 
12, 2.73576, 0, 0, 0.491749,-99) , 
8, 1.46601, 0, 0, 0.503077,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0159492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476409,-99) , 
9, -951.286, 0, 0, 0.535888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4975,-99) , 
10, 1.57142, 0, 0, 0.499114,-99) , 
5, 0.999524, 1, 0, 0.501489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476452,-99) , 
4, 9.50853, 1, 0, 0.50048,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.025044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467353,-99) , 
9, -951.286, 0, 0, 0.538184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493346,-99) , 
4, 2.8086, 0, 0, 0.499429,-99) , 
5, 0.999524, 1, 0, 0.501926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466874,-99) , 
4, 9.50853, 1, 0, 0.500564,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0292772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12259, 0, 1, 0.523364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497864,-99) , 
11, 0.0501135, 0, 0, 0.501896,-99) , 
8, 3.37067, 0, 0, 0.507119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462314,-99) , 
9, -0.715724, 0, 0, 0.518334,-99) , 
NN(
0, 
0, 
-1, 0.403763, 1, -1, 0.476359,-99) , 
9, -951.286, 0, 0, 0.493349,-99) , 
10, 0.714257, 1, 0, 0.50348,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0203862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467876,-99) , 
9, -951.286, 0, 0, 0.539081,-99) , 
NN(
0, 
0, 
-1, 1.85706, 0, 1, 0.505319,-99) , 
5, 0.999524, 1, 0, 0.507497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473365,-99) , 
4, 9.52058, 1, 0, 0.506157,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0114351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488894,-99) , 
8, 1.67542, 0, 0, 0.497994,-99) , 
8, 4.61045, 0, 0, 0.499358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467224,-99) , 
6, 0.778081, 1, 0, 0.498509,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0240606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497613,-99) , 
8, 1.45131, 0, 0, 0.509495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490726,-99) , 
5, 0.999932, 1, 0, 0.496801,-99) , 
6, -0.627085, 1, 0, 0.49978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461371,-99) , 
5, 0.998572, 0, 0, 0.498811,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0239856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.29281, 0, 1, 0.508026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45555,-99) , 
5, 0.999619, 0, 0, 0.506099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470225,-99) , 
10, 1.46657, 1, 0, 0.514805,-99) , 
NN(
0, 
0, 
-1, 0.675529, 1, -1, 0.487746,-99) , 
11, -2.32216, 0, 0, 0.493831,-99) , 
6, 0.216583, 1, 0, 0.502838,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.00819948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499381,-99) , 
4, 9.41001, 0, 0, 0.500752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462432,-99) , 
2, -0.275464, 0, 0, 0.4996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471278,-99) , 
2, 0.214289, 1, 0, 0.498411,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0145437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495963,-99) , 
6, -0.438602, 1, 0, 0.500693,-99) , 
5, 0.999524, 1, 0, 0.501903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468682,-99) , 
5, 0.998572, 0, 0, 0.501066,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0114255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494951,-99) , 
3, 1.47795, 0, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472165,-99) , 
0, 0.505981, 1, 0, 0.501413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47952,-99) , 
0, 0.490472, 0, 0, 0.50056,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0162462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476214,-99) , 
9, -951.286, 0, 0, 0.54061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497637,-99) , 
4, 0.563411, 1, 0, 0.499069,-99) , 
5, 0.999524, 1, 0, 0.501762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475014,-99) , 
4, 9.26255, 1, 0, 0.500625,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0246549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49752,-99) , 
11, -1.54759, 0, 0, 0.502674,-99) , 
10, -1.57136, 1, 0, 0.504967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493674,-99) , 
8, 1.42213, 0, 0, 0.506384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459505,-99) , 
9, -951.286, 0, 0, 0.474977,-99) , 
6, -0.669633, 1, 0, 0.493961,-99) , 
3, 1.7303, 0, 0, 0.501456,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0326096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.91924, 0, 1, 0.523373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459911,-99) , 
12, 0.930222, 1, 0, 0.504004,-99) , 
6, 0.0551684, 1, 0, 0.510123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486896,-99) , 
5, 0.999995, 0, 0, 0.501844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464867,-99) , 
5, 0.999905, 0, 0, 0.498267,-99) , 
3, 2.22237, 0, 0, 0.504276,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0143904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474352,-99) , 
8, 2.73375, 0, 0, 0.489812,-99) , 
4, 4.63401, 1, 0, 0.51269,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502713,-99) , 
NN(
0, 
0, 
-1, 0.71412, 1, -1, 0.488882,-99) , 
0, 0.5019, 1, 0, 0.500318,-99) , 
2, 0.071449, 0, 0, 0.502242,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0157007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496108,-99) , 
11, 0.874947, 0, 0, 0.499595,-99) , 
4, 9.42498, 0, 0, 0.500959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46684,-99) , 
5, 0.999048, 0, 0, 0.49969,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0212886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.559093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478305,-99) , 
6, 0.497035, 1, 0, 0.500924,-99) , 
5, 0.999524, 1, 0, 0.504988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486478,-99) , 
3, 2.42883, 0, 0, 0.497267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466389,-99) , 
0, 0.494281, 0, 0, 0.491922,-99) , 
4, 4.77337, 1, 0, 0.502367,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0251262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.452276, 1, 1, 0.51192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480956,-99) , 
9, -951.286, 0, 0, 0.496152,-99) , 
8, 1.77636, 0, 0, 0.506784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490673,-99) , 
12, 1.83724, 1, 0, 0.49805,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.471717,-99) , 
6, 0.494394, 1, 0, 0.494,-99) , 
10, 0.142862, 1, 0, 0.500974,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0233477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495208,-99) , 
7, 0.00453448, 0, 0, 0.502475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467245,-99) , 
7, 0.00340125, 1, 0, 0.483704,-99) , 
3, 1.23835, 0, 0, 0.500224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475502,-99) , 
7, 0.0238062, 1, 0, 0.499287,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0116424);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496971,-99) , 
10, 1.85714, 0, 0, 0.49844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460196,-99) , 
6, 0.724635, 1, 0, 0.497421,-99) , 
8, 4.92441, 0, 0, 0.49834,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0138307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488564,-99) , 
6, 0.354909, 1, 0, 0.502017,-99) , 
8, 4.69336, 0, 0, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471255,-99) , 
6, 0.778355, 1, 0, 0.502132,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0198278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460631,-99) , 
12, -1.69536, 0, 0, 0.500732,-99) , 
10, -1.57142, 1, 0, 0.503283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473879,-99) , 
5, 0.999982, 0, 0, 0.496816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453544,-99) , 
5, 0.999905, 0, 0, 0.492852,-99) , 
3, 1.97634, 0, 0, 0.499001,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.020028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488559,-99) , 
3, 1.4377, 0, 0, 0.499533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472181,-99) , 
9, -951.286, 0, 0, 0.48874,-99) , 
10, 0.714287, 1, 0, 0.496718,-99) , 
3, 4.43676, 0, 0, 0.497904,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0188397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.459234, 1, 1, 0.513381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492813,-99) , 
6, -0.662014, 1, 0, 0.496958,-99) , 
8, 3.78076, 0, 0, 0.499352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462516,-99) , 
6, 0.774435, 1, 0, 0.498357,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0164975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485554,-99) , 
9, -951.286, 1, 0, 0.510339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497257,-99) , 
11, 1.34759, 0, 0, 0.498587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429019,-99) , 
3, 1.26923, 0, 0, 0.496198,-99) , 
11, 2.68986, 0, 0, 0.497942,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0143185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.25133, 0, 1, 0.520272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486352,-99) , 
10, 1.00347, 1, 0, 0.512391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46215,-99) , 
5, 0.999714, 0, 0, 0.499911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472963,-99) , 
9, -951.286, 0, 0, 0.488615,-99) , 
6, 0.183071, 1, 0, 0.497782,-99) , 
3, 3.69861, 0, 0, 0.499513,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0131184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475318,-99) , 
9, -951.286, 0, 0, 0.52431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499104,-99) , 
4, 9.05918, 0, 0, 0.501008,-99) , 
5, 0.999524, 1, 0, 0.502482,-99) , 
NN(
0, 
0, 
-1, 0.371912, 0, -1, 0.479578,-99) , 
0, 0.491424, 0, 0, 0.501106,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0253275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472692,-99) , 
12, 5.85973, 1, 0, 0.508269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489649,-99) , 
6, -0.719048, 1, 0, 0.493312,-99) , 
7, 0.00226749, 0, 0, 0.503459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483683,-99) , 
7, 0.0238087, 1, 0, 0.502703,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.016754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496685,-99) , 
9, -951.286, 0, 0, 0.547029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497565,-99) , 
10, -1.57142, 1, 0, 0.499781,-99) , 
5, 0.999524, 1, 0, 0.502892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466011,-99) , 
4, 9.42206, 1, 0, 0.501418,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0138881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488573,-99) , 
11, 1.41018, 0, 0, 0.524685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497998,-99) , 
12, 6.00934, 1, 0, 0.512743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466139,-99) , 
12, 2.97574, 1, 0, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448915,-99) , 
3, 1.32611, 0, 0, 0.498294,-99) , 
6, -0.719302, 1, 0, 0.50063,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0134942);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.72063, 1, 1, 0.518774,-99) , 
NN(
NN(
0, 
0, 
-1, -1.85712, 1, 1, 0.502942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465969,-99) , 
8, 1.42612, 0, 0, 0.481213,-99) , 
8, 1.51228, 0, 0, 0.500805,-99) , 
6, -0.8128, 1, 0, 0.502625,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0234796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48024,-99) , 
9, -951.286, 1, 0, 0.499393,-99) , 
10, -0.999299, 1, 0, 0.508632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495041,-99) , 
10, -1.85714, 1, 0, 0.496748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450704,-99) , 
8, 1.61152, 0, 0, 0.49395,-99) , 
11, 0.990198, 0, 0, 0.496795,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0100826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499344,-99) , 
10, 0.148408, 1, 0, 0.515125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498877,-99) , 
10, 1.8571, 0, 0, 0.500302,-99) , 
3, 3.6777, 0, 0, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473439,-99) , 
2, -0.214034, 0, 0, 0.500733,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0131982);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533919,-99) , 
NN(
NN(
0, 
0, 
-1, 9.42498, 0, 1, 0.504932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472112,-99) , 
5, 0.999048, 0, 0, 0.503863,-99) , 
3, 4.3816, 0, 0, 0.504842,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.00790277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498787,-99) , 
4, 9.18404, 0, 0, 0.500049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471553,-99) , 
5, 0.999048, 0, 0, 0.499105,-99) , 
3, 4.43667, 0, 0, 0.499938,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0180186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482152,-99) , 
9, -951.286, 0, 0, 0.529421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491087,-99) , 
11, -2.73684, 0, 0, 0.501048,-99) , 
5, 0.999524, 1, 0, 0.502865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475681,-99) , 
4, 9.50853, 1, 0, 0.501803,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0231709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.16694, 0, 1, 0.516109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468185,-99) , 
11, -2.83404, 0, 0, 0.494082,-99) , 
10, 0.142788, 1, 0, 0.50524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491333,-99) , 
9, -951.286, 1, 0, 0.507525,-99) , 
NN(
0, 
0, 
-1, 1.36842, 0, -1, 0.490579,-99) , 
11, 1.69873, 0, 0, 0.494669,-99) , 
3, 2.71444, 0, 0, 0.49843,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0125765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497041,-99) , 
6, -0.0643516, 1, 0, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47592,-99) , 
0, 0.505709, 1, 0, 0.501505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467052,-99) , 
5, 0.999048, 0, 0, 0.500226,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0153259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.72779, 1, 1, 0.517734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473607,-99) , 
4, 4.8263, 1, 0, 0.508557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520868,-99) , 
NN(
0, 
0, 
-1, 1.67555, 0, -1, 0.495538,-99) , 
10, 1.85709, 0, 0, 0.496799,-99) , 
3, 3.45254, 0, 0, 0.498764,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0168655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482808,-99) , 
9, -951.286, 0, 0, 0.539549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498097,-99) , 
2, 0.0307568, 0, 0, 0.50176,-99) , 
5, 0.999524, 1, 0, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482111,-99) , 
4, 9.50853, 1, 0, 0.503329,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0178124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471358,-99) , 
12, 0.677782, 1, 0, 0.512675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490392,-99) , 
6, -0.137168, 1, 0, 0.500392,-99) , 
3, 3.01799, 0, 0, 0.503495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47633,-99) , 
6, 0.774435, 1, 0, 0.502749,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0222639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.325419, 1, 1, 0.507157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484325,-99) , 
6, -0.682503, 1, 0, 0.496306,-99) , 
8, 2.14088, 0, 0, 0.502726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484973,-99) , 
4, 2.08578, 0, 0, 0.496398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467571,-99) , 
4, 4.70098, 1, 0, 0.490558,-99) , 
0, 0.494281, 0, 0, 0.50063,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0242895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.687356, 1, 1, 0.518992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476412,-99) , 
8, 2.02645, 0, 0, 0.500643,-99) , 
6, -0.531482, 1, 0, 0.503501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466985,-99) , 
9, -951.286, 1, 0, 0.495184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440781,-99) , 
12, 2.91645, 0, 0, 0.484252,-99) , 
8, 1.46738, 0, 0, 0.50027,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0089255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498277,-99) , 
5, 0.999524, 1, 0, 0.499892,-99) , 
4, 9.42372, 0, 0, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474099,-99) , 
5, 0.998572, 0, 0, 0.500055,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.014058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455123,-99) , 
12, 2.39473, 1, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, -0.547269, 0, -1, 0.489137,-99) , 
8, 1.78086, 0, 0, 0.497472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470055,-99) , 
7, 0.0238087, 1, 0, 0.496457,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0259987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430183, 1, 1, 0.535315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490241,-99) , 
9, -951.286, 0, 0, 0.498838,-99) , 
8, 1.98422, 0, 0, 0.505181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492859,-99) , 
11, -4.02418, 1, 0, 0.49608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449597,-99) , 
3, 2.02405, 0, 0, 0.493242,-99) , 
6, -0.344813, 1, 0, 0.498349,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0213115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487287,-99) , 
9, -951.286, 0, 0, 0.529266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494486,-99) , 
5, 0.999955, 1, 0, 0.499254,-99) , 
5, 0.999524, 1, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47025,-99) , 
4, 9.50466, 1, 0, 0.49997,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0134566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493967,-99) , 
10, 0.523891, 0, 0, 0.503218,-99) , 
10, -0.999862, 1, 0, 0.510427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499205,-99) , 
11, 0.15308, 0, 0, 0.501158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452708,-99) , 
12, 2.41819, 1, 0, 0.499358,-99) , 
11, 0.874947, 0, 0, 0.501579,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0175627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477042,-99) , 
6, 0.436561, 1, 0, 0.502023,-99) , 
8, 4.10895, 0, 0, 0.503533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460001,-99) , 
9, -0.143886, 0, 0, 0.50018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461903,-99) , 
9, -951.286, 0, 0, 0.483644,-99) , 
6, 0.587788, 1, 0, 0.501603,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0213829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478133,-99) , 
5, 0.999905, 0, 0, 0.504335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48875,-99) , 
11, -1.77166, 0, 0, 0.493092,-99) , 
6, 0.090372, 1, 0, 0.50088,-99) , 
8, 4.96934, 0, 0, 0.501643,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0259301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.12402, 1, 1, 0.539445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48334,-99) , 
9, -951.286, 1, 0, 0.496784,-99) , 
11, -1.88467, 0, 0, 0.503262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498951,-99) , 
8, 1.91882, 0, 0, 0.502824,-99) , 
NN(
0, 
0, 
-1, 2.34169, 0, -1, 0.483993,-99) , 
6, -0.466451, 1, 0, 0.494818,-99) , 
8, 2.79707, 0, 0, 0.498161,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0209988);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.433204, 1, 1, 0.521783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493036,-99) , 
8, 1.62612, 0, 0, 0.503565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482445,-99) , 
9, -951.286, 0, 0, 0.494462,-99) , 
10, 0.714257, 1, 0, 0.501204,-99) , 
3, 3.92216, 0, 0, 0.502863,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0161788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48351,-99) , 
6, -0.866306, 1, 0, 0.503664,-99) , 
8, 1.38088, 0, 0, 0.513968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498831,-99) , 
11, 0.615657, 0, 0, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459762,-99) , 
12, 3.28418, 1, 0, 0.499107,-99) , 
6, -0.719247, 1, 0, 0.501508,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00712798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18277, 0, 1, 0.502391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481993,-99) , 
0, 0.505709, 1, 0, 0.501735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470566,-99) , 
5, 0.998572, 0, 0, 0.500948,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0165298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.4028, 0, 1, 0.506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491956,-99) , 
10, -1.61109, 1, 0, 0.496386,-99) , 
11, -2.55077, 0, 0, 0.502954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474619,-99) , 
2, 0.21406, 1, 0, 0.501759,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0191243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.07881, 0, 1, 0.505276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470771,-99) , 
9, -951.286, 1, 0, 0.495937,-99) , 
11, -3.34591, 0, 0, 0.503792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48892,-99) , 
0, 0.490562, 1, 0, 0.498626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470462,-99) , 
6, 0.110884, 1, 0, 0.490346,-99) , 
0, 0.492377, 0, 0, 0.502607,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0171717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65815, 1, 1, 0.520631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474105,-99) , 
4, 4.67837, 1, 0, 0.510816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45857,-99) , 
5, 0.999714, 0, 0, 0.499457,-99) , 
NN(
0, 
0, 
-1, 0.715604, 1, -1, 0.479378,-99) , 
6, 0.148821, 1, 0, 0.496273,-99) , 
8, 3.77989, 0, 0, 0.498742,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0116579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497016,-99) , 
4, 9.13661, 0, 0, 0.498518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471735,-99) , 
2, -0.275625, 0, 0, 0.497708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474862,-99) , 
2, 0.21406, 1, 0, 0.496766,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0166233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496177,-99) , 
9, -951.286, 0, 0, 0.540814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495938,-99) , 
4, 0.571193, 1, 0, 0.497672,-99) , 
5, 0.999524, 1, 0, 0.500485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477735,-99) , 
4, 9.42599, 1, 0, 0.499564,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0262751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46867,-99) , 
10, 0.670647, 1, 0, 0.505149,-99) , 
11, -2.28625, 0, 0, 0.511516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49334,-99) , 
3, 1.56781, 0, 0, 0.502345,-99) , 
NN(
0, 
0, 
-1, 2.03435, 0, -1, 0.489703,-99) , 
6, -0.383875, 1, 0, 0.496544,-99) , 
8, 3.37315, 0, 0, 0.500381,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0174866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.12543, 0, 1, 0.509483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487716,-99) , 
0, 0.492376, 0, 0, 0.507572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499493,-99) , 
10, 1.91156, 0, 0, 0.502591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470163,-99) , 
10, 0.551029, 1, 0, 0.48227,-99) , 
6, 0.403971, 1, 0, 0.498611,-99) , 
10, 0.14286, 1, 0, 0.503494,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0241835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.86401, 0, 1, 0.53134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477142,-99) , 
12, 0.432708, 1, 0, 0.499821,-99) , 
11, -1.43063, 0, 0, 0.503232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486236,-99) , 
9, -951.286, 1, 0, 0.509444,-99) , 
NN(
0, 
0, 
-1, 1.37433, 0, -1, 0.487603,-99) , 
11, 1.41371, 0, 0, 0.494955,-99) , 
8, 2.43424, 0, 0, 0.499071,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0202493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.178431, 1, 1, 0.509127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490353,-99) , 
11, -0.927875, 0, 0, 0.50019,-99) , 
8, 3.08059, 0, 0, 0.502637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456248,-99) , 
10, -1.14381, 1, 0, 0.489313,-99) , 
12, -1.43229, 0, 0, 0.501366,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0123697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.307034, 0, 1, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465792,-99) , 
10, 2.14285, 1, 0, 0.501485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478278,-99) , 
9, -951.286, 1, 0, 0.496865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453228,-99) , 
6, -0.79411, 1, 0, 0.485837,-99) , 
3, 1.23353, 0, 0, 0.499466,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0168642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.18895, 0, 1, 0.539704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491908,-99) , 
6, -0.251474, 1, 0, 0.497348,-99) , 
5, 0.999524, 1, 0, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47226,-99) , 
4, 9.11461, 1, 0, 0.498927,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.012695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495964,-99) , 
5, 0.999955, 1, 0, 0.498807,-99) , 
4, 9.18112, 0, 0, 0.499752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471943,-99) , 
5, 0.999048, 0, 0, 0.49871,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0123456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496079,-99) , 
5, 0.999955, 1, 0, 0.498934,-99) , 
4, 9.04385, 0, 0, 0.499881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475392,-99) , 
5, 0.999048, 0, 0, 0.498964,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.00947001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53676,-99) , 
NN(
0, 
0, 
-1, 7.41173, 1, -1, 0.49832,-99) , 
4, 9.12647, 0, 0, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454818,-99) , 
5, 0.999048, 0, 0, 0.498412,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0156783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477466,-99) , 
9, -951.286, 0, 0, 0.525127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492175,-99) , 
6, -0.0643516, 1, 0, 0.498182,-99) , 
5, 0.999524, 1, 0, 0.499893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467972,-99) , 
4, 9.52224, 1, 0, 0.498662,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0192383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495987,-99) , 
9, -951.286, 0, 0, 0.54456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
2, 0.158651, 0, 0, 0.498786,-99) , 
5, 0.999524, 1, 0, 0.501852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48511,-99) , 
4, 9.38664, 0, 0, 0.493619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461022,-99) , 
6, 0.497582, 1, 0, 0.488754,-99) , 
4, 4.75894, 1, 0, 0.499243,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.022007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491794,-99) , 
12, 1.44157, 1, 0, 0.523381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47876,-99) , 
12, 0.13969, 1, 0, 0.500471,-99) , 
11, -1.82489, 0, 0, 0.506137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466372,-99) , 
5, 0.999905, 0, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449805,-99) , 
10, -1.8573, 0, 0, 0.49639,-99) , 
8, 2.14021, 0, 0, 0.502148,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.00820461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494593,-99) , 
6, 0.190616, 1, 0, 0.510535,-99) , 
NN(
0, 
0, 
-1, -0.15302, 0, -1, 0.498493,-99) , 
2, 0.071449, 0, 0, 0.500366,-99) , 
3, 4.43667, 0, 0, 0.501198,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0131333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504641,-99) , 
NN(
0, 
0, 
-1, -0.0713947, 0, -1, 0.480537,-99) , 
4, 7.46587, 1, 0, 0.502779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463946,-99) , 
6, 0.778355, 1, 0, 0.501778,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0199325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49328,-99) , 
8, 2.2816, 0, 0, 0.500347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452743,-99) , 
9, -951.286, 0, 0, 0.479993,-99) , 
6, 0.470512, 1, 0, 0.497896,-99) , 
3, 4.41101, 0, 0, 0.498875,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0175136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.00213, 0, 1, 0.504255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466091,-99) , 
9, -951.286, 1, 0, 0.491554,-99) , 
11, -3.34239, 0, 0, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469183,-99) , 
5, 0.999048, 0, 0, 0.501111,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00869089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498471,-99) , 
10, -0.721793, 1, 0, 0.51012,-99) , 
NN(
0, 
0, 
-1, 1.19109, 0, -1, 0.498139,-99) , 
6, -0.812866, 1, 0, 0.499329,-99) , 
NN(
0, 
0, 
-1, 0.116527, 1, -1, 0.480527,-99) , 
0, 0.492376, 0, 0, 0.497688,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0188018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482688,-99) , 
9, -951.286, 0, 0, 0.527124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493258,-99) , 
6, -0.253663, 1, 0, 0.499364,-99) , 
5, 0.999524, 1, 0, 0.501121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46444,-99) , 
4, 9.50853, 1, 0, 0.499723,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0151936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495795,-99) , 
11, 0.874947, 0, 0, 0.498585,-99) , 
5, 0.999048, 1, 0, 0.500071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465673,-99) , 
4, 9.40614, 1, 0, 0.498685,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0269197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459281,-99) , 
4, 9.5314, 1, 0, 0.505694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483847,-99) , 
10, -0.423171, 1, 0, 0.506148,-99) , 
NN(
0, 
0, 
-1, -1.28564, 0, -1, 0.48517,-99) , 
9, -951.286, 0, 0, 0.493017,-99) , 
3, 1.96181, 0, 0, 0.500558,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0121512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
4, 1.01019, 1, 0, 0.501579,-99) , 
4, 9.42498, 0, 0, 0.502864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464392,-99) , 
5, 0.999048, 0, 0, 0.501454,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00805197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481532,-99) , 
4, 7.21456, 1, 0, 0.499987,-99) , 
4, 9.42899, 0, 0, 0.501407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472111,-99) , 
5, 0.999048, 0, 0, 0.500323,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0117689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48213,-99) , 
3, 0.984955, 0, 0, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47756,-99) , 
10, -1.85713, 0, 0, 0.50078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507158,-99) , 
NN(
0, 
0, 
-1, 4.00094, 1, -1, 0.473578,-99) , 
10, -1.48628, 1, 0, 0.485911,-99) , 
12, -1.43229, 0, 0, 0.499359,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0286585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.351814, 1, 1, 0.522218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485881,-99) , 
9, -951.286, 1, 0, 0.49636,-99) , 
11, -2.19697, 0, 0, 0.505455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491943,-99) , 
3, 1.35872, 0, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 1.95225, 0, -1, 0.475281,-99) , 
6, -0.484321, 1, 0, 0.496066,-99) , 
8, 2.14134, 0, 0, 0.501606,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.025515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452466,-99) , 
4, 9.53351, 1, 0, 0.506355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485566,-99) , 
10, -0.431527, 1, 0, 0.505864,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.489283,-99) , 
9, -951.286, 0, 0, 0.495424,-99) , 
8, 2.14021, 0, 0, 0.501882,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0292929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497358,-99) , 
12, 2.94532, 1, 0, 0.507402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475754,-99) , 
10, -1.85714, 0, 0, 0.505395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490365,-99) , 
12, 0.267094, 1, 0, 0.503111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483627,-99) , 
11, -4.35412, 1, 0, 0.487701,-99) , 
11, -2.29884, 0, 0, 0.493577,-99) , 
6, -0.344915, 1, 0, 0.498636,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0117855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499889,-99) , 
11, 1.39806, 0, 0, 0.522276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497672,-99) , 
3, 0.928615, 0, 0, 0.514366,-99) , 
NN(
0, 
0, 
-1, 1.32338, 0, -1, 0.496036,-99) , 
6, -0.719203, 1, 0, 0.498997,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0175788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.52276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475347,-99) , 
2, -0.0736309, 0, 0, 0.50717,-99) , 
NN(
0, 
0, 
-1, 1.67516, 0, -1, 0.495647,-99) , 
11, -0.00509934, 0, 0, 0.499088,-99) , 
3, 3.91051, 0, 0, 0.501094,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0133298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428743, 1, 1, 0.516459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
8, 3.12482, 0, 0, 0.501794,-99) , 
7, 0.0113108, 0, 0, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473859,-99) , 
7, 0.0237526, 1, 0, 0.502049,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0123191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.718204, 1, 1, 0.521046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499253,-99) , 
10, -1.85714, 1, 0, 0.501054,-99) , 
NN(
0, 
0, 
-1, 2.01578, 0, -1, 0.476191,-99) , 
8, 1.50278, 0, 0, 0.498735,-99) , 
6, -0.812825, 1, 0, 0.500989,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.021645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.194727, 1, 1, 0.509632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495976,-99) , 
11, 2.48433, 0, 0, 0.501413,-99) , 
8, 2.37119, 0, 0, 0.505223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486353,-99) , 
8, 4.44019, 1, 0, 0.511771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457548,-99) , 
9, -951.286, 0, 0, 0.488344,-99) , 
6, 0.590599, 1, 0, 0.503581,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0169947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498298,-99) , 
11, -3.42687, 0, 0, 0.507225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48174,-99) , 
0, 0.505709, 1, 0, 0.506399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477494,-99) , 
10, 2.1428, 1, 0, 0.505544,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.00739534);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.722252, 1, 1, 0.517832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530121,-99) , 
NN(
0, 
0, 
-1, 2.14281, 1, -1, 0.498787,-99) , 
3, 4.46285, 0, 0, 0.499753,-99) , 
6, -0.812856, 1, 0, 0.501584,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0102194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49822,-99) , 
11, -2.65512, 0, 0, 0.508596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460045,-99) , 
5, 0.999655, 0, 0, 0.49925,-99) , 
8, 3.19721, 0, 0, 0.50184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482717,-99) , 
6, 0.777728, 1, 0, 0.501327,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0169287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499728,-99) , 
12, 2.20508, 1, 0, 0.517824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464903,-99) , 
6, -0.791322, 1, 0, 0.494677,-99) , 
8, 1.34413, 0, 0, 0.507524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461749,-99) , 
4, 9.52697, 1, 0, 0.50078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460252,-99) , 
8, 1.74068, 0, 0, 0.480116,-99) , 
13, 1.88071, 0, 0, 0.498806,-99) , 
11, -0.157173, 0, 0, 0.501337,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0143073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
12, 2.99224, 1, 0, 0.504539,-99) , 
NN(
0, 
0, 
-1, 1.00396, 1, -1, 0.494118,-99) , 
11, -2.07526, 0, 0, 0.500202,-99) , 
10, -1.85713, 1, 0, 0.501323,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0244831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488053,-99) , 
8, 1.26209, 0, 0, 0.504629,-99) , 
10, -0.999935, 1, 0, 0.513842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495955,-99) , 
11, -1.17168, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0.392027, 0, -1, 0.464814,-99) , 
12, 2.08544, 1, 0, 0.497859,-99) , 
11, 0.990198, 0, 0, 0.500963,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0350655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450468,-99) , 
10, -1.7755, 0, 0, 0.509004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414517,-99) , 
9, -1.57126, 0, 0, 0.499689,-99) , 
9, -951.286, 1, 0, 0.504888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533572,-99) , 
NN(
0, 
0, 
-1, 1.93877, 1, -1, 0.459078,-99) , 
9, -951.286, 0, 0, 0.486906,-99) , 
10, 1.28571, 1, 0, 0.502621,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0104484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.00265, 0, 1, 0.504688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480903,-99) , 
5, 0.999048, 0, 0, 0.503804,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0161632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491347,-99) , 
8, 1.31585, 0, 0, 0.505147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479229,-99) , 
10, 0.714231, 1, 0, 0.495392,-99) , 
11, -0.173715, 0, 0, 0.498248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469751,-99) , 
0, 0.490472, 0, 0, 0.49715,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0204106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.34692, 0, 1, 0.511807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492548,-99) , 
5, 0.999524, 1, 0, 0.49491,-99) , 
6, -0.719242, 1, 0, 0.497661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469118,-99) , 
2, 0.214239, 1, 0, 0.496478,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.013827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494138,-99) , 
12, 1.99877, 1, 0, 0.500936,-99) , 
NN(
0, 
0, 
-1, 0.0834726, 1, -1, 0.491755,-99) , 
11, -2.5878, 0, 0, 0.498134,-99) , 
10, -1.85712, 1, 0, 0.499034,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0238817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410107,-99) , 
9, -1.57148, 0, 0, 0.502403,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.493134,-99) , 
9, -951.286, 0, 0, 0.49715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475479,-99) , 
7, 0.0238062, 1, 0, 0.496324,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.01076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
8, 3.38954, 0, 0, 0.50084,-99) , 
4, 9.18277, 0, 0, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46745,-99) , 
5, 0.998572, 0, 0, 0.501022,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0217106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.53394, 1, 1, 0.518051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466905,-99) , 
11, 2.89008, 0, 0, 0.499093,-99) , 
8, 1.3722, 0, 0, 0.508737,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491586,-99) , 
10, 0.143166, 1, 0, 0.499563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434074,-99) , 
8, 1.6842, 0, 0, 0.497004,-99) , 
11, -0.0584643, 0, 0, 0.500298,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0213944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77205, 1, 1, 0.537926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465918,-99) , 
12, 0.359101, 1, 0, 0.500847,-99) , 
11, -1.88467, 0, 0, 0.506714,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49088, 0, 1, 0.516055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491875,-99) , 
7, 0.023792, 0, 0, 0.494277,-99) , 
0, 0.493329, 1, 0, 0.497167,-99) , 
8, 2.73984, 0, 0, 0.501097,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.014173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487078,-99) , 
11, -2.79302, 0, 0, 0.498108,-99) , 
5, 0.999048, 1, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469134,-99) , 
4, 9.12647, 1, 0, 0.498315,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0159103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491883,-99) , 
12, 3.69762, 1, 0, 0.505554,-99) , 
NN(
0, 
0, 
-1, 1.75205, 0, -1, 0.494745,-99) , 
11, 0.40155, 0, 0, 0.497318,-99) , 
10, -1.85714, 1, 0, 0.498171,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00970554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499413,-99) , 
4, 9.42872, 0, 0, 0.501379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471784,-99) , 
9, -951.286, 0, 0, 0.486349,-99) , 
5, 0.999864, 0, 0, 0.499641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475245,-99) , 
5, 0.999048, 0, 0, 0.498735,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0319466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483318,-99) , 
10, -1.2857, 0, 0, 0.510629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491555,-99) , 
10, 1.28507, 0, 0, 0.499188,-99) , 
9, -951.286, 1, 0, 0.505901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485125,-99) , 
4, 1.51521, 1, 0, 0.49886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452673,-99) , 
4, 4.7264, 1, 0, 0.488721,-99) , 
6, 0.497037, 1, 0, 0.503589,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0214591);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477561,-99) , 
10, 1.85707, 1, 0, 0.506354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480722,-99) , 
11, 0.702444, 0, 0, 0.493294,-99) , 
13, 1.97339, 0, 0, 0.502105,-99) , 
6, -0.906388, 1, 0, 0.503228,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0142974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499907,-99) , 
11, -0.864847, 0, 0, 0.503231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461264,-99) , 
10, 2.14281, 1, 0, 0.501743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492677,-99) , 
10, -1.00044, 1, 0, 0.495683,-99) , 
NN(
0, 
0, 
-1, 1.64779, 0, -1, 0.467286,-99) , 
11, 0.207903, 0, 0, 0.489635,-99) , 
8, 1.78525, 0, 0, 0.498271,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.015146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.751864, 0, 1, 0.503746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472682,-99) , 
12, 2.10016, 1, 0, 0.501968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493804,-99) , 
8, 1.60426, 0, 0, 0.498999,-99) , 
NN(
0, 
0, 
-1, 1.59439, 0, -1, 0.468818,-99) , 
6, -0.556655, 1, 0, 0.493786,-99) , 
3, 1.71601, 0, 0, 0.499401,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0109108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483029,-99) , 
4, 7.02688, 1, 0, 0.50086,-99) , 
4, 9.18404, 0, 0, 0.503036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47416,-99) , 
5, 0.999048, 0, 0, 0.501989,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0133318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497749,-99) , 
10, 1.85709, 0, 0, 0.499509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480819,-99) , 
5, 0.999524, 1, 0, 0.488046,-99) , 
6, 0.383083, 1, 0, 0.497654,-99) , 
3, 4.43667, 0, 0, 0.498388,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00969634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4947,-99) , 
11, -3.36004, 0, 0, 0.510847,-99) , 
NN(
0, 
0, 
-1, 0.269585, 1, -1, 0.498011,-99) , 
8, 3.72406, 0, 0, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469348,-99) , 
6, 0.77808, 1, 0, 0.499235,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.00732665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499886,-99) , 
4, 9.05214, 0, 0, 0.501435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466647,-99) , 
2, -0.27531, 0, 0, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471913,-99) , 
2, 0.2144, 1, 0, 0.499209,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0140451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499118,-99) , 
11, 0.274568, 0, 0, 0.502927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477601,-99) , 
5, 0.999723, 0, 0, 0.501524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470667,-99) , 
4, 4.69311, 1, 0, 0.495793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450395,-99) , 
12, 0.231463, 1, 0, 0.487873,-99) , 
6, 0.403054, 1, 0, 0.499112,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.013626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499566,-99) , 
8, 1.7733, 0, 0, 0.50587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473138,-99) , 
10, 0.999928, 1, 0, 0.495554,-99) , 
7, 0.00113362, 0, 0, 0.504179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474521,-99) , 
7, 0.0238062, 1, 0, 0.503072,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0154569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49898,-99) , 
4, 9.4643, 0, 0, 0.500151,-99) , 
10, 1.8571, 0, 0, 0.501801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481796,-99) , 
11, -2.77434, 0, 0, 0.493451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456716,-99) , 
12, 0.183662, 1, 0, 0.486618,-99) , 
6, 0.403966, 1, 0, 0.499122,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0151165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488775,-99) , 
4, 6.66125, 1, 0, 0.516019,-99) , 
NN(
0, 
0, 
-1, -1.2857, 1, 1, 0.503655,-99) , 
2, -0.0714359, 1, 0, 0.5057,-99) , 
NN(
0, 
0, 
-1, 0.170301, 1, -1, 0.473947,-99) , 
6, 0.684758, 1, 0, 0.503886,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.010576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498269,-99) , 
6, -0.719246, 1, 0, 0.500269,-99) , 
4, 9.42206, 0, 0, 0.501633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471806,-99) , 
5, 0.999048, 0, 0, 0.500533,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0126211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496777,-99) , 
12, 3.70435, 1, 0, 0.516497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467563,-99) , 
8, 1.57351, 0, 0, 0.499812,-99) , 
11, 1.33713, 0, 0, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485223,-99) , 
12, 7.26541, 1, 0, 0.501019,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0225025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492195,-99) , 
11, 1.02943, 0, 0, 0.530517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
10, 0.904213, 0, 0, 0.50411,-99) , 
10, -1.00028, 1, 0, 0.510529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498088,-99) , 
11, -1.28447, 0, 0, 0.502697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460439,-99) , 
9, -951.286, 0, 0, 0.481638,-99) , 
12, 1.64636, 1, 0, 0.49943,-99) , 
6, -0.62639, 1, 0, 0.501983,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0181032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.506523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479412,-99) , 
10, 0.142924, 1, 0, 0.492339,-99) , 
0, 0.503805, 1, 0, 0.505007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485134,-99) , 
4, 2.08578, 0, 0, 0.49999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472919,-99) , 
4, 4.70098, 1, 0, 0.494515,-99) , 
0, 0.494282, 0, 0, 0.503212,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.02162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468722,-99) , 
8, 1.66938, 0, 0, 0.505444,-99) , 
9, -951.286, 0, 0, 0.513737,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492934,-99) , 
10, 1.09521, 1, 0, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465899,-99) , 
12, -1.25283, 0, 0, 0.500015,-99) , 
10, -1, 1, 0, 0.502434,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0225621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.01304, 0, 1, 0.508212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453437,-99) , 
9, -951.286, 1, 0, 0.482239,-99) , 
12, -1.65314, 0, 0, 0.504227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490848,-99) , 
12, 2.9351, 1, 0, 0.5036,-99) , 
NN(
0, 
0, 
-1, -2.62351, 0, -1, 0.49113,-99) , 
11, -0.696724, 0, 0, 0.496183,-99) , 
10, -0.142874, 1, 0, 0.499722,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.014404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494587,-99) , 
9, -951.286, 1, 0, 0.510545,-99) , 
NN(
0, 
0, 
-1, 1.63498, 1, -1, 0.496368,-99) , 
11, 0.56467, 0, 0, 0.499573,-99) , 
10, -1.85714, 1, 0, 0.500881,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0219558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143517, 0, 1, 0.525239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474685,-99) , 
11, 4.54154, 0, 0, 0.499906,-99) , 
12, 3.8325, 1, 0, 0.507801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498679,-99) , 
11, -0.355184, 0, 0, 0.500296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451375,-99) , 
9, -951.286, 0, 0, 0.475192,-99) , 
8, 1.86254, 0, 0, 0.496263,-99) , 
11, 1.08436, 0, 0, 0.49844,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0123517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488861,-99) , 
9, -951.286, 0, 0, 0.521191,-99) , 
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.503997,-99) , 
5, 0.999524, 1, 0, 0.504956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48044,-99) , 
2, 0.214239, 1, 0, 0.503927,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0118458);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.55135, 0, 1, 0.521046,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57138, 1, 1, 0.503091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437068,-99) , 
6, -0.636627, 1, 0, 0.491895,-99) , 
8, 1.62163, 0, 0, 0.500352,-99) , 
3, 3.91058, 0, 0, 0.502062,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0190576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.11516, 1, 1, 0.528426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482627,-99) , 
10, 0.113245, 1, 0, 0.501666,-99) , 
11, -2.4555, 0, 0, 0.508799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486383,-99) , 
3, 1.35279, 0, 0, 0.497676,-99) , 
10, 1.85703, 0, 0, 0.498824,-99) , 
8, 3.05907, 0, 0, 0.5021,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0156738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497163,-99) , 
11, -1.79665, 0, 0, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479753,-99) , 
10, 1.8571, 1, 0, 0.501345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484846,-99) , 
6, -0.886327, 1, 0, 0.497257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468144,-99) , 
11, 3.59349, 0, 0, 0.48999,-99) , 
3, 1.23825, 0, 0, 0.499851,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0140953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495815,-99) , 
9, -951.286, 0, 0, 0.500355,-99) , 
8, 4.69098, 0, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471167,-99) , 
7, 0.0238087, 1, 0, 0.500516,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0247812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.402651, 1, 1, 0.512186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473519,-99) , 
12, -1.92948, 0, 0, 0.507868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492545,-99) , 
9, -951.286, 1, 0, 0.511758,-99) , 
NN(
0, 
0, 
-1, 2.90709, 1, -1, 0.490285,-99) , 
11, 1.80156, 0, 0, 0.495229,-99) , 
13, 3.02698, 0, 0, 0.499461,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0177683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.288973, 0, 1, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470654,-99) , 
8, 1.54604, 0, 0, 0.50365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480751,-99) , 
8, 1.03068, 0, 0, 0.50056,-99) , 
NN(
0, 
0, 
-1, 2.70055, 1, -1, 0.473686,-99) , 
13, 1.55282, 1, 0, 0.492203,-99) , 
12, 2.18202, 1, 0, 0.500866,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.024098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490664,-99) , 
5, 0.999982, 0, 0, 0.502656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464144,-99) , 
5, 0.999619, 0, 0, 0.501294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475242,-99) , 
11, -3.55655, 0, 0, 0.49725,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477198,-99) , 
8, 3.84558, 0, 0, 0.4886,-99) , 
6, 0.216345, 1, 0, 0.497967,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.017156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493695,-99) , 
2, 0.209278, 0, 0, 0.494621,-99) , 
4, 9.12253, 0, 0, 0.496105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470007,-99) , 
5, 0.999048, 0, 0, 0.495147,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0155789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0072308, 1, 1, 0.515549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495886,-99) , 
2, -0.21405, 1, 0, 0.497263,-99) , 
4, 0.97081, 1, 0, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479555,-99) , 
4, 9.16907, 1, 0, 0.500057,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0123304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528984,-99) , 
NN(
NN(
0, 
0, 
-1, 2.89501, 0, 1, 0.503924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485271,-99) , 
10, -0.254928, 1, 0, 0.495678,-99) , 
11, -2.45997, 0, 0, 0.501304,-99) , 
8, 4.69057, 0, 0, 0.502602,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0139182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49558,-99) , 
5, 0.999524, 1, 0, 0.497384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480907,-99) , 
4, 9.50853, 1, 0, 0.496738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467491,-99) , 
10, 2.14277, 1, 0, 0.495889,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0253621);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4575,-99) , 
5, 0.999524, 0, 0, 0.507082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401871,-99) , 
9, -1.57147, 0, 0, 0.496205,-99) , 
9, -951.286, 1, 0, 0.502314,-99) , 
10, -1.85714, 1, 0, 0.503387,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0209064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489094,-99) , 
12, -2.09489, 0, 0, 0.514563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488076,-99) , 
11, -2.62778, 0, 0, 0.499951,-99) , 
10, -0.713726, 1, 0, 0.503096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496205,-99) , 
7, 0.023792, 0, 0, 0.498595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468269,-99) , 
6, -0.270788, 1, 0, 0.495833,-99) , 
3, 2.20533, 0, 0, 0.499552,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0144218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494654,-99) , 
12, 3.77784, 1, 0, 0.506679,-99) , 
NN(
0, 
0, 
-1, 1.63962, 1, -1, 0.495347,-99) , 
11, 0.56467, 0, 0, 0.497918,-99) , 
10, -1.85714, 1, 0, 0.498953,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.00720113);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51511,-99) , 
NN(
0, 
0, 
-1, 8.98381, 1, -1, 0.497469,-99) , 
0, 0.505709, 0, 0, 0.498086,-99) , 
3, 4.4367, 0, 0, 0.498854,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0183347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41572, 1, 1, 0.537604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495689,-99) , 
9, -951.286, 1, 0, 0.502502,-99) , 
5, 0.999524, 1, 0, 0.504777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469671,-99) , 
4, 9.18438, 1, 0, 0.503264,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0131479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499934,-99) , 
8, 2.63843, 0, 0, 0.504869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463335,-99) , 
7, 0.00338937, 1, 0, 0.49015,-99) , 
6, 0.58779, 1, 0, 0.503415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478038,-99) , 
7, 0.0238087, 1, 0, 0.502465,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0162362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.6572, 0, 1, 0.513689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495564,-99) , 
6, -0.253669, 1, 0, 0.50159,-99) , 
4, 4.59382, 0, 0, 0.504176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479777,-99) , 
5, 0.999048, 0, 0, 0.503282,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0220872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424266,-99) , 
3, 1.4473, 0, 0, 0.486109,-99) , 
9, -951.286, 0, 0, 0.512521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494792,-99) , 
4, 4.68891, 1, 0, 0.512948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496655,-99) , 
6, -0.719293, 1, 0, 0.498665,-99) , 
2, 0.0714447, 0, 0, 0.500893,-99) , 
10, -1.28571, 1, 0, 0.502243,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0137881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482456,-99) , 
2, -0.275439, 0, 0, 0.516944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499899,-99) , 
4, 4.68114, 0, 0, 0.502074,-99) , 
2, -0.0713877, 1, 0, 0.504586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459034,-99) , 
10, -1.23869, 1, 0, 0.485912,-99) , 
12, -1.5463, 0, 0, 0.503088,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0198426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484476,-99) , 
5, 0.999793, 0, 0, 0.504651,-99) , 
8, 3.56425, 0, 0, 0.506624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474575,-99) , 
4, 4.88813, 1, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456054,-99) , 
3, 3.30065, 0, 0, 0.494597,-99) , 
6, 0.403748, 1, 0, 0.504508,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0182518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55193, 0, 1, 0.508408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486002,-99) , 
6, -0.581577, 1, 0, 0.497312,-99) , 
8, 2.21663, 0, 0, 0.503292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462291,-99) , 
10, 0.150232, 1, 0, 0.481158,-99) , 
6, 0.684758, 1, 0, 0.50202,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0143881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494411,-99) , 
9, -951.286, 0, 0, 0.529211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496898,-99) , 
10, -1.85715, 1, 0, 0.498158,-99) , 
5, 0.999524, 1, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467571,-99) , 
4, 9.13219, 1, 0, 0.498711,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.01668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.196777, 1, 1, 0.51028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496421,-99) , 
2, 0.071006, 0, 0, 0.499327,-99) , 
8, 3.02806, 0, 0, 0.502493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461521,-99) , 
11, -4.32048, 1, 0, 0.479713,-99) , 
12, -1.48659, 0, 0, 0.500501,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0286731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415477,-99) , 
9, -1.57147, 0, 0, 0.509104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443879,-99) , 
10, -1.57141, 0, 0, 0.499646,-99) , 
9, -951.286, 0, 0, 0.503658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463845,-99) , 
9, -951.286, 1, 0, 0.48294,-99) , 
12, -1.5128, 0, 0, 0.501906,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0117662);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532082,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.515901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492037,-99) , 
8, 1.9985, 0, 0, 0.498539,-99) , 
10, -1.57144, 1, 0, 0.499844,-99) , 
8, 4.99455, 0, 0, 0.500718,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0137679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45643,-99) , 
12, -1.89797, 0, 0, 0.499522,-99) , 
10, -1.85713, 1, 0, 0.500805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489429,-99) , 
3, 1.13941, 0, 0, 0.499215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45589,-99) , 
6, -0.736928, 1, 0, 0.489869,-99) , 
8, 1.45919, 0, 0, 0.498994,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0158307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497512,-99) , 
8, 4.4366, 0, 0, 0.49899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473805,-99) , 
9, -951.286, 0, 0, 0.489584,-99) , 
10, 0.999964, 1, 0, 0.497231,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48171,-99) , 
0, 0.492376, 0, 0, 0.49589,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0119895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490035,-99) , 
8, 1.44901, 0, 0, 0.505448,-99) , 
NN(
0, 
0, 
-1, 1.13809, 0, -1, 0.497071,-99) , 
10, -0.428602, 1, 0, 0.499915,-99) , 
NN(
0, 
0, 
-1, 2.42139, 1, -1, 0.479774,-99) , 
0, 0.491424, 0, 0, 0.498735,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0200801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495631,-99) , 
11, 0.702143, 0, 0, 0.499201,-99) , 
8, 3.29811, 0, 0, 0.500689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487054,-99) , 
11, -2.24562, 0, 0, 0.494069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452264,-99) , 
12, 0.712352, 1, 0, 0.4899,-99) , 
6, 0.216342, 1, 0, 0.49785,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0100416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71904, 0, 1, 0.517014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487427,-99) , 
6, 0.310218, 1, 0, 0.510716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498527,-99) , 
8, 4.01853, 0, 0, 0.499995,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487337,-99) , 
0, 0.504213, 1, 0, 0.498936,-99) , 
0, 0.493329, 1, 0, 0.500432,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00842344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47527,-99) , 
4, 7.27323, 1, 0, 0.499524,-99) , 
5, 0.999048, 1, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473387,-99) , 
4, 9.50853, 1, 0, 0.500001,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0149801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.530012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471754,-99) , 
4, 9.52584, 1, 0, 0.501123,-99) , 
11, -0.712387, 0, 0, 0.503453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475733,-99) , 
4, 5.5894, 1, 0, 0.499517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440192,-99) , 
10, 1.67205, 1, 0, 0.472773,-99) , 
13, 1.84841, 1, 0, 0.493754,-99) , 
12, 1.67037, 1, 0, 0.500466,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.00994041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.537764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481676,-99) , 
4, 7.28842, 1, 0, 0.500055,-99) , 
5, 0.999524, 1, 0, 0.5025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473773,-99) , 
4, 9.52607, 1, 0, 0.501421,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0172139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.520556,-99) , 
NN(
0, 
0, 
-1, -0.207441, 0, -1, 0.487017,-99) , 
4, 4.64224, 1, 0, 0.506766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495302,-99) , 
5, 0.999524, 1, 0, 0.496879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474673,-99) , 
0, 0.491424, 0, 0, 0.495733,-99) , 
2, -0.0713947, 1, 0, 0.497568,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0121676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494115,-99) , 
12, 2.57863, 1, 0, 0.502357,-99) , 
10, -1.85714, 1, 0, 0.503202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477392,-99) , 
6, 0.77808, 1, 0, 0.502514,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0194376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49748,-99) , 
3, 1.6146, 0, 0, 0.501415,-99) , 
10, 1.57144, 0, 0, 0.504355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492573,-99) , 
11, -1.61034, 0, 0, 0.49649,-99) , 
NN(
0, 
0, 
-1, 1.60779, 1, -1, 0.471926,-99) , 
12, 1.39447, 1, 0, 0.493924,-99) , 
11, -0.0584643, 0, 0, 0.496846,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0213425);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492187,-99) , 
10, -0.428604, 0, 0, 0.522188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458959,-99) , 
6, -0.679031, 1, 0, 0.49952,-99) , 
12, 3.00909, 1, 0, 0.508065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4761,-99) , 
10, 1.57139, 1, 0, 0.501187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437053,-99) , 
8, 1.67065, 0, 0, 0.498816,-99) , 
11, -0.00801529, 0, 0, 0.501374,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0098311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497721,-99) , 
4, 9.18896, 0, 0, 0.498697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472847,-99) , 
5, 0.999048, 0, 0, 0.497725,-99) , 
6, -0.906412, 1, 0, 0.498977,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0155488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481974,-99) , 
3, 1.03014, 0, 0, 0.500651,-99) , 
10, -0.999983, 1, 0, 0.50703,-99) , 
NN(
0, 
0, 
-1, 1.60578, 0, -1, 0.494794,-99) , 
11, 0.874947, 0, 0, 0.497265,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0289937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493398,-99) , 
12, 1.59509, 1, 0, 0.527878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490663,-99) , 
9, -951.286, 1, 0, 0.500825,-99) , 
11, -1.17029, 0, 0, 0.504092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481819,-99) , 
4, 5.66753, 1, 0, 0.501829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462781,-99) , 
9, -951.286, 0, 0, 0.482138,-99) , 
10, -0.428565, 0, 0, 0.494252,-99) , 
8, 2.11346, 0, 0, 0.500158,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0210498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466053,-99) , 
4, 9.4289, 1, 0, 0.505786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482019,-99) , 
2, 0.0726838, 1, 0, 0.5049,-99) , 
NN(
0, 
0, 
-1, -0.56249, 1, -1, 0.487921,-99) , 
4, 2.38617, 0, 0, 0.495722,-99) , 
8, 2.14248, 0, 0, 0.501668,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0131354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.979149, 0, 1, 0.503489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483954,-99) , 
6, -0.889306, 1, 0, 0.493421,-99) , 
12, 3.27825, 1, 0, 0.501773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511035,-99) , 
NN(
0, 
0, 
-1, -4.08241, 0, -1, 0.477421,-99) , 
10, -1.45306, 1, 0, 0.490207,-99) , 
12, -1.4139, 0, 0, 0.500656,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0242154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432278,-99) , 
9, -1.57131, 0, 0, 0.507158,-99) , 
NN(
0, 
0, 
-1, 0.999999, 1, -1, 0.493499,-99) , 
9, -951.286, 0, 0, 0.499262,-99) , 
NN(
0, 
0, 
-1, -4.05482, 1, -1, 0.483698,-99) , 
12, -1.31081, 0, 0, 0.497524,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0219188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.513452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493553,-99) , 
10, 1.2854, 0, 0, 0.496229,-99) , 
3, 1.82881, 0, 0, 0.50207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489923,-99) , 
11, -2.24401, 0, 0, 0.494346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463115,-99) , 
8, 2.65023, 0, 0, 0.491083,-99) , 
6, -0.157619, 1, 0, 0.497042,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0154166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496375,-99) , 
5, 0.999955, 1, 0, 0.498695,-99) , 
4, 8.79345, 0, 0, 0.500104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445318,-99) , 
9, -951.286, 0, 0, 0.487188,-99) , 
5, 0.999524, 0, 0, 0.499266,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0127404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525757,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85697, 0, 1, 0.503041,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487869,-99) , 
6, 0.103138, 1, 0, 0.498538,-99) , 
3, 4.39773, 0, 0, 0.499396,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0119466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488456,-99) , 
12, -1.31081, 0, 0, 0.499908,-99) , 
4, 9.42872, 0, 0, 0.501359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44476,-99) , 
9, -951.286, 0, 0, 0.484483,-99) , 
5, 0.999524, 0, 0, 0.500274,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0218759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424917,-99) , 
9, -1.57153, 0, 0, 0.505419,-99) , 
NN(
0, 
0, 
-1, 1.85714, 1, -1, 0.495591,-99) , 
9, -951.286, 0, 0, 0.499871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47182,-99) , 
7, 0.0238087, 1, 0, 0.498812,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00787518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498572,-99) , 
10, -1.85713, 1, 0, 0.499367,-99) , 
5, 0.999048, 1, 0, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477343,-99) , 
4, 9.25868, 1, 0, 0.499554,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0120056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494432,-99) , 
12, 2.90383, 1, 0, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474507,-99) , 
10, -1.85714, 0, 0, 0.501672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472703,-99) , 
10, -1.3952, 1, 0, 0.489113,-99) , 
12, -1.61899, 0, 0, 0.500755,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0279066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485441,-99) , 
10, -1.40815, 0, 0, 0.509425,-99) , 
NN(
0, 
0, 
-1, 0.40402, 1, -1, 0.492059,-99) , 
10, 0.714286, 1, 0, 0.504604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550596,-99) , 
NN(
0, 
0, 
-1, -1.57154, 0, -1, 0.487561,-99) , 
10, -1.28541, 1, 0, 0.494092,-99) , 
9, -951.286, 1, 0, 0.500048,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0236315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450875,-99) , 
8, 1.96561, 0, 0, 0.489392,-99) , 
9, -951.286, 0, 0, 0.507524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494394,-99) , 
12, 1.33002, 1, 0, 0.499531,-99) , 
NN(
0, 
0, 
-1, 2.24536, 0, -1, 0.490421,-99) , 
11, -2.09111, 0, 0, 0.495896,-99) , 
10, -1.28571, 1, 0, 0.497245,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0138348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492342,-99) , 
9, -951.286, 1, 0, 0.507238,-99) , 
10, -0.999951, 1, 0, 0.513309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536891,-99) , 
NN(
0, 
0, 
-1, 1.63047, 0, -1, 0.497174,-99) , 
11, 0.594723, 0, 0, 0.498484,-99) , 
11, 0.955207, 0, 0, 0.501407,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0181769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496976,-99) , 
6, -0.680088, 1, 0, 0.508736,-99) , 
8, 1.98945, 0, 0, 0.511871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498577,-99) , 
11, -1.25455, 0, 0, 0.501391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471739,-99) , 
6, -0.472923, 1, 0, 0.485242,-99) , 
8, 2.28879, 0, 0, 0.497709,-99) , 
11, -0.361037, 0, 0, 0.502165,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0144785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42599, 0, 1, 0.506707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482523,-99) , 
2, 0.275255, 1, 0, 0.506032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487973,-99) , 
2, -0.214277, 0, 0, 0.505203,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0210419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.523998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482357,-99) , 
0, 0.498091, 0, 0, 0.49387,-99) , 
4, 4.8685, 1, 0, 0.512534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
4, 4.65951, 1, 0, 0.506887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492259,-99) , 
4, 4.49223, 0, 0, 0.496449,-99) , 
2, 0.00347437, 0, 0, 0.501965,-99) , 
2, -0.0713465, 1, 0, 0.503742,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0257636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53765, 0, 1, 0.530831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483553,-99) , 
11, -3.71366, 1, 0, 0.498256,-99) , 
6, -0.354188, 1, 0, 0.515502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472444,-99) , 
10, 1.85714, 1, 0, 0.507614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41803,-99) , 
9, -1.57144, 0, 0, 0.496845,-99) , 
9, -951.286, 1, 0, 0.502867,-99) , 
10, -0.99999, 1, 0, 0.50508,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0149205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.520046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495415,-99) , 
11, -1.64534, 0, 0, 0.501264,-99) , 
10, -1.57142, 1, 0, 0.502695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462732,-99) , 
9, -951.286, 0, 0, 0.484283,-99) , 
6, 0.590915, 1, 0, 0.500982,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00656023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97959, 0, 1, 0.518674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499677,-99) , 
10, 2.12924, 0, 0, 0.500411,-99) , 
10, -1.57141, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0.489972, 1, -1, 0.481847,-99) , 
0, 0.491424, 0, 0, 0.500568,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0134544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496401,-99) , 
12, -1.72792, 0, 0, 0.516462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484871,-99) , 
12, 0.183662, 1, 0, 0.510508,-99) , 
NN(
NN(
0, 
0, 
-1, -0.737481, 1, 1, 0.507652,-99) , 
NN(
0, 
0, 
-1, 1.09114, 0, -1, 0.49613,-99) , 
10, -1.00001, 1, 0, 0.498222,-99) , 
3, 3.45254, 0, 0, 0.500279,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00997545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.137614, 0, 1, 0.503376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470151,-99) , 
6, -0.797136, 1, 0, 0.491186,-99) , 
8, 1.39883, 0, 0, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471685,-99) , 
6, 0.77808, 1, 0, 0.500759,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0205373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.510329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483126,-99) , 
8, 1.03789, 0, 0, 0.505058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466189,-99) , 
12, -1.99219, 0, 0, 0.502163,-99) , 
NN(
0, 
0, 
-1, -0.156922, 1, -1, 0.486712,-99) , 
8, 2.57885, 0, 0, 0.496546,-99) , 
11, -0.150129, 0, 0, 0.49903,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0193474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49765,-99) , 
6, 0.31748, 1, 0, 0.504662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490983,-99) , 
7, 0.0113266, 0, 0, 0.494622,-99) , 
8, 2.74754, 0, 0, 0.498849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47224,-99) , 
7, 0.0237868, 1, 0, 0.49786,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0101014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494313,-99) , 
9, -951.286, 1, 0, 0.49866,-99) , 
10, 1.85709, 0, 0, 0.49958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
2, 0.213822, 1, 0, 0.498665,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0161163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492908,-99) , 
10, 2.23807, 1, 0, 0.519248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498351,-99) , 
11, -3.19226, 0, 0, 0.508753,-99) , 
NN(
0, 
0, 
-1, -0.73285, 0, -1, 0.49411,-99) , 
8, 3.36641, 0, 0, 0.497826,-99) , 
10, 1.8571, 0, 0, 0.498957,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0214179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493872,-99) , 
0, 0.494281, 0, 0, 0.513063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48835,-99) , 
2, -0.0731939, 0, 0, 0.509097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496752,-99) , 
12, 2.4461, 1, 0, 0.506151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486264,-99) , 
10, -0.00683459, 1, 0, 0.492063,-99) , 
11, -1.15506, 0, 0, 0.498436,-99) , 
10, -0.714297, 1, 0, 0.50111,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0200629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48754,-99) , 
5, 0.999955, 0, 0, 0.516642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49439,-99) , 
4, 1.62866, 1, 0, 0.500469,-99) , 
4, 4.62888, 0, 0, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481741,-99) , 
5, 0.999048, 0, 0, 0.503076,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0175433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.222, 1, 1, 0.522463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476951,-99) , 
8, 1.54183, 1, 0, 0.503915,-99) , 
12, 3.03427, 1, 0, 0.510823,-99) , 
NN(
NN(
0, 
0, 
-1, -0.896024, 0, 1, 0.503699,-99) , 
NN(
0, 
0, 
-1, -0.43311, 0, -1, 0.47027,-99) , 
12, 1.47704, 1, 0, 0.500383,-99) , 
11, 0.0362792, 0, 0, 0.503211,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.00942111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495471,-99) , 
6, -0.895023, 1, 0, 0.509509,-99) , 
NN(
0, 
0, 
-1, 1.50786, 0, -1, 0.496937,-99) , 
11, 4.74026, 0, 0, 0.498044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476994,-99) , 
0, 0.490472, 0, 0, 0.497238,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0150552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49179,-99) , 
9, -951.286, 1, 0, 0.502054,-99) , 
0, 0.495234, 1, 0, 0.507737,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497327,-99) , 
11, -0.486767, 0, 0, 0.499817,-99) , 
NN(
0, 
0, 
-1, 2.43952, 1, -1, 0.473079,-99) , 
12, 2.1259, 1, 0, 0.497879,-99) , 
11, 0.955207, 0, 0, 0.4998,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0147952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497185,-99) , 
6, -0.243521, 1, 0, 0.505941,-99) , 
6, -0.721254, 1, 0, 0.515589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480454,-99) , 
12, 6.86624, 1, 0, 0.503017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473051,-99) , 
7, 0.0237868, 1, 0, 0.50187,-99) , 
10, -1.2857, 1, 0, 0.503492,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0165986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57353, 0, 1, 0.525835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473361,-99) , 
10, 1.00391, 1, 0, 0.513839,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.511696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49,-99) , 
8, 1.70602, 0, 0, 0.497833,-99) , 
10, 0.714286, 0, 0, 0.501463,-99) , 
8, 4.10853, 0, 0, 0.502835,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00594281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499827,-99) , 
4, 9.41001, 0, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475032,-99) , 
2, -0.274832, 0, 0, 0.500002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470484,-99) , 
2, 0.214636, 1, 0, 0.498784,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.01537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.00127, 0, 1, 0.510857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467876,-99) , 
3, 2.19317, 1, 0, 0.484568,-99) , 
2, 0.0717312, 1, 0, 0.506436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49412,-99) , 
3, 1.7182, 1, 0, 0.49721,-99) , 
3, 4.15414, 0, 0, 0.498363,-99) , 
0, 0.496186, 1, 0, 0.500872,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0111852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482499,-99) , 
13, 1.28707, 0, 0, 0.506791,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.497662,-99) , 
1, 0.00340276, 0, 0, 0.500091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47522,-99) , 
7, 0.0238087, 1, 0, 0.499168,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0130229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.79326, 0, 1, 0.503574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463347,-99) , 
9, -951.286, 0, 0, 0.485652,-99) , 
5, 0.999864, 0, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477729,-99) , 
5, 0.999048, 0, 0, 0.50066,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0108953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498063,-99) , 
10, -0.714304, 1, 0, 0.500761,-99) , 
4, 9.42872, 0, 0, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476483,-99) , 
5, 0.999048, 0, 0, 0.501066,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0158898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47779,-99) , 
6, 0.543098, 1, 0, 0.504803,-99) , 
NN(
0, 
0, 
-1, 1.70297, 0, -1, 0.494067,-99) , 
10, 0.142838, 0, 0, 0.498943,-99) , 
8, 4.69098, 0, 0, 0.500107,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0143178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482432,-99) , 
12, -1.94124, 0, 0, 0.504484,-99) , 
NN(
0, 
0, 
-1, -0.595027, 0, -1, 0.49453,-99) , 
10, -0.428584, 1, 0, 0.497936,-99) , 
2, -0.214281, 1, 0, 0.498916,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0174947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.451841, 1, 1, 0.509832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484424,-99) , 
12, -1.82601, 0, 0, 0.506325,-99) , 
NN(
NN(
0, 
0, 
-1, 3.92877, 1, 1, 0.50869,-99) , 
NN(
0, 
0, 
-1, 2.82473, 1, -1, 0.492223,-99) , 
11, 1.51817, 0, 0, 0.496039,-99) , 
3, 2.96054, 0, 0, 0.498996,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0113073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492734,-99) , 
3, 1.44982, 0, 0, 0.516079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499458,-99) , 
11, 0.474971, 0, 0, 0.502275,-99) , 
NN(
0, 
0, 
-1, 1.58232, 1, -1, 0.490997,-99) , 
12, 2.75974, 1, 0, 0.500019,-99) , 
10, -1.57143, 1, 0, 0.501185,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0150948);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.063804, 1, 1, 0.519741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498066,-99) , 
11, -1.89984, 0, 0, 0.502411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489688,-99) , 
0, 0.503804, 0, 0, 0.492759,-99) , 
8, 1.79072, 0, 0, 0.499535,-99) , 
10, 1.85715, 0, 0, 0.500592,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.015947);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480998,-99) , 
2, 0.256314, 1, 0, 0.50555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48703,-99) , 
2, -0.132303, 0, 0, 0.504627,-99) , 
2, -0.213927, 1, 0, 0.505612,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0196666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482022,-99) , 
8, 1.91022, 0, 0, 0.502165,-99) , 
11, 0.0264541, 0, 0, 0.503872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491906,-99) , 
9, -951.286, 1, 0, 0.506391,-99) , 
NN(
0, 
0, 
-1, 0.486457, 0, -1, 0.482572,-99) , 
11, 2.33387, 0, 0, 0.49484,-99) , 
12, 2.04344, 1, 0, 0.501524,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0146906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496191,-99) , 
12, 2.59596, 1, 0, 0.51775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464196,-99) , 
12, 2.06503, 1, 0, 0.500655,-99) , 
11, 0.370531, 0, 0, 0.502581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503613,-99) , 
NN(
0, 
0, 
-1, 3.47553, 0, -1, 0.472047,-99) , 
10, -0.147562, 0, 0, 0.488114,-99) , 
13, 1.38836, 0, 0, 0.500473,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0156966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84238, 0, 1, 0.523969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496009,-99) , 
11, -3.23432, 1, 0, 0.498733,-99) , 
8, 3.45501, 0, 0, 0.504084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497941,-99) , 
8, 2.5817, 0, 0, 0.500241,-99) , 
NN(
0, 
0, 
-1, 0.950837, 1, -1, 0.489576,-99) , 
6, -0.0640155, 1, 0, 0.495579,-99) , 
10, -0.142877, 1, 0, 0.499328,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00965525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531059,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.497846,-99) , 
5, 0.999524, 1, 0, 0.49999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474723,-99) , 
4, 9.52224, 1, 0, 0.499029,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00601589);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.213939, 0, 1, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479674,-99) , 
5, 0.999048, 0, 0, 0.50152,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0187382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.516011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473598,-99) , 
11, 3.18681, 0, 0, 0.496384,-99) , 
12, 3.13298, 1, 0, 0.50501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
11, -1.08762, 0, 0, 0.500253,-99) , 
NN(
0, 
0, 
-1, 2.18946, 0, -1, 0.480859,-99) , 
12, 1.04623, 1, 0, 0.497021,-99) , 
11, -0.166323, 0, 0, 0.499346,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0182482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478235,-99) , 
5, 0.999864, 0, 0, 0.505102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482166,-99) , 
5, 0.999524, 0, 0, 0.503607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478304,-99) , 
6, 0.590603, 1, 0, 0.500245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470537,-99) , 
9, -951.286, 0, 0, 0.487441,-99) , 
10, -0.714293, 0, 0, 0.497062,-99) , 
0, 0.499043, 1, 0, 0.500883,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0124954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481227,-99) , 
12, 3.69543, 1, 0, 0.516533,-99) , 
NN(
0, 
0, 
-1, 2.49547, 1, -1, 0.497945,-99) , 
11, 0.900308, 0, 0, 0.499671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501788,-99) , 
NN(
0, 
0, 
-1, -0.803417, 1, -1, 0.465785,-99) , 
6, -0.877859, 1, 0, 0.484259,-99) , 
13, 1.29721, 0, 0, 0.49785,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0167586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489833,-99) , 
8, 1.2915, 0, 0, 0.50056,-99) , 
8, 4.64054, 0, 0, 0.501513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480576,-99) , 
3, 2.93774, 1, 0, 0.514617,-99) , 
NN(
0, 
0, 
-1, 1.38095, 1, -1, 0.473841,-99) , 
9, -951.286, 0, 0, 0.489973,-99) , 
10, 0.999998, 1, 0, 0.499358,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0112535);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535444,-99) , 
NN(
NN(
0, 
0, 
-1, -1.0408, 1, 1, 0.507435,-99) , 
NN(
0, 
0, 
-1, 1.67289, 0, -1, 0.496386,-99) , 
11, 0.0114434, 0, 0, 0.499379,-99) , 
10, 2.14281, 0, 0, 0.500523,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0234551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487154,-99) , 
12, -2.07509, 0, 0, 0.515716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476005,-99) , 
9, -951.286, 0, 0, 0.490862,-99) , 
3, 1.94407, 0, 0, 0.504399,-99) , 
NN(
NN(
0, 
0, 
-1, 3.9446, 1, -1, 0.496745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449062,-99) , 
11, -3.34653, 0, 0, 0.47732,-99) , 
12, -0.592439, 0, 0, 0.494498,-99) , 
10, -0.428565, 1, 0, 0.497866,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.013004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473891,-99) , 
6, -0.904492, 1, 0, 0.49876,-99) , 
3, 1.07458, 0, 0, 0.510431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499776,-99) , 
10, -1.85713, 1, 0, 0.501063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452947,-99) , 
11, 1.32031, 0, 0, 0.475874,-99) , 
8, 1.54736, 0, 0, 0.498948,-99) , 
11, 2.57541, 0, 0, 0.500426,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0143042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497911,-99) , 
3, 1.31219, 0, 0, 0.505193,-99) , 
8, 4.76426, 0, 0, 0.50611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471853,-99) , 
3, 2.19731, 1, 0, 0.487401,-99) , 
0, 0.491424, 0, 0, 0.505011,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00986701);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533149,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57138, 0, 1, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477196,-99) , 
2, 0.2144, 1, 0, 0.502274,-99) , 
3, 4.4367, 0, 0, 0.50316,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0133136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.606555, 0, 1, 0.504514,-99) , 
NN(
0, 
0, 
-1, -0.734309, 1, -1, 0.491465,-99) , 
8, 1.46994, 0, 0, 0.502073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503563,-99) , 
NN(
0, 
0, 
-1, 3.59565, 0, -1, 0.470853,-99) , 
11, -4.36694, 1, 0, 0.482287,-99) , 
12, -1.43229, 0, 0, 0.500232,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00998929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498958,-99) , 
10, -1.85712, 1, 0, 0.499995,-99) , 
4, 8.79326, 0, 0, 0.501917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463692,-99) , 
9, -951.286, 0, 0, 0.485357,-99) , 
5, 0.999524, 0, 0, 0.500856,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0135338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527284,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492512, 0, 1, 0.512014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494355,-99) , 
11, 0.0184867, 0, 0, 0.49717,-99) , 
0, 0.493329, 1, 0, 0.499075,-99) , 
8, 4.97798, 0, 0, 0.499868,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0152112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.627514, 1, 1, 0.528248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467167,-99) , 
10, -0.611377, 1, 0, 0.503238,-99) , 
11, -3.48321, 0, 0, 0.517916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498822,-99) , 
2, 0.213801, 0, 0, 0.499602,-99) , 
10, 1.8571, 0, 0, 0.500762,-99) , 
8, 3.77989, 0, 0, 0.503665,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0155645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.506172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480835,-99) , 
10, -1.57141, 0, 0, 0.505065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475175,-99) , 
9, -951.286, 1, 0, 0.489937,-99) , 
12, -1.3596, 0, 0, 0.503493,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00786783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.532322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
10, -1.85715, 1, 0, 0.500773,-99) , 
5, 0.999524, 1, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481675,-99) , 
4, 9.50853, 1, 0, 0.501986,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0205608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28573, 1, 1, 0.510519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494535,-99) , 
2, 0.0101144, 0, 0, 0.500703,-99) , 
4, 2.84438, 0, 0, 0.504567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486474,-99) , 
6, 0.715573, 1, 0, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47326,-99) , 
9, -951.286, 0, 0, 0.489632,-99) , 
6, 0.590916, 1, 0, 0.503167,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0188002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.842002, 0, 1, 0.506569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483842,-99) , 
11, 2.67374, 0, 0, 0.495648,-99) , 
8, 1.81333, 0, 0, 0.503478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478952,-99) , 
7, 0.0238087, 1, 0, 0.502551,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0159238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.517979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49357,-99) , 
6, -0.229704, 1, 0, 0.499949,-99) , 
8, 3.66014, 0, 0, 0.503371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475612,-99) , 
4, 9.50466, 1, 0, 0.502315,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0137632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482124,-99) , 
8, 1.96145, 0, 0, 0.507317,-99) , 
9, -951.286, 0, 0, 0.518511,-99) , 
NN(
0, 
0, 
-1, -1.60343, 0, -1, 0.496453,-99) , 
10, -1.28572, 1, 0, 0.499076,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0132167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498592,-99) , 
11, -2.64136, 0, 0, 0.505204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495753,-99) , 
8, 2.63353, 0, 0, 0.49713,-99) , 
8, 2.74013, 0, 0, 0.500473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463917,-99) , 
3, 2.20265, 1, 0, 0.484171,-99) , 
0, 0.491424, 0, 0, 0.499499,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0206079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49663,-99) , 
9, -951.286, 0, 0, 0.529833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491849,-99) , 
6, -0.0660846, 1, 0, 0.500515,-99) , 
5, 0.999524, 1, 0, 0.502435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488178,-99) , 
4, 9.44432, 0, 0, 0.494746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458326,-99) , 
6, 0.490274, 1, 0, 0.489454,-99) , 
4, 4.82263, 1, 0, 0.49991,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.010474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.327978, 0, 1, 0.504206,-99) , 
NN(
0, 
0, 
-1, 1.79861, 1, -1, 0.495052,-99) , 
12, 2.37116, 1, 0, 0.502136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473526,-99) , 
4, 9.42206, 1, 0, 0.501019,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00663437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484581,-99) , 
5, 0.999683, 0, 0, 0.499978,-99) , 
10, -1.85714, 1, 0, 0.501057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476979,-99) , 
5, 0.999048, 0, 0, 0.500192,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0110321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493526,-99) , 
6, -0.0707385, 1, 0, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0.490789, 0, -1, 0.48122,-99) , 
9, -951.286, 0, 0, 0.491087,-99) , 
0, 0.494281, 0, 0, 0.50146,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0217372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10211, 0, 1, 0.516555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487461,-99) , 
12, 0.543216, 1, 0, 0.501242,-99) , 
11, -0.986384, 0, 0, 0.50349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495433,-99) , 
12, 4.50453, 1, 0, 0.505757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464564,-99) , 
9, -951.286, 0, 0, 0.478967,-99) , 
11, 1.68767, 0, 0, 0.493502,-99) , 
12, 1.80862, 1, 0, 0.500607,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0215502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142611, 0, 1, 0.534625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476922,-99) , 
6, -0.801653, 1, 0, 0.496103,-99) , 
12, 3.82311, 1, 0, 0.508673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494782,-99) , 
11, -0.0365555, 0, 0, 0.497425,-99) , 
NN(
0, 
0, 
-1, 2.56249, 1, -1, 0.470667,-99) , 
12, 2.16812, 1, 0, 0.495472,-99) , 
11, 1.04356, 0, 0, 0.497992,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0086851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499113,-99) , 
8, 2.73984, 0, 0, 0.502113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483511,-99) , 
0, 0.505301, 1, 0, 0.501291,-99) , 
NN(
0, 
0, 
-1, 2.194, 1, -1, 0.485966,-99) , 
0, 0.491424, 0, 0, 0.500388,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00913259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491656,-99) , 
8, 1.48629, 0, 0, 0.499436,-99) , 
10, 1.85714, 0, 0, 0.500417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479228,-99) , 
0, 0.490563, 0, 0, 0.493151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465819,-99) , 
8, 1.75325, 0, 0, 0.485084,-99) , 
0, 0.492377, 0, 0, 0.499087,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0118061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143127, 0, 1, 0.530767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484627,-99) , 
9, -951.286, 1, 0, 0.497366,-99) , 
12, 3.52482, 1, 0, 0.507385,-99) , 
NN(
0, 
0, 
-1, 1.61152, 0, -1, 0.496821,-99) , 
11, 0.874947, 0, 0, 0.498961,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0061034);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518702,-99) , 
NN(
0, 
0, 
-1, 4.0617, 1, -1, 0.497402,-99) , 
3, 4.43667, 0, 0, 0.498002,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0104913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494764,-99) , 
0, 0.499043, 1, 0, 0.516121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491309,-99) , 
12, 3.09797, 1, 0, 0.500515,-99) , 
10, -1.57143, 1, 0, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484665,-99) , 
2, -0.214238, 0, 0, 0.500892,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00800686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499504,-99) , 
11, 1.0624, 0, 0, 0.501214,-99) , 
4, 9.56493, 0, 0, 0.501936,-99) , 
NN(
0, 
0, 
-1, 0.16857, 1, -1, 0.474847,-99) , 
6, 0.681187, 1, 0, 0.500362,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0202133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85266, 0, 1, 0.525753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469972,-99) , 
6, 0.395563, 1, 0, 0.514081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488718,-99) , 
8, 1.46126, 0, 0, 0.502136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453263,-99) , 
10, -1.44099, 1, 0, 0.479169,-99) , 
12, -1.72583, 0, 0, 0.500529,-99) , 
10, 1.28571, 0, 0, 0.502293,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0134457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143761, 0, 1, 0.53079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493011,-99) , 
11, 4.41736, 0, 0, 0.506554,-99) , 
12, 3.77819, 1, 0, 0.514316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476042,-99) , 
8, 1.57351, 0, 0, 0.500413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442946,-99) , 
11, 0.292306, 0, 0, 0.477492,-99) , 
12, 2.08544, 1, 0, 0.498565,-99) , 
11, 0.990198, 0, 0, 0.501624,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0135373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489779,-99) , 
10, 2.23809, 1, 0, 0.517848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495084,-99) , 
3, 2.44538, 0, 0, 0.498178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473464,-99) , 
9, -951.286, 1, 0, 0.486957,-99) , 
12, -1.36512, 0, 0, 0.496941,-99) , 
10, 1.85714, 0, 0, 0.498056,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.00993294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498753,-99) , 
7, 0.00340074, 1, 0, 0.507049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47862,-99) , 
12, 1.34236, 1, 0, 0.498156,-99) , 
11, -0.170866, 0, 0, 0.500643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476257,-99) , 
7, 0.0238087, 1, 0, 0.499732,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0239944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40297, 1, 1, 0.521153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4794,-99) , 
11, 4.08755, 0, 0, 0.502043,-99) , 
13, 1.40197, 0, 0, 0.508751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493471,-99) , 
6, 0.0838473, 1, 0, 0.498238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476688,-99) , 
11, -0.585573, 0, 0, 0.486227,-99) , 
3, 2.32678, 0, 0, 0.493581,-99) , 
6, -0.625606, 1, 0, 0.497101,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0161074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490778,-99) , 
8, 1.09406, 0, 0, 0.50481,-99) , 
10, -0.999954, 1, 0, 0.509375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497072,-99) , 
11, -0.396596, 0, 0, 0.500115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455212,-99) , 
12, 2.58749, 1, 0, 0.498721,-99) , 
11, 1.04356, 0, 0, 0.50075,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0102287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494549,-99) , 
8, 1.21463, 0, 0, 0.508026,-99) , 
NN(
0, 
0, 
-1, 2.87224, 1, -1, 0.49775,-99) , 
11, 1.61439, 0, 0, 0.499534,-99) , 
NN(
0, 
0, 
-1, -1.25193, 1, -1, 0.485682,-99) , 
12, -1.56792, 0, 0, 0.498472,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0093527);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497388,-99) , 
3, 1.06725, 0, 0, 0.509302,-99) , 
NN(
0, 
0, 
-1, 2.49744, 1, -1, 0.497461,-99) , 
11, 1.46522, 0, 0, 0.499461,-99) , 
10, -2.14285, 1, 0, 0.500144,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0166602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485033,-99) , 
12, 2.84868, 1, 0, 0.504288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469517,-99) , 
11, 4.69813, 0, 0, 0.491348,-99) , 
3, 1.23343, 0, 0, 0.50243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475816,-99) , 
9, -951.286, 1, 0, 0.489026,-99) , 
12, -1.43229, 0, 0, 0.501164,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.011206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499604,-99) , 
4, 1.42154, 1, 0, 0.52957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473987,-99) , 
5, 0.999728, 0, 0, 0.50191,-99) , 
5, 0.999524, 1, 0, 0.503667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486883,-99) , 
4, 9.18964, 1, 0, 0.502942,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0100245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497436,-99) , 
2, 0.213801, 0, 0, 0.498198,-99) , 
4, 9.18112, 0, 0, 0.499747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481211,-99) , 
5, 0.999048, 0, 0, 0.499079,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0109648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497981,-99) , 
11, -4.06463, 1, 0, 0.499811,-99) , 
11, 2.31107, 0, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, -0.897846, 1, -1, 0.485341,-99) , 
8, 1.15774, 0, 0, 0.499849,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00451829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14278, 0, 1, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478366,-99) , 
6, 0.77836, 1, 0, 0.501158,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0134695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499919,-99) , 
2, -0.00342305, 1, 0, 0.507382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469409,-99) , 
4, 4.73274, 1, 0, 0.491422,-99) , 
2, 0.0714036, 1, 0, 0.504979,-99) , 
NN(
0, 
0, 
-1, 1.45998, 0, -1, 0.494949,-99) , 
0, 0.498091, 1, 0, 0.499874,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0135676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455258,-99) , 
3, 1.45791, 0, 0, 0.49732,-99) , 
9, -951.286, 0, 0, 0.511665,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483192,-99) , 
4, 9.02523, 1, 0, 0.501872,-99) , 
10, -1.2857, 1, 0, 0.50301,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00786498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498956,-99) , 
0, 0.491424, 1, 0, 0.500115,-99) , 
4, 9.0526, 0, 0, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481534,-99) , 
5, 0.999048, 0, 0, 0.500792,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0140925);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.62021, 1, 1, 0.515302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489768,-99) , 
13, 4.06117, 1, 0, 0.515231,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495959,-99) , 
11, -3.81615, 1, 0, 0.497836,-99) , 
11, 3.0843, 0, 0, 0.499861,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0243139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44532, 0, 1, 0.514093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477606,-99) , 
6, 0.466851, 1, 0, 0.494684,-99) , 
0, 0.494281, 0, 0, 0.510867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490809,-99) , 
5, 0.999986, 0, 0, 0.502326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431452,-99) , 
4, 1.70239, 1, 0, 0.475236,-99) , 
5, 0.999905, 0, 0, 0.499518,-99) , 
8, 2.79707, 0, 0, 0.504043,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0137685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.52354,-99) , 
NN(
NN(
0, 
0, 
-1, 4.40898, 1, 1, 0.513978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496932,-99) , 
10, 1.47619, 0, 0, 0.498889,-99) , 
3, 3.69857, 0, 0, 0.500694,-99) , 
10, -1.57142, 1, 0, 0.502396,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0118799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495391,-99) , 
4, 4.8811, 1, 0, 0.510264,-99) , 
NN(
0, 
0, 
-1, 0.684758, 1, -1, 0.498346,-99) , 
2, -0.0716908, 1, 0, 0.500335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464398,-99) , 
11, -4.10293, 1, 0, 0.488795,-99) , 
12, -1.3261, 0, 0, 0.49908,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0140285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492935,-99) , 
12, 6.68155, 1, 0, 0.512255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499975,-99) , 
11, -0.162752, 0, 0, 0.502581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463408,-99) , 
11, 1.56137, 0, 0, 0.488693,-99) , 
12, 2.49678, 1, 0, 0.501028,-99) , 
11, 3.19208, 0, 0, 0.502313,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0166548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490411,-99) , 
6, -0.535448, 0, 0, 0.519199,-99) , 
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.506537,-99) , 
2, 0.0716194, 0, 0, 0.508425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497925,-99) , 
8, 1.32963, 0, 0, 0.508655,-99) , 
NN(
0, 
0, 
-1, 1.85627, 0, -1, 0.495163,-99) , 
6, -0.62639, 1, 0, 0.498343,-99) , 
0, 0.496186, 0, 0, 0.505335,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0110884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498919,-99) , 
6, -0.347403, 1, 0, 0.502212,-99) , 
5, 0.999048, 1, 0, 0.503786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479196,-99) , 
4, 9.52058, 1, 0, 0.502858,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0110921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.509526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498699,-99) , 
5, 0.999524, 1, 0, 0.50011,-99) , 
4, 3.12409, 0, 0, 0.503202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478558,-99) , 
4, 9.1652, 1, 0, 0.50214,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0276701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.90774, 0, 1, 0.524352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481436,-99) , 
12, -1.60436, 0, 0, 0.505262,-99) , 
8, 4.00772, 0, 0, 0.507479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437863,-99) , 
9, -1.00007, 0, 0, 0.510108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472173,-99) , 
10, 1.40808, 1, 0, 0.493935,-99) , 
9, -951.286, 0, 0, 0.500767,-99) , 
10, 0.428517, 1, 0, 0.505112,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00855252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469372,-99) , 
4, 7.71384, 1, 0, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469399,-99) , 
4, 9.50466, 1, 0, 0.500008,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00640003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499873,-99) , 
2, 0.223693, 0, 0, 0.500894,-99) , 
5, 0.999048, 1, 0, 0.50243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484568,-99) , 
4, 9.26255, 1, 0, 0.501684,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0132512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494988,-99) , 
9, -951.286, 0, 0, 0.510708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493407,-99) , 
9, -951.286, 1, 0, 0.498713,-99) , 
10, -1.28572, 1, 0, 0.500126,-99) , 
NN(
0, 
0, 
-1, 0.934158, 0, -1, 0.482676,-99) , 
0, 0.504757, 1, 0, 0.499143,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0168101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497264,-99) , 
12, 1.96618, 1, 0, 0.514577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49538,-99) , 
2, 0.0715678, 0, 0, 0.49882,-99) , 
10, 0.428577, 0, 0, 0.504451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477625,-99) , 
8, 1.84452, 0, 0, 0.499435,-99) , 
NN(
0, 
0, 
-1, 1.55633, 0, -1, 0.485118,-99) , 
12, 1.62936, 1, 0, 0.494999,-99) , 
0, 0.499043, 0, 0, 0.498976,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0140835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65386, 1, 1, 0.527242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479305,-99) , 
12, -1.87142, 0, 0, 0.500012,-99) , 
11, -1.11343, 0, 0, 0.503176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521416,-99) , 
NN(
0, 
0, 
-1, -0.0056685, 0, -1, 0.493031,-99) , 
7, 0.0238087, 0, 0, 0.494984,-99) , 
8, 2.09216, 0, 0, 0.499944,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0146952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495925,-99) , 
2, 0.213929, 0, 0, 0.496924,-99) , 
4, 8.83816, 0, 0, 0.498448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454874,-99) , 
9, -951.286, 0, 0, 0.481487,-99) , 
5, 0.999524, 0, 0, 0.497346,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0148455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.00639, 0, 1, 0.506009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452563,-99) , 
10, 0.429437, 1, 0, 0.483056,-99) , 
5, 0.999773, 0, 0, 0.504346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476099,-99) , 
5, 0.999048, 0, 0, 0.503323,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0070003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.513236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496166,-99) , 
6, 0.310171, 1, 0, 0.509602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498899,-99) , 
5, 0.999048, 1, 0, 0.499639,-99) , 
10, 2.14285, 0, 0, 0.50031,-99) , 
0, 0.493329, 1, 0, 0.501491,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00743353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02883, 0, 1, 0.512608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498715,-99) , 
10, -1.28573, 1, 0, 0.499941,-99) , 
0, 0.49292, 1, 0, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477182,-99) , 
0, 0.490471, 0, 0, 0.499986,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0121826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.41001, 0, 1, 0.504784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47553,-99) , 
2, 0.275036, 1, 0, 0.503997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477449,-99) , 
2, -0.214584, 0, 0, 0.502799,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00623078);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499834,-99) , 
5, 0.999524, 1, 0, 0.500707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474623,-99) , 
3, 3.50873, 0, 0, 0.48912,-99) , 
12, -1.51913, 0, 0, 0.499705,-99) , 
10, 2.14285, 0, 0, 0.500491,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00892663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497643,-99) , 
0, 0.497139, 0, 0, 0.51639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499127,-99) , 
8, 3.36375, 0, 0, 0.500886,-99) , 
10, 1.57139, 0, 0, 0.502146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467851,-99) , 
10, 0.150144, 1, 0, 0.484426,-99) , 
13, 4.46923, 1, 0, 0.500988,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0258776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487752,-99) , 
5, 0.999977, 0, 0, 0.509926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491049,-99) , 
5, 0.999905, 0, 0, 0.508137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492377,-99) , 
11, -1.99564, 0, 0, 0.497151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463363,-99) , 
12, 1.31489, 1, 0, 0.495022,-99) , 
6, -0.160378, 1, 0, 0.502123,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0101026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.03531, 0, 1, 0.508426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477376,-99) , 
12, -0.874411, 0, 0, 0.498979,-99) , 
10, -0.714299, 1, 0, 0.501344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48206,-99) , 
2, 0.214397, 1, 0, 0.50054,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0134952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39917, 0, 1, 0.527251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484424,-99) , 
11, 4.51563, 0, 0, 0.503518,-99) , 
12, 3.77237, 1, 0, 0.510774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477705,-99) , 
12, -1.91958, 0, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464396,-99) , 
8, 1.55964, 0, 0, 0.498503,-99) , 
11, 1.0624, 0, 0, 0.500849,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0179439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496071,-99) , 
10, 1.57137, 0, 0, 0.497784,-99) , 
8, 3.984, 0, 0, 0.499101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481399,-99) , 
9, -0.1435, 0, 0, 0.513911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452921,-99) , 
9, -951.286, 0, 0, 0.487833,-99) , 
6, 0.590601, 1, 0, 0.498031,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0149031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479904,-99) , 
8, 1.43681, 0, 0, 0.508096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496757,-99) , 
2, 0.214243, 0, 0, 0.497811,-99) , 
10, -0.795928, 1, 0, 0.500211,-99) , 
10, 2.14281, 0, 0, 0.501025,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0101805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.37006, 0, 1, 0.509461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481314,-99) , 
12, -0.911262, 0, 0, 0.499483,-99) , 
10, -0.714291, 1, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479279,-99) , 
2, 0.213871, 1, 0, 0.501065,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0187624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458633,-99) , 
10, -1.85716, 0, 0, 0.496507,-99) , 
9, -951.286, 0, 0, 0.512461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494495,-99) , 
12, 1.38366, 1, 0, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466572,-99) , 
12, -1.63296, 0, 0, 0.500081,-99) , 
10, -1.28571, 1, 0, 0.501518,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.00926979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498819,-99) , 
9, -951.286, 1, 0, 0.512645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477437,-99) , 
12, 3.37425, 1, 0, 0.500862,-99) , 
11, 3.11605, 0, 0, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479855,-99) , 
2, 0.213758, 1, 0, 0.501297,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0151147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495271,-99) , 
4, 9.18789, 0, 0, 0.496162,-99) , 
10, 1.85714, 0, 0, 0.497474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444436,-99) , 
9, -951.286, 0, 0, 0.473971,-99) , 
5, 0.999524, 0, 0, 0.495999,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0127795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498157,-99) , 
7, 0.0124709, 0, 0, 0.502726,-99) , 
7, 0.0238087, 0, 0, 0.506111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497466,-99) , 
11, -0.560829, 0, 0, 0.49963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47149,-99) , 
12, 2.48252, 1, 0, 0.498496,-99) , 
6, -0.531997, 1, 0, 0.50077,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00895654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08336, 0, 1, 0.511737,-99) , 
NN(
0, 
0, 
-1, 3.42164, 1, -1, 0.497631,-99) , 
11, 2.97512, 0, 0, 0.499344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469437,-99) , 
5, 0.999048, 0, 0, 0.498271,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0122508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499431,-99) , 
6, -0.43849, 1, 0, 0.503559,-99) , 
5, 0.999048, 1, 0, 0.504766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47867,-99) , 
4, 9.1652, 1, 0, 0.503649,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00702752);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.43667, 0, 1, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0.14277, 0, -1, 0.479005,-99) , 
0, 0.491424, 0, 0, 0.501024,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.01144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497187,-99) , 
12, 2.36012, 1, 0, 0.503166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482267,-99) , 
7, 0.0238087, 1, 0, 0.502376,-99) , 
10, -1.85713, 1, 0, 0.503304,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0102126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42899, 0, 1, 0.503395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47808,-99) , 
5, 0.999683, 0, 0, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473422,-99) , 
5, 0.999048, 0, 0, 0.501117,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0187127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85715, 0, 1, 0.506469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475301,-99) , 
3, 3.41705, 1, 0, 0.504654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494116,-99) , 
11, -2.63871, 0, 0, 0.50093,-99) , 
NN(
0, 
0, 
-1, -2.76247, 1, -1, 0.484453,-99) , 
6, -0.0661233, 0, 0, 0.496489,-99) , 
12, 0.116178, 0, 0, 0.501365,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0244354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493633,-99) , 
11, -3.43334, 0, 0, 0.515819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495577,-99) , 
8, 1.71875, 0, 0, 0.502344,-99) , 
8, 3.69079, 0, 0, 0.504637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485851,-99) , 
12, 3.04389, 1, 0, 0.508234,-99) , 
NN(
0, 
0, 
-1, 0.700942, 1, -1, 0.484417,-99) , 
11, -0.741944, 0, 0, 0.495105,-99) , 
10, 0.428547, 1, 0, 0.501273,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0190068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495284,-99) , 
12, -1.56658, 0, 0, 0.512947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483678,-99) , 
0, 0.502852, 1, 0, 0.509612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486618,-99) , 
2, -0.0733276, 0, 0, 0.503334,-99) , 
NN(
0, 
0, 
-1, 1.83747, 0, -1, 0.492027,-99) , 
11, 0.357876, 0, 0, 0.495506,-99) , 
3, 3.20659, 0, 0, 0.498685,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0171924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.544891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498463,-99) , 
6, -0.62771, 1, 0, 0.501999,-99) , 
5, 0.999524, 1, 0, 0.504909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48856,-99) , 
13, 2.59666, 0, 0, 0.505436,-99) , 
NN(
0, 
0, 
-1, 0.210719, 1, -1, 0.487249,-99) , 
0, 0.499995, 0, 0, 0.494132,-99) , 
4, 4.68521, 1, 0, 0.502721,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0155936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.2968, 0, 1, 0.510936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482184,-99) , 
12, 0.569653, 1, 0, 0.507319,-99) , 
NN(
NN(
0, 
0, 
-1, 1.87908, 1, 1, 0.515155,-99) , 
NN(
0, 
0, 
-1, -0.120808, 1, -1, 0.496149,-99) , 
10, 0.999999, 0, 0, 0.49957,-99) , 
8, 3.07935, 0, 0, 0.502072,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00821557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.18393, 1, 1, 0.52256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498839,-99) , 
10, 1.57143, 0, 0, 0.500133,-99) , 
6, 0.683663, 0, 0, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478585,-99) , 
4, 9.42372, 1, 0, 0.500515,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0232372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434106,-99) , 
9, -1.57141, 0, 0, 0.508535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458685,-99) , 
5, 0.999524, 0, 0, 0.500828,-99) , 
9, -951.286, 0, 0, 0.504165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483784,-99) , 
7, 0.0238087, 1, 0, 0.503399,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0260269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
6, 0.397325, 0, 0, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444765,-99) , 
9, -1.57147, 0, 0, 0.504823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483579,-99) , 
5, 0.999977, 0, 0, 0.499048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457501,-99) , 
5, 0.999524, 0, 0, 0.496689,-99) , 
9, -951.286, 0, 0, 0.50024,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0202923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86994, 0, 1, 0.527412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46706,-99) , 
11, -3.15912, 0, 0, 0.499874,-99) , 
10, -0.424947, 1, 0, 0.508024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493427,-99) , 
12, 5.70723, 1, 0, 0.509009,-99) , 
NN(
0, 
0, 
-1, 1.33131, 0, -1, 0.496673,-99) , 
11, 1.63802, 0, 0, 0.499288,-99) , 
8, 3.40109, 0, 0, 0.501442,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0110052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498229,-99) , 
5, 0.999909, 1, 0, 0.500777,-99) , 
4, 9.12253, 0, 0, 0.501993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476688,-99) , 
5, 0.999048, 0, 0, 0.501083,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0126164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496894,-99) , 
4, 1.87946, 1, 0, 0.531032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498563,-99) , 
5, 0.999955, 1, 0, 0.501481,-99) , 
5, 0.999524, 1, 0, 0.503372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476527,-99) , 
4, 9.41001, 1, 0, 0.502316,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.022943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.2741, 0, 1, 0.509082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477707,-99) , 
10, 0.144663, 1, 0, 0.496146,-99) , 
6, 0.306075, 1, 0, 0.50649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473048,-99) , 
5, 0.999048, 0, 0, 0.505301,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0125155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39853, 1, 1, 0.537225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493717,-99) , 
8, 1.45568, 0, 0, 0.501264,-99) , 
5, 0.999524, 1, 0, 0.503584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480554,-99) , 
4, 9.16847, 1, 0, 0.502596,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0122939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01871, 0, 1, 0.516504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471075,-99) , 
3, 1.25329, 0, 0, 0.502003,-99) , 
11, 2.67953, 0, 0, 0.503861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475904,-99) , 
5, 0.999048, 0, 0, 0.50285,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00854825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523536,-99) , 
NN(
0, 
0, 
-1, 3.91051, 1, -1, 0.498962,-99) , 
0, 0.505709, 0, 0, 0.499829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449738,-99) , 
11, -3.56883, 0, 0, 0.476489,-99) , 
11, -4.03157, 1, 0, 0.489989,-99) , 
12, -1.18601, 0, 0, 0.498539,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.018751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497047, 0, 1, 0.508619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452318,-99) , 
9, -1.57133, 0, 0, 0.504038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451915,-99) , 
10, -1.91155, 0, 0, 0.499793,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.463801,-99) , 
10, 1.57142, 1, 0, 0.496473,-99) , 
9, -951.286, 0, 0, 0.499765,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0122651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493733,-99) , 
4, 1.92744, 0, 0, 0.502979,-99) , 
10, -0.999424, 1, 0, 0.506382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497931,-99) , 
11, 0.153091, 0, 0, 0.499094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451399,-99) , 
12, 2.39533, 1, 0, 0.497254,-99) , 
11, 0.874947, 0, 0, 0.499092,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0213526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29141, 0, 1, 0.510267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442155,-99) , 
9, -1.57141, 0, 0, 0.504863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472927,-99) , 
10, 1.38091, 1, 0, 0.499318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457856,-99) , 
10, -1.85714, 0, 0, 0.497263,-99) , 
9, -951.286, 0, 0, 0.500574,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0103152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518978,-99) , 
NN(
0, 
0, 
-1, 0.992204, 0, -1, 0.495474,-99) , 
10, -1.85713, 1, 0, 0.496501,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0115919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495167,-99) , 
9, -951.286, 0, 0, 0.49919,-99) , 
7, 0.0238088, 0, 0, 0.499978,-99) , 
6, 0.777199, 0, 0, 0.500643,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00906582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4895,-99) , 
10, 1.28558, 1, 0, 0.498722,-99) , 
2, -0.214007, 1, 0, 0.499675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4873,-99) , 
9, -951.286, 1, 0, 0.499651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461967,-99) , 
10, -0.947456, 1, 0, 0.487196,-99) , 
12, -1.3261, 0, 0, 0.498313,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0136707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.30401, 0, 1, 0.530751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485173,-99) , 
3, 2.96092, 1, 0, 0.51541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524807,-99) , 
NN(
0, 
0, 
-1, 1.29182, 0, -1, 0.495846,-99) , 
8, 4.65873, 0, 0, 0.497205,-99) , 
10, 1.57142, 0, 0, 0.498742,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0253001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448101,-99) , 
9, -1.57135, 0, 0, 0.506182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490959,-99) , 
11, -3.35605, 1, 0, 0.494636,-99) , 
9, -951.286, 0, 0, 0.499649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477519,-99) , 
7, 0.0238087, 1, 0, 0.498814,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.013749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518705,-99) , 
NN(
NN(
0, 
0, 
-1, 1.66101, 0, 1, 0.516657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49186,-99) , 
9, -951.286, 1, 0, 0.498304,-99) , 
10, -1.57141, 1, 0, 0.499654,-99) , 
2, -0.214034, 1, 0, 0.500574,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0117486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48968,-99) , 
3, 2.93612, 1, 0, 0.49837,-99) , 
5, 0.999048, 1, 0, 0.49984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480801,-99) , 
4, 9.06123, 1, 0, 0.49897,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00964921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528217,-99) , 
NN(
NN(
0, 
0, 
-1, -2.12539, 0, 1, 0.514651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488467,-99) , 
12, -0.562738, 0, 0, 0.49788,-99) , 
10, -1.77553, 1, 0, 0.498765,-99) , 
10, 2.1428, 0, 0, 0.499691,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0116126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.520644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497309,-99) , 
4, 9.04385, 0, 0, 0.498277,-99) , 
10, -1.57145, 1, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.47781,-99) , 
5, 0.999524, 0, 0, 0.498552,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0121414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495934,-99) , 
11, 0.874947, 0, 0, 0.49819,-99) , 
5, 0.999048, 1, 0, 0.499325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479794,-99) , 
4, 9.52058, 1, 0, 0.498581,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0120978);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489024,-99) , 
12, 2.76162, 1, 0, 0.501382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474305,-99) , 
6, -0.890926, 1, 0, 0.489954,-99) , 
13, 1.2714, 0, 0, 0.499969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47819,-99) , 
12, -1.82828, 0, 0, 0.488332,-99) , 
12, -1.51635, 0, 0, 0.498979,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00837287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.69871, 0, 1, 0.501805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474465,-99) , 
10, -1.41299, 1, 0, 0.489677,-99) , 
12, -1.61899, 0, 0, 0.500923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483388,-99) , 
13, 3.05979, 1, 0, 0.496864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472243,-99) , 
6, -0.445931, 0, 0, 0.487206,-99) , 
0, 0.503805, 1, 0, 0.499716,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0141196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499582,-99) , 
11, -0.603162, 0, 0, 0.501901,-99) , 
NN(
0, 
0, 
-1, -0.00777921, 0, -1, 0.484051,-99) , 
12, 1.61647, 1, 0, 0.498505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480784,-99) , 
9, -951.286, 1, 0, 0.491643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455657,-99) , 
12, 3.04824, 0, 0, 0.484056,-99) , 
8, 1.46866, 0, 0, 0.49606,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00994807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497109,-99) , 
5, 0.999547, 1, 0, 0.497866,-99) , 
4, 9.42599, 0, 0, 0.49883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47475,-99) , 
5, 0.999048, 0, 0, 0.497963,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0162199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475595,-99) , 
12, 3.46281, 1, 0, 0.502255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474187,-99) , 
10, -0.147725, 0, 0, 0.490923,-99) , 
3, 1.23379, 0, 0, 0.500589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479617,-99) , 
12, -2.12184, 0, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452914,-99) , 
10, -0.815094, 1, 0, 0.48681,-99) , 
12, -1.28752, 0, 0, 0.499012,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0177895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471145,-99) , 
10, 1.9796, 1, 0, 0.497984,-99) , 
9, -951.286, 0, 0, 0.514202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492224,-99) , 
8, 1.48603, 0, 0, 0.501953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481073,-99) , 
12, 0.592228, 1, 0, 0.487688,-99) , 
10, 0.700667, 1, 0, 0.499081,-99) , 
10, 1.57142, 0, 0, 0.500351,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0145453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495252,-99) , 
4, 4.84444, 0, 0, 0.497312,-99) , 
5, 0.999048, 1, 0, 0.4987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473334,-99) , 
4, 9.13447, 1, 0, 0.497595,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00518556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
4, 9.05918, 0, 0, 0.50107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483792,-99) , 
5, 0.999683, 0, 0, 0.500183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48347,-99) , 
5, 0.999048, 0, 0, 0.499575,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0148904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.39973, 1, 1, 0.516831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480798,-99) , 
4, 1.91205, 0, 0, 0.49649,-99) , 
10, 0.714339, 0, 0, 0.50335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492156,-99) , 
8, 2.55641, 0, 0, 0.498002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47181,-99) , 
12, 1.72936, 1, 0, 0.496876,-99) , 
11, -0.173715, 0, 0, 0.498771,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0138075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486588,-99) , 
12, -1.04127, 0, 0, 0.500185,-99) , 
5, 0.999048, 1, 0, 0.50121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478086,-99) , 
2, -0.15266, 0, 0, 0.495836,-99) , 
NN(
0, 
0, 
-1, 2.34857, 0, -1, 0.469493,-99) , 
2, 0.07176, 1, 0, 0.488048,-99) , 
4, 4.68114, 1, 0, 0.498551,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00877316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.518833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491741,-99) , 
6, 0.768677, 1, 0, 0.512466,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497123,-99) , 
8, 4.10782, 0, 0, 0.498842,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0213846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46371,-99) , 
9, -1.57148, 0, 0, 0.506858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434958,-99) , 
10, -1.57142, 0, 0, 0.497166,-99) , 
9, -951.286, 0, 0, 0.501185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488486,-99) , 
12, -1.74077, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460719,-99) , 
10, -0.523065, 1, 0, 0.488573,-99) , 
11, -3.35418, 0, 0, 0.499243,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00829363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498864,-99) , 
9, -951.286, 0, 0, 0.508772,-99) , 
NN(
0, 
0, 
-1, 5.0116, 1, -1, 0.49755,-99) , 
10, -1.28572, 1, 0, 0.498887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469162,-99) , 
10, 2.14281, 1, 0, 0.498049,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00876513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.93437, 1, 1, 0.505913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478774,-99) , 
12, 1.43717, 1, 0, 0.498125,-99) , 
11, 0.0137345, 0, 0, 0.500236,-99) , 
NN(
0, 
0, 
-1, 0.373268, 0, -1, 0.485757,-99) , 
0, 0.492376, 0, 0, 0.498974,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0174128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480614,-99) , 
6, -0.256756, 1, 0, 0.499439,-99) , 
8, 3.30066, 0, 0, 0.505849,-99) , 
NN(
0, 
0, 
-1, -0.974029, 0, -1, 0.493121,-99) , 
10, -0.714277, 1, 0, 0.496304,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00749072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493526,-99) , 
0, 0.498092, 1, 0, 0.511315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476164,-99) , 
7, 0.0238087, 1, 0, 0.499151,-99) , 
NN(
0, 
0, 
-1, 0.60543, 1, -1, 0.489653,-99) , 
0, 0.5019, 1, 0, 0.497416,-99) , 
10, -1.57143, 1, 0, 0.498438,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00913241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496182,-99) , 
10, 0.148487, 1, 0, 0.51194,-99) , 
NN(
0, 
0, 
-1, 5.49526, 1, -1, 0.497672,-99) , 
8, 4.04608, 0, 0, 0.499344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478937,-99) , 
4, 9.52351, 1, 0, 0.498567,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00918555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214955, 1, 1, 0.503473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479454,-99) , 
4, 7.44181, 1, 0, 0.502597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484382,-99) , 
4, 9.16847, 1, 0, 0.501811,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00780433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481412,-99) , 
5, 0.999683, 0, 0, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466198,-99) , 
5, 0.999048, 0, 0, 0.499708,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0087786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497678,-99) , 
0, 0.493329, 1, 0, 0.499132,-99) , 
2, 0.2141, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478232,-99) , 
5, 0.999048, 0, 0, 0.49903,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.011834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493977,-99) , 
13, 0.950259, 0, 0, 0.508152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497057,-99) , 
11, 0.48236, 0, 0, 0.499104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472756,-99) , 
3, 1.19835, 0, 0, 0.498175,-99) , 
6, -0.812913, 1, 0, 0.499181,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0198405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478517,-99) , 
10, 1.69379, 1, 0, 0.500855,-99) , 
9, -951.286, 0, 0, 0.516776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497844,-99) , 
11, -3.13678, 0, 0, 0.508449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496495,-99) , 
7, 0.0237526, 0, 0, 0.498235,-99) , 
8, 3.12543, 0, 0, 0.501354,-99) , 
10, 1.28562, 0, 0, 0.50336,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0132459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.24938, 1, 1, 0.505676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458081,-99) , 
9, -1.57137, 0, 0, 0.498794,-99) , 
9, -951.286, 1, 0, 0.502698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488922,-99) , 
8, 1.81794, 0, 0, 0.497465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465432,-99) , 
13, 2.92212, 1, 0, 0.486976,-99) , 
0, 0.492376, 0, 0, 0.501316,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00968995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497335,-99) , 
0, 0.493329, 1, 0, 0.499,-99) , 
4, 9.42864, 0, 0, 0.499815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
5, 0.999048, 0, 0, 0.499139,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00896018);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.514733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519203,-99) , 
NN(
0, 
0, 
-1, 3.13314, 1, -1, 0.496981,-99) , 
0, 0.490471, 1, 0, 0.497873,-99) , 
10, -1.57143, 1, 0, 0.49911,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00963562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481156,-99) , 
2, -0.132985, 0, 0, 0.502032,-99) , 
2, -0.214594, 1, 0, 0.502697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484203,-99) , 
0, 0.490472, 0, 0, 0.501986,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.010679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490043, 0, 1, 0.531791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497816,-99) , 
0, 0.502852, 0, 0, 0.499264,-99) , 
5, 0.999524, 1, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485505,-99) , 
4, 9.1652, 1, 0, 0.500673,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0191619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.24447, 1, 1, 0.514778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488844,-99) , 
10, 0.428791, 1, 0, 0.498663,-99) , 
11, -1.18091, 0, 0, 0.502002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489557,-99) , 
6, -0.697984, 1, 0, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0.110853, 0, -1, 0.481973,-99) , 
9, -951.286, 0, 0, 0.49063,-99) , 
8, 1.78454, 0, 0, 0.498766,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0133193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492907,-99) , 
5, 0.999954, 0, 0, 0.510167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496848,-99) , 
11, 4.77341, 0, 0, 0.498184,-99) , 
2, -0.0707207, 1, 0, 0.500087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475578,-99) , 
5, 0.999048, 0, 0, 0.499212,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0167053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476958,-99) , 
10, 2.0476, 1, 0, 0.498905,-99) , 
9, -951.286, 0, 0, 0.514407,-99) , 
NN(
NN(
0, 
0, 
-1, 3.62265, 0, 1, 0.504641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489953,-99) , 
11, -1.26149, 0, 0, 0.497414,-99) , 
10, -0.170094, 1, 0, 0.500809,-99) , 
10, 1.57139, 0, 0, 0.501955,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.015436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47358,-99) , 
10, -0.267021, 1, 0, 0.502889,-99) , 
11, -3.01342, 0, 0, 0.514148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466507,-99) , 
5, 0.999751, 0, 0, 0.501929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476186,-99) , 
5, 0.999524, 0, 0, 0.50074,-99) , 
8, 4.10782, 0, 0, 0.502236,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0161486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.02268, 0, 1, 0.505489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489814,-99) , 
11, 1.59083, 0, 0, 0.495304,-99) , 
8, 2.40968, 0, 0, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470361,-99) , 
5, 0.999048, 0, 0, 0.499232,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0185756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495326,-99) , 
4, 1.64117, 1, 0, 0.500344,-99) , 
5, 0.999048, 1, 0, 0.502322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485657,-99) , 
8, 2.98158, 0, 0, 0.493351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464938,-99) , 
6, 0.489981, 1, 0, 0.489214,-99) , 
4, 4.68114, 1, 0, 0.49966,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0122556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496551,-99) , 
11, 1.77363, 0, 0, 0.497989,-99) , 
NN(
0, 
0, 
-1, -0.870632, 1, -1, 0.485317,-99) , 
12, 4.71736, 1, 0, 0.496706,-99) , 
10, 2.1428, 0, 0, 0.497598,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0163514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498552,-99) , 
11, -2.27722, 0, 0, 0.505151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488769,-99) , 
4, 2.37025, 0, 0, 0.496273,-99) , 
8, 2.14021, 0, 0, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474711,-99) , 
7, 0.0238087, 1, 0, 0.500618,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00611928);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.515865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479946,-99) , 
13, 4.66874, 1, 0, 0.499308,-99) , 
2, -0.214642, 1, 0, 0.50025,-99) , 
10, -1.57142, 1, 0, 0.501399,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00826255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101796, 0, 1, 0.502621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47641,-99) , 
7, 0.0237525, 1, 0, 0.501856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482295,-99) , 
12, 6.67874, 1, 0, 0.500643,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0104904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529831,-99) , 
NN(
0, 
0, 
-1, 1.53606, 0, -1, 0.49821,-99) , 
11, 1.39012, 0, 0, 0.499838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483063,-99) , 
6, -0.916018, 1, 0, 0.496237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470817,-99) , 
11, 4.54942, 0, 0, 0.488875,-99) , 
12, 3.90788, 1, 0, 0.498448,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0141684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464959,-99) , 
11, -2.79918, 0, 0, 0.491137,-99) , 
10, 0.148017, 1, 0, 0.510498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498887,-99) , 
11, 0.67238, 0, 0, 0.501636,-99) , 
NN(
0, 
0, 
-1, 5.22955, 0, -1, 0.489735,-99) , 
8, 1.3594, 0, 0, 0.499819,-99) , 
8, 4.10782, 0, 0, 0.501004,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.00771969);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498198,-99) , 
2, 0.2141, 0, 0, 0.498858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
5, 0.999048, 0, 0, 0.498218,-99) , 
10, -1.85713, 1, 0, 0.499353,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0103161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49486,-99) , 
6, -0.532077, 0, 0, 0.500658,-99) , 
4, 9.12253, 0, 0, 0.501644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481863,-99) , 
5, 0.999048, 0, 0, 0.500932,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0142151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483053,-99) , 
4, 6.77149, 1, 0, 0.502244,-99) , 
4, 9.42872, 0, 0, 0.504347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475057,-99) , 
6, 0.583465, 0, 0, 0.48992,-99) , 
5, 0.999524, 0, 0, 0.503425,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0132664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495409,-99) , 
10, -0.714294, 1, 0, 0.497496,-99) , 
4, 9.42864, 0, 0, 0.499122,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480119,-99) , 
5, 0.999524, 0, 0, 0.497912,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0137791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458207,-99) , 
12, 2.69612, 1, 0, 0.499312,-99) , 
11, 1.43959, 0, 0, 0.50108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473126,-99) , 
13, 0.965329, 0, 0, 0.492365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457852,-99) , 
11, 4.63883, 0, 0, 0.4825,-99) , 
12, 3.94896, 1, 0, 0.498773,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0129061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494415,-99) , 
4, 1.01484, 1, 0, 0.496242,-99) , 
5, 0.999048, 1, 0, 0.497455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480619,-99) , 
4, 9.50466, 1, 0, 0.496812,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00903936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490349,-99) , 
12, -1.09557, 0, 0, 0.500503,-99) , 
5, 0.999048, 1, 0, 0.501341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482428,-99) , 
4, 9.16847, 1, 0, 0.500535,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0117525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4889,-99) , 
6, 0.449195, 1, 0, 0.501689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473675,-99) , 
11, -4.20242, 1, 0, 0.485764,-99) , 
12, -1.31081, 0, 0, 0.50009,-99) , 
8, 4.67389, 0, 0, 0.500934,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0132102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499744,-99) , 
11, -4.06146, 1, 0, 0.501485,-99) , 
11, -0.708423, 0, 0, 0.503025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490379,-99) , 
7, 0.0136034, 0, 0, 0.493471,-99) , 
7, 0.0238088, 0, 0, 0.495369,-99) , 
8, 2.09442, 0, 0, 0.499992,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0208077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.251379, 0, 1, 0.524695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492194,-99) , 
0, 0.497138, 0, 0, 0.51214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46766,-99) , 
10, -1.77548, 0, 0, 0.502202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484023,-99) , 
9, -0.142902, 1, 0, 0.494107,-99) , 
9, -951.286, 1, 0, 0.49864,-99) , 
10, 1.28569, 0, 0, 0.500394,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0113225);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485249,-99) , 
11, 7.11657, 1, 0, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474826,-99) , 
7, 0.0238087, 1, 0, 0.50139,-99) , 
10, -1.85715, 1, 0, 0.502452,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0197509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493484,-99) , 
12, -0.32785, 0, 0, 0.513345,-99) , 
NN(
0, 
0, 
-1, 1.65613, 1, -1, 0.496576,-99) , 
2, -0.0713995, 1, 0, 0.499397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481049,-99) , 
11, 2.05076, 0, 0, 0.488668,-99) , 
7, 0.0238087, 0, 0, 0.491704,-99) , 
8, 2.14021, 0, 0, 0.496243,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0145011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484007,-99) , 
12, -1.68637, 0, 0, 0.498905,-99) , 
2, -0.214244, 1, 0, 0.500168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492535,-99) , 
12, 4.37752, 1, 0, 0.498828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465925,-99) , 
9, -951.286, 0, 0, 0.479976,-99) , 
11, 1.59066, 0, 0, 0.490119,-99) , 
12, 1.72938, 1, 0, 0.497157,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00979812);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49098,-99) , 
10, 1.28571, 1, 0, 0.499476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467883,-99) , 
11, -3.95947, 1, 0, 0.488477,-99) , 
12, -1.1656, 0, 0, 0.498087,-99) , 
8, 4.99485, 0, 0, 0.498668,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.01051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467691,-99) , 
12, 2.94718, 1, 0, 0.500204,-99) , 
11, 2.27305, 0, 0, 0.501288,-99) , 
NN(
0, 
0, 
-1, -0.914177, 1, -1, 0.48176,-99) , 
8, 1.1572, 0, 0, 0.499713,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0196222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483262,-99) , 
10, -1.85716, 1, 0, 0.502302,-99) , 
11, -1.10612, 0, 0, 0.510667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494535,-99) , 
5, 0.999524, 1, 0, 0.496163,-99) , 
NN(
0, 
0, 
-1, -0.0714407, 0, -1, 0.486276,-99) , 
4, 4.80413, 1, 0, 0.494244,-99) , 
10, -1.2857, 1, 0, 0.496177,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0180077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.522285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492765,-99) , 
4, 2.11294, 0, 0, 0.497638,-99) , 
5, 0.999524, 1, 0, 0.499267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485661,-99) , 
2, 0.00302487, 1, 0, 0.493863,-99) , 
NN(
0, 
0, 
-1, 0.0837447, 1, -1, 0.48002,-99) , 
2, -0.0717788, 0, 0, 0.489321,-99) , 
4, 4.75894, 1, 0, 0.497307,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00998804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497046,-99) , 
2, 0.216711, 0, 0, 0.497789,-99) , 
5, 0.999048, 1, 0, 0.498936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482595,-99) , 
4, 9.26255, 1, 0, 0.498256,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00911379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.51515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482247,-99) , 
10, 1.00013, 1, 0, 0.50933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
0, 0.500539, 1, 0, 0.498783,-99) , 
10, 2.14281, 0, 0, 0.499454,-99) , 
0, 0.5019, 0, 0, 0.501291,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0174463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490751,-99) , 
12, 2.53622, 1, 0, 0.523201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491958,-99) , 
3, 1.14358, 0, 0, 0.500567,-99) , 
8, 1.62625, 0, 0, 0.506496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496259,-99) , 
11, -1.31658, 0, 0, 0.499034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461961,-99) , 
8, 1.6842, 0, 0, 0.497626,-99) , 
11, -0.0698689, 0, 0, 0.500142,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0134601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498154,-99) , 
10, 0.528338, 1, 0, 0.51947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486415,-99) , 
11, -3.86909, 0, 0, 0.510077,-99) , 
NN(
NN(
0, 
0, 
-1, 3.92877, 1, 1, 0.508908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481526,-99) , 
8, 1.86059, 0, 0, 0.496929,-99) , 
11, 1.35885, 0, 0, 0.49927,-99) , 
8, 4.10824, 0, 0, 0.500463,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0160673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496251,-99) , 
10, -0.0117296, 1, 0, 0.506355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494293,-99) , 
11, 2.0843, 0, 0, 0.496864,-99) , 
8, 3.07881, 0, 0, 0.499557,-99) , 
NN(
0, 
0, 
-1, -2.09514, 0, -1, 0.483897,-99) , 
12, -1.61899, 0, 0, 0.498433,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00806914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.502603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45966,-99) , 
9, -951.286, 0, 0, 0.485161,-99) , 
5, 0.999524, 0, 0, 0.501487,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0106491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497847,-99) , 
4, 1.43244, 1, 0, 0.501069,-99) , 
2, -0.214347, 1, 0, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483235,-99) , 
4, 9.40614, 1, 0, 0.501441,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0218937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88801, 1, 1, 0.529946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494597,-99) , 
10, -0.428049, 1, 0, 0.500596,-99) , 
11, -1.00225, 0, 0, 0.503463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491696,-99) , 
12, 6.49861, 1, 0, 0.503385,-99) , 
NN(
0, 
0, 
-1, 1.37597, 0, -1, 0.487722,-99) , 
11, 3.0974, 0, 0, 0.49221,-99) , 
8, 2.11195, 0, 0, 0.498949,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0162731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51126, 0, 1, 0.524934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497875,-99) , 
0, 0.49809, 0, 0, 0.503629,-99) , 
11, 0.630865, 0, 0, 0.505717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0.723208, 0, -1, 0.480102,-99) , 
6, -0.874377, 1, 0, 0.489932,-99) , 
12, 3.72109, 1, 0, 0.50362,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0184782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491432,-99) , 
5, 0.999977, 0, 0, 0.514082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497546,-99) , 
5, 0.999977, 1, 0, 0.501731,-99) , 
4, 4.77875, 0, 0, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.468763,-99) , 
5, 0.999524, 0, 0, 0.50201,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00903918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486003,-99) , 
5, 0.999864, 0, 0, 0.500019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47716,-99) , 
5, 0.999048, 0, 0, 0.499304,-99) , 
3, 4.4367, 0, 0, 0.500232,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0107984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527606,-99) , 
NN(
0, 
0, 
-1, 6.77137, 1, -1, 0.497107,-99) , 
4, 9.42872, 0, 0, 0.498259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454257,-99) , 
9, -951.286, 0, 0, 0.483392,-99) , 
5, 0.999524, 0, 0, 0.497316,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.018047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.193714, 0, 1, 0.506914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45053,-99) , 
8, 1.52905, 0, 0, 0.504836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483884,-99) , 
6, -0.634259, 1, 0, 0.496649,-99) , 
NN(
0, 
0, 
-1, 0.499048, 0, -1, 0.475722,-99) , 
4, 4.10925, 1, 0, 0.491564,-99) , 
12, 2.18202, 1, 0, 0.501591,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00840837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.502552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476584,-99) , 
5, 0.999683, 0, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479331,-99) , 
5, 0.999048, 0, 0, 0.500473,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0157981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486951,-99) , 
10, 1.97958, 1, 0, 0.50003,-99) , 
9, -951.286, 0, 0, 0.51313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496845,-99) , 
11, -1.64153, 0, 0, 0.502083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479097,-99) , 
10, -0.388305, 0, 0, 0.491181,-99) , 
13, 1.41179, 0, 0, 0.500342,-99) , 
10, 1.57139, 0, 0, 0.501411,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0168853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497112,-99) , 
12, 0.208909, 1, 0, 0.518812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491624,-99) , 
10, -0.455701, 1, 0, 0.501392,-99) , 
11, -2.64136, 0, 0, 0.507804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 1.37605, 0, -1, 0.496741,-99) , 
7, 0.0237921, 0, 0, 0.497994,-99) , 
8, 2.79667, 0, 0, 0.501884,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0136744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214034, 1, 1, 0.505215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479342,-99) , 
4, 9.42206, 1, 0, 0.504145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510575,-99) , 
NN(
0, 
0, 
-1, 5.2588, 0, -1, 0.48827,-99) , 
8, 1.34456, 0, 0, 0.494214,-99) , 
8, 1.48509, 0, 0, 0.502393,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0108682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57138, 0, 1, 0.502484,-99) , 
NN(
0, 
0, 
-1, 4.68599, 1, -1, 0.486391,-99) , 
2, 0.0714447, 1, 0, 0.500198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503463,-99) , 
NN(
0, 
0, 
-1, 0.428527, 1, -1, 0.480095,-99) , 
11, -0.166323, 0, 0, 0.487658,-99) , 
0, 0.502852, 1, 0, 0.498565,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0127636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494462,-99) , 
10, -0.432159, 0, 0, 0.520375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491051,-99) , 
8, 2.26611, 0, 0, 0.499629,-99) , 
11, -0.425902, 0, 0, 0.501251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486696,-99) , 
9, -951.286, 1, 0, 0.495168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466766,-99) , 
6, -0.445498, 1, 0, 0.491453,-99) , 
12, 1.97841, 1, 0, 0.49863,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0132878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493892,-99) , 
11, -0.70694, 0, 0, 0.497331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486956,-99) , 
8, 1.13809, 0, 0, 0.496526,-99) , 
10, -1.85713, 1, 0, 0.497219,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00993942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52783,-99) , 
NN(
0, 
0, 
-1, 7.45816, 1, -1, 0.496762,-99) , 
4, 9.18404, 0, 0, 0.498071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476291,-99) , 
5, 0.999048, 0, 0, 0.497292,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0132977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486847,-99) , 
3, 2.94469, 1, 0, 0.503027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492438,-99) , 
2, -0.0227643, 1, 0, 0.495861,-99) , 
2, 0.0510853, 0, 0, 0.496962,-99) , 
2, 0.214332, 0, 0, 0.497886,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0079958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4806,-99) , 
4, 9.13602, 1, 0, 0.502312,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00902753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498664,-99) , 
4, 9.18769, 0, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481839,-99) , 
5, 0.999683, 0, 0, 0.499085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462732,-99) , 
5, 0.999048, 0, 0, 0.497821,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0131748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487991,-99) , 
4, 1.91154, 1, 0, 0.517949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496215,-99) , 
10, -1.57137, 1, 0, 0.497529,-99) , 
5, 0.999524, 1, 0, 0.498816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478887,-99) , 
4, 9.52058, 1, 0, 0.498069,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0127572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485786,-99) , 
5, 0.999683, 0, 0, 0.503965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479405,-99) , 
5, 0.999048, 0, 0, 0.503215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475338,-99) , 
12, -1.93505, 0, 0, 0.489912,-99) , 
12, -1.43229, 0, 0, 0.501955,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0111362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483041,-99) , 
12, -1.81895, 0, 0, 0.501751,-99) , 
6, 0.124257, 1, 0, 0.504811,-99) , 
NN(
0, 
0, 
-1, 0.999662, 0, -1, 0.496057,-99) , 
8, 3.12402, 0, 0, 0.498782,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0118068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498919,-99) , 
11, 0.955207, 0, 0, 0.500986,-99) , 
5, 0.999048, 1, 0, 0.502769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482678,-99) , 
6, 0.295268, 1, 0, 0.497474,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.475031,-99) , 
2, -0.0717836, 0, 0, 0.490214,-99) , 
4, 4.57421, 1, 0, 0.500112,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0139949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491635,-99) , 
12, -1.3261, 0, 0, 0.503971,-99) , 
NN(
0, 
0, 
-1, -0.455285, 0, -1, 0.490581,-99) , 
2, 0.0718317, 1, 0, 0.501963,-99) , 
8, 4.69023, 0, 0, 0.502967,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00704372);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499141,-99) , 
6, 0.684758, 0, 0, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481711,-99) , 
4, 9.41001, 1, 0, 0.499841,-99) , 
10, -1.85714, 1, 0, 0.500663,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.016668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495172,-99) , 
12, -0.903735, 0, 0, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480809,-99) , 
10, 1.85714, 1, 0, 0.502622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491746,-99) , 
3, 0.909476, 0, 0, 0.501457,-99) , 
NN(
0, 
0, 
-1, 1.35862, 0, -1, 0.471175,-99) , 
11, 3.46879, 0, 0, 0.490471,-99) , 
8, 1.4611, 0, 0, 0.500596,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0103319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492757,-99) , 
8, 1.64945, 0, 0, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.483608,-99) , 
6, 0.681044, 1, 0, 0.499126,-99) , 
2, 0.213815, 0, 0, 0.500122,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0126598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471923,-99) , 
12, 3.07428, 1, 0, 0.500131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46124,-99) , 
9, -951.286, 0, 0, 0.483871,-99) , 
3, 1.40901, 0, 0, 0.497949,-99) , 
11, 6.46108, 0, 0, 0.498902,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0197991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.509577, 1, 1, 0.509035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485979,-99) , 
12, -1.90168, 0, 0, 0.506283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488951,-99) , 
9, -951.286, 1, 0, 0.503158,-99) , 
NN(
0, 
0, 
-1, 1.48191, 0, -1, 0.490802,-99) , 
11, 1.75657, 0, 0, 0.493638,-99) , 
8, 3.07973, 0, 0, 0.497726,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.012572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499697,-99) , 
12, 2.43254, 1, 0, 0.512509,-99) , 
NN(
0, 
0, 
-1, 1.65249, 0, -1, 0.496515,-99) , 
11, 0.15836, 0, 0, 0.49894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.499316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443526,-99) , 
3, 1.08812, 0, 0, 0.479151,-99) , 
6, -0.873077, 1, 0, 0.489023,-99) , 
3, 1.23342, 0, 0, 0.497657,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0153133);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496262,-99) , 
8, 1.57752, 0, 0, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0.530532, 1, -1, 0.493145,-99) , 
6, 0.216341, 1, 0, 0.501657,-99) , 
2, -0.214238, 1, 0, 0.502837,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0101945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91416, 1, 1, 0.520313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499241,-99) , 
9, -951.286, 0, 0, 0.501857,-99) , 
8, 4.35311, 0, 0, 0.503026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460355,-99) , 
10, -1.26618, 1, 0, 0.48733,-99) , 
12, -1.58843, 0, 0, 0.501849,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.01677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489788,-99) , 
4, 3.73802, 1, 0, 0.502085,-99) , 
3, 3.65324, 0, 0, 0.505031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494774,-99) , 
10, 0.714317, 0, 0, 0.503948,-99) , 
NN(
0, 
0, 
-1, 1.9939, 0, -1, 0.493738,-99) , 
11, -0.444164, 0, 0, 0.497051,-99) , 
0, 0.496186, 1, 0, 0.499537,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00713756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714257, 0, 1, 0.50264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484666,-99) , 
0, 0.490199, 0, 0, 0.502027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481777,-99) , 
0, 0.505709, 1, 0, 0.501363,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00919731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136841, 1, 1, 0.515648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483825,-99) , 
4, 6.16104, 1, 0, 0.499845,-99) , 
6, 0.590917, 0, 0, 0.50131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476535,-99) , 
4, 9.18112, 1, 0, 0.50026,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0140189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.8272, 0, 1, 0.517196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497577,-99) , 
11, -4.00771, 1, 0, 0.499543,-99) , 
11, -0.583007, 0, 0, 0.501549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490585,-99) , 
0, 0.498091, 1, 0, 0.497391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465892,-99) , 
13, 1.79861, 1, 0, 0.492084,-99) , 
12, 2.08709, 1, 0, 0.499133,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0134574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499738,-99) , 
10, 0.605452, 1, 0, 0.50833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491827,-99) , 
8, 3.61156, 0, 0, 0.496355,-99) , 
10, -0.142847, 0, 0, 0.503133,-99) , 
NN(
NN(
0, 
0, 
-1, 0.153026, 1, -1, 0.497262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472664,-99) , 
9, -951.286, 0, 0, 0.486431,-99) , 
2, -0.0714407, 0, 0, 0.495575,-99) , 
0, 0.499043, 0, 0, 0.498746,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00959051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498124,-99) , 
10, -1.00002, 1, 0, 0.499978,-99) , 
5, 0.999048, 1, 0, 0.501133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478519,-99) , 
4, 9.42206, 1, 0, 0.500257,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0119047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142878, 1, 1, 0.503704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484572,-99) , 
0, 0.505709, 1, 0, 0.503067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485281,-99) , 
9, -951.286, 1, 0, 0.50029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468393,-99) , 
10, -0.963474, 1, 0, 0.489552,-99) , 
12, -1.3261, 0, 0, 0.501598,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0157118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490017,-99) , 
10, -0.432133, 0, 0, 0.522159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485529,-99) , 
8, 2.02936, 0, 0, 0.49909,-99) , 
11, -0.379756, 0, 0, 0.501053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
6, -0.908412, 1, 0, 0.502325,-99) , 
NN(
0, 
0, 
-1, 0.582215, 0, -1, 0.47557,-99) , 
11, 2.42719, 0, 0, 0.489477,-99) , 
12, 2.08702, 1, 0, 0.498121,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0194849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493716,-99) , 
8, 1.38769, 0, 0, 0.505437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478112,-99) , 
12, -0.660297, 0, 0, 0.487147,-99) , 
12, -0.343894, 0, 0, 0.502981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494985,-99) , 
11, -2.13993, 0, 0, 0.498645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461178,-99) , 
12, 0.956164, 1, 0, 0.495665,-99) , 
3, 2.69999, 1, 0, 0.500384,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0121663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485597,-99) , 
5, 0.999955, 0, 0, 0.513241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49894,-99) , 
2, 0.2141, 0, 0, 0.500008,-99) , 
10, -0.999975, 1, 0, 0.502332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469486,-99) , 
5, 0.999048, 0, 0, 0.501172,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0147272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.5635, 1, 1, 0.51594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483269,-99) , 
2, -0.0719194, 0, 0, 0.510686,-99) , 
NN(
NN(
0, 
0, 
-1, -0.568655, 0, 1, 0.502172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470662,-99) , 
9, -951.286, 0, 0, 0.482482,-99) , 
12, 1.61612, 1, 0, 0.499345,-99) , 
11, 0.874947, 0, 0, 0.501632,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0140049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492136,-99) , 
5, 0.999955, 0, 0, 0.503521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495375,-99) , 
2, 0.0684737, 0, 0, 0.497284,-99) , 
0, 0.498091, 1, 0, 0.50032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463053,-99) , 
9, -951.286, 0, 0, 0.481976,-99) , 
5, 0.999524, 0, 0, 0.499159,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.013952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493933,-99) , 
10, 0.456366, 1, 0, 0.516175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495624,-99) , 
11, 6.60273, 0, 0, 0.49669,-99) , 
10, 1.85714, 0, 0, 0.498018,-99) , 
8, 4.33106, 0, 0, 0.499487,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0108375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49419,-99) , 
10, 2.18365, 1, 0, 0.519146,-99) , 
NN(
NN(
0, 
0, 
-1, -2.33927, 0, 1, 0.509689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487533,-99) , 
6, 0.013787, 1, 0, 0.498706,-99) , 
8, 3.37084, 0, 0, 0.501458,-99) , 
10, 1.8571, 0, 0, 0.502387,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00920082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499321,-99) , 
4, 4.68556, 0, 0, 0.504652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488942,-99) , 
5, 0.999955, 0, 0, 0.499015,-99) , 
6, 0.123, 0, 0, 0.500666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473564,-99) , 
5, 0.999048, 0, 0, 0.499711,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0144353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142948, 0, 1, 0.522694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488073,-99) , 
11, 4.30826, 0, 0, 0.501845,-99) , 
12, 3.52482, 1, 0, 0.507952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498229,-99) , 
10, 1.57131, 0, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0.185621, 0, -1, 0.470594,-99) , 
12, 1.99264, 1, 0, 0.497538,-99) , 
11, 0.874947, 0, 0, 0.49965,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0111116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474604,-99) , 
7, 0.0237526, 1, 0, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484252,-99) , 
3, 0.988993, 0, 0, 0.501219,-99) , 
10, -1.85714, 1, 0, 0.502298,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0191674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487137,-99) , 
12, 1.30132, 1, 0, 0.501189,-99) , 
11, 1.23752, 0, 0, 0.502704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48998,-99) , 
13, 0.933134, 0, 0, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464704,-99) , 
11, 4.37365, 0, 0, 0.492178,-99) , 
12, 3.77212, 1, 0, 0.501321,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0147056);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.516764,-99) , 
NN(
NN(
0, 
0, 
-1, -0.681731, 1, 1, 0.50799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490878,-99) , 
6, -0.559168, 1, 0, 0.494632,-99) , 
8, 3.78057, 0, 0, 0.496859,-99) , 
10, 1.8571, 0, 0, 0.497902,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0066895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486177,-99) , 
13, 4.35907, 1, 0, 0.499751,-99) , 
5, 0.999048, 1, 0, 0.500794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477861,-99) , 
4, 9.42498, 1, 0, 0.499907,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0124733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496805,-99) , 
2, 0.0290871, 0, 0, 0.499684,-99) , 
2, -0.215326, 1, 0, 0.500537,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478012,-99) , 
5, 0.999524, 0, 0, 0.499129,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0121807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496398,-99) , 
0, 0.5019, 0, 0, 0.500061,-99) , 
6, 0.491645, 0, 0, 0.503425,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.495815,-99) , 
10, -0.142852, 1, 0, 0.499168,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.012984);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496732,-99) , 
2, 0.0273017, 0, 0, 0.499868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459411,-99) , 
2, -0.275796, 0, 0, 0.498709,-99) , 
2, 0.213822, 0, 0, 0.499616,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0131708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.665705, 1, 1, 0.505006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476839,-99) , 
12, -2.0944, 0, 0, 0.503189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495557,-99) , 
10, -1.57142, 1, 0, 0.497323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470618,-99) , 
6, -0.210025, 1, 0, 0.495533,-99) , 
8, 2.46814, 0, 0, 0.499265,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0128849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490132,-99) , 
8, 1.34555, 0, 0, 0.500849,-99) , 
10, 2.14281, 0, 0, 0.501916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48759,-99) , 
12, -0.936017, 0, 0, 0.498539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459283,-99) , 
12, -0.0100595, 1, 0, 0.489699,-99) , 
3, 3.69857, 1, 0, 0.500512,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.014153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499512,-99) , 
13, 0.935593, 0, 0, 0.512472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496105,-99) , 
11, 0.314474, 0, 0, 0.498629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472814,-99) , 
12, 3.44901, 1, 0, 0.497669,-99) , 
11, 3.12661, 0, 0, 0.499377,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0137104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.29081, 1, 1, 0.506917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488524,-99) , 
6, -0.429076, 1, 0, 0.49791,-99) , 
8, 2.40968, 0, 0, 0.501989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481848,-99) , 
9, -951.286, 1, 0, 0.497967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469208,-99) , 
10, -0.977376, 1, 0, 0.488236,-99) , 
12, -1.3596, 0, 0, 0.500555,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00965854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497656,-99) , 
5, 0.999819, 1, 0, 0.499199,-99) , 
4, 9.42498, 0, 0, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478693,-99) , 
5, 0.999048, 0, 0, 0.499345,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.013839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.655389, 0, 1, 0.504488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483162,-99) , 
11, 1.54523, 0, 0, 0.495821,-99) , 
12, 1.71362, 1, 0, 0.501842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483085,-99) , 
4, 9.52351, 1, 0, 0.501137,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00827203);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528548,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465919,-99) , 
5, 0.999048, 0, 0, 0.501452,-99) , 
6, 0.777728, 0, 0, 0.502207,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0138022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96226, 0, 1, 0.518574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486103,-99) , 
6, 0.717364, 1, 0, 0.507353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488353,-99) , 
10, -0.714271, 0, 0, 0.497969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46341,-99) , 
11, -3.89723, 1, 0, 0.483246,-99) , 
12, -0.969697, 0, 0, 0.496012,-99) , 
8, 4.10782, 0, 0, 0.497275,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0109914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49718,-99) , 
10, 1.85707, 0, 0, 0.498051,-99) , 
5, 0.999048, 1, 0, 0.499708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478315,-99) , 
4, 9.50853, 1, 0, 0.498904,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0103217);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495629,-99) , 
8, 1.93888, 0, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0.165654, 1, -1, 0.483911,-99) , 
6, 0.684497, 1, 0, 0.499994,-99) , 
2, 0.21406, 0, 0, 0.500622,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0148594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499059,-99) , 
12, 2.94628, 1, 0, 0.507664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49553,-99) , 
4, 4.77875, 0, 0, 0.498668,-99) , 
11, -0.0698689, 0, 0, 0.501293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472741,-99) , 
5, 0.999048, 0, 0, 0.500276,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0152546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.520362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484842,-99) , 
12, -1.89267, 0, 0, 0.504392,-99) , 
NN(
0, 
0, 
-1, 4.68114, 1, -1, 0.4934,-99) , 
10, 0.00675511, 1, 0, 0.499174,-99) , 
10, 1.85706, 0, 0, 0.500293,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0123386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475888,-99) , 
2, -0.0714577, 0, 0, 0.494368,-99) , 
4, 4.63603, 1, 0, 0.502373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476823,-99) , 
0, 0.490472, 0, 0, 0.501409,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.013609);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.41914, 0, 1, 0.51592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49822,-99) , 
2, 0.0575938, 0, 0, 0.500023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48577,-99) , 
0, 0.500948, 0, 0, 0.492292,-99) , 
4, 3.26145, 1, 0, 0.49743,-99) , 
6, 0.684759, 0, 0, 0.498534,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0073637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49971,-99) , 
3, 0.880104, 0, 0, 0.510079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461144,-99) , 
3, 1.2672, 0, 0, 0.498926,-99) , 
11, 2.50867, 0, 0, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468185,-99) , 
5, 0.999048, 0, 0, 0.499274,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00972437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49854,-99) , 
5, 0.999048, 1, 0, 0.499843,-99) , 
NN(
0, 
0, 
-1, -0.348088, 0, -1, 0.489462,-99) , 
4, 4.68521, 1, 0, 0.497723,-99) , 
10, -1.85712, 1, 0, 0.498607,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0250893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496594,-99) , 
6, 0.211981, 0, 0, 0.509238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464188,-99) , 
9, -1.57154, 0, 0, 0.505634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487847,-99) , 
12, 0.245909, 0, 0, 0.497903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452509,-99) , 
10, 1.8571, 1, 0, 0.495273,-99) , 
9, -951.286, 0, 0, 0.499801,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0120027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481362,-99) , 
4, 5.88556, 1, 0, 0.500272,-99) , 
4, 9.42864, 0, 0, 0.501494,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.47925,-99) , 
5, 0.999524, 0, 0, 0.500094,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0146043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495494,-99) , 
10, 0.155529, 1, 0, 0.514365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49264,-99) , 
11, 0.315408, 0, 0, 0.494634,-99) , 
10, 2.14281, 0, 0, 0.495851,-99) , 
8, 4.43614, 0, 0, 0.49714,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0131063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486119,-99) , 
9, -951.286, 1, 0, 0.502069,-99) , 
3, 3.92757, 1, 0, 0.51223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496091,-99) , 
3, 1.70308, 1, 0, 0.510714,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.496238,-99) , 
10, -1.57143, 1, 0, 0.497346,-99) , 
8, 4.1092, 0, 0, 0.499008,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0142817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15417, 0, 1, 0.505678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466532,-99) , 
6, 0.229585, 1, 0, 0.485714,-99) , 
10, 1.57171, 1, 0, 0.503725,-99) , 
NN(
NN(
0, 
0, 
-1, 1.23314, 1, 1, 0.505564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486718,-99) , 
6, -0.761345, 1, 0, 0.491027,-99) , 
0, 0.499996, 0, 0, 0.49604,-99) , 
8, 2.14088, 0, 0, 0.500557,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0127192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.408217, 0, 1, 0.503132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472121,-99) , 
11, 1.23514, 0, 0, 0.485134,-99) , 
12, 2.39143, 1, 0, 0.501494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487363,-99) , 
4, 1.73881, 0, 0, 0.496716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45155,-99) , 
12, 2.91645, 0, 0, 0.487918,-99) , 
8, 1.46738, 0, 0, 0.499199,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0089933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501999,-99) , 
NN(
0, 
0, 
-1, 0.0714475, 1, -1, 0.490605,-99) , 
4, 4.57421, 1, 0, 0.499608,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.482272,-99) , 
13, 4.46206, 1, 0, 0.498453,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00937433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537086,-99) , 
NN(
0, 
0, 
-1, 7.66586, 1, -1, 0.499087,-99) , 
4, 9.44541, 0, 0, 0.500432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493576,-99) , 
2, -0.0712315, 1, 0, 0.498918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445869,-99) , 
12, 0.285856, 1, 0, 0.490642,-99) , 
6, 0.400874, 1, 0, 0.498719,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.012839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48586,-99) , 
6, 0.12307, 1, 0, 0.511751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497938,-99) , 
8, 4.6399, 0, 0, 0.499185,-99) , 
10, 1.57138, 0, 0, 0.500248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508479,-99) , 
NN(
0, 
0, 
-1, 3.15246, 1, -1, 0.477128,-99) , 
3, 1.69608, 1, 0, 0.487889,-99) , 
0, 0.502852, 1, 0, 0.498659,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0118182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18896, 0, 1, 0.502861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457115,-99) , 
9, -951.286, 0, 0, 0.48482,-99) , 
5, 0.999841, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 3.87737, 1, -1, 0.477253,-99) , 
5, 0.999524, 0, 0, 0.500005,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0101984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40693, 1, 1, 0.529956,-99) , 
NN(
0, 
0, 
-1, 0.403053, 1, -1, 0.497437,-99) , 
5, 0.999524, 1, 0, 0.499545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478194,-99) , 
4, 9.12253, 1, 0, 0.498616,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0220704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494881,-99) , 
11, -0.820655, 0, 0, 0.503664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490335,-99) , 
11, -2.92226, 1, 0, 0.494708,-99) , 
9, -951.286, 0, 0, 0.498556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474376,-99) , 
13, 4.7983, 1, 0, 0.497629,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00837438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.503629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480491,-99) , 
5, 0.999048, 0, 0, 0.502815,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0245166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85712, 1, 1, 0.505756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476684,-99) , 
11, 6.56174, 0, 0, 0.493384,-99) , 
3, 1.26647, 0, 0, 0.503625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424874,-99) , 
9, -0.714459, 0, 0, 0.498735,-99) , 
NN(
0, 
0, 
-1, -2.95871, 1, -1, 0.476166,-99) , 
9, -951.286, 0, 0, 0.488571,-99) , 
6, 0.403966, 1, 0, 0.501005,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00944676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85713, 1, 1, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.492232,-99) , 
0, 0.495234, 0, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47051,-99) , 
5, 0.999048, 0, 0, 0.499269,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0166228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54503, 0, 1, 0.504214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486267,-99) , 
9, -951.286, 0, 0, 0.495362,-99) , 
3, 1.716, 0, 0, 0.501508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480669,-99) , 
2, -0.071401, 1, 0, 0.485048,-99) , 
10, -0.999984, 1, 0, 0.490735,-99) , 
0, 0.5019, 1, 0, 0.49952,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0148412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492585,-99) , 
0, 0.497137, 0, 0, 0.516087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494637,-99) , 
0, 0.490472, 1, 0, 0.495462,-99) , 
5, 0.999524, 1, 0, 0.49676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478334,-99) , 
4, 9.52058, 1, 0, 0.496064,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0129149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.08455, 1, 1, 0.515212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477752,-99) , 
8, 1.53113, 0, 0, 0.500667,-99) , 
11, 2.72239, 0, 0, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472695,-99) , 
5, 0.999048, 0, 0, 0.501492,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0143729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491166,-99) , 
6, -0.25148, 1, 0, 0.496881,-99) , 
4, 9.4289, 0, 0, 0.49781,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.475775,-99) , 
5, 0.999524, 0, 0, 0.496441,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0152412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486815,-99) , 
10, 0.718767, 1, 0, 0.513187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485394,-99) , 
12, -1.04797, 0, 0, 0.497877,-99) , 
8, 4.25143, 0, 0, 0.499816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511826,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.487453,-99) , 
12, 8.45398, 0, 0, 0.490889,-99) , 
12, 1.77906, 1, 0, 0.497192,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0114385);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494486,-99) , 
2, -0.0034284, 1, 0, 0.499188,-99) , 
NN(
0, 
0, 
-1, -0.625362, 0, -1, 0.49001,-99) , 
2, 0.0713993, 1, 0, 0.497824,-99) , 
0, 0.505709, 0, 0, 0.498674,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00926588);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488069,-99) , 
8, 1.34961, 0, 0, 0.499244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47428,-99) , 
13, 4.35907, 1, 0, 0.497974,-99) , 
8, 4.95552, 0, 0, 0.49893,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0110395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497634,-99) , 
10, 1.57138, 0, 0, 0.499332,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487226,-99) , 
2, 0.0715678, 1, 0, 0.497506,-99) , 
8, 4.76419, 0, 0, 0.49828,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0138862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498077,-99) , 
10, -0.714324, 1, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0.142876, 0, -1, 0.493893,-99) , 
0, 0.499043, 1, 0, 0.49842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484109,-99) , 
9, -951.286, 0, 0, 0.492942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458347,-99) , 
2, -0.275459, 0, 0, 0.487208,-99) , 
2, -0.0713947, 0, 0, 0.496567,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0223459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492068,-99) , 
12, 2.67253, 1, 0, 0.517736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49008,-99) , 
11, 2.81456, 0, 0, 0.501637,-99) , 
8, 1.62625, 0, 0, 0.506096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486646,-99) , 
9, -951.286, 1, 0, 0.510781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487314,-99) , 
11, -2.11174, 0, 0, 0.494314,-99) , 
11, -3.58293, 1, 0, 0.497068,-99) , 
11, -0.150129, 0, 0, 0.499687,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0150897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496256,-99) , 
12, 3.57377, 1, 0, 0.503871,-99) , 
NN(
0, 
0, 
-1, 1.85352, 1, -1, 0.490528,-99) , 
11, 0.53414, 0, 0, 0.496315,-99) , 
12, 0.464511, 1, 0, 0.500954,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00883933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491038,-99) , 
9, -951.286, 1, 0, 0.50219,-99) , 
10, -0.138469, 1, 0, 0.51222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
10, -1.85713, 1, 0, 0.499647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476939,-99) , 
2, -0.213811, 0, 0, 0.498698,-99) , 
3, 3.66696, 0, 0, 0.500349,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0122652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486609,-99) , 
12, 0.229219, 1, 0, 0.504983,-99) , 
NN(
0, 
0, 
-1, -0.524324, 0, -1, 0.496081,-99) , 
3, 2.93175, 0, 0, 0.498685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473625,-99) , 
10, 2.14285, 1, 0, 0.497976,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0129926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.70482, 0, 1, 0.509401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497861,-99) , 
5, 0.999524, 1, 0, 0.500176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465861,-99) , 
4, 9.52584, 1, 0, 0.498758,-99) , 
11, -0.0769123, 0, 0, 0.50177,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0131124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493239,-99) , 
12, 2.70959, 1, 0, 0.511026,-99) , 
NN(
0, 
0, 
-1, 1.69758, 1, -1, 0.497634,-99) , 
11, 0.39071, 0, 0, 0.499418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485508,-99) , 
0, 0.499995, 0, 0, 0.495359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459768,-99) , 
6, -0.79386, 1, 0, 0.487677,-99) , 
13, 1.31032, 0, 0, 0.497977,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0178303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474147,-99) , 
4, 9.53633, 1, 0, 0.506761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489709,-99) , 
9, -951.286, 0, 0, 0.49504,-99) , 
7, 0.0237559, 0, 0, 0.496858,-99) , 
3, 1.9667, 0, 0, 0.50276,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.013252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.346762, 1, 1, 0.506517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496204,-99) , 
10, 1.57139, 0, 0, 0.498323,-99) , 
13, 2.62969, 0, 0, 0.501472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477333,-99) , 
11, -4.16933, 1, 0, 0.489023,-99) , 
12, -1.3596, 0, 0, 0.500158,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00802467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.64069, 1, 1, 0.525724,-99) , 
NN(
0, 
0, 
-1, 7.26624, 1, -1, 0.498157,-99) , 
6, 0.683663, 0, 0, 0.499703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474701,-99) , 
4, 9.50466, 1, 0, 0.498764,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0147722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487309,-99) , 
2, -0.0666868, 0, 0, 0.503386,-99) , 
6, -0.541669, 0, 0, 0.507878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494203,-99) , 
12, 0.644528, 1, 0, 0.501875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475938,-99) , 
0, 0.490471, 0, 0, 0.500961,-99) , 
11, -0.0698689, 0, 0, 0.502911,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00681044);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485117,-99) , 
2, -0.214532, 0, 0, 0.500588,-99) , 
8, 4.76403, 0, 0, 0.501272,-99) , 
10, 2.14281, 0, 0, 0.502198,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0127423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36735, 1, 1, 0.503044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477552,-99) , 
10, -0.347057, 0, 0, 0.492798,-99) , 
0, 0.494281, 0, 0, 0.501291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509689,-99) , 
NN(
0, 
0, 
-1, 1.93874, 1, -1, 0.473771,-99) , 
9, -951.286, 0, 0, 0.487461,-99) , 
10, 1.28568, 1, 0, 0.499553,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0194153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.62924, 1, 1, 0.519347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481792,-99) , 
6, -0.810292, 1, 0, 0.501002,-99) , 
8, 1.34166, 0, 0, 0.510988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492861,-99) , 
11, -2.25156, 0, 0, 0.498439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466963,-99) , 
8, 1.67321, 0, 0, 0.497323,-99) , 
11, -0.0698689, 0, 0, 0.501174,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0124972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495992,-99) , 
2, 0.0166917, 0, 0, 0.498774,-99) , 
4, 9.42864, 0, 0, 0.499746,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.477897,-99) , 
5, 0.999524, 0, 0, 0.498372,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0104585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48089,-99) , 
12, -1.86515, 0, 0, 0.501969,-99) , 
3, 3.64181, 0, 0, 0.504181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486954,-99) , 
12, 3.07649, 1, 0, 0.497182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476596,-99) , 
3, 4.1541, 1, 0, 0.496015,-99) , 
10, -0.14285, 1, 0, 0.499629,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00859406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.64441, 0, 1, 0.502523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473668,-99) , 
7, 0.0238062, 1, 0, 0.501733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467889,-99) , 
6, -0.915155, 1, 0, 0.486037,-99) , 
8, 1.14333, 0, 0, 0.50051,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0114857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495385,-99) , 
0, 0.494282, 1, 0, 0.499956,-99) , 
6, -0.541275, 0, 0, 0.504806,-99) , 
NN(
0, 
0, 
-1, 9.42754, 1, -1, 0.496245,-99) , 
11, 0.0184867, 0, 0, 0.49857,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0117566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40722, 1, 1, 0.527201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496745,-99) , 
0, 0.490472, 1, 0, 0.497499,-99) , 
5, 0.999524, 1, 0, 0.499417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481177,-99) , 
4, 9.13053, 1, 0, 0.498625,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0138809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.196135, 0, 1, 0.511147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477639,-99) , 
12, -2.10765, 0, 0, 0.507022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483435,-99) , 
10, 1.76185, 1, 0, 0.500046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447851,-99) , 
12, -1.1973, 0, 0, 0.47885,-99) , 
12, -0.88411, 0, 0, 0.498046,-99) , 
10, -0.7143, 1, 0, 0.500283,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00916653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482973,-99) , 
5, 0.999864, 0, 0, 0.499513,-99) , 
5, 0.999048, 1, 0, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475141,-99) , 
13, 4.7978, 1, 0, 0.499267,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0157776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493211,-99) , 
6, -0.25148, 1, 0, 0.499373,-99) , 
5, 0.999048, 1, 0, 0.500909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476964,-99) , 
6, 0.303993, 1, 0, 0.495693,-99) , 
NN(
0, 
0, 
-1, -0.256757, 0, -1, 0.480476,-99) , 
2, 0.0710108, 1, 0, 0.491152,-99) , 
4, 4.65279, 1, 0, 0.49891,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0127186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496709,-99) , 
10, -0.714326, 1, 0, 0.500014,-99) , 
0, 0.505709, 0, 0, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474975,-99) , 
5, 0.999048, 0, 0, 0.499993,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00959671);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491916,-99) , 
2, -0.0714407, 0, 0, 0.499456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468986,-99) , 
0, 0.504439, 0, 0, 0.490116,-99) , 
0, 0.502852, 1, 0, 0.498228,-99) , 
3, 4.41098, 0, 0, 0.498966,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0126375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499722,-99) , 
12, 2.18808, 1, 0, 0.512322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475299,-99) , 
10, -1.00411, 0, 0, 0.495546,-99) , 
8, 1.34166, 0, 0, 0.504894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477672,-99) , 
12, 1.35453, 1, 0, 0.499108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478278,-99) , 
6, -0.524956, 1, 0, 0.486689,-99) , 
8, 2.26191, 0, 0, 0.496146,-99) , 
11, -0.150129, 0, 0, 0.49868,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0111913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495745,-99) , 
9, -951.286, 1, 0, 0.500647,-99) , 
NN(
0, 
0, 
-1, 1.69415, 0, -1, 0.489488,-99) , 
10, -1.5306, 0, 0, 0.499767,-99) , 
10, 2.14285, 0, 0, 0.500614,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0127505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49263,-99) , 
10, -1.97961, 0, 0, 0.51136,-99) , 
NN(
0, 
0, 
-1, 4.43807, 1, -1, 0.496436,-99) , 
10, -1.57143, 1, 0, 0.497514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.477062,-99) , 
13, 1.89131, 1, 0, 0.485861,-99) , 
2, 0.0714036, 1, 0, 0.495728,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00740628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.65036, 0, 1, 0.501697,-99) , 
NN(
0, 
0, 
-1, -0.442641, 0, -1, 0.4898,-99) , 
2, 0.0712316, 1, 0, 0.499884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477887,-99) , 
7, 0.0238062, 1, 0, 0.499067,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00972676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497457,-99) , 
8, 4.04566, 0, 0, 0.498702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462853,-99) , 
5, 0.999048, 0, 0, 0.497726,-99) , 
2, -0.214281, 1, 0, 0.498733,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00773596);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.517244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498754,-99) , 
11, -0.0769123, 0, 0, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477979,-99) , 
0, 0.490471, 0, 0, 0.499729,-99) , 
10, 1.85709, 0, 0, 0.500644,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00901503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.502495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479152,-99) , 
5, 0.999773, 0, 0, 0.50146,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477534,-99) , 
5, 0.999524, 0, 0, 0.499962,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0119558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49365,-99) , 
12, 1.11593, 0, 0, 0.502639,-99) , 
6, 0.494398, 0, 0, 0.509081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475081,-99) , 
13, 4.72212, 1, 0, 0.499852,-99) , 
NN(
0, 
0, 
-1, -0.714813, 0, -1, 0.491688,-99) , 
13, 1.72372, 0, 0, 0.497676,-99) , 
2, -0.0715932, 1, 0, 0.499596,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0117755);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494985,-99) , 
3, 1.299, 0, 0, 0.504004,-99) , 
NN(
0, 
0, 
-1, 1.92275, 1, -1, 0.496027,-99) , 
11, 0.164198, 0, 0, 0.498145,-99) , 
8, 4.99455, 0, 0, 0.498736,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0114088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499067,-99) , 
6, -0.657718, 0, 0, 0.514806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497716,-99) , 
3, 2.68866, 1, 0, 0.509071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509713,-99) , 
NN(
0, 
0, 
-1, -1.94498, 0, -1, 0.495332,-99) , 
12, 7.41953, 0, 0, 0.496075,-99) , 
0, 0.493329, 1, 0, 0.497733,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0147938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214239, 0, 1, 0.50524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482986,-99) , 
9, -951.286, 0, 0, 0.49326,-99) , 
3, 1.23825, 0, 0, 0.503529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473303,-99) , 
12, -1.83512, 0, 0, 0.48722,-99) , 
12, -1.507, 0, 0, 0.502147,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0097118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.502429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477272,-99) , 
3, 3.14069, 0, 0, 0.487794,-99) , 
5, 0.999864, 0, 0, 0.501148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463294,-99) , 
6, 0.591184, 0, 0, 0.484169,-99) , 
5, 0.999524, 0, 0, 0.500077,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0136935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492244,-99) , 
9, -951.286, 1, 0, 0.500149,-99) , 
NN(
0, 
0, 
-1, 2.19925, 0, -1, 0.493167,-99) , 
12, 0.34817, 0, 0, 0.496994,-99) , 
2, -0.214418, 1, 0, 0.497888,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0158581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.70097, 0, 1, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0.418725, 0, -1, 0.494268,-99) , 
13, 2.18052, 0, 0, 0.499571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478125,-99) , 
9, -0.429136, 0, 0, 0.504662,-99) , 
NN(
0, 
0, 
-1, 1.95237, 1, -1, 0.476492,-99) , 
9, -951.286, 0, 0, 0.487529,-99) , 
10, 0.999998, 1, 0, 0.497329,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0108051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496879,-99) , 
8, 1.09142, 0, 0, 0.508696,-99) , 
NN(
0, 
0, 
-1, 2.58299, 1, -1, 0.496482,-99) , 
11, 3.15839, 0, 0, 0.497855,-99) , 
NN(
0, 
0, 
-1, -0.143066, 0, -1, 0.4798,-99) , 
0, 0.504757, 1, 0, 0.496832,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00951289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.45265, 0, 1, 0.502683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466201,-99) , 
10, -0.428581, 0, 0, 0.490795,-99) , 
7, 0.00113373, 0, 0, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481923,-99) , 
7, 0.0238087, 1, 0, 0.500054,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.019539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
11, -2.8951, 0, 0, 0.506185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477013,-99) , 
9, -951.286, 0, 0, 0.489372,-99) , 
12, 0.00450674, 1, 0, 0.501655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469231,-99) , 
5, 0.999968, 0, 0, 0.495704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441416,-99) , 
4, 1.48801, 1, 0, 0.480451,-99) , 
5, 0.999905, 0, 0, 0.49406,-99) , 
6, 0.122777, 0, 0, 0.496432,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0134669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471138,-99) , 
4, 9.52224, 1, 0, 0.500047,-99) , 
11, 0.163553, 0, 0, 0.501887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489518,-99) , 
3, 1.60433, 0, 0, 0.494332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470207,-99) , 
8, 1.95134, 1, 0, 0.491782,-99) , 
12, 2.15205, 1, 0, 0.499387,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00598674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51643,-99) , 
NN(
0, 
0, 
-1, -1.01249, 0, -1, 0.498459,-99) , 
8, 4.69023, 0, 0, 0.499275,-99) , 
NN(
0, 
0, 
-1, 2.43466, 1, -1, 0.484675,-99) , 
0, 0.491424, 0, 0, 0.498411,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0180782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493034,-99) , 
8, 1.66441, 0, 0, 0.496776,-99) , 
10, 1.28568, 0, 0, 0.499987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493364,-99) , 
10, -1.57143, 1, 0, 0.494569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447165,-99) , 
8, 1.6842, 0, 0, 0.492767,-99) , 
11, -0.0584643, 0, 0, 0.494801,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0231148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490717,-99) , 
4, 4.82642, 1, 0, 0.506502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4833,-99) , 
2, 0.0142239, 0, 0, 0.493244,-99) , 
2, -0.00358876, 1, 0, 0.500428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485266,-99) , 
8, 2.82735, 1, 0, 0.496743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464565,-99) , 
8, 1.46241, 0, 0, 0.491384,-99) , 
2, 0.0712316, 1, 0, 0.499042,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00967504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498346,-99) , 
11, -3.5063, 0, 0, 0.511513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496894,-99) , 
6, 0.623575, 0, 0, 0.4976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47339,-99) , 
5, 0.999048, 0, 0, 0.496943,-99) , 
8, 4.43576, 0, 0, 0.497946,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0146939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498897,-99) , 
12, 0.962007, 1, 0, 0.514997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497088,-99) , 
0, 0.503805, 0, 0, 0.499126,-99) , 
11, -1.85732, 0, 0, 0.502092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498095,-99) , 
12, 4.33176, 1, 0, 0.503897,-99) , 
NN(
0, 
0, 
-1, 2.55462, 1, -1, 0.49157,-99) , 
11, 1.75657, 0, 0, 0.495109,-99) , 
6, -0.157916, 0, 0, 0.498332,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00893457);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.950269, 0, 1, 0.515119,-99) , 
NN(
NN(
0, 
0, 
-1, 1.33408, 0, 1, 0.502407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481775,-99) , 
12, 3.43475, 1, 0, 0.501046,-99) , 
11, 4.82397, 0, 0, 0.502272,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0148435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142963, 0, 1, 0.529541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481799,-99) , 
13, 1.29656, 1, 0, 0.497736,-99) , 
12, 3.60072, 1, 0, 0.507803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469599,-99) , 
4, 9.52716, 1, 0, 0.500999,-99) , 
NN(
0, 
0, 
-1, -0.598246, 1, -1, 0.483422,-99) , 
8, 1.90389, 0, 0, 0.49806,-99) , 
11, 0.874947, 0, 0, 0.500028,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0133545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495296,-99) , 
4, 1.00698, 1, 0, 0.497833,-99) , 
4, 9.42206, 0, 0, 0.498853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47385,-99) , 
5, 0.999048, 0, 0, 0.497986,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0160601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498706,-99) , 
11, -1.32982, 0, 0, 0.508482,-99) , 
NN(
0, 
0, 
-1, 1.21598, 1, -1, 0.488412,-99) , 
12, 3.52826, 1, 0, 0.504789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498509,-99) , 
0, 0.491424, 0, 0, 0.508566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49444,-99) , 
10, -2.02039, 1, 0, 0.495785,-99) , 
0, 0.493328, 1, 0, 0.4974,-99) , 
10, 0.428573, 0, 0, 0.500078,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0123003);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.357788, 0, 1, 0.506524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49819,-99) , 
11, -1.32274, 0, 0, 0.501105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464837,-99) , 
10, 1.01117, 1, 0, 0.480273,-99) , 
12, 1.19061, 1, 0, 0.498955,-99) , 
11, -0.440715, 0, 0, 0.501414,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0230616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.481703, 0, 1, 0.539812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492179,-99) , 
3, 2.53031, 0, 0, 0.50086,-99) , 
11, -0.853396, 0, 0, 0.504348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491363,-99) , 
9, -951.286, 1, 0, 0.502396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47338,-99) , 
9, -951.286, 0, 0, 0.485471,-99) , 
11, 1.47717, 0, 0, 0.494185,-99) , 
12, 1.57401, 1, 0, 0.501082,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0112694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489584,-99) , 
6, -0.848453, 0, 0, 0.501918,-99) , 
10, 1.8571, 0, 0, 0.502781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511208,-99) , 
NN(
0, 
0, 
-1, 4.35802, 0, -1, 0.480786,-99) , 
8, 4.26627, 1, 0, 0.492311,-99) , 
6, 0.591161, 1, 0, 0.501799,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0101845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54983, 0, 1, 0.515818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49165,-99) , 
0, 0.500947, 1, 0, 0.49853,-99) , 
8, 4.33872, 0, 0, 0.49986,-99) , 
NN(
0, 
0, 
-1, 3.18811, 1, -1, 0.479062,-99) , 
10, 1.57143, 1, 0, 0.49819,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0128511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.522887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489934,-99) , 
4, 4.68891, 1, 0, 0.500806,-99) , 
12, 0.467657, 1, 0, 0.51166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499323,-99) , 
4, 2.28841, 0, 0, 0.507152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490575,-99) , 
2, -0.00337889, 1, 0, 0.495746,-99) , 
11, 3.2358, 0, 0, 0.497027,-99) , 
2, 0.0714447, 0, 0, 0.49931,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00746214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498877,-99) , 
4, 9.05654, 0, 0, 0.499962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462245,-99) , 
5, 0.999048, 0, 0, 0.498888,-99) , 
8, 4.65816, 0, 0, 0.499697,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0172923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474645,-99) , 
9, -1.57178, 0, 0, 0.508474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484329,-99) , 
0, 0.493782, 0, 0, 0.499722,-99) , 
9, -951.286, 0, 0, 0.503561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483612,-99) , 
13, 2.1752, 1, 0, 0.492635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478428,-99) , 
0, 0.504712, 0, 0, 0.487791,-99) , 
0, 0.503805, 1, 0, 0.50216,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00983946);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.09835, 0, 1, 0.510152,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495771,-99) , 
11, 3.09123, 0, 0, 0.497449,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0122917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37885, 1, 1, 0.513335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493245,-99) , 
10, 0.143495, 0, 0, 0.497588,-99) , 
4, 3.03856, 1, 0, 0.507593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497895,-99) , 
11, -0.334304, 0, 0, 0.499114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472041,-99) , 
11, 0.621556, 0, 0, 0.481398,-99) , 
12, 1.84552, 1, 0, 0.496967,-99) , 
11, 1.10552, 0, 0, 0.498974,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00762942);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485968,-99) , 
13, 4.1902, 1, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472411,-99) , 
5, 0.999048, 0, 0, 0.50001,-99) , 
8, 4.65816, 0, 0, 0.501037,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.014282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49517,-99) , 
5, 0.999909, 1, 0, 0.497454,-99) , 
5, 0.999048, 1, 0, 0.498585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473993,-99) , 
4, 9.52058, 1, 0, 0.497672,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0139617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.16433, 0, 1, 0.506246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471522,-99) , 
10, -1.23204, 1, 0, 0.492138,-99) , 
12, -1.57168, 0, 0, 0.503745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49672,-99) , 
10, 1.95238, 0, 0, 0.4984,-99) , 
NN(
0, 
0, 
-1, 1.20405, 1, -1, 0.485965,-99) , 
3, 3.40897, 1, 0, 0.49605,-99) , 
10, -0.142852, 1, 0, 0.499454,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.013146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475972,-99) , 
11, -3.4836, 0, 0, 0.503592,-99) , 
10, -0.709036, 1, 0, 0.508559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
3, 1.32581, 0, 0, 0.498093,-99) , 
7, 0.0238088, 0, 0, 0.499084,-99) , 
8, 3.39005, 0, 0, 0.501436,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0219076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498846,-99) , 
8, 2.85406, 0, 0, 0.516013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496253,-99) , 
3, 2.42942, 1, 0, 0.502105,-99) , 
10, -0.428563, 1, 0, 0.506361,-99) , 
NN(
NN(
0, 
0, 
-1, 3.96382, 1, 1, 0.510623,-99) , 
NN(
0, 
0, 
-1, 1.5945, 0, -1, 0.48784,-99) , 
11, 1.25052, 0, 0, 0.49744,-99) , 
6, -0.345045, 0, 0, 0.502574,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0107638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496958,-99) , 
0, 0.490471, 1, 0, 0.49764,-99) , 
4, 9.42883, 0, 0, 0.498613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45324,-99) , 
12, -0.160761, 1, 0, 0.483084,-99) , 
5, 0.999524, 0, 0, 0.497643,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0123021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14295, 1, 1, 0.512701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489117,-99) , 
0, 0.4967, 0, 0, 0.50126,-99) , 
0, 0.495551, 1, 0, 0.502462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506008,-99) , 
NN(
0, 
0, 
-1, 0.714238, 1, -1, 0.486925,-99) , 
0, 0.489837, 1, 0, 0.49005,-99) , 
0, 0.494281, 0, 0, 0.500329,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00757456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499685,-99) , 
3, 3.89096, 0, 0, 0.501123,-99) , 
4, 9.42883, 0, 0, 0.502325,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48281,-99) , 
5, 0.999524, 0, 0, 0.501099,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.012653);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484104,-99) , 
12, -1.86127, 0, 0, 0.501617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481508,-99) , 
11, 2.62041, 0, 0, 0.493157,-99) , 
12, 2.15205, 1, 0, 0.499495,-99) , 
2, 0.214214, 0, 0, 0.500544,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0171025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.397697, 0, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470413,-99) , 
12, 2.34994, 1, 0, 0.503944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492459,-99) , 
12, 4.13269, 1, 0, 0.501484,-99) , 
NN(
0, 
0, 
-1, 1.91547, 0, -1, 0.484567,-99) , 
10, 0.142144, 0, 0, 0.4911,-99) , 
8, 1.79038, 0, 0, 0.500257,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00972625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.6642, 0, 1, 0.51469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
11, 1.92094, 0, 0, 0.499927,-99) , 
0, 0.503805, 0, 0, 0.50129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47469,-99) , 
12, -1.86298, 0, 0, 0.484844,-99) , 
12, -1.5463, 0, 0, 0.499999,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0142395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.58505, 1, 1, 0.516558,-99) , 
NN(
NN(
0, 
0, 
-1, 1.95807, 0, 1, 0.505393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491562,-99) , 
8, 3.51417, 0, 0, 0.49654,-99) , 
6, -0.279486, 1, 0, 0.500976,-99) , 
6, 0.681188, 0, 0, 0.501927,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0151495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497485,-99) , 
8, 2.75967, 0, 0, 0.50521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494171,-99) , 
0, 0.5019, 0, 0, 0.496879,-99) , 
4, 1.44658, 1, 0, 0.499713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475936,-99) , 
4, 9.50466, 1, 0, 0.498811,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00777379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.031, 0, 1, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475652,-99) , 
5, 0.999524, 0, 0, 0.500395,-99) , 
NN(
0, 
0, 
-1, -0.138623, 1, -1, 0.481463,-99) , 
6, 0.59116, 1, 0, 0.498637,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0107136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498565,-99) , 
11, -0.465018, 0, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, -0.827177, 1, -1, 0.48642,-99) , 
8, 1.27991, 0, 0, 0.499559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480653,-99) , 
13, 4.6505, 1, 0, 0.498629,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0117055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493677,-99) , 
11, -3.42687, 0, 0, 0.501846,-99) , 
NN(
0, 
0, 
-1, -0.261747, 1, -1, 0.482789,-99) , 
0, 0.491242, 0, 0, 0.50067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478273,-99) , 
12, -0.17048, 0, 0, 0.496253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472726,-99) , 
0, 0.503759, 0, 0, 0.489367,-99) , 
0, 0.502852, 1, 0, 0.499203,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0122435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.64527, 0, 1, 0.504821,-99) , 
NN(
0, 
0, 
-1, 6.62068, 1, -1, 0.491485,-99) , 
12, 3.94896, 1, 0, 0.502515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474129,-99) , 
12, -1.81899, 0, 0, 0.49596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468667,-99) , 
12, 0.530532, 1, 0, 0.492427,-99) , 
3, 2.96048, 1, 0, 0.499653,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0191301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.35388, 0, 1, 0.505589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458681,-99) , 
9, -1.57137, 0, 0, 0.501879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493313,-99) , 
11, -2.82985, 1, 0, 0.497542,-99) , 
NN(
0, 
0, 
-1, 0.0296577, 1, -1, 0.475662,-99) , 
2, 0.0712359, 1, 0, 0.494276,-99) , 
9, -951.286, 0, 0, 0.497591,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00878234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521746,-99) , 
NN(
0, 
0, 
-1, -0.893667, 0, -1, 0.496937,-99) , 
10, -2.0204, 1, 0, 0.49775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470312,-99) , 
10, 2.14281, 1, 0, 0.496995,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00730104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47716,-99) , 
4, 7.65738, 1, 0, 0.499776,-99) , 
4, 9.4289, 0, 0, 0.500801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457495,-99) , 
9, -951.286, 0, 0, 0.481389,-99) , 
5, 0.999524, 0, 0, 0.499575,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0162746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85922, 1, 1, 0.506725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49084,-99) , 
8, 4.00445, 1, 0, 0.49576,-99) , 
6, 0.539889, 1, 0, 0.503728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496158,-99) , 
13, 2.23276, 0, 0, 0.498656,-99) , 
NN(
0, 
0, 
-1, -0.367718, 1, -1, 0.476488,-99) , 
11, -1.8767, 0, 0, 0.494637,-99) , 
3, 2.46848, 0, 0, 0.498538,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0124974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524577,-99) , 
NN(
NN(
0, 
0, 
-1, 6.82279, 1, 1, 0.511131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490607,-99) , 
12, -0.301713, 0, 0, 0.498723,-99) , 
11, 3.30988, 0, 0, 0.50015,-99) , 
6, 0.778083, 0, 0, 0.500819,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0123339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49876,-99) , 
11, -3.24674, 0, 0, 0.509846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494734,-99) , 
11, 1.34753, 0, 0, 0.496612,-99) , 
8, 3.87424, 0, 0, 0.498004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483445,-99) , 
3, 4.16658, 1, 0, 0.497289,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00807365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498736,-99) , 
5, 0.999048, 1, 0, 0.499685,-99) , 
2, 0.212625, 0, 0, 0.500886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475626,-99) , 
4, 9.50466, 1, 0, 0.499937,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.021885);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.19332, 0, 1, 0.517739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48886,-99) , 
12, -0.85404, 0, 0, 0.504384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47928,-99) , 
11, 3.17168, 0, 0, 0.493748,-99) , 
8, 1.62487, 0, 0, 0.501811,-99) , 
8, 4.43576, 0, 0, 0.5029,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0102187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503848,-99) , 
NN(
0, 
0, 
-1, -0.328361, 1, -1, 0.495499,-99) , 
8, 2.54087, 0, 0, 0.499047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473941,-99) , 
9, -951.286, 1, 0, 0.487094,-99) , 
3, 3.9446, 1, 0, 0.498152,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0207642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.773652, 0, 1, 0.518528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492562,-99) , 
11, -3.72738, 1, 0, 0.500869,-99) , 
9, -951.286, 0, 0, 0.508208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48957,-99) , 
12, 2.40441, 1, 0, 0.503035,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.490957,-99) , 
9, -951.286, 1, 0, 0.497754,-99) , 
10, -0.714292, 1, 0, 0.500353,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0153519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76189, 1, 1, 0.519355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484204,-99) , 
0, 0.502308, 0, 0, 0.495443,-99) , 
0, 0.499042, 1, 0, 0.509519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475881,-99) , 
12, -1.3251, 0, 0, 0.499646,-99) , 
NN(
0, 
0, 
-1, 1.6794, 0, -1, 0.488874,-99) , 
12, 1.81149, 1, 0, 0.496237,-99) , 
10, -0.999987, 1, 0, 0.498561,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0210289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48409,-99) , 
1, -0.00566681, 0, 0, 0.500141,-99) , 
7, 0.0238088, 0, 0, 0.502247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476546,-99) , 
12, -2.05607, 0, 0, 0.503581,-99) , 
NN(
0, 
0, 
-1, -1.13608, 0, -1, 0.488549,-99) , 
10, -0.711417, 1, 0, 0.491821,-99) , 
3, 2.45564, 1, 0, 0.49779,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.013891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51466, 0, 1, 0.530667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48764,-99) , 
10, -0.433885, 0, 0, 0.500407,-99) , 
3, 1.33396, 0, 0, 0.507914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49985,-99) , 
11, -1.57464, 0, 0, 0.502349,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.490323,-99) , 
3, 2.06347, 0, 0, 0.498933,-99) , 
3, 1.47292, 1, 0, 0.5009,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0148547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451825,-99) , 
3, 1.45687, 0, 0, 0.499073,-99) , 
9, -951.286, 0, 0, 0.512511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47615,-99) , 
13, 4.8225, 1, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466538,-99) , 
12, -1.52626, 0, 0, 0.499722,-99) , 
10, -1.28572, 1, 0, 0.501197,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0155605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491506,-99) , 
11, 0.48409, 0, 0, 0.49529,-99) , 
8, 3.45195, 0, 0, 0.498181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479852,-99) , 
4, 9.40614, 1, 0, 0.497468,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0109626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493831,-99) , 
8, 1.77378, 0, 0, 0.499417,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.489251,-99) , 
2, 0.0710222, 1, 0, 0.497943,-99) , 
NN(
0, 
0, 
-1, -0.48709, 0, -1, 0.479217,-99) , 
0, 0.503805, 1, 0, 0.49628,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0106458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485011,-99) , 
12, -1.56792, 0, 0, 0.500025,-99) , 
3, 4.13483, 0, 0, 0.501236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509567,-99) , 
NN(
0, 
0, 
-1, 1.93877, 1, -1, 0.475584,-99) , 
9, -951.286, 0, 0, 0.488623,-99) , 
10, 1.28571, 1, 0, 0.499662,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0138718);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.41965, 1, 1, 0.514875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498993,-99) , 
6, -0.251127, 0, 0, 0.508495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492812,-99) , 
0, 0.496186, 1, 0, 0.495245,-99) , 
2, 0.0712359, 0, 0, 0.4973,-99) , 
10, -1.2857, 1, 0, 0.499333,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0191262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.58615, 0, 1, 0.515278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489866,-99) , 
3, 2.4038, 0, 0, 0.499634,-99) , 
6, -0.534288, 1, 0, 0.505272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491671,-99) , 
10, 0.387788, 1, 0, 0.49646,-99) , 
NN(
0, 
0, 
-1, 3.65204, 0, -1, 0.467769,-99) , 
12, -0.672036, 0, 0, 0.493648,-99) , 
10, -0.428544, 1, 0, 0.497621,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0112893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48825,-99) , 
8, 1.43681, 0, 0, 0.504023,-99) , 
NN(
0, 
0, 
-1, -0.68229, 0, -1, 0.496449,-99) , 
10, -0.428597, 1, 0, 0.499022,-99) , 
2, 0.214243, 0, 0, 0.499681,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0090249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49733,-99) , 
3, 3.9043, 0, 0, 0.49825,-99) , 
10, 1.85714, 0, 0, 0.499075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475558,-99) , 
5, 0.999048, 0, 0, 0.498253,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00499024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472989,-99) , 
5, 0.999048, 0, 0, 0.499459,-99) , 
3, 4.15414, 0, 0, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46941,-99) , 
10, 2.14281, 1, 0, 0.499365,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0147893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494905,-99) , 
12, 3.74811, 1, 0, 0.507199,-99) , 
NN(
0, 
0, 
-1, 1.29127, 1, -1, 0.495081,-99) , 
11, 0.571713, 0, 0, 0.497834,-99) , 
10, -1.85713, 1, 0, 0.498784,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0150274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466502,-99) , 
9, -1.57154, 0, 0, 0.506174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470917,-99) , 
10, -1.57135, 0, 0, 0.498967,-99) , 
9, -951.286, 0, 0, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481332,-99) , 
7, 0.023792, 1, 0, 0.501328,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0180439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.675168, 1, 1, 0.515828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483986,-99) , 
8, 1.08594, 0, 0, 0.499479,-99) , 
10, -1.28572, 1, 0, 0.501795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493011,-99) , 
11, -2.59227, 0, 0, 0.499196,-99) , 
NN(
0, 
0, 
-1, 0.510142, 1, -1, 0.485224,-99) , 
12, 0.0389318, 1, 0, 0.494431,-99) , 
3, 2.2225, 1, 0, 0.4981,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0108863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46024, 1, 1, 0.515747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492948,-99) , 
12, 1.6994, 1, 0, 0.508517,-99) , 
NN(
0, 
0, 
-1, -0.213949, 0, -1, 0.495665,-99) , 
0, 0.493329, 1, 0, 0.49731,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0116606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.33872, 0, 1, 0.504354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485807,-99) , 
9, -951.286, 0, 0, 0.493424,-99) , 
10, 1.28571, 1, 0, 0.502992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477584,-99) , 
0, 0.490471, 0, 0, 0.502042,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0147164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47983,-99) , 
5, 0.999955, 0, 0, 0.508239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496366,-99) , 
4, 4.78242, 0, 0, 0.498786,-99) , 
6, -0.625845, 1, 0, 0.501032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475554,-99) , 
5, 0.999048, 0, 0, 0.500146,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_4_6::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_4_6::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_4_6 *ReadBDT_maker_LHC19c2b_4_6(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_4_6(theInpVar);
  }
}
