#include "LHC19c2b_TMVAClassification_BDT_8_12_noP.class.h"

double ReadBDT_LHC19c2b_8_12_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_8_12_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.618001573470909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.774827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403314,-99) , 
5, -0.836726, 0, 0, 0.748258,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.288695,-99) , 
10, 0.466863, 1, 0, 0.626935,-99) , 
NN(
0, 
0, 
-1, 0.436862, 1, -1, 0.152356,-99) , 
5, 0.714204, 1, 0, 0.501356,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.497711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.582945, 1, 1, 0.70707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212112,-99) , 
7, -951.286, 0, 0, 0.325357,-99) , 
9, -1.41985, 1, 0, 0.626437,-99) , 
NN(
0, 
0, 
-1, 0.721651, 1, -1, 0.223619,-99) , 
5, 0.618962, 1, 0, 0.499861,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.447648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.751116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481489,-99) , 
5, -0.709427, 0, 0, 0.712651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316215,-99) , 
7, -951.286, 0, 0, 0.423962,-99) , 
10, -0.00639947, 1, 0, 0.599929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179471,-99) , 
4, 0.999524, 0, 0, 0.484141,-99) , 
NN(
0, 
0, 
-1, 0.280437, 1, -1, 0.126966,-99) , 
8, 0.716834, 1, 0, 0.293836,-99) , 
5, 0.523781, 1, 0, 0.488751,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.344652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.67254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283352,-99) , 
10, 1.32163, 1, 0, 0.414159,-99) , 
10, 0.0908633, 1, 0, 0.576432,-99) , 
NN(
0, 
0, 
-1, 1.00637, 1, -1, 0.289627,-99) , 
5, 0.523779, 1, 0, 0.472411,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.254634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481821,-99) , 
10, -0.980946, 1, 0, 0.551109,-99) , 
NN(
0, 
0, 
-1, 0.49538, 1, -1, 0.198254,-99) , 
4, 0.999524, 0, 0, 0.526322,-99) , 
NN(
0, 
0, 
-1, 0.428671, 1, -1, 0.20381,-99) , 
8, 1.57216, 1, 0, 0.469925,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.263351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.37865, 1, 1, 0.623668,-99) , 
NN(
0, 
0, 
-1, 0.29245, 1, -1, 0.431651,-99) , 
10, -0.3434, 1, 0, 0.535677,-99) , 
NN(
0, 
0, 
-1, 1.0538, 1, -1, 0.222928,-99) , 
5, 0.809487, 1, 0, 0.482497,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.270237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428199,-99) , 
4, 0.999977, 0, 0, 0.555012,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.208943,-99) , 
4, 0.999524, 0, 0, 0.529998,-99) , 
NN(
0, 
0, 
-1, 0.428389, 1, -1, 0.194304,-99) , 
8, 1.85695, 1, 0, 0.488927,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.199419);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375497,-99) , 
5, -0.904775, 0, 0, 0.532244,-99) , 
NN(
0, 
0, 
-1, 0.998621, 0, -1, 0.236192,-99) , 
4, 0.999525, 0, 0, 0.511643,-99) , 
NN(
0, 
0, 
-1, 0.428657, 1, -1, 0.222108,-99) , 
8, 1.857, 1, 0, 0.477049,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.330027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29055,-99) , 
7, -1.56913, 0, 0, 0.625969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359193,-99) , 
5, -0.591847, 0, 0, 0.467208,-99) , 
7, -951.286, 0, 0, 0.547489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364566,-99) , 
8, -0.333629, 1, 0, 0.416075,-99) , 
NN(
0, 
0, 
-1, 1.17679, 1, -1, 0.114557,-99) , 
10, 0.279234, 1, 0, 0.348506,-99) , 
5, 0.42851, 1, 0, 0.468732,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.155932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34676,-99) , 
2, -0.140466, 0, 0, 0.515068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.181061,-99) , 
8, 2.42825, 1, 0, 0.503553,-99) , 
NN(
0, 
0, 
-1, 0.0168109, 1, -1, 0.267741,-99) , 
5, 0.809489, 1, 0, 0.465901,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.15048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428332,-99) , 
4, 0.999977, 0, 0, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0.68326, 1, -1, 0.248141,-99) , 
4, 0.999524, 0, 0, 0.483616,-99) , 
NN(
0, 
0, 
-1, 0.428433, 1, -1, 0.195998,-99) , 
8, 2.14282, 1, 0, 0.461733,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.137874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444253,-99) , 
7, -951.286, 0, 0, 0.490243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.186257,-99) , 
4, 0.998572, 0, 0, 0.479446,-99) , 
NN(
0, 
0, 
-1, 0.618639, 1, -1, 0.199076,-99) , 
8, 2.14282, 1, 0, 0.458639,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.129274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426581,-99) , 
5, 0.33327, 1, 0, 0.479866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197985,-99) , 
4, 0.999048, 0, 0, 0.466369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.140239,-99) , 
8, 2.42862, 1, 0, 0.451831,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.119717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398014,-99) , 
5, -0.809562, 0, 0, 0.487188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264252,-99) , 
4, 0.999048, 0, 0, 0.477809,-99) , 
NN(
0, 
0, 
-1, 0.238035, 1, -1, 0.299516,-99) , 
8, 1.57227, 1, 0, 0.450761,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.106758);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14296, 1, -1, 0.446823,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.128168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470145,-99) , 
1, 0.00592662, 0, 0, 0.484711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243915,-99) , 
4, 0.999048, 0, 0, 0.473675,-99) , 
NN(
0, 
0, 
-1, 0.428789, 1, -1, 0.236319,-99) , 
8, 2.14264, 1, 0, 0.456948,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.101062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428304,-99) , 
4, 0.999955, 0, 0, 0.498207,-99) , 
NN(
0, 
0, 
-1, 0.427816, 1, -1, 0.300493,-99) , 
8, 2.14296, 1, 0, 0.485665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213186,-99) , 
4, 0.999048, 0, 0, 0.472266,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.104492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441804,-99) , 
10, 0.0914826, 1, 0, 0.495567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258765,-99) , 
4, 0.999048, 0, 0, 0.485071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179026,-99) , 
8, 2.42871, 1, 0, 0.472521,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.14508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.309813, 1, 1, 0.681879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493687,-99) , 
5, -0.809641, 0, 0, 0.625187,-99) , 
NN(
0, 
0, 
-1, 1.57188, 1, -1, 0.436563,-99) , 
1, -0.00445233, 1, 0, 0.461305,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0721906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497383,-99) , 
1, 0.00592662, 0, 0, 0.509313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259333,-99) , 
8, 2.42831, 1, 0, 0.501126,-99) , 
NN(
0, 
0, 
-1, 0.775355, 1, -1, 0.275917,-99) , 
4, 0.999524, 0, 0, 0.484926,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.069641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49859,-99) , 
1, -0.00621516, 1, 0, 0.511807,-99) , 
NN(
0, 
0, 
-1, 0.887158, 1, -1, 0.334332,-99) , 
4, 0.999524, 0, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212747,-99) , 
8, 2.42852, 1, 0, 0.488693,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0976593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366969,-99) , 
5, 0.904672, 1, 0, 0.518893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274117,-99) , 
8, 2.42833, 1, 0, 0.509892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245184,-99) , 
4, 0.999048, 0, 0, 0.497101,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0770052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376899,-99) , 
5, 0.904725, 1, 0, 0.507906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25978,-99) , 
3, 8.97425, 1, 0, 0.498998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224432,-99) , 
8, 2.4284, 1, 0, 0.488511,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0857042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42583,-99) , 
5, -0.80951, 0, 0, 0.497129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305606,-99) , 
3, 8.82294, 1, 0, 0.489967,-99) , 
NN(
0, 
0, 
-1, 0.428657, 1, -1, 0.278315,-99) , 
8, 2.14282, 1, 0, 0.476166,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.136342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457083,-99) , 
7, -951.286, 0, 0, 0.512359,-99) , 
NN(
0, 
0, 
-1, 1.02309, 1, -1, 0.437326,-99) , 
5, 0.237952, 1, 0, 0.478778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201746,-99) , 
4, 0.998572, 0, 0, 0.469808,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0789459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620176, 0, 1, 0.615629,-99) , 
NN(
0, 
0, 
-1, 2.42852, 1, -1, 0.478931,-99) , 
1, -0.00621516, 1, 0, 0.490524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24329,-99) , 
4, 0.999048, 0, 0, 0.479334,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0961953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.518008,-99) , 
NN(
0, 
0, 
-1, -0.428736, 0, -1, 0.429023,-99) , 
2, -0.0710983, 0, 0, 0.503177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56252,-99) , 
NN(
0, 
0, 
-1, 0.917778, 1, -1, 0.252501,-99) , 
5, 0.238234, 1, 0, 0.370194,-99) , 
8, 1.57125, 1, 0, 0.484513,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0783694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440401,-99) , 
0, 0.5019, 1, 0, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279453,-99) , 
4, 0.998572, 0, 0, 0.493906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242297,-99) , 
8, 2.42852, 1, 0, 0.484706,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0774001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44929,-99) , 
5, -0.619057, 0, 0, 0.493576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317356,-99) , 
8, 2.42833, 1, 0, 0.488061,-99) , 
NN(
0, 
0, 
-1, -0.248737, 1, -1, 0.311354,-99) , 
4, 0.999524, 0, 0, 0.47584,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0853319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523971, 0, 1, 0.601668,-99) , 
NN(
0, 
0, 
-1, 8.9721, 1, -1, 0.485275,-99) , 
1, 0.00592662, 0, 0, 0.496071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456909,-99) , 
10, 1.43536, 1, 0, 0.532492,-99) , 
NN(
0, 
0, 
-1, 0.963939, 1, -1, 0.255086,-99) , 
5, 0.428547, 1, 0, 0.382357,-99) , 
8, 1.57232, 1, 0, 0.480115,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0653077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450958,-99) , 
0, 0.501899, 1, 0, 0.498547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316092,-99) , 
3, 8.64615, 1, 0, 0.491365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26421,-99) , 
8, 2.42862, 1, 0, 0.48346,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.138294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473086,-99) , 
8, 0.0645228, 1, 0, 0.520636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318412,-99) , 
8, -0.959172, 0, 0, 0.46615,-99) , 
5, -0.428732, 0, 0, 0.501015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447227,-99) , 
10, 1.85911, 1, 0, 0.552292,-99) , 
NN(
0, 
0, 
-1, 0.981619, 1, -1, 0.301497,-99) , 
5, 0.237989, 1, 0, 0.401872,-99) , 
8, 1.28561, 1, 0, 0.48065,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0723405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480031,-99) , 
1, 0.00669617, 0, 0, 0.486518,-99) , 
NN(
0, 
0, 
-1, 0.523457, 1, -1, 0.362304,-99) , 
8, 2.14278, 1, 0, 0.479717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260271,-99) , 
4, 0.998572, 0, 0, 0.472905,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0879201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45471,-99) , 
5, -0.428638, 0, 0, 0.512102,-99) , 
NN(
0, 
0, 
-1, 0.713692, 1, -1, 0.454679,-99) , 
10, 0.00769318, 1, 0, 0.492188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294459,-99) , 
4, 0.999048, 0, 0, 0.483588,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.147639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442236,-99) , 
2, -0.121093, 0, 0, 0.553839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373001,-99) , 
5, -0.469421, 0, 0, 0.453447,-99) , 
8, -0.427923, 0, 0, 0.522941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408148,-99) , 
8, 0.571186, 1, 0, 0.464051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153244,-99) , 
10, 0.973928, 1, 0, 0.444347,-99) , 
5, 0.238021, 1, 0, 0.486455,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0577122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472515,-99) , 
10, -0.599649, 1, 0, 0.489219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310153,-99) , 
8, 2.42873, 1, 0, 0.483796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286386,-99) , 
3, 8.93425, 1, 0, 0.477,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0481187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494004,-99) , 
1, 0.00592662, 0, 0, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334255,-99) , 
8, 2.42849, 1, 0, 0.496691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310958,-99) , 
3, 8.95508, 1, 0, 0.490059,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0489843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448983,-99) , 
4, 0.999932, 0, 0, 0.496949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341679,-99) , 
8, 2.42894, 1, 0, 0.492485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261477,-99) , 
4, 0.998572, 0, 0, 0.485569,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.10004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462144,-99) , 
4, 0.999997, 0, 0, 0.498651,-99) , 
NN(
0, 
0, 
-1, 0.194257, 1, -1, 0.436975,-99) , 
4, 0.999932, 0, 0, 0.488302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281786,-99) , 
4, 0.998572, 0, 0, 0.481892,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0793222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488102,-99) , 
1, -0.00445233, 1, 0, 0.506886,-99) , 
NN(
0, 
0, 
-1, -0.0481688, 1, -1, 0.429079,-99) , 
10, 1.02362, 1, 0, 0.495546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320222,-99) , 
3, 8.74289, 1, 0, 0.488947,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0698882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397053,-99) , 
8, -1.57132, 0, 0, 0.510744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2313,-99) , 
10, 0.0168109, 1, 0, 0.438194,-99) , 
5, 0.809437, 1, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292585,-99) , 
3, 8.80985, 1, 0, 0.493277,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0756145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486125,-99) , 
1, -0.00445233, 1, 0, 0.502642,-99) , 
NN(
0, 
0, 
-1, 0.237658, 1, -1, 0.445854,-99) , 
10, 0.804197, 1, 0, 0.492683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316647,-99) , 
3, 8.7322, 1, 0, 0.485966,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.041195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412785,-99) , 
5, 0.904494, 1, 0, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364496,-99) , 
2, 0.219232, 1, 0, 0.498656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322092,-99) , 
4, 0.998572, 0, 0, 0.49336,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0669132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482992,-99) , 
5, -0.523844, 0, 0, 0.519064,-99) , 
NN(
0, 
0, 
-1, 2.1431, 1, -1, 0.47281,-99) , 
0, 0.498089, 1, 0, 0.495408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328591,-99) , 
3, 8.9721, 1, 0, 0.48956,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0747724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469254,-99) , 
5, -0.913826, 0, 0, 0.526967,-99) , 
NN(
0, 
0, 
-1, -0.427383, 0, -1, 0.482069,-99) , 
0, 0.499041, 1, 0, 0.5077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443738,-99) , 
8, 0.0567689, 1, 0, 0.487413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21509,-99) , 
8, 1.57534, 1, 0, 0.429662,-99) , 
5, 0.809437, 1, 0, 0.496747,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.047431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714314, 0, 1, 0.571797,-99) , 
NN(
0, 
0, 
-1, 2.42876, 1, -1, 0.488629,-99) , 
1, 0.00592662, 0, 0, 0.496561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318669,-99) , 
4, 0.999048, 0, 0, 0.48945,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.08392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471727,-99) , 
4, 0.999994, 0, 0, 0.508382,-99) , 
NN(
0, 
0, 
-1, 1.04256, 1, -1, 0.432566,-99) , 
4, 0.999864, 0, 0, 0.500591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302462,-99) , 
4, 0.998572, 0, 0, 0.494869,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0475574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489564,-99) , 
7, -951.286, 0, 0, 0.507023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387849,-99) , 
8, 2.42847, 1, 0, 0.503461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326298,-99) , 
4, 0.998572, 0, 0, 0.49824,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0522112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.27365, 1, 1, 0.665069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476009,-99) , 
8, -0.142829, 0, 0, 0.538396,-99) , 
5, -0.52411, 0, 0, 0.599721,-99) , 
NN(
0, 
0, 
-1, 8.74922, 1, -1, 0.486297,-99) , 
1, -0.00445233, 1, 0, 0.500897,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0376016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.510959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381627,-99) , 
8, 2.42856, 1, 0, 0.507073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360546,-99) , 
3, 8.80985, 1, 0, 0.501687,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0781228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474927,-99) , 
8, -0.142804, 0, 0, 0.525384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348708,-99) , 
10, 0.595096, 1, 0, 0.491603,-99) , 
5, 0.238071, 1, 0, 0.510329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337622,-99) , 
4, 0.998572, 0, 0, 0.505255,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0621885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48436,-99) , 
8, 0.427224, 0, 0, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0.901654, 1, -1, 0.481718,-99) , 
5, 0.142803, 1, 0, 0.499293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351083,-99) , 
3, 8.95508, 1, 0, 0.494224,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.070426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.72566, 0, 1, 0.63029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378336,-99) , 
10, -2.05267, 0, 0, 0.498574,-99) , 
8, -1.04333, 1, 0, 0.550903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37724,-99) , 
4, 0.999524, 0, 0, 0.497565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27716,-99) , 
8, -1.28568, 0, 0, 0.488767,-99) , 
9, -3.96059, 1, 0, 0.499466,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0419577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419215,-99) , 
8, -1.85705, 0, 0, 0.506457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409864,-99) , 
10, 2.12943, 1, 0, 0.501975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283635,-99) , 
8, 0.549066, 1, 0, 0.403543,-99) , 
5, 0.904661, 1, 0, 0.496221,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0383937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524022, 0, 1, 0.570054,-99) , 
NN(
0, 
0, 
-1, 2.42878, 1, -1, 0.490861,-99) , 
1, 0.00592662, 0, 0, 0.498138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363288,-99) , 
3, 8.75084, 1, 0, 0.493217,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0468322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491748,-99) , 
9, -4.15057, 1, 0, 0.50074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371174,-99) , 
3, 8.83068, 1, 0, 0.4963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336382,-99) , 
8, 2.42874, 1, 0, 0.491364,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0401692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488713,-99) , 
5, 0.142842, 1, 0, 0.502488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393963,-99) , 
3, 8.82294, 1, 0, 0.498722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362206,-99) , 
8, 2.42852, 1, 0, 0.494511,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0663398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489858,-99) , 
1, -0.00213819, 1, 0, 0.510348,-99) , 
NN(
0, 
0, 
-1, 0.333171, 1, -1, 0.45419,-99) , 
10, 0.6674, 1, 0, 0.499159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337205,-99) , 
4, 0.998572, 0, 0, 0.494758,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0397434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.509052, 1, 1, 0.514821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422982,-99) , 
3, 8.93425, 1, 0, 0.511816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385587,-99) , 
8, 2.42867, 1, 0, 0.507928,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0300916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41929,-99) , 
3, 8.96578, 1, 0, 0.504323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410133,-99) , 
10, 2.27047, 1, 0, 0.501095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394824,-99) , 
8, 2.42849, 1, 0, 0.497814,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.030349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.544935, 1, 1, 0.506951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418541,-99) , 
3, 8.84785, 1, 0, 0.503605,-99) , 
NN(
0, 
0, 
-1, -0.90481, 1, -1, 0.431965,-99) , 
10, 1.41623, 1, 0, 0.496967,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0431398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434896,-99) , 
8, 2.14231, 1, 0, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0.43387, 0, -1, 0.441317,-99) , 
9, -0.708392, 1, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405287,-99) , 
2, -0.21361, 0, 0, 0.497751,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0474403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481527,-99) , 
5, 0.23808, 1, 0, 0.495481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421571,-99) , 
9, -0.0247478, 1, 0, 0.491857,-99) , 
NN(
0, 
0, 
-1, 0.809431, 1, -1, 0.444766,-99) , 
3, 4.51103, 1, 0, 0.482482,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0879898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484242,-99) , 
1, -0.00184809, 1, 0, 0.505042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423101,-99) , 
8, 0.36016, 0, 0, 0.471951,-99) , 
5, -0.428598, 0, 0, 0.493918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378626,-99) , 
8, 2.42852, 1, 0, 0.490588,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0447095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45471,-99) , 
10, 2.01494, 1, 0, 0.509531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446166,-99) , 
1, 0.00122893, 0, 0, 0.468996,-99) , 
3, 4.30034, 1, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351403,-99) , 
3, 8.93425, 1, 0, 0.496971,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0686391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416643,-99) , 
8, -0.714262, 0, 0, 0.525735,-99) , 
9, -4.00702, 1, 0, 0.539879,-99) , 
NN(
0, 
0, 
-1, 8.74938, 1, -1, 0.474179,-99) , 
1, -0.00219257, 1, 0, 0.4913,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.030854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398587,-99) , 
8, -1.56865, 0, 0, 0.50099,-99) , 
9, -4.85455, 1, 0, 0.504395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346695,-99) , 
8, 0.529521, 1, 0, 0.42448,-99) , 
5, 0.904671, 1, 0, 0.499615,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0698191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353499,-99) , 
10, 0.973928, 1, 0, 0.51525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408858,-99) , 
8, -0.4281, 0, 0, 0.474699,-99) , 
5, -0.42864, 0, 0, 0.501443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397664,-99) , 
3, 8.52364, 1, 0, 0.497556,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0616035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452882,-99) , 
10, -1.9821, 0, 0, 0.490195,-99) , 
8, -1.35014, 1, 0, 0.52932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482371,-99) , 
8, -0.874507, 1, 0, 0.486513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350416,-99) , 
8, -1.28251, 0, 0, 0.480768,-99) , 
9, -4.20787, 1, 0, 0.486612,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0529735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4955,-99) , 
8, -0.706826, 1, 0, 0.51085,-99) , 
NN(
0, 
0, 
-1, -1.285, 0, -1, 0.466927,-99) , 
5, -0.428582, 0, 0, 0.495685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383023,-99) , 
3, 8.84137, 1, 0, 0.492116,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0544056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.386864, 1, 1, 0.609405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472994,-99) , 
8, 0.429152, 0, 0, 0.514248,-99) , 
5, -0.428944, 0, 0, 0.560688,-99) , 
NN(
0, 
0, 
-1, 8.95508, 1, -1, 0.483807,-99) , 
1, -0.00340812, 1, 0, 0.497446,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0434421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417125,-99) , 
2, -0.271538, 0, 0, 0.509173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43145,-99) , 
2, 0.217018, 1, 0, 0.506095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295123,-99) , 
5, 0.523818, 1, 0, 0.425551,-99) , 
8, 2.14333, 1, 0, 0.501875,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0567463);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.620043, 0, 1, 0.57337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484401,-99) , 
5, 0.618962, 0, 0, 0.497268,-99) , 
NN(
0, 
0, 
-1, -0.714488, 1, -1, 0.442707,-99) , 
10, 1.23957, 1, 0, 0.491721,-99) , 
1, -0.00464865, 1, 0, 0.50146,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0340101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.619088, 0, 1, 0.569645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493335,-99) , 
9, -4.90516, 1, 0, 0.496026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400869,-99) , 
8, 2.42871, 1, 0, 0.493172,-99) , 
1, 0.00592662, 0, 0, 0.500299,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.046035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0337899, 0, 1, 0.515476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361881,-99) , 
10, -0.65468, 1, 0, 0.451469,-99) , 
4, 0.999796, 0, 0, 0.510707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355577,-99) , 
4, 0.998573, 0, 0, 0.506639,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0434416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407528,-99) , 
4, 0.998572, 0, 0, 0.505567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315029,-99) , 
8, -1.13216, 1, 0, 0.432917,-99) , 
10, -2.18174, 0, 0, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432644,-99) , 
8, -1.56864, 0, 0, 0.497444,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0839217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400317,-99) , 
8, -0.234277, 0, 0, 0.544124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485146,-99) , 
8, -0.595025, 1, 0, 0.502097,-99) , 
9, -1.99044, 0, 0, 0.50855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393003,-99) , 
8, 0.181817, 0, 0, 0.505158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26611,-99) , 
5, 0.0475017, 1, 0, 0.462846,-99) , 
10, 1.00427, 1, 0, 0.501933,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0309697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372864,-99) , 
8, -1.57058, 0, 0, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403334,-99) , 
10, -2.79398, 0, 0, 0.498153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414393,-99) , 
10, 2.04024, 1, 0, 0.49413,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0375852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365034,-99) , 
10, -2.58172, 0, 0, 0.501026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411068,-99) , 
8, -1.85623, 0, 0, 0.498476,-99) , 
NN(
0, 
0, 
-1, -0.904789, 1, -1, 0.405539,-99) , 
10, 1.63001, 1, 0, 0.491715,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0314952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36357,-99) , 
8, -1.56864, 0, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410454,-99) , 
10, -2.71692, 0, 0, 0.498763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359025,-99) , 
4, 0.998572, 0, 0, 0.495211,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0423466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497872,-99) , 
5, -0.523908, 0, 0, 0.540825,-99) , 
NN(
0, 
0, 
-1, 2.42882, 1, -1, 0.481042,-99) , 
1, 0.00592662, 0, 0, 0.486479,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0379056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37562,-99) , 
8, -1.28489, 0, 0, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440344,-99) , 
10, -2.47817, 0, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, 0.728123, 1, -1, 0.419934,-99) , 
5, 0.904723, 1, 0, 0.493593,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.055783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.823818, 1, 1, 0.511876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442929,-99) , 
7, -951.286, 0, 0, 0.472764,-99) , 
5, -0.428564, 0, 0, 0.501936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427133,-99) , 
8, 1.01967, 0, 0, 0.478951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269204,-99) , 
5, 0.237075, 1, 0, 0.442007,-99) , 
10, 0.906923, 1, 0, 0.492767,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0559164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327781,-99) , 
8, -0.71236, 0, 0, 0.505871,-99) , 
NN(
0, 
0, 
-1, 1.02704, 1, -1, 0.483068,-99) , 
9, -2.27706, 0, 0, 0.489186,-99) , 
NN(
0, 
0, 
-1, -0.904775, 1, -1, 0.428184,-99) , 
10, 1.46138, 1, 0, 0.483846,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.113277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369002,-99) , 
7, -1.28451, 0, 0, 0.536807,-99) , 
NN(
0, 
0, 
-1, -0.714203, 0, -1, 0.477218,-99) , 
7, -951.286, 0, 0, 0.504897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456652,-99) , 
1, 0.00240846, 0, 0, 0.485929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253558,-99) , 
10, 0.937121, 1, 0, 0.473412,-99) , 
5, 0.142812, 1, 0, 0.489249,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0719048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.126106, 1, 1, 0.623814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464922,-99) , 
8, 0.148112, 0, 0, 0.505933,-99) , 
5, -0.525104, 0, 0, 0.560691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489998,-99) , 
9, -2.45967, 0, 0, 0.501444,-99) , 
NN(
0, 
0, 
-1, 0.809439, 1, -1, 0.44859,-99) , 
10, 0.00769318, 1, 0, 0.484467,-99) , 
1, 0.00498554, 0, 0, 0.493668,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0738229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476121,-99) , 
8, 0.165111, 0, 0, 0.585153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441724,-99) , 
10, -0.50994, 1, 0, 0.506018,-99) , 
9, -2.4943, 0, 0, 0.51465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335848,-99) , 
8, -0.421405, 0, 0, 0.499336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329092,-99) , 
5, 0.809147, 1, 0, 0.48243,-99) , 
10, -0.000640301, 1, 0, 0.503867,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0688963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478999,-99) , 
8, 0.522118, 0, 0, 0.565066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478873,-99) , 
8, -0.879526, 1, 0, 0.492597,-99) , 
9, -2.4943, 0, 0, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0.809304, 1, -1, 0.466803,-99) , 
10, 0.148196, 1, 0, 0.492053,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0816724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523601, 0, 1, 0.598894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481108,-99) , 
5, 0.714213, 0, 0, 0.498563,-99) , 
1, 0.00315096, 0, 0, 0.517541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40346,-99) , 
8, -0.136202, 0, 0, 0.499307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307184,-99) , 
5, 0.809147, 1, 0, 0.481683,-99) , 
10, 0.0908633, 1, 0, 0.505972,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0191296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499791,-99) , 
3, 0.521333, 1, 0, 0.503293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404524,-99) , 
8, 2.42871, 1, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38924,-99) , 
3, 8.7322, 1, 0, 0.497003,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0640204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.396692, 0, 1, 0.587743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418606,-99) , 
8, 0.883876, 1, 0, 0.50448,-99) , 
9, -2.47875, 0, 0, 0.513015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410708,-99) , 
8, -0.140935, 0, 0, 0.495766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353993,-99) , 
5, 0.713684, 1, 0, 0.475606,-99) , 
10, 0.00769318, 1, 0, 0.500457,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0430718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523883, 0, 1, 0.572399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494668,-99) , 
9, -1.6556, 0, 0, 0.499786,-99) , 
1, -0.00520423, 1, 0, 0.506356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436804,-99) , 
2, -0.0423075, 0, 0, 0.489782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296436,-99) , 
5, 0.427746, 1, 0, 0.459018,-99) , 
10, 0.744173, 1, 0, 0.497788,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0475451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.741019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49701,-99) , 
8, 0.594564, 0, 0, 0.599872,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508485,-99) , 
9, -2.49644, 0, 0, 0.518541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41803,-99) , 
10, 2.06723, 1, 0, 0.487809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335151,-99) , 
5, 0.714207, 1, 0, 0.467606,-99) , 
10, -0.000640301, 1, 0, 0.501299,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0691129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.35102, 0, 1, 0.522525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450781,-99) , 
9, -3.56346, 1, 0, 0.470811,-99) , 
5, -0.428569, 0, 0, 0.511504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469041,-99) , 
8, 1.86178, 0, 0, 0.484497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26197,-99) , 
5, 0.809439, 1, 0, 0.465678,-99) , 
10, 0.0908633, 1, 0, 0.496958,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0446888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353518,-99) , 
8, -1.28313, 0, 0, 0.501056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317802,-99) , 
8, -1.31812, 1, 0, 0.452314,-99) , 
10, -2.28667, 0, 0, 0.497249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396994,-99) , 
4, 0.998572, 0, 0, 0.494636,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0285551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475074,-99) , 
8, 1.13594, 1, 0, 0.499044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424469,-99) , 
2, 0.210965, 1, 0, 0.496195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394719,-99) , 
8, 2.4284, 1, 0, 0.49348,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.040739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491472,-99) , 
9, -1.49674, 0, 0, 0.496918,-99) , 
NN(
0, 
0, 
-1, -0.0479606, 1, -1, 0.456194,-99) , 
10, 1.01036, 1, 0, 0.490901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388298,-99) , 
10, -2.83539, 0, 0, 0.487823,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0565584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.04578, 0, 1, 0.557519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473298,-99) , 
5, -0.855065, 1, 0, 0.503786,-99) , 
5, -0.619286, 0, 0, 0.532512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479204,-99) , 
5, 0.523735, 0, 0, 0.496585,-99) , 
NN(
0, 
0, 
-1, -0.333414, 1, -1, 0.442817,-99) , 
10, 1.02362, 1, 0, 0.489976,-99) , 
1, -0.00445233, 1, 0, 0.495484,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0227734);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.88307, 0, -1, 0.488615,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0495657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483763,-99) , 
10, -0.12806, 1, 0, 0.506469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426338,-99) , 
10, -2.63105, 0, 0, 0.502923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395973,-99) , 
2, 0.21457, 1, 0, 0.498796,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0308671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489564,-99) , 
0, 0.497138, 1, 0, 0.498457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425129,-99) , 
1, 0.0121806, 1, 0, 0.496209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399193,-99) , 
4, 0.998572, 0, 0, 0.493641,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0353448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489549,-99) , 
5, 0.360515, 1, 0, 0.505704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43602,-99) , 
4, 0.999525, 0, 0, 0.502863,-99) , 
NN(
0, 
0, 
-1, 0.721388, 1, -1, 0.440942,-99) , 
5, 0.904723, 1, 0, 0.49924,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.045913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714438, 0, 1, 0.527937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491363,-99) , 
8, -0.709949, 1, 0, 0.503619,-99) , 
5, 0.142712, 1, 0, 0.516112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478946,-99) , 
5, -0.809534, 1, 0, 0.484103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434905,-99) , 
0, 0.504756, 1, 0, 0.480587,-99) , 
1, 0.000160057, 0, 0, 0.49792,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0254711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.78429, 1, 1, 0.506415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431306,-99) , 
2, 0.210965, 1, 0, 0.503833,-99) , 
NN(
0, 
0, 
-1, 0.945487, 1, -1, 0.417463,-99) , 
5, 0.904672, 1, 0, 0.498957,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.041645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82466, 0, 1, 0.522585,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.483945,-99) , 
1, -0.00102428, 1, 0, 0.49832,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.444146,-99) , 
10, 1.82347, 1, 0, 0.494947,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0427459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485407,-99) , 
9, -2.7424, 0, 0, 0.500876,-99) , 
4, 0.999048, 1, 0, 0.503659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453123,-99) , 
5, -0.396863, 0, 0, 0.490094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410243,-99) , 
5, 0.809431, 1, 0, 0.475999,-99) , 
3, 4.42856, 1, 0, 0.498067,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0576932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462592,-99) , 
8, 0.363491, 0, 0, 0.562586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492317,-99) , 
1, -0.0058824, 1, 0, 0.497683,-99) , 
9, -1.95649, 0, 0, 0.503716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462635,-99) , 
8, 1.85848, 0, 0, 0.488867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325053,-99) , 
5, 0.428398, 1, 0, 0.461154,-99) , 
10, 0.676775, 1, 0, 0.495716,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0323647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490879,-99) , 
8, -0.42756, 0, 0, 0.545952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495583,-99) , 
2, 0.0316657, 0, 0, 0.504004,-99) , 
1, 0.00592662, 0, 0, 0.507735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436906,-99) , 
2, -0.213101, 0, 0, 0.50479,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0766137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495917,-99) , 
8, 0.355523, 0, 0, 0.581833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489049,-99) , 
1, 0.00195028, 0, 0, 0.511996,-99) , 
9, -1.88311, 0, 0, 0.517236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465883,-99) , 
8, 1.29993, 0, 0, 0.495088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323433,-99) , 
5, 0.237633, 1, 0, 0.461865,-99) , 
10, 0.6674, 1, 0, 0.506578,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0718892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.12913, 1, 1, 0.580537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463609,-99) , 
8, -0.42756, 0, 0, 0.522154,-99) , 
5, -0.523851, 0, 0, 0.55741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464118,-99) , 
8, -0.713965, 0, 0, 0.534288,-99) , 
NN(
0, 
0, 
-1, 0.765521, 1, -1, 0.480789,-99) , 
5, -0.809532, 1, 0, 0.488759,-99) , 
1, 0.00236311, 0, 0, 0.507251,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0498106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00445233, 1, 1, 0.516142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393794,-99) , 
10, 2.41533, 1, 0, 0.487355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275802,-99) , 
5, -0.143023, 1, 0, 0.448377,-99) , 
10, 0.939963, 1, 0, 0.506132,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0349535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.518156,-99) , 
NN(
0, 
0, 
-1, -1.57064, 0, -1, 0.488807,-99) , 
5, -0.428598, 0, 0, 0.50789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431215,-99) , 
3, 8.84932, 1, 0, 0.505362,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0350169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437297,-99) , 
8, -1.57236, 0, 0, 0.515604,-99) , 
NN(
0, 
0, 
-1, 0.731377, 1, -1, 0.491572,-99) , 
5, 0.142839, 1, 0, 0.503925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442307,-99) , 
2, -0.210167, 0, 0, 0.501443,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0387733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619229, 0, 1, 0.557854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450024,-99) , 
10, -2.60325, 0, 0, 0.505891,-99) , 
1, -0.00445233, 1, 0, 0.511957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535949,-99) , 
NN(
0, 
0, 
-1, -0.904817, 1, -1, 0.440226,-99) , 
0, 0.500945, 0, 0, 0.472401,-99) , 
10, 1.46138, 1, 0, 0.508523,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0279729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.73783, 0, 1, 0.508765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383666,-99) , 
5, 0.0474919, 1, 0, 0.477547,-99) , 
10, 0.744173, 1, 0, 0.503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419923,-99) , 
3, 8.97269, 1, 0, 0.500443,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0382614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494249,-99) , 
5, 0.618967, 0, 0, 0.506003,-99) , 
NN(
0, 
0, 
-1, -0.619151, 1, -1, 0.458743,-99) , 
10, 1.12319, 1, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441735,-99) , 
10, -2.66864, 0, 0, 0.497632,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0821125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
8, 0.0500162, 0, 0, 0.569961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46791,-99) , 
8, -0.557472, 1, 0, 0.498994,-99) , 
9, -3.11551, 0, 0, 0.513123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47474,-99) , 
1, 0.00458981, 0, 0, 0.4867,-99) , 
NN(
0, 
0, 
-1, 0.454469, 1, -1, 0.415078,-99) , 
5, 0.714199, 1, 0, 0.475424,-99) , 
10, -0.526386, 1, 0, 0.494821,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0278523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4943, 0, 1, 0.51025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374309,-99) , 
5, 0.714077, 1, 0, 0.487848,-99) , 
10, 0.0908633, 1, 0, 0.503191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408218,-99) , 
4, 0.998572, 0, 0, 0.500774,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0237309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493479,-99) , 
9, -1.67914, 0, 0, 0.497642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439969,-99) , 
2, 0.218354, 1, 0, 0.495554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419381,-99) , 
8, 2.42886, 1, 0, 0.493589,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0374167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.54268, 0, 1, 0.517206,-99) , 
NN(
0, 
0, 
-1, 0.714204, 1, -1, 0.48395,-99) , 
10, 0.0324612, 1, 0, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434236,-99) , 
10, -2.6728, 0, 0, 0.503043,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0612679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0615643, 0, 1, 0.535637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482836,-99) , 
9, -2.15782, 0, 0, 0.492705,-99) , 
1, -0.00231699, 1, 0, 0.503027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482594,-99) , 
7, -951.286, 0, 0, 0.50681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32929,-99) , 
5, -0.143352, 1, 0, 0.46955,-99) , 
10, 0.814163, 1, 0, 0.497471,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0381968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461895,-99) , 
0, 0.504755, 1, 0, 0.509061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43572,-99) , 
2, 0.213718, 1, 0, 0.506548,-99) , 
NN(
0, 
0, 
-1, -0.951314, 1, -1, 0.431881,-99) , 
5, 0.904724, 1, 0, 0.502398,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0467576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0545679, 1, 1, 0.606345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474051,-99) , 
0, 0.498092, 1, 0, 0.498864,-99) , 
5, -0.524808, 0, 0, 0.551777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491642,-99) , 
9, -1.88311, 0, 0, 0.496762,-99) , 
NN(
0, 
0, 
-1, -0.142961, 1, -1, 0.460702,-99) , 
10, 0.657074, 1, 0, 0.490416,-99) , 
1, 0.00458981, 0, 0, 0.498437,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0204969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16641, 1, 1, 0.505791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430177,-99) , 
10, -2.69326, 0, 0, 0.502811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447182,-99) , 
10, 2.12943, 1, 0, 0.500395,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0232482);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.68563, 0, 1, 0.558186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44609,-99) , 
10, -1.85894, 0, 0, 0.49784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416131,-99) , 
8, -1.57059, 0, 0, 0.495357,-99) , 
9, -4.68363, 1, 0, 0.49882,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0340876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.21498, 0, 1, 0.525619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430061,-99) , 
5, -0.0478961, 1, 0, 0.490471,-99) , 
10, 0.611912, 1, 0, 0.518258,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.491044,-99) , 
1, 0.000160057, 0, 0, 0.504143,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0745342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465464,-99) , 
10, -2.58441, 0, 0, 0.565629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323876,-99) , 
10, -1.79283, 0, 0, 0.500027,-99) , 
8, -0.709869, 1, 0, 0.509914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490474,-99) , 
8, 0.877007, 0, 0, 0.507398,-99) , 
NN(
0, 
0, 
-1, -1.43997, 1, -1, 0.413059,-99) , 
8, -0.714588, 0, 0, 0.485093,-99) , 
5, -0.333365, 0, 0, 0.500774,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0531767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399533,-99) , 
10, -2.04307, 1, 0, 0.539172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48579,-99) , 
5, -0.904732, 1, 0, 0.491186,-99) , 
8, -1.28421, 1, 0, 0.494817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42726,-99) , 
2, -0.213015, 0, 0, 0.491918,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0516349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397615,-99) , 
10, 0.0743498, 1, 0, 0.506858,-99) , 
9, -2.13026, 0, 0, 0.510915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482111,-99) , 
8, 2.14333, 0, 0, 0.494973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324462,-99) , 
5, 0.713755, 1, 0, 0.475324,-99) , 
10, 0.320219, 1, 0, 0.501575,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.020345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445009,-99) , 
10, 2.01494, 1, 0, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431176,-99) , 
1, 0.0103564, 1, 0, 0.497558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422206,-99) , 
3, 8.80985, 1, 0, 0.494988,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0225724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497629,-99) , 
8, -0.91818, 1, 0, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408337,-99) , 
8, -1.57132, 0, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420287,-99) , 
10, -2.82691, 0, 0, 0.497312,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0244308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57911, 0, 1, 0.506224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34294,-99) , 
5, -0.238636, 1, 0, 0.475571,-99) , 
10, 0.98394, 1, 0, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423315,-99) , 
0, 0.489519, 0, 0, 0.499571,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.030805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436743,-99) , 
8, -1.28507, 0, 0, 0.505327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459356,-99) , 
10, -2.474, 0, 0, 0.502854,-99) , 
NN(
0, 
0, 
-1, 0.721388, 1, -1, 0.436979,-99) , 
5, 0.904671, 1, 0, 0.499059,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0345058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.864326, 1, 1, 0.525899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42093,-99) , 
4, 0.999905, 0, 0, 0.494515,-99) , 
5, 0.619017, 0, 0, 0.504455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4427,-99) , 
0, 0.495235, 0, 0, 0.493399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391677,-99) , 
5, 0.428274, 1, 0, 0.476442,-99) , 
10, 0.711346, 1, 0, 0.499318,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0535167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428625, 0, 1, 0.534914,-99) , 
NN(
0, 
0, 
-1, 0.498083, 1, -1, 0.470634,-99) , 
10, 0.78428, 1, 0, 0.521594,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.475733,-99) , 
1, 0.00236311, 0, 0, 0.487638,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0461062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709949, 1, 1, 0.542177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444799,-99) , 
2, 0.0114676, 1, 0, 0.490056,-99) , 
5, -0.619118, 0, 0, 0.52363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486043,-99) , 
5, -0.909288, 1, 0, 0.489446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441449,-99) , 
5, 0.904531, 1, 0, 0.486236,-99) , 
1, 0.00236311, 0, 0, 0.496163,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0552371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.698005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482554,-99) , 
8, 0.386909, 0, 0, 0.5833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466973,-99) , 
8, 0.199603, 1, 0, 0.502202,-99) , 
9, -2.79866, 0, 0, 0.512729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43074,-99) , 
8, -0.426568, 0, 0, 0.498863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405552,-99) , 
5, 0.809437, 1, 0, 0.489478,-99) , 
10, -0.306395, 1, 0, 0.502789,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0184625);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.215414, 1, -1, 0.49077,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0559855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476899,-99) , 
10, 0.309729, 1, 0, 0.500689,-99) , 
NN(
0, 
0, 
-1, -2.28466, 0, -1, 0.476157,-99) , 
9, -2.37066, 0, 0, 0.485206,-99) , 
9, -4.74947, 1, 0, 0.487598,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0296491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457724,-99) , 
0, 0.505709, 1, 0, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446332,-99) , 
8, -1.28565, 0, 0, 0.505172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45619,-99) , 
10, -2.55987, 0, 0, 0.502822,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0342558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493441,-99) , 
2, 0.0302917, 0, 0, 0.501832,-99) , 
4, 0.999048, 1, 0, 0.505571,-99) , 
NN(
0, 
0, 
-1, -1.96577, 0, -1, 0.476394,-99) , 
3, 4.3389, 1, 0, 0.499598,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0529768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485331,-99) , 
5, 0.0475849, 1, 0, 0.515589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480718,-99) , 
1, -0.00166954, 1, 0, 0.495499,-99) , 
8, 0.715884, 0, 0, 0.502376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453733,-99) , 
4, 0.999049, 0, 0, 0.500555,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0336066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495221,-99) , 
10, -0.373392, 1, 0, 0.506968,-99) , 
NN(
0, 
0, 
-1, 1.29553, 1, -1, 0.442991,-99) , 
10, 1.84139, 1, 0, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413517,-99) , 
2, -0.21276, 0, 0, 0.499325,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0306659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46485,-99) , 
8, -1.28313, 0, 0, 0.507193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450527,-99) , 
10, -2.68844, 0, 0, 0.50502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37442,-99) , 
1, 0.0121806, 1, 0, 0.501232,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0180802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
8, -0.699835, 1, 0, 0.50285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429374,-99) , 
8, -1.57058, 0, 0, 0.500798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430191,-99) , 
10, -2.82568, 0, 0, 0.498831,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0213115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49933,-99) , 
2, 0.0287111, 0, 0, 0.505286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416134,-99) , 
2, -0.274289, 0, 0, 0.502776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435982,-99) , 
2, 0.215158, 1, 0, 0.50018,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0308076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490517,-99) , 
5, -0.714373, 0, 0, 0.546728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49623,-99) , 
5, -0.809474, 1, 0, 0.500834,-99) , 
9, -1.45079, 0, 0, 0.504417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419028,-99) , 
5, -0.904775, 1, 0, 0.46847,-99) , 
10, 1.34586, 1, 0, 0.500928,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0356807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491446,-99) , 
4, 0.99999, 0, 0, 0.506633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380688,-99) , 
10, -0.407117, 1, 0, 0.471871,-99) , 
4, 0.999796, 0, 0, 0.504001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436271,-99) , 
4, 0.998572, 0, 0, 0.502252,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0305142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476676,-99) , 
8, 0.714564, 0, 0, 0.545827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429338,-99) , 
10, 0.993137, 1, 0, 0.503793,-99) , 
9, -1.10554, 0, 0, 0.506354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390091,-99) , 
5, -0.904827, 1, 0, 0.454822,-99) , 
10, 1.64705, 1, 0, 0.502634,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0529116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.619278, 0, 1, 0.54967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439962,-99) , 
10, 0.3024, 1, 0, 0.510515,-99) , 
NN(
0, 
0, 
-1, -0.998944, 0, -1, 0.47988,-99) , 
5, 0.333146, 0, 0, 0.49364,-99) , 
1, -0.00464865, 1, 0, 0.500196,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0327335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444704,-99) , 
10, 2.24207, 1, 0, 0.509771,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.475618,-99) , 
3, 4.55623, 1, 0, 0.503117,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0217294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496804,-99) , 
1, -0.00594206, 1, 0, 0.499955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428046,-99) , 
10, 2.32994, 1, 0, 0.497495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418358,-99) , 
10, -2.71692, 0, 0, 0.494513,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.048255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462497,-99) , 
10, -1.58525, 0, 0, 0.504439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371594,-99) , 
9, -3.78847, 1, 0, 0.471643,-99) , 
8, -0.996935, 0, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434083,-99) , 
10, -2.66864, 0, 0, 0.498635,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0830834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467838,-99) , 
4, 0.999995, 0, 0, 0.514243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363766,-99) , 
4, 0.999905, 0, 0, 0.506323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480197,-99) , 
8, -0.223154, 1, 0, 0.498004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440032,-99) , 
10, -2.17693, 0, 0, 0.49007,-99) , 
5, 0.428491, 1, 0, 0.500084,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0488456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.29281, 0, 1, 0.587001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434947,-99) , 
5, 0.618572, 1, 0, 0.533655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489622,-99) , 
9, -2.51749, 0, 0, 0.497526,-99) , 
NN(
0, 
0, 
-1, -1.93811, 0, -1, 0.467722,-99) , 
10, 0.168255, 1, 0, 0.490827,-99) , 
8, 1.85731, 0, 0, 0.494686,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0333613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619286, 0, 1, 0.55192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495613,-99) , 
2, -0.0709862, 1, 0, 0.501234,-99) , 
1, -0.00445233, 1, 0, 0.507347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394665,-99) , 
5, -0.904768, 1, 0, 0.458579,-99) , 
10, 1.59571, 1, 0, 0.503553,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0456848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450673,-99) , 
4, 0.999525, 0, 0, 0.525332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492791,-99) , 
5, 0.713789, 0, 0, 0.499412,-99) , 
0, 0.499042, 1, 0, 0.51417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454135,-99) , 
2, 0.21457, 1, 0, 0.511896,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0576695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489642,-99) , 
1, 0.00156451, 0, 0, 0.505802,-99) , 
8, -1.55822, 1, 0, 0.510715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481866,-99) , 
5, -0.836742, 1, 0, 0.511188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397323,-99) , 
8, -1.00024, 0, 0, 0.491539,-99) , 
5, -0.619045, 0, 0, 0.505622,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0330905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -5.08254, 1, 1, 0.550607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420726,-99) , 
10, -2.16983, 0, 0, 0.50535,-99) , 
9, -4.6983, 1, 0, 0.507901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443579,-99) , 
10, 2.00348, 1, 0, 0.504714,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0470387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385791,-99) , 
10, -2.49575, 0, 0, 0.506806,-99) , 
8, -1.59354, 1, 0, 0.535057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458477,-99) , 
10, 1.45731, 1, 0, 0.501911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381655,-99) , 
8, -1.28566, 0, 0, 0.497318,-99) , 
9, -4.08019, 1, 0, 0.502706,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0324113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27782, 1, 1, 0.510483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426472,-99) , 
8, -0.793695, 0, 0, 0.485795,-99) , 
5, -0.333346, 0, 0, 0.502948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446949,-99) , 
5, -0.904761, 1, 0, 0.47494,-99) , 
10, 1.33544, 1, 0, 0.500159,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0161639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79329, 1, 1, 0.549266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442862,-99) , 
4, 0.999774, 0, 0, 0.50018,-99) , 
4, 0.999524, 1, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450117,-99) , 
3, 8.82294, 1, 0, 0.501229,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0352623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.529337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474451,-99) , 
5, -0.0477398, 0, 0, 0.492788,-99) , 
1, 0.00418771, 0, 0, 0.498182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424817,-99) , 
10, 2.31593, 1, 0, 0.495774,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0262541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47753,-99) , 
8, -0.434243, 0, 0, 0.528983,-99) , 
NN(
0, 
0, 
-1, 0.491423, 0, -1, 0.492987,-99) , 
1, 0.00498554, 0, 0, 0.497058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449647,-99) , 
10, 1.98267, 1, 0, 0.494673,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.041566);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481721,-99) , 
5, -0.523805, 0, 0, 0.505671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421116,-99) , 
1, 0.00904124, 1, 0, 0.50191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440229,-99) , 
10, 2.3299, 1, 0, 0.492856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374677,-99) , 
5, -0.333414, 1, 0, 0.470725,-99) , 
10, 1.02362, 1, 0, 0.497695,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0433063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391326,-99) , 
10, -1.93027, 1, 0, 0.531915,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290465,-99) , 
8, -0.722405, 1, 0, 0.431642,-99) , 
10, -1.8518, 0, 0, 0.489128,-99) , 
8, -1.28425, 1, 0, 0.492329,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0257965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17452, 1, 1, 0.531443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495179,-99) , 
8, -1.55823, 1, 0, 0.498954,-99) , 
5, -0.809532, 1, 0, 0.503342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454074,-99) , 
10, 2.07892, 1, 0, 0.501162,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0519666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437123,-99) , 
9, -3.82199, 1, 0, 0.563094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475481,-99) , 
10, 0.826823, 1, 0, 0.505025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310788,-99) , 
10, -2.31609, 0, 0, 0.498907,-99) , 
8, -1.28562, 1, 0, 0.503793,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0520368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.567958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418863,-99) , 
10, 0.803042, 1, 0, 0.494423,-99) , 
5, -0.23809, 1, 0, 0.517156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499103,-99) , 
9, -2.89459, 0, 0, 0.514603,-99) , 
NN(
0, 
0, 
-1, -0.714321, 1, -1, 0.471556,-99) , 
5, -0.333417, 0, 0, 0.497213,-99) , 
8, 0.715741, 0, 0, 0.504207,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0198899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496465,-99) , 
5, -0.809562, 1, 0, 0.500377,-99) , 
8, 2.42849, 0, 0, 0.502282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437601,-99) , 
2, 0.214776, 1, 0, 0.499935,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0398356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497276,-99) , 
5, 0.237948, 0, 0, 0.523567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481151,-99) , 
5, 0.0475983, 1, 0, 0.495905,-99) , 
2, -0.0708144, 1, 0, 0.500395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39309,-99) , 
1, 0.0121806, 1, 0, 0.497517,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0184592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904723, 0, 1, 0.505052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459081,-99) , 
3, 8.95508, 1, 0, 0.503656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390114,-99) , 
10, -2.83539, 0, 0, 0.500278,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0353375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18247, 0, 1, 0.587378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484524,-99) , 
10, 1.28311, 1, 0, 0.548658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497302,-99) , 
9, -2.9125, 0, 0, 0.507065,-99) , 
NN(
0, 
0, 
-1, -2.47182, 0, -1, 0.483833,-99) , 
10, -0.429397, 1, 0, 0.497521,-99) , 
8, 1.85731, 0, 0, 0.50205,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0493154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.95972, 1, 1, 0.522631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490009,-99) , 
8, -1.28061, 1, 0, 0.498322,-99) , 
5, 0.0475692, 1, 0, 0.509816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476893,-99) , 
5, 0.61859, 0, 0, 0.507757,-99) , 
NN(
0, 
0, 
-1, 1.28968, 0, -1, 0.427381,-99) , 
10, -0.173075, 1, 0, 0.478345,-99) , 
2, 0.071981, 1, 0, 0.504892,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0254689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473773,-99) , 
8, -0.43213, 0, 0, 0.537456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499215,-99) , 
8, -1.28421, 1, 0, 0.503463,-99) , 
5, -0.904765, 1, 0, 0.506647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392149,-99) , 
1, 0.0119697, 1, 0, 0.503157,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0330191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
4, 0.999977, 1, 0, 0.506924,-99) , 
4, 0.999524, 1, 0, 0.510515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478729,-99) , 
9, -2.14197, 0, 0, 0.493115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425646,-99) , 
5, 0.80915, 1, 0, 0.482126,-99) , 
3, 4.51103, 1, 0, 0.50506,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0481644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48039,-99) , 
10, -1.64693, 0, 0, 0.513646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320544,-99) , 
9, -2.93634, 1, 0, 0.485687,-99) , 
8, -0.999913, 0, 0, 0.510086,-99) , 
NN(
0, 
0, 
-1, 0.529212, 1, -1, 0.465104,-99) , 
5, 0.904475, 1, 0, 0.507602,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0705252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0599151, 0, 1, 0.585639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448924,-99) , 
8, -0.0990314, 1, 0, 0.511356,-99) , 
9, -3.13322, 0, 0, 0.522546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488072,-99) , 
5, -0.809502, 1, 0, 0.498481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403092,-99) , 
8, -0.712, 0, 0, 0.492628,-99) , 
10, -0.718658, 1, 0, 0.506135,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0429415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464018,-99) , 
10, 2.09167, 1, 0, 0.514667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424205,-99) , 
8, -1.57057, 0, 0, 0.512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419569,-99) , 
10, -2.869, 0, 0, 0.509456,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0276603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496516,-99) , 
9, -1.63776, 0, 0, 0.49998,-99) , 
8, 2.14011, 0, 0, 0.502771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435955,-99) , 
5, -0.904754, 1, 0, 0.487485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38538,-99) , 
2, -0.0176864, 0, 0, 0.454817,-99) , 
10, 1.4718, 1, 0, 0.498739,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0588803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411652,-99) , 
10, -2.00921, 0, 0, 0.507516,-99) , 
8, -1.27714, 1, 0, 0.512672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443311,-99) , 
2, 0.0819481, 1, 0, 0.504043,-99) , 
NN(
0, 
0, 
-1, -1.40504, 1, -1, 0.422961,-99) , 
8, -0.997156, 0, 0, 0.490406,-99) , 
5, -0.333364, 0, 0, 0.50456,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0380928);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49507,-99) , 
5, -0.142945, 0, 0, 0.513825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476903,-99) , 
5, 0.523629, 0, 0, 0.48691,-99) , 
1, 0.00236311, 0, 0, 0.494075,-99) , 
8, 2.4284, 0, 0, 0.496634,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0455958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485933,-99) , 
9, -2.75501, 0, 0, 0.494213,-99) , 
4, 0.999524, 1, 0, 0.499551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45261,-99) , 
9, -1.95669, 0, 0, 0.488855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338288,-99) , 
5, 0.808894, 1, 0, 0.476526,-99) , 
10, 0.00769318, 1, 0, 0.492026,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0400942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485701,-99) , 
3, 4.47075, 1, 0, 0.519785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482547,-99) , 
2, -0.0154213, 1, 0, 0.495466,-99) , 
2, 0.0312061, 0, 0, 0.501825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446936,-99) , 
2, -0.21361, 0, 0, 0.499547,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0308287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429543,-99) , 
9, -3.77493, 1, 0, 0.535303,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490423,-99) , 
8, -1.28568, 1, 0, 0.493805,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0317662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489957,-99) , 
10, 0.262541, 1, 0, 0.507155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445718,-99) , 
10, 2.01494, 1, 0, 0.504194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440032,-99) , 
2, -0.217681, 0, 0, 0.501606,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.020961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14282, 0, 1, 0.506001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384051,-99) , 
10, -0.508934, 1, 0, 0.462598,-99) , 
4, 0.999796, 0, 0, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437099,-99) , 
4, 0.998572, 0, 0, 0.501175,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0413058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480989,-99) , 
8, 1.17011, 0, 0, 0.544827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494242,-99) , 
5, -0.809288, 1, 0, 0.498836,-99) , 
9, -1.97391, 0, 0, 0.503436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472307,-99) , 
5, -0.660171, 0, 0, 0.48838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399134,-99) , 
5, 0.428398, 1, 0, 0.474382,-99) , 
10, 0.695532, 1, 0, 0.498102,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0381511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416033,-99) , 
10, -2.363, 0, 0, 0.508965,-99) , 
8, -1.5901, 1, 0, 0.527634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443168,-99) , 
4, 0.999048, 0, 0, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422563,-99) , 
8, -1.28489, 0, 0, 0.500792,-99) , 
9, -4.08019, 1, 0, 0.504686,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0423497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09444, 1, 1, 0.563371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434895,-99) , 
10, -0.954521, 1, 0, 0.492263,-99) , 
8, 0.141771, 0, 0, 0.528358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47742,-99) , 
10, -0.193471, 1, 0, 0.496277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42809,-99) , 
10, -2.71692, 0, 0, 0.493695,-99) , 
1, -0.00464865, 1, 0, 0.49791,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0354858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492301,-99) , 
8, 1.28559, 0, 0, 0.498991,-99) , 
4, 0.999526, 1, 0, 0.502018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45934,-99) , 
5, -0.0523393, 0, 0, 0.487115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422628,-99) , 
5, 0.809151, 1, 0, 0.476755,-99) , 
3, 4.42151, 1, 0, 0.497008,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0229841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56364, 0, 1, 0.508248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410064,-99) , 
5, 0.809625, 0, 0, 0.453385,-99) , 
4, 0.999728, 0, 0, 0.505053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458108,-99) , 
4, 0.998572, 0, 0, 0.503809,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0356456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443921,-99) , 
7, -951.287, 0, 0, 0.523907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419915,-99) , 
8, -0.874196, 0, 0, 0.499325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322615,-99) , 
8, -0.641559, 1, 0, 0.448674,-99) , 
10, -1.78542, 0, 0, 0.493776,-99) , 
8, -1.28313, 1, 0, 0.496133,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0180047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580588,-99) , 
NN(
0, 
0, 
-1, 0.504755, 1, -1, 0.496656,-99) , 
8, 2.14108, 0, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, -0.904761, 1, -1, 0.463759,-99) , 
10, 1.34586, 1, 0, 0.496029,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0226442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.01935, 1, 1, 0.516734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549594,-99) , 
NN(
0, 
0, 
-1, -2.06992, 0, -1, 0.492323,-99) , 
8, -1.56816, 1, 0, 0.494694,-99) , 
1, 0.00236311, 0, 0, 0.500437,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0558494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464353,-99) , 
5, 0.763035, 1, 0, 0.531619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467733,-99) , 
8, 0.144047, 0, 0, 0.494813,-99) , 
5, -0.238583, 0, 0, 0.513744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452093,-99) , 
10, -1.68552, 1, 0, 0.515309,-99) , 
NN(
0, 
0, 
-1, -1.33849, 0, -1, 0.482129,-99) , 
8, -0.713657, 1, 0, 0.487924,-99) , 
1, -0.00178541, 1, 0, 0.49581,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.032912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713242, 0, 1, 0.538298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496118,-99) , 
5, 0.809437, 0, 0, 0.502188,-99) , 
1, -0.00253732, 1, 0, 0.510519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462919,-99) , 
10, 2.07892, 1, 0, 0.508388,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.053349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476036,-99) , 
8, 0.300203, 0, 0, 0.552129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494304,-99) , 
8, -1.25485, 1, 0, 0.501138,-99) , 
9, -2.79866, 0, 0, 0.509815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482684,-99) , 
10, 0.579058, 1, 0, 0.500989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404317,-99) , 
9, -2.52584, 1, 0, 0.440858,-99) , 
9, -2.15135, 0, 0, 0.485332,-99) , 
10, -0.147352, 1, 0, 0.500656,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0301033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.38487, 0, 1, 0.515262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389441,-99) , 
5, 0.809437, 1, 0, 0.492471,-99) , 
10, 0.0396442, 1, 0, 0.507497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451233,-99) , 
10, -2.66864, 0, 0, 0.50539,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0488077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492274,-99) , 
5, -0.0475726, 0, 0, 0.568257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398426,-99) , 
10, -0.161851, 1, 0, 0.502315,-99) , 
9, -2.32495, 0, 0, 0.507681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490124,-99) , 
10, 0.50128, 1, 0, 0.503309,-99) , 
NN(
0, 
0, 
-1, 1.69688, 0, -1, 0.429705,-99) , 
9, -1.9315, 0, 0, 0.485002,-99) , 
10, 0.0908633, 1, 0, 0.500625,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0438868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498099, 0, 1, 0.588801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464838,-99) , 
9, -0.228472, 0, 0, 0.493696,-99) , 
10, 1.12052, 1, 0, 0.523959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486713,-99) , 
8, -1.28238, 1, 0, 0.489881,-99) , 
5, -0.809517, 1, 0, 0.493674,-99) , 
9, -1.46367, 0, 0, 0.498834,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0455165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5099, 1, 1, 0.550411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453911,-99) , 
8, -0.136036, 0, 0, 0.53358,-99) , 
NN(
NN(
0, 
0, 
-1, -0.523776, 0, 1, 0.549846,-99) , 
NN(
0, 
0, 
-1, -0.158946, 1, -1, 0.4881,-99) , 
1, -0.00345402, 1, 0, 0.497973,-99) , 
9, -1.28043, 0, 0, 0.503338,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0266832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.32095, 1, 1, 0.510965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466287,-99) , 
10, -2.6375, 0, 0, 0.509154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439258,-99) , 
10, 2.50887, 1, 0, 0.507077,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0221565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497039,-99) , 
7, -951.286, 1, 0, 0.50497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461804,-99) , 
10, 2.20619, 1, 0, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452149,-99) , 
10, -2.66864, 0, 0, 0.501156,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0196712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582057,-99) , 
NN(
NN(
0, 
0, 
-1, 1.9111, 0, 1, 0.504569,-99) , 
NN(
0, 
0, 
-1, 0.0459282, 1, -1, 0.471309,-99) , 
10, 0.953248, 1, 0, 0.500352,-99) , 
8, 2.4284, 0, 0, 0.502775,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0340475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.77947, 0, 1, 0.512872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457043,-99) , 
5, 0.0475692, 1, 0, 0.484729,-99) , 
10, -0.413885, 1, 0, 0.499572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436815,-99) , 
10, -2.55987, 0, 0, 0.496522,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0281775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451687,-99) , 
8, 0.428919, 0, 0, 0.534583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495686,-99) , 
1, -0.00690748, 1, 0, 0.498648,-99) , 
9, -1.16147, 0, 0, 0.50097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399604,-99) , 
5, -0.90481, 1, 0, 0.46478,-99) , 
10, 1.64705, 1, 0, 0.498388,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.022889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485751,-99) , 
5, 0.645624, 1, 0, 0.552887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44526,-99) , 
1, -0.00964224, 0, 0, 0.501637,-99) , 
8, 1.85703, 0, 0, 0.50496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438057,-99) , 
5, -0.904768, 1, 0, 0.470788,-99) , 
10, 1.41623, 1, 0, 0.501809,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0499594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.425609, 0, 1, 0.57621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466024,-99) , 
5, -0.904761, 1, 0, 0.49078,-99) , 
10, 1.24794, 1, 0, 0.519572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471275,-99) , 
10, -0.194425, 1, 0, 0.49621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327804,-99) , 
8, -1.34779, 1, 0, 0.451718,-99) , 
10, -2.31246, 0, 0, 0.492202,-99) , 
9, -1.39204, 0, 0, 0.496552,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0438408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483733,-99) , 
10, 1.05852, 1, 0, 0.535348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463561,-99) , 
5, -0.142841, 0, 0, 0.512093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483664,-99) , 
5, -0.809535, 1, 0, 0.487816,-99) , 
2, 0.0717919, 0, 0, 0.491517,-99) , 
8, 1.857, 0, 0, 0.495264,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0481504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.727182, 0, 1, 0.576361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47704,-99) , 
7, -951.286, 1, 0, 0.507302,-99) , 
5, -0.0471887, 1, 0, 0.530923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497949,-99) , 
2, -0.0527822, 1, 0, 0.508237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468388,-99) , 
8, 0.06145, 0, 0, 0.488983,-99) , 
5, -0.142965, 0, 0, 0.499636,-99) , 
8, 1.286, 0, 0, 0.505638,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0209508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435434,-99) , 
10, 2.27047, 1, 0, 0.500934,-99) , 
8, 2.14282, 0, 0, 0.504105,-99) , 
NN(
0, 
0, 
-1, 0.941008, 1, -1, 0.450816,-99) , 
5, 0.904725, 1, 0, 0.501282,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0374925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01799, 0, 1, 0.555888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494538,-99) , 
8, -0.837659, 1, 0, 0.50139,-99) , 
8, 1.53695, 0, 0, 0.505509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456546,-99) , 
8, 1.02251, 0, 0, 0.482893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399002,-99) , 
5, -0.047955, 1, 0, 0.465917,-99) , 
10, 0.814163, 1, 0, 0.499024,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0580552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.21729, 0, 1, 0.552657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394585,-99) , 
10, -1.67966, 0, 0, 0.497413,-99) , 
8, -0.706855, 1, 0, 0.505845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479233,-99) , 
8, 0.904898, 0, 0, 0.493077,-99) , 
NN(
0, 
0, 
-1, -1.38368, 1, -1, 0.417622,-99) , 
8, -0.999369, 0, 0, 0.480555,-99) , 
5, -0.333368, 0, 0, 0.496476,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0184928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38473, 0, 1, 0.504975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45217,-99) , 
10, 2.01494, 1, 0, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433081,-99) , 
1, 0.0103564, 1, 0, 0.499879,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.020588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498966,-99) , 
8, 2.14264, 0, 0, 0.502016,-99) , 
NN(
0, 
0, 
-1, 0.618859, 0, -1, 0.452229,-99) , 
4, 0.999864, 0, 0, 0.497285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432261,-99) , 
4, 0.999048, 0, 0, 0.494943,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0246088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467646,-99) , 
10, 0.915168, 1, 0, 0.502447,-99) , 
9, -0.437295, 0, 0, 0.504535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435234,-99) , 
10, 2.2618, 1, 0, 0.501876,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0212198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498717,-99) , 
8, 2.14292, 0, 0, 0.501822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395477,-99) , 
5, 0.809031, 0, 0, 0.441859,-99) , 
4, 0.999774, 0, 0, 0.498192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404331,-99) , 
4, 0.999048, 0, 0, 0.49508,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0382204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495371,-99) , 
2, 0.00200629, 0, 0, 0.525129,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.461137,-99) , 
2, -0.0716577, 0, 0, 0.515061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537346,-99) , 
NN(
0, 
0, 
-1, -2.16354, 0, -1, 0.487727,-99) , 
8, -1.5663, 1, 0, 0.489956,-99) , 
1, -0.00141849, 1, 0, 0.498353,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0280017);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497097,-99) , 
9, -2.70133, 0, 0, 0.506043,-99) , 
NN(
0, 
0, 
-1, -1.43101, 0, -1, 0.478025,-99) , 
10, 0.689319, 1, 0, 0.50151,-99) , 
8, 2.42852, 0, 0, 0.503885,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.047784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237457, 1, 1, 0.514074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393203,-99) , 
7, -951.286, 0, 0, 0.457557,-99) , 
8, -0.999277, 0, 0, 0.510336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375653,-99) , 
8, -1.32864, 1, 0, 0.474209,-99) , 
10, -2.25995, 0, 0, 0.507517,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0212426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499188,-99) , 
8, 1.28612, 0, 0, 0.504578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44038,-99) , 
4, 0.999728, 0, 0, 0.501503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427839,-99) , 
4, 0.999048, 0, 0, 0.499017,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0206036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16169, 1, 1, 0.50517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453512,-99) , 
10, -2.6405, 0, 0, 0.502922,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.444499,-99) , 
10, 1.68357, 1, 0, 0.498911,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0430366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38756,-99) , 
10, -2.36029, 0, 0, 0.513245,-99) , 
8, -1.43042, 1, 0, 0.533565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397866,-99) , 
4, 0.999048, 0, 0, 0.50198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402745,-99) , 
8, -1.28565, 0, 0, 0.498343,-99) , 
9, -4.05567, 1, 0, 0.503597,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0571231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75169, 0, 1, 0.53642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457433,-99) , 
5, -0.836759, 1, 0, 0.487966,-99) , 
5, -0.142965, 0, 0, 0.511963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46114,-99) , 
10, 1.67572, 1, 0, 0.504702,-99) , 
NN(
0, 
0, 
-1, -1.32091, 0, -1, 0.475705,-99) , 
5, -0.0477525, 1, 0, 0.487242,-99) , 
8, -0.141885, 1, 0, 0.495978,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.046066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479617,-99) , 
9, -2.13713, 0, 0, 0.529464,-99) , 
NN(
0, 
0, 
-1, 1.95182, 1, -1, 0.459616,-99) , 
10, 1.24312, 1, 0, 0.51099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547509,-99) , 
NN(
0, 
0, 
-1, 0.99982, 0, -1, 0.483271,-99) , 
4, 0.999051, 1, 0, 0.485492,-99) , 
8, 1.28585, 0, 0, 0.490338,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0445487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480295,-99) , 
3, 2.29706, 1, 0, 0.504811,-99) , 
5, 0.618584, 0, 0, 0.525018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44929,-99) , 
10, 2.32884, 1, 0, 0.5217,-99) , 
NN(
0, 
0, 
-1, 0.579873, 1, -1, 0.486126,-99) , 
9, -1.26441, 0, 0, 0.491277,-99) , 
2, 0.0744248, 0, 0, 0.496323,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0520984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56169, 0, 1, 0.522963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430617,-99) , 
10, -2.83567, 0, 0, 0.518887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44691,-99) , 
8, 0.148993, 0, 0, 0.501327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416181,-99) , 
5, 0.809439, 1, 0, 0.493766,-99) , 
10, -0.125897, 1, 0, 0.50969,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0404916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499476,-99) , 
6, 0.00364804, 0, 0, 0.518266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409186,-99) , 
6, 0.00957775, 1, 0, 0.510928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420369,-99) , 
10, 2.56797, 1, 0, 0.495062,-99) , 
NN(
0, 
0, 
-1, -0.170383, 1, -1, 0.441498,-99) , 
5, 0.619015, 1, 0, 0.484504,-99) , 
10, -0.501104, 1, 0, 0.49838,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0256001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00658236, 1, 1, 0.508403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479046,-99) , 
7, -951.286, 1, 0, 0.491114,-99) , 
0, 0.497136, 0, 0, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446348,-99) , 
10, 2.24207, 1, 0, 0.499431,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.016731);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453799,-99) , 
8, -0.997533, 0, 0, 0.497991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44166,-99) , 
10, -2.27379, 0, 0, 0.495465,-99) , 
9, -4.96331, 1, 0, 0.497485,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0708612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48372,-99) , 
10, -1.98696, 0, 0, 0.537466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436366,-99) , 
10, 0.431743, 1, 0, 0.525209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458736,-99) , 
4, 0.999994, 0, 0, 0.494359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422487,-99) , 
4, 0.999881, 0, 0, 0.489328,-99) , 
5, 0.714077, 0, 0, 0.497126,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0877078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457317,-99) , 
4, 0.999865, 0, 0, 0.508912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452013,-99) , 
4, 0.999526, 0, 0, 0.505305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309678,-99) , 
7, -0.998783, 0, 0, 0.498931,-99) , 
NN(
0, 
0, 
-1, -0.711525, 0, -1, 0.469746,-99) , 
7, -951.286, 0, 0, 0.485898,-99) , 
0, 0.497138, 1, 0, 0.493692,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0748491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485905,-99) , 
8, 0.123278, 0, 0, 0.565695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465081,-99) , 
8, -0.382374, 1, 0, 0.490906,-99) , 
9, -2.97535, 0, 0, 0.500661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474875,-99) , 
10, -0.12889, 1, 0, 0.487004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436027,-99) , 
8, 1.34206, 0, 0, 0.454291,-99) , 
9, -2.43992, 0, 0, 0.477439,-99) , 
10, -0.571821, 1, 0, 0.489038,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0371002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489336,-99) , 
9, -3.02036, 0, 0, 0.516124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479743,-99) , 
8, 0.143385, 1, 0, 0.489718,-99) , 
0, 0.499949, 0, 0, 0.496853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445778,-99) , 
5, -0.0477525, 1, 0, 0.487176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424525,-99) , 
3, 4.15258, 1, 0, 0.470421,-99) , 
0, 0.503804, 1, 0, 0.494153,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0421281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48839,-99) , 
10, -0.256072, 1, 0, 0.511867,-99) , 
8, 1.5715, 0, 0, 0.518819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489022,-99) , 
0, 0.494281, 1, 0, 0.510186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482583,-99) , 
8, -1.28568, 1, 0, 0.485566,-99) , 
2, 0.0717919, 0, 0, 0.489465,-99) , 
1, 0.00236311, 0, 0, 0.497216,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0175884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19406, 0, 1, 0.515606,-99) , 
NN(
0, 
0, 
-1, 0.809148, 1, -1, 0.496213,-99) , 
0, 0.500947, 0, 0, 0.501425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446508,-99) , 
2, -0.21361, 0, 0, 0.499265,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0403214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237376, 1, 1, 0.507495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443339,-99) , 
8, -0.999277, 0, 0, 0.503906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461733,-99) , 
10, -2.74886, 0, 0, 0.54021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32541,-99) , 
8, -0.897049, 1, 0, 0.478693,-99) , 
10, -2.01268, 0, 0, 0.50112,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0285817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548147,-99) , 
NN(
0, 
0, 
-1, -2.38011, 0, -1, 0.48817,-99) , 
9, -5.05079, 1, 0, 0.489769,-99) , 
9, 0.0832446, 0, 0, 0.492316,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0347999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463316,-99) , 
10, -2.47753, 0, 0, 0.511487,-99) , 
NN(
0, 
0, 
-1, -0.0743827, 0, -1, 0.484715,-99) , 
10, 0.676775, 1, 0, 0.506488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442469,-99) , 
0, 0.489519, 0, 0, 0.504431,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0540899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467033,-99) , 
10, -2.74273, 0, 0, 0.551422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361164,-99) , 
10, -1.77133, 0, 0, 0.492815,-99) , 
8, -0.706802, 1, 0, 0.501763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474398,-99) , 
0, 0.499994, 1, 0, 0.497571,-99) , 
NN(
0, 
0, 
-1, -0.71434, 1, -1, 0.43985,-99) , 
8, -0.427809, 0, 0, 0.478391,-99) , 
5, -0.333346, 0, 0, 0.493086,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0262486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490853,-99) , 
8, 2.14282, 0, 0, 0.493132,-99) , 
4, 0.999051, 1, 0, 0.494886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439064,-99) , 
3, 8.97226, 1, 0, 0.493231,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.021987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495084,-99) , 
3, 8.21428, 0, 0, 0.497211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454328,-99) , 
4, 0.999728, 0, 0, 0.49512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421125,-99) , 
4, 0.999048, 0, 0, 0.492619,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0565469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484688,-99) , 
6, 0.00352744, 0, 0, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428852,-99) , 
1, -0.0105848, 0, 0, 0.50102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438831,-99) , 
1, 0.0103564, 1, 0, 0.498604,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0908086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.802978, 1, 1, 0.551533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467438,-99) , 
8, -0.755202, 0, 0, 0.499311,-99) , 
8, 1.28556, 0, 0, 0.509211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492515,-99) , 
7, 0.388574, 0, 0, 0.527723,-99) , 
NN(
0, 
0, 
-1, -2.04633, 0, -1, 0.23216,-99) , 
7, -1.57014, 0, 0, 0.492869,-99) , 
7, -951.286, 1, 0, 0.500146,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0521845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486576,-99) , 
10, -1.84573, 1, 0, 0.535596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338177,-99) , 
10, -1.8318, 0, 0, 0.502581,-99) , 
8, -0.71363, 1, 0, 0.509048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41995,-99) , 
5, -0.904797, 1, 0, 0.466329,-99) , 
10, 1.33544, 1, 0, 0.504948,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0306848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474873,-99) , 
7, -951.287, 0, 0, 0.531093,-99) , 
NN(
0, 
0, 
-1, 2.29639, 1, -1, 0.488041,-99) , 
8, -1.28311, 1, 0, 0.491258,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0872287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318722,-99) , 
7, -1.28452, 0, 0, 0.506635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476988,-99) , 
5, 0.0472455, 0, 0, 0.487471,-99) , 
7, -951.286, 0, 0, 0.498149,-99) , 
8, 2.42892, 0, 0, 0.500431,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0239346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495921,-99) , 
5, -0.143509, 0, 0, 0.521796,-99) , 
NN(
0, 
0, 
-1, -1.7852, 0, -1, 0.493376,-99) , 
8, -0.711696, 1, 0, 0.498452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428405,-99) , 
3, 8.93425, 1, 0, 0.496361,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.040441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428611, 0, 1, 0.554305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431952,-99) , 
8, 1.63233, 1, 0, 0.497583,-99) , 
10, 1.5208, 1, 0, 0.520528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497544,-99) , 
9, -3.05537, 0, 0, 0.508294,-99) , 
NN(
0, 
0, 
-1, 0.715921, 0, -1, 0.478496,-99) , 
10, -0.502856, 1, 0, 0.496021,-99) , 
9, -1.17537, 0, 0, 0.499248,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0305988);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473778,-99) , 
0, 0.492376, 0, 0, 0.514071,-99) , 
NN(
0, 
0, 
-1, -0.897111, 0, -1, 0.491242,-99) , 
8, 0.10182, 1, 0, 0.501564,-99) , 
8, 2.42837, 0, 0, 0.503346,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0367156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424812,-99) , 
8, -0.711603, 0, 0, 0.508563,-99) , 
9, -2.5277, 1, 0, 0.520122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427106,-99) , 
10, -2.15752, 0, 0, 0.497268,-99) , 
8, -1.56217, 1, 0, 0.500519,-99) , 
5, -0.71429, 1, 0, 0.504879,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0405011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440981,-99) , 
8, -1.18591, 1, 0, 0.506261,-99) , 
10, -1.91804, 0, 0, 0.528752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481345,-99) , 
2, 0.0184239, 1, 0, 0.518827,-99) , 
NN(
0, 
0, 
-1, 1.02069, 1, -1, 0.492813,-99) , 
5, -0.809535, 1, 0, 0.497957,-99) , 
9, -4.08019, 1, 0, 0.5024,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0563389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.05352, 1, 1, 0.521517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377598,-99) , 
8, -0.872967, 1, 0, 0.48814,-99) , 
10, -1.90404, 0, 0, 0.516091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493055,-99) , 
10, 1.05922, 1, 0, 0.504539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406285,-99) , 
5, 0.428398, 1, 0, 0.490274,-99) , 
10, 0.676775, 1, 0, 0.51128,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0373721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0033992, 0, 1, 0.519683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452243,-99) , 
10, 1.13207, 1, 0, 0.510753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489193,-99) , 
5, 0.428662, 1, 0, 0.522342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483422,-99) , 
8, -0.918404, 1, 0, 0.487289,-99) , 
8, 1.85687, 0, 0, 0.490156,-99) , 
0, 0.500948, 0, 0, 0.495606,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0218775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487572,-99) , 
5, -0.0655919, 0, 0, 0.529688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480108,-99) , 
3, 1.32758, 0, 0, 0.495558,-99) , 
3, 0.537431, 1, 0, 0.498227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435666,-99) , 
3, 8.83364, 1, 0, 0.496222,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0333314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4742,-99) , 
10, 0.452856, 1, 0, 0.526492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463404,-99) , 
0, 0.495373, 0, 0, 0.497153,-99) , 
0, 0.493332, 1, 0, 0.501186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471469,-99) , 
5, 0.427989, 0, 0, 0.494492,-99) , 
NN(
0, 
0, 
-1, -0.789827, 1, -1, 0.446012,-99) , 
0, 0.49714, 0, 0, 0.476186,-99) , 
3, 4.53295, 1, 0, 0.496374,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0414132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493961,-99) , 
10, 1.71551, 1, 0, 0.534156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48068,-99) , 
8, 0.143298, 0, 0, 0.520137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492087,-99) , 
9, -2.64178, 0, 0, 0.498989,-99) , 
NN(
0, 
0, 
-1, -2.43479, 0, -1, 0.471944,-99) , 
10, -0.290784, 1, 0, 0.49039,-99) , 
9, -1.3444, 0, 0, 0.495039,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0279581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63932, 0, 1, 0.537663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443449,-99) , 
8, -1.28495, 0, 0, 0.502274,-99) , 
9, -3.98765, 1, 0, 0.506135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367982,-99) , 
8, -1.4962, 1, 0, 0.454941,-99) , 
10, -2.39053, 0, 0, 0.502892,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0223992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495993,-99) , 
8, -0.917428, 1, 0, 0.499222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428398,-99) , 
8, -1.57054, 0, 0, 0.49722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392306,-99) , 
10, -2.82568, 0, 0, 0.494219,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.027059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46037,-99) , 
4, 0.999773, 0, 0, 0.505706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459603,-99) , 
4, 0.999048, 0, 0, 0.503968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450765,-99) , 
10, 2.04072, 1, 0, 0.501554,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0353831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46028,-99) , 
10, -1.55903, 1, 0, 0.528279,-99) , 
NN(
0, 
0, 
-1, -1.6607, 0, -1, 0.492374,-99) , 
8, -0.71421, 1, 0, 0.497872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422691,-99) , 
10, -2.792, 0, 0, 0.495542,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0346772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492979,-99) , 
8, 0.623909, 0, 0, 0.553297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485091,-99) , 
9, -0.266537, 0, 0, 0.508833,-99) , 
10, 1.12052, 1, 0, 0.523498,-99) , 
NN(
NN(
0, 
0, 
-1, -2.52969, 0, 1, 0.506319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445538,-99) , 
7, -951.286, 1, 0, 0.481396,-99) , 
10, 0.00268702, 1, 0, 0.501397,-99) , 
9, -1.51016, 0, 0, 0.505396,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.023886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.22423, 1, 1, 0.532615,-99) , 
NN(
0, 
0, 
-1, -2.54955, 0, -1, 0.495883,-99) , 
8, 1.57148, 0, 0, 0.500315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518506,-99) , 
NN(
0, 
0, 
-1, -0.269685, 1, -1, 0.450821,-99) , 
8, -0.124886, 1, 0, 0.470801,-99) , 
5, 0.809437, 1, 0, 0.496342,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.044961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414315,-99) , 
5, -0.0480234, 1, 0, 0.496836,-99) , 
10, 0.874039, 1, 0, 0.539189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475529,-99) , 
0, 0.497135, 0, 0, 0.52126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491677,-99) , 
8, -1.60364, 1, 0, 0.494317,-99) , 
5, -0.809524, 1, 0, 0.498895,-99) , 
8, 1.85714, 0, 0, 0.502311,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0273616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492591,-99) , 
8, -0.4281, 0, 0, 0.520328,-99) , 
0, 0.489791, 1, 0, 0.528791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477986,-99) , 
10, 1.5208, 1, 0, 0.515787,-99) , 
NN(
0, 
0, 
-1, 0.855411, 1, -1, 0.49411,-99) , 
9, -1.29918, 0, 0, 0.497154,-99) , 
0, 0.493329, 1, 0, 0.501627,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0403426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.872512, 1, 1, 0.54677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474295,-99) , 
10, -1.58734, 0, 0, 0.511941,-99) , 
9, -4.18017, 1, 0, 0.515167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453121,-99) , 
10, -2.6728, 0, 0, 0.512803,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0246509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.12092, 0, 1, 0.53796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459644,-99) , 
2, -0.21361, 0, 0, 0.505369,-99) , 
9, -4.26075, 1, 0, 0.507933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452876,-99) , 
10, -2.6728, 0, 0, 0.505945,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0332007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489573,-99) , 
10, -0.46983, 1, 0, 0.496947,-99) , 
9, -4.2457, 1, 0, 0.498802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49706,-99) , 
8, -1.60616, 1, 0, 0.523204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33061,-99) , 
8, -0.915825, 1, 0, 0.463847,-99) , 
10, -1.99955, 0, 0, 0.494972,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0261049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475775,-99) , 
9, -3.8018, 1, 0, 0.533123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449316,-99) , 
10, 2.30935, 1, 0, 0.498012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391006,-99) , 
10, -2.10194, 0, 0, 0.458401,-99) , 
10, -1.86976, 0, 0, 0.494492,-99) , 
8, -1.28562, 1, 0, 0.497489,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0226932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496218,-99) , 
10, 0.152563, 1, 0, 0.524668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488704,-99) , 
8, -0.43213, 0, 0, 0.523018,-99) , 
NN(
0, 
0, 
-1, -0.173015, 1, -1, 0.492003,-99) , 
5, -0.904781, 1, 0, 0.494668,-99) , 
1, -0.00621516, 1, 0, 0.496956,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0540046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0341765, 1, 1, 0.515249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409866,-99) , 
8, -0.997018, 0, 0, 0.509406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446372,-99) , 
10, -2.60881, 0, 0, 0.520137,-99) , 
NN(
0, 
0, 
-1, -1.40081, 0, -1, 0.471595,-99) , 
8, -0.252345, 1, 0, 0.492875,-99) , 
9, -2.73769, 0, 0, 0.500384,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0358398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413498,-99) , 
8, -1.34001, 1, 0, 0.493718,-99) , 
10, -2.15886, 0, 0, 0.529132,-99) , 
NN(
0, 
0, 
-1, -1.93151, 0, -1, 0.490002,-99) , 
9, -4.32957, 1, 0, 0.493922,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0229424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499138,-99) , 
10, 1.31534, 1, 0, 0.544773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495795,-99) , 
9, -4.79188, 1, 0, 0.49862,-99) , 
8, 1.85693, 0, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444264,-99) , 
4, 0.999049, 0, 0, 0.500536,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0255741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428433, 1, 1, 0.557223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495807,-99) , 
5, 0.523623, 0, 0, 0.523067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496033,-99) , 
5, -0.904739, 1, 0, 0.499577,-99) , 
2, -0.0704419, 1, 0, 0.50346,-99) , 
8, 2.14333, 0, 0, 0.506296,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0368914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.698088, 1, 1, 0.51616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444715,-99) , 
8, -1.5682, 0, 0, 0.514142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43902,-99) , 
10, -2.82568, 0, 0, 0.512129,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0285831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499023,-99) , 
5, -0.523951, 0, 0, 0.541169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476761,-99) , 
10, -0.783887, 1, 0, 0.493461,-99) , 
3, 4.52358, 1, 0, 0.524969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492722,-99) , 
4, 0.999525, 1, 0, 0.495328,-99) , 
8, 2.1429, 0, 0, 0.497413,-99) , 
2, 0.0684877, 0, 0, 0.501742,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0294484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494082,-99) , 
10, -2.43156, 1, 0, 0.531229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445915,-99) , 
8, -0.672775, 0, 0, 0.500725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362346,-99) , 
8, -0.633847, 1, 0, 0.465015,-99) , 
10, -1.76822, 0, 0, 0.496675,-99) , 
8, -1.28495, 1, 0, 0.499265,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0248652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495505,-99) , 
0, 0.496865, 0, 0, 0.50551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460796,-99) , 
0, 0.5058, 0, 0, 0.476829,-99) , 
0, 0.503804, 1, 0, 0.502579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452418,-99) , 
2, 0.215207, 1, 0, 0.500714,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0400339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448354,-99) , 
10, 2.13049, 1, 0, 0.504702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413898,-99) , 
5, -0.812988, 1, 0, 0.460388,-99) , 
8, -0.71421, 0, 0, 0.500704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478858,-99) , 
9, -4.52688, 0, 0, 0.514071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375713,-99) , 
8, -0.870111, 1, 0, 0.471274,-99) , 
10, -1.9024, 0, 0, 0.496879,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0425212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40714, 1, 1, 0.538364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490818,-99) , 
8, 0.144598, 0, 0, 0.526053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485385,-99) , 
5, -0.0492862, 0, 0, 0.525851,-99) , 
NN(
0, 
0, 
-1, -1.74593, 0, -1, 0.485399,-99) , 
8, -0.71446, 1, 0, 0.493211,-99) , 
9, -1.17537, 0, 0, 0.497602,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0288775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.99502, 0, 1, 0.50962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472733,-99) , 
5, -0.00228884, 1, 0, 0.495057,-99) , 
10, -0.661389, 1, 0, 0.5018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413674,-99) , 
8, 0.529521, 1, 0, 0.458853,-99) , 
5, 0.904723, 1, 0, 0.499435,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0281741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493648,-99) , 
8, 0.714201, 0, 0, 0.501653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412701,-99) , 
4, 0.999566, 1, 0, 0.459733,-99) , 
4, 0.999773, 0, 0, 0.499157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447007,-99) , 
4, 0.999048, 0, 0, 0.497307,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0553011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50359, 0, 1, 0.535792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412904,-99) , 
5, -0.810835, 1, 0, 0.468792,-99) , 
10, -1.23782, 1, 0, 0.512752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495784,-99) , 
5, -0.673511, 0, 0, 0.515048,-99) , 
NN(
0, 
0, 
-1, -1.3687, 0, -1, 0.476139,-99) , 
5, -0.238131, 1, 0, 0.489642,-99) , 
8, -0.14053, 1, 0, 0.497758,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0389681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494579,-99) , 
9, -2.57524, 0, 0, 0.500487,-99) , 
5, 0.904736, 0, 0, 0.504083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453084,-99) , 
8, 0.148685, 0, 0, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0.776764, 1, -1, 0.452048,-99) , 
5, -0.142955, 1, 0, 0.484905,-99) , 
10, 0.0908633, 1, 0, 0.498141,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0530245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.13477, 1, 1, 0.517219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465584,-99) , 
8, -0.999913, 0, 0, 0.514376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439135,-99) , 
10, -2.84412, 0, 0, 0.524284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369614,-99) , 
8, -0.870111, 1, 0, 0.475857,-99) , 
10, -1.89719, 0, 0, 0.509395,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0362986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498973,-99) , 
9, -2.19947, 1, 0, 0.536759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491482,-99) , 
9, -1.7613, 0, 0, 0.495328,-99) , 
5, -0.714275, 1, 0, 0.500896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477621,-99) , 
5, -0.809528, 0, 0, 0.489957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433946,-99) , 
9, -1.31415, 0, 0, 0.476503,-99) , 
10, 0.753548, 1, 0, 0.496611,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0580384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476546,-99) , 
8, 0.390882, 0, 0, 0.562797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466269,-99) , 
8, 0.44867, 1, 0, 0.50581,-99) , 
9, -2.5044, 0, 0, 0.512208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483975,-99) , 
9, -0.536269, 0, 0, 0.495016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443294,-99) , 
2, -0.0777549, 0, 0, 0.487503,-99) , 
10, 0.00613131, 1, 0, 0.503944,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0423422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487878,-99) , 
10, 0.400199, 1, 0, 0.512243,-99) , 
8, 2.14296, 0, 0, 0.514286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531528,-99) , 
NN(
0, 
0, 
-1, -6.70903e-05, 1, -1, 0.467615,-99) , 
8, -0.130146, 1, 0, 0.48615,-99) , 
5, 0.809488, 1, 0, 0.510463,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0446674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497371,-99) , 
5, -0.333346, 1, 0, 0.508846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463958,-99) , 
5, 0.523498, 0, 0, 0.486546,-99) , 
3, 1.18225, 0, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0.0670049, 1, -1, 0.474047,-99) , 
3, 4.55086, 1, 0, 0.496143,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.025147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494282, 1, 1, 0.508748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418178,-99) , 
5, -0.904752, 1, 0, 0.467124,-99) , 
10, 1.60905, 1, 0, 0.505578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434542,-99) , 
10, -2.79366, 0, 0, 0.503432,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0367854);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416928,-99) , 
6, 0.0076114, 1, 0, 0.507479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456825,-99) , 
8, -0.413846, 0, 0, 0.490129,-99) , 
5, -0.0476643, 0, 0, 0.499553,-99) , 
8, 2.42858, 0, 0, 0.501452,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0488679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.7272, 0, 1, 0.513856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406779,-99) , 
5, -0.42864, 1, 0, 0.475763,-99) , 
10, 1.03951, 1, 0, 0.505337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436756,-99) , 
7, -0.715626, 0, 0, 0.499352,-99) , 
NN(
0, 
0, 
-1, -2.83791, 1, -1, 0.471541,-99) , 
7, -951.286, 0, 0, 0.486864,-99) , 
8, 0.430378, 0, 0, 0.495059,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0305011);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.542562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492786,-99) , 
9, -2.18157, 0, 0, 0.498393,-99) , 
NN(
0, 
0, 
-1, 0.632553, 1, -1, 0.481425,-99) , 
10, 0.294636, 1, 0, 0.493872,-99) , 
5, 0.904648, 0, 0, 0.496844,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0321247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490287,-99) , 
8, 0.796689, 0, 0, 0.561392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433911,-99) , 
10, 0.351114, 1, 0, 0.498547,-99) , 
9, -1.67759, 0, 0, 0.503223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446451,-99) , 
2, -0.0314039, 0, 0, 0.488545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405523,-99) , 
5, -0.143035, 1, 0, 0.473522,-99) , 
10, 0.953248, 1, 0, 0.498924,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0250938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478139,-99) , 
10, 0.985336, 1, 0, 0.53956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471756,-99) , 
10, 0.261982, 1, 0, 0.496904,-99) , 
8, 1.8572, 0, 0, 0.500163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449767,-99) , 
10, 2.01494, 1, 0, 0.497886,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0256587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494392,-99) , 
9, -2.73769, 0, 0, 0.501508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451668,-99) , 
0, 0.5058, 0, 0, 0.474576,-99) , 
0, 0.503804, 1, 0, 0.498732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435778,-99) , 
2, 0.210965, 1, 0, 0.496297,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0444306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.490046, 0, 1, 0.53037,-99) , 
NN(
0, 
0, 
-1, 0.498103, 0, -1, 0.460463,-99) , 
10, 1.98155, 1, 0, 0.507874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48426,-99) , 
9, -1.88898, 0, 0, 0.488237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42754,-99) , 
10, 0.754399, 1, 0, 0.485597,-99) , 
9, -1.38635, 0, 0, 0.489185,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0392379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492675,-99) , 
8, 0.812033, 0, 0, 0.540394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474494,-99) , 
10, -0.141496, 1, 0, 0.501481,-99) , 
9, -1.69618, 0, 0, 0.504575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455879,-99) , 
10, 1.7029, 1, 0, 0.477046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366428,-99) , 
9, -1.19897, 0, 0, 0.456288,-99) , 
10, 0.965261, 1, 0, 0.497816,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0639113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.373073, 0, 1, 0.530409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455446,-99) , 
10, 2.37921, 1, 0, 0.520289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478834,-99) , 
6, 0.003752, 0, 0, 0.495899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390788,-99) , 
6, 0.0112565, 1, 0, 0.49144,-99) , 
5, -0.714302, 1, 0, 0.497926,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0383504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489159,-99) , 
10, -2.75408, 0, 0, 0.552909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446055,-99) , 
10, -1.24034, 1, 0, 0.524866,-99) , 
NN(
NN(
0, 
0, 
-1, -0.137598, 0, 1, 0.505681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375833,-99) , 
10, -1.80211, 0, 0, 0.499734,-99) , 
8, -0.71421, 1, 0, 0.504128,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0278273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495753,-99) , 
0, 0.495233, 1, 0, 0.501993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437633,-99) , 
4, 0.999773, 0, 0, 0.49982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384735,-99) , 
9, -3.19931, 1, 0, 0.454319,-99) , 
4, 0.999524, 0, 0, 0.497289,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0478161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473088,-99) , 
10, -2.78762, 0, 0, 0.547563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443051,-99) , 
8, -1.03825, 0, 0, 0.472541,-99) , 
10, -1.76465, 1, 0, 0.517089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484228,-99) , 
7, -951.286, 1, 0, 0.49577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381393,-99) , 
10, -1.79809, 0, 0, 0.490463,-99) , 
8, -0.711522, 1, 0, 0.495069,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0144045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497299,-99) , 
9, -4.87489, 1, 0, 0.499082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433118,-99) , 
10, 1.70608, 1, 0, 0.497206,-99) , 
9, 0.0913196, 0, 0, 0.498735,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0270251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477788,-99) , 
10, 0.894895, 1, 0, 0.500045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343216,-99) , 
8, -1.53815, 1, 0, 0.459813,-99) , 
10, -2.44792, 0, 0, 0.49773,-99) , 
8, 2.42852, 0, 0, 0.499627,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0314701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494645,-99) , 
9, -1.65877, 0, 0, 0.499036,-99) , 
8, 2.1427, 0, 0, 0.501858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445669,-99) , 
10, 2.39767, 1, 0, 0.495105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42969,-99) , 
9, -0.39691, 0, 0, 0.47194,-99) , 
10, 1.34586, 1, 0, 0.498939,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0348655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
10, -2.42575, 1, 0, 0.547028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486885,-99) , 
3, 1.14887, 0, 0, 0.503109,-99) , 
8, -1.28562, 1, 0, 0.506457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437927,-99) , 
5, 0.713842, 1, 0, 0.489023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409986,-99) , 
10, -1.89727, 0, 0, 0.476537,-99) , 
3, 4.47075, 1, 0, 0.500646,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0227276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0616761, 1, 1, 0.509938,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.489821,-99) , 
5, -0.0476643, 0, 0, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452135,-99) , 
4, 0.999048, 0, 0, 0.498841,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0485191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0710983, 1, 1, 0.517327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442462,-99) , 
9, -1.7529, 1, 0, 0.509724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458175,-99) , 
4, 0.999991, 0, 0, 0.495908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357831,-99) , 
4, 0.999905, 0, 0, 0.488188,-99) , 
5, 0.523785, 0, 0, 0.495366,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0534315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.239604, 0, 1, 0.559008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38389,-99) , 
10, -2.30703, 0, 0, 0.499889,-99) , 
8, -1.36577, 1, 0, 0.506613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446765,-99) , 
10, 1.24312, 1, 0, 0.504926,-99) , 
NN(
0, 
0, 
-1, 0.238034, 1, -1, 0.466396,-99) , 
8, 1.28663, 0, 0, 0.481437,-99) , 
10, -0.508396, 1, 0, 0.494402,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0513593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51123, 0, 1, 0.540004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468493,-99) , 
5, 0.14047, 1, 0, 0.521378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463869,-99) , 
10, -2.58604, 1, 0, 0.512845,-99) , 
NN(
0, 
0, 
-1, -1.7588, 0, -1, 0.478326,-99) , 
8, -1.28568, 1, 0, 0.480867,-99) , 
1, 0.00458981, 0, 0, 0.486132,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.044756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0710983, 1, 1, 0.513207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471548,-99) , 
8, 0.654642, 0, 0, 0.481109,-99) , 
5, -0.142967, 0, 0, 0.502628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476661,-99) , 
8, 2.14333, 0, 0, 0.482883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38222,-99) , 
5, 0.714077, 1, 0, 0.472514,-99) , 
10, 0.34666, 1, 0, 0.495186,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0318031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494939,-99) , 
10, 1.33504, 1, 0, 0.518175,-99) , 
NN(
0, 
0, 
-1, -1.946, 0, -1, 0.488104,-99) , 
9, -1.29918, 0, 0, 0.492663,-99) , 
NN(
0, 
0, 
-1, 0.549066, 1, -1, 0.447857,-99) , 
5, 0.904647, 1, 0, 0.490253,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0214142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.96699, 0, 1, 0.520501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472287,-99) , 
0, 0.501399, 1, 0, 0.498836,-99) , 
0, 0.502851, 0, 0, 0.502169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502834,-99) , 
NN(
0, 
0, 
-1, 0.872964, 1, -1, 0.447653,-99) , 
8, 0.154394, 1, 0, 0.469107,-99) , 
5, 0.809437, 1, 0, 0.497785,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0347727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.959167, 0, 1, 0.55774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480027,-99) , 
8, 0.142378, 1, 0, 0.525815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490063,-99) , 
8, 1.8593, 0, 0, 0.494088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434316,-99) , 
10, 1.46741, 1, 0, 0.491699,-99) , 
5, -0.904737, 1, 0, 0.494994,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0343452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238708, 0, 1, 0.55164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460411,-99) , 
10, -2.78761, 0, 0, 0.530029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494664,-99) , 
5, -0.904746, 1, 0, 0.498393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356164,-99) , 
10, -2.05441, 0, 0, 0.493512,-99) , 
8, -0.998739, 1, 0, 0.497975,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0397155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.15048, 0, 1, 0.511237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468355,-99) , 
8, -0.999232, 0, 0, 0.508875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473195,-99) , 
10, -2.80025, 0, 0, 0.528072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336782,-99) , 
8, -0.918697, 1, 0, 0.472951,-99) , 
10, -2.00476, 0, 0, 0.504943,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0389277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30148, 0, 1, 0.54716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431969,-99) , 
5, 0.0474012, 1, 0, 0.495692,-99) , 
10, 0.873007, 1, 0, 0.513755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49854,-99) , 
8, 0.737967, 0, 0, 0.509145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480712,-99) , 
9, -4.38888, 1, 0, 0.486255,-99) , 
1, -0.000631, 1, 0, 0.495909,-99) , 
9, -1.89594, 0, 0, 0.500239,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0475647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.129294, 0, 1, 0.53199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
8, -0.428684, 0, 0, 0.506112,-99) , 
9, -3.33041, 1, 0, 0.513287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485335,-99) , 
8, -0.453373, 1, 0, 0.497618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43215,-99) , 
10, -2.21458, 0, 0, 0.489612,-99) , 
5, 0.333259, 1, 0, 0.503384,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0168646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.190662, 0, 1, 0.543164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492256,-99) , 
3, 1.18943, 0, 0, 0.527904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498721,-99) , 
9, -1.15395, 0, 0, 0.501536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450155,-99) , 
10, 1.54755, 1, 0, 0.49951,-99) , 
5, -0.904746, 1, 0, 0.502296,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0486124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.559215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493416,-99) , 
2, -0.0758167, 1, 0, 0.502368,-99) , 
2, 0.0736227, 0, 0, 0.511801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47421,-99) , 
4, 0.999995, 0, 0, 0.500051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395756,-99) , 
4, 0.999905, 0, 0, 0.493861,-99) , 
5, 0.523779, 0, 0, 0.499814,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0520498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.352463, 1, 1, 0.530846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402107,-99) , 
8, -0.170537, 1, 0, 0.492125,-99) , 
10, -1.31272, 0, 0, 0.517196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485624,-99) , 
2, 0.0307798, 0, 0, 0.496205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41311,-99) , 
4, 0.999905, 0, 0, 0.492193,-99) , 
5, 0.428506, 0, 0, 0.501662,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.026786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456742,-99) , 
3, 6.43885, 1, 0, 0.504412,-99) , 
4, 0.999048, 1, 0, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438439,-99) , 
3, 8.96578, 1, 0, 0.505136,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.038109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496243,-99) , 
10, -1.50638, 1, 0, 0.527393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435563,-99) , 
10, -1.37604, 0, 0, 0.500609,-99) , 
8, -0.428507, 1, 0, 0.507393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449464,-99) , 
0, 0.505709, 1, 0, 0.504946,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0483478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.8602, 0, 1, 0.516568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454423,-99) , 
9, -2.39588, 0, 0, 0.493147,-99) , 
10, -0.470084, 1, 0, 0.504195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458464,-99) , 
10, -2.79614, 0, 0, 0.52588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354605,-99) , 
8, -0.907061, 1, 0, 0.47693,-99) , 
10, -1.99955, 0, 0, 0.501231,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0372893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486927,-99) , 
5, -0.714283, 1, 0, 0.492782,-99) , 
NN(
0, 
0, 
-1, 1.73914, 0, -1, 0.454061,-99) , 
8, 1.39443, 1, 0, 0.487485,-99) , 
8, 2.42852, 0, 0, 0.489678,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0469703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480178,-99) , 
8, -0.239262, 0, 0, 0.503658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364302,-99) , 
8, -0.563425, 1, 0, 0.477184,-99) , 
10, -1.64828, 0, 0, 0.498076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446794,-99) , 
9, -0.0773512, 0, 0, 0.477697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386091,-99) , 
2, -0.0555653, 0, 0, 0.460282,-99) , 
10, 1.02362, 1, 0, 0.493001,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0277006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490553,-99) , 
0, 0.497273, 1, 0, 0.497373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437138,-99) , 
0, 0.489519, 0, 0, 0.495569,-99) , 
NN(
0, 
0, 
-1, 1.6393, 1, -1, 0.450027,-99) , 
10, 1.40582, 1, 0, 0.491561,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0256319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498639,-99) , 
9, -2.10094, 0, 0, 0.502059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437068,-99) , 
5, -0.238131, 1, 0, 0.480364,-99) , 
10, 0.262541, 1, 0, 0.496894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435056,-99) , 
10, 2.01494, 1, 0, 0.493997,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0339621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467438,-99) , 
8, 0.803173, 0, 0, 0.5268,-99) , 
NN(
0, 
0, 
-1, 0.394644, 1, -1, 0.491691,-99) , 
9, -1.68752, 0, 0, 0.494402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462276,-99) , 
7, -951.286, 0, 0, 0.479444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391329,-99) , 
5, -0.238188, 1, 0, 0.463667,-99) , 
10, 0.949338, 1, 0, 0.490087,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0329111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.34672, 1, 1, 0.512194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433,-99) , 
10, 0.9911, 1, 0, 0.508939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474826,-99) , 
0, 0.497137, 0, 0, 0.492822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437822,-99) , 
2, -0.0857801, 0, 0, 0.485738,-99) , 
5, -0.333365, 0, 0, 0.500325,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0284096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462494,-99) , 
10, 0.103125, 1, 0, 0.497786,-99) , 
8, 1.68806, 0, 0, 0.500247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446665,-99) , 
0, 0.498092, 0, 0, 0.474906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403883,-99) , 
2, -0.0631039, 0, 0, 0.462972,-99) , 
10, 0.676775, 1, 0, 0.493099,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.054492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.388512, 1, 1, 0.518901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339611,-99) , 
8, -1.16069, 1, 0, 0.460059,-99) , 
10, -2.17974, 0, 0, 0.511897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465586,-99) , 
8, 1.57226, 0, 0, 0.482441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416922,-99) , 
2, 0.0726892, 1, 0, 0.472751,-99) , 
10, 0.194301, 1, 0, 0.500761,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0347399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503532, 1, 1, 0.522361,-99) , 
NN(
0, 
0, 
-1, -2.63105, 0, -1, 0.490707,-99) , 
0, 0.501899, 0, 0, 0.497274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474064,-99) , 
10, -1.5107, 0, 0, 0.50882,-99) , 
NN(
0, 
0, 
-1, -0.175072, 1, -1, 0.426322,-99) , 
9, -3.00236, 1, 0, 0.472202,-99) , 
5, 0.809487, 1, 0, 0.493928,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0276065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493622,-99) , 
3, 8.55516, 0, 0, 0.496066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419696,-99) , 
4, 0.999751, 0, 0, 0.493835,-99) , 
NN(
0, 
0, 
-1, 0.497402, 1, -1, 0.429189,-99) , 
4, 0.999524, 0, 0, 0.49034,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0220182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499957,-99) , 
8, 1.96531, 0, 0, 0.502165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455893,-99) , 
8, 0.490803, 1, 0, 0.476057,-99) , 
10, 1.00081, 1, 0, 0.498397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386613,-99) , 
8, -1.53386, 1, 0, 0.46455,-99) , 
10, -2.43955, 0, 0, 0.496526,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0189413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0648186, 0, 1, 0.544304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499417,-99) , 
8, -0.714262, 1, 0, 0.504137,-99) , 
3, 0.509054, 1, 0, 0.50707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445041,-99) , 
3, 8.93425, 1, 0, 0.505078,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0357934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475109,-99) , 
3, 3.11661, 1, 0, 0.503484,-99) , 
9, -2.45609, 1, 0, 0.519546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491861,-99) , 
9, -1.6666, 0, 0, 0.496334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429788,-99) , 
10, 1.14713, 1, 0, 0.493797,-99) , 
5, -0.714284, 1, 0, 0.499508,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0356937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.566165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404641,-99) , 
8, -1.31598, 1, 0, 0.492782,-99) , 
10, -2.28058, 0, 0, 0.536105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437365,-99) , 
4, 0.999796, 0, 0, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463943,-99) , 
4, 0.999524, 0, 0, 0.499678,-99) , 
9, -3.96471, 1, 0, 0.505592,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0311234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96937, 0, 1, 0.51218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489004,-99) , 
9, -3.00948, 1, 0, 0.495139,-99) , 
10, -0.577858, 1, 0, 0.503441,-99) , 
NN(
0, 
0, 
-1, -0.951314, 1, -1, 0.457033,-99) , 
5, 0.904647, 1, 0, 0.50092,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0209133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.874554, 1, 1, 0.507972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470859,-99) , 
8, -1.28313, 0, 0, 0.506192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451385,-99) , 
10, -2.66864, 0, 0, 0.504163,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.042508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.408031, 0, 1, 0.513951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465962,-99) , 
0, 0.502852, 1, 0, 0.507256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481825,-99) , 
9, -3.0148, 0, 0, 0.491675,-99) , 
NN(
0, 
0, 
-1, -0.904893, 1, -1, 0.458006,-99) , 
9, -2.12774, 1, 0, 0.485694,-99) , 
8, 0.714305, 0, 0, 0.493263,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0244505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411641,-99) , 
10, -2.41703, 0, 0, 0.500266,-99) , 
8, -1.68106, 1, 0, 0.502483,-99) , 
NN(
0, 
0, 
-1, -0.143023, 1, -1, 0.475869,-99) , 
10, 0.761394, 1, 0, 0.497851,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0445591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493299,-99) , 
5, -0.238495, 0, 0, 0.550779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484085,-99) , 
3, 0.733662, 1, 0, 0.490658,-99) , 
2, 0.108579, 0, 0, 0.495474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450965,-99) , 
0, 0.501132, 1, 0, 0.484397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437443,-99) , 
0, 0.49524, 0, 0, 0.472678,-99) , 
3, 4.47075, 1, 0, 0.491078,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0350681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904725, 0, 1, 0.513371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466442,-99) , 
2, -0.0594162, 1, 0, 0.481274,-99) , 
0, 0.492059, 0, 0, 0.509152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489944,-99) , 
9, -1.06492, 0, 0, 0.499019,-99) , 
NN(
0, 
0, 
-1, -4.13232, 1, -1, 0.456463,-99) , 
10, -1.36006, 0, 0, 0.488491,-99) , 
0, 0.500948, 1, 0, 0.503523,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0417414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488561,-99) , 
9, -2.11344, 0, 0, 0.523622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458263,-99) , 
10, 1.47059, 1, 0, 0.511421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499643,-99) , 
8, -1.55302, 1, 0, 0.52435,-99) , 
NN(
0, 
0, 
-1, -3.80361, 0, -1, 0.486268,-99) , 
9, -4.29356, 1, 0, 0.491798,-99) , 
8, 0.999867, 0, 0, 0.49686,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0187022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497297,-99) , 
8, -0.142269, 1, 0, 0.50261,-99) , 
0, 0.490472, 1, 0, 0.5044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4429,-99) , 
4, 0.999048, 0, 0, 0.502376,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.021391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.505887,-99) , 
NN(
0, 
0, 
-1, -3.15547, 1, -1, 0.463651,-99) , 
5, 0.904723, 1, 0, 0.503482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505396,-99) , 
NN(
0, 
0, 
-1, -0.239905, 0, -1, 0.438224,-99) , 
9, 0.490029, 0, 0, 0.461197,-99) , 
10, 1.46138, 1, 0, 0.499757,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0177434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524652, 0, 1, 0.505171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466463,-99) , 
10, 2.5933, 1, 0, 0.504031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517499,-99) , 
NN(
0, 
0, 
-1, 0.0283876, 1, -1, 0.466539,-99) , 
8, 0.152138, 1, 0, 0.485328,-99) , 
5, 0.809294, 1, 0, 0.501548,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0154394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498399,-99) , 
4, 0.999048, 1, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456108,-99) , 
3, 8.96578, 1, 0, 0.499977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447431,-99) , 
10, -2.55987, 0, 0, 0.497683,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0286483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.612268, 0, 1, 0.551387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443485,-99) , 
10, 0.103132, 1, 0, 0.497225,-99) , 
9, -1.87445, 0, 0, 0.501447,-99) , 
NN(
0, 
0, 
-1, 0.428058, 1, -1, 0.476247,-99) , 
10, 0.676775, 1, 0, 0.496745,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0389336);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491633,-99) , 
3, 4.43942, 1, 0, 0.522354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447581,-99) , 
9, -4.05474, 1, 0, 0.481907,-99) , 
10, -1.25486, 0, 0, 0.511194,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0713608, 0, 1, 0.521819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483879,-99) , 
9, -4.05567, 1, 0, 0.488076,-99) , 
0, 0.492693, 1, 0, 0.493533,-99) , 
0, 0.500947, 0, 0, 0.498221,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0851013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
7, 0.169364, 0, 0, 0.538649,-99) , 
NN(
0, 
0, 
-1, 0.780894, 1, -1, 0.270113,-99) , 
7, -1.57158, 0, 0, 0.510044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489229,-99) , 
9, -4.02641, 1, 0, 0.4935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422584,-99) , 
9, -3.27857, 1, 0, 0.462076,-99) , 
5, 0.713929, 1, 0, 0.488541,-99) , 
7, -951.286, 0, 0, 0.500515,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0374703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999526, 1, 1, 0.51439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459099,-99) , 
5, 0.238071, 1, 0, 0.491855,-99) , 
10, -0.276382, 1, 0, 0.504302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494989,-99) , 
8, -1.58461, 1, 0, 0.511347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363986,-99) , 
8, -1.14278, 1, 0, 0.464383,-99) , 
10, -2.19586, 0, 0, 0.500961,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0240808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495027,-99) , 
4, 0.999977, 1, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45552,-99) , 
4, 0.999524, 0, 0, 0.49987,-99) , 
NN(
0, 
0, 
-1, 0.94081, 1, -1, 0.461693,-99) , 
5, 0.904531, 1, 0, 0.49785,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0490147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474865,-99) , 
8, -0.142804, 0, 0, 0.5047,-99) , 
9, -3.60115, 1, 0, 0.509208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483965,-99) , 
9, -3.58092, 0, 0, 0.504991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404655,-99) , 
8, -0.132508, 1, 0, 0.487458,-99) , 
10, -1.24076, 0, 0, 0.502955,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0157152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.693847, 1, 1, 0.544278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498203,-99) , 
2, 0.192892, 0, 0, 0.500224,-99) , 
3, 0.544766, 1, 0, 0.503583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457251,-99) , 
3, 8.84769, 1, 0, 0.502162,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0433895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463019,-99) , 
4, 0.999525, 0, 0, 0.505751,-99) , 
9, -3.90901, 1, 0, 0.509372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494689,-99) , 
9, -3.87126, 0, 0, 0.52108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294424,-99) , 
8, -0.358761, 1, 0, 0.486959,-99) , 
10, -1.56604, 0, 0, 0.504911,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0303443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44117,-99) , 
8, -1.85413, 0, 0, 0.508305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400181,-99) , 
0, 0.498087, 0, 0, 0.456392,-99) , 
4, 0.999773, 0, 0, 0.505356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443961,-99) , 
4, 0.999048, 0, 0, 0.503327,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0232747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49335,-99) , 
0, 0.491424, 1, 0, 0.496132,-99) , 
2, -0.205339, 1, 0, 0.498126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444394,-99) , 
4, 0.999048, 0, 0, 0.496224,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.018975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45165,-99) , 
9, -0.381245, 0, 0, 0.477823,-99) , 
10, 0.953248, 1, 0, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45581,-99) , 
2, 0.214776, 1, 0, 0.498973,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0246205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434792,-99) , 
9, -1.09484, 0, 0, 0.48069,-99) , 
10, 0.611912, 1, 0, 0.499585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453148,-99) , 
0, 0.490472, 0, 0, 0.497273,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0349986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.30043, 1, 1, 0.53855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493402,-99) , 
5, -0.904757, 1, 0, 0.498803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454032,-99) , 
5, 0.0476302, 1, 0, 0.474785,-99) , 
8, 0.674062, 1, 0, 0.491027,-99) , 
8, 2.14298, 0, 0, 0.493458,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0302395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9111, 1, 1, 0.537066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493412,-99) , 
2, -0.067942, 1, 0, 0.498005,-99) , 
5, -0.809523, 1, 0, 0.501588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444716,-99) , 
10, 2.42684, 1, 0, 0.488273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377287,-99) , 
5, -0.42864, 1, 0, 0.467685,-99) , 
10, 0.949338, 1, 0, 0.496714,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0437044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481451,-99) , 
10, -1.50961, 1, 0, 0.51724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421803,-99) , 
10, -1.37395, 0, 0, 0.498853,-99) , 
8, -0.428578, 1, 0, 0.503514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476632,-99) , 
10, -0.639652, 1, 0, 0.491708,-99) , 
NN(
0, 
0, 
-1, 0.492057, 1, -1, 0.43203,-99) , 
8, -0.416128, 0, 0, 0.474289,-99) , 
0, 0.494281, 0, 0, 0.4978,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0306066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453371,-99) , 
10, -2.63643, 0, 0, 0.512359,-99) , 
NN(
0, 
0, 
-1, -1.44377, 0, -1, 0.490013,-99) , 
8, -0.412531, 1, 0, 0.49594,-99) , 
8, 2.42875, 0, 0, 0.497516,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0212772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556821,-99) , 
NN(
NN(
0, 
0, 
-1, -1.74649, 0, 1, 0.505764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355485,-99) , 
9, -1.43169, 0, 0, 0.478856,-99) , 
10, 0.748634, 1, 0, 0.501592,-99) , 
8, 2.42849, 0, 0, 0.503082,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0391155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.74515, 0, 1, 0.539106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421713,-99) , 
5, -0.14306, 1, 0, 0.474498,-99) , 
10, 0.755789, 1, 0, 0.514301,-99) , 
NN(
NN(
0, 
0, 
-1, 0.712981, 0, 1, 0.51299,-99) , 
NN(
0, 
0, 
-1, -1.61016, 0, -1, 0.486005,-99) , 
8, -0.523743, 1, 0, 0.494383,-99) , 
8, 1.00001, 0, 0, 0.499668,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0312477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.514815,-99) , 
NN(
0, 
0, 
-1, -0.0918156, 0, -1, 0.487015,-99) , 
5, 0.33315, 0, 0, 0.498199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448109,-99) , 
10, -2.474, 0, 0, 0.495709,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0240115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0784716, 0, 1, 0.508622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475124,-99) , 
5, 0.142632, 0, 0, 0.491035,-99) , 
3, 4.05881, 1, 0, 0.504551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431507,-99) , 
4, 0.999048, 0, 0, 0.502198,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0376151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488695,-99) , 
8, 0.143313, 1, 0, 0.495584,-99) , 
9, -3.99851, 1, 0, 0.498206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475643,-99) , 
9, -4.14028, 0, 0, 0.491431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388886,-99) , 
8, -0.574483, 1, 0, 0.468919,-99) , 
10, -1.68115, 0, 0, 0.493144,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0232498);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.62895, 1, 1, 0.532181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495236,-99) , 
8, 1.96009, 0, 0, 0.497479,-99) , 
NN(
0, 
0, 
-1, -0.714211, 1, -1, 0.448023,-99) , 
10, 1.02541, 1, 0, 0.493707,-99) , 
9, -0.343315, 0, 0, 0.496298,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0314428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497591, 0, 1, 0.513155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447444,-99) , 
4, 0.999524, 0, 0, 0.509292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487196,-99) , 
2, -0.0748489, 1, 0, 0.492084,-99) , 
0, 0.506253, 0, 0, 0.495259,-99) , 
0, 0.49809, 1, 0, 0.502078,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0805243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57429, 0, 1, 0.512965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452347,-99) , 
10, 2.00348, 1, 0, 0.50863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426075,-99) , 
7, -0.916795, 0, 0, 0.515871,-99) , 
NN(
0, 
0, 
-1, 0.725219, 1, -1, 0.271943,-99) , 
7, -1.57005, 0, 0, 0.489282,-99) , 
7, -951.286, 1, 0, 0.497752,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0363089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480791,-99) , 
5, -0.95919, 1, 0, 0.501806,-99) , 
5, -0.714327, 0, 0, 0.521435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488373,-99) , 
8, -1.07841, 1, 0, 0.491894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421882,-99) , 
10, 0.965528, 1, 0, 0.489514,-99) , 
9, -1.16899, 0, 0, 0.493882,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0435485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.474672, 1, 1, 0.540057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42914,-99) , 
3, 2.46219, 1, 0, 0.472326,-99) , 
5, -0.14289, 0, 0, 0.51238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488056,-99) , 
0, 0.494601, 1, 0, 0.493821,-99) , 
NN(
0, 
0, 
-1, 0.478523, 1, -1, 0.46644,-99) , 
0, 0.500949, 1, 0, 0.486532,-99) , 
2, 0.0673037, 0, 0, 0.490616,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0334754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.555272, 1, 1, 0.529089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487004,-99) , 
2, -0.0734921, 1, 0, 0.491286,-99) , 
8, 1.57155, 0, 0, 0.495308,-99) , 
NN(
0, 
0, 
-1, 1.07791, 1, -1, 0.46048,-99) , 
10, 1.58529, 1, 0, 0.492699,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0388593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493416,-99) , 
10, -1.36481, 0, 0, 0.521137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433763,-99) , 
5, 0.713818, 1, 0, 0.491266,-99) , 
8, 1.00001, 1, 0, 0.513518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495298,-99) , 
9, -4.45359, 1, 0, 0.498793,-99) , 
NN(
0, 
0, 
-1, 0.238055, 0, -1, 0.457029,-99) , 
2, -0.0657701, 0, 0, 0.491435,-99) , 
0, 0.498091, 0, 0, 0.502705,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0356631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489467,-99) , 
8, -0.4281, 0, 0, 0.519744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45412,-99) , 
5, 0.714071, 1, 0, 0.510874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49351,-99) , 
8, 1.3978, 0, 0, 0.497176,-99) , 
NN(
0, 
0, 
-1, 0.618851, 1, -1, 0.472153,-99) , 
10, 0.343509, 1, 0, 0.491077,-99) , 
1, 0.00236311, 0, 0, 0.496396,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0325325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.82724, 1, 1, 0.517961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440952,-99) , 
10, 0.241509, 1, 0, 0.502045,-99) , 
5, -0.714291, 1, 0, 0.505804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458396,-99) , 
10, 1.03145, 1, 0, 0.505431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442764,-99) , 
9, -1.8667, 0, 0, 0.484021,-99) , 
8, 1.57131, 1, 0, 0.5031,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0323321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14341, 1, 1, 0.511425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456428,-99) , 
8, -1.28565, 0, 0, 0.509675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486864,-99) , 
5, 0.33616, 0, 0, 0.517335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413414,-99) , 
8, -1.12418, 1, 0, 0.479523,-99) , 
10, -2.0935, 0, 0, 0.506773,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0137852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426385,-99) , 
10, -2.54351, 0, 0, 0.49917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455694,-99) , 
8, -1.85367, 0, 0, 0.497961,-99) , 
NN(
0, 
0, 
-1, -0.891105, 1, -1, 0.459108,-99) , 
5, 0.90453, 1, 0, 0.495871,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0324147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496343,-99) , 
8, -0.428605, 1, 0, 0.50336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425896,-99) , 
2, 0.214952, 1, 0, 0.500736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474522,-99) , 
5, -0.523781, 1, 0, 0.486309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419082,-99) , 
5, 0.0463034, 0, 0, 0.45498,-99) , 
8, -0.428328, 0, 0, 0.477657,-99) , 
0, 0.495233, 0, 0, 0.494883,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0241663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498738,-99) , 
10, 2.4996, 1, 0, 0.528264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480717,-99) , 
10, -0.180961, 1, 0, 0.495645,-99) , 
9, -0.603931, 0, 0, 0.498385,-99) , 
NN(
0, 
0, 
-1, -0.131156, 0, -1, 0.46165,-99) , 
0, 0.504757, 1, 0, 0.495686,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.025669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 0, 1, 0.544438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491753,-99) , 
2, 0.209348, 0, 0, 0.493277,-99) , 
8, 2.14264, 0, 0, 0.495659,-99) , 
5, 0.904672, 0, 0, 0.498665,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0608694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498272,-99) , 
5, -0.80045, 0, 0, 0.539616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463754,-99) , 
9, -2.69452, 0, 0, 0.491845,-99) , 
5, 0.0475795, 1, 0, 0.511453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485745,-99) , 
9, -3.30699, 0, 0, 0.504194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456008,-99) , 
5, -0.85033, 1, 0, 0.472596,-99) , 
5, 0.0475697, 0, 0, 0.48699,-99) , 
8, 0.429445, 0, 0, 0.497897,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.026372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494603,-99) , 
8, 0.142899, 1, 0, 0.503281,-99) , 
4, 0.999048, 1, 0, 0.506045,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.480245,-99) , 
3, 4.55103, 1, 0, 0.501259,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0309747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83949, 0, 1, 0.556244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469902,-99) , 
10, 0.247603, 1, 0, 0.501091,-99) , 
8, 1.81299, 0, 0, 0.504377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519979,-99) , 
NN(
0, 
0, 
-1, 1.77777, 1, -1, 0.442761,-99) , 
9, -0.00969226, 0, 0, 0.475128,-99) , 
10, 1.17997, 1, 0, 0.50095,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.043773);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487025,-99) , 
10, -0.389856, 1, 0, 0.499262,-99) , 
NN(
0, 
0, 
-1, 0.49618, 0, -1, 0.462411,-99) , 
8, -0.712088, 0, 0, 0.495908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447491,-99) , 
10, -2.84794, 0, 0, 0.510979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380927,-99) , 
8, -0.870621, 1, 0, 0.471394,-99) , 
10, -1.9024, 0, 0, 0.492761,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0355207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.4788, 0, 1, 0.562259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46687,-99) , 
8, -1.03918, 0, 0, 0.496679,-99) , 
10, -1.97289, 1, 0, 0.531291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451331,-99) , 
8, 1.93894, 1, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433452,-99) , 
10, -1.72359, 0, 0, 0.496136,-99) , 
8, -0.71308, 1, 0, 0.502465,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0323972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485732,-99) , 
4, 0.999989, 0, 0, 0.502479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424527,-99) , 
4, 0.999566, 1, 0, 0.460423,-99) , 
4, 0.999774, 0, 0, 0.500027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446291,-99) , 
4, 0.999048, 0, 0, 0.498253,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.019967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471156,-99) , 
10, -2.37487, 0, 0, 0.500107,-99) , 
8, 1.92375, 0, 0, 0.50243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462847,-99) , 
3, 2.41741, 1, 0, 0.491322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424682,-99) , 
5, -0.238175, 1, 0, 0.479374,-99) , 
10, 0.949338, 1, 0, 0.499169,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0469043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427542, 0, 1, 0.549048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466809,-99) , 
9, -0.421425, 0, 0, 0.507236,-99) , 
10, 1.42618, 1, 0, 0.523416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488038,-99) , 
8, 0.151402, 1, 0, 0.511701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477026,-99) , 
8, 0.996897, 0, 0, 0.483047,-99) , 
5, 0.714254, 0, 0, 0.489598,-99) , 
9, -1.28043, 0, 0, 0.494539,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0229866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491978,-99) , 
5, -0.71432, 1, 0, 0.496302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453139,-99) , 
2, 0.21457, 1, 0, 0.494815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461163,-99) , 
0, 0.490471, 0, 0, 0.493181,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0258964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450761,-99) , 
4, 0.999051, 0, 0, 0.502369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443965,-99) , 
8, -1.28489, 0, 0, 0.500599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450978,-99) , 
3, 3.61712, 1, 0, 0.504196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399991,-99) , 
8, -0.877112, 1, 0, 0.47284,-99) , 
10, -1.92837, 0, 0, 0.497091,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0480868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479292,-99) , 
8, 0.142942, 0, 0, 0.504155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476339,-99) , 
8, -0.421728, 1, 0, 0.48433,-99) , 
5, -0.523819, 1, 0, 0.490221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423764,-99) , 
1, 0.0121806, 1, 0, 0.488364,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0306307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
1, -0.0015131, 1, 0, 0.498002,-99) , 
NN(
0, 
0, 
-1, -0.0264786, 0, -1, 0.470413,-99) , 
5, -0.904739, 0, 0, 0.495249,-99) , 
8, 2.42852, 0, 0, 0.496808,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0260315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491767,-99) , 
8, 2.1431, 0, 0, 0.494147,-99) , 
4, 0.999048, 1, 0, 0.496489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446997,-99) , 
3, 8.80212, 1, 0, 0.494881,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0177478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2859, 0, 1, 0.505853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448002,-99) , 
10, 2.42925, 1, 0, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436553,-99) , 
0, 0.489519, 0, 0, 0.502152,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0464758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486332,-99) , 
2, -0.00851221, 1, 0, 0.521714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445549,-99) , 
0, 0.498102, 0, 0, 0.475574,-99) , 
2, 0.0655515, 1, 0, 0.514272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485411,-99) , 
10, -0.201428, 1, 0, 0.523552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471528,-99) , 
2, -0.00615722, 0, 0, 0.486368,-99) , 
2, 0.0684877, 0, 0, 0.492358,-99) , 
1, 0.00149974, 0, 0, 0.499959,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0310784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503169, 0, 1, 0.517284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492204,-99) , 
9, -0.483757, 0, 0, 0.494393,-99) , 
1, 0.00243417, 0, 0, 0.500263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473374,-99) , 
2, 0.050656, 0, 0, 0.484897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43701,-99) , 
3, 4.27077, 1, 0, 0.474668,-99) , 
0, 0.494281, 0, 0, 0.495248,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0270829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.514315, 0, 1, 0.540746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463333,-99) , 
10, 0.395261, 1, 0, 0.503009,-99) , 
9, -1.66893, 0, 0, 0.505633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472871,-99) , 
0, 0.494691, 0, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 1.68603, 0, -1, 0.445864,-99) , 
0, 0.499995, 1, 0, 0.480841,-99) , 
10, 0.949338, 1, 0, 0.502053,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.038935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.148386, 0, 1, 0.52219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445166,-99) , 
3, 2.50357, 1, 0, 0.473406,-99) , 
2, -0.0456459, 0, 0, 0.510696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490363,-99) , 
9, -1.95018, 0, 0, 0.495805,-99) , 
NN(
0, 
0, 
-1, -1.38708, 0, -1, 0.434448,-99) , 
10, 0.716734, 1, 0, 0.491364,-99) , 
5, -0.619087, 1, 0, 0.496554,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0252463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0321018, 1, 1, 0.509536,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.483908,-99) , 
3, 4.55086, 1, 0, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451687,-99) , 
10, 2.00348, 1, 0, 0.502073,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0780676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479973,-99) , 
7, -0.237078, 0, 0, 0.527233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257287,-99) , 
7, -1.85501, 0, 0, 0.508116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474373,-99) , 
5, 0.428064, 1, 0, 0.495265,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.455296,-99) , 
2, 0.0691177, 1, 0, 0.489337,-99) , 
7, -951.286, 0, 0, 0.499714,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0520874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64688, 0, 1, 0.533682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415143,-99) , 
10, -1.0451, 0, 0, 0.492306,-99) , 
8, 0.14853, 1, 0, 0.508176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458602,-99) , 
5, -0.129433, 1, 0, 0.515089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460112,-99) , 
5, -0.836738, 1, 0, 0.474907,-99) , 
8, 0.428602, 0, 0, 0.49017,-99) , 
5, 0.142805, 0, 0, 0.498801,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0284792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495775,-99) , 
8, 0.940077, 0, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0.361844, 0, -1, 0.476959,-99) , 
10, 0.0759365, 1, 0, 0.494097,-99) , 
8, 2.42862, 0, 0, 0.495949,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0399558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71957, 0, 1, 0.511603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457287,-99) , 
0, 0.4943, 1, 0, 0.474413,-99) , 
10, 1.05924, 1, 0, 0.506139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483126,-99) , 
8, -1.50036, 1, 0, 0.509273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373057,-99) , 
8, -0.901319, 1, 0, 0.473449,-99) , 
10, -1.99955, 0, 0, 0.50258,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0276657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476967,-99) , 
5, -0.618944, 0, 0, 0.521816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477799,-99) , 
0, 0.496185, 0, 0, 0.49335,-99) , 
2, 0.0725002, 0, 0, 0.497647,-99) , 
NN(
0, 
0, 
-1, -0.142247, 0, -1, 0.458817,-99) , 
1, 0.00592662, 1, 0, 0.494045,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0383005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497979, 1, 1, 0.536453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461117,-99) , 
10, 1.4708, 1, 0, 0.517956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479202,-99) , 
5, -0.142752, 0, 0, 0.501141,-99) , 
NN(
0, 
0, 
-1, -2.35786, 0, -1, 0.477494,-99) , 
10, -0.227617, 1, 0, 0.49365,-99) , 
8, 1.57171, 0, 0, 0.496797,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0266614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488611,-99) , 
0, 0.495234, 0, 0, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443349,-99) , 
10, -2.42572, 0, 0, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427669,-99) , 
8, -1.85702, 0, 0, 0.499586,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0421208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00214218, 1, 1, 0.538154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492932,-99) , 
9, -3.46203, 1, 0, 0.503227,-99) , 
8, 1.00225, 0, 0, 0.512443,-99) , 
NN(
NN(
0, 
0, 
-1, -1.20925, 1, 1, 0.516825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472845,-99) , 
9, -0.20889, 0, 0, 0.477607,-99) , 
9, -3.29059, 1, 0, 0.491488,-99) , 
0, 0.498089, 1, 0, 0.501744,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0198592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45673,-99) , 
8, -1.56816, 0, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.470544,-99) , 
5, 0.809487, 1, 0, 0.495676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398313,-99) , 
1, -0.0116379, 0, 0, 0.492818,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0316569);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490511,-99) , 
9, -1.71396, 0, 0, 0.493937,-99) , 
NN(
0, 
0, 
-1, 0.0346527, 0, -1, 0.461664,-99) , 
10, 0.880149, 1, 0, 0.489594,-99) , 
8, 2.42862, 0, 0, 0.490943,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.020234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482482,-99) , 
10, 2.45865, 1, 0, 0.530493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497047,-99) , 
9, -1.48081, 0, 0, 0.499648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448791,-99) , 
10, 1.21748, 1, 0, 0.497607,-99) , 
9, -0.586623, 0, 0, 0.50036,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.037142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.17385, 1, 1, 0.51326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459831,-99) , 
0, 0.497637, 1, 0, 0.486966,-99) , 
5, 0.428546, 1, 0, 0.503115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490911,-99) , 
0, 0.501083, 1, 0, 0.500758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460473,-99) , 
8, -0.874894, 1, 0, 0.47208,-99) , 
8, 0.715798, 0, 0, 0.481937,-99) , 
0, 0.499995, 1, 0, 0.495707,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0209605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447064,-99) , 
1, 0.0099254, 1, 0, 0.501768,-99) , 
NN(
0, 
0, 
-1, 1.61909, 1, -1, 0.461372,-99) , 
10, 1.52672, 1, 0, 0.498479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43287,-99) , 
3, 8.96578, 1, 0, 0.496492,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0334851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461385,-99) , 
9, -1.80675, 1, 0, 0.505607,-99) , 
NN(
0, 
0, 
-1, 0.500946, 1, -1, 0.48455,-99) , 
2, 0.0717919, 0, 0, 0.487699,-99) , 
8, 2.42856, 0, 0, 0.488962,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0408254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0473335, 0, 1, 0.548863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458338,-99) , 
10, 0.0675442, 1, 0, 0.519797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495826,-99) , 
7, -951.287, 0, 0, 0.512318,-99) , 
NN(
0, 
0, 
-1, 0.00795506, 1, -1, 0.485345,-99) , 
5, -0.428575, 1, 0, 0.494587,-99) , 
2, -0.0735238, 1, 0, 0.498557,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0344639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499232,-99) , 
9, -2.1304, 0, 0, 0.506488,-99) , 
NN(
0, 
0, 
-1, 2.23721, 0, -1, 0.446397,-99) , 
10, 0.513805, 1, 0, 0.500805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48785,-99) , 
0, 0.498093, 1, 0, 0.505571,-99) , 
NN(
0, 
0, 
-1, -0.0521866, 0, -1, 0.462087,-99) , 
8, -0.143001, 0, 0, 0.486849,-99) , 
5, -0.428569, 0, 0, 0.496047,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.041813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.30052, 0, 1, 0.519331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47815,-99) , 
8, -0.317743, 0, 0, 0.49736,-99) , 
5, -0.238134, 0, 0, 0.513029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487168,-99) , 
8, 0.724279, 0, 0, 0.502249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391207,-99) , 
8, 1.86324, 0, 0, 0.462583,-99) , 
5, -0.0479025, 1, 0, 0.491144,-99) , 
10, 0.194301, 1, 0, 0.506668,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0330667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468142,-99) , 
10, 1.82067, 1, 0, 0.513861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492568,-99) , 
5, -0.714128, 1, 0, 0.496786,-99) , 
9, -2.05549, 0, 0, 0.501631,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.462443,-99) , 
4, 0.999524, 0, 0, 0.499519,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0320141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472393,-99) , 
8, -0.557635, 1, 0, 0.504358,-99) , 
8, 0.203367, 0, 0, 0.514914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402793,-99) , 
4, 0.999819, 0, 0, 0.497653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442724,-99) , 
4, 0.999524, 0, 0, 0.494952,-99) , 
9, -3.49443, 1, 0, 0.500832,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0742658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305632,-99) , 
7, -1.56754, 0, 0, 0.514666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473362,-99) , 
9, -3.82791, 1, 0, 0.485182,-99) , 
7, -951.286, 0, 0, 0.502694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453331,-99) , 
2, 0.0333039, 1, 0, 0.496849,-99) , 
NN(
0, 
0, 
-1, -2.09807, 0, -1, 0.453388,-99) , 
5, -0.238135, 1, 0, 0.480149,-99) , 
10, -0.157559, 1, 0, 0.49428,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0194739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477419,-99) , 
10, -1.56604, 0, 0, 0.496282,-99) , 
NN(
0, 
0, 
-1, 0.428514, 1, -1, 0.474742,-99) , 
0, 0.493328, 0, 0, 0.493278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449554,-99) , 
2, -0.217172, 0, 0, 0.491675,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0328987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.41669, 1, 1, 0.50918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474346,-99) , 
8, -1.60556, 1, 0, 0.483081,-99) , 
9, -3.72887, 0, 0, 0.502129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458797,-99) , 
8, 0.2105, 0, 0, 0.490805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411421,-99) , 
5, -0.619395, 1, 0, 0.472672,-99) , 
10, 0.98394, 1, 0, 0.497976,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0553695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491455,-99) , 
5, -0.42843, 0, 0, 0.515296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372952,-99) , 
8, -0.567353, 1, 0, 0.482219,-99) , 
10, -1.6819, 0, 0, 0.506985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478875,-99) , 
10, 0.492209, 1, 0, 0.49255,-99) , 
NN(
0, 
0, 
-1, 0.332771, 1, -1, 0.44764,-99) , 
9, -1.94436, 0, 0, 0.481348,-99) , 
10, 0.0825298, 1, 0, 0.499022,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0369373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53444, 0, 1, 0.558597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463484,-99) , 
8, 1.77541, 0, 0, 0.502273,-99) , 
10, 0.367233, 1, 0, 0.521039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49614,-99) , 
0, 0.502851, 0, 0, 0.50198,-99) , 
NN(
0, 
0, 
-1, -0.333354, 1, -1, 0.469981,-99) , 
10, -0.241593, 1, 0, 0.493287,-99) , 
8, 1.28559, 0, 0, 0.498447,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0113374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5449,-99) , 
NN(
0, 
0, 
-1, 0.999774, 0, -1, 0.497159,-99) , 
4, 0.999048, 1, 0, 0.498499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451252,-99) , 
2, -0.217241, 0, 0, 0.496759,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0650769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.933492, 1, 1, 0.530499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473146,-99) , 
9, -4.05493, 1, 0, 0.488614,-99) , 
8, 0.142682, 0, 0, 0.508729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484379,-99) , 
9, -3.80906, 0, 0, 0.519097,-99) , 
NN(
0, 
0, 
-1, -1.34874, 0, -1, 0.471201,-99) , 
8, -0.136589, 1, 0, 0.485433,-99) , 
5, 0.0474772, 1, 0, 0.496496,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0386337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.78572, 0, 1, 0.518736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454486,-99) , 
9, -2.57626, 1, 0, 0.50126,-99) , 
8, 0.158149, 0, 0, 0.509762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485652,-99) , 
0, 0.49428, 1, 0, 0.495961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434846,-99) , 
9, -1.36431, 0, 0, 0.48216,-99) , 
10, 0.744173, 1, 0, 0.504935,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0231606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.839577, 1, 1, 0.555092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454599,-99) , 
10, -2.37061, 0, 0, 0.498183,-99) , 
8, 1.85606, 0, 0, 0.501601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522502,-99) , 
NN(
0, 
0, 
-1, 2.11057, 1, -1, 0.437516,-99) , 
8, 0.803415, 1, 0, 0.471386,-99) , 
10, 1.41623, 1, 0, 0.498697,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0297598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71445, 1, 1, 0.533704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484422,-99) , 
8, 1.50481, 0, 0, 0.49558,-99) , 
8, 0.144763, 1, 0, 0.513228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476978,-99) , 
0, 0.499043, 1, 0, 0.498036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410534,-99) , 
1, 0.0104332, 1, 0, 0.494896,-99) , 
0, 0.500948, 0, 0, 0.499798,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0416338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451243,-99) , 
8, -0.73044, 0, 0, 0.536443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489478,-99) , 
9, -0.0698979, 0, 0, 0.491983,-99) , 
9, -4.06614, 1, 0, 0.496084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371011,-99) , 
8, -1.34779, 1, 0, 0.46212,-99) , 
10, -2.32472, 0, 0, 0.493777,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0366064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46328,-99) , 
8, 0.636101, 0, 0, 0.545828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426907,-99) , 
10, -0.169978, 1, 0, 0.496859,-99) , 
9, -2.38629, 0, 0, 0.501394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485948,-99) , 
10, 2.20558, 1, 0, 0.518795,-99) , 
NN(
0, 
0, 
-1, 0.97158, 1, -1, 0.472386,-99) , 
9, -0.462598, 0, 0, 0.483231,-99) , 
10, 0.0825298, 1, 0, 0.49576,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0379117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495229,-99) , 
0, 0.497137, 0, 0, 0.517665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463321,-99) , 
10, 2.39575, 1, 0, 0.511231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488266,-99) , 
9, -2.07573, 0, 0, 0.492737,-99) , 
NN(
0, 
0, 
-1, 2.2699, 0, -1, 0.445896,-99) , 
10, 0.716734, 1, 0, 0.489294,-99) , 
5, -0.619055, 1, 0, 0.495303,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0282125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.55311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456699,-99) , 
10, 1.47144, 1, 0, 0.530285,-99) , 
NN(
0, 
0, 
-1, -1.69228, 0, -1, 0.491176,-99) , 
8, 1.57175, 0, 0, 0.496095,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0408489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47233,-99) , 
0, 0.491153, 0, 0, 0.498762,-99) , 
2, 0.0630468, 0, 0, 0.51642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486043,-99) , 
0, 0.501492, 1, 0, 0.506064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460025,-99) , 
9, -2.31855, 0, 0, 0.483019,-99) , 
8, 0.429445, 1, 0, 0.495646,-99) , 
0, 0.493328, 1, 0, 0.498658,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0305549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -5.04475, 1, 1, 0.511428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453802,-99) , 
1, -0.00981749, 0, 0, 0.509326,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.466727,-99) , 
10, 1.07919, 1, 0, 0.503992,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.026348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493885,-99) , 
0, 0.501264, 1, 0, 0.507638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491504,-99) , 
5, 0.904724, 0, 0, 0.494276,-99) , 
0, 0.49809, 0, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460561,-99) , 
8, -1.56864, 0, 0, 0.499275,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0369086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499816,-99) , 
10, -1.47106, 1, 0, 0.523403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46414,-99) , 
10, -2.52807, 0, 0, 0.515022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497293,-99) , 
9, -3.61532, 1, 0, 0.500986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329637,-99) , 
10, -1.37113, 0, 0, 0.420474,-99) , 
10, -1.2014, 0, 0, 0.493438,-99) , 
8, -0.140935, 1, 0, 0.500891,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0199401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67759, 0, 1, 0.504836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463413,-99) , 
9, 0.234971, 0, 0, 0.479202,-99) , 
10, 0.965261, 1, 0, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447722,-99) , 
3, 8.96578, 1, 0, 0.499685,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0251217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495401,-99) , 
5, -0.71432, 0, 0, 0.514751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439148,-99) , 
10, 0.167795, 1, 0, 0.496128,-99) , 
9, -1.84068, 0, 0, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448591,-99) , 
2, -0.213256, 0, 0, 0.4983,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0193397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555611,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.537305,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.494494,-99) , 
4, 0.999524, 1, 0, 0.497154,-99) , 
9, 0.0913196, 0, 0, 0.49981,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0341263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714293, 1, 1, 0.51019,-99) , 
NN(
0, 
0, 
-1, -5.08303, 1, -1, 0.4554,-99) , 
10, -2.48691, 0, 0, 0.506557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456159,-99) , 
10, 2.54372, 1, 0, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398721,-99) , 
5, -0.238253, 1, 0, 0.479115,-99) , 
10, 0.657074, 1, 0, 0.501299,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0239093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909299, 1, 1, 0.520131,-99) , 
NN(
0, 
0, 
-1, -1.89719, 0, -1, 0.493803,-99) , 
0, 0.500948, 0, 0, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0.941004, 1, -1, 0.451547,-99) , 
5, 0.904723, 1, 0, 0.498535,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0300404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53034, 0, 1, 0.565158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455423,-99) , 
0, 0.500949, 1, 0, 0.49417,-99) , 
10, 0.353108, 1, 0, 0.51687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481511,-99) , 
10, -0.119178, 1, 0, 0.496487,-99) , 
NN(
0, 
0, 
-1, -0.867764, 1, -1, 0.467029,-99) , 
10, -1.90714, 0, 0, 0.491831,-99) , 
8, 1.28658, 0, 0, 0.496471,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0460216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492427,-99) , 
5, 0.0476012, 1, 0, 0.504787,-99) , 
0, 0.49333, 1, 0, 0.517656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472313,-99) , 
8, 0.0481512, 0, 0, 0.503809,-99) , 
NN(
0, 
0, 
-1, 0.049435, 1, -1, 0.480389,-99) , 
9, -2.90788, 0, 0, 0.488971,-99) , 
8, 1.00035, 0, 0, 0.496399,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0346001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.84875, 0, 1, 0.553981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447374,-99) , 
9, -4.34887, 1, 0, 0.490869,-99) , 
8, -1.09972, 1, 0, 0.516049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480523,-99) , 
10, 0.874039, 1, 0, 0.520198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492679,-99) , 
9, 0.0752415, 0, 0, 0.494816,-99) , 
8, 1.85695, 0, 0, 0.4972,-99) , 
9, -4.05567, 1, 0, 0.500086,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0276151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500604, 1, 1, 0.520927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496367,-99) , 
0, 0.490378, 1, 0, 0.499275,-99) , 
0, 0.499222, 0, 0, 0.505914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478801,-99) , 
9, -2.64631, 0, 0, 0.502932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436974,-99) , 
10, -1.11362, 0, 0, 0.482098,-99) , 
0, 0.50285, 1, 0, 0.502297,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.03918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14264, 0, 1, 0.511199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442393,-99) , 
8, 1.06692, 1, 0, 0.473809,-99) , 
10, 1.62641, 1, 0, 0.508109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469474,-99) , 
9, -4.38277, 0, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392101,-99) , 
8, -0.871526, 1, 0, 0.467168,-99) , 
10, -1.9024, 0, 0, 0.502819,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0242573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494756,-99) , 
8, 0.143725, 1, 0, 0.50344,-99) , 
4, 0.999048, 1, 0, 0.505363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452941,-99) , 
3, 8.74981, 1, 0, 0.503653,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0240009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142843, 1, 1, 0.518246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469801,-99) , 
8, -0.711445, 0, 0, 0.514155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422573,-99) , 
10, -2.44549, 0, 0, 0.49586,-99) , 
8, -1.58693, 1, 0, 0.498726,-99) , 
9, -2.63472, 0, 0, 0.50528,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0354708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.149747, 0, 1, 0.522396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457187,-99) , 
10, -1.96797, 0, 0, 0.513741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497921,-99) , 
9, -3.85926, 1, 0, 0.509667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479138,-99) , 
5, -0.619065, 1, 0, 0.487119,-99) , 
0, 0.496185, 1, 0, 0.494308,-99) , 
3, 4.49228, 0, 0, 0.498052,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0412041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426791,-99) , 
4, 0.999524, 0, 0, 0.497867,-99) , 
9, -3.47407, 1, 0, 0.502545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473529,-99) , 
9, -3.49248, 0, 0, 0.491923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414235,-99) , 
8, -0.0761111, 1, 0, 0.477936,-99) , 
10, -1.16499, 0, 0, 0.494836,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0380162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.02699, 1, 1, 0.511069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437412,-99) , 
9, -1.45891, 0, 0, 0.493422,-99) , 
10, 0.618172, 1, 0, 0.50699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441297,-99) , 
10, -2.84823, 0, 0, 0.498738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404985,-99) , 
8, -0.866772, 1, 0, 0.470749,-99) , 
10, -1.9024, 0, 0, 0.502257,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0354021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488226,-99) , 
6, 0.0030236, 0, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442803,-99) , 
1, -0.0105848, 0, 0, 0.497993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445953,-99) , 
1, 0.0103564, 1, 0, 0.496009,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.027899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.544172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420444,-99) , 
10, -2.17673, 0, 0, 0.502882,-99) , 
8, -1.28568, 1, 0, 0.506176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45062,-99) , 
10, 2.06746, 1, 0, 0.503621,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0235068);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484946,-99) , 
8, 0.885209, 0, 0, 0.521735,-99) , 
NN(
0, 
0, 
-1, 0.912984, 1, -1, 0.491099,-99) , 
9, -0.361622, 0, 0, 0.492998,-99) , 
8, 2.42843, 0, 0, 0.494561,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0334737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46,-99) , 
2, -0.0726098, 0, 0, 0.509394,-99) , 
NN(
0, 
0, 
-1, -1.44502, 0, -1, 0.487031,-99) , 
8, -0.482199, 1, 0, 0.491573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448706,-99) , 
8, -1.57057, 0, 0, 0.489465,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0344748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237583, 1, 1, 0.525443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48032,-99) , 
5, 0.0476107, 0, 0, 0.497828,-99) , 
0, 0.494417, 0, 0, 0.51153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553909,-99) , 
NN(
0, 
0, 
-1, -1.36005, 0, -1, 0.488215,-99) , 
9, -4.81026, 1, 0, 0.491305,-99) , 
0, 0.497138, 1, 0, 0.499542,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0179278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461898,-99) , 
3, 7.06696, 1, 0, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454927,-99) , 
3, 8.71137, 1, 0, 0.503307,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0286197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00736184, 0, 1, 0.533376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490512,-99) , 
9, -4.6066, 1, 0, 0.494001,-99) , 
9, -0.156543, 0, 0, 0.495796,-99) , 
1, -0.00621516, 1, 0, 0.498835,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0861332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432454,-99) , 
7, -1.16495, 0, 0, 0.533405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252173,-99) , 
7, -1.85808, 0, 0, 0.511767,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00347, 0, 1, 0.517317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486058,-99) , 
9, -4.02294, 1, 0, 0.491384,-99) , 
3, 4.34555, 0, 0, 0.496371,-99) , 
7, -951.286, 0, 0, 0.50481,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0401963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494411, 0, 1, 0.552764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459928,-99) , 
7, -951.286, 1, 0, 0.489695,-99) , 
0, 0.497132, 1, 0, 0.516473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481831,-99) , 
9, -2.57713, 0, 0, 0.488884,-99) , 
4, 0.999524, 1, 0, 0.491758,-99) , 
8, 1.28571, 0, 0, 0.49634,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0303817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64038, 0, 1, 0.553977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464613,-99) , 
10, 0.262749, 1, 0, 0.500177,-99) , 
8, 1.85695, 0, 0, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0.152012, 0, -1, 0.471425,-99) , 
10, 1.58307, 1, 0, 0.501166,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0250834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496043,-99) , 
2, -0.0662796, 1, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0.449639, 1, -1, 0.451459,-99) , 
4, 0.999524, 0, 0, 0.498123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399066,-99) , 
1, 0.0119697, 1, 0, 0.49523,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0170018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.148812, 1, 1, 0.535843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494761,-99) , 
5, -0.972803, 0, 0, 0.523053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498558,-99) , 
8, 1.85421, 0, 0, 0.501261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430628,-99) , 
10, 1.59965, 1, 0, 0.469535,-99) , 
10, 1.21485, 1, 0, 0.499262,-99) , 
5, -0.904784, 1, 0, 0.50169,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0290283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.82703, 1, 1, 0.543474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437777,-99) , 
10, 0.456302, 1, 0, 0.489977,-99) , 
5, 0.0478163, 1, 0, 0.510468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534257,-99) , 
NN(
0, 
0, 
-1, 0.999797, 0, -1, 0.493487,-99) , 
4, 0.999527, 1, 0, 0.495646,-99) , 
8, 1.28588, 0, 0, 0.498327,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0483941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466859,-99) , 
5, -0.909297, 0, 0, 0.512497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281131,-99) , 
7, -1.85627, 0, 0, 0.494993,-99) , 
7, -951.286, 1, 0, 0.502838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421931,-99) , 
0, 0.498107, 0, 0, 0.460992,-99) , 
5, 0.904661, 1, 0, 0.50054,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0444097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485762,-99) , 
10, -1.40263, 0, 0, 0.511152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258879,-99) , 
7, -1.85672, 0, 0, 0.486753,-99) , 
7, -951.286, 1, 0, 0.497601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452947,-99) , 
2, -0.206242, 0, 0, 0.490774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408882,-99) , 
5, -0.428737, 0, 0, 0.464193,-99) , 
2, -0.0703192, 0, 0, 0.492237,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0367787);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453456,-99) , 
8, -0.999369, 0, 0, 0.507673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482211,-99) , 
9, -3.95637, 1, 0, 0.48716,-99) , 
0, 0.495232, 1, 0, 0.492275,-99) , 
4, 0.998572, 1, 0, 0.493906,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0572488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490289,-99) , 
10, -1.38304, 1, 0, 0.518364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451065,-99) , 
8, -0.820034, 1, 0, 0.487819,-99) , 
9, -3.73206, 0, 0, 0.502868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476313,-99) , 
10, -0.380756, 1, 0, 0.487437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329404,-99) , 
9, -3.82062, 1, 0, 0.425105,-99) , 
10, -1.18518, 0, 0, 0.481033,-99) , 
8, -0.142269, 1, 0, 0.488729,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0336185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491128,-99) , 
7, -951.286, 1, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415736,-99) , 
4, 0.999751, 0, 0, 0.499878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393712,-99) , 
10, -1.05575, 1, 0, 0.44499,-99) , 
4, 0.999524, 0, 0, 0.496881,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0505414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466411,-99) , 
9, -2.84476, 0, 0, 0.50128,-99) , 
9, -3.34667, 1, 0, 0.505112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481901,-99) , 
9, -3.42095, 0, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0.31678, 1, -1, 0.415424,-99) , 
8, 0.140903, 1, 0, 0.486363,-99) , 
10, -0.936216, 0, 0, 0.497982,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0362412);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497691,-99) , 
10, -1.5526, 0, 0, 0.513023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4815,-99) , 
8, -0.136896, 1, 0, 0.48767,-99) , 
9, -3.72308, 1, 0, 0.493682,-99) , 
9, 0.196083, 0, 0, 0.496563,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0339504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499991, 0, 1, 0.512748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474458,-99) , 
3, 4.64475, 0, 0, 0.493492,-99) , 
3, 3.00271, 1, 0, 0.506226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447059,-99) , 
3, 8.74922, 1, 0, 0.50432,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0159277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496574,-99) , 
1, -0.00808413, 1, 0, 0.498917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462789,-99) , 
0, 0.505709, 1, 0, 0.497486,-99) , 
2, -0.217323, 1, 0, 0.499146,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0345061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.60785, 0, 1, 0.542944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448903,-99) , 
8, 0.696697, 1, 0, 0.500614,-99) , 
8, 0.881574, 0, 0, 0.506166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482255,-99) , 
0, 0.5038, 0, 0, 0.490232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434446,-99) , 
5, 0.714204, 1, 0, 0.483784,-99) , 
10, -0.000640301, 1, 0, 0.498778,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.020556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00106, 0, 1, 0.532683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473934,-99) , 
10, 0.596819, 1, 0, 0.501575,-99) , 
9, -1.14398, 0, 0, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451525,-99) , 
10, 2.50768, 1, 0, 0.503374,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0221701);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568046,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490525,-99) , 
8, 2.42849, 0, 0, 0.492654,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0232622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.24559, 1, 1, 0.533724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527936,-99) , 
NN(
0, 
0, 
-1, 7.14776, 1, -1, 0.490771,-99) , 
3, 8.80985, 0, 0, 0.491975,-99) , 
9, -0.483757, 0, 0, 0.495109,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.023048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428708, 1, 1, 0.542985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495045,-99) , 
3, 7.9935, 0, 0, 0.49722,-99) , 
0, 0.491424, 1, 0, 0.500388,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.448939,-99) , 
4, 0.999524, 0, 0, 0.497598,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0392377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480826,-99) , 
3, 4.49684, 1, 0, 0.503667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439275,-99) , 
5, -0.81416, 1, 0, 0.474115,-99) , 
8, -0.426228, 0, 0, 0.499982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487927,-99) , 
9, -3.99671, 0, 0, 0.505601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322993,-99) , 
8, -0.36222, 1, 0, 0.478513,-99) , 
10, -1.56604, 0, 0, 0.495667,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.014633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554701,-99) , 
NN(
0, 
0, 
-1, 2.01494, 1, -1, 0.497134,-99) , 
0, 0.505708, 0, 0, 0.499512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420364,-99) , 
4, 0.999048, 0, 0, 0.497065,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.051642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.90739, 0, 1, 0.521716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416652,-99) , 
8, 0.0623022, 0, 0, 0.483857,-99) , 
8, -0.318979, 1, 0, 0.506372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487553,-99) , 
8, 0.0612991, 1, 0, 0.495585,-99) , 
NN(
0, 
0, 
-1, -0.809651, 1, -1, 0.456018,-99) , 
8, -0.428578, 0, 0, 0.490473,-99) , 
9, -3.41989, 1, 0, 0.495576,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0298974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715959, 0, 1, 0.511753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444932,-99) , 
3, 4.13175, 1, 0, 0.50865,-99) , 
NN(
0, 
0, 
-1, 0.809053, 1, -1, 0.479875,-99) , 
3, 4.55313, 1, 0, 0.503311,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.027749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14282, 0, 1, 0.511959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472211,-99) , 
4, 0.999524, 0, 0, 0.509884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44574,-99) , 
10, -2.84647, 0, 0, 0.508206,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0225259);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.17537, 0, 1, 0.50891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41316,-99) , 
1, 0.0123239, 1, 0, 0.506022,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0484012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490749,-99) , 
5, 0.142944, 1, 0, 0.514718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433797,-99) , 
10, 2.17631, 1, 0, 0.508109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467125,-99) , 
3, 4.09707, 1, 0, 0.497173,-99) , 
NN(
0, 
0, 
-1, -1.57231, 0, -1, 0.47068,-99) , 
7, -951.286, 1, 0, 0.482508,-99) , 
8, 0.716006, 0, 0, 0.491135,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0490256);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302562,-99) , 
7, -1.85261, 0, 0, 0.501546,-99) , 
NN(
0, 
0, 
-1, 0.428046, 1, -1, 0.483718,-99) , 
7, -951.286, 0, 0, 0.493594,-99) , 
8, 2.42849, 0, 0, 0.495939,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0365329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473281,-99) , 
8, 1.77531, 0, 0, 0.509947,-99) , 
10, 0.206726, 1, 0, 0.526282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487613,-99) , 
5, -0.428878, 0, 0, 0.514786,-99) , 
NN(
0, 
0, 
-1, -1.72618, 0, -1, 0.491909,-99) , 
8, -0.551318, 1, 0, 0.498089,-99) , 
8, 1.28524, 0, 0, 0.503468,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0331529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85139, 0, 1, 0.523803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425603,-99) , 
8, 1.89533, 1, 0, 0.491941,-99) , 
10, 1.25031, 1, 0, 0.513412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441615,-99) , 
10, -2.79611, 0, 0, 0.501499,-99) , 
NN(
0, 
0, 
-1, -0.523824, 1, -1, 0.475932,-99) , 
5, -0.333334, 0, 0, 0.495093,-99) , 
10, 0.00769318, 0, 0, 0.5012,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0368543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.02143, 0, 1, 0.526405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
5, 0.714199, 1, 0, 0.518962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482061,-99) , 
5, -0.336254, 0, 0, 0.532335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486692,-99) , 
2, -0.104826, 1, 0, 0.490681,-99) , 
3, 0.497361, 1, 0, 0.493928,-99) , 
3, 4.38855, 0, 0, 0.49895,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0272114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.741178, 1, 1, 0.54065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49452,-99) , 
10, -1.5175, 0, 0, 0.531319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481696,-99) , 
2, -0.0729883, 0, 0, 0.499319,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.460085,-99) , 
5, 0.809437, 1, 0, 0.494518,-99) , 
2, 0.0747642, 0, 0, 0.500045,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0369216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495298,-99) , 
5, -0.143348, 0, 0, 0.522462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458057,-99) , 
10, -2.52078, 0, 0, 0.511067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493968,-99) , 
9, -3.68427, 1, 0, 0.498042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362194,-99) , 
10, -1.61583, 0, 0, 0.450337,-99) , 
10, -1.36397, 0, 0, 0.493426,-99) , 
8, -0.426197, 1, 0, 0.497917,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0199732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468725,-99) , 
8, -0.997579, 0, 0, 0.502411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404631,-99) , 
8, -1.03523, 1, 0, 0.457249,-99) , 
10, -2.01366, 0, 0, 0.499595,-99) , 
9, -4.74947, 1, 0, 0.501436,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0228198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467867,-99) , 
2, 0.0595016, 1, 0, 0.517393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497067,-99) , 
8, -1.56226, 1, 0, 0.499816,-99) , 
5, -0.714271, 1, 0, 0.503773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463528,-99) , 
2, 0.214776, 1, 0, 0.502276,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0255734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475442,-99) , 
10, 1.1192, 1, 0, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0.498079, 0, -1, 0.455498,-99) , 
10, -2.47889, 0, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450231,-99) , 
10, 2.24389, 1, 0, 0.500142,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0561825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483728,-99) , 
10, 1.42525, 1, 0, 0.519159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449803,-99) , 
9, -3.32934, 1, 0, 0.475679,-99) , 
5, 0.713931, 1, 0, 0.512277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491894,-99) , 
7, 0.91877, 0, 0, 0.505247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300432,-99) , 
7, -1.8569, 0, 0, 0.491299,-99) , 
7, -951.286, 1, 0, 0.500617,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0368306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49525,-99) , 
8, 0.714694, 0, 0, 0.506689,-99) , 
10, -1.89719, 1, 0, 0.510707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488604,-99) , 
10, -1.55101, 0, 0, 0.508774,-99) , 
NN(
0, 
0, 
-1, -1.02905, 0, -1, 0.481837,-99) , 
8, 0.14853, 1, 0, 0.492026,-99) , 
5, 0.333315, 1, 0, 0.502976,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0420868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.23006, 1, 1, 0.514958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454011,-99) , 
10, 0.516084, 1, 0, 0.509388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457662,-99) , 
9, -3.32676, 0, 0, 0.503643,-99) , 
NN(
0, 
0, 
-1, -0.401461, 0, -1, 0.476152,-99) , 
0, 0.498089, 1, 0, 0.489231,-99) , 
5, 0.0475692, 0, 0, 0.499398,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.02063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394501,-99) , 
4, 0.999751, 0, 0, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.459543,-99) , 
4, 0.999524, 0, 0, 0.497871,-99) , 
9, 0.0526358, 0, 0, 0.500227,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0293216);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502125, 0, 1, 0.513946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478805,-99) , 
5, 0.523498, 1, 0, 0.499129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456728,-99) , 
10, -1.93439, 0, 0, 0.49377,-99) , 
0, 0.497137, 0, 0, 0.505829,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0393161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480889,-99) , 
8, -1.05414, 0, 0, 0.535554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465638,-99) , 
5, -0.877637, 0, 0, 0.496177,-99) , 
8, 0.714438, 1, 0, 0.524897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485017,-99) , 
5, 0.183408, 0, 0, 0.499195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444821,-99) , 
4, 0.999048, 0, 0, 0.496969,-99) , 
5, -0.714302, 1, 0, 0.503406,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.042931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488997,-99) , 
2, -0.0295718, 0, 0, 0.515896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460518,-99) , 
3, 0.459518, 1, 0, 0.474522,-99) , 
3, 1.06367, 0, 0, 0.504408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534754,-99) , 
NN(
0, 
0, 
-1, -1.67276, 0, -1, 0.482812,-99) , 
8, -1.28067, 1, 0, 0.485877,-99) , 
5, -0.238097, 1, 0, 0.493232,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0410018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491358,-99) , 
4, 0.999524, 1, 0, 0.513545,-99) , 
5, 0.845775, 1, 0, 0.530728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489966,-99) , 
5, 0.120159, 1, 0, 0.509119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464094,-99) , 
10, -1.03191, 1, 0, 0.490398,-99) , 
8, 0.144785, 0, 0, 0.500423,-99) , 
5, 0.809487, 0, 0, 0.504525,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0204147);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45526,-99) , 
10, 2.27047, 1, 0, 0.503638,-99) , 
NN(
0, 
0, 
-1, -0.686789, 0, -1, 0.464666,-99) , 
0, 0.504757, 1, 0, 0.500876,-99) , 
8, 2.42862, 0, 0, 0.502679,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.018516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465953,-99) , 
10, -1.89719, 0, 0, 0.495963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431443,-99) , 
4, 0.999774, 0, 0, 0.49371,-99) , 
NN(
0, 
0, 
-1, -0.854721, 1, -1, 0.448075,-99) , 
4, 0.999524, 0, 0, 0.49132,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0358073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26531, 0, 1, 0.531482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463228,-99) , 
10, 1.66469, 1, 0, 0.519602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542721,-99) , 
NN(
0, 
0, 
-1, -2.21741, 0, -1, 0.487029,-99) , 
9, -4.78859, 1, 0, 0.490058,-99) , 
8, 1.2859, 0, 0, 0.495543,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0374584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497087,-99) , 
5, 0.904723, 0, 0, 0.500953,-99) , 
9, -3.65007, 1, 0, 0.504275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481267,-99) , 
9, -3.68559, 0, 0, 0.498053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375218,-99) , 
8, -0.114755, 1, 0, 0.479011,-99) , 
10, -1.26464, 0, 0, 0.497192,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0312055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0754972, 0, 1, 0.509734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545925,-99) , 
NN(
0, 
0, 
-1, -0.762445, 1, -1, 0.443172,-99) , 
8, -1.5797, 1, 0, 0.467884,-99) , 
10, -1.89719, 0, 0, 0.504216,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0408859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495024,-99) , 
2, 0.0747683, 1, 0, 0.52617,-99) , 
NN(
0, 
0, 
-1, -3.0177, 1, -1, 0.485739,-99) , 
2, -0.0743827, 0, 0, 0.515111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483689,-99) , 
0, 0.491424, 1, 0, 0.487283,-99) , 
4, 0.999049, 1, 0, 0.489843,-99) , 
3, 4.48706, 0, 0, 0.494649,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0369754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427746, 0, 1, 0.518841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457564,-99) , 
9, -4.01973, 1, 0, 0.486594,-99) , 
10, -1.25486, 0, 0, 0.509674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487103,-99) , 
10, -1.23451, 1, 0, 0.494431,-99) , 
NN(
0, 
0, 
-1, -1.07828, 0, -1, 0.476253,-99) , 
5, 0.523785, 1, 0, 0.488251,-99) , 
0, 0.499994, 0, 0, 0.495683,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0199675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567175,-99) , 
NN(
NN(
0, 
0, 
-1, -0.808501, 1, 1, 0.514954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431793,-99) , 
10, 0.499085, 1, 0, 0.495743,-99) , 
5, -0.523803, 1, 0, 0.501678,-99) , 
8, 2.42849, 0, 0, 0.503471,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.032888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499021,-99) , 
8, 0.0611773, 1, 0, 0.504291,-99) , 
NN(
0, 
0, 
-1, -0.811895, 1, -1, 0.475718,-99) , 
8, -0.428597, 0, 0, 0.500732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471586,-99) , 
0, 0.496187, 1, 0, 0.489101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375222,-99) , 
8, -0.54441, 1, 0, 0.461739,-99) , 
10, -1.61491, 0, 0, 0.49342,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.02309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497335,-99) , 
4, 0.999954, 0, 0, 0.53365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495755,-99) , 
2, -0.135628, 1, 0, 0.498866,-99) , 
2, 0.085279, 0, 0, 0.502996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447031,-99) , 
4, 0.999048, 0, 0, 0.501134,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0203216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.637639, 1, 1, 0.558772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499422,-99) , 
5, 0.04804, 0, 0, 0.538407,-99) , 
NN(
NN(
0, 
0, 
-1, 0.71387, 0, 1, 0.5064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451897,-99) , 
4, 0.999049, 0, 0, 0.504683,-99) , 
8, 1.85763, 0, 0, 0.507335,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.023034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493989,-99) , 
8, 0.142899, 0, 0, 0.502288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454214,-99) , 
2, -0.211567, 0, 0, 0.500447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41961,-99) , 
1, 0.0119697, 1, 0, 0.497854,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0276677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495622,-99) , 
0, 0.496424, 0, 0, 0.506161,-99) , 
0, 0.503033, 0, 0, 0.508157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516161,-99) , 
NN(
0, 
0, 
-1, 0.505014, 1, -1, 0.459494,-99) , 
0, 0.506344, 0, 0, 0.473477,-99) , 
0, 0.503804, 1, 0, 0.504577,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0159046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00565324, 1, 1, 0.505551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453817,-99) , 
10, -2.42572, 0, 0, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463615,-99) , 
8, -1.85622, 0, 0, 0.502425,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0327158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00867769, 0, 1, 0.507387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392778,-99) , 
6, 0.0130244, 1, 0, 0.502611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46055,-99) , 
10, 1.82388, 1, 0, 0.49532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43674,-99) , 
9, -1.3675, 0, 0, 0.480155,-99) , 
10, 0.676775, 1, 0, 0.498435,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0309697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494052,-99) , 
3, 0.523959, 1, 0, 0.497647,-99) , 
4, 0.999526, 1, 0, 0.50108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48285,-99) , 
8, 1.0035, 0, 0, 0.496525,-99) , 
NN(
0, 
0, 
-1, -2.94332, 1, -1, 0.441087,-99) , 
2, -0.0700353, 0, 0, 0.480803,-99) , 
3, 4.44883, 1, 0, 0.497104,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0185307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498159,-99) , 
9, -1.43682, 0, 0, 0.500613,-99) , 
NN(
0, 
0, 
-1, -951.288, 1, -1, 0.463529,-99) , 
10, 1.05673, 1, 0, 0.497014,-99) , 
9, 0.195878, 0, 0, 0.499436,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.016008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.47943, 1, 1, 0.536246,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85403, 0, 1, 0.504045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419209,-99) , 
9, -0.789766, 0, 0, 0.46431,-99) , 
10, 1.23355, 1, 0, 0.501698,-99) , 
9, -0.132098, 0, 0, 0.503613,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0375119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444329,-99) , 
4, 0.999524, 0, 0, 0.502385,-99) , 
9, -3.5876, 1, 0, 0.506155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481941,-99) , 
9, -3.55253, 0, 0, 0.497734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417058,-99) , 
8, -0.118606, 1, 0, 0.484382,-99) , 
10, -1.23451, 0, 0, 0.499811,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0445064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.528008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442977,-99) , 
10, 0.412529, 1, 0, 0.518986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481633,-99) , 
4, 0.999995, 0, 0, 0.500094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437161,-99) , 
4, 0.999905, 0, 0, 0.495935,-99) , 
5, 0.619015, 0, 0, 0.502137,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0338537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495452,-99) , 
5, -0.713784, 1, 0, 0.505808,-99) , 
2, 0.0671345, 0, 0, 0.515758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4972,-99) , 
0, 0.503531, 0, 0, 0.505115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471783,-99) , 
5, 0.52372, 0, 0, 0.482566,-99) , 
1, 0.00226237, 0, 0, 0.488608,-99) , 
0, 0.493328, 1, 0, 0.492494,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0193356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495492,-99) , 
8, 2.1427, 0, 0, 0.497518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435196,-99) , 
10, 1.73635, 1, 0, 0.495845,-99) , 
9, 0.0800153, 0, 0, 0.498282,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0328844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478645,-99) , 
10, -2.10334, 0, 0, 0.510713,-99) , 
NN(
0, 
0, 
-1, 0.808887, 1, -1, 0.492758,-99) , 
9, -2.66805, 1, 0, 0.503052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521921,-99) , 
NN(
0, 
0, 
-1, 0.71387, 1, -1, 0.475161,-99) , 
2, -0.0719528, 1, 0, 0.483646,-99) , 
0, 0.500948, 1, 0, 0.497798,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0335679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.71204, 1, 1, 0.527593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484393,-99) , 
10, 0.893125, 1, 0, 0.534345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489343,-99) , 
5, -0.523869, 1, 0, 0.495641,-99) , 
8, 1.85845, 0, 0, 0.498727,-99) , 
0, 0.5019, 0, 0, 0.504594,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0361064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481103,-99) , 
5, -0.451232, 0, 0, 0.508243,-99) , 
5, -0.904773, 1, 0, 0.514738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438154,-99) , 
8, -0.264706, 0, 0, 0.502472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335621,-99) , 
9, -4.10331, 1, 0, 0.427573,-99) , 
10, -1.45247, 0, 0, 0.496656,-99) , 
8, -0.427995, 1, 0, 0.501352,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0274035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.97789, 0, 1, 0.552988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48952,-99) , 
5, -0.523962, 0, 0, 0.525035,-99) , 
NN(
0, 
0, 
-1, -2.04917, 0, -1, 0.489148,-99) , 
8, -0.999958, 1, 0, 0.493509,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0295196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485498,-99) , 
10, 1.10615, 1, 0, 0.535949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492304,-99) , 
9, -4.06608, 1, 0, 0.49702,-99) , 
8, 1.85763, 0, 0, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452662,-99) , 
4, 0.999524, 0, 0, 0.497652,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0378739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.93241, 1, 1, 0.528043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477099,-99) , 
5, -0.809502, 0, 0, 0.521569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475631,-99) , 
8, -0.87703, 0, 0, 0.509818,-99) , 
NN(
0, 
0, 
-1, -2.56404, 1, -1, 0.488406,-99) , 
5, -0.714302, 1, 0, 0.493847,-99) , 
8, 0.714564, 0, 0, 0.503337,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.034198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64873, 1, 1, 0.525315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464851,-99) , 
8, -1.40406, 1, 0, 0.493669,-99) , 
9, -3.94225, 0, 0, 0.509816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465501,-99) , 
8, -0.102076, 0, 0, 0.499397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427562,-99) , 
10, -1.47247, 0, 0, 0.494272,-99) , 
8, -0.428597, 1, 0, 0.498328,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0362128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488308,-99) , 
5, -0.714306, 0, 0, 0.513674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458775,-99) , 
10, 1.63035, 1, 0, 0.50911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494967,-99) , 
9, -4.09112, 1, 0, 0.499507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465813,-99) , 
8, -0.428607, 1, 0, 0.478267,-99) , 
0, 0.49945, 0, 0, 0.490535,-99) , 
0, 0.496185, 1, 0, 0.496485,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0203653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071981, 0, 1, 0.50394,-99) , 
NN(
0, 
0, 
-1, -0.810521, 1, -1, 0.475894,-99) , 
8, -0.71421, 0, 0, 0.50135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525457,-99) , 
NN(
0, 
0, 
-1, -0.762491, 1, -1, 0.45142,-99) , 
8, -1.43789, 1, 0, 0.475723,-99) , 
10, -1.90418, 0, 0, 0.498161,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0493649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456684,-99) , 
10, -2.8561, 0, 0, 0.52944,-99) , 
NN(
0, 
0, 
-1, -0.905227, 1, -1, 0.460562,-99) , 
9, -2.63358, 1, 0, 0.514309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492067,-99) , 
9, -0.975113, 0, 0, 0.498239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352145,-99) , 
10, -1.3649, 0, 0, 0.430023,-99) , 
10, -1.19371, 0, 0, 0.492088,-99) , 
8, -0.142804, 1, 0, 0.499671,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0283977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497044,-99) , 
8, -1.12853, 1, 0, 0.528697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444386,-99) , 
8, -1.27795, 0, 0, 0.505965,-99) , 
9, -4.08019, 1, 0, 0.509104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452368,-99) , 
4, 0.999048, 0, 0, 0.507296,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0296019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48161,-99) , 
10, 0.553121, 1, 0, 0.501131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396725,-99) , 
8, -1.03429, 1, 0, 0.463599,-99) , 
10, -1.98779, 0, 0, 0.498662,-99) , 
9, -4.7443, 1, 0, 0.500205,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0386775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.98661, 0, 1, 0.533481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465245,-99) , 
5, -0.809626, 1, 0, 0.493458,-99) , 
10, -1.5336, 1, 0, 0.51453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498638,-99) , 
8, 2.25224, 0, 0, 0.502566,-99) , 
NN(
0, 
0, 
-1, -3.72483, 1, -1, 0.433913,-99) , 
10, -1.1211, 0, 0, 0.494343,-99) , 
8, -0.14053, 1, 0, 0.501425,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0283238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.863972, 0, 1, 0.532037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459904,-99) , 
3, 0.636214, 0, 0, 0.491831,-99) , 
3, 1.33802, 0, 0, 0.517409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535399,-99) , 
NN(
0, 
0, 
-1, -2.14616, 0, -1, 0.491189,-99) , 
8, -1.56982, 1, 0, 0.492881,-99) , 
5, -0.71429, 1, 0, 0.498457,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.044739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.34681, 1, 1, 0.51571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483695,-99) , 
9, -3.36468, 0, 0, 0.498866,-99) , 
NN(
0, 
0, 
-1, 0.633246, 1, -1, 0.42873,-99) , 
8, 0.141926, 1, 0, 0.487419,-99) , 
10, -0.936216, 0, 0, 0.50496,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0335551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714708, 0, 1, 0.542844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461115,-99) , 
5, -0.809539, 1, 0, 0.496825,-99) , 
10, -0.250866, 1, 0, 0.522554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495823,-99) , 
5, 0.242055, 1, 0, 0.512684,-99) , 
NN(
0, 
0, 
-1, -1.58063, 0, -1, 0.491193,-99) , 
9, -4.01789, 1, 0, 0.494649,-99) , 
0, 0.494281, 1, 0, 0.500101,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0275954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0724444, 1, 1, 0.50985,-99) , 
NN(
0, 
0, 
-1, -2.50944, 0, -1, 0.488379,-99) , 
10, -0.526386, 1, 0, 0.499469,-99) , 
NN(
0, 
0, 
-1, -0.0633878, 1, -1, 0.46016,-99) , 
0, 0.492376, 0, 0, 0.495303,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0269936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461374,-99) , 
8, -1.57137, 0, 0, 0.507604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458648,-99) , 
10, 2.12463, 1, 0, 0.505389,-99) , 
NN(
0, 
0, 
-1, -1.44978, 0, -1, 0.451182,-99) , 
9, -4.74947, 0, 0, 0.502404,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0495522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0190348, 1, 1, 0.533362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479391,-99) , 
9, -3.23133, 1, 0, 0.499827,-99) , 
9, -2.43056, 0, 0, 0.519003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495718,-99) , 
9, -3.35677, 0, 0, 0.511153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471301,-99) , 
5, -0.750635, 1, 0, 0.487758,-99) , 
5, 0.0474086, 0, 0, 0.498383,-99) , 
8, 0.428507, 0, 0, 0.507574,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0431915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499453,-99) , 
8, 0.616653, 0, 0, 0.556618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389123,-99) , 
6, 0.0114867, 1, 0, 0.500719,-99) , 
9, -2.5044, 0, 0, 0.50695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483554,-99) , 
10, 0.827206, 1, 0, 0.501853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428142,-99) , 
8, 1.666, 0, 0, 0.449819,-99) , 
9, -1.97975, 0, 0, 0.48768,-99) , 
10, -0.000640301, 1, 0, 0.500526,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0123269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49881,-99) , 
4, 0.999525, 1, 0, 0.501132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457277,-99) , 
3, 8.96578, 1, 0, 0.499832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451997,-99) , 
1, 0.0103564, 1, 0, 0.498059,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0176173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49797,-99) , 
10, 0.410067, 1, 0, 0.512148,-99) , 
NN(
0, 
0, 
-1, -1.66581, 0, -1, 0.496047,-99) , 
8, 1.00019, 0, 0, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420871,-99) , 
4, 0.999048, 0, 0, 0.497743,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0245327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.844196, 0, 1, 0.572685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457181,-99) , 
10, 1.31364, 1, 0, 0.533111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486368,-99) , 
10, -1.50942, 0, 0, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0.489973, 1, -1, 0.475243,-99) , 
0, 0.491425, 0, 0, 0.498527,-99) , 
8, 1.85794, 0, 0, 0.501205,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0257617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0290074, 1, 1, 0.512215,-99) , 
NN(
0, 
0, 
-1, 0.618974, 1, -1, 0.489569,-99) , 
10, 0.294636, 1, 0, 0.50621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455835,-99) , 
2, 0.215073, 1, 0, 0.504445,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0703498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487184,-99) , 
4, 0.999995, 0, 0, 0.508897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393831,-99) , 
4, 0.999905, 0, 0, 0.502233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388613,-99) , 
7, -0.714082, 0, 0, 0.491529,-99) , 
NN(
0, 
0, 
-1, -0.266761, 1, -1, 0.453545,-99) , 
7, -951.286, 0, 0, 0.478534,-99) , 
5, 0.523779, 1, 0, 0.494492,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0343244);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.68589, 1, 1, 0.519688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481781,-99) , 
0, 0.499043, 0, 0, 0.492177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433677,-99) , 
8, -0.999991, 0, 0, 0.488904,-99) , 
9, -3.51751, 1, 0, 0.497655,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0369869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452747,-99) , 
10, -2.34324, 0, 0, 0.506438,-99) , 
8, -1.60318, 1, 0, 0.519783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491335,-99) , 
10, -0.837839, 1, 0, 0.498064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37746,-99) , 
8, -0.714235, 1, 0, 0.457316,-99) , 
10, -1.67481, 0, 0, 0.494491,-99) , 
9, -4.38864, 1, 0, 0.496839,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0136766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547031,-99) , 
NN(
0, 
0, 
-1, 2.00348, 1, -1, 0.496953,-99) , 
2, -0.217241, 1, 0, 0.498749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451716,-99) , 
0, 0.490472, 0, 0, 0.496365,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.04416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472405,-99) , 
10, 2.37142, 1, 0, 0.539248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454822,-99) , 
10, -0.761679, 0, 0, 0.505637,-99) , 
5, -0.238104, 1, 0, 0.516824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497052,-99) , 
9, -3.29643, 0, 0, 0.510202,-99) , 
NN(
0, 
0, 
-1, -1.5255, 0, -1, 0.481836,-99) , 
5, 0.0473456, 0, 0, 0.494729,-99) , 
8, 0.431452, 0, 0, 0.504544,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0393769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489217,-99) , 
8, -0.712992, 0, 0, 0.517833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475598,-99) , 
0, 0.497144, 0, 0, 0.495329,-99) , 
3, 3.09905, 1, 0, 0.510583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492059,-99) , 
8, 1.85792, 0, 0, 0.498326,-99) , 
NN(
0, 
0, 
-1, 1.0114, 1, -1, 0.467932,-99) , 
5, 0.782217, 1, 0, 0.488212,-99) , 
5, 0.238021, 1, 0, 0.500551,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0486164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487965,-99) , 
3, 4.35685, 1, 0, 0.512489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442174,-99) , 
8, -1.56865, 0, 0, 0.508928,-99) , 
NN(
NN(
0, 
0, 
-1, -2.86416, 1, 1, 0.530864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470254,-99) , 
2, -0.156723, 1, 0, 0.477312,-99) , 
2, 0.0670049, 0, 0, 0.485945,-99) , 
0, 0.499043, 1, 0, 0.499176,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0278376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485696,-99) , 
8, -1.44723, 1, 0, 0.507325,-99) , 
10, -1.88356, 0, 0, 0.520863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494773,-99) , 
8, -0.670878, 1, 0, 0.497996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417616,-99) , 
8, -1.28311, 0, 0, 0.495042,-99) , 
9, -4.08019, 1, 0, 0.498854,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0296847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466893,-99) , 
9, -3.08526, 1, 0, 0.502593,-99) , 
5, 0.768682, 1, 0, 0.518505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450188,-99) , 
5, 0.632611, 1, 0, 0.499325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440198,-99) , 
4, 0.999772, 0, 0, 0.497217,-99) , 
5, 0.714251, 0, 0, 0.501575,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0202543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560429,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500004, 0, 1, 0.52356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431421,-99) , 
4, 0.999763, 0, 0, 0.499358,-99) , 
5, 0.714204, 0, 0, 0.504546,-99) , 
9, 0.566819, 0, 0, 0.50615,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0486668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.138328, 0, 1, 0.543664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474037,-99) , 
3, 2.57239, 1, 0, 0.506372,-99) , 
5, 0.0474981, 0, 0, 0.526068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
8, -0.71429, 0, 0, 0.50777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363184,-99) , 
7, -1.28474, 0, 0, 0.486881,-99) , 
7, -951.286, 1, 0, 0.496244,-99) , 
2, -0.0703481, 1, 0, 0.501115,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0348376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483006,-99) , 
3, 2.44782, 1, 0, 0.505539,-99) , 
5, 0.618967, 0, 0, 0.515609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487355,-99) , 
5, 0.714205, 0, 0, 0.492066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46493,-99) , 
2, -0.0750283, 1, 0, 0.475309,-99) , 
0, 0.494283, 0, 0, 0.488994,-99) , 
2, 0.0743015, 0, 0, 0.492867,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0136405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448284,-99) , 
4, 0.999773, 0, 0, 0.498336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457904,-99) , 
4, 0.999048, 0, 0, 0.497078,-99) , 
9, -4.70948, 1, 0, 0.499274,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0275294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14284, 0, 1, 0.503792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429184,-99) , 
4, 0.999905, 0, 0, 0.499032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531093,-99) , 
NN(
0, 
0, 
-1, 0.782281, 1, -1, 0.470878,-99) , 
8, -0.701434, 1, 0, 0.479753,-99) , 
5, 0.619017, 1, 0, 0.49389,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0362919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49739,-99) , 
9, -2.8839, 0, 0, 0.502426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472565,-99) , 
9, -2.78313, 1, 0, 0.477926,-99) , 
10, -0.3434, 1, 0, 0.491973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414589,-99) , 
1, 0.0121806, 1, 0, 0.489849,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0295938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478795,-99) , 
10, -2.22761, 0, 0, 0.514644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462554,-99) , 
8, -0.426566, 0, 0, 0.498435,-99) , 
9, -3.33041, 1, 0, 0.504125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445795,-99) , 
1, 0.0121806, 1, 0, 0.502513,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.022213);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497298,-99) , 
8, -1.46754, 1, 0, 0.518541,-99) , 
NN(
0, 
0, 
-1, -1.58562, 0, -1, 0.492105,-99) , 
9, -4.12338, 1, 0, 0.495751,-99) , 
8, 2.42856, 0, 0, 0.497298,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0359547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469733,-99) , 
5, -0.142874, 1, 0, 0.500604,-99) , 
10, 0.605665, 1, 0, 0.519709,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0870151, 0, 1, 0.513566,-99) , 
NN(
0, 
0, 
-1, -1.04074, 0, -1, 0.484917,-99) , 
9, -3.77454, 1, 0, 0.491952,-99) , 
8, 1.57141, 0, 0, 0.495378,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0333931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.4718, 1, 1, 0.546495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486463,-99) , 
9, -3.6095, 1, 0, 0.514718,-99) , 
7, -951.286, 0, 0, 0.530573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490695,-99) , 
5, 0.0475983, 0, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455535,-99) , 
10, -1.72359, 0, 0, 0.498643,-99) , 
8, -0.713641, 1, 0, 0.504365,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0230525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496794,-99) , 
8, -0.468753, 1, 0, 0.503089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421342,-99) , 
10, -2.60106, 0, 0, 0.500755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440238,-99) , 
8, -1.85702, 0, 0, 0.499156,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0301683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.20117, 1, 1, 0.505865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437546,-99) , 
8, -1.53039, 1, 0, 0.477223,-99) , 
10, -2.12115, 0, 0, 0.502588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484564,-99) , 
10, 1.45467, 1, 0, 0.497492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418043,-99) , 
9, -1.32449, 0, 0, 0.480548,-99) , 
10, 0.809775, 1, 0, 0.498983,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0303414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495086,-99) , 
9, 0.218897, 0, 0, 0.511057,-99) , 
10, 1.12052, 1, 0, 0.52364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473097,-99) , 
3, 3.53972, 1, 0, 0.50554,-99) , 
NN(
0, 
0, 
-1, -0.306037, 0, -1, 0.489087,-99) , 
5, -0.523805, 1, 0, 0.492593,-99) , 
9, -1.41985, 0, 0, 0.497642,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0166392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446825,-99) , 
4, 0.999048, 0, 0, 0.501137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431765,-99) , 
1, 0.0121806, 1, 0, 0.499044,-99) , 
8, 2.42849, 0, 0, 0.501143,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0483576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494587,-99) , 
4, 0.999995, 0, 0, 0.51569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421256,-99) , 
4, 0.999905, 0, 0, 0.511226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482149,-99) , 
4, 0.999524, 1, 0, 0.488079,-99) , 
NN(
0, 
0, 
-1, 1.74944, 0, -1, 0.45199,-99) , 
10, -0.236855, 1, 0, 0.478861,-99) , 
5, 0.428485, 1, 0, 0.49932,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0443713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464273,-99) , 
10, 1.59728, 1, 0, 0.509391,-99) , 
0, 0.493329, 1, 0, 0.518143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491838,-99) , 
9, -2.81565, 0, 0, 0.504717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450575,-99) , 
5, -0.904883, 1, 0, 0.475719,-99) , 
9, -2.14119, 1, 0, 0.499069,-99) , 
8, 1.00001, 0, 0, 0.503971,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0394007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495877,-99) , 
3, 1.2434, 0, 0, 0.517809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489795,-99) , 
9, -4.73224, 1, 0, 0.495151,-99) , 
8, 0.142682, 0, 0, 0.506905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477387,-99) , 
8, 0.34588, 1, 0, 0.498056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42813,-99) , 
10, 0.20097, 1, 0, 0.488267,-99) , 
5, 0.61895, 1, 0, 0.501888,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0402249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43995,-99) , 
10, -2.34324, 0, 0, 0.512047,-99) , 
8, -1.60318, 1, 0, 0.529469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477288,-99) , 
10, -1.67628, 0, 0, 0.505887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459969,-99) , 
9, 0.236449, 0, 0, 0.484126,-99) , 
10, 0.99432, 1, 0, 0.502484,-99) , 
9, -4.39187, 1, 0, 0.504997,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0396196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.4246, 1, 1, 0.549518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482635,-99) , 
5, -0.61915, 0, 0, 0.532281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497446,-99) , 
10, -1.94071, 0, 0, 0.521054,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.485875,-99) , 
9, -4.08019, 1, 0, 0.490865,-99) , 
2, -0.0679183, 1, 0, 0.497652,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0242918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478128,-99) , 
4, 0.999728, 0, 0, 0.507061,-99) , 
8, -1.56982, 1, 0, 0.508495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436745,-99) , 
4, 0.999048, 0, 0, 0.506265,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.039276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.700681, 1, 1, 0.515544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454917,-99) , 
9, -2.14801, 1, 0, 0.49406,-99) , 
0, 0.497137, 0, 0, 0.50683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468687,-99) , 
9, -2.10271, 0, 0, 0.505708,-99) , 
NN(
0, 
0, 
-1, -2.35789, 0, -1, 0.46466,-99) , 
8, 1.36734, 0, 0, 0.484057,-99) , 
8, 0.714305, 1, 0, 0.498886,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0274771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493407,-99) , 
5, 0.724249, 0, 0, 0.510118,-99) , 
8, -1.59931, 1, 0, 0.520243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493902,-99) , 
2, 0.0880559, 0, 0, 0.498097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47057,-99) , 
8, 0.149747, 1, 0, 0.482423,-99) , 
3, 4.51103, 1, 0, 0.495215,-99) , 
9, -4.05567, 1, 0, 0.498998,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0134209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.9402, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45959,-99) , 
10, -2.42572, 0, 0, 0.501789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427651,-99) , 
8, -1.85418, 0, 0, 0.499913,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0550604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713881, 0, 1, 0.515724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471447,-99) , 
10, 0.796279, 0, 0, 0.494064,-99) , 
9, -2.55298, 1, 0, 0.505495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46352,-99) , 
7, -0.699912, 0, 0, 0.502393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298422,-99) , 
7, -1.85532, 0, 0, 0.488425,-99) , 
7, -951.286, 1, 0, 0.496112,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0340289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450701,-99) , 
5, -0.959183, 0, 0, 0.491629,-99) , 
3, 2.8195, 0, 0, 0.520321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498746,-99) , 
5, 0.853048, 1, 0, 0.5145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483954,-99) , 
1, -0.00219257, 1, 0, 0.489434,-99) , 
5, 0.818485, 0, 0, 0.492924,-99) , 
5, -0.904767, 1, 0, 0.495689,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.027843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487052,-99) , 
1, 0.00236311, 0, 0, 0.49233,-99) , 
9, 0.501615, 0, 0, 0.494184,-99) , 
9, -4.7443, 1, 0, 0.496335,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0299559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443441,-99) , 
3, 7.47288, 1, 0, 0.510369,-99) , 
NN(
0, 
0, 
-1, 0.714204, 1, -1, 0.491221,-99) , 
9, -2.84878, 1, 0, 0.501172,-99) , 
8, 2.42852, 0, 0, 0.502775,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0394714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.263536, 1, 1, 0.518965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446782,-99) , 
10, 2.32803, 1, 0, 0.510412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489036,-99) , 
6, 0.0032154, 0, 0, 0.499593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417621,-99) , 
6, 0.011257, 1, 0, 0.495226,-99) , 
9, -2.17904, 0, 0, 0.499826,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0361913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.37502, 0, 1, 0.526985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421926,-99) , 
10, -1.03154, 0, 0, 0.496094,-99) , 
8, 0.168594, 1, 0, 0.508302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490626,-99) , 
3, 0.475423, 1, 0, 0.49464,-99) , 
NN(
0, 
0, 
-1, -0.426305, 0, -1, 0.461377,-99) , 
3, 4.15784, 1, 0, 0.487908,-99) , 
5, 0.142834, 0, 0, 0.497639,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0264433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471736,-99) , 
0, 0.491015, 0, 0, 0.508081,-99) , 
NN(
0, 
0, 
-1, 4.16236, 1, -1, 0.488861,-99) , 
0, 0.501899, 1, 0, 0.5042,-99) , 
9, 0.49647, 0, 0, 0.505451,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0288681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492065,-99) , 
10, -2.19241, 1, 0, 0.533444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489355,-99) , 
9, -2.56851, 0, 0, 0.496307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443573,-99) , 
8, 2.2419, 0, 0, 0.473188,-99) , 
8, 1.77541, 1, 0, 0.494131,-99) , 
8, -1.28565, 1, 0, 0.49708,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0421023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
10, -0.893295, 0, 0, 0.533683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49649,-99) , 
10, -0.689742, 1, 0, 0.511477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478237,-99) , 
5, -0.909299, 1, 0, 0.482526,-99) , 
1, -0.00178541, 1, 0, 0.49144,-99) , 
5, 0.904723, 0, 0, 0.493806,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0145076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00766648, 0, 1, 0.503576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464828,-99) , 
0, 0.490472, 0, 0, 0.501713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426256,-99) , 
4, 0.999048, 0, 0, 0.49934,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0403597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.693847, 1, 1, 0.552187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488122,-99) , 
2, -0.0313346, 1, 0, 0.497113,-99) , 
3, 0.544941, 1, 0, 0.502366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487044,-99) , 
5, 0.410109, 1, 0, 0.500076,-99) , 
NN(
0, 
0, 
-1, -0.512808, 0, -1, 0.462658,-99) , 
5, 0.0473318, 0, 0, 0.484032,-99) , 
3, 4.48883, 1, 0, 0.49883,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.018526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20462, 0, 1, 0.533892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496295,-99) , 
1, -0.00690748, 1, 0, 0.498086,-99) , 
9, -4.59131, 1, 0, 0.500586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510734,-99) , 
NN(
0, 
0, 
-1, 0.498102, 0, -1, 0.452166,-99) , 
8, 0.790852, 1, 0, 0.473717,-99) , 
10, 1.52672, 1, 0, 0.498399,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0318676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.82021, 0, 1, 0.571437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416602,-99) , 
5, -0.23827, 1, 0, 0.494908,-99) , 
10, 0.851035, 1, 0, 0.534753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492391,-99) , 
9, -3.2399, 1, 0, 0.497962,-99) , 
9, -4.91132, 1, 0, 0.499569,-99) , 
8, 1.57188, 0, 0, 0.503902,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0327328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477605,-99) , 
9, -2.19307, 0, 0, 0.502799,-99) , 
10, -0.329273, 1, 0, 0.51144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498552,-99) , 
8, -0.925832, 1, 0, 0.504886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462194,-99) , 
5, -0.713695, 1, 0, 0.476621,-99) , 
5, -0.332915, 0, 0, 0.498568,-99) , 
9, -2.68968, 0, 0, 0.504295,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0551938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456859,-99) , 
5, 0.23796, 0, 0, 0.52355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480138,-99) , 
4, 0.999998, 0, 0, 0.499433,-99) , 
4, 0.999955, 1, 0, 0.504108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463412,-99) , 
4, 0.999048, 0, 0, 0.502813,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0281327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.507555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445348,-99) , 
9, -1.82764, 0, 0, 0.49034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422463,-99) , 
10, 1.20004, 1, 0, 0.467206,-99) , 
8, 1.5715, 1, 0, 0.50288,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0197431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494925,-99) , 
3, 4.32471, 1, 0, 0.524468,-99) , 
NN(
0, 
0, 
-1, 2.12925, 0, 1, 0.505188,-99) , 
2, -0.0709862, 1, 0, 0.508308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470097,-99) , 
8, -1.56988, 0, 0, 0.506535,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0370424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
8, 0.431374, 1, 0, 0.503833,-99) , 
9, -3.51491, 1, 0, 0.50861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4889,-99) , 
9, -3.51239, 0, 0, 0.498206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416203,-99) , 
8, -0.0290021, 1, 0, 0.485166,-99) , 
10, -1.15874, 0, 0, 0.501199,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0265727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492975,-99) , 
0, 0.495233, 0, 0, 0.506104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412871,-99) , 
8, -1.34591, 1, 0, 0.469902,-99) , 
10, -2.29078, 0, 0, 0.503285,-99) , 
NN(
0, 
0, 
-1, 1.62704, 1, -1, 0.474669,-99) , 
10, 1.46138, 1, 0, 0.50085,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0226679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483734,-99) , 
1, 0.000717006, 0, 0, 0.509438,-99) , 
2, 0.065, 0, 0, 0.525066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552347,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.493446,-99) , 
4, 0.999048, 1, 0, 0.495334,-99) , 
0, 0.492376, 1, 0, 0.498532,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0253981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494169,-99) , 
5, -0.741526, 0, 0, 0.506074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438796,-99) , 
9, -2.8052, 1, 0, 0.47836,-99) , 
5, 0.809271, 1, 0, 0.502508,-99) , 
0, 0.490472, 1, 0, 0.504878,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0410236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00117252, 0, 1, 0.545956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457485,-99) , 
10, 0.11825, 0, 0, 0.489497,-99) , 
5, -0.238238, 0, 0, 0.523035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494468,-99) , 
8, 0.43177, 0, 0, 0.50487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480414,-99) , 
9, -0.430161, 0, 0, 0.484803,-99) , 
0, 0.498091, 1, 0, 0.494363,-99) , 
2, -0.0677683, 1, 0, 0.499234,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0249354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43486, 1, 1, 0.509462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437109,-99) , 
8, 0.0358501, 1, 0, 0.491645,-99) , 
10, -1.03665, 0, 0, 0.503361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440997,-99) , 
2, 0.215158, 1, 0, 0.50124,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0247622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460036,-99) , 
10, 0.132954, 1, 0, 0.503916,-99) , 
8, 1.44094, 0, 0, 0.507024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466459,-99) , 
10, 2.53801, 1, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, -1.93548, 1, -1, 0.452288,-99) , 
9, -1.6691, 0, 0, 0.485039,-99) , 
10, 0.400199, 1, 0, 0.50162,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0145168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498265,-99) , 
0, 0.490473, 1, 0, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0.449654, 1, -1, 0.460944,-99) , 
4, 0.999524, 0, 0, 0.497941,-99) , 
9, 0.196083, 0, 0, 0.500192,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0408014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488062,-99) , 
8, -0.0465473, 0, 0, 0.516019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407912,-99) , 
8, 0.325722, 1, 0, 0.498653,-99) , 
10, -0.872528, 0, 0, 0.509511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470883,-99) , 
8, -1.56985, 0, 0, 0.507722,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0237154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569933,-99) , 
NN(
0, 
0, 
-1, 0.0947099, 1, -1, 0.496165,-99) , 
8, 1.66537, 0, 0, 0.499394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478544,-99) , 
5, -0.96373, 1, 0, 0.490694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430898,-99) , 
5, -0.238175, 1, 0, 0.477547,-99) , 
10, 0.6674, 1, 0, 0.4953,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.050862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476781,-99) , 
8, -0.246032, 0, 0, 0.537093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483549,-99) , 
8, 0.430367, 0, 0, 0.500132,-99) , 
10, -0.66478, 1, 0, 0.505918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479959,-99) , 
9, -3.87753, 0, 0, 0.499039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434136,-99) , 
9, -3.82457, 1, 0, 0.462147,-99) , 
8, -0.17225, 1, 0, 0.484896,-99) , 
9, -3.2247, 0, 0, 0.497703,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0332934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464591,-99) , 
10, 2.29263, 1, 0, 0.518799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475278,-99) , 
10, -0.998079, 1, 0, 0.48967,-99) , 
8, -0.143001, 0, 0, 0.506334,-99) , 
NN(
0, 
0, 
-1, 0.490473, 0, -1, 0.488674,-99) , 
5, -0.333356, 1, 0, 0.495224,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0466016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482815,-99) , 
3, 4.06815, 1, 0, 0.509091,-99) , 
0, 0.494283, 1, 0, 0.522648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488378,-99) , 
5, 0.142712, 0, 0, 0.502362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469633,-99) , 
2, 0.0437314, 0, 0, 0.479025,-99) , 
2, -0.00255251, 1, 0, 0.492154,-99) , 
2, 0.0722158, 0, 0, 0.496796,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0269721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55735, 1, 1, 0.540639,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.486147,-99) , 
1, -0.00231699, 0, 0, 0.525435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485161,-99) , 
10, -0.893454, 0, 0, 0.498634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445729,-99) , 
4, 0.999048, 0, 0, 0.496983,-99) , 
8, -0.71421, 1, 0, 0.502186,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0270734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490709,-99) , 
7, -951.286, 0, 0, 0.538136,-99) , 
NN(
NN(
0, 
0, 
-1, 0.941004, 1, 1, 0.535727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491524,-99) , 
5, -0.727896, 1, 0, 0.496066,-99) , 
5, 0.904723, 0, 0, 0.498362,-99) , 
8, -1.28565, 1, 0, 0.501258,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0359387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.130541, 0, 1, 0.533646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489873,-99) , 
10, -0.965223, 0, 0, 0.499896,-99) , 
2, 0.0630935, 0, 0, 0.505658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49322,-99) , 
10, 1.63712, 1, 0, 0.506602,-99) , 
NN(
0, 
0, 
-1, -0.143565, 1, -1, 0.436768,-99) , 
9, -1.06575, 0, 0, 0.477475,-99) , 
10, 0.595989, 1, 0, 0.499902,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0312959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49566,-99) , 
2, -0.0284187, 1, 0, 0.504626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408854,-99) , 
4, 0.999977, 1, 0, 0.468801,-99) , 
5, 0.809015, 1, 0, 0.500977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438832,-99) , 
4, 0.999524, 0, 0, 0.497824,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0263671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476625,-99) , 
8, -0.613881, 0, 0, 0.51109,-99) , 
8, -1.59015, 1, 0, 0.524358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499137,-99) , 
3, 4.57132, 1, 0, 0.526314,-99) , 
NN(
0, 
0, 
-1, 0.90453, 1, -1, 0.496068,-99) , 
2, 0.0726892, 0, 0, 0.500529,-99) , 
9, -4.05567, 1, 0, 0.50407,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0398907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49876,-99) , 
10, 0.0914826, 1, 0, 0.516109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445325,-99) , 
4, 0.999751, 0, 0, 0.513923,-99) , 
NN(
0, 
0, 
-1, -0.915584, 1, -1, 0.446181,-99) , 
4, 0.999524, 0, 0, 0.51042,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.043328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498542,-99) , 
10, -1.03245, 1, 0, 0.517472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463961,-99) , 
5, -0.619217, 1, 0, 0.48255,-99) , 
0, 0.502852, 1, 0, 0.512147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396125,-99) , 
10, -0.834725, 0, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.475751,-99) , 
10, 0.538011, 1, 0, 0.491246,-99) , 
8, 0.428919, 1, 0, 0.50289,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0475461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999675, 0, 1, 0.520261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466851,-99) , 
0, 0.499984, 1, 0, 0.493911,-99) , 
3, 2.90961, 1, 0, 0.511124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483636,-99) , 
9, -4.85805, 0, 0, 0.538849,-99) , 
NN(
0, 
0, 
-1, 0.510642, 1, -1, 0.477238,-99) , 
8, -0.709869, 1, 0, 0.486464,-99) , 
5, -0.0476375, 1, 0, 0.497847,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0609663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500944, 0, 1, 0.525422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450923,-99) , 
9, -3.80694, 1, 0, 0.481408,-99) , 
8, -0.999287, 0, 0, 0.519237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490198,-99) , 
7, -0.46872, 0, 0, 0.516262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308436,-99) , 
7, -1.85608, 0, 0, 0.501953,-99) , 
7, -951.286, 1, 0, 0.509819,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0393681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478222,-99) , 
9, -1.8819, 1, 0, 0.53728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443921,-99) , 
10, -0.143982, 1, 0, 0.50016,-99) , 
9, -2.14943, 0, 0, 0.503203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482711,-99) , 
8, 1.85952, 0, 0, 0.496974,-99) , 
NN(
0, 
0, 
-1, 0.0485855, 1, -1, 0.450019,-99) , 
9, -1.6697, 0, 0, 0.48482,-99) , 
10, 0.34621, 1, 0, 0.498551,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0530205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.12052, 1, 1, 0.53323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470049,-99) , 
3, 4.44939, 1, 0, 0.523356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44469,-99) , 
5, 0.713986, 1, 0, 0.51751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482127,-99) , 
4, 0.999526, 1, 0, 0.486873,-99) , 
3, 4.55313, 0, 0, 0.49246,-99) , 
9, -1.41871, 0, 0, 0.49757,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0488491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477077,-99) , 
10, -2.13255, 0, 0, 0.529357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387251,-99) , 
10, -1.34834, 0, 0, 0.503032,-99) , 
8, -0.134718, 1, 0, 0.510876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477983,-99) , 
10, 2.40126, 1, 0, 0.521772,-99) , 
NN(
0, 
0, 
-1, 0.830222, 1, -1, 0.485455,-99) , 
10, 1.35396, 0, 0, 0.492645,-99) , 
5, 0.0475983, 0, 0, 0.501918,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.024849);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.11299, 1, 1, 0.536743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487209,-99) , 
0, 0.497136, 0, 0, 0.49851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443047,-99) , 
4, 0.999051, 0, 0, 0.496828,-99) , 
8, 1.857, 0, 0, 0.499971,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0459264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475635,-99) , 
3, 0.76324, 0, 0, 0.513865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471123,-99) , 
9, -4.3668, 1, 0, 0.484852,-99) , 
9, -3.2247, 0, 0, 0.505606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486129,-99) , 
3, 5.6627, 0, 0, 0.492001,-99) , 
NN(
0, 
0, 
-1, -2.89912, 1, -1, 0.453524,-99) , 
5, 0.87747, 1, 0, 0.485902,-99) , 
5, 0.142807, 1, 0, 0.49623,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0465991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.941027, 1, 1, 0.518109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455844,-99) , 
1, -0.000557718, 1, 0, 0.488891,-99) , 
8, 1.28571, 1, 0, 0.513863,-99) , 
NN(
NN(
0, 
0, 
-1, 0.52825, 1, 1, 0.529497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475431,-99) , 
2, 0.071981, 0, 0, 0.483197,-99) , 
8, -0.42459, 1, 0, 0.49286,-99) , 
5, 0.238078, 1, 0, 0.504397,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0282088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495815,-99) , 
8, -0.307806, 1, 0, 0.503688,-99) , 
8, 2.13973, 0, 0, 0.506025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468443,-99) , 
3, 2.02159, 0, 0, 0.490231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427567,-99) , 
8, 1.62079, 1, 0, 0.468434,-99) , 
10, 1.34586, 1, 0, 0.502383,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0327261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481785,-99) , 
5, -0.33628, 0, 0, 0.528896,-99) , 
NN(
0, 
0, 
-1, 1.2483, 0, -1, 0.491437,-99) , 
3, 0.732067, 1, 0, 0.497767,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.478055,-99) , 
3, 4.34572, 1, 0, 0.493673,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0306561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000397619, 1, 1, 0.535615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495769,-99) , 
5, 0.333307, 0, 0, 0.503585,-99) , 
9, -4.05567, 1, 0, 0.508186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507601,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.468573,-99) , 
5, -0.523905, 1, 0, 0.477573,-99) , 
3, 4.51103, 1, 0, 0.502352,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0341958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01255, 1, 1, 0.528707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493197,-99) , 
0, 0.499041, 0, 0, 0.502991,-99) , 
9, -1.8611, 0, 0, 0.509376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51605,-99) , 
NN(
0, 
0, 
-1, 0.999977, 1, -1, 0.466021,-99) , 
4, 0.999524, 1, 0, 0.479019,-99) , 
5, 0.809487, 1, 0, 0.505462,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0192101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49143,-99) , 
9, -4.21246, 0, 0, 0.541282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485057,-99) , 
10, 1.22562, 1, 0, 0.502827,-99) , 
8, -1.13289, 1, 0, 0.50494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4749,-99) , 
8, -1.56819, 0, 0, 0.503537,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0160153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485695,-99) , 
8, -0.71429, 0, 0, 0.500441,-99) , 
2, -0.214165, 1, 0, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4597,-99) , 
4, 0.999048, 0, 0, 0.500551,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0283167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.3438, 1, 1, 0.515306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490581,-99) , 
2, -0.00677315, 1, 0, 0.498167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451476,-99) , 
9, -3.23045, 1, 0, 0.472847,-99) , 
2, -0.0810627, 0, 0, 0.494736,-99) , 
0, 0.496185, 1, 0, 0.50131,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0243246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216424, 0, 1, 0.507049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429417,-99) , 
5, -0.810028, 1, 0, 0.47537,-99) , 
8, -0.999968, 0, 0, 0.504755,-99) , 
NN(
0, 
0, 
-1, -2.85378, 0, -1, 0.462207,-99) , 
10, -2.26759, 0, 0, 0.501734,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0242418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.508903,-99) , 
NN(
0, 
0, 
-1, 0.142504, 1, -1, 0.4838,-99) , 
10, 0.466863, 1, 0, 0.503031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43884,-99) , 
3, 8.83364, 1, 0, 0.501116,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.022237);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542733,-99) , 
NN(
NN(
0, 
0, 
-1, 0.705189, 0, 1, 0.506448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463687,-99) , 
5, 0.0475986, 1, 0, 0.486823,-99) , 
9, -2.92257, 1, 0, 0.496511,-99) , 
8, 2.42858, 0, 0, 0.497735,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0212007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494741,-99) , 
8, 1.85776, 0, 0, 0.497502,-99) , 
NN(
0, 
0, 
-1, 0.498082, 0, -1, 0.465101,-99) , 
4, 0.999819, 0, 0, 0.495265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444255,-99) , 
4, 0.999048, 0, 0, 0.493667,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0260713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00838765, 0, 1, 0.507991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436502,-99) , 
1, 0.0115451, 1, 0, 0.505427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379388,-99) , 
1, -0.0125855, 0, 0, 0.501951,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0253223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489227,-99) , 
7, -951.287, 0, 0, 0.521721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527574,-99) , 
NN(
0, 
0, 
-1, -1.08148, 0, -1, 0.489717,-99) , 
2, -0.213101, 1, 0, 0.491257,-99) , 
8, -1.28562, 1, 0, 0.493593,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0341853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435731,-99) , 
10, -2.86145, 0, 0, 0.505642,-99) , 
9, -2.15866, 0, 0, 0.509766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476993,-99) , 
10, 0.967293, 1, 0, 0.490108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417483,-99) , 
5, 0.61897, 1, 0, 0.480788,-99) , 
10, 0.271073, 1, 0, 0.502149,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0239189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549222,-99) , 
NN(
0, 
0, 
-1, 0.241946, 1, -1, 0.494036,-99) , 
8, 1.79607, 0, 0, 0.496018,-99) , 
NN(
0, 
0, 
-1, -0.142961, 1, -1, 0.464954,-99) , 
10, 0.804787, 1, 0, 0.491007,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.031723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0571215, 0, 1, 0.530406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451727,-99) , 
10, -2.4163, 0, 0, 0.487787,-99) , 
5, 0.523234, 1, 0, 0.518772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572098,-99) , 
NN(
0, 
0, 
-1, -3.32816, 0, -1, 0.492719,-99) , 
9, -3.86936, 1, 0, 0.496044,-99) , 
8, -0.142869, 1, 0, 0.503911,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.033229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.514639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463395,-99) , 
4, 0.999819, 0, 0, 0.512194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438627,-99) , 
0, 0.498091, 0, 0, 0.471131,-99) , 
4, 0.999524, 0, 0, 0.510003,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0324509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.67345, 0, 1, 0.543658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428014,-99) , 
10, -1.96006, 0, 0, 0.498709,-99) , 
8, -0.983789, 1, 0, 0.503134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489617,-99) , 
8, 1.04026, 0, 0, 0.497727,-99) , 
NN(
0, 
0, 
-1, -0.746166, 1, -1, 0.45658,-99) , 
8, -0.428558, 0, 0, 0.484362,-99) , 
5, -0.333358, 0, 0, 0.495997,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0201713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534618,-99) , 
NN(
0, 
0, 
-1, -2.14067, 0, -1, 0.495855,-99) , 
9, -4.72835, 1, 0, 0.49773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477028,-99) , 
0, 0.498091, 1, 0, 0.491442,-99) , 
NN(
0, 
0, 
-1, 0.523408, 0, -1, 0.439404,-99) , 
2, -0.0700353, 0, 0, 0.4765,-99) , 
3, 4.48201, 1, 0, 0.493659,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0297313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496943,-99) , 
0, 0.494283, 1, 0, 0.502509,-99) , 
4, 0.999524, 1, 0, 0.505905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478442,-99) , 
10, -0.207417, 1, 0, 0.490065,-99) , 
NN(
0, 
0, 
-1, 0.237707, 0, -1, 0.45352,-99) , 
8, 0.434955, 0, 0, 0.469959,-99) , 
3, 4.53295, 1, 0, 0.499192,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0322462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480966,-99) , 
8, -0.428597, 0, 0, 0.506627,-99) , 
NN(
0, 
0, 
-1, -0.540221, 1, -1, 0.483749,-99) , 
10, -1.58624, 0, 0, 0.502099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469794,-99) , 
10, -0.717488, 1, 0, 0.482999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4382,-99) , 
10, -1.4508, 0, 0, 0.472193,-99) , 
2, -0.0710983, 0, 0, 0.497248,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0320138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498074, 1, 1, 0.538745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488916,-99) , 
9, -3.1937, 1, 0, 0.496178,-99) , 
3, 0.55134, 1, 0, 0.500279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473356,-99) , 
10, -1.05225, 0, 0, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0.725039, 1, -1, 0.465365,-99) , 
5, 0.523737, 0, 0, 0.478437,-99) , 
3, 4.55148, 1, 0, 0.49619,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0291184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485268,-99) , 
5, 0.691332, 0, 0, 0.505035,-99) , 
5, 0.0743702, 1, 0, 0.521461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494564,-99) , 
9, -3.70139, 1, 0, 0.496953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387934,-99) , 
8, -0.220373, 1, 0, 0.474208,-99) , 
10, -1.3564, 0, 0, 0.493419,-99) , 
9, -4.26136, 1, 0, 0.496592,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0404979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00149974, 0, 1, 0.526274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439904,-99) , 
0, 0.499404, 1, 0, 0.501691,-99) , 
0, 0.499994, 0, 0, 0.510188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444278,-99) , 
0, 0.493325, 0, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403136,-99) , 
8, -0.188161, 1, 0, 0.485365,-99) , 
10, -1.33047, 0, 0, 0.503721,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0277867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524337,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.488607,-99) , 
8, 2.14264, 0, 0, 0.490331,-99) , 
9, -4.85498, 1, 0, 0.493037,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0270179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.519542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442959,-99) , 
6, 0.0114672, 1, 0, 0.500972,-99) , 
5, -0.809508, 1, 0, 0.504057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477352,-99) , 
8, 0.308105, 1, 0, 0.488594,-99) , 
NN(
0, 
0, 
-1, -0.821112, 1, -1, 0.448811,-99) , 
8, -0.141328, 0, 0, 0.474078,-99) , 
0, 0.501899, 1, 0, 0.497864,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0324882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00888658, 1, 1, 0.510362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485982,-99) , 
4, 0.999524, 1, 0, 0.48997,-99) , 
5, 0.238036, 1, 0, 0.500832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484649,-99) , 
10, -0.7371, 1, 0, 0.495086,-99) , 
NN(
0, 
0, 
-1, 3.34408, 1, -1, 0.458998,-99) , 
8, -0.135542, 0, 0, 0.481485,-99) , 
0, 0.495233, 0, 0, 0.495927,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0239819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478141,-99) , 
10, 1.02283, 1, 0, 0.510417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481519,-99) , 
8, 0.429202, 1, 0, 0.497661,-99) , 
8, 1.00055, 0, 0, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458109,-99) , 
4, 0.999048, 0, 0, 0.499525,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0454912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474162,-99) , 
10, 1.55801, 1, 0, 0.510606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43946,-99) , 
5, -0.812645, 1, 0, 0.477382,-99) , 
8, -0.142804, 0, 0, 0.504719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457088,-99) , 
5, -0.0473786, 0, 0, 0.495743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419238,-99) , 
8, -0.176117, 1, 0, 0.483958,-99) , 
10, -1.33319, 0, 0, 0.499382,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0334626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544748,-99) , 
NN(
NN(
0, 
0, 
-1, -0.714263, 1, 1, 0.511222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
0, 0.504893, 0, 0, 0.487611,-99) , 
0, 0.493328, 1, 0, 0.490778,-99) , 
9, 0.0913196, 0, 0, 0.493055,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0210903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487961,-99) , 
5, 0.0884034, 1, 0, 0.496984,-99) , 
5, 0.904724, 0, 0, 0.499323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461561,-99) , 
3, 8.84137, 1, 0, 0.498145,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0123671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451347,-99) , 
10, 2.31735, 1, 0, 0.498072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448955,-99) , 
8, -1.28266, 0, 0, 0.496054,-99) , 
NN(
0, 
0, 
-1, -2.85011, 0, -1, 0.452838,-99) , 
10, -2.474, 0, 0, 0.493859,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0367695);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433518,-99) , 
10, 0.12062, 1, 0, 0.510235,-99) , 
NN(
0, 
0, 
-1, -1.92518, 0, -1, 0.486175,-99) , 
5, 0.714251, 0, 0, 0.491195,-99) , 
9, 0.494903, 0, 0, 0.492936,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0413973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452897,-99) , 
4, 0.999524, 0, 0, 0.5003,-99) , 
1, 0.00794264, 0, 0, 0.503521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483731,-99) , 
9, -4.18677, 0, 0, 0.513637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453682,-99) , 
10, -0.900229, 0, 0, 0.469951,-99) , 
8, -0.772262, 1, 0, 0.48358,-99) , 
9, -3.20921, 0, 0, 0.495884,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0389173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489623,-99) , 
2, 0.00971883, 0, 0, 0.508428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482972,-99) , 
9, -0.623973, 0, 0, 0.485506,-99) , 
3, 0.918385, 1, 0, 0.490167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440713,-99) , 
3, 8.80985, 1, 0, 0.488723,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0199273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557382,-99) , 
NN(
0, 
0, 
-1, 4.93915, 1, -1, 0.493718,-99) , 
3, 8.55516, 0, 0, 0.495506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447798,-99) , 
4, 0.999524, 0, 0, 0.493097,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0283243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498336,-99) , 
5, 0.047496, 0, 0, 0.509464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468118,-99) , 
8, 0.918398, 0, 0, 0.4899,-99) , 
8, 0.428602, 1, 0, 0.500783,-99) , 
0, 0.505709, 0, 0, 0.502921,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0319296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0801404, 0, 1, 0.512289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434992,-99) , 
10, 2.42925, 1, 0, 0.509737,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.448343,-99) , 
4, 0.999524, 0, 0, 0.506588,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.050099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475349,-99) , 
10, -2.30062, 0, 0, 0.516414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482543,-99) , 
8, -0.71367, 0, 0, 0.501499,-99) , 
5, 0.142712, 0, 0, 0.508047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465178,-99) , 
9, -1.41394, 1, 0, 0.504591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380373,-99) , 
9, -2.78327, 1, 0, 0.45123,-99) , 
9, -2.37753, 0, 0, 0.48786,-99) , 
8, 1.00035, 1, 0, 0.502854,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0279486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491231,-99) , 
3, 2.55789, 1, 0, 0.501859,-99) , 
NN(
0, 
0, 
-1, 0.49999, 1, -1, 0.482275,-99) , 
10, 0.744173, 1, 0, 0.497947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513668,-99) , 
NN(
0, 
0, 
-1, 0.725318, 0, -1, 0.455487,-99) , 
9, -3.61875, 1, 0, 0.474873,-99) , 
5, 0.809487, 1, 0, 0.494991,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0245634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484324,-99) , 
8, -1.66587, 0, 0, 0.533181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486158,-99) , 
0, 0.50093, 1, 0, 0.520135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484188,-99) , 
10, -0.00036142, 1, 0, 0.495333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438994,-99) , 
10, -2.04917, 0, 0, 0.493467,-99) , 
8, -0.999287, 1, 0, 0.496712,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0354287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498068, 0, 1, 0.556166,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.484807,-99) , 
9, -0.172408, 0, 0, 0.489185,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0285025);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.53394, 1, 1, 0.535215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469589,-99) , 
10, 2.59871, 1, 0, 0.519869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492261,-99) , 
8, 2.18414, 0, 0, 0.49439,-99) , 
9, -1.0358, 0, 0, 0.497659,-99) , 
8, -1.28266, 1, 0, 0.500499,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0359388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08379, 0, 1, 0.547309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471657,-99) , 
9, -1.15821, 0, 0, 0.504543,-99) , 
10, 0.633871, 1, 0, 0.524993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478522,-99) , 
2, -0.0817653, 0, 0, 0.51762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393389,-99) , 
10, -1.52345, 0, 0, 0.494144,-99) , 
8, -0.346885, 1, 0, 0.502393,-99) , 
8, 1.28571, 0, 0, 0.506563,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0280166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.61024, 1, 1, 0.525776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470632,-99) , 
9, 0.380033, 1, 0, 0.520091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559412,-99) , 
NN(
0, 
0, 
-1, 0.694444, 1, -1, 0.493398,-99) , 
8, -1.56601, 1, 0, 0.495841,-99) , 
5, -0.523819, 1, 0, 0.503353,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0470732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435917,-99) , 
10, -1.06364, 0, 0, 0.506241,-99) , 
9, -3.84182, 1, 0, 0.510962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495852,-99) , 
9, -3.71165, 0, 0, 0.510817,-99) , 
NN(
0, 
0, 
-1, -0.809659, 1, -1, 0.454344,-99) , 
9, -3.18651, 1, 0, 0.492874,-99) , 
8, -0.141774, 0, 0, 0.50461,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0366521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469466,-99) , 
8, -0.430791, 1, 0, 0.511092,-99) , 
10, -1.21634, 0, 0, 0.518552,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488777,-99) , 
9, -3.49443, 1, 0, 0.497584,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0191868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493917,-99) , 
10, -2.21858, 1, 0, 0.544365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467457,-99) , 
10, -2.8375, 0, 0, 0.527961,-99) , 
NN(
NN(
0, 
0, 
-1, 2.42858, 0, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428117,-99) , 
10, -2.05441, 0, 0, 0.499521,-99) , 
8, -0.999913, 1, 0, 0.502949,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0484098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451021,-99) , 
8, 0.000903016, 1, 0, 0.501316,-99) , 
9, -3.10991, 0, 0, 0.508407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54655,-99) , 
NN(
0, 
0, 
-1, -2.77493, 0, -1, 0.481575,-99) , 
9, -3.27293, 1, 0, 0.485214,-99) , 
10, -0.846648, 1, 0, 0.494549,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0200642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.98509, 0, 1, 0.505248,-99) , 
NN(
0, 
0, 
-1, 0.618784, 0, -1, 0.4691,-99) , 
4, 0.999864, 0, 0, 0.502153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403542,-99) , 
4, 0.999048, 0, 0, 0.499288,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0494325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49555,-99) , 
4, 0.999977, 0, 0, 0.526062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478116,-99) , 
9, -2.33432, 0, 0, 0.492107,-99) , 
2, 0.0143306, 0, 0, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451142,-99) , 
4, 0.999524, 0, 0, 0.500374,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0351086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.63751, 0, 1, 0.542638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44434,-99) , 
10, -1.77133, 0, 0, 0.502576,-99) , 
8, -0.706835, 1, 0, 0.508728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470411,-99) , 
9, -2.57907, 0, 0, 0.49377,-99) , 
NN(
0, 
0, 
-1, 0.498084, 1, -1, 0.44833,-99) , 
2, -0.0638239, 0, 0, 0.486455,-99) , 
5, -0.333365, 0, 0, 0.500128,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0363151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467838,-99) , 
5, -0.809523, 0, 0, 0.516405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490787,-99) , 
9, -1.26823, 0, 0, 0.494928,-99) , 
0, 0.498091, 1, 0, 0.502789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517911,-99) , 
NN(
0, 
0, 
-1, 0.713833, 1, -1, 0.47193,-99) , 
9, -3.93691, 1, 0, 0.479537,-99) , 
0, 0.494282, 0, 0, 0.498338,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0275491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0740699, 1, 1, 0.512199,-99) , 
NN(
0, 
0, 
-1, -0.523964, 1, -1, 0.493674,-99) , 
5, -0.333495, 0, 0, 0.505465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482443,-99) , 
0, 0.493851, 0, 0, 0.491718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455655,-99) , 
0, 0.494507, 1, 0, 0.484949,-99) , 
0, 0.495233, 0, 0, 0.50041,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0309717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13816, 0, 1, 0.555669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497287,-99) , 
2, 0.0701758, 0, 0, 0.506871,-99) , 
0, 0.502988, 1, 0, 0.521626,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.505219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471694,-99) , 
8, 1.28762, 0, 0, 0.481088,-99) , 
5, 0.428509, 1, 0, 0.495716,-99) , 
0, 0.501899, 0, 0, 0.501083,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0355255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88903, 0, 1, 0.568004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476971,-99) , 
9, -4.67114, 0, 0, 0.509787,-99) , 
8, -1.04015, 0, 0, 0.530994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490323,-99) , 
0, 0.505708, 0, 0, 0.492241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457888,-99) , 
4, 0.999524, 0, 0, 0.49046,-99) , 
8, -0.713657, 1, 0, 0.497738,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.026165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475473,-99) , 
9, -4.64787, 1, 0, 0.518346,-99) , 
10, -1.93871, 0, 0, 0.532104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499099,-99) , 
3, 0.50902, 1, 0, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0.713794, 1, -1, 0.476855,-99) , 
3, 4.51103, 1, 0, 0.498193,-99) , 
9, -4.12661, 1, 0, 0.502708,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0163006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497671,-99) , 
8, 2.14363, 0, 0, 0.500021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459439,-99) , 
10, 2.00348, 1, 0, 0.497883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457508,-99) , 
4, 0.999524, 0, 0, 0.495915,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0281265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43169,-99) , 
10, -1.95764, 0, 0, 0.509422,-99) , 
8, -1.28088, 1, 0, 0.513233,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0689724, 1, 1, 0.505913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446381,-99) , 
5, -0.891177, 1, 0, 0.484116,-99) , 
5, -0.809546, 0, 0, 0.502308,-99) , 
0, 0.497138, 1, 0, 0.50667,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0402889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462697,-99) , 
3, 5.35584, 1, 0, 0.513154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458035,-99) , 
10, 2.50917, 0, 0, 0.476163,-99) , 
9, -0.723476, 1, 0, 0.505332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478951,-99) , 
7, -951.286, 0, 0, 0.498486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456666,-99) , 
0, 0.496182, 1, 0, 0.471536,-99) , 
5, 0.292532, 0, 0, 0.490708,-99) , 
5, -0.23811, 1, 0, 0.496578,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0432829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461794,-99) , 
8, -0.366295, 1, 0, 0.510262,-99) , 
8, 0.251982, 0, 0, 0.519099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495821,-99) , 
8, 1.28553, 0, 0, 0.503933,-99) , 
NN(
0, 
0, 
-1, 1.44026, 1, -1, 0.476159,-99) , 
5, 0.714253, 1, 0, 0.499061,-99) , 
9, -3.41989, 1, 0, 0.505459,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0351632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443218,-99) , 
8, 1.88424, 1, 0, 0.492637,-99) , 
10, 1.05684, 1, 0, 0.512881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49157,-99) , 
9, -2.53051, 0, 0, 0.496406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415715,-99) , 
5, -0.333115, 1, 0, 0.455604,-99) , 
10, 0.328518, 1, 0, 0.492068,-99) , 
9, -1.5113, 0, 0, 0.49577,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0562298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0150482, 0, 1, 0.572524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480498,-99) , 
10, 1.10529, 1, 0, 0.508412,-99) , 
10, -0.807561, 1, 0, 0.514743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493936,-99) , 
9, -3.51575, 0, 0, 0.509407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438831,-99) , 
8, 0.633909, 0, 0, 0.465169,-99) , 
8, -0.119866, 1, 0, 0.492392,-99) , 
9, -3.16322, 0, 0, 0.505717,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0376894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459566,-99) , 
10, 0.0227974, 1, 0, 0.500285,-99) , 
9, -1.01158, 0, 0, 0.508012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48807,-99) , 
8, 1.85726, 0, 0, 0.490532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448366,-99) , 
10, 1.68357, 1, 0, 0.487816,-99) , 
0, 0.499995, 0, 0, 0.494852,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0357867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.64881, 1, 1, 0.514811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440001,-99) , 
4, 0.999905, 0, 0, 0.510107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4917,-99) , 
4, 0.999526, 1, 0, 0.497754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428909,-99) , 
10, 0.343084, 1, 0, 0.489969,-99) , 
5, 0.619019, 1, 0, 0.504708,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0377499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465248,-99) , 
9, -3.56688, 1, 0, 0.492265,-99) , 
9, -3.05965, 0, 0, 0.501001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471524,-99) , 
10, 0.751682, 1, 0, 0.494169,-99) , 
NN(
0, 
0, 
-1, -0.619552, 1, -1, 0.465181,-99) , 
8, 0.431374, 0, 0, 0.485543,-99) , 
10, -0.798627, 1, 0, 0.492143,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0495033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19243, 1, 1, 0.544548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45347,-99) , 
10, -2.84587, 0, 0, 0.528595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481431,-99) , 
9, -0.790783, 1, 0, 0.519309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485024,-99) , 
8, 1.68316, 0, 0, 0.490546,-99) , 
5, -0.714291, 1, 0, 0.498324,-99) , 
9, -3.98449, 1, 0, 0.503262,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0370958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462709,-99) , 
9, -2.41462, 1, 0, 0.501802,-99) , 
5, 0.845489, 1, 0, 0.526307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478057,-99) , 
8, -0.426539, 0, 0, 0.504037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399391,-99) , 
8, -0.872967, 1, 0, 0.476057,-99) , 
10, -1.88223, 0, 0, 0.500543,-99) , 
5, 0.80915, 0, 0, 0.50399,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0530323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474175,-99) , 
8, 0.269594, 0, 0, 0.535031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456488,-99) , 
8, 0.491402, 1, 0, 0.501161,-99) , 
9, -2.77438, 0, 0, 0.506072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483399,-99) , 
10, 0.548644, 1, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0.0479797, 1, -1, 0.453112,-99) , 
9, -2.19654, 0, 0, 0.487954,-99) , 
10, -0.223225, 1, 0, 0.498857,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0287952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493951,-99) , 
10, 0.217435, 1, 0, 0.507968,-99) , 
NN(
0, 
0, 
-1, -2.70769, 1, -1, 0.460602,-99) , 
9, -4.72835, 0, 0, 0.505445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453981,-99) , 
0, 0.505706, 1, 0, 0.503337,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0209037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491677,-99) , 
8, -0.145762, 1, 0, 0.520361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542958,-99) , 
NN(
0, 
0, 
-1, -2.22208, 0, -1, 0.492778,-99) , 
9, -4.93267, 1, 0, 0.494512,-99) , 
5, -0.904746, 1, 0, 0.497033,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0297307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.577349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483685,-99) , 
0, 0.499993, 0, 0, 0.517888,-99) , 
7, -951.288, 0, 0, 0.540705,-99) , 
NN(
NN(
0, 
0, 
-1, -5.07832, 1, 1, 0.534633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473482,-99) , 
10, -1.46997, 0, 0, 0.495924,-99) , 
9, -4.6766, 1, 0, 0.498457,-99) , 
9, -1.25154, 0, 0, 0.504584,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0230481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477592,-99) , 
9, -4.09112, 0, 0, 0.516495,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.49332,-99) , 
0, 0.501898, 0, 0, 0.49813,-99) , 
NN(
0, 
0, 
-1, 0.529212, 1, -1, 0.460238,-99) , 
5, 0.904723, 1, 0, 0.496133,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0313866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494752,-99) , 
7, -951.288, 0, 0, 0.518663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485745,-99) , 
9, -3.20569, 1, 0, 0.496091,-99) , 
9, -0.984686, 0, 0, 0.498752,-99) , 
NN(
0, 
0, 
-1, -2.85342, 0, -1, 0.462765,-99) , 
10, -2.47817, 0, 0, 0.496894,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0246408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500943, 0, 1, 0.547429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48258,-99) , 
9, -2.98426, 1, 0, 0.506494,-99) , 
3, 4.56745, 1, 0, 0.53323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434133,-99) , 
10, -2.70779, 0, 0, 0.498654,-99) , 
NN(
0, 
0, 
-1, -0.677008, 0, -1, 0.454883,-99) , 
0, 0.503803, 1, 0, 0.494279,-99) , 
2, 0.0725002, 0, 0, 0.500108,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0211091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
0, 0.5, 1, 0, 0.543874,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.526849,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495243,-99) , 
9, -4.39588, 1, 0, 0.498213,-99) , 
1, -0.00621516, 1, 0, 0.501795,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.035021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39784, 0, 1, 0.534281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470242,-99) , 
0, 0.496185, 1, 0, 0.491753,-99) , 
5, 0.854766, 1, 0, 0.519274,-99) , 
NN(
NN(
0, 
0, 
-1, -0.688435, 1, 1, 0.521292,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.491377,-99) , 
0, 0.495233, 1, 0, 0.498856,-99) , 
5, 0.61895, 0, 0, 0.504406,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0155027);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56888,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500944, 1, 1, 0.534499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459912,-99) , 
10, -2.42429, 0, 0, 0.498237,-99) , 
9, -0.756868, 0, 0, 0.501472,-99) , 
8, 2.42862, 0, 0, 0.503273,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.048497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471473,-99) , 
8, -0.18931, 0, 0, 0.518542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482896,-99) , 
9, -1.1432, 0, 0, 0.493458,-99) , 
10, -0.269804, 1, 0, 0.502892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434661,-99) , 
8, -0.273569, 1, 0, 0.479804,-99) , 
10, -0.994285, 0, 0, 0.487465,-99) , 
9, -3.36186, 0, 0, 0.497653,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0260226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473737,-99) , 
8, 2.14365, 1, 0, 0.506612,-99) , 
NN(
0, 
0, 
-1, -0.843858, 1, -1, 0.476716,-99) , 
10, -1.89719, 0, 0, 0.502835,-99) , 
NN(
0, 
0, 
-1, 0.490336, 1, -1, 0.461018,-99) , 
0, 0.491424, 0, 0, 0.499804,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0269628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472619,-99) , 
10, 1.8918, 1, 0, 0.528593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476517,-99) , 
5, 0.71395, 1, 0, 0.515782,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490155, 0, 1, 0.53224,-99) , 
NN(
0, 
0, 
-1, 0.494509, 0, -1, 0.493141,-99) , 
0, 0.491425, 1, 0, 0.495981,-99) , 
8, 1.28559, 0, 0, 0.499534,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0246448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497483,-99) , 
5, -0.80955, 1, 0, 0.501695,-99) , 
8, 2.14321, 0, 0, 0.504241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515401,-99) , 
NN(
0, 
0, 
-1, 1.29511, 1, -1, 0.47345,-99) , 
2, 0.0712709, 0, 0, 0.48132,-99) , 
0, 0.495233, 0, 0, 0.498455,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0379866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.927456, 0, 1, 0.534973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489913,-99) , 
2, -0.0638239, 0, 0, 0.527197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499133,-99) , 
8, 1.00596, 0, 0, 0.515872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486065,-99) , 
2, 0.071981, 0, 0, 0.490133,-99) , 
0, 0.501899, 0, 0, 0.495198,-99) , 
5, -0.619065, 1, 0, 0.503894,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0262346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492779,-99) , 
3, 2.17104, 0, 0, 0.499783,-99) , 
0, 0.490472, 1, 0, 0.501788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462523,-99) , 
10, -1.00101, 0, 0, 0.486845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444682,-99) , 
10, -0.383529, 1, 0, 0.473933,-99) , 
5, 0.809428, 1, 0, 0.498305,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0209663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545759,-99) , 
NN(
0, 
0, 
-1, -1.94337, 1, -1, 0.497167,-99) , 
8, 1.3651, 0, 0, 0.499861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488164,-99) , 
8, 2.14462, 0, 0, 0.495103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400089,-99) , 
5, 0.618974, 1, 0, 0.483504,-99) , 
10, 0.294636, 1, 0, 0.49566,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0494292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.790819, 1, 1, 0.530725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404823,-99) , 
10, -1.08311, 1, 0, 0.500001,-99) , 
9, -3.1675, 0, 0, 0.511893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482958,-99) , 
10, 0.809266, 1, 0, 0.525008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472973,-99) , 
7, -951.286, 1, 0, 0.487211,-99) , 
8, 1.77532, 0, 0, 0.494845,-99) , 
8, 0.428482, 1, 0, 0.50431,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0337001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.047607, 1, 1, 0.512939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467457,-99) , 
8, -1.57004, 0, 0, 0.5107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449376,-99) , 
9, -3.96931, 0, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.456494,-99) , 
0, 0.496184, 0, 0, 0.487768,-99) , 
3, 4.44496, 1, 0, 0.506279,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0344419);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491757,-99) , 
3, 3.41178, 1, 0, 0.51031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457571,-99) , 
10, -1.20783, 0, 0, 0.494537,-99) , 
5, 0.238021, 1, 0, 0.503749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485825,-99) , 
8, -1.5087, 1, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, -0.376074, 0, -1, 0.444302,-99) , 
9, -4.21647, 1, 0, 0.483187,-99) , 
9, -3.95972, 0, 0, 0.500091,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0235671);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492957,-99) , 
8, 2.1427, 0, 0, 0.494624,-99) , 
NN(
0, 
0, 
-1, 0.498077, 1, -1, 0.445948,-99) , 
10, 1.45895, 1, 0, 0.491954,-99) , 
9, 0.334481, 0, 0, 0.493647,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0266722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.87857, 1, 1, 0.543009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497009,-99) , 
5, -0.809526, 1, 0, 0.502405,-99) , 
2, -0.096957, 1, 0, 0.506315,-99) , 
NN(
0, 
0, 
-1, 0.49428, 0, -1, 0.475772,-99) , 
3, 4.51103, 1, 0, 0.500429,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0471378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.672593, 0, 1, 0.528163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454021,-99) , 
5, 0.850115, 1, 0, 0.495441,-99) , 
9, -2.96205, 1, 0, 0.514883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449893,-99) , 
5, -0.818629, 0, 0, 0.51316,-99) , 
NN(
0, 
0, 
-1, -0.183824, 1, -1, 0.482507,-99) , 
1, 0.00458981, 0, 0, 0.488613,-99) , 
5, -0.0477342, 0, 0, 0.502786,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0420655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.460263, 0, 1, 0.528788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486778,-99) , 
8, 0.353631, 1, 0, 0.508367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474131,-99) , 
1, -0.00610472, 1, 0, 0.479713,-99) , 
9, -2.8488, 1, 0, 0.495742,-99) , 
9, -0.842568, 0, 0, 0.4992,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0300536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49465,-99) , 
9, -2.42145, 1, 0, 0.536624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484763,-99) , 
10, -1.49244, 0, 0, 0.521754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460097,-99) , 
10, 2.56881, 1, 0, 0.505784,-99) , 
NN(
0, 
0, 
-1, -2.93842, 1, -1, 0.484276,-99) , 
5, 0.12015, 1, 0, 0.496925,-99) , 
5, 0.809487, 0, 0, 0.500136,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.027851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.73783, 0, 1, 0.510257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489807,-99) , 
0, 0.497136, 1, 0, 0.51493,-99) , 
NN(
0, 
0, 
-1, 1.17779, 1, -1, 0.458375,-99) , 
9, -0.381245, 0, 0, 0.483879,-99) , 
10, 0.953248, 1, 0, 0.506323,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0333722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495015,-99) , 
5, -0.179129, 1, 0, 0.507848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456081,-99) , 
5, -0.904722, 0, 0, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.483563,-99) , 
8, 0.429349, 0, 0, 0.492615,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0374104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498084, 1, 1, 0.5629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49828,-99) , 
8, 1.00035, 0, 0, 0.50897,-99) , 
10, -1.03184, 1, 0, 0.513409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476202,-99) , 
0, 0.498093, 0, 0, 0.500252,-99) , 
NN(
0, 
0, 
-1, 0.524963, 1, -1, 0.471501,-99) , 
7, -951.286, 0, 0, 0.489281,-99) , 
9, -3.38434, 0, 0, 0.505453,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0377078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.65784, 0, 1, 0.527746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47902,-99) , 
10, -2.14755, 0, 0, 0.502048,-99) , 
8, 0.239662, 0, 0, 0.510987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47235,-99) , 
9, -2.24088, 0, 0, 0.499701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437577,-99) , 
5, -0.809485, 0, 0, 0.491886,-99) , 
8, 1.00106, 1, 0, 0.506074,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0187222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499028, 1, 1, 0.544281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476425,-99) , 
8, -0.426208, 0, 0, 0.522665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495942,-99) , 
7, -951.286, 0, 0, 0.512184,-99) , 
NN(
0, 
0, 
-1, 0.613171, 1, -1, 0.495174,-99) , 
9, -1.49141, 0, 0, 0.497908,-99) , 
1, -0.00621516, 1, 0, 0.499939,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0159668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03697, 1, 1, 0.530739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498096,-99) , 
8, 2.14285, 0, 0, 0.500242,-99) , 
9, -0.691084, 0, 0, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45271,-99) , 
0, 0.505709, 1, 0, 0.500856,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0233132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489448,-99) , 
10, 0.405818, 1, 0, 0.501148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455002,-99) , 
10, -2.43141, 1, 0, 0.481738,-99) , 
8, -0.998672, 0, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454928,-99) , 
2, 0.21457, 1, 0, 0.497266,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0332762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
7, -951.286, 0, 0, 0.515044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477538,-99) , 
0, 0.499992, 1, 0, 0.495601,-99) , 
9, -2.97958, 0, 0, 0.504634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435964,-99) , 
8, 0.790826, 1, 0, 0.464088,-99) , 
0, 0.496182, 1, 0, 0.477422,-99) , 
10, 1.07919, 1, 0, 0.501187,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0236584);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940962, 1, 1, 0.534155,-99) , 
NN(
NN(
0, 
0, 
-1, -1.58776, 0, 1, 0.510404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457051,-99) , 
5, -0.637225, 1, 0, 0.492875,-99) , 
10, 0.955886, 1, 0, 0.507754,-99) , 
5, 0.904671, 0, 0, 0.509244,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0350229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490507,-99) , 
2, -0.00697741, 1, 0, 0.502562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45241,-99) , 
0, 0.499994, 0, 0, 0.476589,-99) , 
2, 0.0664992, 1, 0, 0.49871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434204,-99) , 
4, 0.999048, 0, 0, 0.496844,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0273569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57131, 0, 1, 0.506765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
10, -2.01626, 1, 0, 0.486046,-99) , 
0, 0.496185, 0, 0, 0.500198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514381,-99) , 
NN(
0, 
0, 
-1, 0.441829, 1, -1, 0.466948,-99) , 
0, 0.493343, 1, 0, 0.476242,-99) , 
2, -0.0679183, 0, 0, 0.496358,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0266869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495214,-99) , 
2, 0.0267097, 0, 0, 0.50376,-99) , 
NN(
0, 
0, 
-1, -2.35794, 1, -1, 0.479178,-99) , 
4, 0.999932, 0, 0, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468084,-99) , 
4, 0.999524, 0, 0, 0.498904,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0325697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904723, 0, 1, 0.513946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455732,-99) , 
10, -0.241593, 1, 0, 0.487736,-99) , 
2, -0.0750397, 0, 0, 0.510183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475898,-99) , 
5, -0.184189, 1, 0, 0.49322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433289,-99) , 
5, 0.713312, 1, 0, 0.484485,-99) , 
0, 0.5019, 1, 0, 0.50502,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0240789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498378,-99) , 
8, 0.14636, 0, 0, 0.50989,-99) , 
NN(
0, 
0, 
-1, 0.496729, 0, -1, 0.489866,-99) , 
0, 0.496185, 1, 0, 0.496321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442367,-99) , 
3, 8.80985, 1, 0, 0.494596,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.024354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490733,-99) , 
7, -951.286, 1, 0, 0.514811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48942,-99) , 
5, 0.523739, 0, 0, 0.494495,-99) , 
1, 0.00458981, 0, 0, 0.497307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463659,-99) , 
4, 0.999524, 0, 0, 0.495704,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0231465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.911754, 1, 1, 0.543757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460502,-99) , 
10, -1.44711, 0, 0, 0.507265,-99) , 
9, -3.96471, 1, 0, 0.513054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497884,-99) , 
1, 0.00779435, 0, 0, 0.500335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446247,-99) , 
10, 2.01494, 1, 0, 0.497755,-99) , 
0, 0.499043, 0, 0, 0.504276,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0488529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482589,-99) , 
8, 1.57172, 1, 0, 0.514793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438168,-99) , 
3, 4.09566, 1, 0, 0.481145,-99) , 
2, 0.0672441, 1, 0, 0.509563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470663,-99) , 
7, -0.930887, 0, 0, 0.505638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319497,-99) , 
7, -1.8569, 0, 0, 0.492086,-99) , 
7, -951.286, 1, 0, 0.500012,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.019496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5862, 0, 1, 0.507685,-99) , 
NN(
0, 
0, 
-1, -0.210858, 0, -1, 0.483216,-99) , 
10, 1.1029, 1, 0, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458234,-99) , 
10, -2.88307, 0, 0, 0.503292,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0183768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505708, 1, -1, 0.496366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441808,-99) , 
0, 0.499043, 0, 0, 0.47089,-99) , 
8, 1.57216, 1, 0, 0.493322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443573,-99) , 
1, 0.0121806, 1, 0, 0.491871,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0336968);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413348,-99) , 
10, -1.08764, 0, 0, 0.501904,-99) , 
NN(
0, 
0, 
-1, -0.881345, 1, -1, 0.483205,-99) , 
8, 0.142789, 0, 0, 0.493112,-99) , 
9, -0.0247478, 0, 0, 0.495861,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0338254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54005, 1, 1, 0.531361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489315,-99) , 
8, 0.429313, 0, 0, 0.500478,-99) , 
5, -0.904773, 1, 0, 0.50366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464497,-99) , 
3, 4.60598, 1, 0, 0.499032,-99) , 
NN(
0, 
0, 
-1, 0.498087, 1, -1, 0.452923,-99) , 
10, -0.083807, 1, 0, 0.482651,-99) , 
2, 0.0716687, 1, 0, 0.500463,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.030723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.591845, 0, 1, 0.552967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441834,-99) , 
9, -2.59026, 1, 0, 0.496817,-99) , 
5, -0.142883, 1, 0, 0.517006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493162,-99) , 
4, 0.999524, 1, 0, 0.495549,-99) , 
8, 2.14256, 0, 0, 0.498016,-99) , 
3, 4.44496, 0, 0, 0.501605,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0123161);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
8, 1.85403, 0, 0, 0.501048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437459,-99) , 
1, 0.000166188, 1, 0, 0.471136,-99) , 
10, 1.23278, 1, 0, 0.498526,-99) , 
9, 0.565252, 0, 0, 0.499862,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.03171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459009,-99) , 
4, 0.999905, 0, 0, 0.499405,-99) , 
9, -4.64881, 1, 0, 0.501718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471615,-99) , 
5, 0.879052, 1, 0, 0.507979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449899,-99) , 
5, 0.676066, 1, 0, 0.464965,-99) , 
5, 0.818581, 0, 0, 0.485238,-99) , 
5, 0.619017, 1, 0, 0.497259,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0545355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.66592, 0, 1, 0.553451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459701,-99) , 
10, -0.42201, 1, 0, 0.510662,-99) , 
9, -2.5044, 0, 0, 0.516121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486327,-99) , 
10, 0.492553, 1, 0, 0.495689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400171,-99) , 
9, -2.27563, 1, 0, 0.44847,-99) , 
9, -1.94436, 0, 0, 0.483635,-99) , 
10, 0.0825298, 1, 0, 0.505804,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0205418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494897,-99) , 
0, 0.500724, 0, 0, 0.514679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482991,-99) , 
0, 0.500721, 1, 0, 0.496958,-99) , 
2, 0.0670049, 0, 0, 0.499663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452742,-99) , 
0, 0.489519, 0, 0, 0.498217,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0172998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.197377, 1, 1, 0.505661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430617,-99) , 
0, 0.498088, 0, 0, 0.469856,-99) , 
4, 0.999524, 0, 0, 0.503706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46477,-99) , 
10, 2.07892, 1, 0, 0.501939,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0405886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36952, 0, 1, 0.523145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435335,-99) , 
5, 0.0473249, 1, 0, 0.484819,-99) , 
9, -2.41356, 1, 0, 0.508774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485018,-99) , 
3, 0.964769, 1, 0, 0.494024,-99) , 
NN(
0, 
0, 
-1, -0.424677, 1, -1, 0.463704,-99) , 
3, 4.54421, 1, 0, 0.488534,-99) , 
0, 0.500947, 0, 0, 0.493929,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0255156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427995, 1, 1, 0.508504,-99) , 
NN(
0, 
0, 
-1, -1.62011, 0, -1, 0.487495,-99) , 
0, 0.498907, 1, 0, 0.498114,-99) , 
NN(
0, 
0, 
-1, -0.61912, 1, -1, 0.466952,-99) , 
0, 0.492377, 0, 0, 0.494976,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0369917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49238,-99) , 
8, 1.14372, 0, 0, 0.532811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467105,-99) , 
9, -0.217942, 0, 0, 0.4973,-99) , 
10, 1.04111, 1, 0, 0.511697,-99) , 
NN(
0, 
0, 
-1, 0.401863, 1, -1, 0.486906,-99) , 
9, -1.78143, 0, 0, 0.492385,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0281745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451746,-99) , 
4, 0.999773, 0, 0, 0.507062,-99) , 
NN(
0, 
0, 
-1, -0.904866, 1, -1, 0.469998,-99) , 
9, -0.603931, 1, 0, 0.503959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450618,-99) , 
4, 0.999524, 0, 0, 0.501343,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.03781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471171,-99) , 
0, 0.503986, 1, 0, 0.505045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444823,-99) , 
8, -0.174167, 1, 0, 0.474263,-99) , 
0, 0.492377, 0, 0, 0.501877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450262,-99) , 
10, 1.85736, 1, 0, 0.501464,-99) , 
NN(
0, 
0, 
-1, -0.713244, 0, -1, 0.458891,-99) , 
7, -951.286, 1, 0, 0.481918,-99) , 
10, 0.179765, 1, 0, 0.496116,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0221979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494219,-99) , 
10, -2.61547, 1, 0, 0.521126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463917,-99) , 
8, -0.466662, 0, 0, 0.497207,-99) , 
NN(
0, 
0, 
-1, -0.617246, 1, -1, 0.455498,-99) , 
10, -1.7588, 0, 0, 0.492625,-99) , 
8, -1.28255, 1, 0, 0.494836,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0302723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.256, 0, 1, 0.507468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441809,-99) , 
10, 1.59916, 1, 0, 0.502739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492809,-99) , 
0, 0.504849, 1, 0, 0.504045,-99) , 
NN(
0, 
0, 
-1, -0.0768871, 0, -1, 0.480029,-99) , 
0, 0.503985, 0, 0, 0.484495,-99) , 
0, 0.49809, 1, 0, 0.493251,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0531347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434204,-99) , 
9, -1.5535, 0, 0, 0.487157,-99) , 
10, 0.541107, 1, 0, 0.519422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476734,-99) , 
10, -1.85055, 1, 0, 0.508853,-99) , 
NN(
0, 
0, 
-1, -1.6979, 0, -1, 0.479283,-99) , 
8, -0.604238, 1, 0, 0.48628,-99) , 
8, 1.57188, 0, 0, 0.490279,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0303237);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467741,-99) , 
5, -0.931978, 0, 0, 0.506279,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.489504,-99) , 
5, -0.7143, 1, 0, 0.493343,-99) , 
2, -0.21276, 1, 0, 0.495047,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0172223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.50447, 1, 1, 0.533703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476843,-99) , 
3, 4.48201, 1, 0, 0.495852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441995,-99) , 
9, -5.00606, 0, 0, 0.493991,-99) , 
9, -0.559957, 0, 0, 0.49721,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0161068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492121,-99) , 
7, -951.286, 0, 0, 0.498633,-99) , 
9, -0.560683, 0, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463242,-99) , 
10, 2.01494, 1, 0, 0.49825,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0224159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484706,-99) , 
8, 1.57226, 1, 0, 0.505222,-99) , 
2, 0.196965, 0, 0, 0.506961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469937,-99) , 
2, -0.21027, 0, 0, 0.505528,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0426451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490279,-99) , 
1, 0.000160057, 0, 0, 0.50163,-99) , 
8, 1.85712, 0, 0, 0.505648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47925,-99) , 
7, -951.286, 0, 0, 0.501391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459117,-99) , 
0, 0.493601, 1, 0, 0.47212,-99) , 
5, -0.238129, 1, 0, 0.483789,-99) , 
0, 0.49809, 0, 0, 0.495111,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0360158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491034,-99) , 
5, 0.713837, 1, 0, 0.507949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459493,-99) , 
10, -1.98494, 1, 0, 0.488543,-99) , 
8, -0.713072, 0, 0, 0.504402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525397,-99) , 
NN(
0, 
0, 
-1, -0.385065, 0, -1, 0.459168,-99) , 
2, 0.0822888, 0, 0, 0.471829,-99) , 
0, 0.493329, 0, 0, 0.499635,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0385983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492997,-99) , 
8, 0.43, 1, 0, 0.503557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460852,-99) , 
5, 0.360769, 0, 0, 0.483588,-99) , 
9, -3.1949, 0, 0, 0.495757,-99) , 
NN(
0, 
0, 
-1, -0.909118, 0, -1, 0.451249,-99) , 
5, 0.904661, 1, 0, 0.493492,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0363629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482922,-99) , 
10, 1.37334, 1, 0, 0.532915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488546,-99) , 
5, -0.619179, 1, 0, 0.499313,-99) , 
8, 1.28749, 0, 0, 0.505366,-99) , 
NN(
0, 
0, 
-1, -1.85627, 0, -1, 0.482726,-99) , 
7, -951.286, 1, 0, 0.492871,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.024438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551836,-99) , 
NN(
NN(
0, 
0, 
-1, 0.809, 0, 1, 0.505556,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487051,-99) , 
0, 0.500947, 0, 0, 0.492137,-99) , 
9, 0.510893, 0, 0, 0.494033,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0397236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.863632, 1, 1, 0.540301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490466,-99) , 
9, -2.82714, 0, 0, 0.504361,-99) , 
5, 0.80915, 0, 0, 0.509512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479884,-99) , 
10, 0.396521, 1, 0, 0.511376,-99) , 
NN(
0, 
0, 
-1, -2.98555, 1, -1, 0.476474,-99) , 
0, 0.501899, 0, 0, 0.492846,-99) , 
0, 0.499042, 1, 0, 0.5025,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0226453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499825,-99) , 
7, -951.287, 0, 0, 0.539744,-99) , 
NN(
NN(
0, 
0, 
-1, 1.67237, 0, 1, 0.506611,-99) , 
NN(
0, 
0, 
-1, -0.523867, 1, -1, 0.47942,-99) , 
10, 0.827132, 1, 0, 0.501957,-99) , 
8, -1.28493, 1, 0, 0.504792,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0375466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467601,-99) , 
3, 0.602722, 0, 0, 0.521395,-99) , 
NN(
0, 
0, 
-1, -0.746091, 0, -1, 0.461266,-99) , 
8, -1.00005, 0, 0, 0.512131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497026,-99) , 
8, 1.67295, 0, 0, 0.501939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445472,-99) , 
10, 0.663789, 1, 0, 0.498302,-99) , 
5, -0.238129, 1, 0, 0.503908,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0392722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.60641, 0, 1, 0.513666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434629,-99) , 
9, -2.15822, 1, 0, 0.510193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484516,-99) , 
5, -0.809528, 0, 0, 0.498594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427502,-99) , 
9, -2.39758, 1, 0, 0.461439,-99) , 
9, -1.95997, 0, 0, 0.488035,-99) , 
10, 0.00769318, 1, 0, 0.502842,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0382516);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.440304, 0, 1, 0.535345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44774,-99) , 
10, 0.181705, 1, 0, 0.499253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479675,-99) , 
8, 1.28456, 0, 0, 0.487454,-99) , 
5, -0.238131, 0, 0, 0.494985,-99) , 
9, -0.583131, 0, 0, 0.498293,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0490715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50075, 1, 1, 0.525545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483673,-99) , 
3, 1.68823, 1, 0, 0.502136,-99) , 
5, -0.047873, 0, 0, 0.512786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488776,-99) , 
10, -0.454519, 1, 0, 0.49765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434705,-99) , 
9, -3.51864, 1, 0, 0.468251,-99) , 
9, -3.03268, 0, 0, 0.490587,-99) , 
8, 0.143385, 1, 0, 0.500598,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0328415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00057, 0, 1, 0.537183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451772,-99) , 
9, -0.111603, 0, 0, 0.484912,-99) , 
10, 1.4322, 1, 0, 0.516107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531235,-99) , 
NN(
0, 
0, 
-1, 0.294997, 1, -1, 0.489207,-99) , 
8, 1.72541, 0, 0, 0.491253,-99) , 
9, -1.75126, 0, 0, 0.496669,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0188337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494793,-99) , 
9, -1.51016, 0, 0, 0.498056,-99) , 
0, 0.505981, 0, 0, 0.499543,-99) , 
0, 0.490471, 1, 0, 0.501428,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0238086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904756, 1, 1, 0.51516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445836,-99) , 
10, -2.51764, 0, 0, 0.497134,-99) , 
0, 0.497138, 1, 0, 0.504371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452217,-99) , 
10, 1.01977, 1, 0, 0.492241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452469,-99) , 
0, 0.49524, 0, 0, 0.482206,-99) , 
8, 1.28559, 1, 0, 0.500459,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0298054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0830102, 0, 1, 0.518102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46934,-99) , 
10, 1.23481, 1, 0, 0.511224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488317,-99) , 
2, 0.0311366, 0, 0, 0.494257,-99) , 
4, 0.999524, 1, 0, 0.496355,-99) , 
1, 0.00236311, 0, 0, 0.500236,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0291124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44918, 1, 1, 0.526844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462852,-99) , 
0, 0.502852, 1, 0, 0.517641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476375,-99) , 
9, -4.25616, 1, 0, 0.525345,-99) , 
NN(
0, 
0, 
-1, -2.18823, 0, -1, 0.491554,-99) , 
8, -1.36662, 1, 0, 0.494274,-99) , 
8, 1.28588, 0, 0, 0.498559,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0206513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496484,-99) , 
2, -0.0918156, 1, 0, 0.500712,-99) , 
4, 0.999048, 1, 0, 0.502352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432869,-99) , 
3, 8.64615, 1, 0, 0.500069,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0415264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142593, 0, 1, 0.557217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496261,-99) , 
10, -1.49621, 1, 0, 0.517801,-99) , 
3, 3.9944, 0, 0, 0.526954,-99) , 
NN(
NN(
0, 
0, 
-1, -2.45379, 0, 1, 0.52643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4917,-99) , 
0, 0.491427, 1, 0, 0.496812,-99) , 
8, 0.87751, 0, 0, 0.508558,-99) , 
8, -0.428578, 1, 0, 0.513278,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0295548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.45967, 0, 1, 0.514437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473312,-99) , 
9, -2.16174, 0, 0, 0.500297,-99) , 
10, -0.157559, 1, 0, 0.509041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470186,-99) , 
2, 0.214776, 1, 0, 0.507723,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0324512);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.35347, 1, 1, 0.509852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492594,-99) , 
9, -3.41031, 0, 0, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424969,-99) , 
8, 0.106117, 1, 0, 0.492906,-99) , 
10, -0.989768, 0, 0, 0.503737,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0208254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.88303, 0, 1, 0.537559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488313,-99) , 
3, 3.08568, 1, 0, 0.4993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452564,-99) , 
4, 0.999524, 0, 0, 0.497611,-99) , 
5, 0.904723, 0, 0, 0.499895,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0142914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536214,-99) , 
NN(
0, 
0, 
-1, -2.66864, 0, -1, 0.494303,-99) , 
0, 0.490473, 1, 0, 0.496291,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0161538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.547109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492404,-99) , 
9, -4.54917, 0, 0, 0.525008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499704,-99) , 
9, -4.2457, 1, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433083,-99) , 
10, -2.04917, 0, 0, 0.500023,-99) , 
8, -0.999277, 1, 0, 0.503053,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.030327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496279,-99) , 
8, -0.0585126, 0, 0, 0.519293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437247,-99) , 
6, 0.00759262, 1, 0, 0.498092,-99) , 
5, -0.142893, 1, 0, 0.505512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456911,-99) , 
0, 0.495234, 1, 0, 0.469327,-99) , 
8, 0.156513, 1, 0, 0.481693,-99) , 
10, 0.753548, 1, 0, 0.501393,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0503208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.572, 0, 1, 0.526743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311327,-99) , 
7, -1.85627, 0, 0, 0.512591,-99) , 
NN(
0, 
0, 
-1, 1.85748, 1, -1, 0.489685,-99) , 
7, -951.286, 0, 0, 0.50223,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0402841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809018, 0, 1, 0.536706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464292,-99) , 
10, -2.08503, 0, 0, 0.504105,-99) , 
0, 0.499903, 1, 0, 0.514396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48938,-99) , 
8, -0.142718, 1, 0, 0.500733,-99) , 
NN(
0, 
0, 
-1, -0.33334, 1, -1, 0.469449,-99) , 
0, 0.495595, 1, 0, 0.487084,-99) , 
0, 0.498089, 0, 0, 0.501068,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0303347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49379,-99) , 
2, 0.0819481, 1, 0, 0.520886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444719,-99) , 
10, -2.61207, 0, 0, 0.500812,-99) , 
5, -0.238131, 1, 0, 0.508892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42427,-99) , 
1, -0.0125855, 0, 0, 0.50656,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0270127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.70518, 0, 1, 0.539243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483585,-99) , 
2, 0.0466494, 1, 0, 0.501732,-99) , 
1, 0.00592662, 0, 0, 0.506772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540833,-99) , 
NN(
0, 
0, 
-1, 0.583195, 1, -1, 0.486908,-99) , 
2, 0.206835, 0, 0, 0.489959,-99) , 
5, 0.238071, 1, 0, 0.499283,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0176478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477224,-99) , 
0, 0.493736, 0, 0, 0.50058,-99) , 
0, 0.490471, 1, 0, 0.502248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449937,-99) , 
4, 0.999048, 0, 0, 0.500646,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0320434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474293,-99) , 
5, 0.618825, 1, 0, 0.505772,-99) , 
NN(
0, 
0, 
-1, -0.213357, 0, -1, 0.485116,-99) , 
0, 0.501899, 0, 0, 0.489204,-99) , 
9, 0.107185, 0, 0, 0.491019,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0268561);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142865, 1, 1, 0.52794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494198,-99) , 
10, -0.833387, 1, 0, 0.502058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462116,-99) , 
0, 0.503532, 1, 0, 0.473517,-99) , 
0, 0.502851, 1, 0, 0.497951,-99) , 
5, -0.904765, 1, 0, 0.501016,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0350186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.540153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476594,-99) , 
9, -2.08055, 1, 0, 0.499544,-99) , 
0, 0.495369, 0, 0, 0.507635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514811,-99) , 
NN(
0, 
0, 
-1, -0.00141849, 1, -1, 0.482975,-99) , 
9, -0.133523, 0, 0, 0.484729,-99) , 
0, 0.496185, 1, 0, 0.49208,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0317348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498225, 0, 1, 0.519635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493614,-99) , 
10, -1.29719, 1, 0, 0.499724,-99) , 
0, 0.497137, 0, 0, 0.508725,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428875, 0, 1, 0.526621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466679,-99) , 
7, -951.286, 1, 0, 0.482096,-99) , 
0, 0.504755, 0, 0, 0.493659,-99) , 
0, 0.500946, 1, 0, 0.504548,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0660008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471263,-99) , 
10, 1.99003, 1, 0, 0.521807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461577,-99) , 
5, -0.959184, 0, 0, 0.515629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450522,-99) , 
6, 0.00108743, 0, 0, 0.503289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418847,-99) , 
6, 0.00761114, 1, 0, 0.498734,-99) , 
5, -0.142897, 1, 0, 0.506054,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0265617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497949, 0, 1, 0.535714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479975,-99) , 
5, 0.723308, 1, 0, 0.504587,-99) , 
5, 0.904724, 0, 0, 0.506475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458229,-99) , 
0, 0.505709, 1, 0, 0.504463,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0221754);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492235,-99) , 
7, -951.287, 0, 0, 0.521217,-99) , 
NN(
0, 
0, 
-1, 0.495234, 0, -1, 0.49167,-99) , 
8, -1.28568, 1, 0, 0.493927,-99) , 
2, 0.214776, 0, 0, 0.49571,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0197972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472753,-99) , 
10, 0.209819, 1, 0, 0.496651,-99) , 
8, 1.99621, 0, 0, 0.4988,-99) , 
NN(
0, 
0, 
-1, -0.731718, 0, -1, 0.467853,-99) , 
10, 1.04554, 1, 0, 0.494719,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0451433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.781688, 1, 1, 0.531373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468414,-99) , 
3, 4.1329, 1, 0, 0.497342,-99) , 
5, 0.428058, 0, 0, 0.507278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491645,-99) , 
7, 0.457027, 0, 0, 0.505515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325843,-99) , 
7, -1.85627, 0, 0, 0.493382,-99) , 
7, -951.286, 1, 0, 0.499622,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0297678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48613,-99) , 
2, 0.0815549, 1, 0, 0.522914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464307,-99) , 
5, 0.428189, 1, 0, 0.486304,-99) , 
2, -0.0677683, 0, 0, 0.512793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56239,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.490252,-99) , 
4, 0.999048, 1, 0, 0.49256,-99) , 
3, 4.44883, 0, 0, 0.496422,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0333177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
9, -3.72155, 1, 0, 0.495729,-99) , 
2, -0.21361, 1, 0, 0.497912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473175,-99) , 
9, -3.76889, 0, 0, 0.486355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413203,-99) , 
8, -0.238703, 1, 0, 0.475175,-99) , 
10, -1.3943, 0, 0, 0.492451,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0359227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333339, 0, 1, 0.520307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464237,-99) , 
10, -2.06616, 0, 0, 0.514628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487104,-99) , 
5, -0.143272, 0, 0, 0.501177,-99) , 
NN(
0, 
0, 
-1, 0.498134, 0, -1, 0.480483,-99) , 
8, 0.714924, 1, 0, 0.49419,-99) , 
0, 0.497137, 1, 0, 0.502409,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0329592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450427,-99) , 
10, -0.820084, 0, 0, 0.514008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462349,-99) , 
10, 2.46203, 1, 0, 0.511015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
2, 0.074538, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0.504122, 0, -1, 0.477562,-99) , 
0, 0.500947, 1, 0, 0.493914,-99) , 
8, 0.429324, 0, 0, 0.501441,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.017917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08138, 1, 1, 0.507112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464591,-99) , 
8, -1.28565, 0, 0, 0.50519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476357,-99) , 
10, -2.6728, 0, 0, 0.50412,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0316793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487047,-99) , 
3, 1.24323, 0, 0, 0.503118,-99) , 
5, -0.0521697, 0, 0, 0.505912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536738,-99) , 
NN(
0, 
0, 
-1, 0.0878595, 1, -1, 0.484086,-99) , 
9, -1.74413, 0, 0, 0.488612,-99) , 
5, 0.047608, 1, 0, 0.49702,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0350686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477378,-99) , 
9, -3.98506, 0, 0, 0.516365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486453,-99) , 
8, 0.715054, 1, 0, 0.500126,-99) , 
0, 0.49877, 1, 0, 0.50644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54075,-99) , 
NN(
0, 
0, 
-1, 0.149534, 1, -1, 0.477883,-99) , 
9, -0.823978, 0, 0, 0.484825,-99) , 
0, 0.495233, 0, 0, 0.501093,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0170366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479425,-99) , 
0, 0.5019, 1, 0, 0.520242,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.495972,-99) , 
1, -0.00464865, 1, 0, 0.498941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451039,-99) , 
4, 0.999048, 0, 0, 0.49746,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0354167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4383, 0, 1, 0.509146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420563,-99) , 
5, 0.0473611, 1, 0, 0.469577,-99) , 
10, 0.126281, 1, 0, 0.505631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455055,-99) , 
5, 0.0472672, 1, 0, 0.507168,-99) , 
NN(
0, 
0, 
-1, -0.142348, 0, -1, 0.467064,-99) , 
7, -951.286, 0, 0, 0.484554,-99) , 
9, -1.97424, 1, 0, 0.500161,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0388774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493232,-99) , 
5, -0.727959, 0, 0, 0.528525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490114,-99) , 
9, -2.96556, 1, 0, 0.502108,-99) , 
5, 0.142518, 1, 0, 0.513566,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497147, 0, 1, 0.532151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478626,-99) , 
5, 0.0475612, 0, 0, 0.489791,-99) , 
9, -4.48803, 1, 0, 0.494882,-99) , 
8, 0.716873, 0, 0, 0.501215,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0326515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428634, 0, 1, 0.54741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473102,-99) , 
8, 0.80464, 1, 0, 0.499177,-99) , 
10, 1.46542, 1, 0, 0.518419,-99) , 
NN(
0, 
0, 
-1, -2.28589, 0, -1, 0.487335,-99) , 
9, -1.26185, 0, 0, 0.49176,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.025095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486859,-99) , 
10, -1.14067, 0, 0, 0.503068,-99) , 
8, -1.56986, 1, 0, 0.504587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456851,-99) , 
3, 8.93425, 1, 0, 0.503319,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0172309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497902,-99) , 
8, 1.57316, 0, 0, 0.501065,-99) , 
NN(
0, 
0, 
-1, -0.333596, 0, -1, 0.480918,-99) , 
2, -0.0708144, 0, 0, 0.497939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436757,-99) , 
0, 0.489518, 0, 0, 0.496168,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0176879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498102,-99) , 
9, -3.90901, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, -0.366571, 1, -1, 0.480578,-99) , 
10, -1.56604, 0, 0, 0.496762,-99) , 
8, 2.42886, 0, 0, 0.498298,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0386851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23366, 1, 1, 0.512513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478355,-99) , 
5, -0.428605, 0, 0, 0.500695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311806,-99) , 
7, -1.85672, 0, 0, 0.487782,-99) , 
7, -951.286, 1, 0, 0.498849,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0150118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940963, 0, 1, 0.529058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465456,-99) , 
4, 0.999524, 0, 0, 0.502391,-99) , 
5, 0.904671, 0, 0, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465508,-99) , 
10, -2.55987, 0, 0, 0.502112,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0174851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53956,-99) , 
NN(
0, 
0, 
-1, -0.216587, 0, -1, 0.49594,-99) , 
9, -0.00888225, 0, 0, 0.498015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501539,-99) , 
NN(
0, 
0, 
-1, 4.1532, 1, -1, 0.459494,-99) , 
5, -0.523854, 1, 0, 0.474989,-99) , 
0, 0.50285, 1, 0, 0.494638,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0460238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489705,-99) , 
8, -1.58537, 0, 0, 0.524681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469864,-99) , 
10, -2.22318, 1, 0, 0.493506,-99) , 
0, 0.49903, 1, 0, 0.510982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479751,-99) , 
9, -2.35733, 0, 0, 0.506126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477236,-99) , 
5, -0.904767, 1, 0, 0.481499,-99) , 
8, 1.05432, 0, 0, 0.488671,-99) , 
8, -0.714273, 1, 0, 0.492716,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0234537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471013,-99) , 
4, 0.999909, 0, 0, 0.500758,-99) , 
8, 2.42871, 0, 0, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422491,-99) , 
4, 0.999048, 0, 0, 0.500812,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0146176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.506521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465827,-99) , 
3, 8.83068, 1, 0, 0.505362,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0250966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.69033, 0, 1, 0.537198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441327,-99) , 
10, 2.60757, 1, 0, 0.503008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395695,-99) , 
8, -0.80458, 1, 0, 0.47111,-99) , 
10, -1.91281, 0, 0, 0.500539,-99) , 
8, -1.28566, 1, 0, 0.503312,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0201735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.172972, 1, 1, 0.534294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496374,-99) , 
5, -0.632645, 1, 0, 0.499718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45239,-99) , 
3, 2.55367, 0, 0, 0.473896,-99) , 
5, -0.904762, 0, 0, 0.49722,-99) , 
0, 0.504756, 0, 0, 0.499825,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0292099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714266, 1, 1, 0.521399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474203,-99) , 
8, 1.57456, 1, 0, 0.51558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48992,-99) , 
3, 4.48841, 0, 0, 0.493731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43551,-99) , 
2, -0.21361, 0, 0, 0.491645,-99) , 
0, 0.495233, 1, 0, 0.497597,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0163274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497691,-99) , 
4, 0.999909, 1, 0, 0.500757,-99) , 
3, 8.20737, 0, 0, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435286,-99) , 
4, 0.999048, 0, 0, 0.500665,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0335368);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47753,-99) , 
9, -2.49168, 1, 0, 0.515365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486249,-99) , 
0, 0.495232, 1, 0, 0.492383,-99) , 
5, 0.714254, 0, 0, 0.496943,-99) , 
9, -4.81026, 1, 0, 0.498718,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0365091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.24669, 1, 1, 0.51364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453891,-99) , 
8, -1.28307, 0, 0, 0.511773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411417,-99) , 
7, -0.144278, 1, 0, 0.451557,-99) , 
7, -951.286, 1, 0, 0.483551,-99) , 
10, -2.00476, 0, 0, 0.508647,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0356428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488877,-99) , 
10, 0.2022, 1, 0, 0.505162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485246,-99) , 
9, -4.20789, 1, 0, 0.488642,-99) , 
9, -2.39171, 0, 0, 0.494864,-99) , 
9, -4.77544, 1, 0, 0.496354,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0291231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.52538, 0, 1, 0.511731,-99) , 
NN(
0, 
0, 
-1, 0.238078, 1, -1, 0.489739,-99) , 
10, -0.19349, 1, 0, 0.502347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45591,-99) , 
5, 0.533625, 1, 0, 0.487253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417491,-99) , 
0, 0.496182, 0, 0, 0.463778,-99) , 
10, -2.0935, 0, 0, 0.49868,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0126308);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940959, 1, 1, 0.536924,-99) , 
NN(
0, 
0, 
-1, -2.66864, 0, -1, 0.49553,-99) , 
5, 0.904671, 0, 0, 0.497883,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0274772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477885,-99) , 
9, -4.25546, 0, 0, 0.519395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459661,-99) , 
10, -1.58734, 0, 0, 0.501486,-99) , 
8, -0.713577, 1, 0, 0.504276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455509,-99) , 
10, -2.6728, 0, 0, 0.502387,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0350087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37042, 0, 1, 0.528072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492378,-99) , 
0, 0.505436, 1, 0, 0.523062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49565,-99) , 
5, 0.0792873, 0, 0, 0.503985,-99) , 
NN(
0, 
0, 
-1, -1.56344, 0, -1, 0.483994,-99) , 
5, 0.333278, 1, 0, 0.495453,-99) , 
0, 0.499994, 0, 0, 0.505075,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0306352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.4245, 1, 1, 0.51694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477087,-99) , 
5, -0.619069, 0, 0, 0.500061,-99) , 
0, 0.500539, 1, 0, 0.51015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46379,-99) , 
8, 1.57134, 1, 0, 0.496564,-99) , 
NN(
0, 
0, 
-1, 0.493066, 1, -1, 0.458605,-99) , 
10, -1.50579, 0, 0, 0.488677,-99) , 
0, 0.495234, 0, 0, 0.5048,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0311903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0546682, 1, 1, 0.509331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487632,-99) , 
9, -3.96471, 1, 0, 0.49297,-99) , 
3, 2.14438, 1, 0, 0.501398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444865,-99) , 
4, 0.999524, 1, 0, 0.466398,-99) , 
8, 1.29541, 0, 0, 0.479532,-99) , 
5, 0.809428, 1, 0, 0.498547,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0199888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480908,-99) , 
9, -4.66726, 0, 0, 0.522092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467954,-99) , 
0, 0.503803, 1, 0, 0.497009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392136,-99) , 
8, -0.806158, 1, 0, 0.466001,-99) , 
10, -1.92904, 0, 0, 0.494685,-99) , 
8, -1.28311, 1, 0, 0.496805,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.026907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473086,-99) , 
0, 0.496183, 0, 0, 0.524204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48434,-99) , 
5, 0.333171, 0, 0, 0.491885,-99) , 
1, -0.00621516, 1, 0, 0.494417,-99) , 
8, 2.42858, 0, 0, 0.495988,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0363016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.087487, 0, 1, 0.509485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439855,-99) , 
4, 0.999905, 0, 0, 0.506135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45237,-99) , 
10, 0.614752, 1, 0, 0.508002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46845,-99) , 
8, -0.873324, 1, 0, 0.480247,-99) , 
8, 0.716891, 0, 0, 0.491647,-99) , 
5, 0.428503, 1, 0, 0.500724,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0330067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488375,-99) , 
0, 0.50031, 0, 0, 0.490675,-99) , 
NN(
0, 
0, 
-1, -0.78005, 1, -1, 0.475224,-99) , 
0, 0.500945, 1, 0, 0.486515,-99) , 
8, 2.42817, 0, 0, 0.488036,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0269818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492164,-99) , 
3, 4.34806, 1, 0, 0.509359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487928,-99) , 
10, -1.07429, 1, 0, 0.494555,-99) , 
0, 0.497138, 0, 0, 0.503335,-99) , 
NN(
0, 
0, 
-1, -2.74821, 0, -1, 0.463919,-99) , 
9, -4.74947, 0, 0, 0.501274,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0237679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492274,-99) , 
8, -1.28428, 1, 0, 0.494731,-99) , 
2, 0.201403, 0, 0, 0.496589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438206,-99) , 
4, 0.999048, 0, 0, 0.494854,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0361901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464,-99) , 
8, 1.57409, 1, 0, 0.521879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486731,-99) , 
5, -0.428598, 1, 0, 0.495307,-99) , 
2, -0.0336626, 1, 0, 0.501625,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.455153,-99) , 
4, 0.999524, 0, 0, 0.499173,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.021661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465612,-99) , 
9, -3.82583, 1, 0, 0.522409,-99) , 
NN(
0, 
0, 
-1, -0.877383, 0, -1, 0.493788,-99) , 
8, -1.28566, 1, 0, 0.495974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443181,-99) , 
4, 0.999048, 0, 0, 0.494367,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0174354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1427, 0, 1, 0.503775,-99) , 
NN(
0, 
0, 
-1, 0.497126, 1, -1, 0.458552,-99) , 
10, 1.78506, 1, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, -2.85011, 0, -1, 0.443989,-99) , 
10, -2.474, 0, 0, 0.497991,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0326441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488339,-99) , 
8, 0.429959, 0, 0, 0.516299,-99) , 
NN(
0, 
0, 
-1, 0.34868, 1, -1, 0.491865,-99) , 
9, -2.54683, 0, 0, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427556,-99) , 
4, 0.999048, 0, 0, 0.499615,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0305259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.50885, 0, 1, 0.548249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452371,-99) , 
9, -1.8783, 0, 0, 0.49769,-99) , 
10, 0.122918, 1, 0, 0.513856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490639,-99) , 
0, 0.497138, 1, 0, 0.495708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463009,-99) , 
2, -0.210422, 0, 0, 0.494433,-99) , 
8, 1.00066, 0, 0, 0.499376,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0203725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488738,-99) , 
10, 0.927633, 1, 0, 0.504568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465498,-99) , 
8, -1.56987, 0, 0, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456232,-99) , 
0, 0.48952, 0, 0, 0.501434,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0362945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35677, 0, 1, 0.523042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430143,-99) , 
10, -1.04373, 0, 0, 0.496236,-99) , 
8, 0.146238, 1, 0, 0.507495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489474,-99) , 
7, -951.286, 0, 0, 0.507034,-99) , 
NN(
0, 
0, 
-1, 0.496188, 0, -1, 0.467401,-99) , 
5, -0.83675, 1, 0, 0.489379,-99) , 
5, -0.619054, 0, 0, 0.502429,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0232907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496198,-99) , 
10, -1.84431, 0, 0, 0.520824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489491,-99) , 
7, -951.286, 0, 0, 0.498751,-99) , 
9, -4.08537, 1, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461275,-99) , 
10, -2.55987, 0, 0, 0.499191,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0413508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496399,-99) , 
0, 0.498085, 1, 0, 0.529252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462786,-99) , 
9, -2.19273, 0, 0, 0.494408,-99) , 
10, -0.32851, 1, 0, 0.498666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477317,-99) , 
10, -0.872429, 1, 0, 0.511239,-99) , 
NN(
0, 
0, 
-1, -0.0476766, 0, -1, 0.475308,-99) , 
0, 0.501902, 0, 0, 0.482191,-99) , 
9, -2.68968, 0, 0, 0.489431,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0348557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713226, 0, 1, 0.513481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47262,-99) , 
9, -3.05238, 0, 0, 0.489157,-99) , 
0, 0.500946, 1, 0, 0.506731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521277,-99) , 
NN(
0, 
0, 
-1, 0.78599, 1, -1, 0.479432,-99) , 
1, 0.00458981, 0, 0, 0.484477,-99) , 
8, 0.715664, 1, 0, 0.49917,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0377682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482296,-99) , 
0, 0.495232, 0, 0, 0.501396,-99) , 
9, -3.67056, 1, 0, 0.504488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487751,-99) , 
9, -3.61475, 0, 0, 0.500835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392134,-99) , 
8, -0.190199, 1, 0, 0.48311,-99) , 
10, -1.33672, 0, 0, 0.498916,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_8_12_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_8_12_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_8_12_noP *ReadBDT_maker_LHC19c2b_8_12_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_8_12_noP(theInpVar);
  }
}
