#include "LHC19c2a_TMVAClassification_BDT_12_25_noP.class.h"

double ReadBDT_LHC19c2a_12_25_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_12_25_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1.04517739361512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.38257, 1, 1, 0.923441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326474,-99) , 
9, -1.27765, 1, 0, 0.445924,-99) , 
9, -1.69856, 1, 0, 0.854844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272201,-99) , 
5, 0.891063, 1, 0, 0.48176,-99) , 
NN(
0, 
0, 
-1, -1.75133, 1, -1, 0.0625579,-99) , 
9, -2.60313, 1, 0, 0.139489,-99) , 
5, 0.714265, 1, 0, 0.503197,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.792091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.691608, 0, 1, 0.914718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431439,-99) , 
5, -0.691568, 0, 0, 0.618458,-99) , 
9, -2.25503, 1, 0, 0.83199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.771824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378227,-99) , 
9, -3.45139, 1, 0, 0.455578,-99) , 
NN(
0, 
0, 
-1, 0.818585, 1, -1, 0.0758586,-99) , 
9, -2.01403, 1, 0, 0.221521,-99) , 
5, 0.619036, 1, 0, 0.49707,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.64048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.755114, 0, 1, 0.882132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365207,-99) , 
5, 0.387751, 1, 0, 0.542546,-99) , 
9, -2.35143, 1, 0, 0.758941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274287,-99) , 
5, 0.918345, 1, 0, 0.425841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0735836,-99) , 
10, -0.0256097, 1, 0, 0.252276,-99) , 
5, 0.714273, 1, 0, 0.507877,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.568268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.755102, 0, 1, 0.820842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354891,-99) , 
2, -0.0373696, 0, 0, 0.466306,-99) , 
9, -1.96667, 1, 0, 0.721419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331034,-99) , 
9, -2.82136, 1, 0, 0.413004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0901598,-99) , 
9, -1.72615, 1, 0, 0.255183,-99) , 
5, 0.714265, 1, 0, 0.489941,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.529007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.46143, 1, 1, 0.837001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33666,-99) , 
5, -0.854869, 0, 0, 0.751699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462592,-99) , 
5, 0.727861, 1, 0, 0.511951,-99) , 
NN(
0, 
0, 
-1, 0.84126, 1, -1, 0.176278,-99) , 
9, -2.01889, 1, 0, 0.334601,-99) , 
5, 0.523792, 1, 0, 0.491001,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.405195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71418, 1, 1, 0.811037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390601,-99) , 
8, -0.185051, 0, 0, 0.551515,-99) , 
9, -3.30414, 1, 0, 0.622762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368686,-99) , 
8, 1.27132, 1, 0, 0.416555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.119194,-99) , 
5, 0.809466, 1, 0, 0.251646,-99) , 
9, -1.68737, 1, 0, 0.50169,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.398635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619027, 1, 1, 0.676062,-99) , 
NN(
0, 
0, 
-1, 0.809502, 1, -1, 0.378212,-99) , 
9, -2.07529, 1, 0, 0.553101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0844416,-99) , 
4, 0.999524, 0, 0, 0.489156,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.354053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463543,-99) , 
5, -0.569152, 0, 0, 0.637588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330947,-99) , 
4, 0.999906, 0, 0, 0.608699,-99) , 
NN(
0, 
0, 
-1, 0.277935, 1, -1, 0.309541,-99) , 
5, 0.809492, 1, 0, 0.492698,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.25687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.85749, 1, 1, 0.569259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.198817,-99) , 
8, 2.14171, 1, 0, 0.534438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.125908,-99) , 
4, 0.999526, 0, 0, 0.484463,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.259663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.252353, 0, 1, 0.628336,-99) , 
NN(
0, 
0, 
-1, 0.86932, 1, -1, 0.426952,-99) , 
9, -2.49571, 1, 0, 0.515536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.156009,-99) , 
4, 0.999524, 0, 0, 0.472353,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.283066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435202,-99) , 
5, -0.782282, 0, 0, 0.64081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29675,-99) , 
10, 0.282742, 1, 0, 0.464801,-99) , 
5, 0.523799, 1, 0, 0.537471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.172733,-99) , 
4, 0.999524, 0, 0, 0.492963,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.281721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59501, 1, 1, 0.742729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365954,-99) , 
8, 0.430538, 0, 0, 0.460996,-99) , 
5, -0.591752, 0, 0, 0.618927,-99) , 
NN(
0, 
0, 
-1, 0.622027, 1, -1, 0.391688,-99) , 
5, 0.428592, 1, 0, 0.468021,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.227784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.739629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432767,-99) , 
5, 0.637136, 1, 0, 0.669807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45537,-99) , 
0, 0.499042, 1, 0, 0.50914,-99) , 
9, -2.92641, 1, 0, 0.563446,-99) , 
NN(
0, 
0, 
-1, -1.33919, 1, -1, 0.370418,-99) , 
5, 0.809503, 1, 0, 0.488651,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.213458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.706526, 0, 1, 0.772654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335204,-99) , 
10, 0.788851, 1, 0, 0.511008,-99) , 
9, -3.53471, 1, 0, 0.544404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237174,-99) , 
4, 0.999524, 0, 0, 0.509324,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.258278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57326, 1, 1, 0.782398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.844536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384235,-99) , 
9, -4.2021, 1, 0, 0.514719,-99) , 
8, -0.77109, 0, 0, 0.652376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449947,-99) , 
1, -0.00116413, 1, 0, 0.491132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309385,-99) , 
5, 0.904701, 1, 0, 0.446654,-99) , 
9, -3.03417, 1, 0, 0.496993,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.195841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.735508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456621,-99) , 
5, -0.746049, 0, 0, 0.625286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343092,-99) , 
10, 0.386688, 1, 0, 0.477574,-99) , 
5, 0.333292, 1, 0, 0.525372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237979,-99) , 
4, 0.999524, 0, 0, 0.495522,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.193931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47839, 1, 1, 0.607599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331088,-99) , 
8, -1.57275, 0, 0, 0.586734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444349,-99) , 
9, -3.80063, 1, 0, 0.456359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265614,-99) , 
8, 1.85818, 1, 0, 0.428605,-99) , 
5, 0.523794, 1, 0, 0.486015,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.167966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.557396,-99) , 
NN(
0, 
0, 
-1, -2.88759, 1, -1, 0.398777,-99) , 
4, 0.999955, 0, 0, 0.520918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288527,-99) , 
4, 0.999524, 0, 0, 0.495537,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.159014);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.235038, 0, 1, 0.589934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471451,-99) , 
1, -0.00435739, 1, 0, 0.486659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326131,-99) , 
5, 0.904689, 1, 0, 0.447541,-99) , 
9, -2.52002, 1, 0, 0.501959,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.113468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.71476, 1, 1, 0.529266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261428,-99) , 
8, -1.57134, 0, 0, 0.513491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316902,-99) , 
4, 0.999524, 0, 0, 0.492793,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.146605);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.765394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420849,-99) , 
8, 0.220062, 0, 0, 0.484632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29234,-99) , 
10, 1.03833, 1, 0, 0.467313,-99) , 
9, -4.14555, 1, 0, 0.480058,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.1557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.90119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.751586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384467,-99) , 
9, -4.20415, 1, 0, 0.510971,-99) , 
8, -0.791791, 0, 0, 0.638517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426144,-99) , 
8, 0.515429, 0, 0, 0.467438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308641,-99) , 
8, 2.1719, 1, 0, 0.45214,-99) , 
9, -3.46044, 1, 0, 0.477116,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.125437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.713234, 1, 1, 0.765539,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.457112,-99) , 
9, -3.66339, 1, 0, 0.484129,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0921676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.73269, 1, 1, 0.68527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488106,-99) , 
9, -4.18231, 1, 0, 0.495923,-99) , 
1, 0.00442927, 0, 0, 0.511523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309414,-99) , 
10, 0.970396, 1, 0, 0.494283,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.165351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.697551, 0, 1, 0.760534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452851,-99) , 
7, -951.286, 0, 0, 0.546877,-99) , 
9, -3.33279, 1, 0, 0.597053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401646,-99) , 
8, -0.233797, 0, 0, 0.482633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302082,-99) , 
10, 0.688339, 1, 0, 0.458792,-99) , 
5, 0.428567, 1, 0, 0.501146,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.142174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472179,-99) , 
4, 0.999996, 0, 0, 0.517583,-99) , 
NN(
0, 
0, 
-1, 0.714861, 0, -1, 0.370246,-99) , 
4, 0.999909, 0, 0, 0.496632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344209,-99) , 
4, 0.999524, 0, 0, 0.481536,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.165197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55655, 1, 1, 0.733968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41388,-99) , 
9, -3.90693, 1, 0, 0.531646,-99) , 
8, -0.718536, 0, 0, 0.627664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402883,-99) , 
8, 0.162364, 0, 0, 0.488979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320404,-99) , 
8, 2.20546, 1, 0, 0.473589,-99) , 
9, -3.07001, 1, 0, 0.507204,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.173772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.76911, 1, 1, 0.579692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309369,-99) , 
8, -1.70669, 0, 0, 0.557672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363774,-99) , 
8, 0.676261, 0, 0, 0.487696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328599,-99) , 
5, 0.904749, 1, 0, 0.45101,-99) , 
10, -0.7061, 1, 0, 0.496588,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.184936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.152246, 0, 1, 0.796418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455633,-99) , 
5, 0.523765, 1, 0, 0.563873,-99) , 
8, -0.583706, 0, 0, 0.644337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415307,-99) , 
8, 0.54867, 0, 0, 0.47803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334063,-99) , 
10, 0.939012, 1, 0, 0.460985,-99) , 
9, -3.18144, 1, 0, 0.494513,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.153749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.38369, 1, 1, 0.557866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348653,-99) , 
8, -1.56335, 0, 0, 0.54196,-99) , 
NN(
0, 
0, 
-1, 0.904738, 1, -1, 0.409619,-99) , 
10, -0.327058, 1, 0, 0.483093,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.164678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56403, 1, 1, 0.769313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.796357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456375,-99) , 
8, -0.247219, 0, 0, 0.513889,-99) , 
5, 0.142772, 1, 0, 0.585033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464686,-99) , 
8, 0.315745, 0, 0, 0.507787,-99) , 
NN(
0, 
0, 
-1, 0.62919, 0, -1, 0.432884,-99) , 
10, -0.566441, 1, 0, 0.457032,-99) , 
9, -3.06069, 1, 0, 0.485809,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.112044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713673, 1, 1, 0.80905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319659,-99) , 
8, -1.78408, 0, 0, 0.662611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302216,-99) , 
8, -0.930088, 0, 0, 0.496524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338513,-99) , 
4, 0.999525, 0, 0, 0.479957,-99) , 
9, -3.6674, 1, 0, 0.496527,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.110495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.848475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481126,-99) , 
9, -4.07402, 1, 0, 0.565368,-99) , 
8, -0.313894, 0, 0, 0.615262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37064,-99) , 
2, 0.129984, 1, 0, 0.491127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267575,-99) , 
9, -1.78758, 1, 0, 0.406434,-99) , 
5, 0.904738, 1, 0, 0.471541,-99) , 
9, -3.30406, 1, 0, 0.493752,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.195594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.788185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398106,-99) , 
10, -1.20169, 1, 0, 0.494671,-99) , 
8, 0.353791, 0, 0, 0.515291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.730115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432493,-99) , 
9, -2.31921, 1, 0, 0.456857,-99) , 
NN(
0, 
0, 
-1, -2.19557, 0, -1, 0.324421,-99) , 
8, 0.677658, 0, 0, 0.424626,-99) , 
10, -0.685325, 1, 0, 0.46382,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.129946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.763274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45906,-99) , 
5, 0.714098, 1, 0, 0.630652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462574,-99) , 
10, -1.12435, 1, 0, 0.485648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310104,-99) , 
8, -0.930443, 0, 0, 0.47509,-99) , 
9, -3.78582, 1, 0, 0.48683,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.088568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.731378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394601,-99) , 
4, 0.999887, 0, 0, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394595,-99) , 
4, 0.999524, 0, 0, 0.494404,-99) , 
9, -4.14555, 1, 0, 0.502795,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.133136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475998,-99) , 
7, -951.286, 0, 0, 0.54221,-99) , 
9, -3.84362, 1, 0, 0.560257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459037,-99) , 
8, 1.17318, 0, 0, 0.485522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38274,-99) , 
9, -1.01477, 1, 0, 0.472214,-99) , 
5, 0.619037, 1, 0, 0.506199,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.121739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.719962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467108,-99) , 
1, -0.00170267, 1, 0, 0.492772,-99) , 
1, 0.00545836, 0, 0, 0.505014,-99) , 
9, -3.98272, 1, 0, 0.515948,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.149729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38716, 1, 1, 0.788502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441308,-99) , 
5, 0.904738, 1, 0, 0.510583,-99) , 
10, -1.2097, 1, 0, 0.530446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.73708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45058,-99) , 
5, 0.714319, 1, 0, 0.580108,-99) , 
NN(
0, 
0, 
-1, -3.31529, 0, -1, 0.353533,-99) , 
10, -1.97791, 1, 0, 0.433685,-99) , 
8, -0.42851, 0, 0, 0.509048,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0775279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22547, 0, 1, 0.659471,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.480326,-99) , 
9, -3.52693, 1, 0, 0.496659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246082,-99) , 
8, -1.85614, 0, 0, 0.48957,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.115205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500946, 1, 1, 0.671516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400086,-99) , 
8, -0.588378, 0, 0, 0.515702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384793,-99) , 
4, 0.999525, 0, 0, 0.502569,-99) , 
9, -3.67412, 1, 0, 0.51614,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.115113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618877, 1, 1, 0.686068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448619,-99) , 
9, -1.86341, 1, 0, 0.48857,-99) , 
9, -3.38887, 1, 0, 0.507549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287926,-99) , 
8, -1.5716, 0, 0, 0.497241,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0995394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333214, 1, 1, 0.671361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446647,-99) , 
0, 0.499995, 1, 0, 0.494505,-99) , 
9, -3.47839, 1, 0, 0.509217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341727,-99) , 
8, -1.57178, 0, 0, 0.502099,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.105251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.743359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479471,-99) , 
10, -1.0976, 1, 0, 0.497612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361781,-99) , 
0, 0.49809, 1, 0, 0.429323,-99) , 
8, -0.421577, 0, 0, 0.484942,-99) , 
9, -4.14555, 1, 0, 0.493029,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.10188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00323297, 0, 1, 0.658921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442621,-99) , 
0, 0.499995, 0, 0, 0.487573,-99) , 
2, -0.13823, 0, 0, 0.566975,-99) , 
NN(
NN(
0, 
0, 
-1, -2.35015, 1, 1, 0.521516,-99) , 
NN(
0, 
0, 
-1, -0.428583, 0, -1, 0.448516,-99) , 
8, 0.714814, 0, 0, 0.478098,-99) , 
2, -0.0707239, 1, 0, 0.492894,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.102859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65358, 1, 1, 0.798279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392885,-99) , 
5, 0.333069, 0, 0, 0.486033,-99) , 
8, -1.16158, 0, 0, 0.650826,-99) , 
NN(
NN(
0, 
0, 
-1, 1.09678, 0, 1, 0.522056,-99) , 
NN(
0, 
0, 
-1, 0.809513, 1, -1, 0.450211,-99) , 
10, 0.135415, 1, 0, 0.497456,-99) , 
9, -3.40004, 1, 0, 0.515402,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.113311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479906,-99) , 
4, 0.999977, 0, 0, 0.529494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395597,-99) , 
4, 0.999524, 0, 0, 0.516908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403629,-99) , 
3, 2.82544, 0, 0, 0.439455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256922,-99) , 
9, -3.7737, 0, 0, 0.413784,-99) , 
0, 0.502852, 1, 0, 0.498319,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.108646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.911956, 0, 1, 0.682121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49133,-99) , 
5, 0.333324, 1, 0, 0.508612,-99) , 
9, -3.40311, 1, 0, 0.52852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446112,-99) , 
9, -2.68314, 1, 0, 0.49241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264876,-99) , 
8, -0.715967, 0, 0, 0.437601,-99) , 
0, 0.502852, 1, 0, 0.511901,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.069651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523768, 1, 1, 0.630411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488241,-99) , 
10, -1.60055, 1, 0, 0.495727,-99) , 
9, -3.85086, 1, 0, 0.503455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556961,-99) , 
NN(
0, 
0, 
-1, -0.425974, 0, -1, 0.371816,-99) , 
7, -951.286, 1, 0, 0.421091,-99) , 
0, 0.503804, 1, 0, 0.492788,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.108719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0564633, 0, 1, 0.586084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469256,-99) , 
8, 1.69527, 0, 0, 0.491022,-99) , 
9, -2.84993, 1, 0, 0.513001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358882,-99) , 
8, -1.57057, 0, 0, 0.506576,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.15526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.744086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404334,-99) , 
3, 3.9376, 1, 0, 0.6611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397043,-99) , 
7, -951.286, 0, 0, 0.490186,-99) , 
5, -0.646241, 0, 0, 0.572376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437718,-99) , 
8, -0.0100592, 0, 0, 0.499659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400202,-99) , 
10, 0.615004, 1, 0, 0.485882,-99) , 
5, 0.238094, 1, 0, 0.506683,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0649939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.619412, 1, 1, 0.641958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495667,-99) , 
10, -1.13278, 1, 0, 0.513551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400761,-99) , 
8, -0.898138, 0, 0, 0.506373,-99) , 
9, -3.85086, 1, 0, 0.514084,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0994098);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.713674, 1, 1, 0.659741,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00292706, 0, 1, 0.535077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32491,-99) , 
5, 0.428, 0, 0, 0.434389,-99) , 
8, -0.368649, 0, 0, 0.518292,-99) , 
9, -3.73917, 1, 0, 0.527898,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.139154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.268533, 0, 1, 0.774028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441789,-99) , 
8, 0.959634, 0, 0, 0.503196,-99) , 
10, -0.780428, 1, 0, 0.52681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470299,-99) , 
5, 0.18358, 1, 0, 0.496579,-99) , 
NN(
0, 
0, 
-1, 0.498097, 1, -1, 0.310514,-99) , 
5, -0.714224, 0, 0, 0.464536,-99) , 
8, 0.142905, 0, 0, 0.503139,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.150331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.535478, 0, 1, 0.571033,-99) , 
NN(
0, 
0, 
-1, -0.646221, 1, -1, 0.378762,-99) , 
5, -0.428511, 0, 0, 0.538998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468975,-99) , 
10, 0.159224, 1, 0, 0.504916,-99) , 
NN(
0, 
0, 
-1, -0.217513, 1, -1, 0.410735,-99) , 
8, 1.15332, 0, 0, 0.467552,-99) , 
10, -0.46321, 1, 0, 0.503163,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0702885);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0476245, 1, 1, 0.657186,-99) , 
NN(
NN(
0, 
0, 
-1, -1.78589, 1, 1, 0.523767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379207,-99) , 
8, -1.57049, 0, 0, 0.517707,-99) , 
1, -0.00526335, 1, 0, 0.525526,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.139119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.85749, 1, 1, 0.66697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457539,-99) , 
6, 0.00262569, 0, 0, 0.474436,-99) , 
6, 0.00393858, 0, 0, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274845,-99) , 
6, 0.013785, 1, 0, 0.499934,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.085211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.27561, 1, 1, 0.672837,-99) , 
NN(
NN(
0, 
0, 
-1, -1.24412, 1, 1, 0.52166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369499,-99) , 
10, -1.59376, 1, 0, 0.456509,-99) , 
8, -0.310969, 0, 0, 0.509932,-99) , 
9, -3.85086, 1, 0, 0.519002,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.103982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.97653, 1, 1, 0.750004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458155,-99) , 
8, -0.412481, 0, 0, 0.494296,-99) , 
8, 0.0187134, 0, 0, 0.538137,-99) , 
NN(
0, 
0, 
-1, 0.319129, 0, -1, 0.467317,-99) , 
10, -0.848253, 1, 0, 0.49268,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.090596);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.96678, 1, 1, 0.645167,-99) , 
NN(
NN(
0, 
0, 
-1, -2.21673, 1, 1, 0.527243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42303,-99) , 
10, -0.817694, 1, 0, 0.479081,-99) , 
8, 0.771558, 0, 0, 0.500826,-99) , 
9, -3.70823, 1, 0, 0.511157,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0987819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30716, 0, 1, 0.631978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450916,-99) , 
8, 0.21473, 0, 0, 0.500717,-99) , 
9, -3.73917, 1, 0, 0.509475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462539,-99) , 
0, 0.506369, 1, 0, 0.494013,-99) , 
NN(
0, 
0, 
-1, -3.08966, 0, -1, 0.35817,-99) , 
0, 0.505436, 0, 0, 0.412382,-99) , 
0, 0.503803, 1, 0, 0.495957,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.102333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.799025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484755,-99) , 
5, 0.238094, 1, 0, 0.507619,-99) , 
10, -1.75415, 1, 0, 0.519616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252148,-99) , 
10, -2.2273, 1, 0, 0.387766,-99) , 
8, -1.00054, 0, 0, 0.506823,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.11513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.789011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327945,-99) , 
10, -2.21736, 1, 0, 0.497214,-99) , 
8, -0.987064, 0, 0, 0.591804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485816,-99) , 
9, -2.19546, 1, 0, 0.507122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393024,-99) , 
2, -0.0514107, 1, 0, 0.418225,-99) , 
8, -0.0680236, 0, 0, 0.488808,-99) , 
10, -1.72411, 1, 0, 0.500094,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0713678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.740067,-99) , 
NN(
NN(
0, 
0, 
-1, -3.57879, 1, 1, 0.52408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341234,-99) , 
9, -3.85525, 0, 0, 0.516479,-99) , 
9, -4.14555, 1, 0, 0.522796,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.102937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714399, 1, 1, 0.641614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397176,-99) , 
8, 2.2632, 1, 0, 0.514572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363403,-99) , 
10, -1.43332, 1, 0, 0.441392,-99) , 
8, -0.0887995, 0, 0, 0.496871,-99) , 
9, -3.70823, 1, 0, 0.506154,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0634935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.826806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471398,-99) , 
1, -0.000109343, 1, 0, 0.595153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433845,-99) , 
8, -0.0442336, 0, 0, 0.487154,-99) , 
9, -3.42121, 1, 0, 0.4963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357343,-99) , 
8, -1.57178, 0, 0, 0.490622,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.151588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357237,-99) , 
8, -1.6073, 0, 0, 0.512575,-99) , 
1, 0.00371048, 0, 0, 0.526693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417214,-99) , 
5, 0.873017, 1, 0, 0.495555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330519,-99) , 
9, -1.31571, 0, 0, 0.393535,-99) , 
5, 0.619039, 0, 0, 0.448363,-99) , 
10, -0.436271, 1, 0, 0.486767,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.10214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.756016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412477,-99) , 
10, 0.0624668, 1, 0, 0.620547,-99) , 
NN(
0, 
0, 
-1, 0.709742, 0, -1, 0.473332,-99) , 
5, 0.12925, 1, 0, 0.486526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526684,-99) , 
NN(
0, 
0, 
-1, -3.08777, 1, -1, 0.347036,-99) , 
10, -0.239944, 0, 0, 0.422883,-99) , 
5, -0.523807, 0, 0, 0.476032,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.120448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.75967, 0, 1, 0.582572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438616,-99) , 
9, -1.02615, 1, 0, 0.526043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474811,-99) , 
8, -0.369354, 0, 0, 0.515155,-99) , 
NN(
0, 
0, 
-1, 0.174247, 0, -1, 0.44448,-99) , 
10, -1.1403, 1, 0, 0.469261,-99) , 
8, 1.28498, 0, 0, 0.484351,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.106317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379665,-99) , 
3, 3.94396, 1, 0, 0.55156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
2, 0.0522896, 0, 0, 0.495034,-99) , 
5, 0.333353, 1, 0, 0.510981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402844,-99) , 
4, 0.999524, 0, 0, 0.500604,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.100098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17124, 1, 1, 0.534898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455358,-99) , 
5, 0.90468, 0, 0, 0.483559,-99) , 
9, -2.09154, 0, 0, 0.506933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389928,-99) , 
2, -0.212802, 0, 0, 0.50053,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0554323);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68353,-99) , 
NN(
NN(
0, 
0, 
-1, -3.68102, 1, 1, 0.507317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358845,-99) , 
0, 0.505981, 0, 0, 0.424227,-99) , 
0, 0.503805, 1, 0, 0.496361,-99) , 
9, -4.19535, 1, 0, 0.501695,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.113547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61895, 1, 1, 0.608229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474613,-99) , 
5, 0.428543, 1, 0, 0.507388,-99) , 
3, 2.81544, 0, 0, 0.538971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386087,-99) , 
10, 1.07514, 1, 0, 0.483587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280961,-99) , 
8, 0.898555, 0, 0, 0.401709,-99) , 
9, -1.90642, 0, 0, 0.461852,-99) , 
10, -0.436271, 1, 0, 0.499904,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.107419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.60386, 0, 1, 0.563093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375061,-99) , 
5, 0.931878, 1, 0, 0.48533,-99) , 
10, -0.639867, 1, 0, 0.520231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495771,-99) , 
3, 1.0969, 1, 0, 0.528407,-99) , 
NN(
0, 
0, 
-1, 1.08541, 0, -1, 0.364088,-99) , 
7, -951.286, 0, 0, 0.442033,-99) , 
5, -0.428542, 0, 0, 0.506932,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0763147);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.740526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474244,-99) , 
10, -1.89995, 1, 0, 0.481947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348589,-99) , 
8, -1.13901, 0, 0, 0.476969,-99) , 
10, -2.46398, 1, 0, 0.480371,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.173574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142639, 0, 1, 0.619907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446853,-99) , 
5, 0.714247, 0, 0, 0.491431,-99) , 
1, 0.00292706, 0, 0, 0.514367,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0117616, 0, 1, 0.603672,-99) , 
NN(
0, 
0, 
-1, -1.52994, 0, -1, 0.401964,-99) , 
7, 0.428493, 0, 0, 0.462327,-99) , 
7, -951.286, 1, 0, 0.479898,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0518362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.83338, 1, 1, 0.629088,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488286,-99) , 
9, -3.5924, 1, 0, 0.498115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26191,-99) , 
8, -1.85589, 0, 0, 0.491634,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0940223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.740299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444875,-99) , 
8, -1.26867, 0, 0, 0.50866,-99) , 
0, 0.497138, 1, 0, 0.585137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486375,-99) , 
10, -0.811267, 1, 0, 0.505439,-99) , 
NN(
0, 
0, 
-1, 0.428522, 0, -1, 0.430612,-99) , 
8, -0.0364894, 0, 0, 0.485139,-99) , 
9, -3.61816, 1, 0, 0.493309,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0663648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638709,-99) , 
NN(
NN(
0, 
0, 
-1, 0.333336, 1, 1, 0.521625,-99) , 
NN(
0, 
0, 
-1, -2.75668, 0, -1, 0.45389,-99) , 
0, 0.5019, 1, 0, 0.505592,-99) , 
1, -0.00526335, 1, 0, 0.512426,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0943678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.976344, 1, 1, 0.6243,-99) , 
NN(
NN(
0, 
0, 
-1, 0.523844, 1, 1, 0.544688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47313,-99) , 
10, -1.84776, 1, 0, 0.4843,-99) , 
0, 0.500947, 0, 0, 0.499404,-99) , 
1, 0.00339227, 0, 0, 0.51508,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0540622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648588,-99) , 
NN(
NN(
0, 
0, 
-1, -2.8467, 1, 1, 0.514637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408999,-99) , 
10, -1.81907, 1, 0, 0.457856,-99) , 
8, -0.421105, 0, 0, 0.504831,-99) , 
9, -4.24129, 1, 0, 0.508473,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0835643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05329, 1, 1, 0.568381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440965,-99) , 
5, 0.637181, 0, 0, 0.49994,-99) , 
5, 0.238089, 1, 0, 0.515828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434554,-99) , 
0, 0.499036, 1, 0, 0.495747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284697,-99) , 
5, -0.333792, 0, 0, 0.428644,-99) , 
8, -1.00012, 0, 0, 0.508165,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0938594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.80046, 1, 1, 0.646467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47408,-99) , 
8, -1.17349, 0, 0, 0.59584,-99) , 
NN(
NN(
0, 
0, 
-1, -0.534768, 1, 1, 0.523931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407184,-99) , 
10, -1.24705, 1, 0, 0.444793,-99) , 
9, -2.62556, 0, 0, 0.509652,-99) , 
9, -3.05944, 1, 0, 0.525208,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0805263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477079,-99) , 
5, 0.238094, 1, 0, 0.492921,-99) , 
10, -2.03758, 1, 0, 0.500704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262657,-99) , 
8, -1.8561, 0, 0, 0.494013,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.125899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.25631, 1, 1, 0.677972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428417,-99) , 
2, -0.00800865, 1, 0, 0.517083,-99) , 
0, 0.499043, 0, 0, 0.578174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453477,-99) , 
5, 0.714279, 0, 0, 0.508776,-99) , 
NN(
0, 
0, 
-1, -1.63115, 0, -1, 0.448507,-99) , 
10, -0.0837821, 1, 0, 0.487505,-99) , 
1, 0.00306157, 0, 0, 0.500789,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0844671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.674771, 0, 1, 0.664007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489446,-99) , 
5, -0.115653, 0, 0, 0.527562,-99) , 
10, -1.08924, 1, 0, 0.561237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417761,-99) , 
10, -0.31086, 1, 0, 0.47913,-99) , 
8, 1.5715, 0, 0, 0.493789,-99) , 
5, 0.42855, 1, 0, 0.51247,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0668911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433136,-99) , 
4, 0.999887, 0, 0, 0.507024,-99) , 
0, 0.505707, 0, 0, 0.512873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409581,-99) , 
4, 0.999525, 0, 0, 0.502645,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.114397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497143, 0, 1, 0.641086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370341,-99) , 
10, -1.81511, 1, 0, 0.482784,-99) , 
8, -0.613193, 0, 0, 0.540367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
9, -2.60366, 1, 0, 0.492318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348381,-99) , 
9, -2.45227, 0, 0, 0.417797,-99) , 
8, 0.268795, 0, 0, 0.475056,-99) , 
10, -1.22786, 1, 0, 0.489428,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.047664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424818,-99) , 
4, 0.999524, 0, 0, 0.49699,-99) , 
9, -3.7448, 1, 0, 0.503711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347317,-99) , 
8, -1.56782, 0, 0, 0.497392,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.107254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0469806, 0, 1, 0.601555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348754,-99) , 
10, -2.31805, 1, 0, 0.425967,-99) , 
8, -0.983269, 0, 0, 0.545949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.768543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48548,-99) , 
9, -2.653, 1, 0, 0.498791,-99) , 
NN(
0, 
0, 
-1, -2.68694, 0, -1, 0.421112,-99) , 
8, 0.35397, 0, 0, 0.482787,-99) , 
10, -1.04965, 1, 0, 0.499744,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.145248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.586444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339565,-99) , 
5, -0.292501, 1, 0, 0.433972,-99) , 
3, 2.99279, 1, 0, 0.545015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418788,-99) , 
5, 0.469395, 0, 0, 0.524303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427063,-99) , 
7, 1.00751, 0, 0, 0.453909,-99) , 
7, -951.286, 1, 0, 0.474962,-99) , 
5, 0.142852, 1, 0, 0.490188,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.102083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.78963, 1, 1, 0.536792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445622,-99) , 
10, -1.70378, 1, 0, 0.474857,-99) , 
8, 0.141637, 0, 0, 0.514336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42421,-99) , 
5, 0.537489, 1, 0, 0.473599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349933,-99) , 
5, -0.618745, 0, 0, 0.447361,-99) , 
0, 0.493328, 0, 0, 0.503217,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0775718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436239,-99) , 
3, 2.54082, 1, 0, 0.563402,-99) , 
NN(
0, 
0, 
-1, -0.616928, 0, -1, 0.487795,-99) , 
5, -0.238066, 1, 0, 0.499415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567263,-99) , 
NN(
0, 
0, 
-1, -1.26001, 0, -1, 0.312482,-99) , 
9, -4.12399, 1, 0, 0.384209,-99) , 
8, -0.997424, 0, 0, 0.488721,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0593007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617257,-99) , 
NN(
NN(
0, 
0, 
-1, -2.26411, 1, 1, 0.521757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376202,-99) , 
5, -0.428519, 0, 0, 0.473194,-99) , 
8, 0.472901, 0, 0, 0.500381,-99) , 
9, -3.85355, 1, 0, 0.505878,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0971877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491077,-99) , 
5, -0.419508, 0, 0, 0.558502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458963,-99) , 
8, 0.605184, 0, 0, 0.490401,-99) , 
5, 0.523792, 1, 0, 0.511649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320969,-99) , 
8, -1.5716, 0, 0, 0.502717,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0474013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.824381, 1, 1, 0.581197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405421,-99) , 
0, 0.505709, 1, 0, 0.501169,-99) , 
1, -0.0034466, 1, 0, 0.509673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339385,-99) , 
8, -1.57116, 0, 0, 0.502056,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.109477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618925, 1, 1, 0.645672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396355,-99) , 
10, -2.47946, 1, 0, 0.455712,-99) , 
8, -1.15995, 0, 0, 0.581581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472878,-99) , 
8, 0.375473, 0, 0, 0.519915,-99) , 
NN(
0, 
0, 
-1, 1.22162, 0, -1, 0.469836,-99) , 
10, -0.433709, 1, 0, 0.488413,-99) , 
10, -1.34874, 1, 0, 0.505355,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.102638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619268, 1, 1, 0.574102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41401,-99) , 
8, 0.72182, 0, 0, 0.494151,-99) , 
10, -0.591373, 1, 0, 0.518499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359703,-99) , 
10, -1.93749, 1, 0, 0.415672,-99) , 
5, -0.142994, 1, 0, 0.442354,-99) , 
8, -0.426135, 0, 0, 0.502617,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0909762);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476766,-99) , 
10, -0.231157, 1, 0, 0.513759,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.367346,-99) , 
8, -0.991758, 0, 0, 0.504419,-99) , 
9, -4.08802, 1, 0, 0.509202,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.122208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.346929, 0, 1, 0.561102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345476,-99) , 
3, 3.96271, 1, 0, 0.528022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480481,-99) , 
9, -2.00482, 1, 0, 0.502524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419698,-99) , 
5, 0.918347, 0, 0, 0.445084,-99) , 
8, 1.00007, 0, 0, 0.465004,-99) , 
5, 0.142865, 1, 0, 0.47873,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0993356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.795624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493104,-99) , 
10, -0.232604, 1, 0, 0.507639,-99) , 
9, -2.33591, 1, 0, 0.524548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465867,-99) , 
9, -2.61239, 0, 0, 0.492002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283739,-99) , 
9, -2.15556, 0, 0, 0.412646,-99) , 
10, -0.633696, 1, 0, 0.472869,-99) , 
8, 0.714965, 0, 0, 0.495366,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.105105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.655199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490899,-99) , 
10, -0.635218, 1, 0, 0.519488,-99) , 
2, -0.137898, 0, 0, 0.579365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379428,-99) , 
3, 3.68324, 1, 0, 0.55687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474345,-99) , 
1, 0.00384307, 0, 0, 0.485584,-99) , 
5, 0.047615, 1, 0, 0.500397,-99) , 
2, -0.0704421, 1, 0, 0.513056,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.097292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.22786, 1, 1, 0.582957,-99) , 
NN(
NN(
0, 
0, 
-1, -0.206022, 1, 1, 0.532683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445604,-99) , 
9, -2.54181, 0, 0, 0.471109,-99) , 
8, 0.718441, 0, 0, 0.499735,-99) , 
5, 0.523795, 1, 0, 0.524227,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.109764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0711001, 0, 1, 0.694056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385556,-99) , 
10, -1.51479, 1, 0, 0.509924,-99) , 
8, -0.31103, 0, 0, 0.558026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.731165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495837,-99) , 
9, -2.36271, 1, 0, 0.513253,-99) , 
NN(
0, 
0, 
-1, -2.67397, 0, -1, 0.424338,-99) , 
8, 0.574471, 0, 0, 0.484293,-99) , 
10, -1.04965, 1, 0, 0.50322,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0955009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65465, 0, 1, 0.53786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413034,-99) , 
4, 0.999524, 0, 0, 0.525476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34231,-99) , 
8, -1.56776, 0, 0, 0.517711,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0946169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446508,-99) , 
10, 0.777916, 1, 0, 0.522531,-99) , 
5, 0.201798, 1, 0, 0.528799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394849,-99) , 
5, -0.274362, 1, 0, 0.509523,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.384429,-99) , 
3, 0.925946, 0, 0, 0.465639,-99) , 
5, -0.0476329, 0, 0, 0.51503,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.07777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.591379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477763,-99) , 
8, 1.38112, 0, 0, 0.494134,-99) , 
0, 0.491423, 1, 0, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254835,-99) , 
8, -1.85339, 0, 0, 0.495491,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.137006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388011,-99) , 
0, 0.503804, 1, 0, 0.505966,-99) , 
8, -0.0767761, 0, 0, 0.538866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451887,-99) , 
5, 0.9047, 1, 0, 0.509081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.701923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354562,-99) , 
8, 0.837917, 0, 0, 0.404627,-99) , 
9, -2.20025, 0, 0, 0.47785,-99) , 
10, -0.984241, 1, 0, 0.495546,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0995921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465477,-99) , 
10, 0.984433, 1, 0, 0.548094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479404,-99) , 
8, 1.67092, 0, 0, 0.490712,-99) , 
9, -1.166, 0, 0, 0.502281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427053,-99) , 
10, -2.03653, 1, 0, 0.452918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344328,-99) , 
8, -1.40809, 0, 0, 0.426717,-99) , 
8, -0.42851, 0, 0, 0.486909,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0428911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.73363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472374,-99) , 
8, -1.08588, 0, 0, 0.604728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382671,-99) , 
8, -0.689186, 0, 0, 0.498615,-99) , 
10, -1.82424, 1, 0, 0.505109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37352,-99) , 
8, -1.56756, 0, 0, 0.500113,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.086846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473219,-99) , 
10, -0.791053, 1, 0, 0.492422,-99) , 
NN(
0, 
0, 
-1, 0.523837, 0, -1, 0.418776,-99) , 
3, 5.80978, 1, 0, 0.484552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297658,-99) , 
10, -2.32246, 1, 0, 0.3923,-99) , 
8, -1.00012, 0, 0, 0.476315,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.115016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.63951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431718,-99) , 
8, 0.224382, 0, 0, 0.513353,-99) , 
10, -1.17911, 1, 0, 0.522736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452276,-99) , 
8, -0.918671, 0, 0, 0.51976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368615,-99) , 
10, -1.64336, 1, 0, 0.463739,-99) , 
8, -0.42883, 0, 0, 0.510871,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.085736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499402,-99) , 
10, -0.292014, 1, 0, 0.568946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427835,-99) , 
10, 0.475451, 1, 0, 0.488023,-99) , 
5, 0.659885, 1, 0, 0.509982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393054,-99) , 
8, 0.455761, 1, 0, 0.46689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281259,-99) , 
5, -0.619022, 1, 0, 0.424787,-99) , 
5, -0.428547, 0, 0, 0.494537,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0687555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523735, 1, 1, 0.601519,-99) , 
NN(
0, 
0, 
-1, -0.1428, 0, -1, 0.479714,-99) , 
6, 0.00475604, 0, 0, 0.493164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303362,-99) , 
6, 0.0124849, 1, 0, 0.487416,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0549396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.7781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364956,-99) , 
9, -3.47355, 0, 0, 0.503233,-99) , 
9, -3.7448, 1, 0, 0.511175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366338,-99) , 
8, -1.57178, 0, 0, 0.505093,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0986131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476515,-99) , 
8, 0.56549, 0, 0, 0.489489,-99) , 
8, 0.941151, 0, 0, 0.500017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485498,-99) , 
9, -1.6738, 1, 0, 0.507672,-99) , 
NN(
0, 
0, 
-1, -0.333273, 1, -1, 0.358686,-99) , 
8, 1.38008, 0, 0, 0.457562,-99) , 
10, -0.0781661, 1, 0, 0.483866,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0906236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06263, 1, 1, 0.624918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410725,-99) , 
1, -0.00206262, 0, 0, 0.494077,-99) , 
6, 0.00393772, 0, 0, 0.514825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296027,-99) , 
6, 0.0137852, 1, 0, 0.508672,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.120033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5237, 1, 1, 0.587492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466246,-99) , 
5, -0.714278, 1, 0, 0.480524,-99) , 
10, -0.907982, 1, 0, 0.503363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440773,-99) , 
5, 0.619232, 1, 0, 0.499129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334535,-99) , 
10, -1.89294, 1, 0, 0.430089,-99) , 
8, -0.713173, 0, 0, 0.492336,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0651641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484556,-99) , 
9, -1.16738, 1, 0, 0.555394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489859,-99) , 
9, -3.7613, 1, 0, 0.496937,-99) , 
8, 1.47644, 0, 0, 0.50996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388652,-99) , 
8, -1.57134, 0, 0, 0.504915,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.110014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482587,-99) , 
5, 0.809526, 1, 0, 0.545465,-99) , 
10, 0.0321572, 1, 0, 0.566458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471135,-99) , 
9, -3.11643, 1, 0, 0.492192,-99) , 
9, -1.74803, 0, 0, 0.505075,-99) , 
8, 0.998415, 0, 0, 0.526576,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0908564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498702,-99) , 
10, -0.63426, 1, 0, 0.518934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44392,-99) , 
0, 0.489839, 1, 0, 0.46901,-99) , 
0, 0.494282, 0, 0, 0.507587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592008,-99) , 
NN(
0, 
0, 
-1, -1.90934, 1, -1, 0.399689,-99) , 
8, -0.096271, 0, 0, 0.423835,-99) , 
9, -3.02744, 0, 0, 0.489091,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0847813);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365861,-99) , 
3, 4.6965, 1, 0, 0.569069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
10, -1.59345, 1, 0, 0.508811,-99) , 
5, 0.428546, 1, 0, 0.524792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304944,-99) , 
8, -1.85746, 0, 0, 0.518783,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0910672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56694, 0, 1, 0.54425,-99) , 
NN(
0, 
0, 
-1, 0.497133, 1, -1, 0.456431,-99) , 
4, 0.99991, 0, 0, 0.532216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443254,-99) , 
4, 0.999524, 0, 0, 0.523374,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0812106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3693,-99) , 
8, -0.973168, 0, 0, 0.514934,-99) , 
10, -2.34376, 1, 0, 0.52113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372313,-99) , 
0, 0.494281, 0, 0, 0.477802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293418,-99) , 
10, -1.41374, 0, 0, 0.44429,-99) , 
5, -0.523796, 0, 0, 0.508955,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.12266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479044,-99) , 
9, -1.61158, 0, 0, 0.523391,-99) , 
10, -0.632762, 1, 0, 0.53923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373469,-99) , 
9, -2.63587, 1, 0, 0.567717,-99) , 
NN(
0, 
0, 
-1, -0.989068, 1, -1, 0.450686,-99) , 
8, 0.274756, 0, 0, 0.469694,-99) , 
9, -2.49636, 0, 0, 0.513364,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0566658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523424, 1, 1, 0.564026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4519,-99) , 
5, 0.238151, 0, 0, 0.495024,-99) , 
0, 0.505573, 0, 0, 0.500187,-99) , 
0, 0.493328, 1, 0, 0.509741,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0725952);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.46635, 0, 1, 0.671393,-99) , 
NN(
NN(
0, 
0, 
-1, -2.88036, 1, 1, 0.532574,-99) , 
NN(
0, 
0, 
-1, -0.523773, 0, -1, 0.476713,-99) , 
0, 0.499042, 1, 0, 0.507798,-99) , 
9, -3.68548, 1, 0, 0.516701,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.100413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489227,-99) , 
9, -1.26889, 0, 0, 0.513531,-99) , 
9, -2.70702, 1, 0, 0.524764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433132,-99) , 
1, -0.00299145, 1, 0, 0.451432,-99) , 
9, -2.48847, 0, 0, 0.474491,-99) , 
8, 0.142905, 0, 0, 0.506462,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0790381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.17316, 1, 1, 0.600249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468641,-99) , 
7, -951.286, 0, 0, 0.506663,-99) , 
NN(
0, 
0, 
-1, -1.77153, 0, -1, 0.374685,-99) , 
8, -1.28204, 0, 0, 0.498823,-99) , 
1, -0.00406158, 1, 0, 0.506449,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0885019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.660633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430905,-99) , 
0, 0.49333, 0, 0, 0.515028,-99) , 
2, -0.0411179, 1, 0, 0.5474,-99) , 
NN(
NN(
0, 
0, 
-1, 0.682503, 1, 1, 0.556394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469585,-99) , 
5, 0.909286, 0, 0, 0.485813,-99) , 
1, 0.00177148, 0, 0, 0.501609,-99) , 
5, 0.523794, 1, 0, 0.515513,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0967333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142768, 1, 1, 0.567559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435883,-99) , 
8, -1.7056, 0, 0, 0.548481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475229,-99) , 
10, -0.482141, 1, 0, 0.495293,-99) , 
NN(
0, 
0, 
-1, -2.62211, 0, -1, 0.440109,-99) , 
8, 0.353187, 0, 0, 0.481884,-99) , 
10, -1.19202, 1, 0, 0.496321,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0645775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425444,-99) , 
10, 0.126202, 1, 0, 0.499076,-99) , 
8, 1.74079, 0, 0, 0.507247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444397,-99) , 
10, 0.868357, 1, 0, 0.500869,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0923054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.16332, 1, 1, 0.633383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463152,-99) , 
8, 0.43016, 0, 0, 0.499845,-99) , 
6, 0.00475564, 0, 0, 0.513754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37982,-99) , 
6, 0.0124849, 1, 0, 0.510158,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0675155);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458624,-99) , 
9, -2.77453, 0, 0, 0.529866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483939,-99) , 
10, -1.81798, 1, 0, 0.488857,-99) , 
0, 0.499995, 0, 0, 0.502812,-99) , 
9, -3.81268, 1, 0, 0.508229,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0958161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000183719, 0, 1, 0.559105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474794,-99) , 
5, 0.959159, 1, 0, 0.543878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472735,-99) , 
2, 0.0213072, 1, 0, 0.581665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438258,-99) , 
8, 1.00097, 1, 0, 0.482529,-99) , 
0, 0.493328, 1, 0, 0.498034,-99) , 
5, 0.714265, 0, 0, 0.522992,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0790952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483414,-99) , 
0, 0.496184, 0, 0, 0.514946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403325,-99) , 
10, -1.58436, 1, 0, 0.465017,-99) , 
9, -2.86489, 0, 0, 0.501939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399363,-99) , 
3, 7.41242, 1, 0, 0.495833,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0633266);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505845, 0, 1, 0.585449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460629,-99) , 
5, 0.904748, 1, 0, 0.507401,-99) , 
NN(
0, 
0, 
-1, 0.429935, 0, -1, 0.460788,-99) , 
3, 3.76599, 1, 0, 0.495877,-99) , 
0, 0.504757, 0, 0, 0.50167,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.126785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.71796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473432,-99) , 
7, -951.286, 0, 0, 0.536676,-99) , 
8, -0.714962, 1, 0, 0.553605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451943,-99) , 
10, -0.846095, 1, 0, 0.481842,-99) , 
NN(
0, 
0, 
-1, 0.497131, 0, -1, 0.375712,-99) , 
8, -1.00054, 0, 0, 0.472236,-99) , 
1, 0.0013636, 0, 0, 0.497322,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0475794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332093,-99) , 
8, -0.666716, 0, 0, 0.491395,-99) , 
10, -1.84857, 1, 0, 0.498488,-99) , 
NN(
0, 
0, 
-1, 0.333381, 0, -1, 0.383816,-99) , 
8, -1.28209, 0, 0, 0.491437,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0961011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432825,-99) , 
8, 1.04071, 0, 0, 0.492669,-99) , 
8, 0.714059, 1, 0, 0.513848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445578,-99) , 
8, 0.98013, 0, 0, 0.456902,-99) , 
1, 0.00442927, 0, 0, 0.466623,-99) , 
9, -2.11364, 0, 0, 0.489665,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0624905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484897,-99) , 
7, -951.286, 1, 0, 0.49918,-99) , 
8, 1.89832, 0, 0, 0.506596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393964,-99) , 
10, 1.07696, 1, 0, 0.498021,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0868117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.406092, 1, 1, 0.534966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453688,-99) , 
2, -0.0125105, 1, 0, 0.486253,-99) , 
8, 0.482914, 0, 0, 0.509772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434457,-99) , 
10, 1.01531, 1, 0, 0.503679,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0587708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.768534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455933,-99) , 
5, 0.714219, 1, 0, 0.602861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496087,-99) , 
2, 0.135112, 0, 0, 0.508156,-99) , 
NN(
0, 
0, 
-1, 1.3106, 0, -1, 0.470669,-99) , 
10, -0.117009, 1, 0, 0.492094,-99) , 
9, -3.64471, 1, 0, 0.499085,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0934215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0705413, 0, 1, 0.535761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409127,-99) , 
8, 0.542533, 0, 0, 0.484147,-99) , 
10, -0.945325, 1, 0, 0.499938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32287,-99) , 
7, -951.286, 1, 0, 0.376757,-99) , 
0, 0.505981, 0, 0, 0.434885,-99) , 
0, 0.503804, 1, 0, 0.491682,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0698404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478229,-99) , 
10, -0.181601, 1, 0, 0.555526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45397,-99) , 
8, -0.302825, 0, 0, 0.497504,-99) , 
5, 0.333322, 1, 0, 0.510474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402314,-99) , 
10, 1.08157, 1, 0, 0.502495,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0820114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.46225, 1, 1, 0.571633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448612,-99) , 
5, 0.428502, 1, 0, 0.478072,-99) , 
3, 2.92496, 1, 0, 0.538147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482038,-99) , 
8, 0.553569, 0, 0, 0.500425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413536,-99) , 
8, 1.32079, 0, 0, 0.470189,-99) , 
10, -0.209558, 1, 0, 0.487509,-99) , 
1, -0.00116413, 1, 0, 0.502779,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.113129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460865,-99) , 
10, -0.82501, 1, 0, 0.523565,-99) , 
8, 0.550181, 0, 0, 0.533578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47053,-99) , 
10, 0.159224, 1, 0, 0.498694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401395,-99) , 
0, 0.495234, 1, 0, 0.43772,-99) , 
8, 1.15376, 0, 0, 0.475429,-99) , 
10, -0.458607, 1, 0, 0.503162,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0753198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497722,-99) , 
5, -0.637174, 0, 0, 0.596505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471651,-99) , 
8, 0.155939, 0, 0, 0.507662,-99) , 
5, 0.523753, 1, 0, 0.534507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484366,-99) , 
9, -3.09539, 1, 0, 0.49267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341567,-99) , 
5, 0.4281, 0, 0, 0.438507,-99) , 
8, -0.429157, 0, 0, 0.481101,-99) , 
0, 0.496185, 1, 0, 0.498841,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0784033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474916,-99) , 
10, 0.156644, 1, 0, 0.502503,-99) , 
10, -1.2898, 1, 0, 0.5093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666669,-99) , 
NN(
0, 
0, 
-1, -3.82764, 0, -1, 0.427258,-99) , 
9, -4.06733, 1, 0, 0.462418,-99) , 
9, -3.06069, 0, 0, 0.500266,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0916804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72411, 1, 1, 0.532749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419023,-99) , 
9, -1.78799, 0, 0, 0.460542,-99) , 
3, 2.91044, 1, 0, 0.504961,-99) , 
NN(
0, 
0, 
-1, 0.489383, 1, -1, 0.425384,-99) , 
0, 0.490471, 0, 0, 0.499753,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0788427);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.704072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477669,-99) , 
1, -0.00218438, 1, 0, 0.492097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388177,-99) , 
2, -0.183708, 0, 0, 0.4845,-99) , 
9, -4.08802, 1, 0, 0.490486,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0745549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504078, 1, 1, 0.634186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47636,-99) , 
0, 0.505437, 1, 0, 0.532226,-99) , 
10, -1.0031, 1, 0, 0.557938,-99) , 
NN(
NN(
0, 
0, 
-1, 0.564683, 1, 1, 0.515921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433353,-99) , 
5, -0.727808, 1, 0, 0.472888,-99) , 
5, 0.42859, 0, 0, 0.503816,-99) , 
0, 0.501899, 0, 0, 0.515072,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0993255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.35361, 1, 1, 0.543098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378144,-99) , 
10, -1.62395, 1, 0, 0.473574,-99) , 
8, -0.494895, 0, 0, 0.521188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453419,-99) , 
5, 0.809632, 1, 0, 0.502488,-99) , 
NN(
0, 
0, 
-1, -1.92624, 0, -1, 0.401588,-99) , 
8, 1.13489, 0, 0, 0.47544,-99) , 
10, -0.244373, 1, 0, 0.500886,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0836534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456005,-99) , 
5, 0.428554, 1, 0, 0.534909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481601,-99) , 
5, 0.564655, 1, 0, 0.490491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415029,-99) , 
1, 0.00348834, 0, 0, 0.446154,-99) , 
5, 0.428603, 0, 0, 0.478231,-99) , 
1, -0.00384117, 1, 0, 0.482949,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0720897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523656, 0, 1, 0.637415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461157,-99) , 
7, -951.286, 0, 0, 0.549561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440523,-99) , 
8, -0.311897, 0, 0, 0.493049,-99) , 
0, 0.495232, 1, 0, 0.507441,-99) , 
9, -3.68548, 1, 0, 0.514434,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.068582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491465,-99) , 
7, -951.286, 0, 0, 0.578763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346656,-99) , 
5, -0.469159, 0, 0, 0.498238,-99) , 
5, -0.714201, 1, 0, 0.505988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49234,-99) , 
5, 0.618475, 1, 0, 0.533795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317223,-99) , 
3, 3.71378, 0, 0, 0.386752,-99) , 
3, 1.96678, 1, 0, 0.450807,-99) , 
8, -0.426421, 0, 0, 0.495264,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.113519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457518,-99) , 
5, 0.238124, 1, 0, 0.480501,-99) , 
8, 1.30142, 0, 0, 0.495367,-99) , 
NN(
0, 
0, 
-1, 0.714233, 1, -1, 0.440044,-99) , 
10, 0.399025, 1, 0, 0.482902,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0887912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42328, 0, 1, 0.558374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465996,-99) , 
8, 1.85545, 0, 0, 0.476442,-99) , 
5, 0.0475942, 1, 0, 0.492009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374785,-99) , 
2, -0.21311, 0, 0, 0.485794,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.110504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403864,-99) , 
8, -0.949823, 0, 0, 0.605918,-99) , 
NN(
0, 
0, 
-1, -1.63338, 1, 1, 0.529652,-99) , 
5, 0.523701, 1, 0, 0.550084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445714,-99) , 
8, 1.6641, 0, 0, 0.474273,-99) , 
9, -2.20628, 1, 0, 0.483368,-99) , 
10, -0.326272, 1, 0, 0.518274,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0428348);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493137,-99) , 
0, 0.505709, 0, 0, 0.497167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399994,-99) , 
3, 7.39984, 1, 0, 0.490897,-99) , 
1, 0.00600111, 0, 0, 0.497037,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0986093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0220462, 0, 1, 0.565371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476864,-99) , 
5, 0.927381, 0, 0, 0.495942,-99) , 
5, 0.619008, 1, 0, 0.518442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527401,-99) , 
NN(
0, 
0, 
-1, 0.22951, 1, -1, 0.428512,-99) , 
0, 0.501897, 0, 0, 0.450245,-99) , 
10, -0.0715851, 1, 0, 0.491809,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0897236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0313546, 0, 1, 0.596593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437962,-99) , 
3, 3.23204, 0, 0, 0.475991,-99) , 
0, 0.503804, 1, 0, 0.541601,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00024, 0, 1, 0.531609,-99) , 
NN(
0, 
0, 
-1, 0.500524, 1, -1, 0.467324,-99) , 
0, 0.496503, 1, 0, 0.498444,-99) , 
0, 0.500947, 0, 0, 0.509929,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0406934);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443397,-99) , 
0, 0.500947, 1, 0, 0.562926,-99) , 
NN(
0, 
0, 
-1, -3.33862, 0, -1, 0.491342,-99) , 
1, -0.00384117, 1, 0, 0.497003,-99) , 
10, -2.19905, 1, 0, 0.502143,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.100308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42744, 1, 1, 0.621731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456106,-99) , 
10, -2.33614, 1, 0, 0.522452,-99) , 
8, -0.859607, 0, 0, 0.571897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482657,-99) , 
10, -0.662364, 1, 0, 0.497304,-99) , 
NN(
0, 
0, 
-1, -3.05647, 0, -1, 0.40865,-99) , 
8, 0.0837091, 0, 0, 0.481657,-99) , 
10, -1.34874, 1, 0, 0.498399,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.127542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28313, 0, 1, 0.613702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466087,-99) , 
5, 0.809504, 1, 0, 0.516104,-99) , 
9, -1.78883, 1, 0, 0.54205,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.545698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435353,-99) , 
9, -1.99805, 0, 0, 0.467594,-99) , 
10, -1.3848, 1, 0, 0.492973,-99) , 
8, 0.716209, 0, 0, 0.515024,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0506012);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494735,-99) , 
2, -0.100011, 0, 0, 0.537184,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.489239,-99) , 
2, -0.0306036, 1, 0, 0.503136,-99) , 
2, 0.212324, 0, 0, 0.509436,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.106515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426185,-99) , 
8, -0.537786, 0, 0, 0.544141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464934,-99) , 
10, -0.794223, 1, 0, 0.486106,-99) , 
0, 0.500947, 1, 0, 0.527842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535948,-99) , 
NN(
0, 
0, 
-1, 1.91916, 1, -1, 0.380504,-99) , 
9, -3.44979, 0, 0, 0.439739,-99) , 
8, -0.714624, 0, 0, 0.515584,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.06084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.71073, 1, 1, 0.521202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337148,-99) , 
8, -0.469383, 0, 0, 0.470453,-99) , 
0, 0.494281, 0, 0, 0.510296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262175,-99) , 
8, -1.85706, 0, 0, 0.503649,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0805656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.915151, 1, 1, 0.535325,-99) , 
NN(
0, 
0, 
-1, -1.23105, 1, -1, 0.460787,-99) , 
8, -0.00473524, 0, 0, 0.510276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415853,-99) , 
10, 1.07989, 1, 0, 0.503193,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0814305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496155,-99) , 
3, 0.783981, 0, 0, 0.572869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403944,-99) , 
7, -951.286, 1, 0, 0.448233,-99) , 
8, -0.432518, 0, 0, 0.540629,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0394133, 1, 1, 0.53723,-99) , 
NN(
0, 
0, 
-1, -2.61359, 0, -1, 0.476144,-99) , 
10, -1.32072, 1, 0, 0.487486,-99) , 
5, 0.523807, 1, 0, 0.503305,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0805638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1504, 1, 1, 0.574339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476556,-99) , 
10, -0.668193, 1, 0, 0.500685,-99) , 
8, 1.57069, 0, 0, 0.515722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414666,-99) , 
4, 0.999525, 0, 0, 0.505107,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0548929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
9, -1.69499, 0, 0, 0.504941,-99) , 
8, 1.29892, 0, 0, 0.514601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422412,-99) , 
5, 0.714202, 1, 0, 0.467901,-99) , 
10, 0.376163, 1, 0, 0.504377,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0680866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564571, 1, 1, 0.55793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494337,-99) , 
0, 0.490475, 1, 0, 0.50123,-99) , 
10, -1.12624, 1, 0, 0.515508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449446,-99) , 
7, -951.286, 0, 0, 0.517517,-99) , 
NN(
0, 
0, 
-1, 1.99573, 1, -1, 0.377522,-99) , 
8, -0.139136, 0, 0, 0.462042,-99) , 
5, -0.523773, 0, 0, 0.507206,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.069765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47716, 0, 1, 0.517959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415995,-99) , 
5, 0.95005, 1, 0, 0.503391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317579,-99) , 
8, -1.0019, 0, 0, 0.477773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278807,-99) , 
5, -0.229047, 1, 0, 0.443427,-99) , 
5, -0.047646, 0, 0, 0.490693,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0750757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495977,-99) , 
8, 1.42111, 0, 0, 0.507397,-99) , 
9, -0.963537, 0, 0, 0.515818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414612,-99) , 
0, 0.494553, 1, 0, 0.44738,-99) , 
0, 0.503803, 0, 0, 0.470071,-99) , 
5, 0.428554, 0, 0, 0.502756,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0849981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333266, 1, 1, 0.563912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49037,-99) , 
2, 0.0605006, 0, 0, 0.505521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397611,-99) , 
10, 0.691921, 1, 0, 0.490057,-99) , 
1, 0.0013636, 0, 0, 0.51304,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.12163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498099, 1, 1, 0.619668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471144,-99) , 
10, -1.09306, 1, 0, 0.521062,-99) , 
9, -2.10589, 0, 0, 0.543482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451704,-99) , 
0, 0.499997, 1, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420125,-99) , 
0, 0.49428, 0, 0, 0.482151,-99) , 
10, -0.086412, 1, 0, 0.519422,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0584788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.514598, 0, 1, 0.597691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497857,-99) , 
9, -1.99459, 1, 0, 0.551594,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0552068, 1, 1, 0.515583,-99) , 
NN(
0, 
0, 
-1, 5.24487, 1, -1, 0.468295,-99) , 
5, 0.619039, 0, 0, 0.498447,-99) , 
0, 0.495233, 1, 0, 0.511311,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0672748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450552,-99) , 
10, 0.584221, 1, 0, 0.502177,-99) , 
10, -1.69259, 1, 0, 0.509317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336292,-99) , 
10, -2.19373, 1, 0, 0.439904,-99) , 
8, -0.999767, 0, 0, 0.503282,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0800115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408017,-99) , 
5, -0.550812, 0, 0, 0.509812,-99) , 
5, -0.809517, 1, 0, 0.517785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396693,-99) , 
5, 0.713762, 1, 0, 0.484462,-99) , 
NN(
0, 
0, 
-1, -3.38077, 0, -1, 0.388451,-99) , 
9, -3.57202, 1, 0, 0.427281,-99) , 
9, -3.07001, 0, 0, 0.50106,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0622988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490228,-99) , 
5, -0.4286, 0, 0, 0.59918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42172,-99) , 
4, 0.999932, 0, 0, 0.489844,-99) , 
0, 0.492376, 1, 0, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429552,-99) , 
4, 0.999524, 0, 0, 0.49317,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0698758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.402882, 0, 1, 0.588181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472442,-99) , 
10, -0.0517733, 1, 0, 0.543796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479626,-99) , 
5, 0.523798, 1, 0, 0.495432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370142,-99) , 
8, -1.56781, 0, 0, 0.49046,-99) , 
2, 0.068648, 0, 0, 0.499586,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0746442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466752,-99) , 
3, 3.01617, 0, 0, 0.484557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3379,-99) , 
9, -3.86469, 0, 0, 0.480743,-99) , 
10, -2.38843, 1, 0, 0.485557,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0612479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491402,-99) , 
10, -0.989005, 1, 0, 0.502725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413786,-99) , 
9, -2.80537, 0, 0, 0.441796,-99) , 
8, -0.163435, 0, 0, 0.489434,-99) , 
10, -2.10906, 1, 0, 0.49357,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.063518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90759, 1, 1, 0.526419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422175,-99) , 
8, -1.38201, 0, 0, 0.521047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435906,-99) , 
10, 1.07696, 1, 0, 0.51461,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0702838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477123,-99) , 
7, -951.286, 1, 0, 0.492983,-99) , 
6, 0.00653558, 0, 0, 0.501116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298435,-99) , 
6, 0.0124849, 1, 0, 0.495052,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0714133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
0, 0.500936, 1, 0, 0.536513,-99) , 
1, 0.00224128, 0, 0, 0.560008,-99) , 
NN(
NN(
0, 
0, 
-1, -2.97642, 1, 1, 0.546789,-99) , 
NN(
0, 
0, 
-1, -0.426648, 0, -1, 0.478464,-99) , 
2, -0.00222278, 1, 0, 0.501191,-99) , 
2, -0.0757074, 1, 0, 0.510378,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0694969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482867,-99) , 
8, 0.141143, 0, 0, 0.541736,-99) , 
NN(
0, 
0, 
-1, 0.333352, 0, -1, 0.481864,-99) , 
6, 0.00229231, 0, 0, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349728,-99) , 
6, 0.0120364, 1, 0, 0.499053,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.06518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464328,-99) , 
8, -0.0613393, 0, 0, 0.508251,-99) , 
9, -3.4398, 1, 0, 0.514582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330166,-99) , 
3, 1.55625, 0, 0, 0.41452,-99) , 
8, -1.28594, 0, 0, 0.508904,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0657112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764162, 1, 1, 0.517448,-99) , 
NN(
0, 
0, 
-1, 0.00100192, 0, -1, 0.453075,-99) , 
5, 0.619031, 0, 0, 0.493446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358561,-99) , 
6, 0.0105207, 1, 0, 0.48823,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0692287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482206,-99) , 
10, -0.615786, 1, 0, 0.50845,-99) , 
8, 1.74011, 0, 0, 0.515782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447643,-99) , 
10, 0.865428, 1, 0, 0.507754,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0398669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.431768, 1, 1, 0.600624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499786,-99) , 
0, 0.501607, 0, 0, 0.509662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39164,-99) , 
0, 0.50394, 1, 0, 0.504932,-99) , 
0, 0.504757, 0, 0, 0.5115,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0891706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113351, 0, 1, 0.641401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456465,-99) , 
8, 1.1499, 0, 0, 0.521553,-99) , 
10, -0.22871, 1, 0, 0.538239,-99) , 
NN(
NN(
0, 
0, 
-1, 0.360689, 0, 1, 0.51817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336493,-99) , 
9, -2.183, 0, 0, 0.43984,-99) , 
10, -0.673225, 1, 0, 0.496251,-99) , 
8, 0.714413, 0, 0, 0.515457,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0706995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.893458, 1, 1, 0.518254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443005,-99) , 
10, -1.99709, 1, 0, 0.464433,-99) , 
8, 0.020993, 0, 0, 0.498408,-99) , 
NN(
0, 
0, 
-1, -0.859876, 0, -1, 0.446285,-99) , 
10, 0.691921, 1, 0, 0.49056,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0995136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496447,-99) , 
9, -2.3608, 0, 0, 0.548408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456649,-99) , 
8, 1.76881, 0, 0, 0.479194,-99) , 
10, -0.381333, 1, 0, 0.503787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461478,-99) , 
10, -2.16782, 1, 0, 0.493792,-99) , 
NN(
0, 
0, 
-1, -0.0477435, 0, -1, 0.36593,-99) , 
9, -3.10059, 1, 0, 0.460065,-99) , 
9, -2.92641, 0, 0, 0.494425,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0934829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.777793, 0, 1, 0.629601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43634,-99) , 
3, 2.04843, 0, 0, 0.476946,-99) , 
7, -951.286, 0, 0, 0.549786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462598,-99) , 
5, 0.782294, 1, 0, 0.490215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322723,-99) , 
5, -0.142718, 0, 0, 0.484002,-99) , 
5, -0.333338, 1, 0, 0.494364,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0832433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33331, 1, 1, 0.529944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409029,-99) , 
9, -2.7234, 1, 0, 0.452318,-99) , 
0, 0.493328, 0, 0, 0.517079,-99) , 
NN(
0, 
0, 
-1, 0.714224, 1, -1, 0.444823,-99) , 
10, 0.495494, 1, 0, 0.502499,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0730342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441272,-99) , 
3, 5.83025, 1, 0, 0.50466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408008,-99) , 
0, 0.5019, 0, 0, 0.438113,-99) , 
9, -3.21686, 0, 0, 0.492923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434958,-99) , 
10, 0.760475, 1, 0, 0.485245,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0798287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487887,-99) , 
10, -0.527088, 1, 0, 0.497296,-99) , 
2, 0.0952644, 0, 0, 0.510441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471417,-99) , 
9, -2.25696, 0, 0, 0.501648,-99) , 
NN(
0, 
0, 
-1, -1.51391, 1, -1, 0.435935,-99) , 
9, -2.78388, 0, 0, 0.4634,-99) , 
8, 0.428613, 0, 0, 0.489195,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0670593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.13107, 1, 1, 0.52294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398762,-99) , 
8, -1.40499, 0, 0, 0.478944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377077,-99) , 
10, -1.64336, 1, 0, 0.443028,-99) , 
8, -0.426462, 0, 0, 0.506531,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0955527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.320734, 1, 1, 0.600324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482109,-99) , 
8, 1.47485, 1, 0, 0.50367,-99) , 
9, -1.84724, 1, 0, 0.528061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473888,-99) , 
8, 0.359143, 0, 0, 0.490856,-99) , 
NN(
0, 
0, 
-1, -0.508282, 1, -1, 0.411159,-99) , 
10, -0.639619, 1, 0, 0.471666,-99) , 
8, 0.71298, 0, 0, 0.49749,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0648431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00574721, 1, 1, 0.630938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450729,-99) , 
6, 0.000594483, 0, 0, 0.499433,-99) , 
1, -0.00416183, 1, 0, 0.507454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276144,-99) , 
6, 0.012485, 1, 0, 0.499521,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0710246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481622,-99) , 
4, 0.999997, 0, 0, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0.71423, 0, -1, 0.448014,-99) , 
4, 0.999933, 0, 0, 0.493312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42681,-99) , 
4, 0.999527, 0, 0, 0.486331,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0915583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.571608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499073,-99) , 
5, 0.673414, 1, 0, 0.543974,-99) , 
NN(
0, 
0, 
-1, -0.0611806, 0, -1, 0.458121,-99) , 
10, -1.25786, 1, 0, 0.475781,-99) , 
5, -0.71424, 1, 0, 0.485924,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0775011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.81431, 1, 1, 0.662898,-99) , 
NN(
0, 
0, 
-1, 0.0026006, 0, -1, 0.46547,-99) , 
8, -1.18456, 0, 0, 0.573899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491164,-99) , 
10, 0.182438, 1, 0, 0.516511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390227,-99) , 
8, -0.414306, 0, 0, 0.506446,-99) , 
10, -1.61248, 1, 0, 0.514328,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.064964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.00666, 1, 1, 0.541896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480387,-99) , 
3, 2.97096, 0, 0, 0.496897,-99) , 
NN(
0, 
0, 
-1, 0.496684, 1, -1, 0.457934,-99) , 
0, 0.497138, 0, 0, 0.480458,-99) , 
8, 1.85634, 0, 0, 0.4887,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0670085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.731014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49574,-99) , 
8, -0.579098, 0, 0, 0.559047,-99) , 
NN(
0, 
0, 
-1, 5.41708, 1, -1, 0.478415,-99) , 
9, -3.10752, 1, 0, 0.492165,-99) , 
9, -0.996735, 0, 0, 0.501544,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0994032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476258,-99) , 
8, 1.47636, 0, 0, 0.526647,-99) , 
10, 0.0208607, 1, 0, 0.551025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49185,-99) , 
10, -0.931423, 1, 0, 0.526697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395181,-99) , 
3, 1.39293, 0, 0, 0.45442,-99) , 
5, 0.428554, 0, 0, 0.503518,-99) , 
8, 1.00003, 0, 0, 0.520811,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.096455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72837, 1, 1, 0.58959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434162,-99) , 
0, 0.499042, 1, 0, 0.512357,-99) , 
9, -2.7362, 0, 0, 0.560935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490276,-99) , 
0, 0.49523, 1, 0, 0.503634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275159,-99) , 
10, -1.59272, 1, 0, 0.448259,-99) , 
9, -3.04695, 0, 0, 0.494286,-99) , 
5, 0.523795, 1, 0, 0.513025,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.109909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485955,-99) , 
10, -0.364054, 1, 0, 0.569713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483616,-99) , 
9, -0.879063, 0, 0, 0.504171,-99) , 
9, -1.88553, 1, 0, 0.529975,-99) , 
NN(
NN(
0, 
0, 
-1, -1.0812, 0, 1, 0.563807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405757,-99) , 
9, -2.8589, 0, 0, 0.467762,-99) , 
10, -1.84254, 1, 0, 0.491757,-99) , 
8, 0.142462, 0, 0, 0.517047,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0932435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0181188, 1, 1, 0.611507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462289,-99) , 
0, 0.496185, 0, 0, 0.497446,-99) , 
6, 0.00328167, 0, 0, 0.521199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296805,-99) , 
6, 0.0137849, 1, 0, 0.515095,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0744126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492464,-99) , 
9, -1.5179, 1, 0, 0.5131,-99) , 
9, -2.09594, 1, 0, 0.526759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558775,-99) , 
NN(
0, 
0, 
-1, -0.635853, 1, -1, 0.46475,-99) , 
8, 0.809524, 0, 0, 0.473246,-99) , 
8, 1.00003, 0, 0, 0.491995,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0595691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.602126,-99) , 
NN(
NN(
0, 
0, 
-1, 0.559468, 1, 1, 0.515816,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.421751,-99) , 
5, -0.156455, 0, 0, 0.509339,-99) , 
5, -0.619032, 1, 0, 0.520239,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.070693);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714251, 1, 1, 0.580655,-99) , 
NN(
NN(
0, 
0, 
-1, -2.25597, 1, 1, 0.52787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345842,-99) , 
8, -0.106162, 1, 0, 0.471077,-99) , 
8, -0.00513452, 0, 0, 0.516113,-99) , 
8, -0.711842, 1, 0, 0.523058,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0542228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495032,-99) , 
2, -0.0904527, 1, 0, 0.503681,-99) , 
10, -2.19244, 1, 0, 0.50982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421297,-99) , 
7, -951.286, 0, 0, 0.488938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378081,-99) , 
8, -0.708498, 0, 0, 0.470586,-99) , 
2, 0.0537524, 1, 0, 0.501328,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0575828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.207151, 0, 1, 0.631785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430591,-99) , 
3, 1.68262, 1, 0, 0.486257,-99) , 
7, -951.286, 0, 0, 0.553274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497724,-99) , 
10, -1.31087, 1, 0, 0.503573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394688,-99) , 
10, -1.94097, 1, 0, 0.442177,-99) , 
9, -3.04695, 0, 0, 0.491627,-99) , 
5, -0.618962, 1, 0, 0.499372,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0487981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488043,-99) , 
0, 0.491061, 1, 0, 0.4935,-99) , 
0, 0.505709, 0, 0, 0.498199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434316,-99) , 
4, 0.999524, 0, 0, 0.491664,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0454588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43707,-99) , 
0, 0.491424, 0, 0, 0.502763,-99) , 
6, 0.00787051, 0, 0, 0.506673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305659,-99) , 
6, 0.013785, 1, 0, 0.501249,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0747544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37596, 1, 1, 0.565465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410339,-99) , 
8, -0.956256, 0, 0, 0.501537,-99) , 
0, 0.495232, 1, 0, 0.517129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432926,-99) , 
10, 0.758797, 1, 0, 0.505704,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0808857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489769,-99) , 
9, -3.72485, 0, 0, 0.55396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474684,-99) , 
9, -1.36465, 0, 0, 0.493571,-99) , 
10, -1.34562, 1, 0, 0.504303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54416,-99) , 
NN(
0, 
0, 
-1, 0.43113, 0, -1, 0.416856,-99) , 
2, -0.0747942, 1, 0, 0.442363,-99) , 
0, 0.492376, 0, 0, 0.496397,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0709184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.48858, 0, 1, 0.546157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432598,-99) , 
9, -2.15677, 0, 0, 0.494633,-99) , 
9, -2.345, 1, 0, 0.505964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413092,-99) , 
1, 0.00282208, 0, 0, 0.431486,-99) , 
9, -4.05581, 1, 0, 0.446185,-99) , 
8, -0.141918, 0, 0, 0.489828,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0583182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484864,-99) , 
6, 0.00326702, 0, 0, 0.496337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408019,-99) , 
6, 0.00980538, 1, 0, 0.492647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346741,-99) , 
8, -1.5716, 0, 0, 0.486692,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0553008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461727,-99) , 
2, -0.0717928, 0, 0, 0.505629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416713,-99) , 
3, 2.46177, 0, 0, 0.45654,-99) , 
0, 0.502851, 1, 0, 0.497611,-99) , 
9, -3.9687, 1, 0, 0.502022,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0727101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.279749, 1, 1, 0.585852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449994,-99) , 
8, -0.422728, 0, 0, 0.55718,-99) , 
NN(
NN(
0, 
0, 
-1, 0.47687, 0, 1, 0.579875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474526,-99) , 
10, -0.7061, 1, 0, 0.490622,-99) , 
0, 0.491424, 1, 0, 0.497128,-99) , 
2, 0.0700769, 0, 0, 0.508008,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0902721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.510031, 1, 1, 0.547269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459779,-99) , 
8, -0.801977, 0, 0, 0.530142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460172,-99) , 
9, -1.19115, 0, 0, 0.47654,-99) , 
10, -1.06685, 1, 0, 0.489692,-99) , 
2, 0.0731625, 0, 0, 0.498803,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0844861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0650069, 1, 1, 0.538271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476162,-99) , 
5, -0.809525, 1, 0, 0.493324,-99) , 
8, 0.428107, 0, 0, 0.519293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463762,-99) , 
0, 0.499042, 1, 0, 0.514348,-99) , 
NN(
0, 
0, 
-1, 0.524228, 0, -1, 0.427926,-99) , 
3, 2.76218, 1, 0, 0.460143,-99) , 
2, 0.0706187, 1, 0, 0.508069,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0898562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523888, 1, 1, 0.568765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484211,-99) , 
10, -0.880942, 1, 0, 0.52156,-99) , 
8, 0.666417, 0, 0, 0.53798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448514,-99) , 
8, 2.14299, 0, 0, 0.481396,-99) , 
10, 0.495494, 1, 0, 0.525842,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0856295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471044,-99) , 
8, 0.808174, 0, 0, 0.51786,-99) , 
9, -2.97788, 1, 0, 0.534676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483592,-99) , 
9, -3.63652, 1, 0, 0.492487,-99) , 
NN(
0, 
0, 
-1, -3.24012, 0, -1, 0.432162,-99) , 
3, 2.83758, 1, 0, 0.471354,-99) , 
0, 0.5019, 0, 0, 0.483789,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0691218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.523782, 0, 1, 0.598413,-99) , 
NN(
NN(
0, 
0, 
-1, -2.25257, 1, 1, 0.519641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461375,-99) , 
5, -0.618973, 1, 0, 0.474316,-99) , 
8, 0.433665, 0, 0, 0.49915,-99) , 
1, -0.00384117, 1, 0, 0.506353,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.103643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.636414, 0, 1, 0.596731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457755,-99) , 
8, -0.84583, 0, 0, 0.509601,-99) , 
5, 0.714219, 1, 0, 0.5436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472063,-99) , 
8, 1.41617, 0, 0, 0.521095,-99) , 
NN(
0, 
0, 
-1, 0.71422, 1, -1, 0.454419,-99) , 
10, 0.475494, 1, 0, 0.486445,-99) , 
10, -0.073982, 1, 0, 0.519768,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0978567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400384,-99) , 
8, -1.28546, 0, 0, 0.534031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463273,-99) , 
0, 0.49238, 1, 0, 0.474372,-99) , 
3, 2.00286, 1, 0, 0.514854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470489,-99) , 
2, -0.0801732, 1, 0, 0.497437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28623,-99) , 
8, 0.720028, 1, 0, 0.389401,-99) , 
5, 0.428583, 0, 0, 0.4742,-99) , 
3, 3.40838, 1, 0, 0.50304,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0759283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.561428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463946,-99) , 
3, 3.77508, 1, 0, 0.518919,-99) , 
NN(
0, 
0, 
-1, -1.57059, 0, -1, 0.46591,-99) , 
7, -951.286, 1, 0, 0.482712,-99) , 
5, -0.714268, 1, 0, 0.490998,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.087846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499047, 1, 1, 0.558142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487137,-99) , 
2, 0.0242368, 0, 0, 0.502243,-99) , 
2, -0.0211735, 1, 0, 0.52413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444539,-99) , 
7, -0.142807, 0, 0, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0.116373, 1, -1, 0.405582,-99) , 
7, -951.286, 0, 0, 0.467967,-99) , 
2, 0.052179, 1, 0, 0.511556,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0630689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428256,-99) , 
8, -1.28577, 0, 0, 0.516575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406733,-99) , 
1, 0.001101, 1, 0, 0.471145,-99) , 
0, 0.502444, 1, 0, 0.507778,-99) , 
0, 0.489519, 1, 0, 0.512825,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.088795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714219, 1, 1, 0.589183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490105,-99) , 
10, -0.437421, 1, 0, 0.512111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402267,-99) , 
5, 0.142816, 1, 0, 0.445688,-99) , 
8, -0.0975944, 0, 0, 0.499563,-99) , 
10, -1.71489, 1, 0, 0.508732,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0782032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.616604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434253,-99) , 
8, -0.741324, 0, 0, 0.483873,-99) , 
3, 2.11095, 1, 0, 0.549497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484602,-99) , 
10, -0.739196, 1, 0, 0.496877,-99) , 
NN(
0, 
0, 
-1, -0.158962, 0, -1, 0.438703,-99) , 
9, -2.70483, 0, 0, 0.488666,-99) , 
10, -1.41134, 1, 0, 0.498435,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0992956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.5537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380241,-99) , 
5, 0.470375, 0, 0, 0.460336,-99) , 
3, 4.65923, 1, 0, 0.540873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471722,-99) , 
8, 0.960989, 0, 0, 0.495038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403333,-99) , 
10, 0.623355, 1, 0, 0.483312,-99) , 
5, 0.714278, 1, 0, 0.508121,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0532964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.598688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473049,-99) , 
8, -0.139136, 0, 0, 0.534523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381414,-99) , 
5, 0.292534, 0, 0, 0.491821,-99) , 
5, -0.238096, 1, 0, 0.498555,-99) , 
0, 0.490471, 1, 0, 0.504097,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0715493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92592, 0, 1, 0.513624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373602,-99) , 
6, 0.00980554, 1, 0, 0.506939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397963,-99) , 
5, -0.428388, 1, 0, 0.423666,-99) , 
10, -2.25325, 1, 0, 0.448473,-99) , 
9, -2.92641, 0, 0, 0.49354,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0679315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489134, 0, 1, 0.569534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470633,-99) , 
10, 0.154138, 1, 0, 0.500849,-99) , 
0, 0.490517, 1, 0, 0.505778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428332,-99) , 
7, -951.286, 0, 0, 0.512787,-99) , 
NN(
0, 
0, 
-1, 0.504667, 1, -1, 0.398612,-99) , 
8, 0.423753, 1, 0, 0.441858,-99) , 
0, 0.502852, 1, 0, 0.49549,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0992454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477513,-99) , 
5, 0.714215, 1, 0, 0.527125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427106,-99) , 
10, 0.344295, 1, 0, 0.536305,-99) , 
NN(
0, 
0, 
-1, -1.78172, 0, -1, 0.46229,-99) , 
8, 1.25969, 0, 0, 0.473317,-99) , 
9, -1.30088, 0, 0, 0.48431,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0487258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210551, 0, 1, 0.515889,-99) , 
NN(
0, 
0, 
-1, 0.498625, 1, -1, 0.444877,-99) , 
3, 6.30634, 1, 0, 0.50989,-99) , 
NN(
0, 
0, 
-1, -0.902772, 0, -1, 0.409749,-99) , 
0, 0.490471, 0, 0, 0.502645,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.046695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.56747, 0, 1, 0.561767,-99) , 
NN(
0, 
0, 
-1, -0.16487, 0, -1, 0.486099,-99) , 
10, -1.4022, 1, 0, 0.49656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401463,-99) , 
8, -1.57134, 0, 0, 0.493132,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0761659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.592292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462829,-99) , 
5, 0.714235, 0, 0, 0.490632,-99) , 
9, -2.78772, 1, 0, 0.507262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350765,-99) , 
10, -2.20031, 1, 0, 0.444336,-99) , 
8, -1.00028, 0, 0, 0.502268,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0385683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49692,-99) , 
2, 0.173736, 0, 0, 0.500952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395878,-99) , 
4, 0.999819, 0, 0, 0.493543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42806,-99) , 
4, 0.999526, 0, 0, 0.487298,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0683754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.99432, 0, 1, 0.552475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495709,-99) , 
8, 1.00245, 0, 0, 0.516975,-99) , 
5, 0.618964, 1, 0, 0.530062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459749,-99) , 
4, 0.999524, 0, 0, 0.522707,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0649237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.779994, 1, 1, 0.587872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49695,-99) , 
10, -1.72816, 1, 0, 0.504263,-99) , 
0, 0.499679, 0, 0, 0.514705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407727,-99) , 
5, 0.23782, 0, 0, 0.50778,-99) , 
NN(
0, 
0, 
-1, 1.28711, 0, -1, 0.440872,-99) , 
9, -2.61063, 1, 0, 0.460988,-99) , 
0, 0.500948, 1, 0, 0.49984,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0991286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460331,-99) , 
5, -0.523482, 0, 0, 0.533811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463033,-99) , 
9, -1.67047, 1, 0, 0.48368,-99) , 
8, 1.28563, 1, 0, 0.518986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468702,-99) , 
5, 0.310573, 0, 0, 0.499486,-99) , 
NN(
0, 
0, 
-1, -2.53692, 0, -1, 0.437759,-99) , 
5, 0.619031, 1, 0, 0.462737,-99) , 
0, 0.500947, 1, 0, 0.503136,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0719578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.31335, 1, 1, 0.545639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493718,-99) , 
0, 0.501131, 1, 0, 0.56705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480446,-99) , 
9, -1.32551, 0, 0, 0.491162,-99) , 
2, -0.0732547, 1, 0, 0.502456,-99) , 
0, 0.497138, 1, 0, 0.519467,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0731771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464116,-99) , 
10, -0.0244634, 1, 0, 0.501939,-99) , 
8, 2.0458, 0, 0, 0.508467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311457,-99) , 
10, -2.19613, 1, 0, 0.426997,-99) , 
8, -1.00065, 0, 0, 0.501706,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0697618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00011, 0, 1, 0.527201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450457,-99) , 
8, 0.136921, 1, 0, 0.478011,-99) , 
0, 0.50317, 1, 0, 0.518195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421264,-99) , 
8, 0.714267, 0, 0, 0.454198,-99) , 
2, -0.0872055, 1, 0, 0.471419,-99) , 
0, 0.494283, 0, 0, 0.508384,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0941932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.43965, 1, 1, 0.611698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3724,-99) , 
10, -1.81165, 1, 0, 0.483478,-99) , 
8, -0.614609, 0, 0, 0.531496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486225,-99) , 
10, -0.509884, 1, 0, 0.502272,-99) , 
NN(
0, 
0, 
-1, -2.64437, 0, -1, 0.416749,-99) , 
8, 0.267867, 0, 0, 0.483328,-99) , 
10, -1.22474, 1, 0, 0.492997,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0560094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333282, 1, 1, 0.609648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49416,-99) , 
5, 0.80951, 0, 0, 0.510962,-99) , 
6, 0.00475581, 0, 0, 0.520193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403442,-99) , 
6, 0.0124852, 1, 0, 0.51701,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0701718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.06938, 1, 1, 0.540679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477189,-99) , 
2, -0.0638332, 1, 0, 0.487802,-99) , 
8, 1.00003, 0, 0, 0.508051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439092,-99) , 
4, 0.999524, 0, 0, 0.500746,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0712425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456097,-99) , 
4, 0.999977, 0, 0, 0.494862,-99) , 
2, -0.2171, 1, 0, 0.500474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4185,-99) , 
4, 0.999525, 0, 0, 0.492269,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0851507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435834,-99) , 
7, -951.286, 0, 0, 0.508271,-99) , 
10, 0.201646, 1, 0, 0.530254,-99) , 
NN(
NN(
0, 
0, 
-1, 1.72052, 1, 1, 0.597622,-99) , 
NN(
0, 
0, 
-1, -0.0937723, 1, -1, 0.479139,-99) , 
5, -0.714284, 1, 0, 0.492323,-99) , 
9, -1.72249, 0, 0, 0.506154,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0601744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.877551, 0, 1, 0.589026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456127,-99) , 
0, 0.502852, 1, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383899,-99) , 
1, -0.00551247, 0, 0, 0.497308,-99) , 
5, -0.142859, 1, 0, 0.512082,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0901639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487516,-99) , 
9, -2.38218, 0, 0, 0.526103,-99) , 
10, -1.77303, 1, 0, 0.537653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466986,-99) , 
0, 0.500539, 1, 0, 0.519081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449752,-99) , 
0, 0.495233, 0, 0, 0.502705,-99) , 
5, 0.809504, 1, 0, 0.52227,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0833936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.64674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484738,-99) , 
0, 0.500945, 0, 0, 0.525304,-99) , 
3, 2.6081, 1, 0, 0.571165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408686,-99) , 
0, 0.504756, 1, 0, 0.508961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45771,-99) , 
5, 0.333297, 1, 0, 0.475368,-99) , 
2, -0.00651823, 1, 0, 0.492616,-99) , 
2, 0.0677761, 0, 0, 0.506309,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0516018);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455659,-99) , 
10, 0.868455, 1, 0, 0.503704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401893,-99) , 
0, 0.490472, 0, 0, 0.497323,-99) , 
9, -3.70823, 1, 0, 0.504476,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0396382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496824,-99) , 
0, 0.505708, 0, 0, 0.502673,-99) , 
NN(
0, 
0, 
-1, -1.31152, 1, -1, 0.464095,-99) , 
8, -0.142802, 0, 0, 0.492539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324608,-99) , 
6, 0.0137852, 1, 0, 0.48844,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0696268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.69233, 0, 1, 0.549134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481994,-99) , 
8, 1.67134, 0, 0, 0.496573,-99) , 
10, -0.694283, 1, 0, 0.51466,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.406113,-99) , 
9, -3.85086, 0, 0, 0.508557,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.101948);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0262134, 0, 1, 0.560481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464082,-99) , 
8, 0.936874, 0, 0, 0.514648,-99) , 
NN(
0, 
0, 
-1, 1.74053, 0, -1, 0.467096,-99) , 
10, 0.160847, 1, 0, 0.489322,-99) , 
10, -0.614307, 1, 0, 0.516533,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0941393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44729,-99) , 
8, 0.0868771, 0, 0, 0.550243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451672,-99) , 
9, -1.69989, 0, 0, 0.496727,-99) , 
9, -2.05136, 1, 0, 0.515213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460637,-99) , 
1, -0.000109343, 0, 0, 0.523108,-99) , 
NN(
0, 
0, 
-1, 0.495096, 1, -1, 0.434421,-99) , 
0, 0.501898, 0, 0, 0.452956,-99) , 
8, -0.143184, 0, 0, 0.49923,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0521964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432376,-99) , 
10, -2.40917, 1, 0, 0.484103,-99) , 
8, -1.15028, 0, 0, 0.559519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484871,-99) , 
3, 1.15817, 0, 0, 0.553193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279264,-99) , 
5, -0.0611579, 0, 0, 0.491918,-99) , 
5, -0.238077, 1, 0, 0.501278,-99) , 
8, -0.714766, 1, 0, 0.5073,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0532569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0010304, 0, 1, 0.557632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476885,-99) , 
8, 0.455492, 0, 0, 0.495999,-99) , 
0, 0.502852, 0, 0, 0.505864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317874,-99) , 
8, -1.85706, 0, 0, 0.501142,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0485163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506253, 0, 1, 0.60029,-99) , 
NN(
0, 
0, 
-1, 0.0124849, 1, -1, 0.481318,-99) , 
0, 0.504756, 0, 0, 0.48942,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0605994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487645,-99) , 
5, -0.115671, 0, 0, 0.511723,-99) , 
0, 0.503803, 0, 0, 0.530908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49342,-99) , 
10, -0.49912, 1, 0, 0.506715,-99) , 
NN(
0, 
0, 
-1, 0.455735, 0, -1, 0.465688,-99) , 
8, 0.428293, 0, 0, 0.489593,-99) , 
5, 0.238089, 1, 0, 0.498734,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0893543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455442,-99) , 
2, -0.0957071, 0, 0, 0.524781,-99) , 
8, 0.419609, 0, 0, 0.539419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485542,-99) , 
10, -0.222593, 1, 0, 0.499404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373508,-99) , 
8, 0.894939, 0, 0, 0.429813,-99) , 
9, -2.11351, 0, 0, 0.486118,-99) , 
10, -0.609705, 1, 0, 0.507037,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0958647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05124, 1, 1, 0.596238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461949,-99) , 
8, 0.60893, 0, 0, 0.511713,-99) , 
10, -0.902796, 1, 0, 0.520122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40016,-99) , 
5, 0.428618, 0, 0, 0.516315,-99) , 
NN(
0, 
0, 
-1, -2.94634, 0, -1, 0.416541,-99) , 
10, -1.47127, 1, 0, 0.475483,-99) , 
8, -0.137862, 0, 0, 0.508683,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.077722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49904, 1, 1, 0.659754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46089,-99) , 
10, -0.740112, 0, 0, 0.534319,-99) , 
5, -0.351448, 0, 0, 0.565313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492428,-99) , 
5, 0.673458, 1, 0, 0.504156,-99) , 
NN(
0, 
0, 
-1, -0.708176, 0, -1, 0.455039,-99) , 
0, 0.496185, 0, 0, 0.48717,-99) , 
5, 0.238101, 1, 0, 0.50422,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0829313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474152,-99) , 
2, 0.0583883, 1, 0, 0.526033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38416,-99) , 
8, -1.69384, 0, 0, 0.515864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603054,-99) , 
NN(
0, 
0, 
-1, 1.53065, 0, -1, 0.464457,-99) , 
9, -2.44049, 1, 0, 0.473711,-99) , 
8, 0.428613, 1, 0, 0.491428,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0679648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.69914, 0, 1, 0.533012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459369,-99) , 
10, 0.865428, 1, 0, 0.524134,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0610284);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.495232, 1, 1, 0.584232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495409,-99) , 
8, 1.75434, 0, 0, 0.504478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425117,-99) , 
10, 0.935904, 1, 0, 0.494843,-99) , 
10, -1.35417, 1, 0, 0.509163,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0848989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
8, 0.426579, 0, 0, 0.539169,-99) , 
5, 0.428625, 1, 0, 0.559256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470937,-99) , 
3, 1.00604, 0, 0, 0.525562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460697,-99) , 
0, 0.500009, 0, 0, 0.477899,-99) , 
5, 0.714278, 1, 0, 0.498799,-99) , 
2, 0.0706187, 0, 0, 0.50929,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.072742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432292,-99) , 
8, -0.997375, 0, 0, 0.534202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455017,-99) , 
8, 0.141157, 0, 0, 0.490569,-99) , 
0, 0.49809, 1, 0, 0.511048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435424,-99) , 
4, 0.999524, 0, 0, 0.503418,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0592145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476548,-99) , 
8, -1.53536, 0, 0, 0.577671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487941,-99) , 
9, -1.90957, 0, 0, 0.506755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431341,-99) , 
10, 1.02666, 1, 0, 0.500048,-99) , 
10, -1.99351, 1, 0, 0.504415,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0765357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6973, 0, 1, 0.540861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453046,-99) , 
5, 0.891131, 0, 0, 0.48852,-99) , 
5, 0.809499, 1, 0, 0.517061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421508,-99) , 
10, 0.865428, 1, 0, 0.505607,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.073868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.548117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470472,-99) , 
3, 1.43762, 1, 0, 0.498358,-99) , 
3, 3.56417, 0, 0, 0.508035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422351,-99) , 
3, 6.68797, 1, 0, 0.501748,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0892136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76223, 1, 1, 0.553135,-99) , 
NN(
0, 
0, 
-1, -1.19911, 0, -1, 0.465209,-99) , 
9, -1.86642, 1, 0, 0.513913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441291,-99) , 
0, 0.495596, 1, 0, 0.481363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351012,-99) , 
8, -0.996972, 0, 0, 0.469342,-99) , 
0, 0.49809, 0, 0, 0.490805,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0602447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.586181, 1, 1, 0.520453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42125,-99) , 
10, -1.07287, 1, 0, 0.480363,-99) , 
8, 0.224488, 0, 0, 0.506633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27824,-99) , 
8, -1.8561, 0, 0, 0.500776,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0789379);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53953, 0, 1, 0.580259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497606,-99) , 
3, 0.779194, 1, 0, 0.527479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461379,-99) , 
9, -1.05219, 0, 0, 0.472909,-99) , 
5, -0.333333, 1, 0, 0.481095,-99) , 
10, -1.99351, 1, 0, 0.486713,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0626672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.602311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441698,-99) , 
3, 3.68419, 1, 0, 0.481627,-99) , 
8, 0.143725, 0, 0, 0.554216,-99) , 
NN(
NN(
0, 
0, 
-1, 2.71448, 0, 1, 0.528941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467156,-99) , 
0, 0.499044, 1, 0, 0.491707,-99) , 
5, 0.523793, 1, 0, 0.502451,-99) , 
2, 0.0706187, 0, 0, 0.511694,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.058247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498219,-99) , 
5, 0.714254, 0, 0, 0.562238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490402,-99) , 
5, 0.587337, 1, 0, 0.497314,-99) , 
2, 0.070333, 0, 0, 0.509398,-99) , 
NN(
0, 
0, 
-1, -1.78536, 0, -1, 0.455087,-99) , 
5, 0.333318, 0, 0, 0.495157,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0606295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493213,-99) , 
7, -951.286, 0, 0, 0.582166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333066,-99) , 
8, -0.147484, 0, 0, 0.459746,-99) , 
2, 0.0399519, 1, 0, 0.546186,-99) , 
NN(
NN(
0, 
0, 
-1, 0.537436, 1, 1, 0.508104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323742,-99) , 
5, 0.346961, 1, 0, 0.426112,-99) , 
5, 0.42858, 0, 0, 0.50215,-99) , 
5, 0.142825, 1, 0, 0.511066,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0808523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493063,-99) , 
3, 2.81461, 1, 0, 0.527377,-99) , 
NN(
0, 
0, 
-1, -1.20035, 0, -1, 0.471484,-99) , 
10, 0.29126, 1, 0, 0.510965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463592,-99) , 
9, -2.91579, 1, 0, 0.47943,-99) , 
NN(
0, 
0, 
-1, -1.25525, 0, -1, 0.39135,-99) , 
8, -0.711556, 0, 0, 0.468531,-99) , 
0, 0.497138, 0, 0, 0.492973,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0837808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.836712, 0, 1, 0.566975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475732,-99) , 
0, 0.5019, 0, 0, 0.488163,-99) , 
5, 0.142861, 1, 0, 0.502397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429523,-99) , 
5, 0.333061, 1, 0, 0.46224,-99) , 
NN(
0, 
0, 
-1, -0.00209309, 0, -1, 0.408944,-99) , 
10, -0.566408, 0, 0, 0.437875,-99) , 
0, 0.494281, 0, 0, 0.488555,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0697713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477293,-99) , 
9, -2.65527, 0, 0, 0.516246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4349,-99) , 
4, 0.999864, 0, 0, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447528,-99) , 
4, 0.999524, 0, 0, 0.501738,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0464747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493141,-99) , 
10, -0.957206, 0, 0, 0.559541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483575,-99) , 
0, 0.499243, 0, 0, 0.497846,-99) , 
0, 0.492966, 1, 0, 0.50398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414443,-99) , 
0, 0.489519, 0, 0, 0.500345,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.07419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0907004, 1, 1, 0.546522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462937,-99) , 
0, 0.50149, 1, 0, 0.522215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461168,-99) , 
5, 0.120168, 1, 0, 0.479485,-99) , 
5, 0.80951, 0, 0, 0.498219,-99) , 
0, 0.49333, 1, 0, 0.505145,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0752642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.575093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464334,-99) , 
5, 0.0476177, 0, 0, 0.512663,-99) , 
NN(
0, 
0, 
-1, 0.503668, 0, -1, 0.381375,-99) , 
0, 0.503124, 1, 0, 0.501094,-99) , 
0, 0.504757, 0, 0, 0.506017,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0944532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.04617, 1, 1, 0.655756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355313,-99) , 
10, -1.06551, 0, 0, 0.507599,-99) , 
0, 0.496185, 1, 0, 0.551971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457758,-99) , 
8, -1.21275, 0, 0, 0.562347,-99) , 
NN(
0, 
0, 
-1, -2.9847, 0, -1, 0.477739,-99) , 
10, -1.84203, 1, 0, 0.484564,-99) , 
5, 0.238107, 1, 0, 0.498826,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0942812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475123,-99) , 
7, -0.417644, 0, 0, 0.549354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404954,-99) , 
0, 0.491607, 0, 0, 0.484942,-99) , 
7, -951.286, 0, 0, 0.526747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446936,-99) , 
0, 0.504116, 1, 0, 0.49936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407839,-99) , 
0, 0.498479, 1, 0, 0.440608,-99) , 
0, 0.499451, 0, 0, 0.484906,-99) , 
0, 0.49809, 1, 0, 0.50511,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0541377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.391793, 1, 1, 0.515432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403174,-99) , 
0, 0.498092, 1, 0, 0.450388,-99) , 
3, 5.82159, 1, 0, 0.508321,-99) , 
NN(
0, 
0, 
-1, 0.49807, 0, -1, 0.436675,-99) , 
8, 1.85715, 1, 0, 0.497592,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0808168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.610274, 0, 1, 0.565285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475236,-99) , 
9, -1.61573, 0, 0, 0.500161,-99) , 
10, -1.45149, 1, 0, 0.509848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51985,-99) , 
NN(
0, 
0, 
-1, 1.72198, 1, -1, 0.395717,-99) , 
5, -0.863948, 1, 0, 0.45402,-99) , 
5, -0.428572, 0, 0, 0.500386,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.113099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47873,-99) , 
10, -0.740507, 0, 0, 0.533493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458178,-99) , 
7, 0.414596, 0, 0, 0.492089,-99) , 
7, -951.286, 1, 0, 0.506182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420716,-99) , 
7, -0.13714, 0, 0, 0.488366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419491,-99) , 
7, -951.286, 0, 0, 0.464249,-99) , 
10, 0.3128, 1, 0, 0.495296,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0826649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 0, 1, 0.56578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460776,-99) , 
8, 0.826667, 0, 0, 0.499555,-99) , 
10, -0.513291, 1, 0, 0.512711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458481,-99) , 
5, 0.142951, 1, 0, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0.238202, 0, -1, 0.42683,-99) , 
0, 0.499044, 1, 0, 0.466497,-99) , 
9, -2.49571, 0, 0, 0.496739,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0892294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.265357, 1, 1, 0.583483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408363,-99) , 
5, -0.714203, 0, 0, 0.566951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476725,-99) , 
10, 0.299796, 1, 0, 0.505991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4468,-99) , 
8, 0.253849, 0, 0, 0.498506,-99) , 
10, -0.962296, 1, 0, 0.517461,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0707328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428264, 1, 1, 0.590968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465361,-99) , 
0, 0.505573, 1, 0, 0.547104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452839,-99) , 
8, -1.40578, 0, 0, 0.561802,-99) , 
NN(
0, 
0, 
-1, -3.31622, 0, -1, 0.476231,-99) , 
9, -3.54525, 1, 0, 0.481909,-99) , 
0, 0.502852, 0, 0, 0.491319,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0732568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487996,-99) , 
2, -0.00135447, 0, 0, 0.560971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457419,-99) , 
5, -0.428568, 0, 0, 0.516381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45329,-99) , 
5, 0.523785, 1, 0, 0.482574,-99) , 
0, 0.500675, 1, 0, 0.508727,-99) , 
0, 0.504757, 0, 0, 0.512385,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0769333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494686,-99) , 
5, -0.673463, 0, 0, 0.524144,-99) , 
8, 1.28051, 0, 0, 0.55515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461165,-99) , 
8, -0.134466, 0, 0, 0.509166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350792,-99) , 
5, 0.0566958, 0, 0, 0.501383,-99) , 
5, -0.238087, 1, 0, 0.509594,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0625279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.73917, 1, 1, 0.519237,-99) , 
NN(
0, 
0, 
-1, 0.714963, 0, -1, 0.438929,-99) , 
4, 0.999909, 0, 0, 0.506362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423907,-99) , 
4, 0.999524, 0, 0, 0.497682,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0472325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485067,-99) , 
6, 0.00359424, 0, 0, 0.492692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394556,-99) , 
6, 0.0107825, 1, 0, 0.489213,-99) , 
0, 0.505709, 0, 0, 0.493671,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0909136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.73573, 1, 1, 0.573483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451629,-99) , 
7, -0.992599, 0, 0, 0.517993,-99) , 
NN(
0, 
0, 
-1, -0.430613, 0, -1, 0.459608,-99) , 
7, -951.286, 0, 0, 0.499713,-99) , 
5, 0.428556, 1, 0, 0.517126,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0703031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.593993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494281,-99) , 
5, 0.142889, 1, 0, 0.508029,-99) , 
8, 1.23739, 0, 0, 0.516704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442597,-99) , 
0, 0.49809, 0, 0, 0.49549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415846,-99) , 
10, 0.980371, 1, 0, 0.466462,-99) , 
10, 0.323336, 1, 0, 0.503648,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0756744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353645,-99) , 
0, 0.489519, 0, 0, 0.504447,-99) , 
8, 1.53937, 0, 0, 0.51166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446271,-99) , 
5, 0.206306, 0, 0, 0.497546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379042,-99) , 
5, 0.809526, 1, 0, 0.446523,-99) , 
9, -1.5133, 1, 0, 0.492935,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0682546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00292, 1, 1, 0.571175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480522,-99) , 
10, -0.271262, 1, 0, 0.52535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468379,-99) , 
10, -0.984, 1, 0, 0.480747,-99) , 
NN(
0, 
0, 
-1, 4.62444, 1, -1, 0.446439,-99) , 
5, 0.428563, 0, 0, 0.471901,-99) , 
0, 0.492376, 1, 0, 0.477535,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0752047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487484,-99) , 
2, 0.171254, 0, 0, 0.495686,-99) , 
8, 0.941869, 0, 0, 0.505135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428798,-99) , 
5, -0.619028, 1, 0, 0.444373,-99) , 
8, 2.18648, 0, 0, 0.463224,-99) , 
10, -0.0781661, 1, 0, 0.488588,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0981809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453077,-99) , 
5, 0.809319, 1, 0, 0.512239,-99) , 
8, -0.458512, 0, 0, 0.557197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486954,-99) , 
8, 1.72932, 1, 0, 0.534832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474593,-99) , 
8, 1.60427, 0, 0, 0.487947,-99) , 
9, -1.32952, 0, 0, 0.501328,-99) , 
10, -1.22786, 1, 0, 0.512229,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0767304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.70748, 1, 1, 0.587887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4856,-99) , 
2, 0.121638, 0, 0, 0.499762,-99) , 
9, -2.48118, 0, 0, 0.531147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482057,-99) , 
10, 0.755708, 0, 0, 0.496377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439883,-99) , 
2, 0.0712048, 1, 0, 0.486808,-99) , 
10, -0.367754, 1, 0, 0.509488,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0679511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.19778, 1, 1, 0.54884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486297,-99) , 
3, 0.538745, 1, 0, 0.497971,-99) , 
3, 3.02072, 0, 0, 0.51394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426994,-99) , 
10, 1.07696, 1, 0, 0.506877,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0802046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580508,-99) , 
NN(
NN(
0, 
0, 
-1, -2.6325, 0, 1, 0.534495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45909,-99) , 
5, 0.428564, 1, 0, 0.475457,-99) , 
10, -0.735579, 1, 0, 0.49851,-99) , 
8, 2.14154, 0, 0, 0.506642,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0272098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.504373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392004,-99) , 
1, -0.00858948, 0, 0, 0.501268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505581,-99) , 
NN(
0, 
0, 
-1, 0.498096, 0, -1, 0.382456,-99) , 
3, 2.63611, 0, 0, 0.419821,-99) , 
8, -1.00073, 0, 0, 0.494475,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0645786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484211,-99) , 
2, 0.143426, 1, 0, 0.558909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47082,-99) , 
0, 0.49428, 0, 0, 0.511212,-99) , 
2, 0.0509202, 0, 0, 0.518704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430642,-99) , 
2, 0.212852, 1, 0, 0.513632,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0814401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447056,-99) , 
0, 0.503169, 1, 0, 0.509202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458154,-99) , 
0, 0.503802, 0, 0, 0.473165,-99) , 
3, 3.01617, 1, 0, 0.497548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472611,-99) , 
2, -0.0361309, 1, 0, 0.499992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399985,-99) , 
2, 0.0400025, 0, 0, 0.423851,-99) , 
3, 2.7577, 0, 0, 0.449335,-99) , 
0, 0.49428, 0, 0, 0.487227,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0488954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490301, 1, 1, 0.614613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497819,-99) , 
0, 0.489065, 0, 0, 0.577176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449539,-99) , 
10, 0.223163, 1, 0, 0.48532,-99) , 
9, -3.75438, 1, 0, 0.490132,-99) , 
0, 0.491424, 1, 0, 0.497398,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0855196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238111, 1, 1, 0.572303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492591,-99) , 
10, -0.420783, 1, 0, 0.501379,-99) , 
9, -2.22706, 1, 0, 0.522458,-99) , 
NN(
NN(
0, 
0, 
-1, 1.93713, 1, 1, 0.540495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368369,-99) , 
0, 0.499993, 0, 0, 0.42049,-99) , 
7, -951.286, 1, 0, 0.458461,-99) , 
8, -0.425678, 0, 0, 0.510529,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0776571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.32117, 1, 1, 0.530312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426596,-99) , 
7, -951.286, 1, 0, 0.465121,-99) , 
0, 0.503803, 1, 0, 0.52304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552911,-99) , 
NN(
0, 
0, 
-1, 1.56161, 0, -1, 0.405909,-99) , 
7, -951.286, 1, 0, 0.443422,-99) , 
10, -1.78536, 0, 0, 0.514609,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0667759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499401,-99) , 
2, -0.0887011, 1, 0, 0.511472,-99) , 
10, -1.99711, 1, 0, 0.517574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459215,-99) , 
9, -1.28949, 1, 0, 0.508518,-99) , 
NN(
0, 
0, 
-1, -0.165151, 0, -1, 0.439414,-99) , 
8, 0.71747, 0, 0, 0.472688,-99) , 
5, 0.809446, 1, 0, 0.497733,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.076092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449819,-99) , 
5, 0.142917, 0, 0, 0.546476,-99) , 
0, 0.5058, 0, 0, 0.567753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373894,-99) , 
8, -1.66766, 0, 0, 0.510966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411768,-99) , 
5, 0.619042, 0, 0, 0.468154,-99) , 
10, 0.037575, 1, 0, 0.495628,-99) , 
0, 0.502852, 0, 0, 0.506146,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0566003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142649, 1, 1, 0.530247,-99) , 
NN(
0, 
0, 
-1, -1.18514, 0, -1, 0.479521,-99) , 
8, 0.8111, 0, 0, 0.499437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429821,-99) , 
10, 1.08157, 1, 0, 0.493433,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0717357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398469,-99) , 
9, -3.28486, 0, 0, 0.507187,-99) , 
9, -3.79986, 1, 0, 0.513641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455136,-99) , 
9, -2.44513, 1, 0, 0.481139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386849,-99) , 
2, 0.0527651, 1, 0, 0.451029,-99) , 
0, 0.493328, 0, 0, 0.502446,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0912446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416277,-99) , 
9, -2.53273, 0, 0, 0.509308,-99) , 
10, -1.32235, 1, 0, 0.53155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475122,-99) , 
5, 0.950145, 1, 0, 0.505116,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.454876,-99) , 
5, 0.904738, 0, 0, 0.467449,-99) , 
0, 0.494281, 1, 0, 0.479498,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0322165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442477,-99) , 
5, -0.71428, 0, 0, 0.493619,-99) , 
0, 0.490471, 1, 0, 0.498469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333015,-99) , 
6, 0.013785, 1, 0, 0.493979,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0999361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481485,-99) , 
4, 0.999991, 0, 0, 0.553221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416076,-99) , 
4, 0.999908, 0, 0, 0.540187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472939,-99) , 
8, -0.243051, 0, 0, 0.515321,-99) , 
NN(
0, 
0, 
-1, -0.465244, 0, -1, 0.465756,-99) , 
10, -0.900021, 1, 0, 0.481071,-99) , 
5, 0.714278, 1, 0, 0.504395,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0732442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428971,-99) , 
10, 0.0434926, 1, 0, 0.498796,-99) , 
8, 1.56922, 0, 0, 0.510048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449561,-99) , 
9, -1.29181, 0, 0, 0.464445,-99) , 
10, -1.79122, 1, 0, 0.471468,-99) , 
0, 0.49809, 1, 0, 0.490371,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0392468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421096,-99) , 
1, 0.00318023, 1, 0, 0.491516,-99) , 
6, 0.00742374, 0, 0, 0.495437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304784,-99) , 
6, 0.011997, 1, 0, 0.488945,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0897868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.517258, 0, 1, 0.554792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46996,-99) , 
0, 0.497136, 1, 0, 0.49668,-99) , 
8, 0.880589, 1, 0, 0.513635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592895,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.451324,-99) , 
8, 0.652596, 0, 0, 0.464147,-99) , 
9, -2.23789, 0, 0, 0.492299,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0903455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427421,-99) , 
5, 0.904744, 1, 0, 0.512321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461825,-99) , 
0, 0.490472, 1, 0, 0.466612,-99) , 
8, 1.0335, 0, 0, 0.484035,-99) , 
9, -3.73917, 1, 0, 0.489142,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0720414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481701,-99) , 
8, -0.413386, 0, 0, 0.542681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481501,-99) , 
10, 0.328668, 1, 0, 0.528571,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.547345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473182,-99) , 
0, 0.504757, 0, 0, 0.479918,-99) , 
5, -0.714177, 1, 0, 0.489194,-99) , 
3, 3.2211, 0, 0, 0.500988,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0803273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501718, 0, 1, 0.534586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468389,-99) , 
5, 0.142823, 1, 0, 0.48893,-99) , 
0, 0.503532, 1, 0, 0.523446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485286,-99) , 
8, 0.0427411, 0, 0, 0.524184,-99) , 
NN(
0, 
0, 
-1, 0.495097, 1, -1, 0.454447,-99) , 
9, -2.47433, 1, 0, 0.477264,-99) , 
0, 0.49809, 0, 0, 0.500209,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0852687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1666, 1, 1, 0.576895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402199,-99) , 
8, -1.58656, 1, 0, 0.467652,-99) , 
8, -1.14644, 0, 0, 0.539937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440985,-99) , 
5, 0.945564, 1, 0, 0.506192,-99) , 
NN(
0, 
0, 
-1, 4.39454, 1, -1, 0.45618,-99) , 
5, 0.619036, 0, 0, 0.487807,-99) , 
10, -1.31109, 1, 0, 0.496793,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0475343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592304,-99) , 
NN(
0, 
0, 
-1, 0.151043, 1, -1, 0.488717,-99) , 
8, 1.85384, 0, 0, 0.496718,-99) , 
9, -0.894493, 0, 0, 0.505419,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0537879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.809447, 1, 1, 0.631164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490882,-99) , 
10, -1.67372, 1, 0, 0.494391,-99) , 
5, -0.809509, 1, 0, 0.502629,-99) , 
9, -3.41058, 1, 0, 0.512133,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0773164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506254, 1, 1, 0.605649,-99) , 
NN(
NN(
0, 
0, 
-1, 0.407864, 0, 1, 0.52588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428975,-99) , 
0, 0.498222, 1, 0, 0.485905,-99) , 
10, 0.12556, 1, 0, 0.512926,-99) , 
0, 0.504757, 0, 0, 0.519552,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0831868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468461,-99) , 
7, -951.286, 0, 0, 0.533032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473298,-99) , 
0, 0.496188, 0, 0, 0.535592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458973,-99) , 
5, 0.918358, 0, 0, 0.47311,-99) , 
1, -0.00245895, 1, 0, 0.481935,-99) , 
5, -0.71428, 1, 0, 0.487492,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0557492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485487,-99) , 
9, -4.03222, 0, 0, 0.571999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497655,-99) , 
9, -2.46652, 1, 0, 0.51042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40069,-99) , 
7, -951.286, 1, 0, 0.454212,-99) , 
8, -0.406338, 0, 0, 0.502918,-99) , 
10, -1.99351, 1, 0, 0.507151,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0749416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469807,-99) , 
8, -0.469575, 0, 0, 0.525967,-99) , 
8, -1.28577, 1, 0, 0.530957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456092,-99) , 
9, -2.2924, 1, 0, 0.479091,-99) , 
5, 0.904681, 1, 0, 0.517931,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.089151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.160409, 1, 1, 0.613564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452095,-99) , 
3, 2.54206, 0, 0, 0.503509,-99) , 
2, -0.0161481, 0, 0, 0.568185,-99) , 
NN(
NN(
0, 
0, 
-1, -2.04402, 1, 1, 0.530961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424291,-99) , 
5, 0.428567, 0, 0, 0.491269,-99) , 
8, 0.145269, 0, 0, 0.51718,-99) , 
0, 0.5019, 0, 0, 0.527277,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0615915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.59162, 0, 1, 0.646427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474848,-99) , 
2, -0.0239254, 1, 0, 0.508658,-99) , 
5, 0.61906, 1, 0, 0.559322,-99) , 
NN(
NN(
0, 
0, 
-1, 1.75374, 0, 1, 0.510404,-99) , 
NN(
0, 
0, 
-1, 0.351007, 0, -1, 0.47618,-99) , 
0, 0.49809, 0, 0, 0.493561,-99) , 
9, -2.82576, 1, 0, 0.507169,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0653387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.592346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47539,-99) , 
8, 0.999319, 0, 0, 0.492727,-99) , 
0, 0.504756, 0, 0, 0.499423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314055,-99) , 
6, 0.0137849, 1, 0, 0.494554,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0538994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04239, 0, 1, 0.578304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428281,-99) , 
8, -0.362543, 0, 0, 0.499003,-99) , 
8, -0.716007, 1, 0, 0.507515,-99) , 
NN(
0, 
0, 
-1, 0.945573, 0, -1, 0.456038,-99) , 
5, 0.904738, 1, 0, 0.494404,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0674968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484893,-99) , 
5, -0.428626, 0, 0, 0.527517,-99) , 
1, 0.00442927, 0, 0, 0.55105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490243,-99) , 
8, 1.25497, 0, 0, 0.498986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446383,-99) , 
10, 0.375715, 1, 0, 0.487839,-99) , 
5, 0.33331, 1, 0, 0.501497,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0981424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90503, 0, 1, 0.633786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47179,-99) , 
10, -1.82151, 1, 0, 0.523229,-99) , 
8, -0.310047, 0, 0, 0.552787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467711,-99) , 
10, -0.432382, 0, 0, 0.564859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462171,-99) , 
5, 0.523792, 1, 0, 0.479059,-99) , 
0, 0.503804, 0, 0, 0.488296,-99) , 
10, -1.04677, 1, 0, 0.504069,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0418144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 1, 1, 0.545191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498037,-99) , 
1, 3.40201e-05, 1, 0, 0.570543,-99) , 
NN(
0, 
0, 
-1, -1.00052, 0, -1, 0.493741,-99) , 
0, 0.490789, 1, 0, 0.500808,-99) , 
0, 0.500947, 0, 0, 0.512333,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0803685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481513,-99) , 
0, 0.496185, 1, 0, 0.513418,-99) , 
8, -0.0778489, 0, 0, 0.537583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488134,-99) , 
8, 1.64378, 0, 0, 0.509415,-99) , 
NN(
0, 
0, 
-1, 0.498086, 0, -1, 0.461091,-99) , 
9, -1.24267, 1, 0, 0.496339,-99) , 
10, -0.976344, 1, 0, 0.507503,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0877739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.915954, 1, 1, 0.618856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4943,-99) , 
2, -0.0148864, 1, 0, 0.523811,-99) , 
8, 0.0262134, 0, 0, 0.551717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474337,-99) , 
8, 1.88017, 0, 0, 0.486609,-99) , 
9, -0.871089, 0, 0, 0.498892,-99) , 
10, -0.614307, 1, 0, 0.519455,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.064417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500949, 1, 1, 0.648934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490627,-99) , 
10, -2.24574, 1, 0, 0.525226,-99) , 
8, -0.658447, 0, 0, 0.581164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498204,-99) , 
9, -2.34346, 0, 0, 0.544213,-99) , 
NN(
0, 
0, 
-1, -0.620499, 1, 1, 0.510615,-99) , 
8, 0.316981, 1, 0, 0.518614,-99) , 
9, -2.89989, 1, 0, 0.530472,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.088173);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333319, 1, 1, 0.539258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413465,-99) , 
9, -0.945788, 1, 0, 0.474225,-99) , 
8, 1.85634, 1, 0, 0.529555,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.117649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479224,-99) , 
0, 0.503804, 1, 0, 0.545421,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.434604,-99) , 
3, 5.55483, 1, 0, 0.53009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457686,-99) , 
8, 1.4599, 1, 0, 0.484041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322311,-99) , 
8, 1.45155, 0, 0, 0.40647,-99) , 
9, -1.69479, 0, 0, 0.467846,-99) , 
10, -0.073982, 1, 0, 0.505286,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0824892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40615, 1, 1, 0.59343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474657,-99) , 
5, 0.809494, 1, 0, 0.50217,-99) , 
8, 1.23807, 0, 0, 0.510823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433651,-99) , 
9, -1.00598, 1, 0, 0.49343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445425,-99) , 
8, 1.76961, 0, 0, 0.475051,-99) , 
10, 0.306877, 1, 0, 0.501561,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0441369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446922,-99) , 
0, 0.49333, 0, 0, 0.553715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495818,-99) , 
8, 1.57069, 0, 0, 0.504441,-99) , 
1, -0.00285467, 1, 0, 0.510296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37975,-99) , 
6, 0.0119971, 1, 0, 0.50618,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.086271);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0476255, 1, 1, 0.533534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471178,-99) , 
9, -1.08041, 1, 0, 0.529589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395635,-99) , 
9, -1.50383, 0, 0, 0.460588,-99) , 
8, 1.76799, 0, 0, 0.493505,-99) , 
10, 0.0316521, 1, 0, 0.519156,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0603287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.48968, 1, 1, 0.55152,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.534042,-99) , 
NN(
0, 
0, 
-1, -0.0844056, 1, -1, 0.479329,-99) , 
10, -1.21912, 1, 0, 0.493978,-99) , 
8, 1.57145, 0, 0, 0.506379,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0587835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1821, 0, 1, 0.569684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453664,-99) , 
6, 0.00219304, 1, 0, 0.505296,-99) , 
1, 0.00032106, 0, 0, 0.533738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482672,-99) , 
10, -1.81543, 1, 0, 0.489211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397149,-99) , 
8, -1.5716, 0, 0, 0.485883,-99) , 
0, 0.502852, 0, 0, 0.493493,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0889138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.845757, 1, 1, 0.572865,-99) , 
NN(
0, 
0, 
-1, 0.498096, 0, -1, 0.468969,-99) , 
5, -0.618976, 0, 0, 0.553667,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498096, 1, 1, 0.607949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472486,-99) , 
10, -0.947472, 1, 0, 0.488879,-99) , 
5, -0.714185, 1, 0, 0.499653,-99) , 
1, -0.00116413, 1, 0, 0.51625,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0729532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477895,-99) , 
2, -0.011451, 0, 0, 0.531807,-99) , 
10, -1.13806, 1, 0, 0.549524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499728,-99) , 
10, -0.819561, 1, 0, 0.541399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476405,-99) , 
0, 0.491968, 1, 0, 0.48557,-99) , 
0, 0.502852, 0, 0, 0.493761,-99) , 
5, 0.142866, 1, 0, 0.503981,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0841327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 0, 1, 0.631487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445454,-99) , 
0, 0.503802, 1, 0, 0.513246,-99) , 
8, 0.755243, 0, 0, 0.524671,-99) , 
NN(
NN(
0, 
0, 
-1, 0.989513, 1, 1, 0.52791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429214,-99) , 
8, 1.6152, 0, 0, 0.454664,-99) , 
9, -1.17453, 0, 0, 0.48384,-99) , 
10, -0.244373, 1, 0, 0.505662,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0681731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476664,-99) , 
8, 0.389237, 0, 0, 0.521196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354537,-99) , 
4, 0.999906, 0, 0, 0.491199,-99) , 
5, 0.714265, 0, 0, 0.508615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386302,-99) , 
8, -1.57134, 0, 0, 0.504217,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0670937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49233, 0, 1, 0.60033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460408,-99) , 
10, 0.048208, 1, 0, 0.514926,-99) , 
3, 3.41681, 0, 0, 0.535202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475298,-99) , 
1, 0.000143512, 1, 0, 0.5241,-99) , 
NN(
0, 
0, 
-1, -2.4202, 0, -1, 0.478672,-99) , 
2, 0.0709487, 0, 0, 0.485836,-99) , 
0, 0.495233, 1, 0, 0.498231,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0992748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445485,-99) , 
2, -0.0862231, 0, 0, 0.551035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476116,-99) , 
0, 0.501897, 0, 0, 0.494416,-99) , 
3, 2.62971, 1, 0, 0.527517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557667,-99) , 
NN(
0, 
0, 
-1, 0.499038, 0, -1, 0.455215,-99) , 
9, -1.49018, 1, 0, 0.470609,-99) , 
10, 0.335455, 1, 0, 0.513034,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0731974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459669,-99) , 
5, 0.896329, 0, 0, 0.521935,-99) , 
5, 0.854867, 1, 0, 0.540486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486968,-99) , 
9, -3.38887, 1, 0, 0.49158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345368,-99) , 
8, -1.56782, 0, 0, 0.485232,-99) , 
5, 0.809505, 0, 0, 0.508589,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0851905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450916,-99) , 
8, -0.904852, 0, 0, 0.528292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442053,-99) , 
8, 0.678416, 0, 0, 0.488495,-99) , 
8, 0.137125, 1, 0, 0.503117,-99) , 
9, -0.995295, 0, 0, 0.511451,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0679787);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49948,-99) , 
2, -0.0147708, 1, 0, 0.522629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425595,-99) , 
8, 0.423271, 0, 0, 0.473075,-99) , 
5, 0.0476098, 0, 0, 0.511468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432885,-99) , 
4, 0.999524, 0, 0, 0.503833,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0495362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457352,-99) , 
4, 0.999932, 0, 0, 0.499544,-99) , 
9, -1.17029, 0, 0, 0.509942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45925,-99) , 
4, 0.999524, 0, 0, 0.504785,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0868954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71428, 1, 1, 0.54449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369197,-99) , 
8, -1.28271, 0, 0, 0.534717,-99) , 
NN(
NN(
0, 
0, 
-1, -3.32779, 1, 1, 0.593014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405191,-99) , 
5, 0.238045, 0, 0, 0.475789,-99) , 
9, -2.99677, 1, 0, 0.492894,-99) , 
0, 0.499043, 1, 0, 0.516987,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0380821);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554313,-99) , 
NN(
0, 
0, 
-1, 0.213964, 1, -1, 0.487632,-99) , 
8, 2.1431, 0, 0, 0.493805,-99) , 
0, 0.489519, 1, 0, 0.497273,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0656784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.198873, 0, 1, 0.520045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429439,-99) , 
9, -3.94652, 1, 0, 0.462814,-99) , 
8, -0.646904, 0, 0, 0.509985,-99) , 
NN(
0, 
0, 
-1, 0.497135, 1, -1, 0.456606,-99) , 
10, 0.379511, 1, 0, 0.497373,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0716251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484139,-99) , 
10, 0.230158, 1, 0, 0.509727,-99) , 
9, -2.82317, 1, 0, 0.517015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539253,-99) , 
NN(
0, 
0, 
-1, -1.55581, 1, -1, 0.439086,-99) , 
9, -2.97737, 0, 0, 0.475001,-99) , 
8, -0.142677, 0, 0, 0.506122,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.08456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488299,-99) , 
8, -0.145619, 1, 0, 0.519443,-99) , 
0, 0.503803, 0, 0, 0.543191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483253,-99) , 
9, -1.46931, 1, 0, 0.509468,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.447617,-99) , 
9, -2.20034, 0, 0, 0.482247,-99) , 
5, 0.333329, 1, 0, 0.495492,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0930282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401418, 1, 1, 0.622431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419038,-99) , 
0, 0.500947, 1, 0, 0.499088,-99) , 
7, -951.286, 0, 0, 0.558916,-99) , 
NN(
NN(
0, 
0, 
-1, 0.138121, 1, 1, 0.553588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464806,-99) , 
8, 1.56978, 0, 0, 0.477586,-99) , 
2, 0.0706187, 0, 0, 0.490575,-99) , 
5, 0.142826, 1, 0, 0.503644,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0673638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.564606, 1, 1, 0.524996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376705,-99) , 
5, 0.292415, 1, 0, 0.512338,-99) , 
NN(
0, 
0, 
-1, -0.567721, 0, -1, 0.392213,-99) , 
3, 3.40184, 1, 0, 0.48551,-99) , 
5, 0.428527, 0, 0, 0.514951,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0421476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.454698, 1, -1, 0.489183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35952,-99) , 
10, -2.37232, 1, 0, 0.420619,-99) , 
8, -0.999926, 0, 0, 0.483336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396378,-99) , 
0, 0.489519, 0, 0, 0.480279,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0751825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.277964, 0, 1, 0.556916,-99) , 
NN(
NN(
0, 
0, 
-1, 0.697093, 1, 1, 0.518122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420624,-99) , 
5, -0.714246, 1, 0, 0.444314,-99) , 
9, -2.33791, 0, 0, 0.500437,-99) , 
10, -1.20952, 1, 0, 0.511315,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0840922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.399341, 1, 1, 0.668205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426253,-99) , 
0, 0.498092, 0, 0, 0.488859,-99) , 
8, -0.665903, 0, 0, 0.548261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487311,-99) , 
9, -1.30158, 0, 0, 0.50193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352289,-99) , 
8, 0.202409, 0, 0, 0.416479,-99) , 
9, -2.76009, 0, 0, 0.493462,-99) , 
10, -1.31335, 1, 0, 0.502991,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0451233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86626, 1, 1, 0.581645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463463,-99) , 
0, 0.500947, 1, 0, 0.495029,-99) , 
9, -3.28318, 1, 0, 0.500661,-99) , 
NN(
0, 
0, 
-1, -4.18509, 0, -1, 0.408504,-99) , 
8, -1.28594, 0, 0, 0.49598,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0684392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46468,-99) , 
0, 0.494282, 0, 0, 0.532192,-99) , 
NN(
0, 
0, 
-1, -0.142802, 0, -1, 0.473219,-99) , 
2, 0.0752647, 0, 0, 0.482815,-99) , 
5, -0.904755, 1, 0, 0.488555,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0711484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.234296, 0, 1, 0.581049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498248,-99) , 
2, 0.0599145, 0, 0, 0.510942,-99) , 
5, 0.523854, 1, 0, 0.527439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474368,-99) , 
8, 1.02375, 1, 0, 0.488289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317837,-99) , 
8, 0.884811, 0, 0, 0.421602,-99) , 
9, -2.06938, 0, 0, 0.478888,-99) , 
10, -0.439788, 1, 0, 0.501658,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0658882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492145, 0, 1, 0.597076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482591,-99) , 
10, -0.240189, 1, 0, 0.507428,-99) , 
0, 0.492966, 1, 0, 0.516232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403488,-99) , 
0, 0.489519, 0, 0, 0.511996,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.055448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.414908, 1, 1, 0.528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483809,-99) , 
8, 0.617626, 0, 0, 0.494317,-99) , 
9, -2.34065, 0, 0, 0.511318,-99) , 
NN(
0, 
0, 
-1, 2.14357, 0, -1, 0.466561,-99) , 
10, 0.495494, 1, 0, 0.501987,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0814698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.537832,-99) , 
NN(
0, 
0, 
-1, 0.714919, 0, -1, 0.456501,-99) , 
4, 0.999932, 0, 0, 0.521357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445244,-99) , 
4, 0.999524, 0, 0, 0.513325,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0597949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.382743, 0, 1, 0.53261,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.551395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46844,-99) , 
8, 1.35943, 0, 0, 0.49394,-99) , 
10, -0.48372, 1, 0, 0.500065,-99) , 
10, -0.672448, 1, 0, 0.512069,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0848271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.33613, 1, 1, 0.544364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477996,-99) , 
0, 0.490108, 1, 0, 0.487608,-99) , 
0, 0.49809, 0, 0, 0.515255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457311,-99) , 
9, -0.96955, 0, 0, 0.485958,-99) , 
NN(
0, 
0, 
-1, -1.50383, 1, -1, 0.410913,-99) , 
5, 0.333341, 0, 0, 0.463348,-99) , 
10, 0.015409, 1, 0, 0.496003,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0687626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497551,-99) , 
5, 0.904666, 0, 0, 0.511044,-99) , 
9, -2.50351, 1, 0, 0.519428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470811,-99) , 
5, 0.600817, 1, 0, 0.484932,-99) , 
NN(
0, 
0, 
-1, -0.0616012, 0, -1, 0.406196,-99) , 
5, -0.0476811, 0, 0, 0.465494,-99) , 
8, 0.427569, 0, 0, 0.496125,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0820569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333108, 1, 1, 0.565301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480828,-99) , 
10, 0.160372, 1, 0, 0.507822,-99) , 
9, -2.67958, 1, 0, 0.521664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474434,-99) , 
8, 0.432744, 1, 0, 0.500338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354218,-99) , 
9, -2.15619, 0, 0, 0.426213,-99) , 
5, 0.142942, 0, 0, 0.481525,-99) , 
0, 0.499042, 1, 0, 0.504842,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.070043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76095, 1, 1, 0.531082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471291,-99) , 
8, 0.434196, 0, 0, 0.493437,-99) , 
5, 0.904747, 1, 0, 0.518732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451901,-99) , 
3, 2.81691, 0, 0, 0.47284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355026,-99) , 
10, -1.61248, 0, 0, 0.45738,-99) , 
5, 0.333326, 0, 0, 0.503711,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0402661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.420016, 0, 1, 0.571261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469086,-99) , 
0, 0.49808, 0, 0, 0.505905,-99) , 
1, 0.000419832, 0, 0, 0.537121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493129,-99) , 
10, -1.99711, 1, 0, 0.497876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393771,-99) , 
0, 0.489519, 0, 0, 0.494412,-99) , 
2, -0.0829858, 1, 0, 0.500862,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0574092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482286,-99) , 
9, -1.2832, 0, 0, 0.491264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403411,-99) , 
5, -0.904755, 0, 0, 0.485312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34324,-99) , 
6, 0.012485, 1, 0, 0.481021,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0722164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65626, 1, 1, 0.552113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470526,-99) , 
9, -2.40598, 1, 0, 0.496513,-99) , 
8, 1.28574, 0, 0, 0.51261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451874,-99) , 
4, 0.999524, 0, 0, 0.505807,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.116778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.556962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328195,-99) , 
0, 0.499995, 1, 0, 0.449913,-99) , 
8, -0.713579, 0, 0, 0.544077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472969,-99) , 
8, -0.169413, 0, 0, 0.518192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431378,-99) , 
7, -951.286, 1, 0, 0.458453,-99) , 
10, -0.837955, 1, 0, 0.476968,-99) , 
1, 3.43699e-05, 0, 0, 0.510717,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0695763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93251, 0, 1, 0.528977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449551,-99) , 
0, 0.498087, 1, 0, 0.48199,-99) , 
10, -0.0994831, 1, 0, 0.507627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513306,-99) , 
NN(
0, 
0, 
-1, -2.45666, 1, -1, 0.405392,-99) , 
8, -0.911956, 0, 0, 0.439587,-99) , 
9, -3.38551, 0, 0, 0.50108,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0678517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35558, 0, 1, 0.52297,-99) , 
NN(
0, 
0, 
-1, -0.561328, 1, -1, 0.462602,-99) , 
5, 0.904739, 1, 0, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388924,-99) , 
10, 1.07696, 1, 0, 0.496759,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0676279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.341161, 1, 1, 0.528088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432746,-99) , 
9, -2.59332, 0, 0, 0.483303,-99) , 
0, 0.499134, 1, 0, 0.507767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535318,-99) , 
NN(
0, 
0, 
-1, -0.00629062, 1, -1, 0.370874,-99) , 
3, 2.79557, 0, 0, 0.423304,-99) , 
0, 0.491425, 0, 0, 0.499362,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0910727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.572194, 1, 1, 0.611311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410816,-99) , 
0, 0.503803, 1, 0, 0.499383,-99) , 
8, 0.717888, 0, 0, 0.5421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473716,-99) , 
10, -1.22846, 1, 0, 0.489761,-99) , 
NN(
0, 
0, 
-1, -2.36703, 1, -1, 0.397521,-99) , 
9, -3.51194, 0, 0, 0.482229,-99) , 
5, 0.333319, 1, 0, 0.495041,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0501536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488594,-99) , 
9, -2.11924, 1, 0, 0.507859,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.476007,-99) , 
5, 0.809504, 0, 0, 0.490013,-99) , 
10, -2.35917, 1, 0, 0.493169,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.06802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.82346, 1, 1, 0.604534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36502,-99) , 
8, -0.913894, 0, 0, 0.445494,-99) , 
0, 0.499993, 1, 0, 0.544348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45645,-99) , 
3, 3.75356, 1, 0, 0.493447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354268,-99) , 
10, -1.40347, 0, 0, 0.488724,-99) , 
8, -0.426418, 1, 0, 0.497819,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.100312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469711,-99) , 
9, -1.79206, 1, 0, 0.508431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429628,-99) , 
9, -2.52356, 0, 0, 0.457399,-99) , 
8, 0.240857, 0, 0, 0.49082,-99) , 
9, -3.66339, 1, 0, 0.495479,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0384086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.29179, 1, 1, 0.543327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590484,-99) , 
NN(
0, 
0, 
-1, 0.492104, 0, -1, 0.487618,-99) , 
0, 0.489519, 1, 0, 0.490888,-99) , 
8, 1.85634, 0, 0, 0.498866,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0766965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442963,-99) , 
0, 0.499036, 1, 0, 0.537354,-99) , 
8, -1.04114, 0, 0, 0.582291,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0863656, 1, 1, 0.523501,-99) , 
NN(
0, 
0, 
-1, -0.455316, 0, -1, 0.377281,-99) , 
9, -3.24019, 0, 0, 0.515207,-99) , 
8, -0.714624, 1, 0, 0.522126,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0614481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492275,-99) , 
9, -2.62896, 1, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.444411,-99) , 
8, 0.240857, 0, 0, 0.479826,-99) , 
10, -2.38843, 1, 0, 0.483485,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0854646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.537401, 1, 1, 0.562006,-99) , 
NN(
0, 
0, 
-1, 1.70627, 1, -1, 0.414167,-99) , 
5, -0.61882, 0, 0, 0.528569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49161,-99) , 
8, 0.840756, 1, 0, 0.506815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412844,-99) , 
9, -2.74807, 1, 0, 0.45568,-99) , 
9, -2.10866, 0, 0, 0.482075,-99) , 
1, -0.00116413, 1, 0, 0.495898,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0794719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50072, 1, 1, 0.540747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450435,-99) , 
8, 0.428716, 0, 0, 0.490692,-99) , 
0, 0.499994, 0, 0, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43077,-99) , 
4, 0.999525, 0, 0, 0.500023,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0595983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450519,-99) , 
5, 0.428701, 0, 0, 0.543086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485949,-99) , 
0, 0.505165, 0, 0, 0.490239,-99) , 
2, -0.0707239, 1, 0, 0.499091,-99) , 
NN(
0, 
0, 
-1, 0.000910608, 1, -1, 0.403192,-99) , 
0, 0.490471, 0, 0, 0.493332,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0706795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62264,-99) , 
NN(
NN(
0, 
0, 
-1, -2.4385, 1, 1, 0.524177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450997,-99) , 
3, 2.84669, 0, 0, 0.48082,-99) , 
8, 0.230163, 0, 0, 0.510062,-99) , 
10, -2.13472, 1, 0, 0.514725,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.102963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523846, 1, 1, 0.533804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397576,-99) , 
10, -1.57909, 1, 0, 0.470474,-99) , 
8, -0.289463, 0, 0, 0.503643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434346,-99) , 
7, -951.286, 1, 0, 0.464296,-99) , 
NN(
0, 
0, 
-1, -0.233616, 1, -1, 0.414374,-99) , 
5, 0.238102, 0, 0, 0.453428,-99) , 
9, -2.23941, 1, 0, 0.473851,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0627289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48369,-99) , 
3, 4.52364, 1, 0, 0.580869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438017,-99) , 
2, 0.1237, 1, 0, 0.476172,-99) , 
7, -951.286, 0, 0, 0.540747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492025,-99) , 
8, 1.567, 0, 0, 0.510926,-99) , 
NN(
0, 
0, 
-1, 0.497131, 0, -1, 0.479101,-99) , 
5, 0.714217, 1, 0, 0.49179,-99) , 
2, 0.0599145, 0, 0, 0.500593,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0609894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483012,-99) , 
8, 0.917898, 0, 0, 0.510224,-99) , 
9, -2.49162, 1, 0, 0.514956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473542,-99) , 
9, -3.73735, 1, 0, 0.486126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442326,-99) , 
5, 0.904453, 1, 0, 0.474087,-99) , 
8, 0.428107, 0, 0, 0.497302,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0500322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618861, 1, 1, 0.538299,-99) , 
NN(
0, 
0, 
-1, 2.80635, 1, -1, 0.480273,-99) , 
0, 0.493827, 1, 0, 0.488206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3995,-99) , 
0, 0.489519, 0, 0, 0.485111,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0809344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145204, 0, 1, 0.568979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441187,-99) , 
3, 1.52731, 1, 0, 0.496543,-99) , 
7, -951.286, 0, 0, 0.533049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478664,-99) , 
0, 0.499996, 1, 0, 0.517985,-99) , 
NN(
0, 
0, 
-1, -2.42747, 0, -1, 0.463238,-99) , 
5, 0.818576, 0, 0, 0.491708,-99) , 
5, 0.238096, 1, 0, 0.499933,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.044857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582415,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498852, 1, 1, 0.510837,-99) , 
NN(
0, 
0, 
-1, 0.503803, 1, -1, 0.467791,-99) , 
3, 2.77013, 1, 0, 0.494624,-99) , 
5, -0.904755, 1, 0, 0.499497,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0946728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523768, 1, 1, 0.543223,-99) , 
NN(
0, 
0, 
-1, -1.60695, 0, -1, 0.388724,-99) , 
7, -1.28075, 0, 0, 0.524331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478698,-99) , 
3, 5.12461, 0, 0, 0.495118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444108,-99) , 
10, 0.216642, 1, 0, 0.480254,-99) , 
7, -951.286, 0, 0, 0.508681,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0689129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.23768, 1, 1, 0.540749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462852,-99) , 
5, 0.269831, 0, 0, 0.498687,-99) , 
0, 0.499042, 1, 0, 0.522296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436852,-99) , 
5, 0.954662, 0, 0, 0.477362,-99) , 
5, 0.904747, 1, 0, 0.51054,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0830476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809505, 1, 1, 0.597756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430541,-99) , 
5, 0.428598, 0, 0, 0.555415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48709,-99) , 
7, -951.286, 0, 0, 0.56046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472771,-99) , 
2, -0.0704421, 1, 0, 0.48423,-99) , 
5, -0.714282, 1, 0, 0.492819,-99) , 
10, -1.61248, 1, 0, 0.500204,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0690579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46306,-99) , 
3, 1.6935, 1, 0, 0.535518,-99) , 
9, -2.80573, 1, 0, 0.567759,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502988, 1, 1, 0.552257,-99) , 
NN(
0, 
0, 
-1, 0.491696, 0, -1, 0.485609,-99) , 
0, 0.5019, 0, 0, 0.497645,-99) , 
5, 0.0475908, 1, 0, 0.509812,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0717953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.891154, 0, 1, 0.578549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490572,-99) , 
10, -0.179425, 1, 0, 0.515967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337745,-99) , 
5, -0.469357, 0, 0, 0.506945,-99) , 
5, -0.714268, 1, 0, 0.514442,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0497145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.638181, 0, 1, 0.578692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438929,-99) , 
9, -2.68269, 0, 0, 0.496589,-99) , 
9, -3.13737, 1, 0, 0.504933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374719,-99) , 
8, -1.5716, 0, 0, 0.500358,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0769251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484778,-99) , 
2, -0.0865392, 0, 0, 0.557204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481213,-99) , 
8, 1.56862, 1, 0, 0.541035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493963,-99) , 
7, 0.823981, 0, 0, 0.511694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350723,-99) , 
7, -1.56989, 0, 0, 0.499724,-99) , 
7, -951.286, 1, 0, 0.514232,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0755397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.595082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46915,-99) , 
0, 0.494279, 0, 0, 0.514519,-99) , 
5, -0.714141, 1, 0, 0.522294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423102,-99) , 
10, -1.45786, 1, 0, 0.481396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365945,-99) , 
5, -0.809431, 0, 0, 0.461265,-99) , 
8, -0.143673, 0, 0, 0.506749,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0316677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.210551, 0, 1, 0.513329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450795,-99) , 
10, 1.07696, 1, 0, 0.508971,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.112018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419933,-99) , 
5, -0.713844, 0, 0, 0.533808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453497,-99) , 
7, 0.183754, 0, 0, 0.489879,-99) , 
7, -951.286, 1, 0, 0.504908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393168,-99) , 
5, 0.42851, 1, 0, 0.431107,-99) , 
0, 0.491424, 0, 0, 0.498838,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0639802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486846,-99) , 
5, -0.673439, 0, 0, 0.532886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475103,-99) , 
0, 0.495233, 1, 0, 0.486303,-99) , 
5, -0.142839, 1, 0, 0.493859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39969,-99) , 
9, -3.84362, 0, 0, 0.489511,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0742337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366533,-99) , 
9, -2.03638, 0, 0, 0.497192,-99) , 
10, -0.287688, 1, 0, 0.505186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47044,-99) , 
8, 0.360453, 0, 0, 0.480805,-99) , 
NN(
0, 
0, 
-1, -2.33896, 0, -1, 0.422909,-99) , 
10, -0.635853, 1, 0, 0.465668,-99) , 
8, 0.714413, 0, 0, 0.484463,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0338238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.60691, 1, 1, 0.504885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366473,-99) , 
10, -2.35069, 1, 0, 0.442932,-99) , 
8, -1.00054, 0, 0, 0.499864,-99) , 
NN(
0, 
0, 
-1, 0.505708, 0, -1, 0.445049,-99) , 
0, 0.504756, 1, 0, 0.495634,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0516015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499793,-99) , 
10, -0.680917, 1, 0, 0.51531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362509,-99) , 
8, 0.601557, 0, 0, 0.448034,-99) , 
0, 0.491424, 0, 0, 0.509632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3796,-99) , 
8, -1.57178, 0, 0, 0.505363,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0724331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86642, 1, 1, 0.541748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451937,-99) , 
5, 0.954646, 1, 0, 0.495723,-99) , 
5, 0.80951, 1, 0, 0.520191,-99) , 
NN(
0, 
0, 
-1, 0.46906, 0, -1, 0.431025,-99) , 
0, 0.491424, 0, 0, 0.512233,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.100047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425504,-99) , 
7, -1.28486, 0, 0, 0.535031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46022,-99) , 
0, 0.504347, 0, 0, 0.476115,-99) , 
7, -951.286, 0, 0, 0.513534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540777,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.447517,-99) , 
0, 0.489247, 1, 0, 0.454484,-99) , 
0, 0.496185, 0, 0, 0.493045,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0787278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.59029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
10, -0.0990975, 0, 0, 0.514317,-99) , 
10, -0.935397, 1, 0, 0.532735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497799,-99) , 
8, 0.442573, 0, 0, 0.521511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454089,-99) , 
9, -2.70927, 1, 0, 0.468707,-99) , 
1, -0.000252493, 1, 0, 0.491337,-99) , 
5, 0.809503, 1, 0, 0.513913,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0514301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00131713, 1, 1, 0.604852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436273,-99) , 
2, -0.153051, 0, 0, 0.50223,-99) , 
10, -1.39007, 1, 0, 0.509139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0.498086, 0, -1, 0.388419,-99) , 
2, -0.0121806, 1, 0, 0.422465,-99) , 
9, -3.33279, 0, 0, 0.499768,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0527001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488842,-99) , 
5, 0.61907, 0, 0, 0.535671,-99) , 
NN(
0, 
0, 
-1, 1.8581, 1, -1, 0.476591,-99) , 
2, -0.0829858, 1, 0, 0.485445,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0551763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493092,-99) , 
10, -1.81691, 1, 0, 0.500435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420602,-99) , 
0, 0.494281, 1, 0, 0.444,-99) , 
2, -0.0860026, 0, 0, 0.491552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428642,-99) , 
10, 0.880332, 1, 0, 0.484412,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0448739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.801718, 1, 1, 0.521468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462961,-99) , 
3, 7.39984, 1, 0, 0.517885,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.033233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588191,-99) , 
NN(
NN(
0, 
0, 
-1, -0.46139, 1, 1, 0.553588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446182,-99) , 
3, 6.30556, 1, 0, 0.498285,-99) , 
0, 0.492376, 1, 0, 0.504286,-99) , 
10, -2.06661, 1, 0, 0.508199,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0611978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00564724, 1, 1, 0.569384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454477,-99) , 
5, 0.714268, 0, 0, 0.488514,-99) , 
6, 0.00458327, 0, 0, 0.496696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384343,-99) , 
6, 0.0120365, 1, 0, 0.493303,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0652501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.28293, 1, 1, 0.53777,-99) , 
NN(
0, 
0, 
-1, -0.694031, 0, -1, 0.486568,-99) , 
5, 0.71428, 1, 0, 0.506838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424058,-99) , 
9, -2.5746, 0, 0, 0.494631,-99) , 
NN(
0, 
0, 
-1, 0.49903, 0, -1, 0.389673,-99) , 
3, 3.40104, 1, 0, 0.444017,-99) , 
2, -0.0710868, 0, 0, 0.495394,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0759764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469425,-99) , 
5, 0.809534, 1, 0, 0.510888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455417,-99) , 
7, -951.286, 1, 0, 0.471829,-99) , 
0, 0.499043, 0, 0, 0.487152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500138,-99) , 
NN(
0, 
0, 
-1, 0.499177, 1, -1, 0.429213,-99) , 
0, 0.503803, 0, 0, 0.440684,-99) , 
2, 0.0706187, 1, 0, 0.478865,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0543968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.2555, 1, 1, 0.572128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456438,-99) , 
10, 0.39376, 1, 0, 0.494404,-99) , 
6, 0.00359426, 0, 0, 0.506673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381442,-99) , 
6, 0.0107826, 1, 0, 0.502332,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0565868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49999, 0, 1, 0.591066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47919,-99) , 
1, 2.88684e-05, 1, 0, 0.498165,-99) , 
1, 0.00327849, 0, 0, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32872,-99) , 
6, 0.013785, 1, 0, 0.502933,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0660592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473719,-99) , 
8, 0.433249, 1, 0, 0.501859,-99) , 
5, 0.238292, 1, 0, 0.517455,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489971, 0, 1, 0.547879,-99) , 
NN(
0, 
0, 
-1, 0.238094, 0, -1, 0.470363,-99) , 
0, 0.491424, 1, 0, 0.475968,-99) , 
2, 0.0706187, 0, 0, 0.483087,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0477977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714241, 1, 1, 0.521599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449885,-99) , 
10, 1.07696, 1, 0, 0.515862,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0326404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580068,-99) , 
NN(
0, 
0, 
-1, 0.492022, 0, -1, 0.489893,-99) , 
0, 0.491243, 1, 0, 0.493358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40446,-99) , 
0, 0.489519, 0, 0, 0.489576,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.077802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42306, 1, 1, 0.57374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391461,-99) , 
0, 0.492375, 0, 0, 0.536318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477257,-99) , 
3, 3.7751, 0, 0, 0.490193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360574,-99) , 
5, 0.238191, 0, 0, 0.482767,-99) , 
5, -0.142805, 1, 0, 0.491536,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0636301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56687, 1, 1, 0.559691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483223,-99) , 
0, 0.495233, 0, 0, 0.539766,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.566984,-99) , 
NN(
0, 
0, 
-1, -0.120907, 1, -1, 0.485865,-99) , 
5, -0.238092, 1, 0, 0.498724,-99) , 
9, -1.66544, 0, 0, 0.513343,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0379449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.746465, 0, 1, 0.551628,-99) , 
NN(
0, 
0, 
-1, -2.95947, 0, -1, 0.491394,-99) , 
10, -1.58853, 1, 0, 0.498192,-99) , 
NN(
0, 
0, 
-1, 0.506253, 0, -1, 0.416452,-99) , 
0, 0.504757, 1, 0, 0.491774,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0797211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0123237, 1, 1, 0.523838,-99) , 
NN(
0, 
0, 
-1, 0.428254, 0, -1, 0.447741,-99) , 
2, -0.0857209, 0, 0, 0.512523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589645,-99) , 
NN(
0, 
0, 
-1, 2.81873, 1, -1, 0.440346,-99) , 
1, 0.00342822, 0, 0, 0.454123,-99) , 
0, 0.499995, 1, 0, 0.492614,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0599412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391259,-99) , 
8, -0.574322, 0, 0, 0.512435,-99) , 
10, -1.73754, 1, 0, 0.518238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449889,-99) , 
9, -3.73917, 0, 0, 0.514721,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0515341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72274, 1, 1, 0.519372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388183,-99) , 
0, 0.499036, 1, 0, 0.449404,-99) , 
8, -1.08664, 0, 0, 0.514446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437169,-99) , 
10, 1.07696, 1, 0, 0.508032,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0831511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463507,-99) , 
0, 0.502535, 1, 0, 0.511248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469329,-99) , 
5, 0.333302, 1, 0, 0.477262,-99) , 
0, 0.499995, 0, 0, 0.489097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375952,-99) , 
10, -2.19062, 1, 0, 0.471665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350187,-99) , 
5, 0.238078, 0, 0, 0.430468,-99) , 
9, -3.46044, 0, 0, 0.484076,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0540463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.546472, 1, 1, 0.538312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482882,-99) , 
8, 0.429693, 1, 0, 0.498842,-99) , 
0, 0.500947, 0, 0, 0.508719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434012,-99) , 
5, -0.904756, 0, 0, 0.504109,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0730475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4431,-99) , 
0, 0.490476, 0, 0, 0.518613,-99) , 
NN(
0, 
0, 
-1, 1.96678, 1, -1, 0.442636,-99) , 
8, -0.999926, 0, 0, 0.512672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414536,-99) , 
1, 0.000106023, 1, 0, 0.464893,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.382204,-99) , 
5, 0.428784, 0, 0, 0.440852,-99) , 
2, 0.0580684, 1, 0, 0.497756,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0550712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487254,-99) , 
0, 0.498099, 0, 0, 0.56369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458702,-99) , 
7, -951.286, 0, 0, 0.489349,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.411824,-99) , 
8, -0.618767, 0, 0, 0.48414,-99) , 
8, -0.999554, 1, 0, 0.489249,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0544716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473877,-99) , 
5, 0.466362, 0, 0, 0.56418,-99) , 
NN(
0, 
0, 
-1, 0.64629, 0, -1, 0.486689,-99) , 
5, 0.587298, 1, 0, 0.494279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53418,-99) , 
NN(
0, 
0, 
-1, 0.266261, 0, -1, 0.447564,-99) , 
10, -1.1842, 1, 0, 0.461164,-99) , 
5, 0.333322, 0, 0, 0.486761,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0479173);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495116,-99) , 
0, 0.503802, 0, 0, 0.507635,-99) , 
NN(
0, 
0, 
-1, -1.5705, 0, -1, 0.475125,-99) , 
7, -951.286, 1, 0, 0.486191,-99) , 
9, -4.02901, 1, 0, 0.489091,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0735431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.650744, 1, 1, 0.55963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362358,-99) , 
9, -2.76855, 0, 0, 0.508816,-99) , 
10, -1.18017, 1, 0, 0.519414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469966,-99) , 
10, -0.332774, 1, 0, 0.503118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397259,-99) , 
10, -0.932154, 0, 0, 0.474092,-99) , 
5, -0.0476041, 0, 0, 0.51107,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0362054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423766,-99) , 
9, -3.67412, 0, 0, 0.501858,-99) , 
2, 0.210551, 0, 0, 0.506943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398876,-99) , 
6, 0.0120364, 1, 0, 0.503821,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0914329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.273076, 1, 1, 0.631632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471046,-99) , 
3, 2.31538, 1, 0, 0.516666,-99) , 
5, -0.115643, 0, 0, 0.546305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471319,-99) , 
5, 0.864161, 1, 0, 0.519119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458173,-99) , 
5, 0.918285, 0, 0, 0.478638,-99) , 
9, -1.50357, 0, 0, 0.491156,-99) , 
5, 0.428567, 1, 0, 0.503485,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0808724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480921,-99) , 
0, 0.500947, 1, 0, 0.593551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398616,-99) , 
0, 0.499036, 1, 0, 0.457172,-99) , 
8, -1.15795, 0, 0, 0.544804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475925,-99) , 
4, 0.999977, 0, 0, 0.509684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441439,-99) , 
4, 0.999524, 0, 0, 0.502917,-99) , 
10, -1.34562, 1, 0, 0.50994,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0632986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46429,-99) , 
0, 0.494265, 0, 0, 0.499398,-99) , 
0, 0.490154, 1, 0, 0.504486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492596,-99) , 
9, -1.82536, 1, 0, 0.524269,-99) , 
NN(
0, 
0, 
-1, -0.0770949, 0, -1, 0.421491,-99) , 
8, 0.716835, 0, 0, 0.465382,-99) , 
0, 0.500947, 1, 0, 0.49319,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0752476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482051,-99) , 
0, 0.505074, 1, 0, 0.559527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480372,-99) , 
5, 0.80947, 1, 0, 0.524993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482275,-99) , 
8, 0.480277, 0, 0, 0.533606,-99) , 
NN(
0, 
0, 
-1, -0.0793183, 0, -1, 0.468284,-99) , 
5, -0.619005, 1, 0, 0.475359,-99) , 
0, 0.500947, 0, 0, 0.48763,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0514435);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6012,-99) , 
NN(
NN(
0, 
0, 
-1, 0.950111, 1, 1, 0.524354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463106,-99) , 
3, 2.20555, 1, 0, 0.488088,-99) , 
5, 0.904748, 0, 0, 0.497172,-99) , 
10, -2.09404, 1, 0, 0.501508,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0819457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0669361, 1, 1, 0.609699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441354,-99) , 
9, -1.60456, 0, 0, 0.509573,-99) , 
10, 0.142785, 1, 0, 0.530807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459314,-99) , 
0, 0.494961, 1, 0, 0.473508,-99) , 
0, 0.504757, 0, 0, 0.481745,-99) , 
8, 0.998665, 0, 0, 0.500237,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0504714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492476,-99) , 
7, -951.286, 0, 0, 0.596047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452851,-99) , 
3, 2.62352, 1, 0, 0.484805,-99) , 
3, 6.68444, 0, 0, 0.489906,-99) , 
0, 0.491424, 1, 0, 0.49744,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0599726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488537,-99) , 
5, -0.714243, 1, 0, 0.496007,-99) , 
8, 1.55461, 0, 0, 0.503757,-99) , 
NN(
0, 
0, 
-1, 0.714297, 1, -1, 0.445464,-99) , 
9, -1.2832, 1, 0, 0.490499,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0758809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.383541, 0, 1, 0.61381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447557,-99) , 
0, 0.49809, 0, 0, 0.499242,-99) , 
8, -0.610626, 0, 0, 0.539939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479781,-99) , 
10, 0.200775, 0, 0, 0.524506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474641,-99) , 
0, 0.494282, 1, 0, 0.48349,-99) , 
5, 0.238089, 1, 0, 0.492061,-99) , 
10, -1.22786, 1, 0, 0.501328,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0476368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498229,-99) , 
2, 0.200944, 0, 0, 0.504689,-99) , 
8, 1.53972, 0, 0, 0.51077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427988,-99) , 
8, 1.71833, 1, 0, 0.464719,-99) , 
9, -1.45767, 1, 0, 0.497787,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0692983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.414573, 0, 1, 0.532968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47062,-99) , 
5, 0.428366, 1, 0, 0.490282,-99) , 
7, -951.286, 0, 0, 0.517946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453452,-99) , 
9, -1.10778, 1, 0, 0.506548,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0724333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13777, 1, 1, 0.584427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449729,-99) , 
0, 0.501718, 0, 0, 0.50503,-99) , 
0, 0.49809, 1, 0, 0.542864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485108,-99) , 
5, 0.619028, 1, 0, 0.498447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372777,-99) , 
1, -0.00119874, 1, 0, 0.422327,-99) , 
0, 0.492378, 0, 0, 0.489439,-99) , 
2, 0.070333, 0, 0, 0.498935,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0706079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.739424, 1, 1, 0.536238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430142,-99) , 
5, 0.333263, 0, 0, 0.486874,-99) , 
8, 0.0476874, 0, 0, 0.511834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508871,-99) , 
NN(
0, 
0, 
-1, -1.17614, 0, -1, 0.442009,-99) , 
3, 3.01699, 0, 0, 0.464272,-99) , 
10, -0.0568737, 1, 0, 0.492929,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0515734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387443,-99) , 
5, -0.550988, 1, 0, 0.474888,-99) , 
5, -0.142836, 0, 0, 0.513719,-99) , 
NN(
0, 
0, 
-1, -0.00135447, 1, -1, 0.448641,-99) , 
0, 0.503804, 1, 0, 0.506393,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0495635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484685,-99) , 
9, -3.93592, 1, 0, 0.488346,-99) , 
9, -1.02317, 0, 0, 0.495414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348645,-99) , 
1, -0.00858948, 0, 0, 0.491028,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0578358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469427,-99) , 
4, 0.999977, 0, 0, 0.500208,-99) , 
5, 0.904725, 0, 0, 0.51157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45004,-99) , 
4, 0.999524, 0, 0, 0.505255,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0562941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0960701, 1, 1, 0.537293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45673,-99) , 
8, 0.518465, 0, 0, 0.504255,-99) , 
10, -0.870596, 1, 0, 0.514568,-99) , 
NN(
0, 
0, 
-1, -0.713552, 0, -1, 0.437198,-99) , 
5, -0.80949, 0, 0, 0.506392,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0668455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00097, 1, 1, 0.557084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495482,-99) , 
10, -1.42955, 1, 0, 0.504619,-99) , 
5, 0.741498, 1, 0, 0.523738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401248,-99) , 
7, -951.286, 0, 0, 0.460913,-99) , 
5, -0.809474, 0, 0, 0.517059,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0659777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427691, 1, 1, 0.528694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453562,-99) , 
5, 0.904749, 1, 0, 0.507774,-99) , 
NN(
0, 
0, 
-1, 0.498136, 0, -1, 0.467508,-99) , 
0, 0.497138, 1, 0, 0.483337,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.107049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61902, 1, 1, 0.584056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390871,-99) , 
5, -0.428527, 0, 0, 0.498462,-99) , 
9, -2.62847, 1, 0, 0.517393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485306,-99) , 
10, -0.462005, 0, 0, 0.524275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439861,-99) , 
5, -0.333111, 1, 0, 0.455074,-99) , 
7, -0.142453, 0, 0, 0.489922,-99) , 
7, -951.286, 1, 0, 0.499243,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.060599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398743,-99) , 
0, 0.490471, 0, 0, 0.506557,-99) , 
NN(
0, 
0, 
-1, 2.11712, 0, -1, 0.458546,-99) , 
10, 0.467581, 1, 0, 0.496482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455291,-99) , 
3, 2.27891, 1, 0, 0.494466,-99) , 
NN(
0, 
0, 
-1, 0.634746, 1, -1, 0.387237,-99) , 
3, 1.1955, 0, 0, 0.449756,-99) , 
5, -0.619045, 0, 0, 0.490009,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0793908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494028,-99) , 
9, -1.8213, 1, 0, 0.546363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478242,-99) , 
0, 0.5019, 0, 0, 0.48951,-99) , 
8, -0.0465617, 0, 0, 0.523286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468265,-99) , 
3, 1.73608, 1, 0, 0.507127,-99) , 
NN(
0, 
0, 
-1, 0.714307, 0, -1, 0.45981,-99) , 
5, 0.142949, 1, 0, 0.47078,-99) , 
10, 0.12556, 1, 0, 0.505979,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0677511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426721,-99) , 
9, -3.76904, 0, 0, 0.512849,-99) , 
0, 0.497637, 1, 0, 0.519132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449285,-99) , 
5, -0.0476665, 1, 0, 0.465823,-99) , 
9, -1.69646, 0, 0, 0.48938,-99) , 
0, 0.497138, 0, 0, 0.506742,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0742913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.92614, 0, 1, 0.527228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460807,-99) , 
10, 0.611055, 1, 0, 0.517984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44107,-99) , 
9, -1.37081, 0, 0, 0.459621,-99) , 
8, -0.714624, 1, 0, 0.472265,-99) , 
5, 0.714263, 0, 0, 0.499241,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0766319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00137828, 1, 1, 0.563421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441123,-99) , 
0, 0.494283, 0, 0, 0.501128,-99) , 
5, 0.600926, 1, 0, 0.510081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441843,-99) , 
8, 0.138154, 0, 0, 0.493277,-99) , 
NN(
0, 
0, 
-1, 1.73275, 1, -1, 0.409145,-99) , 
0, 0.498089, 0, 0, 0.449922,-99) , 
5, -0.0476041, 0, 0, 0.49885,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.101881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462405,-99) , 
5, 0.541932, 1, 0, 0.560137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434256,-99) , 
5, 0.0793581, 0, 0, 0.488606,-99) , 
1, -0.00116413, 0, 0, 0.532936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472475,-99) , 
10, 0.0811114, 1, 0, 0.503856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424747,-99) , 
9, -3.73038, 1, 0, 0.444936,-99) , 
9, -2.60752, 0, 0, 0.487773,-99) , 
5, 0.619036, 1, 0, 0.50135,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0561914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49847,-99) , 
7, -951.286, 0, 0, 0.574596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485814,-99) , 
5, 0.809461, 1, 0, 0.533696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420012,-99) , 
0, 0.505704, 1, 0, 0.50041,-99) , 
NN(
0, 
0, 
-1, 0.333073, 0, -1, 0.45717,-99) , 
0, 0.497591, 0, 0, 0.488673,-99) , 
0, 0.495233, 1, 0, 0.499923,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0792449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466914,-99) , 
10, -0.519099, 1, 0, 0.488801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397211,-99) , 
7, -951.286, 1, 0, 0.438639,-99) , 
0, 0.502851, 1, 0, 0.480151,-99) , 
9, -3.67412, 1, 0, 0.485309,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0480243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470516,-99) , 
10, -0.787371, 1, 0, 0.485847,-99) , 
8, 1.82232, 0, 0, 0.490017,-99) , 
10, 0.972907, 0, 0, 0.494561,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0633788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.569355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457065,-99) , 
5, 0.714263, 0, 0, 0.488238,-99) , 
0, 0.503804, 0, 0, 0.496556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445078,-99) , 
4, 0.999524, 0, 0, 0.491256,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.034603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.7577, 0, 1, 0.561649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499021,-99) , 
6, 0.00531094, 0, 0, 0.532655,-99) , 
NN(
0, 
0, 
-1, 0.428599, 0, -1, 0.489609,-99) , 
5, -0.333326, 1, 0, 0.495601,-99) , 
0, 0.491424, 1, 0, 0.50056,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0756908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65269, 0, 1, 0.556914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432321,-99) , 
5, 0.809468, 1, 0, 0.479609,-99) , 
9, -1.33729, 1, 0, 0.513998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521992,-99) , 
NN(
0, 
0, 
-1, -0.352166, 1, -1, 0.464812,-99) , 
9, -1.91995, 0, 0, 0.475252,-99) , 
8, 1.00003, 0, 0, 0.489844,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0858298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478403,-99) , 
8, 1.28342, 0, 0, 0.489603,-99) , 
9, -1.01677, 0, 0, 0.49826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43084,-99) , 
5, -0.727803, 0, 0, 0.500675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370722,-99) , 
7, 0.183955, 0, 0, 0.416937,-99) , 
7, -951.286, 1, 0, 0.452134,-99) , 
5, 0.428546, 0, 0, 0.48638,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0783724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.28523, 0, 1, 0.541412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462136,-99) , 
5, 0.142829, 0, 0, 0.504986,-99) , 
10, -0.0837821, 1, 0, 0.526787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444906,-99) , 
8, -0.465695, 0, 0, 0.512592,-99) , 
NN(
0, 
0, 
-1, -0.667999, 0, -1, 0.462288,-99) , 
10, -1.0104, 1, 0, 0.474753,-99) , 
3, 3.40104, 1, 0, 0.511676,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0539496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498998, 0, 1, 0.60748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490975,-99) , 
9, -3.27239, 1, 0, 0.49902,-99) , 
5, -0.809517, 1, 0, 0.507615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373354,-99) , 
0, 0.48952, 0, 0, 0.502136,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0737477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.708404, 0, 1, 0.54773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452733,-99) , 
5, 0.801733, 0, 0, 0.509818,-99) , 
5, 0.755084, 1, 0, 0.520353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458898,-99) , 
2, -0.0373696, 1, 0, 0.48168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40253,-99) , 
9, -3.10192, 1, 0, 0.437196,-99) , 
10, -0.240189, 0, 0, 0.459235,-99) , 
5, 0.428556, 0, 0, 0.504504,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0905538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460217,-99) , 
5, -0.896308, 1, 0, 0.508536,-99) , 
5, -0.637161, 0, 0, 0.531082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472608,-99) , 
8, 1.39463, 1, 0, 0.493935,-99) , 
NN(
0, 
0, 
-1, -0.0200656, 1, -1, 0.45186,-99) , 
9, -1.71805, 0, 0, 0.467877,-99) , 
5, -0.238077, 1, 0, 0.477268,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0951252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.265728, 1, 1, 0.539909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476031,-99) , 
4, 0.999525, 0, 0, 0.533427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496493,-99) , 
0, 0.493327, 0, 0, 0.567073,-99) , 
NN(
0, 
0, 
-1, 0.42875, 0, -1, 0.409049,-99) , 
0, 0.496184, 1, 0, 0.452595,-99) , 
8, -0.428967, 0, 0, 0.51775,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0506064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447775,-99) , 
9, -3.17426, 0, 0, 0.50586,-99) , 
10, -2.08417, 1, 0, 0.510508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427777,-99) , 
4, 0.999524, 0, 0, 0.501708,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0727211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.24949, 1, 1, 0.549336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48218,-99) , 
3, 7.22637, 1, 0, 0.53054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449413,-99) , 
8, -0.12495, 0, 0, 0.54838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468213,-99) , 
2, -0.0275776, 1, 0, 0.48336,-99) , 
2, 0.0805353, 0, 0, 0.490181,-99) , 
3, 3.75356, 0, 0, 0.499969,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0738537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490531,-99) , 
10, -0.448795, 1, 0, 0.504963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440316,-99) , 
5, 0.238045, 1, 0, 0.46082,-99) , 
8, 0.481158, 0, 0, 0.486564,-99) , 
10, -2.09404, 1, 0, 0.490902,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0603964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498953,-99) , 
8, 0.389008, 0, 0, 0.513622,-99) , 
0, 0.504755, 0, 0, 0.520342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422088,-99) , 
8, 1.44236, 0, 0, 0.462351,-99) , 
5, -0.619016, 1, 0, 0.471889,-99) , 
10, -0.428665, 1, 0, 0.494583,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0809062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.591174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482731,-99) , 
10, -0.908669, 1, 0, 0.51879,-99) , 
8, 0.634957, 0, 0, 0.527379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471226,-99) , 
10, 0.367437, 0, 0, 0.498688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412188,-99) , 
9, -1.71728, 1, 0, 0.452949,-99) , 
5, 0.619034, 0, 0, 0.481555,-99) , 
10, -0.343254, 1, 0, 0.504657,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0520854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142839, 1, 1, 0.516513,-99) , 
NN(
0, 
0, 
-1, 0.33333, 0, -1, 0.466292,-99) , 
9, -1.42536, 1, 0, 0.501941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355501,-99) , 
8, -1.568, 0, 0, 0.496563,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0496626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501582, 1, 1, 0.530381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473579,-99) , 
5, 0.714273, 0, 0, 0.500769,-99) , 
0, 0.500947, 0, 0, 0.508314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415546,-99) , 
6, 0.0124849, 1, 0, 0.505928,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0715146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446947,-99) , 
10, 1.09461, 1, 0, 0.505344,-99) , 
10, -0.531148, 1, 0, 0.516183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466284,-99) , 
3, 2.8145, 0, 0, 0.486912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326627,-99) , 
0, 0.490471, 0, 0, 0.475652,-99) , 
8, 0.428716, 0, 0, 0.498715,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0630038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.7668, 0, 1, 0.517338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375756,-99) , 
0, 0.489522, 0, 0, 0.511674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408006,-99) , 
10, 0.21497, 1, 0, 0.428069,-99) , 
8, 2.0995, 0, 0, 0.454089,-99) , 
8, 1.28359, 1, 0, 0.49436,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0838096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.765023, 1, 1, 0.582217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4559,-99) , 
9, -2.97225, 0, 0, 0.486765,-99) , 
8, 0.244911, 0, 0, 0.504486,-99) , 
NN(
NN(
0, 
0, 
-1, -1.10558, 1, -1, 0.477529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385562,-99) , 
5, 0.238063, 1, 0, 0.420551,-99) , 
8, 0.947302, 0, 0, 0.458935,-99) , 
10, -0.594191, 1, 0, 0.47721,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0565257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.54066, 0, 1, 0.599533,-99) , 
NN(
NN(
0, 
0, 
-1, 6.68012, 0, 1, 0.515615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40389,-99) , 
0, 0.506344, 0, 0, 0.43979,-99) , 
0, 0.503805, 1, 0, 0.506567,-99) , 
10, -1.99711, 1, 0, 0.511435,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0637709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619323,-99) , 
NN(
0, 
0, 
-1, -3.02294, 0, -1, 0.486807,-99) , 
10, -2.01545, 1, 0, 0.493613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432816,-99) , 
3, 1.72322, 1, 0, 0.488672,-99) , 
NN(
0, 
0, 
-1, -0.480558, 0, -1, 0.396489,-99) , 
5, -0.705203, 1, 0, 0.444364,-99) , 
5, 0.238094, 0, 0, 0.483175,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0722085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461294,-99) , 
5, -0.904731, 0, 0, 0.527616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462848,-99) , 
0, 0.496185, 1, 0, 0.477259,-99) , 
5, -0.333327, 1, 0, 0.484694,-99) , 
10, -2.10906, 1, 0, 0.48974,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.075611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0611673, 0, 1, 0.628691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432691,-99) , 
8, -0.7974, 0, 0, 0.490225,-99) , 
5, 0.71422, 1, 0, 0.531971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479375,-99) , 
0, 0.492965, 1, 0, 0.485402,-99) , 
NN(
0, 
0, 
-1, 0.489607, 0, -1, 0.426501,-99) , 
0, 0.491423, 0, 0, 0.480404,-99) , 
10, -1.22786, 1, 0, 0.490351,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0771625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.469382, 0, 1, 0.539538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467142,-99) , 
8, 1.00045, 0, 0, 0.487531,-99) , 
5, 0.714275, 1, 0, 0.507204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452308,-99) , 
3, 2.64364, 0, 0, 0.489598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339807,-99) , 
5, -0.23831, 0, 0, 0.447097,-99) , 
0, 0.492376, 0, 0, 0.499646,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0633726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342481,-99) , 
10, -2.25105, 1, 0, 0.476092,-99) , 
8, -1.04774, 0, 0, 0.568984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54981,-99) , 
NN(
0, 
0, 
-1, 4.2937, 1, -1, 0.485162,-99) , 
4, 0.999524, 1, 0, 0.491477,-99) , 
10, -1.60913, 1, 0, 0.499229,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0667666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49126,-99) , 
9, -2.56123, 0, 0, 0.520447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448004,-99) , 
10, 0.777916, 1, 0, 0.511536,-99) , 
NN(
0, 
0, 
-1, -0.713552, 0, -1, 0.434589,-99) , 
5, -0.809527, 0, 0, 0.503207,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0643097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.306685, 0, 1, 0.551021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475524,-99) , 
5, 0.714278, 0, 0, 0.504667,-99) , 
10, -1.04965, 1, 0, 0.515143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465652,-99) , 
10, -0.309492, 1, 0, 0.493753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410515,-99) , 
10, -1.94233, 0, 0, 0.487201,-99) , 
0, 0.499043, 1, 0, 0.503515,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0818706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76424, 0, 1, 0.538834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474699,-99) , 
9, -1.0684, 1, 0, 0.522073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429918,-99) , 
5, -0.655339, 0, 0, 0.49624,-99) , 
NN(
0, 
0, 
-1, -1.49192, 1, -1, 0.446353,-99) , 
5, 0.809438, 1, 0, 0.473559,-99) , 
8, 0.428107, 0, 0, 0.501242,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0600482);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575702,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.559519,-99) , 
NN(
0, 
0, 
-1, 0.0673546, 1, -1, 0.478351,-99) , 
9, -3.55204, 1, 0, 0.483333,-99) , 
9, -0.867645, 0, 0, 0.494072,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.069092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.734326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499233,-99) , 
10, -0.923427, 1, 0, 0.612173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485675,-99) , 
10, -1.80735, 1, 0, 0.509676,-99) , 
8, 0.0668625, 0, 0, 0.527461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468375,-99) , 
0, 0.496185, 0, 0, 0.498101,-99) , 
NN(
0, 
0, 
-1, 0.142818, 1, -1, 0.430808,-99) , 
8, 0.539159, 0, 0, 0.484829,-99) , 
10, -0.822702, 1, 0, 0.498628,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.09903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495867, 0, 1, 0.565244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424434,-99) , 
10, -1.58671, 0, 0, 0.513234,-99) , 
0, 0.499995, 1, 0, 0.546658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437885,-99) , 
5, 0.333335, 0, 0, 0.51459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467489,-99) , 
5, -0.714271, 1, 0, 0.479558,-99) , 
8, 1.09362, 0, 0, 0.498201,-99) , 
8, 0.141637, 1, 0, 0.513216,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0582812);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.206903, 1, 1, 0.52728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45491,-99) , 
4, 0.999525, 0, 0, 0.519853,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0473011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.71539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457318,-99) , 
8, -1.06037, 0, 0, 0.583176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489195,-99) , 
2, -0.0732547, 1, 0, 0.497126,-99) , 
10, -1.78413, 1, 0, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404504,-99) , 
8, -1.57186, 0, 0, 0.499047,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0981564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436876,-99) , 
8, -1.15886, 0, 0, 0.602292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387019,-99) , 
3, 4.22954, 1, 0, 0.502687,-99) , 
9, -2.59082, 1, 0, 0.529123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464104,-99) , 
2, 0.070333, 0, 0, 0.473236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365253,-99) , 
9, -3.74691, 0, 0, 0.468037,-99) , 
5, 0.714272, 1, 0, 0.491636,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0591006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478258,-99) , 
10, -0.0840872, 1, 0, 0.508055,-99) , 
8, 2.14358, 0, 0, 0.512853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397522,-99) , 
3, 2.04251, 0, 0, 0.435188,-99) , 
8, 0.715375, 0, 0, 0.460894,-99) , 
5, -0.428559, 0, 0, 0.504862,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0506932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.417577, 0, 1, 0.584728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443438,-99) , 
0, 0.504666, 1, 0, 0.492837,-99) , 
7, -951.286, 0, 0, 0.549752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457356,-99) , 
8, -0.360679, 0, 0, 0.5014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405739,-99) , 
8, -0.932148, 0, 0, 0.434842,-99) , 
8, -0.714476, 0, 0, 0.493331,-99) , 
0, 0.502852, 0, 0, 0.501855,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0587135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.42345, 1, 1, 0.524642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476556,-99) , 
2, -0.0818425, 1, 0, 0.486633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399877,-99) , 
8, -0.00428729, 1, 0, 0.474103,-99) , 
8, 0.145265, 0, 0, 0.5077,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0682166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493913,-99) , 
3, 3.22205, 1, 0, 0.520925,-99) , 
NN(
0, 
0, 
-1, -0.809522, 1, -1, 0.46234,-99) , 
5, -0.428576, 0, 0, 0.512398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558107,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.438981,-99) , 
0, 0.490471, 1, 0, 0.467529,-99) , 
0, 0.494281, 0, 0, 0.50277,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0518983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445803,-99) , 
8, -1.15528, 0, 0, 0.491089,-99) , 
8, -0.580202, 0, 0, 0.525625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491879,-99) , 
9, -2.57614, 1, 0, 0.499572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440944,-99) , 
8, -0.186758, 0, 0, 0.494219,-99) , 
10, -1.41678, 1, 0, 0.499204,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0828042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426991,-99) , 
5, 0.052128, 0, 0, 0.517186,-99) , 
5, -0.809522, 1, 0, 0.52725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470472,-99) , 
0, 0.494281, 1, 0, 0.483417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416927,-99) , 
8, 0.35043, 0, 0, 0.474593,-99) , 
9, -2.25567, 1, 0, 0.495084,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0788424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488698,-99) , 
9, -2.96914, 0, 0, 0.527448,-99) , 
9, -3.82079, 1, 0, 0.537306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491842,-99) , 
8, 2.18707, 1, 0, 0.525447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46116,-99) , 
9, -2.37553, 1, 0, 0.475275,-99) , 
10, 0.434342, 0, 0, 0.491979,-99) , 
8, 0.142905, 1, 0, 0.506274,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0687874);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000616284, 1, 1, 0.590041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485938,-99) , 
0, 0.498227, 0, 0, 0.521686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451229,-99) , 
3, 1.66995, 1, 0, 0.484031,-99) , 
3, 3.75356, 0, 0, 0.492678,-99) , 
0, 0.504757, 0, 0, 0.498538,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.069067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487877,-99) , 
10, 0.495494, 1, 0, 0.523548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433948,-99) , 
1, 9.9682e-05, 0, 0, 0.480228,-99) , 
0, 0.503532, 1, 0, 0.517141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4736,-99) , 
10, -0.629773, 1, 0, 0.494724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394279,-99) , 
8, -0.426603, 0, 0, 0.471927,-99) , 
0, 0.493328, 0, 0, 0.509927,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.06983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.702762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446349,-99) , 
2, 0.00387163, 1, 0, 0.502175,-99) , 
8, -0.889633, 0, 0, 0.564262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475366,-99) , 
9, -2.27552, 0, 0, 0.505532,-99) , 
NN(
0, 
0, 
-1, 1.01536, 0, -1, 0.458057,-99) , 
5, 0.904749, 1, 0, 0.493068,-99) , 
10, -1.61834, 1, 0, 0.500595,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0598737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.9228, 1, 1, 0.568654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449309,-99) , 
1, 0.000277818, 0, 0, 0.511405,-99) , 
0, 0.498089, 0, 0, 0.540118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495263,-99) , 
9, -2.81983, 1, 0, 0.50462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402953,-99) , 
10, -1.73036, 1, 0, 0.467267,-99) , 
8, -0.429439, 0, 0, 0.498171,-99) , 
2, -0.0710868, 1, 0, 0.505275,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0734818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418069,-99) , 
10, -1.03705, 1, 0, 0.494039,-99) , 
10, -0.286656, 0, 0, 0.557441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469079,-99) , 
8, -1.38588, 0, 0, 0.564205,-99) , 
NN(
0, 
0, 
-1, -0.080818, 0, -1, 0.483378,-99) , 
9, -3.09444, 1, 0, 0.493197,-99) , 
0, 0.493328, 1, 0, 0.503089,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0698574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.840054, 0, 1, 0.607377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410108,-99) , 
9, -3.1973, 0, 0, 0.520583,-99) , 
10, -1.53488, 1, 0, 0.528189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4345,-99) , 
9, -3.73917, 0, 0, 0.523582,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0804282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00554008, 0, 1, 0.550413,-99) , 
NN(
0, 
0, 
-1, 0.619056, 0, -1, 0.471413,-99) , 
6, 0.00229241, 0, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338562,-99) , 
6, 0.0120364, 1, 0, 0.492971,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0554539);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547987,-99) , 
NN(
NN(
0, 
0, 
-1, -1.42573, 1, 1, 0.526777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462026,-99) , 
0, 0.499451, 0, 0, 0.490663,-99) , 
0, 0.496185, 1, 0, 0.502521,-99) , 
9, -0.894493, 0, 0, 0.508087,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0660977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44758,-99) , 
1, -0.00289893, 0, 0, 0.533306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47932,-99) , 
2, -0.0183279, 1, 0, 0.494527,-99) , 
3, 3.40104, 0, 0, 0.505229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379845,-99) , 
8, -1.568, 0, 0, 0.501079,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0394887);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498097, 0, 1, 0.581615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497063,-99) , 
9, -1.02698, 0, 0, 0.505926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415977,-99) , 
8, -1.28473, 0, 0, 0.501762,-99) , 
5, -0.809524, 1, 0, 0.508226,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0504604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491963,-99) , 
2, 0.00736938, 0, 0, 0.512083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441078,-99) , 
0, 0.505437, 1, 0, 0.508047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0.490562, 0, -1, 0.422893,-99) , 
8, 0.429503, 0, 0, 0.464044,-99) , 
0, 0.492376, 0, 0, 0.502602,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.102466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480034,-99) , 
0, 0.502717, 1, 0, 0.559979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393715,-99) , 
0, 0.490471, 0, 0, 0.548457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417961,-99) , 
9, -2.09045, 0, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454292,-99) , 
10, 0.750245, 1, 0, 0.489991,-99) , 
10, -0.458607, 1, 0, 0.515924,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0425735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43602,-99) , 
4, 0.999887, 0, 0, 0.495012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43291,-99) , 
4, 0.999524, 0, 0, 0.488717,-99) , 
9, -3.6674, 1, 0, 0.493449,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0832078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490229,-99) , 
2, -0.0843733, 0, 0, 0.562512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425406,-99) , 
10, 0.369422, 0, 0, 0.487859,-99) , 
10, -0.0837821, 1, 0, 0.528145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514218,-99) , 
NN(
0, 
0, 
-1, 0.498404, 1, -1, 0.471432,-99) , 
0, 0.500948, 0, 0, 0.48141,-99) , 
5, 0.809449, 1, 0, 0.506225,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0443016);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548394,-99) , 
NN(
NN(
0, 
0, 
-1, 0.737342, 0, 1, 0.515855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457834,-99) , 
0, 0.498091, 0, 0, 0.485142,-99) , 
10, 0.0213319, 1, 0, 0.506441,-99) , 
8, 2.14371, 0, 0, 0.510416,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0765214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464873,-99) , 
5, -0.714193, 0, 0, 0.54892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384867,-99) , 
7, -1.5705, 0, 0, 0.496527,-99) , 
7, -951.286, 1, 0, 0.513805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56793,-99) , 
NN(
0, 
0, 
-1, 1.1422, 0, -1, 0.421067,-99) , 
10, -1.08938, 1, 0, 0.447394,-99) , 
2, -0.0712347, 0, 0, 0.501921,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0846559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39136,-99) , 
8, -0.550249, 0, 0, 0.537358,-99) , 
NN(
0, 
0, 
-1, 0.505708, 1, -1, 0.470882,-99) , 
10, -1.15195, 1, 0, 0.478806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431305,-99) , 
0, 0.498092, 1, 0, 0.467216,-99) , 
NN(
0, 
0, 
-1, 1.26878, 1, -1, 0.389196,-99) , 
3, 1.96761, 0, 0, 0.425223,-99) , 
8, -0.714476, 0, 0, 0.472098,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0856993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455467,-99) , 
3, 5.09281, 1, 0, 0.562565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454592,-99) , 
8, 0.140448, 0, 0, 0.49483,-99) , 
3, 1.89011, 0, 0, 0.526564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47341,-99) , 
0, 0.495867, 0, 0, 0.505107,-99) , 
NN(
0, 
0, 
-1, 0.502535, 0, -1, 0.450301,-99) , 
0, 0.499995, 1, 0, 0.487352,-99) , 
5, 0.714275, 1, 0, 0.502677,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0485046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480449,-99) , 
2, -0.0740473, 1, 0, 0.487374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398893,-99) , 
9, -3.49156, 0, 0, 0.484734,-99) , 
10, -2.06661, 1, 0, 0.487592,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.107546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477098,-99) , 
9, -1.42922, 1, 0, 0.547074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441821,-99) , 
2, 0.000737474, 1, 0, 0.4855,-99) , 
9, -2.60298, 0, 0, 0.530222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437985,-99) , 
5, 0.619078, 0, 0, 0.5165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452836,-99) , 
5, -0.333318, 1, 0, 0.465471,-99) , 
8, 1.28359, 0, 0, 0.480839,-99) , 
0, 0.497137, 1, 0, 0.500546,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0732171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491053,-99) , 
2, -0.0128791, 0, 0, 0.540165,-99) , 
9, -2.97788, 1, 0, 0.56018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444043,-99) , 
8, -1.28577, 0, 0, 0.516105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408966,-99) , 
0, 0.489519, 0, 0, 0.511578,-99) , 
1, -0.00116413, 1, 0, 0.526279,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0781089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492216,-99) , 
8, -0.169751, 0, 0, 0.530221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449554,-99) , 
0, 0.501076, 1, 0, 0.487499,-99) , 
10, 0.310643, 1, 0, 0.518402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450711,-99) , 
0, 0.490879, 1, 0, 0.463612,-99) , 
9, -3.31022, 1, 0, 0.47416,-99) , 
0, 0.496185, 0, 0, 0.503074,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0866993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48302,-99) , 
3, 1.69085, 1, 0, 0.521968,-99) , 
NN(
0, 
0, 
-1, 0.00129934, 1, -1, 0.460698,-99) , 
3, 3.77414, 1, 0, 0.507092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4739,-99) , 
0, 0.505047, 0, 0, 0.496035,-99) , 
NN(
0, 
0, 
-1, 0.50219, 1, -1, 0.435832,-99) , 
0, 0.502715, 0, 0, 0.459294,-99) , 
0, 0.499042, 1, 0, 0.487182,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0620274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.426355, 0, 1, 0.548715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48338,-99) , 
5, 0.714297, 0, 0, 0.504717,-99) , 
0, 0.496004, 1, 0, 0.514686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546599,-99) , 
NN(
0, 
0, 
-1, 1.08131, 0, -1, 0.411878,-99) , 
3, 3.42333, 0, 0, 0.445929,-99) , 
0, 0.492376, 0, 0, 0.506768,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0592661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488256,-99) , 
8, 0.835651, 0, 0, 0.500179,-99) , 
NN(
0, 
0, 
-1, 0.568419, 0, -1, 0.46581,-99) , 
10, -0.110943, 1, 0, 0.485243,-99) , 
8, -1.28512, 1, 0, 0.489802,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0611462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451172,-99) , 
2, 0.00730181, 1, 0, 0.528269,-99) , 
0, 0.499038, 0, 0, 0.57208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478608,-99) , 
8, 1.59379, 1, 0, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424151,-99) , 
9, -3.21911, 0, 0, 0.505767,-99) , 
10, -1.61834, 1, 0, 0.512899,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0502711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22111, 0, 1, 0.575251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484907,-99) , 
10, -0.240189, 1, 0, 0.503055,-99) , 
0, 0.492966, 1, 0, 0.510265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424705,-99) , 
0, 0.489519, 0, 0, 0.506663,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0583375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28242, 1, 1, 0.574025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498726,-99) , 
8, 1.28667, 0, 0, 0.513254,-99) , 
5, -0.333325, 1, 0, 0.521275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545546,-99) , 
NN(
0, 
0, 
-1, -0.844646, 0, -1, 0.444927,-99) , 
10, -1.29757, 1, 0, 0.461108,-99) , 
0, 0.494281, 0, 0, 0.508822,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0497126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00178273, 0, 1, 0.569231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475507,-99) , 
2, 0.0579437, 1, 0, 0.508333,-99) , 
0, 0.491426, 1, 0, 0.512939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390352,-99) , 
6, 0.012485, 1, 0, 0.509373,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0591028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489226,-99) , 
0, 0.497137, 1, 0, 0.525918,-99) , 
5, -0.111174, 0, 0, 0.548496,-99) , 
NN(
0, 
0, 
-1, -2.15099, 0, -1, 0.477963,-99) , 
5, 0.333324, 1, 0, 0.492064,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0671232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.434196, 0, 1, 0.536114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474505,-99) , 
2, 0.118939, 0, 0, 0.481442,-99) , 
2, 0.199279, 0, 0, 0.486436,-99) , 
5, 0.904747, 0, 0, 0.499776,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0668927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381034,-99) , 
5, 0.201897, 0, 0, 0.516681,-99) , 
5, -0.523639, 1, 0, 0.532167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473614,-99) , 
9, -3.25645, 0, 0, 0.531412,-99) , 
NN(
0, 
0, 
-1, 0.256415, 0, -1, 0.483584,-99) , 
10, -1.05467, 1, 0, 0.494916,-99) , 
0, 0.500947, 0, 0, 0.504651,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0607456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.68012, 0, 1, 0.525523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484307,-99) , 
5, -0.619031, 1, 0, 0.50313,-99) , 
NN(
0, 
0, 
-1, 0.501355, 0, -1, 0.411029,-99) , 
0, 0.5019, 0, 0, 0.481079,-99) , 
0, 0.500947, 1, 0, 0.513801,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0509363);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5674,-99) , 
NN(
NN(
0, 
0, 
-1, -0.707716, 0, 1, 0.554067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435662,-99) , 
10, 0.464598, 1, 0, 0.493618,-99) , 
10, -1.36159, 1, 0, 0.503793,-99) , 
8, 2.1431, 0, 0, 0.509935,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0595224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549987,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494052, 1, 1, 0.56119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416438,-99) , 
10, 0.081666, 1, 0, 0.500293,-99) , 
8, 1.54433, 0, 0, 0.507334,-99) , 
9, -1.10338, 0, 0, 0.514363,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0728316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549427,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500948, 1, 1, 0.578892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464853,-99) , 
3, 2.81546, 0, 0, 0.482838,-99) , 
5, -0.714242, 1, 0, 0.493002,-99) , 
9, -1.09641, 0, 0, 0.502205,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0702335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.168833, 1, 1, 0.537196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454381,-99) , 
0, 0.501897, 1, 0, 0.520427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482077,-99) , 
5, 0.618981, 1, 0, 0.499682,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.414073,-99) , 
3, 5.43321, 1, 0, 0.487651,-99) , 
8, 1.00011, 0, 0, 0.500565,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0661263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0105903, 0, 1, 0.591523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489714,-99) , 
5, 0.142851, 1, 0, 0.499154,-99) , 
9, -2.73989, 1, 0, 0.514158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362194,-99) , 
10, -2.21045, 1, 0, 0.433595,-99) , 
8, -1.00054, 0, 0, 0.507682,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0454667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417995,-99) , 
0, 0.489519, 0, 0, 0.505125,-99) , 
10, -2.00338, 1, 0, 0.510741,-99) , 
NN(
0, 
0, 
-1, 0.442713, 0, -1, 0.46172,-99) , 
5, 0.904747, 1, 0, 0.497526,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.101579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48674,-99) , 
0, 0.495234, 0, 0, 0.539592,-99) , 
NN(
0, 
0, 
-1, -1.66516, 0, -1, 0.436695,-99) , 
7, -0.998667, 0, 0, 0.520001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471552,-99) , 
9, -2.27355, 1, 0, 0.496355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415366,-99) , 
0, 0.495232, 1, 0, 0.439049,-99) , 
8, 0.143621, 0, 0, 0.476205,-99) , 
7, -951.286, 0, 0, 0.504278,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0646995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.42534, 1, 1, 0.56529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482585,-99) , 
8, 0.573329, 0, 0, 0.508077,-99) , 
8, -0.184437, 1, 0, 0.514792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440956,-99) , 
5, 0.714128, 1, 0, 0.506844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387624,-99) , 
0, 0.501898, 1, 0, 0.473655,-99) , 
8, -0.714915, 0, 0, 0.510206,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0523204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485373,-99) , 
10, 0.186151, 1, 0, 0.508423,-99) , 
0, 0.490471, 1, 0, 0.511903,-99) , 
NN(
0, 
0, 
-1, 0.4287, 0, -1, 0.42072,-99) , 
8, -1.00052, 0, 0, 0.504236,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0691229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427851,-99) , 
3, 1.69648, 1, 0, 0.513963,-99) , 
3, 2.66118, 0, 0, 0.541858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464463,-99) , 
0, 0.49809, 0, 0, 0.486356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431987,-99) , 
3, 6.68876, 1, 0, 0.481178,-99) , 
5, -0.523807, 1, 0, 0.48909,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.058957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499234,-99) , 
0, 0.502535, 0, 0, 0.512544,-99) , 
0, 0.492378, 1, 0, 0.53262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455279,-99) , 
9, -2.68565, 0, 0, 0.489879,-99) , 
NN(
0, 
0, 
-1, 1.01337, 0, -1, 0.457834,-99) , 
5, 0.809504, 0, 0, 0.472231,-99) , 
2, 0.0328286, 0, 0, 0.487354,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0990811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47249, 1, 1, 0.598796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444508,-99) , 
0, 0.500631, 0, 0, 0.493934,-99) , 
0, 0.497136, 1, 0, 0.536232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480851,-99) , 
8, -0.0555723, 0, 0, 0.497684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441125,-99) , 
9, -1.69019, 0, 0, 0.459585,-99) , 
10, -0.945788, 1, 0, 0.474946,-99) , 
8, 1.28585, 0, 0, 0.493025,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0458684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.54056, 0, 1, 0.5745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482866,-99) , 
10, -1.17286, 1, 0, 0.488223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396035,-99) , 
9, -3.47071, 0, 0, 0.485427,-99) , 
10, -1.99711, 1, 0, 0.489998,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0390825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.989242, 1, 1, 0.569845,-99) , 
NN(
NN(
0, 
0, 
-1, 0.950054, 1, 1, 0.53512,-99) , 
NN(
0, 
0, 
-1, -3.43478, 0, -1, 0.490652,-99) , 
5, 0.904703, 0, 0, 0.502245,-99) , 
1, -0.00406158, 1, 0, 0.5066,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0580116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459419,-99) , 
3, 2.85519, 1, 0, 0.572114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492011,-99) , 
5, 0.451228, 1, 0, 0.507035,-99) , 
10, -1.69851, 1, 0, 0.512724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42562,-99) , 
9, -1.97569, 0, 0, 0.466557,-99) , 
5, 0.904747, 1, 0, 0.499987,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0650266);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409492,-99) , 
5, 0.523832, 0, 0, 0.551958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492023,-99) , 
8, 1.63876, 0, 0, 0.503524,-99) , 
10, -1.54889, 1, 0, 0.510033,-99) , 
9, -0.733211, 0, 0, 0.515804,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0490619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53972, 0, 1, 0.523684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464717,-99) , 
0, 0.497138, 1, 0, 0.486471,-99) , 
9, -1.31626, 1, 0, 0.514805,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.058601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.548244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432204,-99) , 
9, -2.0561, 0, 0, 0.505645,-99) , 
10, -0.336358, 1, 0, 0.517845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585615,-99) , 
NN(
0, 
0, 
-1, -3.71051, 0, -1, 0.470954,-99) , 
8, -1.35921, 1, 0, 0.482065,-99) , 
9, -2.47783, 0, 0, 0.506338,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0798261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492425,-99) , 
5, -0.396849, 0, 0, 0.566295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433755,-99) , 
9, -3.26288, 0, 0, 0.500218,-99) , 
5, 0.809445, 1, 0, 0.531204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437012,-99) , 
5, -0.428562, 0, 0, 0.528553,-99) , 
NN(
0, 
0, 
-1, -2.17747, 0, -1, 0.477963,-99) , 
0, 0.496186, 1, 0, 0.495526,-99) , 
10, -0.46321, 1, 0, 0.511594,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0737308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.327019, 1, 1, 0.544527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428126,-99) , 
0, 0.491426, 0, 0, 0.534475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488274,-99) , 
0, 0.499178, 0, 0, 0.502626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413154,-99) , 
7, 0.714492, 0, 0, 0.438758,-99) , 
0, 0.501899, 1, 0, 0.489566,-99) , 
7, -951.286, 1, 0, 0.505063,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0747375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.220314, 0, 1, 0.568575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483864,-99) , 
5, 0.714082, 1, 0, 0.504852,-99) , 
10, -0.65235, 1, 0, 0.517316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437571,-99) , 
8, -0.41493, 0, 0, 0.458751,-99) , 
0, 0.494281, 1, 0, 0.475323,-99) , 
8, -0.142802, 0, 0, 0.507086,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0730792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36687, 1, 1, 0.561587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454661,-99) , 
9, -2.01771, 0, 0, 0.501147,-99) , 
10, -0.46138, 1, 0, 0.517493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450481,-99) , 
8, 0.121968, 0, 0, 0.468886,-99) , 
5, -0.618781, 1, 0, 0.486777,-99) , 
9, -2.62704, 0, 0, 0.508971,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.100893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.79648, 0, 1, 0.558829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463952,-99) , 
7, 0.715014, 0, 0, 0.48304,-99) , 
8, -0.429157, 1, 0, 0.494785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409118,-99) , 
3, 2.9755, 1, 0, 0.48233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400928,-99) , 
8, -0.143615, 1, 0, 0.423606,-99) , 
0, 0.498091, 0, 0, 0.452825,-99) , 
7, -951.286, 0, 0, 0.479411,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0548815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504666, 1, 1, 0.602703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493252,-99) , 
10, -0.59902, 1, 0, 0.520473,-99) , 
1, 0.001101, 0, 0, 0.548964,-99) , 
NN(
NN(
0, 
0, 
-1, -0.33334, 1, 1, 0.516198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452337,-99) , 
0, 0.497048, 1, 0, 0.478875,-99) , 
10, -0.345345, 1, 0, 0.497275,-99) , 
0, 0.502852, 0, 0, 0.505062,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0728478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17446, 0, 1, 0.532366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455909,-99) , 
8, 1.73504, 1, 0, 0.476066,-99) , 
9, -1.45731, 1, 0, 0.515125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527138,-99) , 
NN(
0, 
0, 
-1, 3.47089, 1, -1, 0.425667,-99) , 
10, -1.08938, 1, 0, 0.445557,-99) , 
2, -0.0829858, 0, 0, 0.50415,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0990326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504621, 1, 1, 0.589987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491947,-99) , 
5, 0.809491, 1, 0, 0.52779,-99) , 
0, 0.5019, 0, 0, 0.541846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469496,-99) , 
3, 1.09782, 1, 0, 0.518561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448182,-99) , 
2, -0.0131001, 1, 0, 0.472673,-99) , 
5, 0.809455, 0, 0, 0.492542,-99) , 
3, 3.01617, 0, 0, 0.508394,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0542962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497377,-99) , 
0, 0.502852, 0, 0, 0.505508,-99) , 
3, 5.90021, 0, 0, 0.511615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605174,-99) , 
NN(
0, 
0, 
-1, 0.619118, 1, -1, 0.453234,-99) , 
0, 0.491426, 1, 0, 0.46605,-99) , 
1, -0.00116413, 0, 0, 0.497138,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.046809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0724412, 0, 1, 0.523539,-99) , 
NN(
0, 
0, 
-1, 0.442858, 0, -1, 0.477009,-99) , 
5, 0.904704, 1, 0, 0.510652,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0488764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577032,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498498, 0, 1, 0.522103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425326,-99) , 
0, 0.500267, 0, 0, 0.481199,-99) , 
0, 0.499043, 1, 0, 0.504779,-99) , 
2, 0.2096, 0, 0, 0.50867,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0703012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411379,-99) , 
2, -0.0673813, 0, 0, 0.513193,-99) , 
5, -0.455758, 0, 0, 0.543148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487341,-99) , 
0, 0.49809, 1, 0, 0.505104,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.375099,-99) , 
5, 0.469417, 0, 0, 0.493544,-99) , 
5, 0.142866, 1, 0, 0.502105,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0396235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482113,-99) , 
10, -0.501543, 1, 0, 0.492368,-99) , 
10, -2.08417, 1, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433695,-99) , 
3, 7.39984, 1, 0, 0.492445,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0445436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0125743, 0, 1, 0.560562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389072,-99) , 
5, 0.474838, 0, 0, 0.499787,-99) , 
5, 0.310716, 1, 0, 0.506403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419158,-99) , 
0, 0.497139, 1, 0, 0.458248,-99) , 
5, -0.809489, 0, 0, 0.501502,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0691324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464467,-99) , 
2, 0.0706187, 1, 0, 0.508093,-99) , 
10, -2.00338, 1, 0, 0.513235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476072,-99) , 
0, 0.493327, 0, 0, 0.53284,-99) , 
NN(
0, 
0, 
-1, -0.711551, 0, -1, 0.44517,-99) , 
3, 3.77753, 0, 0, 0.462699,-99) , 
0, 0.496185, 0, 0, 0.496007,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0513514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472872,-99) , 
10, -0.213932, 1, 0, 0.49472,-99) , 
10, 0.72579, 0, 0, 0.503538,-99) , 
NN(
0, 
0, 
-1, -2.23824, 1, -1, 0.419539,-99) , 
8, -1.00028, 0, 0, 0.496993,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0824209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454074,-99) , 
2, -0.0704421, 0, 0, 0.515228,-99) , 
NN(
0, 
0, 
-1, 0.505345, 1, -1, 0.453358,-99) , 
0, 0.502851, 1, 0, 0.506329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469616,-99) , 
0, 0.49809, 0, 0, 0.511692,-99) , 
NN(
0, 
0, 
-1, -3.28238, 0, -1, 0.438664,-99) , 
10, -1.84714, 1, 0, 0.454854,-99) , 
8, 0.141751, 0, 0, 0.489583,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0680969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499034, 0, 1, 0.548922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436234,-99) , 
0, 0.503476, 0, 0, 0.474126,-99) , 
0, 0.500937, 1, 0, 0.525559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487319,-99) , 
2, -0.0404096, 1, 0, 0.499912,-99) , 
NN(
0, 
0, 
-1, -0.0314925, 0, -1, 0.454241,-99) , 
3, 2.02995, 1, 0, 0.483313,-99) , 
3, 3.76599, 0, 0, 0.493232,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.048032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481244,-99) , 
10, -0.600677, 0, 0, 0.519837,-99) , 
5, -0.619015, 1, 0, 0.532036,-99) , 
NN(
0, 
0, 
-1, 0.505845, 1, -1, 0.483184,-99) , 
0, 0.495233, 1, 0, 0.495315,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0787003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0648755, 1, 1, 0.550925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460916,-99) , 
0, 0.497637, 1, 0, 0.507348,-99) , 
0, 0.499995, 0, 0, 0.522102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463682,-99) , 
4, 0.999524, 0, 0, 0.515771,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.064286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483419,-99) , 
8, 0.766216, 0, 0, 0.505001,-99) , 
10, -2.2601, 1, 0, 0.509849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421748,-99) , 
10, 1.07696, 1, 0, 0.502711,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0730115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494812,-99) , 
0, 0.495233, 0, 0, 0.5932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473367,-99) , 
5, -0.891112, 0, 0, 0.536103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479269,-99) , 
0, 0.498092, 1, 0, 0.533638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473285,-99) , 
9, -3.16354, 1, 0, 0.479727,-99) , 
2, 0.068648, 0, 0, 0.489072,-99) , 
5, -0.238066, 1, 0, 0.495552,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0603768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484542,-99) , 
10, 0.498841, 1, 0, 0.54166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48124,-99) , 
5, 0.836683, 0, 0, 0.505265,-99) , 
5, 0.618998, 1, 0, 0.515693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481852,-99) , 
2, -0.150109, 0, 0, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44796,-99) , 
10, -0.119675, 1, 0, 0.478118,-99) , 
2, -0.0829858, 0, 0, 0.509683,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0901271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0198398, 0, 1, 0.578513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487341,-99) , 
0, 0.496185, 0, 0, 0.518621,-99) , 
3, 0.819418, 1, 0, 0.53157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466831,-99) , 
5, 0.728373, 1, 0, 0.499444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37843,-99) , 
5, 0.429658, 0, 0, 0.477741,-99) , 
3, 3.77053, 1, 0, 0.518387,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0431141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.70831, 0, 1, 0.511701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409561,-99) , 
2, 0.212324, 1, 0, 0.505689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419431,-99) , 
10, 1.08157, 1, 0, 0.498695,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0302071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499909,-99) , 
8, -1.2824, 1, 0, 0.504131,-99) , 
2, -0.2171, 1, 0, 0.509181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434725,-99) , 
4, 0.999524, 0, 0, 0.501528,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0993006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10144, 1, 1, 0.548703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46938,-99) , 
0, 0.489428, 1, 0, 0.479454,-99) , 
0, 0.497137, 0, 0, 0.508957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416669,-99) , 
3, 3.22268, 1, 0, 0.495135,-99) , 
NN(
0, 
0, 
-1, 0.71212, 0, -1, 0.408291,-99) , 
0, 0.502852, 0, 0, 0.455072,-99) , 
0, 0.500947, 1, 0, 0.494092,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0647529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.527955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462087,-99) , 
9, -1.18646, 1, 0, 0.479762,-99) , 
10, 0.131483, 1, 0, 0.511822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475785,-99) , 
10, -1.68714, 1, 0, 0.488152,-99) , 
NN(
0, 
0, 
-1, 0.164793, 0, -1, 0.417602,-99) , 
5, -0.523773, 0, 0, 0.476003,-99) , 
0, 0.499043, 1, 0, 0.496757,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0594345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402362,-99) , 
10, -0.0611596, 1, 0, 0.503449,-99) , 
8, 1.41611, 0, 0, 0.509218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518286,-99) , 
NN(
0, 
0, 
-1, 0.433352, 0, -1, 0.454156,-99) , 
3, 3.00374, 0, 0, 0.476908,-99) , 
9, -1.67274, 1, 0, 0.496613,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0478488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497565,-99) , 
9, -0.973808, 1, 0, 0.528137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491146,-99) , 
5, 0.795902, 1, 0, 0.503962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434304,-99) , 
5, 0.387645, 1, 0, 0.471738,-99) , 
5, 0.714254, 0, 0, 0.491246,-99) , 
8, 1.85572, 0, 0, 0.496796,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0776954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424947,-99) , 
8, -0.735188, 0, 0, 0.505295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44259,-99) , 
0, 0.493328, 1, 0, 0.456983,-99) , 
5, 0.714254, 0, 0, 0.487075,-99) , 
10, 0.731203, 0, 0, 0.498035,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0729404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498646,-99) , 
10, -1.46677, 1, 0, 0.519109,-99) , 
8, 1.28368, 0, 0, 0.543636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477686,-99) , 
10, -0.565723, 1, 0, 0.499544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372731,-99) , 
10, -2.09689, 0, 0, 0.492294,-99) , 
0, 0.500947, 0, 0, 0.505242,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0541156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.40685, 0, 1, 0.584514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494616,-99) , 
2, 0.156006, 0, 0, 0.499352,-99) , 
3, 0.533981, 1, 0, 0.508853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48258,-99) , 
0, 0.491967, 1, 0, 0.497451,-99) , 
NN(
0, 
0, 
-1, 0.502713, 0, -1, 0.434895,-99) , 
0, 0.49904, 1, 0, 0.467954,-99) , 
3, 3.01617, 1, 0, 0.495187,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0751493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497133, 1, 1, 0.571169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468641,-99) , 
0, 0.497138, 0, 0, 0.49855,-99) , 
5, 0.746026, 1, 0, 0.510911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468379,-99) , 
0, 0.494553, 1, 0, 0.484837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416668,-99) , 
0, 0.492376, 0, 0, 0.474392,-99) , 
5, 0.619036, 0, 0, 0.499254,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0771076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.83931, 1, 1, 0.538858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490238,-99) , 
3, 1.57638, 1, 0, 0.536462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458659,-99) , 
9, -2.23415, 0, 0, 0.473847,-99) , 
5, -0.523791, 1, 0, 0.483558,-99) , 
8, 0.713662, 0, 0, 0.510253,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.087894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.669397, 1, 1, 0.573245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439334,-99) , 
9, -2.73822, 1, 0, 0.502946,-99) , 
8, 0.209077, 0, 0, 0.533172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481286,-99) , 
8, 1.56758, 1, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461307,-99) , 
9, -1.68556, 0, 0, 0.495068,-99) , 
9, -1.85179, 1, 0, 0.516009,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0839758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537348, 1, 1, 0.583027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491972,-99) , 
5, 0.714217, 1, 0, 0.514717,-99) , 
9, -2.16607, 1, 0, 0.524903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482792,-99) , 
5, 0.714013, 1, 0, 0.513752,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.440723,-99) , 
3, 2.81089, 0, 0, 0.463752,-99) , 
8, 0.427672, 0, 0, 0.498156,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0450628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600236,-99) , 
NN(
NN(
0, 
0, 
-1, 2.12721, 1, 1, 0.543553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493858,-99) , 
9, -3.15877, 1, 0, 0.50068,-99) , 
9, -1.30087, 0, 0, 0.511031,-99) , 
9, -3.73917, 1, 0, 0.514389,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0618663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42028, 1, 1, 0.522567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426984,-99) , 
8, -0.871962, 0, 0, 0.47803,-99) , 
9, -2.88038, 0, 0, 0.51417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420045,-99) , 
7, 0.148272, 1, 0, 0.481699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386742,-99) , 
7, -951.286, 0, 0, 0.444384,-99) , 
0, 0.491423, 0, 0, 0.507774,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0643547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486391,-99) , 
0, 0.497137, 1, 0, 0.503926,-99) , 
10, -2.08753, 1, 0, 0.508891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46244,-99) , 
0, 0.499044, 0, 0, 0.504432,-99) , 
NN(
0, 
0, 
-1, -3.24092, 0, -1, 0.382338,-99) , 
10, -0.638978, 0, 0, 0.460296,-99) , 
5, -0.238087, 0, 0, 0.501312,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0390045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43381,-99) , 
0, 0.498092, 0, 0, 0.492468,-99) , 
8, -1.15015, 0, 0, 0.54239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495318,-99) , 
9, -3.08106, 1, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411051,-99) , 
8, -0.537974, 0, 0, 0.496122,-99) , 
8, -0.714896, 1, 0, 0.500833,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0627041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 1, 1, 0.594078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445342,-99) , 
0, 0.497138, 0, 0, 0.502797,-99) , 
3, 3.01617, 1, 0, 0.544387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473609,-99) , 
8, -0.427593, 0, 0, 0.539106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465505,-99) , 
9, -2.64492, 0, 0, 0.497,-99) , 
0, 0.495235, 1, 0, 0.507553,-99) , 
2, 0.0706187, 0, 0, 0.513972,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0695319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497408, 0, 1, 0.560616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430148,-99) , 
3, 0.865967, 0, 0, 0.499214,-99) , 
0, 0.499041, 1, 0, 0.531069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470225,-99) , 
3, 1.63883, 0, 0, 0.499638,-99) , 
NN(
0, 
0, 
-1, 0.92398, 0, -1, 0.467423,-99) , 
5, 0.854865, 1, 0, 0.482124,-99) , 
5, 0.619045, 1, 0, 0.496552,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0812523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.973598, 1, 1, 0.574978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448921,-99) , 
10, -1.40043, 1, 0, 0.508181,-99) , 
8, -0.0768907, 0, 0, 0.536774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528655,-99) , 
NN(
0, 
0, 
-1, 1.07028, 1, -1, 0.469222,-99) , 
8, 2.20546, 0, 0, 0.478223,-99) , 
9, -2.24269, 1, 0, 0.500892,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0519863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485645,-99) , 
8, 0.199947, 0, 0, 0.550859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49932,-99) , 
2, 0.0329408, 0, 0, 0.51334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391901,-99) , 
0, 0.500948, 0, 0, 0.434,-99) , 
3, 4.25647, 1, 0, 0.504852,-99) , 
3, 5.9128, 0, 0, 0.509616,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0448627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.54759, 0, 1, 0.566969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483648,-99) , 
0, 0.503802, 1, 0, 0.55088,-99) , 
NN(
NN(
0, 
0, 
-1, 0.673444, 1, 1, 0.513833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466723,-99) , 
10, 0.850993, 1, 0, 0.508924,-99) , 
5, -0.142851, 1, 0, 0.515579,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0523907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495859,-99) , 
2, -0.0844848, 1, 0, 0.51932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478769,-99) , 
2, 0.0831427, 0, 0, 0.486062,-99) , 
3, 3.40023, 0, 0, 0.495335,-99) , 
5, -0.904722, 1, 0, 0.498734,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0569913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.525657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485442,-99) , 
2, 0.123047, 0, 0, 0.506677,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.445964,-99) , 
8, 0.713022, 0, 0, 0.472986,-99) , 
2, 0.0564175, 1, 0, 0.514475,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0705329);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.09547, 1, 1, 0.527222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448005,-99) , 
8, 1.26206, 1, 0, 0.514312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329507,-99) , 
0, 0.499993, 1, 0, 0.412895,-99) , 
9, -2.92641, 0, 0, 0.487524,-99) , 
5, 0.333321, 0, 0, 0.518791,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.039598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628173,-99) , 
NN(
NN(
0, 
0, 
-1, -1.29778, 1, 1, 0.516209,-99) , 
NN(
0, 
0, 
-1, -1.56598, 0, -1, 0.484291,-99) , 
7, -951.286, 1, 0, 0.495058,-99) , 
8, -1.28616, 1, 0, 0.499694,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0783183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439118,-99) , 
3, 0.640351, 0, 0, 0.539333,-99) , 
5, -0.600919, 0, 0, 0.572396,-99) , 
NN(
NN(
0, 
0, 
-1, 0.970084, 1, 1, 0.518139,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.455211,-99) , 
9, -2.25567, 0, 0, 0.492664,-99) , 
5, 0.0476086, 1, 0, 0.505026,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0557741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.7262, 1, 1, 0.561098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490078,-99) , 
10, -0.0659858, 1, 0, 0.531811,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502364, 1, 1, 0.527639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469806,-99) , 
8, 1.00454, 0, 0, 0.484085,-99) , 
0, 0.501129, 0, 0, 0.498572,-99) , 
0, 0.495233, 1, 0, 0.506874,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.072122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489787,-99) , 
0, 0.500268, 1, 0, 0.502504,-99) , 
9, -3.16354, 1, 0, 0.513351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470619,-99) , 
0, 0.498499, 0, 0, 0.478385,-99) , 
NN(
0, 
0, 
-1, 0.495233, 1, -1, 0.438756,-99) , 
10, 0.129326, 1, 0, 0.46538,-99) , 
0, 0.499043, 0, 0, 0.485074,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0933986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491423, 0, 1, 0.592625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447249,-99) , 
8, -0.427019, 0, 0, 0.56374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489175,-99) , 
5, 0.809402, 1, 0, 0.530105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452553,-99) , 
5, 0.428558, 1, 0, 0.465817,-99) , 
10, -0.78152, 1, 0, 0.486611,-99) , 
0, 0.493328, 1, 0, 0.497965,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0726558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.757444, 0, 1, 0.539295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469615,-99) , 
5, 0.523807, 0, 0, 0.512886,-99) , 
NN(
0, 
0, 
-1, 0.50362, 1, -1, 0.460924,-99) , 
0, 0.499994, 1, 0, 0.494999,-99) , 
10, -0.226086, 1, 0, 0.517963,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0772699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.11491, 1, 1, 0.535609,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.449339,-99) , 
7, -1.30922, 0, 0, 0.52524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483803,-99) , 
5, 0.483045, 1, 0, 0.505335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420258,-99) , 
5, -0.809418, 0, 0, 0.490387,-99) , 
7, -951.286, 0, 0, 0.512876,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0719482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483602,-99) , 
2, 0.0579437, 1, 0, 0.529069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44213,-99) , 
2, 0.00387163, 0, 0, 0.470265,-99) , 
5, 0.142846, 0, 0, 0.517502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470361,-99) , 
0, 0.48961, 1, 0, 0.478097,-99) , 
8, 1.85757, 0, 0, 0.489017,-99) , 
0, 0.49809, 0, 0, 0.502996,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0548374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.062332, 1, 1, 0.550869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489469,-99) , 
5, 0.904755, 0, 0, 0.502864,-99) , 
2, 0.0317724, 0, 0, 0.513011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441307,-99) , 
2, 0.192216, 1, 0, 0.50847,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0660002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499623,-99) , 
0, 0.501899, 1, 0, 0.557605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466789,-99) , 
5, 0.673446, 0, 0, 0.511787,-99) , 
5, 0.238075, 1, 0, 0.519576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392845,-99) , 
10, -2.22138, 1, 0, 0.445175,-99) , 
8, -0.999767, 0, 0, 0.513875,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.075737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465279,-99) , 
8, 0.749339, 0, 0, 0.497864,-99) , 
9, -2.78501, 1, 0, 0.516295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474644,-99) , 
5, 0.71428, 1, 0, 0.497822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457252,-99) , 
5, -0.714268, 1, 0, 0.463131,-99) , 
7, -951.286, 1, 0, 0.47527,-99) , 
0, 0.502851, 0, 0, 0.481475,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0680027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497805,-99) , 
10, -2.216, 0, 0, 0.591487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482382,-99) , 
9, -0.989948, 0, 0, 0.493787,-99) , 
10, -1.73962, 1, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.444719,-99) , 
2, 0.0583883, 1, 0, 0.489235,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0567981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493897,-99) , 
3, 1.61406, 0, 0, 0.5131,-99) , 
3, 0.414851, 1, 0, 0.51742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567888,-99) , 
NN(
0, 
0, 
-1, -2.62378, 0, -1, 0.466457,-99) , 
10, -1.26021, 1, 0, 0.483291,-99) , 
3, 3.21294, 1, 0, 0.507117,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0693047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.814019, 0, 1, 0.539397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439274,-99) , 
5, 0.814036, 1, 0, 0.50037,-99) , 
3, 2.2188, 1, 0, 0.521356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454882,-99) , 
5, 0.950111, 1, 0, 0.477632,-99) , 
5, 0.904749, 1, 0, 0.509465,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0482713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.595085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498624,-99) , 
0, 0.494281, 1, 0, 0.515817,-99) , 
1, 0.00160375, 0, 0, 0.534743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420768,-99) , 
2, 0.116758, 1, 0, 0.49856,-99) , 
NN(
0, 
0, 
-1, -0.0310087, 0, -1, 0.445524,-99) , 
0, 0.5019, 1, 0, 0.488047,-99) , 
3, 3.76599, 0, 0, 0.499192,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0509439);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445754,-99) , 
1, -0.00218438, 0, 0, 0.495176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393449,-99) , 
8, 0.712551, 0, 0, 0.4426,-99) , 
0, 0.492376, 0, 0, 0.489024,-99) , 
3, 7.39984, 0, 0, 0.493877,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0555864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494092,-99) , 
5, 0.591828, 1, 0, 0.50236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349355,-99) , 
0, 0.489519, 0, 0, 0.49751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539261,-99) , 
NN(
0, 
0, 
-1, 0.384574, 0, -1, 0.405171,-99) , 
8, -0.431045, 1, 0, 0.428104,-99) , 
5, -0.42857, 0, 0, 0.486372,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0735394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0889877, 0, 1, 0.557698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444876,-99) , 
5, -0.238145, 0, 0, 0.543488,-99) , 
NN(
NN(
0, 
0, 
-1, 3.77572, 0, 1, 0.531067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378449,-99) , 
7, -0.87201, 0, 0, 0.471442,-99) , 
7, -951.286, 1, 0, 0.49217,-99) , 
10, -0.962296, 1, 0, 0.505394,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0566366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523604, 1, 1, 0.542589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454788,-99) , 
10, 0.143427, 1, 0, 0.483317,-99) , 
2, -0.0740473, 1, 0, 0.492554,-99) , 
NN(
0, 
0, 
-1, 2.84893, 0, -1, 0.434784,-99) , 
9, -3.04349, 0, 0, 0.483708,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0930546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46072,-99) , 
3, 6.79562, 1, 0, 0.555149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428917,-99) , 
5, -0.714203, 0, 0, 0.543462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461468,-99) , 
10, -0.562083, 1, 0, 0.471693,-99) , 
9, -0.741529, 0, 0, 0.483414,-99) , 
10, -0.848253, 1, 0, 0.501142,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0544265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494963,-99) , 
8, -0.403421, 0, 0, 0.560292,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.50951,-99) , 
9, -1.90455, 1, 0, 0.535203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402594,-99) , 
1, 0.00480033, 1, 0, 0.505284,-99) , 
NN(
0, 
0, 
-1, -0.387556, 0, -1, 0.428182,-99) , 
5, -0.0475972, 0, 0, 0.492209,-99) , 
0, 0.500947, 0, 0, 0.503169,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.087803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.909018, 0, 1, 0.546589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4749,-99) , 
10, -1.16933, 1, 0, 0.500617,-99) , 
8, 0.550945, 0, 0, 0.510717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458553,-99) , 
8, 1.73509, 0, 0, 0.477802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406172,-99) , 
10, 0.837472, 1, 0, 0.457474,-99) , 
10, -0.209558, 1, 0, 0.485602,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.077017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457423,-99) , 
0, 0.497144, 0, 0, 0.498711,-99) , 
8, -0.914076, 0, 0, 0.554543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482084,-99) , 
9, -1.77337, 1, 0, 0.501711,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.44802,-99) , 
8, 0.403888, 0, 0, 0.483419,-99) , 
10, -1.61834, 1, 0, 0.490065,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0468106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495092,-99) , 
9, -2.69707, 1, 0, 0.501673,-99) , 
9, -3.18631, 1, 0, 0.50756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441525,-99) , 
10, -2.11301, 1, 0, 0.493326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356706,-99) , 
0, 0.5019, 1, 0, 0.457497,-99) , 
8, -0.714476, 0, 0, 0.502042,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0849057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465587,-99) , 
0, 0.495232, 0, 0, 0.50817,-99) , 
10, 0.0230847, 1, 0, 0.529302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468661,-99) , 
10, -2.10143, 1, 0, 0.47879,-99) , 
8, 1.13211, 0, 0, 0.48742,-99) , 
9, -1.96667, 0, 0, 0.507688,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0587849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4901,-99) , 
2, -0.0458953, 0, 0, 0.569211,-99) , 
NN(
0, 
0, 
-1, -1.1951, 0, 1, 0.513969,-99) , 
10, -0.928892, 1, 0, 0.523872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446437,-99) , 
9, -3.80126, 0, 0, 0.49461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405821,-99) , 
8, -1.04074, 1, 0, 0.457063,-99) , 
8, -0.714218, 0, 0, 0.516451,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0694702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402569,-99) , 
0, 0.489609, 0, 0, 0.516049,-99) , 
10, -1.67356, 1, 0, 0.526389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476775,-99) , 
10, -0.145115, 0, 0, 0.48906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424016,-99) , 
8, 1.85519, 1, 0, 0.479389,-99) , 
0, 0.49809, 1, 0, 0.502686,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0752599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503248, 0, 1, 0.596021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421343,-99) , 
7, -951.286, 0, 0, 0.511158,-99) , 
0, 0.504078, 1, 0, 0.552834,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495099, 1, 1, 0.55458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453169,-99) , 
5, 0.755097, 0, 0, 0.488646,-99) , 
5, -0.714193, 1, 0, 0.494553,-99) , 
0, 0.5019, 0, 0, 0.505898,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0552169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468784,-99) , 
8, 1.00003, 0, 0, 0.48304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410376,-99) , 
2, -0.192186, 0, 0, 0.478428,-99) , 
2, 0.212621, 0, 0, 0.482819,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0666884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0582143, 0, 1, 0.554864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491797,-99) , 
8, 1.36537, 0, 0, 0.506023,-99) , 
10, -0.861177, 1, 0, 0.52236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443944,-99) , 
10, 0.865428, 1, 0, 0.512755,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0838913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498823,-99) , 
0, 0.496723, 0, 0, 0.548115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425898,-99) , 
0, 0.493325, 0, 0, 0.531959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475146,-99) , 
9, -1.11307, 1, 0, 0.530631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458823,-99) , 
9, -2.43002, 1, 0, 0.483362,-99) , 
8, 1.57011, 0, 0, 0.493797,-99) , 
3, 3.7668, 0, 0, 0.502695,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0625372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474524,-99) , 
10, -0.31074, 1, 0, 0.537087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480186,-99) , 
9, -1.48114, 1, 0, 0.501839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419799,-99) , 
1, -0.000540264, 1, 0, 0.460546,-99) , 
8, -0.143071, 0, 0, 0.491859,-99) , 
0, 0.492376, 1, 0, 0.496636,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0638076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.530215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482416,-99) , 
9, -2.98883, 1, 0, 0.49265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349627,-99) , 
8, -1.00111, 0, 0, 0.481667,-99) , 
3, 2.76218, 1, 0, 0.512321,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0736925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493416,-99) , 
10, -0.382015, 1, 0, 0.509202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456857,-99) , 
5, -0.714254, 1, 0, 0.466336,-99) , 
0, 0.497138, 0, 0, 0.491432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543191,-99) , 
NN(
0, 
0, 
-1, 0.50063, 0, -1, 0.369307,-99) , 
0, 0.497138, 1, 0, 0.429032,-99) , 
9, -3.18144, 0, 0, 0.4838,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0817704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484679,-99) , 
4, 0.999995, 0, 0, 0.534377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41753,-99) , 
4, 0.999905, 0, 0, 0.523373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473356,-99) , 
9, -2.04798, 1, 0, 0.487407,-99) , 
NN(
0, 
0, 
-1, -1.25629, 1, -1, 0.444047,-99) , 
9, -2.54028, 0, 0, 0.475039,-99) , 
5, 0.714278, 1, 0, 0.493289,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0695347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458399,-99) , 
0, 0.503804, 1, 0, 0.574523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496711,-99) , 
0, 0.499041, 0, 0, 0.521183,-99) , 
5, -0.482993, 1, 0, 0.533852,-99) , 
NN(
0, 
0, 
-1, -1.63777, 0, -1, 0.472757,-99) , 
5, 0.80951, 1, 0, 0.504583,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0435409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591577,-99) , 
NN(
NN(
0, 
0, 
-1, 0.564618, 1, 1, 0.511773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45811,-99) , 
0, 0.503802, 0, 0, 0.472838,-99) , 
5, 0.428563, 0, 0, 0.502792,-99) , 
9, -3.70823, 1, 0, 0.505838,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0832128);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.71825, 1, 1, 0.537801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465108,-99) , 
9, -1.17577, 1, 0, 0.507246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447213,-99) , 
0, 0.498136, 1, 0, 0.456358,-99) , 
9, -1.83759, 0, 0, 0.477815,-99) , 
0, 0.497138, 1, 0, 0.501635,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0741244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48493,-99) , 
0, 0.503532, 1, 0, 0.521289,-99) , 
5, 0.0475864, 1, 0, 0.539242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480561,-99) , 
8, 1.19335, 1, 0, 0.5103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453624,-99) , 
8, 0.20767, 0, 0, 0.477837,-99) , 
9, -1.85691, 0, 0, 0.492156,-99) , 
0, 0.5019, 0, 0, 0.501345,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0717906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490212,-99) , 
5, -0.8458, 0, 0, 0.559645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475338,-99) , 
9, -2.0373, 0, 0, 0.501159,-99) , 
5, 0.619036, 1, 0, 0.517018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460828,-99) , 
10, -1.62852, 0, 0, 0.521245,-99) , 
NN(
0, 
0, 
-1, -0.718992, 0, -1, 0.471024,-99) , 
10, -1.19202, 1, 0, 0.481049,-99) , 
0, 0.499042, 1, 0, 0.501541,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0407093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596343,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.564904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494077,-99) , 
3, 5.90021, 0, 0, 0.500051,-99) , 
0, 0.503804, 0, 0, 0.506829,-99) , 
2, -0.212792, 1, 0, 0.511128,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.07136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491939,-99) , 
10, 0.138789, 1, 0, 0.510815,-99) , 
0, 0.49428, 1, 0, 0.524373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447854,-99) , 
10, -0.363705, 1, 0, 0.547981,-99) , 
NN(
0, 
0, 
-1, -0.908003, 1, -1, 0.470967,-99) , 
8, 0.53596, 0, 0, 0.48362,-99) , 
9, -2.11364, 0, 0, 0.505674,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0900178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809444, 1, 1, 0.542149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413221,-99) , 
10, -2.20031, 1, 0, 0.461675,-99) , 
8, -0.878177, 0, 0, 0.527656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47388,-99) , 
0, 0.50054, 1, 0, 0.502184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413726,-99) , 
5, 0.142824, 1, 0, 0.432088,-99) , 
0, 0.496187, 0, 0, 0.479018,-99) , 
8, 0.71319, 1, 0, 0.503107,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.05397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.401404, 1, 1, 0.566952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476982,-99) , 
10, -0.786348, 1, 0, 0.488578,-99) , 
2, 0.212852, 0, 0, 0.492593,-99) , 
0, 0.503805, 0, 0, 0.500249,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0429456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490206,-99) , 
5, 0.71428, 1, 0, 0.50352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416943,-99) , 
0, 0.505709, 1, 0, 0.499988,-99) , 
2, 0.216506, 0, 0, 0.503829,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.088348);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.96439, 1, 1, 0.548913,-99) , 
NN(
NN(
0, 
0, 
-1, -0.700595, 0, 1, 0.53777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456766,-99) , 
9, -2.20546, 0, 0, 0.480375,-99) , 
9, -3.25249, 1, 0, 0.490726,-99) , 
8, 0.714305, 0, 0, 0.51931,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0544243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479336,-99) , 
5, -0.907307, 0, 0, 0.528713,-99) , 
5, -0.351477, 0, 0, 0.554894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49669,-99) , 
8, -0.714528, 1, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424608,-99) , 
5, 0.963705, 1, 0, 0.492356,-99) , 
5, 0.238107, 1, 0, 0.50355,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0565053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457037,-99) , 
9, -2.9118, 0, 0, 0.555165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497468,-99) , 
2, -0.119384, 1, 0, 0.505586,-99) , 
2, 0.0246244, 0, 0, 0.519677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468455,-99) , 
4, 0.999525, 0, 0, 0.514338,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.073548);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502216, 1, 1, 0.549191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476756,-99) , 
8, -0.711928, 0, 0, 0.525818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376414,-99) , 
0, 0.499405, 0, 0, 0.475905,-99) , 
0, 0.499041, 1, 0, 0.514958,-99) , 
0, 0.500946, 0, 0, 0.523707,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0319502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499093,-99) , 
10, -1.37291, 1, 0, 0.503979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351639,-99) , 
5, 0.428648, 0, 0, 0.455599,-99) , 
9, -3.28293, 0, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412348,-99) , 
3, 8.06974, 1, 0, 0.494563,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0331759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4443,-99) , 
9, -3.39119, 0, 0, 0.499699,-99) , 
NN(
0, 
0, 
-1, 0.033965, 1, -1, 0.445975,-99) , 
0, 0.491424, 0, 0, 0.495284,-99) , 
8, 2.142, 0, 0, 0.500609,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0825954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499393,-99) , 
5, -0.333338, 1, 0, 0.515317,-99) , 
8, 0.123091, 0, 0, 0.537594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45973,-99) , 
8, 2.12744, 1, 0, 0.539114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474645,-99) , 
8, 1.71291, 0, 0, 0.485195,-99) , 
9, -1.23176, 0, 0, 0.499699,-99) , 
9, -2.65527, 1, 0, 0.50867,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0670464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607807,-99) , 
NN(
NN(
0, 
0, 
-1, 0.194731, 1, 1, 0.52457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430625,-99) , 
10, -1.72805, 1, 0, 0.477359,-99) , 
9, -2.9264, 0, 0, 0.517934,-99) , 
9, -3.73917, 1, 0, 0.521046,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0725539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999995, 0, 1, 0.530041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433466,-99) , 
4, 0.999887, 0, 0, 0.516589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454342,-99) , 
4, 0.999525, 0, 0, 0.510151,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0611894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476326,-99) , 
8, 1.28198, 0, 0, 0.485788,-99) , 
9, -1.07602, 0, 0, 0.495194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434377,-99) , 
4, 0.999525, 0, 0, 0.489037,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0720987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.950005, 1, 1, 0.661816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377371,-99) , 
0, 0.491426, 0, 0, 0.508375,-99) , 
8, 0.0668625, 0, 0, 0.537376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42144,-99) , 
5, -0.619034, 0, 0, 0.49091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327673,-99) , 
5, 0.238191, 1, 0, 0.426486,-99) , 
9, -2.39974, 0, 0, 0.484515,-99) , 
10, -0.822702, 1, 0, 0.500711,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0629711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470347,-99) , 
10, -0.373885, 1, 0, 0.491464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414489,-99) , 
5, -0.863926, 1, 0, 0.445415,-99) , 
5, 0.42856, 0, 0, 0.481166,-99) , 
1, -0.00532441, 1, 0, 0.484279,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.096078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.43175, 1, 1, 0.549995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369021,-99) , 
3, 3.28866, 1, 0, 0.469265,-99) , 
2, 0.0213072, 1, 0, 0.522558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475603,-99) , 
5, 0.877597, 0, 0, 0.518025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449378,-99) , 
1, 0.00192435, 0, 0, 0.463609,-99) , 
3, 3.41781, 0, 0, 0.480146,-99) , 
5, 0.714273, 1, 0, 0.495937,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0442804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.528685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421133,-99) , 
9, -2.04059, 0, 0, 0.489903,-99) , 
9, -2.2245, 1, 0, 0.505419,-99) , 
NN(
0, 
0, 
-1, -0.927454, 1, -1, 0.445316,-99) , 
3, 6.29375, 1, 0, 0.49979,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0633828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470486,-99) , 
8, -1.33174, 0, 0, 0.563152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488951,-99) , 
3, 2.84573, 0, 0, 0.518437,-99) , 
NN(
0, 
0, 
-1, 0.909711, 0, -1, 0.473216,-99) , 
10, -1.15808, 1, 0, 0.479879,-99) , 
9, -3.42342, 1, 0, 0.485175,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0398676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.316772, 0, 1, 0.55919,-99) , 
NN(
0, 
0, 
-1, -0.0278126, 0, -1, 0.491841,-99) , 
10, -1.12884, 1, 0, 0.502296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377188,-99) , 
3, 2.1197, 0, 0, 0.4321,-99) , 
8, -1.00049, 0, 0, 0.497486,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0773117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478498,-99) , 
8, 0.316424, 0, 0, 0.534638,-99) , 
9, -3.22151, 1, 0, 0.544381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455538,-99) , 
8, -0.144496, 0, 0, 0.531143,-99) , 
NN(
0, 
0, 
-1, 0.499917, 1, -1, 0.484196,-99) , 
0, 0.501083, 0, 0, 0.501319,-99) , 
0, 0.496185, 1, 0, 0.515414,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0325972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56212,-99) , 
NN(
NN(
0, 
0, 
-1, -1.78722, 1, 1, 0.521963,-99) , 
NN(
0, 
0, 
-1, -0.858498, 0, -1, 0.493437,-99) , 
8, 0.809598, 0, 0, 0.507121,-99) , 
10, -1.99711, 1, 0, 0.509795,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0587844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4721,-99) , 
5, 0.909274, 1, 0, 0.504948,-99) , 
5, -0.904725, 1, 0, 0.509481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423525,-99) , 
10, 1.07696, 1, 0, 0.502176,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0770233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564342,-99) , 
NN(
0, 
0, 
-1, 3.81899, 1, -1, 0.490299,-99) , 
5, 0.854899, 1, 0, 0.503808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418805,-99) , 
3, 0.666597, 0, 0, 0.526982,-99) , 
NN(
0, 
0, 
-1, -2.65912, 0, -1, 0.448738,-99) , 
5, -0.56915, 1, 0, 0.466502,-99) , 
5, 0.809503, 0, 0, 0.483336,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0539633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.133094, 1, 1, 0.579334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499173,-99) , 
0, 0.490471, 1, 0, 0.504504,-99) , 
8, 0.768135, 0, 0, 0.518483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454209,-99) , 
7, -0.42208, 0, 0, 0.504143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461392,-99) , 
7, -951.286, 0, 0, 0.48748,-99) , 
10, 0.0316521, 1, 0, 0.507159,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0763023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.536947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458225,-99) , 
2, 0.0939815, 1, 0, 0.526603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460768,-99) , 
10, -0.788649, 1, 0, 0.482439,-99) , 
2, 0.197074, 0, 0, 0.489128,-99) , 
7, -951.286, 1, 0, 0.501889,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0596611);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493601,-99) , 
9, -2.25529, 1, 0, 0.506398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449055,-99) , 
8, -0.80502, 1, 0, 0.465169,-99) , 
8, 0.215865, 0, 0, 0.492893,-99) , 
9, -3.81268, 1, 0, 0.496122,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0792332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.524162, 1, 1, 0.569407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461265,-99) , 
9, -1.19549, 0, 0, 0.512452,-99) , 
10, 0.402098, 1, 0, 0.538415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.730154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465093,-99) , 
10, -0.0133378, 1, 0, 0.593712,-99) , 
NN(
0, 
0, 
-1, -0.513303, 1, -1, 0.479218,-99) , 
8, 1.00834, 0, 0, 0.490068,-99) , 
9, -1.85691, 0, 0, 0.51083,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0859832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.59421, 1, 1, 0.540602,-99) , 
NN(
0, 
0, 
-1, 0.71422, 0, -1, 0.449601,-99) , 
8, -0.836955, 0, 0, 0.526123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437629,-99) , 
5, -0.238126, 1, 0, 0.45256,-99) , 
8, 2.11949, 0, 0, 0.4692,-99) , 
10, -0.073982, 1, 0, 0.502632,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0431218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493959,-99) , 
9, -1.11139, 1, 0, 0.554423,-99) , 
NN(
0, 
0, 
-1, -0.00532441, 1, 1, 0.505795,-99) , 
8, 1.5709, 0, 0, 0.516746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450933,-99) , 
4, 0.999524, 0, 0, 0.510101,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0901838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471706,-99) , 
10, -0.720969, 1, 0, 0.551393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468511,-99) , 
10, -1.77537, 1, 0, 0.489477,-99) , 
8, 0.0294241, 0, 0, 0.51693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510829,-99) , 
NN(
0, 
0, 
-1, 0.499045, 0, -1, 0.454614,-99) , 
5, 0.904749, 0, 0, 0.469118,-99) , 
9, -2.07529, 1, 0, 0.490278,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0484714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489562,-99) , 
0, 0.493326, 0, 0, 0.555106,-99) , 
NN(
0, 
0, 
-1, -0.954291, 1, 1, 0.515069,-99) , 
2, -0.0818425, 1, 0, 0.521189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449018,-99) , 
10, 1.08977, 1, 0, 0.515271,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0776749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.50003, 1, 1, 0.556999,-99) , 
NN(
NN(
0, 
0, 
-1, -0.080455, 1, 1, 0.52456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454117,-99) , 
9, -1.4236, 0, 0, 0.479996,-99) , 
9, -2.07064, 1, 0, 0.506297,-99) , 
8, 1.57097, 0, 0, 0.517695,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0815996);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482585,-99) , 
0, 0.502853, 1, 0, 0.540922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472731,-99) , 
5, 0.92226, 0, 0, 0.496469,-99) , 
5, 0.863945, 1, 0, 0.521461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427472,-99) , 
8, 0.138248, 0, 0, 0.509195,-99) , 
NN(
0, 
0, 
-1, -0.809472, 1, -1, 0.417967,-99) , 
7, -951.286, 0, 0, 0.456945,-99) , 
5, -0.428559, 0, 0, 0.511771,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0450993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450951,-99) , 
10, 0.21901, 1, 0, 0.498248,-99) , 
10, 0.695268, 0, 0, 0.504482,-99) , 
NN(
0, 
0, 
-1, 0.490515, 1, -1, 0.428907,-99) , 
0, 0.491424, 0, 0, 0.498461,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0643771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
0, 0.499043, 0, 0, 0.496896,-99) , 
5, 0.428566, 1, 0, 0.501331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461651,-99) , 
3, 1.12308, 1, 0, 0.494887,-99) , 
NN(
0, 
0, 
-1, -0.564643, 1, -1, 0.382424,-99) , 
10, -0.658798, 0, 0, 0.454884,-99) , 
5, 0.142846, 0, 0, 0.492607,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0777679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142348, 1, 1, 0.583801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369894,-99) , 
5, -0.847961, 1, 0, 0.497319,-99) , 
5, -0.709711, 0, 0, 0.540356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483822,-99) , 
5, 0.818574, 0, 0, 0.508293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438117,-99) , 
0, 0.497139, 1, 0, 0.464315,-99) , 
1, 0.00177148, 1, 0, 0.498138,-99) , 
5, 0.523802, 1, 0, 0.507758,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.067049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.94414, 1, 1, 0.566957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49015,-99) , 
7, -951.286, 1, 0, 0.507095,-99) , 
2, -0.0829858, 1, 0, 0.515715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429846,-99) , 
8, -0.711508, 0, 0, 0.509883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414723,-99) , 
9, -2.46363, 1, 0, 0.437072,-99) , 
7, -951.286, 0, 0, 0.483953,-99) , 
0, 0.49809, 0, 0, 0.500029,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0720113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479894,-99) , 
0, 0.499043, 1, 0, 0.503403,-99) , 
9, -2.43063, 1, 0, 0.509474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459207,-99) , 
0, 0.499043, 0, 0, 0.490536,-99) , 
NN(
0, 
0, 
-1, -1.07406, 1, -1, 0.432951,-99) , 
7, -951.286, 0, 0, 0.468308,-99) , 
8, 0.430768, 0, 0, 0.492619,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0772379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493561,-99) , 
10, -0.323875, 0, 0, 0.561894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470201,-99) , 
9, -2.40628, 1, 0, 0.500538,-99) , 
3, 2.25791, 0, 0, 0.525104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484115,-99) , 
5, 0.891126, 1, 0, 0.507902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45888,-99) , 
10, -1.50869, 1, 0, 0.469608,-99) , 
0, 0.499043, 0, 0, 0.484526,-99) , 
5, 0.618999, 1, 0, 0.495871,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0747789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490083,-99) , 
2, -0.0261147, 0, 0, 0.599036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477867,-99) , 
0, 0.498092, 0, 0, 0.499883,-99) , 
3, 2.78168, 1, 0, 0.564928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488497,-99) , 
5, 0.768713, 1, 0, 0.502752,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.458442,-99) , 
5, 0.714267, 0, 0, 0.486941,-99) , 
1, -0.00218438, 1, 0, 0.49999,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0745904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904458, 1, 1, 0.562311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442525,-99) , 
0, 0.503804, 1, 0, 0.548226,-99) , 
NN(
NN(
0, 
0, 
-1, -0.13521, 1, 1, 0.516525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401994,-99) , 
5, 0.238191, 1, 0, 0.458659,-99) , 
9, -2.24461, 0, 0, 0.509506,-99) , 
10, -0.701497, 1, 0, 0.522687,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0635456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.566766, 0, 1, 0.614948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464463,-99) , 
8, 0.831946, 0, 0, 0.50714,-99) , 
10, -0.910955, 1, 0, 0.532913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55164,-99) , 
NN(
0, 
0, 
-1, 0.17847, 1, -1, 0.480408,-99) , 
8, 1.85567, 0, 0, 0.491351,-99) , 
0, 0.495233, 1, 0, 0.501458,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0569298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.718453, 1, 1, 0.559827,-99) , 
NN(
NN(
0, 
0, 
-1, 0.940545, 0, 1, 0.524481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44025,-99) , 
8, 1.99743, 1, 0, 0.48971,-99) , 
9, -1.86642, 1, 0, 0.508478,-99) , 
2, -0.0732547, 1, 0, 0.516829,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0506633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.42768, 0, 1, 0.514142,-99) , 
NN(
0, 
0, 
-1, -1.40298, 0, -1, 0.430184,-99) , 
10, -1.93565, 0, 0, 0.508627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419894,-99) , 
0, 0.504213, 0, 0, 0.485976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421143,-99) , 
8, 1.01749, 1, 0, 0.460165,-99) , 
0, 0.502852, 1, 0, 0.50078,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0666503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09413, 0, 1, 0.514866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429548,-99) , 
5, -0.142928, 1, 0, 0.448971,-99) , 
8, -0.517593, 0, 0, 0.500607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473477,-99) , 
8, 1.73643, 0, 0, 0.49342,-99) , 
NN(
0, 
0, 
-1, 0.333291, 0, -1, 0.422134,-99) , 
0, 0.498091, 0, 0, 0.457521,-99) , 
10, 0.131483, 1, 0, 0.486132,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0627427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
5, 0.809056, 0, 0, 0.531767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434781,-99) , 
9, -3.74162, 0, 0, 0.511612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509144,-99) , 
NN(
0, 
0, 
-1, 0.454328, 1, -1, 0.468335,-99) , 
8, 2.11798, 0, 0, 0.473544,-99) , 
10, -1.1157, 1, 0, 0.481735,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0794089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.661804, 1, 1, 0.558152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416184,-99) , 
0, 0.498091, 0, 0, 0.469707,-99) , 
5, 0.464842, 0, 0, 0.516663,-99) , 
NN(
0, 
0, 
-1, -0.391088, 0, -1, 0.479563,-99) , 
5, 0.809502, 1, 0, 0.498829,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0539379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.479564, 1, 1, 0.521006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47643,-99) , 
10, -0.450974, 0, 0, 0.485219,-99) , 
9, -2.25567, 0, 0, 0.506901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496334,-99) , 
0, 0.489158, 0, 0, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0.491686, 1, -1, 0.407336,-99) , 
0, 0.490562, 1, 0, 0.452141,-99) , 
0, 0.492376, 0, 0, 0.500787,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0548672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.140451, 0, 1, 0.562777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445119,-99) , 
10, -1.35417, 0, 0, 0.493387,-99) , 
0, 0.493328, 1, 0, 0.503525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533928,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.461219,-99) , 
10, -1.33688, 1, 0, 0.473953,-99) , 
5, 0.809501, 1, 0, 0.489554,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0615595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.516591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466793,-99) , 
4, 0.999524, 0, 0, 0.509144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448506,-99) , 
5, -0.34694, 1, 0, 0.476335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360702,-99) , 
4, 0.999906, 0, 0, 0.465588,-99) , 
5, 0.714278, 0, 0, 0.49225,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0501906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0699813, 1, 1, 0.520353,-99) , 
NN(
0, 
0, 
-1, -2.4992, 0, -1, 0.482321,-99) , 
3, 3.76599, 1, 0, 0.511042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47723,-99) , 
9, -3.91431, 1, 0, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352058,-99) , 
10, -1.36973, 1, 0, 0.470654,-99) , 
9, -3.09444, 0, 0, 0.505391,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.059522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432951,-99) , 
0, 0.49523, 0, 0, 0.526686,-99) , 
8, -0.556104, 0, 0, 0.555296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489151,-99) , 
0, 0.494282, 1, 0, 0.499346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465349,-99) , 
10, 0.706898, 1, 0, 0.493235,-99) , 
10, -1.35417, 1, 0, 0.502782,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.052164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61602, 1, 1, 0.58628,-99) , 
NN(
0, 
0, 
-1, -0.827676, 0, -1, 0.458751,-99) , 
0, 0.499995, 1, 0, 0.537912,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.482812,-99) , 
9, -2.86145, 1, 0, 0.492209,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0662689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467235,-99) , 
10, -0.552949, 1, 0, 0.524277,-99) , 
NN(
0, 
0, 
-1, -0.428536, 0, -1, 0.488961,-99) , 
9, -2.01027, 1, 0, 0.499799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470132,-99) , 
9, -3.53912, 1, 0, 0.491852,-99) , 
NN(
0, 
0, 
-1, -0.698785, 0, -1, 0.394406,-99) , 
0, 0.500947, 1, 0, 0.461511,-99) , 
9, -2.61812, 0, 0, 0.490105,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0736187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.753055, 0, 1, 0.576403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449552,-99) , 
0, 0.503485, 1, 0, 0.496783,-99) , 
3, 2.77543, 1, 0, 0.543433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449566,-99) , 
0, 0.49206, 0, 0, 0.529961,-99) , 
NN(
0, 
0, 
-1, -0.996622, 0, -1, 0.480187,-99) , 
3, 3.00374, 0, 0, 0.495061,-99) , 
0, 0.500947, 0, 0, 0.507757,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.102713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0591127, 0, 1, 0.581243,-99) , 
NN(
0, 
0, 
-1, -2.99442, 0, -1, 0.461021,-99) , 
0, 0.500947, 1, 0, 0.546589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424917,-99) , 
5, -0.428559, 0, 0, 0.512401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409965,-99) , 
10, -0.693521, 1, 0, 0.449803,-99) , 
9, -2.17691, 0, 0, 0.499468,-99) , 
10, -0.848253, 1, 0, 0.513409,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0848999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394845,-99) , 
0, 0.50394, 1, 0, 0.518215,-99) , 
0, 0.504757, 0, 0, 0.524068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429166,-99) , 
8, 1.88726, 0, 0, 0.493801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430885,-99) , 
9, -0.8938, 1, 0, 0.464982,-99) , 
10, 0.39376, 1, 0, 0.509108,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0553958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434523,-99) , 
7, -1.30971, 0, 0, 0.503387,-99) , 
NN(
0, 
0, 
-1, -0.289819, 0, -1, 0.46534,-99) , 
7, -951.286, 0, 0, 0.48944,-99) , 
3, 6.66832, 0, 0, 0.495792,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0868978);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488069,-99) , 
9, -1.86152, 0, 0, 0.523314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39835,-99) , 
0, 0.496185, 0, 0, 0.465003,-99) , 
5, -0.333273, 0, 0, 0.509402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462723,-99) , 
10, 0.0987056, 0, 0, 0.520637,-99) , 
NN(
0, 
0, 
-1, 0.365083, 0, -1, 0.456731,-99) , 
5, 0.0476086, 1, 0, 0.464553,-99) , 
7, -951.286, 1, 0, 0.479938,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0640166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490623,-99) , 
3, 4.38859, 1, 0, 0.563701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493044,-99) , 
10, -0.33498, 1, 0, 0.511966,-99) , 
5, 0.569166, 1, 0, 0.521222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40828,-99) , 
3, 1.57381, 1, 0, 0.462596,-99) , 
5, -0.809518, 0, 0, 0.515131,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0840419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50813, 0, 1, 0.578768,-99) , 
NN(
0, 
0, 
-1, -0.88116, 0, -1, 0.474263,-99) , 
10, 0.591649, 1, 0, 0.52065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474867,-99) , 
8, -0.119931, 0, 0, 0.542919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461619,-99) , 
9, -1.76349, 0, 0, 0.473579,-99) , 
5, -0.809476, 1, 0, 0.480524,-99) , 
8, 1.28443, 0, 0, 0.493207,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0658642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28038, 1, 1, 0.625991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476693,-99) , 
8, 0.107947, 0, 0, 0.522218,-99) , 
0, 0.499042, 1, 0, 0.574058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427008,-99) , 
8, -1.41266, 0, 0, 0.536174,-99) , 
NN(
0, 
0, 
-1, -0.0019101, 0, -1, 0.483908,-99) , 
10, -1.2389, 1, 0, 0.493565,-99) , 
5, -0.142859, 1, 0, 0.504934,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0727416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.326191, 1, 1, 0.53241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411835,-99) , 
5, 0.723285, 0, 0, 0.454886,-99) , 
10, -1.77303, 0, 0, 0.526019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446105,-99) , 
9, -2.24582, 1, 0, 0.479091,-99) , 
5, 0.904727, 1, 0, 0.513279,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0910546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.167984, 1, 1, 0.578269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478541,-99) , 
2, -0.0335051, 1, 0, 0.492182,-99) , 
9, -1.77037, 1, 0, 0.527792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444066,-99) , 
9, -3.60738, 0, 0, 0.5033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439696,-99) , 
0, 0.504439, 0, 0, 0.459515,-99) , 
0, 0.49809, 1, 0, 0.480417,-99) , 
8, 0.142905, 0, 0, 0.512354,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0836348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.46321, 0, 1, 0.551365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393493,-99) , 
0, 0.50528, 0, 0, 0.47541,-99) , 
0, 0.504347, 1, 0, 0.53599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48107,-99) , 
2, 0.0450076, 0, 0, 0.498169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37604,-99) , 
10, -0.620394, 0, 0, 0.444288,-99) , 
0, 0.491423, 0, 0, 0.490586,-99) , 
0, 0.499041, 0, 0, 0.509088,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0710809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490456,-99) , 
0, 0.500631, 1, 0, 0.526673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423787,-99) , 
0, 0.49301, 1, 0, 0.474965,-99) , 
0, 0.494282, 0, 0, 0.516501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477976,-99) , 
0, 0.49705, 0, 0, 0.504024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406042,-99) , 
0, 0.503262, 0, 0, 0.446318,-99) , 
0, 0.499997, 1, 0, 0.48322,-99) , 
8, 0.142462, 0, 0, 0.505855,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0627742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463009,-99) , 
9, -2.07529, 0, 0, 0.488973,-99) , 
4, 0.999525, 1, 0, 0.497024,-99) , 
NN(
0, 
0, 
-1, -0.874536, 0, -1, 0.43256,-99) , 
0, 0.491424, 0, 0, 0.491608,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0675246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 0, 1, 0.602858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485824,-99) , 
3, 1.02019, 1, 0, 0.513228,-99) , 
3, 2.81089, 0, 0, 0.541386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557193,-99) , 
NN(
0, 
0, 
-1, 0.0939815, 1, -1, 0.478067,-99) , 
5, -0.80949, 1, 0, 0.485782,-99) , 
10, -0.843232, 1, 0, 0.501893,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0755482);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.86885, 0, 1, 0.53476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48517,-99) , 
10, 0.620523, 1, 0, 0.514436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416813,-99) , 
0, 0.497134, 1, 0, 0.464251,-99) , 
10, 0.288615, 0, 0, 0.49765,-99) , 
10, -0.0781661, 1, 0, 0.519042,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0594566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714209, 1, 1, 0.532867,-99) , 
NN(
NN(
0, 
0, 
-1, 0.352615, 1, 1, 0.583177,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.475566,-99) , 
3, 0.468376, 1, 0, 0.483364,-99) , 
3, 3.7668, 0, 0, 0.495248,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0828663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.413402, 0, 1, 0.59821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446267,-99) , 
8, -0.769355, 1, 0, 0.484017,-99) , 
7, -951.286, 0, 0, 0.556449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480245,-99) , 
10, -0.257374, 0, 0, 0.510285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424799,-99) , 
9, -1.72142, 1, 0, 0.472596,-99) , 
0, 0.496185, 0, 0, 0.497773,-99) , 
10, -1.20562, 1, 0, 0.508228,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0753043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.5009, 1, 1, 0.534726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447952,-99) , 
0, 0.498088, 1, 0, 0.479923,-99) , 
8, -0.218376, 0, 0, 0.520826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450387,-99) , 
10, 0.695268, 1, 0, 0.509006,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.057242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497172,-99) , 
0, 0.496185, 0, 0, 0.526232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443627,-99) , 
7, -951.286, 0, 0, 0.483047,-99) , 
3, 3.40023, 1, 0, 0.514196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402081,-99) , 
10, -2.35396, 1, 0, 0.438593,-99) , 
8, -1.00012, 0, 0, 0.508718,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0765565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999996, 0, 1, 0.563205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420557,-99) , 
4, 0.999908, 0, 0, 0.548644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498526,-99) , 
9, -2.04617, 1, 0, 0.513749,-99) , 
NN(
0, 
0, 
-1, 1.95447, 1, -1, 0.444719,-99) , 
9, -2.78753, 0, 0, 0.500721,-99) , 
5, 0.714278, 1, 0, 0.518009,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.055441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484212,-99) , 
8, -0.430648, 0, 0, 0.526993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479294,-99) , 
5, -0.0476088, 1, 0, 0.486627,-99) , 
10, -1.22397, 1, 0, 0.492777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413542,-99) , 
9, -3.85355, 0, 0, 0.489711,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0768852);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.53716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469042,-99) , 
5, 0.904671, 1, 0, 0.50997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447967,-99) , 
8, 1.39688, 0, 0, 0.471988,-99) , 
10, -0.382877, 1, 0, 0.495283,-99) , 
10, 0.524379, 0, 0, 0.50391,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0626736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453974,-99) , 
5, -0.0476255, 0, 0, 0.547127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445901,-99) , 
5, 0.619056, 0, 0, 0.486695,-99) , 
1, -0.00171192, 1, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380581,-99) , 
6, 0.0119971, 1, 0, 0.497047,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0777882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45219,-99) , 
3, 3.04568, 1, 0, 0.496345,-99) , 
0, 0.5019, 0, 0, 0.525879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45814,-99) , 
8, 1.23625, 0, 0, 0.470389,-99) , 
9, -1.07086, 0, 0, 0.478592,-99) , 
2, 0.068648, 0, 0, 0.48656,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0666059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.344029, 0, 1, 0.550944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479024,-99) , 
0, 0.494408, 1, 0, 0.509337,-99) , 
0, 0.49713, 0, 0, 0.533531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622916,-99) , 
NN(
0, 
0, 
-1, -2.92641, 0, -1, 0.481626,-99) , 
1, -0.00526335, 1, 0, 0.490024,-99) , 
5, 0.80951, 0, 0, 0.51106,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0494481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64969, 0, 1, 0.519123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462903,-99) , 
8, 0.996066, 1, 0, 0.489821,-99) , 
5, 0.809501, 0, 0, 0.503805,-99) , 
NN(
0, 
0, 
-1, 0.489428, 0, -1, 0.439523,-99) , 
0, 0.492376, 0, 0, 0.49577,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0512827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460633,-99) , 
5, -0.714381, 0, 0, 0.55579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467102,-99) , 
2, -0.056514, 0, 0, 0.502541,-99) , 
1, 0.00306157, 0, 0, 0.50914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41471,-99) , 
0, 0.505709, 1, 0, 0.504834,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0645136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49689,-99) , 
10, -0.254647, 1, 0, 0.564027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454928,-99) , 
8, 0.427672, 0, 0, 0.482372,-99) , 
5, 0.455765, 1, 0, 0.490293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416126,-99) , 
8, 0.142201, 0, 0, 0.472781,-99) , 
NN(
0, 
0, 
-1, 0.500946, 0, -1, 0.39904,-99) , 
3, 2.04843, 0, 0, 0.425999,-99) , 
5, -0.428576, 0, 0, 0.48042,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.043086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494527,-99) , 
8, 0.711285, 1, 0, 0.57834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575783,-99) , 
NN(
0, 
0, 
-1, 3.40931, 1, -1, 0.484477,-99) , 
8, -1.28546, 1, 0, 0.487686,-99) , 
1, 0.00442927, 0, 0, 0.492982,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0583217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397527,-99) , 
3, 4.76748, 1, 0, 0.55268,-99) , 
NN(
0, 
0, 
-1, -1.74671, 1, 1, 0.508534,-99) , 
5, 0.619002, 1, 0, 0.520574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455098,-99) , 
10, 1.07696, 1, 0, 0.515073,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0552265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475447,-99) , 
8, 1.28797, 1, 0, 0.524201,-99) , 
NN(
0, 
0, 
-1, 0.794986, 1, -1, 0.485915,-99) , 
7, -951.286, 1, 0, 0.498778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354482,-99) , 
5, 0.333271, 1, 0, 0.429583,-99) , 
1, 0.00442927, 1, 0, 0.494064,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0425545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595506,-99) , 
NN(
0, 
0, 
-1, -2.9223, 0, -1, 0.48647,-99) , 
10, -1.65407, 1, 0, 0.49067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395765,-99) , 
0, 0.497138, 1, 0, 0.435524,-99) , 
9, -3.40229, 0, 0, 0.486165,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.087128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.23073, 1, 1, 0.550648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439064,-99) , 
10, -0.531962, 1, 0, 0.505648,-99) , 
9, -1.89873, 0, 0, 0.526302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49947,-99) , 
8, 1.28098, 0, 0, 0.52475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426357,-99) , 
10, -0.794162, 1, 0, 0.454363,-99) , 
0, 0.501718, 0, 0, 0.482933,-99) , 
0, 0.49809, 1, 0, 0.504207,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0564811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473853,-99) , 
8, 0.715553, 0, 0, 0.507684,-99) , 
0, 0.502851, 0, 0, 0.531772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450313,-99) , 
8, -1.46488, 0, 0, 0.552129,-99) , 
NN(
0, 
0, 
-1, -0.528797, 0, -1, 0.483026,-99) , 
10, -1.84203, 1, 0, 0.487902,-99) , 
5, 0.0476601, 1, 0, 0.495057,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0684979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494027,-99) , 
8, 0.49827, 0, 0, 0.542362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478983,-99) , 
8, 1.20334, 1, 0, 0.49242,-99) , 
9, -1.92817, 1, 0, 0.511223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595509,-99) , 
NN(
0, 
0, 
-1, 2.02874, 1, -1, 0.465077,-99) , 
3, 4.56716, 0, 0, 0.482,-99) , 
8, -0.143673, 0, 0, 0.504336,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0795204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494903,-99) , 
8, 1.03495, 1, 0, 0.5245,-99) , 
NN(
0, 
0, 
-1, -0.969657, 1, -1, 0.413805,-99) , 
9, -3.37579, 0, 0, 0.513867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43848,-99) , 
5, 0.709666, 1, 0, 0.465254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382326,-99) , 
5, -0.52376, 0, 0, 0.447221,-99) , 
0, 0.493328, 0, 0, 0.503107,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0562213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498024,-99) , 
0, 0.499042, 1, 0, 0.555083,-99) , 
9, -2.88038, 1, 0, 0.572819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491327,-99) , 
10, -1.73962, 1, 0, 0.497942,-99) , 
8, 2.14286, 0, 0, 0.504881,-99) , 
2, 0.0706187, 0, 0, 0.516009,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.071126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23573, 0, 1, 0.610043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479708,-99) , 
5, 0.523971, 0, 0, 0.518415,-99) , 
9, -1.7908, 1, 0, 0.532374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498468,-99) , 
10, -1.15399, 1, 0, 0.530692,-99) , 
NN(
0, 
0, 
-1, 0.497818, 1, -1, 0.467554,-99) , 
0, 0.501899, 0, 0, 0.480018,-99) , 
8, 1.00003, 0, 0, 0.500665,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0743705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458261,-99) , 
6, 0.00236044, 1, 0, 0.557412,-99) , 
6, 0.00381349, 0, 0, 0.572582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496753,-99) , 
9, -1.95688, 1, 0, 0.518646,-99) , 
9, -0.879024, 0, 0, 0.52508,-99) , 
0, 0.502853, 0, 0, 0.532391,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0574857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00116413, 1, 1, 0.532617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475898,-99) , 
5, 0.95008, 1, 0, 0.492437,-99) , 
5, 0.904727, 1, 0, 0.520749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464034,-99) , 
10, 1.07989, 1, 0, 0.515975,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0539653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499029, 1, 1, 0.596398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48775,-99) , 
4, 0.999977, 0, 0, 0.512043,-99) , 
2, -0.112837, 1, 0, 0.519674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477367,-99) , 
4, 0.999524, 0, 0, 0.515101,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0834948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0599145, 1, 1, 0.537041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437022,-99) , 
5, 0.551026, 1, 0, 0.501225,-99) , 
5, 0.714281, 0, 0, 0.524838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453881,-99) , 
2, -0.0320306, 0, 0, 0.506793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416279,-99) , 
9, -2.00178, 1, 0, 0.454705,-99) , 
0, 0.49809, 0, 0, 0.480132,-99) , 
7, -951.286, 0, 0, 0.509064,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0581534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453612,-99) , 
10, -0.0994295, 1, 0, 0.505101,-99) , 
8, 1.53972, 0, 0, 0.513207,-99) , 
NN(
0, 
0, 
-1, 1.89123, 1, -1, 0.468473,-99) , 
9, -1.47113, 1, 0, 0.499965,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0632021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0475014, 1, 1, 0.579717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491759,-99) , 
10, -2.06192, 1, 0, 0.496055,-99) , 
5, 0.591826, 1, 0, 0.510705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5694,-99) , 
NN(
0, 
0, 
-1, -0.850336, 1, -1, 0.403132,-99) , 
0, 0.495235, 1, 0, 0.443326,-99) , 
5, -0.714255, 0, 0, 0.50275,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0940888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523803, 0, 1, 0.547119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621432,-99) , 
NN(
0, 
0, 
-1, -3.20017, 0, -1, 0.456483,-99) , 
8, 1.53932, 0, 0, 0.463457,-99) , 
9, -1.5083, 0, 0, 0.489331,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0752684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482675,-99) , 
0, 0.498091, 0, 0, 0.546711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450032,-99) , 
0, 0.499042, 1, 0, 0.486425,-99) , 
1, -0.00243105, 1, 0, 0.495234,-99) , 
2, 0.212324, 0, 0, 0.500304,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0515593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494511,-99) , 
8, 0.997262, 0, 0, 0.508428,-99) , 
NN(
0, 
0, 
-1, 0.619023, 0, -1, 0.472398,-99) , 
9, -1.51944, 1, 0, 0.499726,-99) , 
10, 0.973683, 0, 0, 0.507704,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.076077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470067,-99) , 
3, 5.12335, 1, 0, 0.538768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474334,-99) , 
5, 0.618984, 1, 0, 0.491269,-99) , 
2, -0.0303007, 1, 0, 0.504853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410662,-99) , 
2, 0.212621, 1, 0, 0.499578,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0706542);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.26035, 1, 1, 0.545379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447956,-99) , 
5, -0.428573, 0, 0, 0.507317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453678,-99) , 
3, 5.28742, 0, 0, 0.463292,-99) , 
0, 0.496185, 0, 0, 0.491717,-99) , 
8, 1.57145, 0, 0, 0.503723,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0668884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.18747, 1, 1, 0.535685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459678,-99) , 
10, -2.16201, 0, 0, 0.531981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459952,-99) , 
0, 0.498092, 1, 0, 0.482918,-99) , 
10, 0.695268, 1, 0, 0.523592,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0415407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.555491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470563,-99) , 
2, -0.0704421, 0, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, -2.2048, 1, -1, 0.474248,-99) , 
10, -0.458607, 0, 0, 0.489644,-99) , 
0, 0.504756, 0, 0, 0.493925,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0362751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 0, 1, 0.573833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495958,-99) , 
3, 0.637892, 1, 0, 0.50407,-99) , 
NN(
0, 
0, 
-1, 0.500255, 0, -1, 0.456546,-99) , 
3, 5.55483, 1, 0, 0.498299,-99) , 
0, 0.490471, 1, 0, 0.502265,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0517863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0154979, 0, 1, 0.516947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443275,-99) , 
4, 0.999819, 0, 0, 0.511529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422458,-99) , 
4, 0.999524, 0, 0, 0.502266,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0722815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489326,-99) , 
8, -1.37317, 0, 0, 0.570158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423104,-99) , 
9, -3.22463, 0, 0, 0.507918,-99) , 
10, -1.89342, 1, 0, 0.514731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446964,-99) , 
9, -1.95043, 1, 0, 0.457107,-99) , 
10, 1.02199, 0, 0, 0.471972,-99) , 
10, -0.0781661, 1, 0, 0.496625,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.071387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499681,-99) , 
2, 0.0369594, 1, 0, 0.588021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476163,-99) , 
9, -1.89319, 1, 0, 0.497072,-99) , 
8, 0.427305, 1, 0, 0.532119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473659,-99) , 
0, 0.489519, 0, 0, 0.535031,-99) , 
NN(
0, 
0, 
-1, 0.428613, 0, -1, 0.474043,-99) , 
0, 0.492058, 1, 0, 0.481417,-99) , 
0, 0.500946, 0, 0, 0.494456,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0564678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488947,-99) , 
2, 0.0313782, 1, 0, 0.516239,-99) , 
2, 0.191791, 0, 0, 0.520598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438105,-99) , 
10, 1.07696, 1, 0, 0.513965,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.061462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.40311, 1, 1, 0.524459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483539,-99) , 
0, 0.499042, 0, 0, 0.511596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36116,-99) , 
10, -1.40531, 1, 0, 0.419472,-99) , 
9, -2.44161, 0, 0, 0.482879,-99) , 
3, 3.40023, 1, 0, 0.51235,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0464774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.429503, 1, 1, 0.588157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48925,-99) , 
8, 0.713303, 1, 0, 0.509591,-99) , 
NN(
0, 
0, 
-1, -1.30932, 0, -1, 0.483704,-99) , 
7, -951.286, 1, 0, 0.492575,-99) , 
0, 0.491424, 1, 0, 0.500163,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0276999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489773,-99) , 
3, 2.52332, 0, 0, 0.533746,-99) , 
NN(
0, 
0, 
-1, 1.97786, 1, -1, 0.493327,-99) , 
5, -0.619043, 1, 0, 0.49799,-99) , 
8, -1.28608, 1, 0, 0.500725,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0775368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.485803, 1, 1, 0.538023,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.445418,-99) , 
5, 0.238138, 0, 0, 0.521634,-99) , 
NN(
NN(
0, 
0, 
-1, 0.523849, 1, 1, 0.547287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463424,-99) , 
10, -1.55023, 1, 0, 0.475589,-99) , 
0, 0.502853, 0, 0, 0.485471,-99) , 
8, 1.00003, 0, 0, 0.500561,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0464573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.48301, 1, 1, 0.593109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443808,-99) , 
10, 0.081666, 1, 0, 0.496992,-99) , 
8, 1.52266, 0, 0, 0.509179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464887,-99) , 
9, -1.09641, 1, 0, 0.501663,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0623955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00324051, 1, 1, 0.549763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491859,-99) , 
9, -1.44302, 0, 0, 0.504934,-99) , 
5, 0.714273, 1, 0, 0.520284,-99) , 
NN(
NN(
0, 
0, 
-1, 0.503803, 1, 1, 0.541242,-99) , 
NN(
0, 
0, 
-1, 0.428571, 0, -1, 0.454332,-99) , 
0, 0.500946, 0, 0, 0.47806,-99) , 
2, 0.0599145, 1, 0, 0.511963,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0493041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714265, 1, 1, 0.533573,-99) , 
NN(
0, 
0, 
-1, 0.497591, 1, -1, 0.486157,-99) , 
0, 0.49809, 0, 0, 0.509137,-99) , 
NN(
0, 
0, 
-1, 0.499032, 1, -1, 0.471054,-99) , 
10, 0.495494, 1, 0, 0.500703,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0729438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499085,-99) , 
10, -0.58608, 1, 0, 0.516196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451447,-99) , 
8, -0.705192, 0, 0, 0.509147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454662,-99) , 
0, 0.503531, 1, 0, 0.513203,-99) , 
NN(
0, 
0, 
-1, 1.28639, 0, -1, 0.429538,-99) , 
0, 0.499042, 0, 0, 0.464222,-99) , 
5, 0.714273, 0, 0, 0.491782,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0582669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49355, 1, 1, 0.520063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404767,-99) , 
0, 0.50623, 0, 0, 0.463899,-99) , 
0, 0.50471, 1, 0, 0.51539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432702,-99) , 
5, 0.523652, 1, 0, 0.468067,-99) , 
0, 0.492376, 0, 0, 0.510088,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0741321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49351, 0, 1, 0.615128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49167,-99) , 
5, 0.795865, 1, 0, 0.511836,-99) , 
5, 0.142831, 1, 0, 0.526629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467764,-99) , 
9, -3.53118, 1, 0, 0.474645,-99) , 
9, -1.32551, 0, 0, 0.492109,-99) , 
0, 0.497138, 1, 0, 0.505823,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0809109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481104,-99) , 
0, 0.4936, 0, 0, 0.530887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476012,-99) , 
8, 0.223545, 1, 0, 0.493053,-99) , 
0, 0.499042, 1, 0, 0.515438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455425,-99) , 
5, 0.427916, 0, 0, 0.510498,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.419388,-99) , 
9, -3.41423, 0, 0, 0.472465,-99) , 
8, -0.429411, 0, 0, 0.508422,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0878662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.54085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458997,-99) , 
0, 0.498089, 0, 0, 0.495027,-99) , 
9, -1.35954, 1, 0, 0.521323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456438,-99) , 
7, -951.286, 0, 0, 0.526943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449372,-99) , 
5, -0.809482, 1, 0, 0.457893,-99) , 
2, 0.0587182, 0, 0, 0.471815,-99) , 
9, -2.28916, 0, 0, 0.502949,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0827581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.8366, 0, 1, 0.5769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393061,-99) , 
6, 0.00514755, 1, 0, 0.523543,-99) , 
5, 0.142922, 1, 0, 0.531646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475182,-99) , 
8, -0.118951, 0, 0, 0.519107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450483,-99) , 
5, 0.71427, 1, 0, 0.472038,-99) , 
10, -0.810149, 1, 0, 0.486363,-99) , 
0, 0.498089, 1, 0, 0.50894,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.064611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00627, 1, 1, 0.540969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409367,-99) , 
7, -951.286, 0, 0, 0.469922,-99) , 
0, 0.501898, 1, 0, 0.520045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469124,-99) , 
9, -3.17628, 1, 0, 0.475629,-99) , 
9, -1.10778, 0, 0, 0.482919,-99) , 
5, 0.428554, 1, 0, 0.490299,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.070796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62736, 1, 1, 0.555854,-99) , 
NN(
0, 
0, 
-1, -2.34361, 1, -1, 0.420972,-99) , 
8, -1.14882, 0, 0, 0.533231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48635,-99) , 
2, -0.0885335, 1, 0, 0.49413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419338,-99) , 
9, -2.38134, 0, 0, 0.488144,-99) , 
10, -0.710182, 1, 0, 0.503767,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0437049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485132,-99) , 
8, 0.997741, 0, 0, 0.525059,-99) , 
3, 2.51187, 0, 0, 0.5508,-99) , 
NN(
0, 
0, 
-1, 0.346975, 0, -1, 0.4867,-99) , 
5, 0.142866, 1, 0, 0.497146,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0607475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47632,-99) , 
0, 0.495774, 0, 0, 0.512719,-99) , 
NN(
0, 
0, 
-1, 0.00387163, 0, -1, 0.474158,-99) , 
5, 0.523863, 0, 0, 0.503606,-99) , 
NN(
0, 
0, 
-1, -0.00168726, 1, -1, 0.436378,-99) , 
0, 0.504756, 1, 0, 0.499206,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0881952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93158, 0, 1, 0.584394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469444,-99) , 
9, -2.42676, 0, 0, 0.520222,-99) , 
10, -1.6817, 1, 0, 0.526135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57789,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.423418,-99) , 
0, 0.495234, 1, 0, 0.464946,-99) , 
5, -0.714282, 0, 0, 0.519047,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0792381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.171003, 1, 1, 0.585522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435735,-99) , 
5, 0.455766, 0, 0, 0.513283,-99) , 
5, 0.0476191, 1, 0, 0.522476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454511,-99) , 
8, 1.92101, 0, 0, 0.503048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430407,-99) , 
9, -0.858223, 1, 0, 0.474689,-99) , 
10, 0.323336, 1, 0, 0.509438,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0640001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.584163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48246,-99) , 
0, 0.499043, 1, 0, 0.505708,-99) , 
5, 0.56461, 1, 0, 0.515781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459304,-99) , 
5, -0.86392, 1, 0, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407552,-99) , 
3, 0.991775, 0, 0, 0.466176,-99) , 
5, -0.523809, 0, 0, 0.509105,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0782073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427046,-99) , 
0, 0.505023, 0, 0, 0.50683,-99) , 
0, 0.503986, 1, 0, 0.538491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486679,-99) , 
10, -0.0778592, 1, 0, 0.512351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451454,-99) , 
0, 0.501401, 0, 0, 0.462953,-99) , 
0, 0.497773, 1, 0, 0.489534,-99) , 
0, 0.502852, 0, 0, 0.49696,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0787002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477038,-99) , 
0, 0.500948, 1, 0, 0.583622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445963,-99) , 
0, 0.494285, 0, 0, 0.51998,-99) , 
2, -0.011451, 1, 0, 0.543874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480754,-99) , 
1, -0.000700163, 1, 0, 0.503685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442288,-99) , 
0, 0.499043, 0, 0, 0.467157,-99) , 
8, 0.713623, 0, 0, 0.485516,-99) , 
5, 0.333329, 1, 0, 0.495917,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0579026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.546691, 0, 1, 0.580975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470237,-99) , 
3, 2.77461, 1, 0, 0.49885,-99) , 
10, -1.13433, 1, 0, 0.514708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482087,-99) , 
9, -3.12045, 1, 0, 0.487751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371346,-99) , 
8, -1.2824, 0, 0, 0.482321,-99) , 
0, 0.499041, 0, 0, 0.495385,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0876686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456827,-99) , 
8, -0.230277, 0, 0, 0.525383,-99) , 
8, -0.990341, 1, 0, 0.530777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49748,-99) , 
0, 0.496094, 1, 0, 0.533727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420234,-99) , 
0, 0.494598, 1, 0, 0.45718,-99) , 
8, 0.71555, 0, 0, 0.493092,-99) , 
0, 0.49809, 0, 0, 0.511983,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0426952);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.12944, 1, 1, 0.596022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434501,-99) , 
0, 0.493828, 0, 0, 0.498655,-99) , 
NN(
0, 
0, 
-1, -2.34351, 1, -1, 0.43023,-99) , 
9, -3.41058, 0, 0, 0.493085,-99) , 
0, 0.492377, 1, 0, 0.503143,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.057718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47143,-99) , 
8, -0.140206, 0, 0, 0.501824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416563,-99) , 
2, -0.212396, 0, 0, 0.497545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515682,-99) , 
NN(
0, 
0, 
-1, 0.773225, 1, -1, 0.419325,-99) , 
5, 0.0475894, 1, 0, 0.439452,-99) , 
0, 0.5019, 1, 0, 0.485411,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.085275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4892,-99) , 
2, 0.0457271, 1, 0, 0.559425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482901,-99) , 
0, 0.500811, 0, 0, 0.498143,-99) , 
0, 0.493328, 1, 0, 0.506971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412927,-99) , 
9, -1.21061, 0, 0, 0.487472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425593,-99) , 
8, 2.03995, 1, 0, 0.466404,-99) , 
9, -1.5083, 1, 0, 0.493788,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0559526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458575,-99) , 
4, 0.999977, 0, 0, 0.493611,-99) , 
5, 0.904739, 0, 0, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453028,-99) , 
4, 0.999524, 0, 0, 0.499915,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0738047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456472,-99) , 
5, 0.428541, 0, 0, 0.515002,-99) , 
0, 0.490335, 1, 0, 0.52329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474049,-99) , 
0, 0.503623, 0, 0, 0.486715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429408,-99) , 
3, 5.49237, 1, 0, 0.478877,-99) , 
0, 0.497138, 1, 0, 0.496978,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0676243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.537293, 1, 1, 0.550283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446784,-99) , 
5, -0.619074, 0, 0, 0.540785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459885,-99) , 
9, -0.917045, 1, 0, 0.493799,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.417808,-99) , 
8, 0.542026, 0, 0, 0.476895,-99) , 
10, -0.843232, 1, 0, 0.495444,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0565421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487432,-99) , 
7, -951.286, 0, 0, 0.543648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541087,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.477154,-99) , 
9, -0.995295, 0, 0, 0.486181,-99) , 
5, -0.809517, 1, 0, 0.490972,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0582075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484003,-99) , 
5, 0.5237, 0, 0, 0.535587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450703,-99) , 
8, 0.350382, 0, 0, 0.496695,-99) , 
9, -2.43033, 1, 0, 0.508473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42336,-99) , 
10, -1.37284, 1, 0, 0.442657,-99) , 
8, 1.28561, 0, 0, 0.465466,-99) , 
0, 0.494281, 0, 0, 0.499624,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0496144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451612,-99) , 
1, -0.00303104, 0, 0, 0.533002,-99) , 
NN(
0, 
0, 
-1, -1.46231, 1, -1, 0.48663,-99) , 
0, 0.49605, 1, 0, 0.498577,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.443139,-99) , 
0, 0.491424, 0, 0, 0.493857,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0598442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49128,-99) , 
8, 0.435434, 0, 0, 0.518391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482316,-99) , 
0, 0.496184, 0, 0, 0.526493,-99) , 
NN(
0, 
0, 
-1, 0.0561122, 1, -1, 0.471122,-99) , 
8, 0.142348, 1, 0, 0.486988,-99) , 
5, 0.904747, 0, 0, 0.496,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0711478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.62064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484205,-99) , 
0, 0.495233, 1, 0, 0.498636,-99) , 
8, 1.22727, 0, 0, 0.510977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439227,-99) , 
9, -1.31657, 0, 0, 0.482832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429163,-99) , 
9, -0.795039, 1, 0, 0.464963,-99) , 
10, 0.310643, 1, 0, 0.498566,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0458584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.836655, 0, 1, 0.556723,-99) , 
NN(
0, 
0, 
-1, 0.0477073, 0, -1, 0.490369,-99) , 
5, -0.428502, 1, 0, 0.498289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419536,-99) , 
0, 0.502444, 1, 0, 0.433735,-99) , 
2, -0.0550952, 1, 0, 0.451208,-99) , 
0, 0.501899, 1, 0, 0.488666,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0753984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0829858, 1, 1, 0.523607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448404,-99) , 
8, -1.2355, 0, 0, 0.517751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465334,-99) , 
9, -1.26544, 1, 0, 0.499569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420713,-99) , 
8, 1.4599, 0, 0, 0.475624,-99) , 
10, 0.0316521, 1, 0, 0.501755,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0754537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436025,-99) , 
5, 0.823781, 0, 0, 0.497791,-99) , 
5, 0.768689, 1, 0, 0.506117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470416,-99) , 
10, -0.910955, 1, 0, 0.500724,-99) , 
NN(
0, 
0, 
-1, -0.701497, 0, -1, 0.444097,-99) , 
3, 2.5862, 0, 0, 0.463317,-99) , 
5, 0.714267, 0, 0, 0.489704,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0726042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5982, 1, 1, 0.530351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429264,-99) , 
0, 0.497138, 1, 0, 0.464997,-99) , 
3, 3.9985, 1, 0, 0.517009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427731,-99) , 
9, -1.99494, 1, 0, 0.465919,-99) , 
5, 0.904749, 1, 0, 0.502524,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0779079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619017, 1, 1, 0.527896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458694,-99) , 
2, 0.0134582, 0, 0, 0.485494,-99) , 
0, 0.499633, 1, 0, 0.510503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462701,-99) , 
6, 0.00224314, 0, 0, 0.493592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333282,-99) , 
0, 0.491016, 1, 0, 0.424682,-99) , 
0, 0.492377, 0, 0, 0.50033,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0550616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33333, 1, 1, 0.533876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488282,-99) , 
9, -2.54794, 1, 0, 0.494758,-99) , 
8, 0.148336, 1, 0, 0.506862,-99) , 
NN(
0, 
0, 
-1, -0.711976, 0, -1, 0.457108,-99) , 
0, 0.495233, 0, 0, 0.493993,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0834583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523798, 1, 1, 0.538882,-99) , 
NN(
0, 
0, 
-1, 0.500944, 1, -1, 0.465881,-99) , 
7, -0.169093, 0, 0, 0.503171,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.520343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439981,-99) , 
3, 0.649505, 1, 0, 0.455984,-99) , 
3, 3.77414, 0, 0, 0.470034,-99) , 
7, -951.286, 0, 0, 0.491385,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0389495);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523731, 1, 1, 0.515283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44886,-99) , 
9, -0.894493, 1, 0, 0.507535,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0816053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.552202, 1, 1, 0.589027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449176,-99) , 
0, 0.501898, 1, 0, 0.504796,-99) , 
9, -1.99741, 1, 0, 0.521625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492398,-99) , 
9, -3.07665, 1, 0, 0.516544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426158,-99) , 
0, 0.491244, 1, 0, 0.445273,-99) , 
0, 0.497138, 0, 0, 0.486132,-99) , 
8, 0.426582, 0, 0, 0.507039,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0620173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496693,-99) , 
10, 0.605631, 1, 0, 0.541616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3865,-99) , 
1, 0.00111132, 1, 0, 0.468403,-99) , 
10, -1.04677, 0, 0, 0.525402,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.479278,-99) , 
5, 0.714237, 1, 0, 0.496162,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0724071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483742,-99) , 
10, -0.782158, 1, 0, 0.593645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444145,-99) , 
2, 0.0587182, 1, 0, 0.510059,-99) , 
8, 0.0408531, 0, 0, 0.53079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491219,-99) , 
9, -1.62123, 1, 0, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0.969517, 1, -1, 0.471175,-99) , 
8, 1.14609, 0, 0, 0.492706,-99) , 
9, -2.46363, 1, 0, 0.503268,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0495318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492481,-99) , 
5, 0.237986, 0, 0, 0.550868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487786,-99) , 
2, -0.0801732, 1, 0, 0.496065,-99) , 
0, 0.502261, 0, 0, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416901,-99) , 
0, 0.505708, 1, 0, 0.500357,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0796927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457358,-99) , 
1, -0.00198423, 0, 0, 0.514976,-99) , 
8, 1.32753, 1, 0, 0.532866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488802,-99) , 
3, 0.51352, 1, 0, 0.503132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441723,-99) , 
8, 0.773253, 0, 0, 0.461343,-99) , 
3, 2.81544, 1, 0, 0.487953,-99) , 
10, 0.015409, 0, 0, 0.504998,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0692415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49193,-99) , 
0, 0.500942, 1, 0, 0.580424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444701,-99) , 
8, 1.85207, 1, 0, 0.503414,-99) , 
3, 4.4789, 0, 0, 0.51529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490497,-99) , 
0, 0.498086, 1, 0, 0.514695,-99) , 
NN(
0, 
0, 
-1, 0.49808, 0, -1, 0.455052,-99) , 
9, -2.2953, 1, 0, 0.476624,-99) , 
5, 0.809515, 1, 0, 0.496918,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0488291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494692,-99) , 
8, 2.1312, 1, 0, 0.543572,-99) , 
NN(
NN(
0, 
0, 
-1, -1.34411, 0, 1, 0.57053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490093,-99) , 
8, 1.59183, 0, 0, 0.496794,-99) , 
9, -3.47702, 1, 0, 0.502081,-99) , 
9, -1.18166, 0, 0, 0.510209,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0558527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.283415, 1, 1, 0.602456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461332,-99) , 
8, -0.140764, 0, 0, 0.527817,-99) , 
5, -0.746014, 0, 0, 0.55946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466569,-99) , 
3, 2.63582, 1, 0, 0.491434,-99) , 
3, 6.69604, 0, 0, 0.495475,-99) , 
5, 0.33333, 1, 0, 0.507071,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0562093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.226913, 0, 1, 0.536504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477894,-99) , 
8, 1.10237, 0, 0, 0.502236,-99) , 
10, -0.609705, 1, 0, 0.515142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405329,-99) , 
6, 0.013785, 1, 0, 0.512406,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0931634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499275, 0, 1, 0.539444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437459,-99) , 
3, 2.77543, 0, 0, 0.48466,-99) , 
0, 0.502307, 1, 0, 0.525973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454243,-99) , 
8, 0.723997, 0, 0, 0.486328,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.430672,-99) , 
0, 0.491968, 0, 0, 0.462933,-99) , 
0, 0.495233, 0, 0, 0.509103,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0706142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619018, 1, 1, 0.538382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398068,-99) , 
8, -0.99032, 0, 0, 0.525939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461964,-99) , 
8, -0.130345, 1, 0, 0.47304,-99) , 
10, 0.868357, 0, 0, 0.480512,-99) , 
0, 0.499995, 0, 0, 0.49534,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0676823);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.548791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481982,-99) , 
5, 0.714258, 1, 0, 0.499353,-99) , 
NN(
0, 
0, 
-1, 2.13498, 0, -1, 0.423323,-99) , 
8, 1.39502, 1, 0, 0.488441,-99) , 
8, 1.85747, 0, 0, 0.497998,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0693392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491015, 1, 1, 0.552503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465893,-99) , 
9, -1.8878, 1, 0, 0.497586,-99) , 
NN(
0, 
0, 
-1, -1.00012, 0, -1, 0.462238,-99) , 
5, 0.714267, 0, 0, 0.484587,-99) , 
0, 0.492376, 1, 0, 0.491415,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0738555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.609155, 0, 1, 0.547803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483558,-99) , 
10, 0.121888, 0, 0, 0.506881,-99) , 
9, -2.01338, 1, 0, 0.525702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469743,-99) , 
8, 0.144134, 0, 0, 0.51809,-99) , 
NN(
0, 
0, 
-1, 0.496503, 0, -1, 0.457495,-99) , 
0, 0.495233, 1, 0, 0.482431,-99) , 
0, 0.499043, 0, 0, 0.499986,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0749699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.60814, 0, 1, 0.533877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463495,-99) , 
5, 0.428588, 1, 0, 0.47967,-99) , 
8, 1.63866, 1, 0, 0.517634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443312,-99) , 
0, 0.494869, 1, 0, 0.460005,-99) , 
0, 0.50285, 0, 0, 0.47064,-99) , 
8, 0.142348, 0, 0, 0.503027,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0995738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.554388,-99) , 
NN(
0, 
0, 
-1, 1.59384, 1, -1, 0.466511,-99) , 
10, -0.0378772, 1, 0, 0.504893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580664,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.436908,-99) , 
8, 0.235521, 0, 0, 0.455828,-99) , 
9, -2.49571, 0, 0, 0.489808,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0687423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493735,-99) , 
9, -1.74294, 0, 0, 0.513435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411601,-99) , 
8, 2.14409, 0, 0, 0.461742,-99) , 
8, 1.61858, 1, 0, 0.501962,-99) , 
10, -2.19871, 1, 0, 0.505779,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0638065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476197,-99) , 
0, 0.496185, 0, 0, 0.560988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457968,-99) , 
3, 6.53188, 1, 0, 0.524995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497024,-99) , 
3, 0.446106, 1, 0, 0.502117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417944,-99) , 
3, 1.84679, 0, 0, 0.460886,-99) , 
5, -0.238027, 0, 0, 0.494561,-99) , 
3, 3.40848, 0, 0, 0.502616,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0833013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.440657, 0, 1, 0.605139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490337,-99) , 
3, 2.97911, 1, 0, 0.536602,-99) , 
0, 0.494283, 1, 0, 0.550052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488954,-99) , 
8, 0.714321, 0, 0, 0.51632,-99) , 
NN(
0, 
0, 
-1, 0.498087, 1, -1, 0.411882,-99) , 
7, -1.30896, 0, 0, 0.503913,-99) , 
7, -951.286, 1, 0, 0.519775,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0753369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.566684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49292,-99) , 
8, 0.71298, 1, 0, 0.514518,-99) , 
2, -0.0129632, 1, 0, 0.527603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453078,-99) , 
3, 3.44116, 1, 0, 0.504264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39824,-99) , 
0, 0.5019, 1, 0, 0.473743,-99) , 
2, -0.0863569, 0, 0, 0.519503,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0448708);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.89805, 1, 1, 0.542271,-99) , 
NN(
NN(
0, 
0, 
-1, 1.53937, 0, 1, 0.510806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449511,-99) , 
9, -1.55295, 1, 0, 0.502713,-99) , 
9, -1.30088, 0, 0, 0.512329,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0679964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487182,-99) , 
0, 0.495233, 0, 0, 0.520239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463231,-99) , 
0, 0.503124, 0, 0, 0.481158,-99) , 
0, 0.499043, 1, 0, 0.503644,-99) , 
2, 0.198982, 0, 0, 0.507842,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0343636);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.000753298, 0, 1, 0.569278,-99) , 
NN(
NN(
0, 
0, 
-1, 0.619018, 1, 1, 0.511495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452562,-99) , 
2, -0.212792, 0, 0, 0.508862,-99) , 
0, 0.491424, 1, 0, 0.513243,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0664716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.602274, 0, 1, 0.55868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
0, 0.491424, 1, 0, 0.4905,-99) , 
10, -0.701497, 1, 0, 0.512044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435938,-99) , 
5, 0.945577, 0, 0, 0.472612,-99) , 
5, 0.904749, 1, 0, 0.500184,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.057502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.524494,-99) , 
NN(
NN(
0, 
0, 
-1, -3.37716, 0, 1, 0.528531,-99) , 
NN(
0, 
0, 
-1, 1.55246, 1, -1, 0.4348,-99) , 
0, 0.497138, 1, 0, 0.468145,-99) , 
10, -1.42761, 0, 0, 0.515887,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0504516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999946, 1, 1, 0.514785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432658,-99) , 
4, 0.999887, 0, 0, 0.503442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449142,-99) , 
4, 0.999524, 0, 0, 0.497486,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0482761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49438,-99) , 
9, -1.73097, 0, 0, 0.504733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453053,-99) , 
8, 2.10209, 0, 0, 0.474562,-99) , 
8, 1.28581, 1, 0, 0.495063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438586,-99) , 
2, 0.215555, 1, 0, 0.491356,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0434537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492694, 1, 1, 0.509548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448719,-99) , 
8, 0.517255, 1, 0, 0.471048,-99) , 
0, 0.500947, 1, 0, 0.499399,-99) , 
NN(
0, 
0, 
-1, -2.18203, 1, -1, 0.413097,-99) , 
8, -1.00068, 0, 0, 0.492571,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0510647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492446,-99) , 
2, 0.0186448, 0, 0, 0.509065,-99) , 
2, -0.222403, 1, 0, 0.511445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443937,-99) , 
0, 0.498088, 1, 0, 0.480959,-99) , 
5, 0.904738, 1, 0, 0.502827,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0772136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463085,-99) , 
10, 0.611055, 1, 0, 0.517681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429207,-99) , 
3, 2.43738, 0, 0, 0.461761,-99) , 
5, -0.0476219, 0, 0, 0.508787,-99) , 
NN(
0, 
0, 
-1, -0.0361309, 1, -1, 0.421499,-99) , 
0, 0.491423, 0, 0, 0.501302,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0578531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482394,-99) , 
0, 0.501082, 0, 0, 0.497055,-99) , 
NN(
0, 
0, 
-1, 0.504347, 1, -1, 0.464567,-99) , 
5, 0.619039, 0, 0, 0.487619,-99) , 
0, 0.490471, 1, 0, 0.491385,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_12_25_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_12_25_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_12_25_noP *ReadBDT_maker_LHC19c2a_12_25_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_12_25_noP(theInpVar);
  }
}
