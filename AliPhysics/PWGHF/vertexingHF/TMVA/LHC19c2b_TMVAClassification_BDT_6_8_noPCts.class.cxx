#include "LHC19c2b_TMVAClassification_BDT_6_8_noPCts.class.h"

double ReadBDT_LHC19c2b_6_8_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_6_8_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.381936849189776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.19737,-99) , 
4, 0.999524, 0, 0, 0.654656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281605,-99) , 
8, -1.92395, 1, 0, 0.438735,-99) , 
6, -951.286, 0, 0, 0.545785,-99) , 
NN(
0, 
0, 
-1, 2.31975, 1, -1, 0.209134,-99) , 
7, 1.57141, 1, 0, 0.499805,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.335947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266662,-99) , 
6, -1.57141, 0, 0, 0.617701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272805,-99) , 
8, -1.54163, 1, 0, 0.417051,-99) , 
6, -951.286, 0, 0, 0.514404,-99) , 
NN(
0, 
0, 
-1, 1.00138, 1, -1, 0.149369,-99) , 
4, 0.999524, 0, 0, 0.484308,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.269717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313481,-99) , 
6, -1.5716, 0, 0, 0.593317,-99) , 
NN(
0, 
0, 
-1, -1.61207, 0, -1, 0.410007,-99) , 
6, -951.286, 0, 0, 0.500472,-99) , 
NN(
0, 
0, 
-1, 2.29253, 1, -1, 0.18512,-99) , 
7, 1.85718, 1, 0, 0.47135,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.229683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42473,-99) , 
4, 0.999977, 0, 0, 0.536621,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.240309,-99) , 
4, 0.999524, 0, 0, 0.5171,-99) , 
NN(
0, 
0, 
-1, 2.02044, 1, -1, 0.287362,-99) , 
7, 1.28578, 1, 0, 0.4761,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.193541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449709,-99) , 
6, -951.286, 0, 0, 0.513291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199092,-99) , 
7, 2.14285, 1, 0, 0.496474,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.196841,-99) , 
4, 0.999524, 0, 0, 0.473252,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.18897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45742,-99) , 
4, 0.999955, 0, 0, 0.562447,-99) , 
NN(
0, 
0, 
-1, -0.99982, 0, -1, 0.425848,-99) , 
9, -0.0122127, 1, 0, 0.496833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.143227,-99) , 
4, 0.999048, 0, 0, 0.479238,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.155449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275395,-99) , 
7, -1.77551, 0, 0, 0.52241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229857,-99) , 
7, 2.14284, 1, 0, 0.507584,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.21956,-99) , 
4, 0.999524, 0, 0, 0.48645,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.143299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276105,-99) , 
7, -1.85692, 0, 0, 0.517283,-99) , 
NN(
0, 
0, 
-1, 0.31815, 1, -1, 0.381393,-99) , 
4, 0.999955, 0, 0, 0.488196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163686,-99) , 
4, 0.999048, 0, 0, 0.472812,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.164896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367212,-99) , 
7, 0.506995, 1, 0, 0.543204,-99) , 
NN(
0, 
0, 
-1, -1.28552, 0, -1, 0.427031,-99) , 
9, -0.412447, 1, 0, 0.47554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.122219,-99) , 
4, 0.998572, 0, 0, 0.463548,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0800427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249147,-99) , 
7, -2.02024, 0, 0, 0.494568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226125,-99) , 
4, 0.999048, 0, 0, 0.483406,-99) , 
NN(
0, 
0, 
-1, 2.51025, 1, -1, 0.213337,-99) , 
7, 2.14288, 1, 0, 0.468529,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0691381);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.465486,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0971495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334224,-99) , 
7, -1.61209, 0, 0, 0.497802,-99) , 
NN(
0, 
0, 
-1, 2.4557, 1, -1, 0.311342,-99) , 
7, 1.8571, 1, 0, 0.483135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.188596,-99) , 
4, 0.999048, 0, 0, 0.470142,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0748637);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.462638,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0879317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402671,-99) , 
4, 0.999932, 0, 0, 0.49241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210765,-99) , 
7, 2.42856, 1, 0, 0.483967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.16438,-99) , 
4, 0.998572, 0, 0, 0.473631,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0616083);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.469235,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.062868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276097,-99) , 
7, -2.02023, 0, 0, 0.494825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.217475,-99) , 
4, 0.998572, 0, 0, 0.487086,-99) , 
NN(
0, 
0, 
-1, 2.51021, 1, -1, 0.249264,-99) , 
7, 2.14288, 1, 0, 0.474788,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0679777);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.466063,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0705483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284122,-99) , 
7, -2.07483, 0, 0, 0.498626,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.344059,-99) , 
7, 1.8571, 1, 0, 0.48694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23954,-99) , 
4, 0.999048, 0, 0, 0.476302,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.055286);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.472385,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0661774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384269,-99) , 
4, 0.999864, 0, 0, 0.493035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239957,-99) , 
7, 2.42858, 1, 0, 0.48589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196008,-99) , 
4, 0.998572, 0, 0, 0.477146,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0595592);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.470256,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0827701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426775,-99) , 
8, -0.845409, 1, 0, 0.494782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24434,-99) , 
7, 2.42858, 1, 0, 0.487867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.19733,-99) , 
4, 0.998572, 0, 0, 0.479277,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.140256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45317,-99) , 
4, 0.999997, 0, 0, 0.498017,-99) , 
NN(
0, 
0, 
-1, -0.392842, 1, -1, 0.395404,-99) , 
4, 0.999932, 0, 0, 0.480493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201185,-99) , 
4, 0.998572, 0, 0, 0.472312,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0516268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328071,-99) , 
4, 0.999048, 0, 0, 0.496247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315181,-99) , 
7, -2.02041, 0, 0, 0.489377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290796,-99) , 
7, 2.14285, 1, 0, 0.479508,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0491279);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.475456,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.107633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391111,-99) , 
7, 0.402825, 1, 0, 0.540822,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.461,-99) , 
9, -0.562581, 1, 0, 0.491798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245413,-99) , 
4, 0.998572, 0, 0, 0.484681,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.14034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333411,-99) , 
6, -1.28563, 0, 0, 0.530506,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.458728,-99) , 
6, -951.286, 0, 0, 0.493719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247844,-99) , 
4, 0.998572, 0, 0, 0.486834,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0845713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412625,-99) , 
4, 0.999909, 0, 0, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273629,-99) , 
7, -2.14266, 0, 0, 0.500286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282191,-99) , 
4, 0.999048, 0, 0, 0.491962,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0781902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325818,-99) , 
3, 9.25993, 1, 0, 0.501987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196106,-99) , 
9, -1.70024, 1, 0, 0.380478,-99) , 
7, -1.44899, 0, 0, 0.491084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262212,-99) , 
7, 2.42856, 1, 0, 0.484624,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0606789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34693, 1, -1, 0.491713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.142508,-99) , 
8, -2.68861, 1, 0, 0.365334,-99) , 
7, -1.57141, 0, 0, 0.482476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29435,-99) , 
4, 0.999048, 0, 0, 0.475207,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.063417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343852,-99) , 
4, 0.999048, 0, 0, 0.49625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173322,-99) , 
8, -3.07236, 1, 0, 0.380968,-99) , 
7, -1.44881, 0, 0, 0.486007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269041,-99) , 
7, 2.42858, 1, 0, 0.480003,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0498777);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.06322, 1, -1, 0.475082,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0657842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339569,-99) , 
3, 9.33163, 1, 0, 0.497987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20721,-99) , 
9, -1.67007, 1, 0, 0.394764,-99) , 
7, -1.4488, 0, 0, 0.488909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269842,-99) , 
7, 2.42858, 1, 0, 0.483008,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0494838);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42856, 1, -1, 0.475278,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0757674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423721,-99) , 
7, 1.2586, 1, 0, 0.492643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.147797,-99) , 
8, -2.69021, 1, 0, 0.378613,-99) , 
7, -1.57122, 0, 0, 0.484661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282755,-99) , 
4, 0.998572, 0, 0, 0.479179,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0497865);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.475127,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0454167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410051,-99) , 
4, 0.999864, 0, 0, 0.493667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319126,-99) , 
7, -2.14284, 0, 0, 0.48907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290244,-99) , 
4, 0.998572, 0, 0, 0.483786,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0386634);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42856, 1, -1, 0.480678,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0369102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404829,-99) , 
7, 1.77555, 1, 0, 0.493244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33251,-99) , 
7, -2.14266, 0, 0, 0.488972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292958,-99) , 
4, 0.998572, 0, 0, 0.483763,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0662656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421796,-99) , 
7, -1.44877, 0, 0, 0.504743,-99) , 
NN(
0, 
0, 
-1, -1.44903, 0, -1, 0.450117,-99) , 
0, 0.499995, 1, 0, 0.48643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306583,-99) , 
7, 2.42844, 1, 0, 0.481662,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0942625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454845,-99) , 
4, 0.999994, 0, 0, 0.49671,-99) , 
NN(
0, 
0, 
-1, 0.259915, 1, -1, 0.431115,-99) , 
4, 0.999932, 0, 0, 0.485516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29245,-99) , 
4, 0.998572, 0, 0, 0.480482,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.074682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430827,-99) , 
7, 1.0001, 1, 0, 0.496269,-99) , 
NN(
0, 
0, 
-1, -0.999853, 0, -1, 0.439412,-99) , 
8, -1.01921, 1, 0, 0.482404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289215,-99) , 
4, 0.998572, 0, 0, 0.477508,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0621755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97962, 1, -1, 0.492083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.189331,-99) , 
8, -2.65458, 1, 0, 0.406283,-99) , 
7, -1.28554, 0, 0, 0.482811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324484,-99) , 
3, 9.27898, 1, 0, 0.477002,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0713003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410013,-99) , 
7, 1.97959, 1, 0, 0.500325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258831,-99) , 
8, -3.64317, 1, 0, 0.414658,-99) , 
7, -1.2857, 0, 0, 0.490957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335269,-99) , 
3, 9.32353, 1, 0, 0.485379,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0736995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448532,-99) , 
4, 0.999955, 0, 0, 0.493683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262528,-99) , 
9, -1.66072, 1, 0, 0.417087,-99) , 
7, -1.28555, 0, 0, 0.48526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342364,-99) , 
4, 0.999048, 0, 0, 0.480066,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0545519);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.33163, 1, -1, 0.472751,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0422829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34689, 1, -1, 0.49398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.170986,-99) , 
8, -2.26655, 1, 0, 0.395266,-99) , 
7, -1.57142, 0, 0, 0.487327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351389,-99) , 
3, 9.33163, 1, 0, 0.482581,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0958564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263183,-99) , 
6, -1.85701, 0, 0, 0.517154,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.470172,-99) , 
6, -951.286, 0, 0, 0.493258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344156,-99) , 
3, 9.34278, 1, 0, 0.488124,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0596065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375585,-99) , 
3, 9.37272, 1, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339498,-99) , 
7, 2.38779, 1, 0, 0.495932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588629,-99) , 
NN(
0, 
0, 
-1, -1.77521, 0, -1, 0.275194,-99) , 
8, -3.72151, 1, 0, 0.419702,-99) , 
7, -1.28544, 0, 0, 0.487818,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0520859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.49229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283269,-99) , 
8, -3.43051, 1, 0, 0.429266,-99) , 
7, -1.2857, 0, 0, 0.48549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358186,-99) , 
4, 0.998572, 0, 0, 0.48217,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0524693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438172,-99) , 
4, 0.999864, 0, 0, 0.499977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.205827,-99) , 
8, -2.52925, 1, 0, 0.410937,-99) , 
7, -1.57126, 0, 0, 0.49399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354761,-99) , 
4, 0.998572, 0, 0, 0.4904,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0619613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488292,-99) , 
3, 0.552065, 1, 0, 0.493774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367311,-99) , 
3, 9.27109, 1, 0, 0.489157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232484,-99) , 
8, -2.60816, 1, 0, 0.417528,-99) , 
7, -1.28557, 0, 0, 0.481641,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0359583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417869,-99) , 
7, 2.34693, 1, 0, 0.498574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215889,-99) , 
8, -2.65458, 1, 0, 0.403307,-99) , 
7, -1.57141, 0, 0, 0.492229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370802,-99) , 
3, 9.12028, 1, 0, 0.487799,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0448563);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492464,-99) , 
8, 2.28748, 0, 0, 0.496736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379193,-99) , 
3, 9.35068, 1, 0, 0.492675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244339,-99) , 
8, -2.57412, 1, 0, 0.410619,-99) , 
7, -1.57124, 0, 0, 0.487255,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0537007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463694,-99) , 
0, 0.5019, 1, 0, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373202,-99) , 
4, 0.999048, 0, 0, 0.497264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209967,-99) , 
9, -0.919421, 1, 0, 0.384876,-99) , 
7, -1.57125, 0, 0, 0.490049,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0498539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493682,-99) , 
8, 2.36881, 0, 0, 0.497342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390439,-99) , 
4, 0.999048, 0, 0, 0.493462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547738,-99) , 
NN(
0, 
0, 
-1, -1.69369, 0, -1, 0.303359,-99) , 
8, -3.64317, 1, 0, 0.418658,-99) , 
7, -1.28552, 0, 0, 0.485618,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.219379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494801,-99) , 
7, -1.28545, 0, 0, 0.647163,-99) , 
NN(
0, 
0, 
-1, 0.00258727, 0, -1, 0.418815,-99) , 
5, 0.00452773, 0, 0, 0.496153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.240313,-99) , 
5, 0.0237713, 1, 0, 0.489535,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0631122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486961,-99) , 
9, 1.10255, 1, 0, 0.515282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402252,-99) , 
3, 9.33743, 1, 0, 0.511449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258389,-99) , 
9, -0.947708, 1, 0, 0.433176,-99) , 
7, -1.57125, 0, 0, 0.506346,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0608774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462914,-99) , 
9, -1.91489, 0, 0, 0.513277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353376,-99) , 
6, -951.286, 0, 0, 0.436475,-99) , 
7, 1.91155, 1, 0, 0.507949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244852,-99) , 
8, -2.65458, 1, 0, 0.427222,-99) , 
7, -1.57142, 0, 0, 0.502653,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0497087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431501,-99) , 
2, 0.242132, 1, 0, 0.524328,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.485995,-99) , 
2, 0.0325218, 0, 0, 0.495902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397616,-99) , 
2, -0.212026, 0, 0, 0.491434,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0527506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472596,-99) , 
0, 0.5019, 1, 0, 0.50688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402542,-99) , 
7, 2.34695, 1, 0, 0.503622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298741,-99) , 
9, -1.35824, 1, 0, 0.430779,-99) , 
7, -1.57125, 0, 0, 0.498861,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0354411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49511,-99) , 
2, 0.0304458, 0, 0, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.436878,-99) , 
7, -1.57121, 0, 0, 0.498885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397862,-99) , 
2, -0.214276, 0, 0, 0.494436,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0377299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36881, 0, 1, 0.50438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419988,-99) , 
2, -0.21455, 0, 0, 0.500564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311125,-99) , 
8, -3.22883, 1, 0, 0.439977,-99) , 
7, -1.28553, 0, 0, 0.494334,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.032926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493455,-99) , 
7, 0.429017, 0, 0, 0.558641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436722,-99) , 
8, -0.553255, 1, 0, 0.492197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380525,-99) , 
7, 2.14287, 1, 0, 0.487544,-99) , 
8, 1.40603, 0, 0, 0.492365,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0459373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457241,-99) , 
4, 0.999909, 0, 0, 0.497729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336858,-99) , 
8, -3.72151, 1, 0, 0.439525,-99) , 
7, -1.28555, 0, 0, 0.491606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395707,-99) , 
4, 0.999048, 0, 0, 0.488218,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0331891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69384, 1, -1, 0.494492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275546,-99) , 
8, -2.65458, 1, 0, 0.42812,-99) , 
7, -1.57142, 0, 0, 0.490257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390359,-99) , 
2, -0.214635, 0, 0, 0.485947,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0374843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49136,-99) , 
3, 0.978385, 1, 0, 0.498171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396785,-99) , 
3, 9.37272, 1, 0, 0.49482,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.42426,-99) , 
7, -1.57124, 0, 0, 0.490312,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0252733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435596,-99) , 
3, 9.37272, 1, 0, 0.499381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412554,-99) , 
7, 2.34685, 1, 0, 0.496663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277594,-99) , 
9, -1.00135, 1, 0, 0.428761,-99) , 
7, -1.57127, 0, 0, 0.492278,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0311902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564453,-99) , 
NN(
0, 
0, 
-1, -0.319208, 1, -1, 0.487309,-99) , 
8, 1.74434, 0, 0, 0.49163,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0548464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45384,-99) , 
9, -1.58371, 0, 0, 0.502916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412535,-99) , 
3, 9.34253, 1, 0, 0.499727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496842,-99) , 
9, -2.4722, 0, 0, 0.553999,-99) , 
NN(
0, 
0, 
-1, -1.60607, 1, -1, 0.328855,-99) , 
9, -1.29159, 1, 0, 0.456533,-99) , 
7, -0.999996, 0, 0, 0.492976,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0341995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467265,-99) , 
7, 1.47619, 1, 0, 0.499505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312865,-99) , 
9, -1.00135, 1, 0, 0.434839,-99) , 
7, -1.57141, 0, 0, 0.495384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40057,-99) , 
2, -0.214257, 0, 0, 0.491294,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.056695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458175,-99) , 
9, 1.06485, 1, 0, 0.501082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380225,-99) , 
8, -2.32543, 0, 0, 0.469477,-99) , 
7, 0.823249, 1, 0, 0.491774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299587,-99) , 
8, -2.65458, 1, 0, 0.438235,-99) , 
7, -1.57122, 0, 0, 0.488345,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0363828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.486714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301545,-99) , 
8, -2.68861, 1, 0, 0.42885,-99) , 
7, -1.57122, 0, 0, 0.483032,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0372162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557348,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.487407,-99) , 
8, 1.74434, 0, 0, 0.491379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402931,-99) , 
2, -0.214769, 0, 0, 0.48764,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0395197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44302,-99) , 
4, 0.999728, 0, 0, 0.508114,-99) , 
NN(
0, 
0, 
-1, -1.28573, 0, -1, 0.477597,-99) , 
0, 0.499043, 1, 0, 0.49539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416434,-99) , 
4, 0.999048, 0, 0, 0.492597,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0355297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496965,-99) , 
8, 1.76838, 0, 0, 0.500362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347822,-99) , 
9, -1.59078, 1, 0, 0.446259,-99) , 
7, -1.28554, 0, 0, 0.494832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407137,-99) , 
4, 0.999048, 0, 0, 0.491847,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0512168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488799,-99) , 
8, -2.72398, 0, 0, 0.50609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362719,-99) , 
9, -1.70024, 1, 0, 0.4538,-99) , 
7, -1.28552, 0, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409841,-99) , 
4, 0.999048, 0, 0, 0.497603,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0328438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48066,-99) , 
7, 1.04094, 1, 0, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.44619,-99) , 
7, -1.57117, 0, 0, 0.498995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424296,-99) , 
3, 9.07131, 1, 0, 0.496261,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.190904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00626777, 0, 1, 0.598791,-99) , 
NN(
0, 
0, 
-1, 0.00224987, 0, -1, 0.416971,-99) , 
5, 0.00337493, 0, 0, 0.500463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250877,-99) , 
5, 0.0236298, 1, 0, 0.494112,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0821565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413866,-99) , 
7, 0.202796, 1, 0, 0.492587,-99) , 
1, -0.00532551, 1, 0, 0.506891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475277,-99) , 
7, 0.87749, 1, 0, 0.50157,-99) , 
NN(
0, 
0, 
-1, -1.04089, 0, -1, 0.368426,-99) , 
7, -0.428605, 0, 0, 0.478884,-99) , 
9, -0.562581, 1, 0, 0.489958,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0311866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444192,-99) , 
4, 0.999728, 0, 0, 0.498361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369541,-99) , 
8, -3.74704, 1, 0, 0.452439,-99) , 
7, -1.28571, 0, 0, 0.493593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405344,-99) , 
4, 0.999048, 0, 0, 0.490683,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.062137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492004,-99) , 
8, -1.98735, 0, 0, 0.502867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352491,-99) , 
9, -1.34326, 1, 0, 0.469573,-99) , 
7, -0.99987, 0, 0, 0.497143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453876,-99) , 
8, 1.86149, 0, 0, 0.477226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376973,-99) , 
2, -0.0730242, 0, 0, 0.46057,-99) , 
9, 1.74667, 1, 0, 0.491409,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0426946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389726,-99) , 
9, -2.10404, 0, 0, 0.502849,-99) , 
NN(
0, 
0, 
-1, 0.143014, 0, -1, 0.470624,-99) , 
9, 1.36388, 1, 0, 0.495856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527178,-99) , 
NN(
0, 
0, 
-1, -2.54949, 1, -1, 0.389922,-99) , 
6, -951.286, 0, 0, 0.445927,-99) , 
7, -1.28546, 0, 0, 0.490716,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.140768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14454, 1, 1, 0.620896,-99) , 
NN(
0, 
0, 
-1, 0.00161705, 0, -1, 0.453252,-99) , 
5, 0.00565966, 0, 0, 0.494744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244574,-99) , 
5, 0.0237713, 1, 0, 0.488403,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0256934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481128,-99) , 
3, 4.71064, 1, 0, 0.532865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46108,-99) , 
2, -0.22828, 0, 0, 0.499384,-99) , 
2, 0.0709021, 0, 0, 0.504666,-99) , 
NN(
0, 
0, 
-1, -2.04761, 0, -1, 0.443386,-99) , 
7, -1.57141, 0, 0, 0.500798,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0388006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499506,-99) , 
2, 0.0705056, 0, 0, 0.504492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408482,-99) , 
4, 0.999048, 0, 0, 0.501213,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.543203,-99) , 
NN(
0, 
0, 
-1, 0.220477, 1, -1, 0.383423,-99) , 
8, -3.61433, 1, 0, 0.462987,-99) , 
7, -0.999851, 0, 0, 0.495294,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0406289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4825,-99) , 
9, 1.38757, 1, 0, 0.507459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436681,-99) , 
3, 9.39986, 1, 0, 0.505137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398469,-99) , 
8, -3.04736, 1, 0, 0.463896,-99) , 
7, -1.2857, 0, 0, 0.500891,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0335094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0305955, 0, 1, 0.508203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411513,-99) , 
6, -951.286, 0, 0, 0.464971,-99) , 
7, -1.28558, 0, 0, 0.503804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436531,-99) , 
2, -0.214218, 0, 0, 0.500937,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0175728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431381,-99) , 
4, 0.999048, 0, 0, 0.49891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440531,-99) , 
9, -2.09617, 0, 0, 0.495571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432449,-99) , 
7, -1.85696, 0, 0, 0.493249,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0409612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466315,-99) , 
9, 2.36854, 1, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458509,-99) , 
7, 2.04757, 1, 0, 0.498763,-99) , 
NN(
NN(
0, 
0, 
-1, -4.6656, 0, 1, 0.536841,-99) , 
NN(
0, 
0, 
-1, -1.81218, 1, -1, 0.390026,-99) , 
8, -3.61433, 1, 0, 0.463283,-99) , 
7, -1.00001, 0, 0, 0.493268,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0442367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495143,-99) , 
9, -1.02218, 1, 0, 0.501871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481222,-99) , 
8, 1.4113, 0, 0, 0.483653,-99) , 
0, 0.497138, 1, 0, 0.490964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543875,-99) , 
NN(
0, 
0, 
-1, -0.847411, 1, -1, 0.382492,-99) , 
6, -951.287, 0, 0, 0.450966,-99) , 
7, -1.2857, 0, 0, 0.486928,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0330554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49945,-99) , 
9, 0.548295, 1, 0, 0.509963,-99) , 
NN(
0, 
0, 
-1, 1.82585, 1, -1, 0.48744,-99) , 
0, 0.49809, 1, 0, 0.4986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523554,-99) , 
NN(
0, 
0, 
-1, -1.7753, 0, -1, 0.412239,-99) , 
6, -951.286, 0, 0, 0.457695,-99) , 
7, -1.28552, 0, 0, 0.49447,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0716411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465408,-99) , 
9, -2.2175, 0, 0, 0.537723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389145,-99) , 
7, -0.297899, 1, 0, 0.510558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418049,-99) , 
4, 0.999524, 0, 0, 0.502643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365269,-99) , 
6, -951.286, 0, 0, 0.410467,-99) , 
7, -0.428435, 0, 0, 0.485992,-99) , 
9, -1.20329, 1, 0, 0.491699,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0695461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466553,-99) , 
7, 0.170169, 0, 0, 0.510579,-99) , 
NN(
0, 
0, 
-1, -1.68833, 0, -1, 0.482508,-99) , 
8, -2.27244, 0, 0, 0.4961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44004,-99) , 
9, -2.43965, 0, 0, 0.520026,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.384007,-99) , 
9, -0.927949, 1, 0, 0.468132,-99) , 
7, -0.714278, 0, 0, 0.489876,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0247442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42836, 0, 1, 0.54088,-99) , 
NN(
0, 
0, 
-1, -0.237824, 1, -1, 0.489771,-99) , 
8, 1.33504, 0, 0, 0.49334,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0436083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2968, 1, 1, 0.56688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493767,-99) , 
2, 0.0739516, 0, 0, 0.498975,-99) , 
4, 0.999524, 1, 0, 0.50402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476627,-99) , 
6, -951.286, 0, 0, 0.502654,-99) , 
NN(
0, 
0, 
-1, 2.63063, 0, -1, 0.427964,-99) , 
7, 0.142953, 0, 0, 0.478147,-99) , 
9, 0.969131, 1, 0, 0.49731,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0477947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408043,-99) , 
7, 0.796693, 1, 0, 0.499122,-99) , 
1, -0.00649323, 1, 0, 0.508491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455525,-99) , 
2, -0.0716622, 0, 0, 0.497705,-99) , 
NN(
0, 
0, 
-1, -0.0333454, 0, -1, 0.397271,-99) , 
7, -0.714145, 0, 0, 0.48533,-99) , 
9, -0.0485644, 1, 0, 0.497656,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0332485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.5037,-99) , 
NN(
0, 
0, 
-1, -2.13423, 0, -1, 0.449212,-99) , 
7, 1.31119, 1, 0, 0.498733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475441,-99) , 
6, -951.286, 0, 0, 0.494358,-99) , 
NN(
0, 
0, 
-1, 2.03824, 0, -1, 0.408639,-99) , 
7, -0.142516, 0, 0, 0.473062,-99) , 
9, 0.926524, 1, 0, 0.491863,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.13128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00734004, 0, 1, 0.549317,-99) , 
NN(
0, 
0, 
-1, 0.00128583, 0, -1, 0.419359,-99) , 
5, 0.00225021, 0, 0, 0.498786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288354,-99) , 
5, 0.0236295, 1, 0, 0.493504,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0386965);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536297,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14284, 1, -1, 0.492827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400942,-99) , 
6, -951.286, 0, 0, 0.453865,-99) , 
8, -0.465866, 1, 0, 0.487488,-99) , 
8, 2.07703, 0, 0, 0.489939,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0471182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485916,-99) , 
6, -951.286, 1, 0, 0.499459,-99) , 
4, 0.999524, 1, 0, 0.503293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436339,-99) , 
2, -0.0732342, 0, 0, 0.503007,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.440806,-99) , 
7, 0.428682, 0, 0, 0.477674,-99) , 
9, 0.71673, 1, 0, 0.495459,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0485264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429936,-99) , 
9, -1.79368, 0, 0, 0.504291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449178,-99) , 
7, 1.09544, 0, 0, 0.472405,-99) , 
9, 1.61761, 1, 0, 0.498188,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.534205,-99) , 
NN(
0, 
0, 
-1, -1.66645, 0, -1, 0.401484,-99) , 
8, -3.64317, 1, 0, 0.468472,-99) , 
7, -0.999763, 0, 0, 0.493601,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0226473);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.488678,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0437657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417569,-99) , 
7, 0.760049, 1, 0, 0.502733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465027,-99) , 
7, 1.95242, 1, 0, 0.501744,-99) , 
NN(
0, 
0, 
-1, 0.956457, 0, -1, 0.42652,-99) , 
7, -0.142733, 0, 0, 0.484387,-99) , 
9, -0.108208, 1, 0, 0.493856,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0453357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483725,-99) , 
2, 0.0572558, 0, 0, 0.48936,-99) , 
4, 0.999524, 1, 0, 0.493221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412017,-99) , 
2, -0.153281, 0, 0, 0.480641,-99) , 
NN(
0, 
0, 
-1, -0.254302, 1, -1, 0.426081,-99) , 
2, 0.0710848, 1, 0, 0.465826,-99) , 
3, 4.69334, 1, 0, 0.487839,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0220567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476492,-99) , 
9, -2.21706, 0, 0, 0.502603,-99) , 
NN(
0, 
0, 
-1, 4.72918, 1, -1, 0.482413,-99) , 
0, 0.500947, 1, 0, 0.497434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423127,-99) , 
2, 0.21376, 1, 0, 0.494657,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.046947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47737,-99) , 
9, -2.25123, 0, 0, 0.523903,-99) , 
NN(
0, 
0, 
-1, -0.930178, 0, -1, 0.440951,-99) , 
7, 0.136604, 1, 0, 0.508837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449584,-99) , 
7, 2.34694, 1, 0, 0.49769,-99) , 
NN(
0, 
0, 
-1, -0.673365, 0, -1, 0.426022,-99) , 
7, -0.428444, 0, 0, 0.485383,-99) , 
9, -0.645359, 1, 0, 0.494134,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0328132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521894,-99) , 
NN(
0, 
0, 
-1, 1.54331, 1, -1, 0.485681,-99) , 
8, 1.8082, 0, 0, 0.487708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441803,-99) , 
2, 0.214029, 1, 0, 0.485956,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0352412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48894,-99) , 
3, 0.55578, 1, 0, 0.492343,-99) , 
4, 0.999524, 1, 0, 0.495215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422537,-99) , 
2, 0.153129, 1, 0, 0.487918,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.440957,-99) , 
2, -0.0713365, 0, 0, 0.474101,-99) , 
3, 4.59902, 1, 0, 0.490902,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0525363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.98257, 1, 1, 0.53731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477528,-99) , 
2, -0.00891315, 1, 0, 0.497876,-99) , 
2, 0.0650737, 0, 0, 0.503174,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.46822,-99) , 
3, 4.68797, 1, 0, 0.496285,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0462807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460158,-99) , 
7, -0.0407133, 1, 0, 0.508467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435598,-99) , 
7, -0.142851, 0, 0, 0.485955,-99) , 
9, -0.59558, 1, 0, 0.494592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431572,-99) , 
3, 9.39196, 1, 0, 0.492617,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0335299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496305,-99) , 
2, -0.0718876, 1, 0, 0.500348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455488,-99) , 
6, -951.286, 0, 0, 0.485561,-99) , 
8, -1.04645, 1, 0, 0.496769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440621,-99) , 
4, 0.999048, 0, 0, 0.494862,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0354119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429618,-99) , 
7, 0.77807, 1, 0, 0.505367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471358,-99) , 
8, -1.88293, 0, 0, 0.492454,-99) , 
NN(
0, 
0, 
-1, 1.31975, 0, -1, 0.416436,-99) , 
7, -0.714082, 0, 0, 0.48347,-99) , 
9, -0.092933, 1, 0, 0.494915,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0458974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.513525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414414,-99) , 
6, -951.286, 1, 0, 0.451427,-99) , 
7, 0.514875, 1, 0, 0.503745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477286,-99) , 
7, 1.36737, 1, 0, 0.496069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425114,-99) , 
6, -951.286, 0, 0, 0.453024,-99) , 
7, 0.142916, 0, 0, 0.482967,-99) , 
9, -0.138381, 1, 0, 0.493578,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0313248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472064,-99) , 
9, 0.756735, 1, 0, 0.51344,-99) , 
NN(
0, 
0, 
-1, -1.57112, 0, -1, 0.493492,-99) , 
3, 0.766417, 1, 0, 0.496978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446139,-99) , 
2, 0.0774861, 1, 0, 0.486522,-99) , 
NN(
0, 
0, 
-1, 0.144522, 1, -1, 0.441127,-99) , 
2, -0.0720886, 0, 0, 0.473125,-99) , 
3, 4.7423, 1, 0, 0.492419,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.065578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469281,-99) , 
4, 0.999994, 0, 0, 0.499723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415514,-99) , 
9, -0.645359, 1, 0, 0.470584,-99) , 
4, 0.999864, 0, 0, 0.497003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431566,-99) , 
4, 0.999048, 0, 0, 0.494851,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0423538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474536,-99) , 
4, 0.999991, 0, 0, 0.495656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40587,-99) , 
9, -0.469166, 1, 0, 0.4629,-99) , 
4, 0.999819, 0, 0, 0.493248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44574,-99) , 
4, 0.999048, 0, 0, 0.49165,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.014759);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.489519, 0, -1, 0.492621,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0352359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489274,-99) , 
2, 0.0572558, 0, 0, 0.494605,-99) , 
4, 0.999524, 1, 0, 0.498358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459173,-99) , 
7, 0.700748, 1, 0, 0.484701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448593,-99) , 
7, -0.714111, 0, 0, 0.476694,-99) , 
3, 4.7423, 1, 0, 0.494152,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0909344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.648218, 1, 1, 0.618722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434864,-99) , 
5, 0.00159743, 0, 0, 0.477917,-99) , 
5, 0.00670918, 0, 0, 0.504441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307369,-99) , 
5, 0.0234841, 1, 0, 0.499366,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0236457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442613,-99) , 
9, -2.15581, 0, 0, 0.497951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467114,-99) , 
8, 1.23966, 0, 0, 0.480978,-99) , 
9, 1.20369, 1, 0, 0.493979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442872,-99) , 
7, -1.85696, 0, 0, 0.492161,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0350033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492114,-99) , 
2, -0.0447539, 1, 0, 0.498156,-99) , 
4, 0.999524, 1, 0, 0.500235,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.461484,-99) , 
3, 4.73378, 1, 0, 0.492797,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0310319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479275,-99) , 
9, 0.994311, 1, 0, 0.52067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488958,-99) , 
3, 2.27231, 0, 0, 0.495133,-99) , 
3, 0.757551, 1, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, 1.03761, 1, -1, 0.469299,-99) , 
3, 4.73378, 1, 0, 0.49366,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.037791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48693,-99) , 
2, -0.0084594, 1, 0, 0.510665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489473,-99) , 
2, 0.0744558, 0, 0, 0.493616,-99) , 
3, 1.00335, 1, 0, 0.498136,-99) , 
NN(
0, 
0, 
-1, 0.493331, 0, -1, 0.470078,-99) , 
3, 4.75772, 1, 0, 0.492793,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0427972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484292,-99) , 
9, 0.657064, 1, 0, 0.523541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484318,-99) , 
2, 0.0245516, 0, 0, 0.496766,-99) , 
2, -0.0491828, 1, 0, 0.50159,-99) , 
NN(
0, 
0, 
-1, 1.04468, 1, -1, 0.479295,-99) , 
3, 4.68186, 1, 0, 0.497174,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0243489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491877,-99) , 
6, -951.286, 0, 0, 0.501432,-99) , 
8, 1.90004, 0, 0, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460229,-99) , 
2, 0.213932, 1, 0, 0.501676,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0490065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482967,-99) , 
4, 0.999994, 0, 0, 0.505064,-99) , 
NN(
0, 
0, 
-1, -0.519326, 1, -1, 0.463466,-99) , 
4, 0.999864, 0, 0, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432724,-99) , 
4, 0.999048, 0, 0, 0.498956,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0226353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498085, 0, 1, 0.531393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447601,-99) , 
4, 0.999048, 0, 0, 0.502824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406446,-99) , 
7, -1.57122, 0, 0, 0.498845,-99) , 
8, -4.41746, 1, 0, 0.501081,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0366243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478076,-99) , 
3, 4.70919, 1, 0, 0.50983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482736,-99) , 
2, 0.0176164, 0, 0, 0.49421,-99) , 
2, -0.0289772, 1, 0, 0.498693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449056,-99) , 
2, 0.215626, 1, 0, 0.496881,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0298961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42543,-99) , 
7, -1.57141, 0, 0, 0.502577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455315,-99) , 
9, -2.52665, 0, 0, 0.500783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476557,-99) , 
7, 0.713969, 0, 0, 0.498762,-99) , 
NN(
0, 
0, 
-1, 0.457842, 0, -1, 0.435543,-99) , 
8, 1.12809, 0, 0, 0.472606,-99) , 
9, 2.06512, 1, 0, 0.4971,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.071462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482643,-99) , 
6, -951.286, 1, 0, 0.499522,-99) , 
4, 0.999524, 1, 0, 0.505108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351803,-99) , 
6, -1.28575, 0, 0, 0.50833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460158,-99) , 
9, 3.13159, 0, 0, 0.471205,-99) , 
6, -951.286, 0, 0, 0.487209,-99) , 
9, -0.108208, 1, 0, 0.49649,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0295078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485338,-99) , 
4, 0.999987, 0, 0, 0.499936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443281,-99) , 
4, 0.999728, 0, 0, 0.497185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441405,-99) , 
4, 0.999048, 0, 0, 0.495353,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0188458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13835, 0, 1, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430074,-99) , 
4, 0.999773, 0, 0, 0.500175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383592,-99) , 
8, -3.09051, 1, 0, 0.466817,-99) , 
4, 0.999524, 0, 0, 0.49831,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0419003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387908,-99) , 
7, 0.751195, 1, 0, 0.492429,-99) , 
8, -2.54336, 0, 0, 0.497923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472578,-99) , 
8, -1.88188, 0, 0, 0.495429,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.441052,-99) , 
7, 0.143012, 0, 0, 0.478984,-99) , 
9, -0.108208, 1, 0, 0.488802,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0182808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533463,-99) , 
NN(
0, 
0, 
-1, 3.27185, 1, -1, 0.493156,-99) , 
7, 2.14286, 0, 0, 0.494895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458092,-99) , 
4, 0.999048, 0, 0, 0.493649,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0455171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.461952, 1, 1, 0.556549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48999,-99) , 
2, -0.0714192, 1, 0, 0.496607,-99) , 
8, -1.70632, 0, 0, 0.501446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471223,-99) , 
6, -951.286, 0, 0, 0.506289,-99) , 
NN(
0, 
0, 
-1, 3.46954, 1, -1, 0.463433,-99) , 
7, 1.00007, 0, 0, 0.481507,-99) , 
9, 0.795688, 1, 0, 0.495683,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.022665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486679,-99) , 
9, -2.40968, 0, 0, 0.527904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406928,-99) , 
7, -1.57123, 0, 0, 0.496058,-99) , 
8, -4.3854, 1, 0, 0.498878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450348,-99) , 
8, 0.343449, 0, 0, 0.486593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435144,-99) , 
0, 0.5019, 1, 0, 0.475946,-99) , 
9, 1.64431, 1, 0, 0.494955,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0219283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497614,-99) , 
3, 9.09389, 0, 0, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438635,-99) , 
4, 0.999796, 0, 0, 0.497502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371865,-99) , 
8, -2.99452, 1, 0, 0.45767,-99) , 
4, 0.999524, 0, 0, 0.495293,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0400514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486887,-99) , 
7, 0.093531, 0, 0, 0.537519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49001,-99) , 
1, -0.00581658, 1, 0, 0.499152,-99) , 
8, -2.31229, 0, 0, 0.504422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395324,-99) , 
2, -0.150962, 0, 0, 0.492227,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.438973,-99) , 
2, 0.0731616, 1, 0, 0.48435,-99) , 
9, 0.360757, 1, 0, 0.496972,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0236309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.34118, 1, 1, 0.50728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461742,-99) , 
7, 1.49701, 1, 0, 0.504874,-99) , 
NN(
0, 
0, 
-1, -0.0716874, 0, -1, 0.480869,-99) , 
9, 0.842378, 1, 0, 0.498066,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0186804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.289894, 1, 1, 0.537001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48916,-99) , 
9, 0.341677, 1, 0, 0.497604,-99) , 
3, 0.536618, 1, 0, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454805,-99) , 
3, 9.37272, 1, 0, 0.499196,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0172146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528161,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.497174,-99) , 
8, -4.42342, 1, 0, 0.499659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450253,-99) , 
7, -0.345531, 1, 0, 0.464177,-99) , 
7, 1.28643, 0, 0, 0.476725,-99) , 
9, 1.74667, 1, 0, 0.496042,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0234523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.531753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497158,-99) , 
2, 0.0630807, 0, 0, 0.501304,-99) , 
3, 0.54321, 1, 0, 0.504164,-99) , 
NN(
0, 
0, 
-1, 9.11214, 1, -1, 0.474952,-99) , 
3, 4.71771, 1, 0, 0.498518,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0192931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.63091, 1, 1, 0.504792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461092,-99) , 
7, 1.57389, 1, 0, 0.502743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454735,-99) , 
2, -0.0742129, 0, 0, 0.495578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447583,-99) , 
2, 0.0750122, 1, 0, 0.488738,-99) , 
9, 0.926524, 1, 0, 0.498983,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0374804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.39469, 0, 1, 0.546582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390654,-99) , 
9, -1.61841, 0, 0, 0.473941,-99) , 
7, -0.769381, 1, 0, 0.515505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462069,-99) , 
4, 0.999524, 0, 0, 0.501535,-99) , 
NN(
0, 
0, 
-1, -1.66672, 0, -1, 0.437778,-99) , 
7, -0.99999, 0, 0, 0.495205,-99) , 
8, -3.83621, 1, 0, 0.498533,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0277857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475212,-99) , 
6, -951.286, 1, 0, 0.514525,-99) , 
NN(
0, 
0, 
-1, -0.99999, 0, -1, 0.492397,-99) , 
8, -3.91596, 1, 0, 0.495633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458285,-99) , 
3, 9.10638, 1, 0, 0.494321,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0437885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466815,-99) , 
7, -0.350231, 1, 0, 0.514814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449869,-99) , 
7, -0.714298, 0, 0, 0.499697,-99) , 
8, -3.48502, 1, 0, 0.503707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449247,-99) , 
7, 1.01187, 0, 0, 0.474007,-99) , 
9, 2.77661, 1, 0, 0.501323,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0269998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529671,-99) , 
NN(
0, 
0, 
-1, -1.57127, 0, -1, 0.493091,-99) , 
8, -4.62858, 1, 0, 0.495183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460528,-99) , 
6, -951.286, 1, 0, 0.499019,-99) , 
NN(
0, 
0, 
-1, 2.16075, 1, -1, 0.445884,-99) , 
8, 0.746509, 0, 0, 0.477096,-99) , 
9, 1.74667, 1, 0, 0.492309,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0178017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.549579, 1, 1, 0.504543,-99) , 
NN(
0, 
0, 
-1, 1.44508, 0, -1, 0.47402,-99) , 
9, 2.77661, 1, 0, 0.502008,-99) , 
NN(
0, 
0, 
-1, 1.03761, 1, -1, 0.480436,-99) , 
3, 4.72382, 1, 0, 0.497811,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0248475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489374,-99) , 
4, 0.999987, 0, 0, 0.501593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454405,-99) , 
4, 0.999728, 0, 0, 0.499315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455647,-99) , 
4, 0.999048, 0, 0, 0.497853,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0211045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450489,-99) , 
9, -2.09339, 0, 0, 0.478044,-99) , 
6, -951.286, 1, 0, 0.512019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4466,-99) , 
4, 0.999048, 0, 0, 0.498987,-99) , 
NN(
0, 
0, 
-1, -1.66649, 0, -1, 0.464435,-99) , 
7, -0.999821, 0, 0, 0.495414,-99) , 
8, -4.02043, 1, 0, 0.497514,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.097863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.480915, 1, 1, 0.632314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449721,-99) , 
5, 0.00262898, 0, 0, 0.478811,-99) , 
5, 0.00788689, 0, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305234,-99) , 
5, 0.0236624, 1, 0, 0.495714,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0281309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
4, 0.999524, 1, 0, 0.497107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450426,-99) , 
3, 9.34278, 1, 0, 0.495484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466889,-99) , 
9, 4.14422, 1, 0, 0.499114,-99) , 
NN(
0, 
0, 
-1, 2.45146, 1, -1, 0.44367,-99) , 
8, 1.12289, 0, 0, 0.475473,-99) , 
9, 2.01783, 1, 0, 0.492752,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0313463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475196,-99) , 
7, 0.428517, 0, 0, 0.52289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460978,-99) , 
7, 1.28504, 1, 0, 0.499241,-99) , 
8, -1.60831, 0, 0, 0.502523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510843,-99) , 
NN(
0, 
0, 
-1, -0.0349287, 0, -1, 0.47119,-99) , 
7, 1.57148, 0, 0, 0.480944,-99) , 
9, 1.34887, 1, 0, 0.498101,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0814207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.541537, 1, 1, 0.6085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469347,-99) , 
5, 0.00412535, 0, 0, 0.480374,-99) , 
5, 0.00787574, 0, 0, 0.498381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320116,-99) , 
5, 0.0236298, 1, 0, 0.493883,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.081139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475546,-99) , 
9, -2.30691, 0, 0, 0.517391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37891,-99) , 
9, -0.807404, 0, 0, 0.469166,-99) , 
7, 0.258873, 1, 0, 0.508617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371268,-99) , 
6, -1.00023, 0, 0, 0.507162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467539,-99) , 
8, 0.961201, 0, 0, 0.479157,-99) , 
6, -951.286, 0, 0, 0.491691,-99) , 
9, -0.453124, 1, 0, 0.498948,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0310899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439659,-99) , 
4, 0.999955, 0, 0, 0.51866,-99) , 
NN(
0, 
0, 
-1, 2.60994, 1, -1, 0.491853,-99) , 
7, 1.28571, 0, 0, 0.496056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445206,-99) , 
4, 0.999048, 0, 0, 0.494415,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0273869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492764,-99) , 
3, 0.82536, 1, 0, 0.520165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491264,-99) , 
0, 0.494282, 1, 0, 0.495446,-99) , 
3, 0.993631, 1, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45444,-99) , 
3, 9.38661, 1, 0, 0.499425,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0186526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454368,-99) , 
4, 0.999728, 0, 0, 0.503116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473012,-99) , 
4, 0.999048, 0, 0, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457517,-99) , 
0, 0.505709, 1, 0, 0.500497,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0185167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492695,-99) , 
6, -951.286, 1, 0, 0.522479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467664,-99) , 
9, 2.76361, 1, 0, 0.499161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44752,-99) , 
7, -1.57127, 0, 0, 0.496966,-99) , 
8, -4.28007, 1, 0, 0.499175,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0449179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476867,-99) , 
7, 0.139746, 0, 0, 0.525291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487995,-99) , 
1, 0.00652116, 0, 0, 0.494812,-99) , 
8, -1.64617, 0, 0, 0.499272,-99) , 
NN(
0, 
0, 
-1, -0.0712726, 0, -1, 0.473665,-99) , 
9, 1.33432, 1, 0, 0.493983,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.016204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.09389, 0, 1, 0.505,-99) , 
NN(
0, 
0, 
-1, -0.30228, 1, -1, 0.469558,-99) , 
4, 0.999819, 0, 0, 0.502457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453382,-99) , 
4, 0.999048, 0, 0, 0.500883,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.024803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430802,-99) , 
9, -1.96604, 0, 0, 0.490859,-99) , 
7, -1.23754, 1, 0, 0.515418,-99) , 
NN(
0, 
0, 
-1, -1.57126, 0, -1, 0.492932,-99) , 
8, -4.06022, 1, 0, 0.495638,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.018373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57141, 1, 1, 0.50676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4697,-99) , 
0, 0.489927, 0, 0, 0.505437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466567,-99) , 
3, 1.54046, 0, 0, 0.487033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445547,-99) , 
3, 4.38993, 1, 0, 0.476071,-99) , 
0, 0.503804, 1, 0, 0.502618,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0533409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474158,-99) , 
7, -0.714155, 0, 0, 0.511312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274782,-99) , 
6, -1.85634, 0, 0, 0.49464,-99) , 
6, -951.286, 1, 0, 0.503175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467108,-99) , 
0, 0.495234, 0, 0, 0.498603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441165,-99) , 
9, 1.05469, 1, 0, 0.485495,-99) , 
3, 4.69981, 1, 0, 0.499761,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0196999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493667,-99) , 
7, 0.183713, 0, 0, 0.499424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455253,-99) , 
7, 2.14281, 1, 0, 0.497787,-99) , 
NN(
0, 
0, 
-1, 1.80898, 0, -1, 0.467903,-99) , 
9, 2.77661, 1, 0, 0.495356,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0202699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45222,-99) , 
7, -0.869688, 1, 0, 0.479265,-99) , 
6, -951.286, 1, 0, 0.510253,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.494547,-99) , 
8, -3.92379, 1, 0, 0.496838,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0555615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408217,-99) , 
9, -1.06698, 0, 0, 0.508917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456738,-99) , 
8, -3.25036, 1, 0, 0.493768,-99) , 
7, -0.14271, 0, 0, 0.502479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470869,-99) , 
0, 0.497134, 0, 0, 0.496204,-99) , 
NN(
0, 
0, 
-1, 2.45877, 1, -1, 0.444644,-99) , 
8, 1.12289, 0, 0, 0.474469,-99) , 
9, 2.0312, 1, 0, 0.498773,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0259239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448995,-99) , 
7, -0.935322, 1, 0, 0.481196,-99) , 
6, -951.286, 1, 0, 0.510048,-99) , 
NN(
0, 
0, 
-1, -1.57122, 0, -1, 0.490893,-99) , 
8, -4.03342, 1, 0, 0.493282,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0191129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456622,-99) , 
4, 0.999819, 0, 0, 0.499806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458364,-99) , 
4, 0.999048, 0, 0, 0.498359,-99) , 
NN(
0, 
0, 
-1, 1.80898, 0, -1, 0.467859,-99) , 
9, 2.77661, 1, 0, 0.49594,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0216582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474189,-99) , 
8, -3.09051, 1, 0, 0.532394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487701,-99) , 
8, -2.58898, 0, 0, 0.496261,-99) , 
4, 0.999524, 1, 0, 0.498158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475671,-99) , 
3, 9.26574, 1, 0, 0.49742,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.017714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531052,-99) , 
NN(
0, 
0, 
-1, 1.83819, 1, -1, 0.493955,-99) , 
8, 0.45977, 0, 0, 0.495679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449505,-99) , 
7, 1.00374, 0, 0, 0.469301,-99) , 
9, 3.05633, 1, 0, 0.493881,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0263179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
8, -4.75474, 1, 0, 0.497169,-99) , 
8, -0.618353, 0, 0, 0.499816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459904,-99) , 
6, -951.286, 1, 0, 0.495579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444245,-99) , 
8, 0.4222, 0, 0, 0.479861,-99) , 
9, 1.73748, 1, 0, 0.496592,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0109314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0744558, 0, 1, 0.503063,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.476469,-99) , 
3, 6.65533, 1, 0, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45919,-99) , 
3, 9.27109, 1, 0, 0.500103,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0227802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495254,-99) , 
8, -2.5661, 1, 0, 0.519008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492353,-99) , 
2, -0.00340396, 1, 0, 0.501053,-99) , 
2, 0.0714181, 0, 0, 0.503797,-99) , 
NN(
0, 
0, 
-1, 1.80898, 0, -1, 0.477028,-99) , 
9, 2.77661, 1, 0, 0.501604,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0314425);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483484,-99) , 
7, -0.143559, 0, 0, 0.531223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488704,-99) , 
6, -951.286, 1, 0, 0.498228,-99) , 
8, -1.50473, 0, 0, 0.502583,-99) , 
NN(
0, 
0, 
-1, -0.0685946, 0, -1, 0.481765,-99) , 
9, 1.43732, 1, 0, 0.498532,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.022849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492991,-99) , 
9, -0.0383996, 1, 0, 0.51026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48571,-99) , 
2, -0.00237985, 1, 0, 0.497124,-99) , 
2, 0.0325546, 0, 0, 0.500498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468396,-99) , 
2, -0.212005, 0, 0, 0.499118,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0151007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.193116, 0, 1, 0.529526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461571,-99) , 
7, 0.714639, 0, 0, 0.484292,-99) , 
9, 0.452761, 1, 0, 0.513556,-99) , 
NN(
0, 
0, 
-1, -2.42796, 0, -1, 0.49596,-99) , 
2, 0.0711578, 0, 0, 0.498685,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0112405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.539831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457029,-99) , 
4, 0.999796, 0, 0, 0.499381,-99) , 
4, 0.999524, 1, 0, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474386,-99) , 
3, 9.3513, 1, 0, 0.500669,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.00862059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499558,-99) , 
3, 9.12912, 0, 0, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473137,-99) , 
4, 0.999048, 0, 0, 0.500373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451466,-99) , 
6, -951.286, 0, 0, 0.476407,-99) , 
0, 0.504757, 1, 0, 0.498856,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0112223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.84402, 0, 1, 0.504646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465584,-99) , 
4, 0.999048, 0, 0, 0.50338,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0268838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496954,-99) , 
9, 1.07016, 1, 0, 0.508239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489158,-99) , 
2, 0.0693356, 0, 0, 0.493677,-99) , 
8, -1.57166, 0, 0, 0.49831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454934,-99) , 
4, 0.999048, 0, 0, 0.496942,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.00833715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527381,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498521,-99) , 
8, -4.21395, 1, 0, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465395,-99) , 
9, -2.52271, 0, 0, 0.499171,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0136529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.335946, 0, 1, 0.503903,-99) , 
NN(
0, 
0, 
-1, 2.03691, 0, -1, 0.477106,-99) , 
9, 2.87901, 1, 0, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448741,-99) , 
4, 0.999048, 0, 0, 0.500148,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0140211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532427,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494495,-99) , 
8, 1.83089, 0, 0, 0.496616,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0184608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428139, 0, 1, 0.506569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461939,-99) , 
7, 1.00118, 0, 0, 0.484443,-99) , 
9, 2.94808, 1, 0, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473151,-99) , 
9, -2.33914, 0, 0, 0.503402,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.00874322);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.34001, 0, 1, 0.522093,-99) , 
NN(
0, 
0, 
-1, -0.214257, 0, -1, 0.497154,-99) , 
8, -4.34575, 1, 0, 0.49913,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0275072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48961,-99) , 
6, -951.286, 0, 0, 0.514569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474955,-99) , 
8, -3.5976, 0, 0, 0.501345,-99) , 
7, -0.714154, 1, 0, 0.504341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476248,-99) , 
3, 1.90529, 0, 0, 0.497279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452764,-99) , 
3, 4.29126, 1, 0, 0.485142,-99) , 
0, 0.503804, 1, 0, 0.502463,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0105312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463684,-99) , 
2, 0.214323, 1, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.471741,-99) , 
0, 0.504757, 1, 0, 0.499303,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0270311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496723,-99) , 
4, 0.999955, 1, 0, 0.501946,-99) , 
4, 0.999524, 1, 0, 0.503901,-99) , 
NN(
NN(
0, 
0, 
-1, 0.330831, 1, 1, 0.511464,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.440502,-99) , 
8, -2.43534, 0, 0, 0.493073,-99) , 
7, 0.714363, 1, 0, 0.500618,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0185201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.655379, 1, 1, 0.547705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467409,-99) , 
7, 1.34279, 1, 0, 0.498208,-99) , 
8, -1.56139, 0, 0, 0.502053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451245,-99) , 
0, 0.502851, 1, 0, 0.496336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459929,-99) , 
2, -0.0712726, 0, 0, 0.49019,-99) , 
9, 0.969131, 1, 0, 0.498942,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0184225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494883,-99) , 
0, 0.499044, 1, 0, 0.526161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497625,-99) , 
9, -1.20757, 1, 0, 0.501225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447101,-99) , 
9, -2.02388, 0, 0, 0.498339,-99) , 
7, -1.57141, 1, 0, 0.500112,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.00859923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529449,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.498069,-99) , 
4, 0.999524, 1, 0, 0.499709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470306,-99) , 
3, 9.06192, 1, 0, 0.49867,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0561787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.217469, 1, 1, 0.603894,-99) , 
NN(
0, 
0, 
-1, 0.00112532, 0, -1, 0.488197,-99) , 
5, 0.00787725, 0, 0, 0.50414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336333,-99) , 
5, 0.0236326, 1, 0, 0.499839,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.020994);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.18782, 1, 1, 0.530845,-99) , 
NN(
NN(
0, 
0, 
-1, -1.18482, 0, 1, 0.507782,-99) , 
NN(
0, 
0, 
-1, 2.52607, 1, -1, 0.477701,-99) , 
9, 1.87122, 1, 0, 0.505036,-99) , 
8, 1.54117, 0, 0, 0.506684,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.019965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499271,-99) , 
9, 0.514093, 1, 0, 0.507652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453458,-99) , 
7, -1.57141, 0, 0, 0.505655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483706,-99) , 
9, -2.21706, 0, 0, 0.504395,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0261709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28571, 0, 1, 0.508296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444185,-99) , 
4, 0.999751, 0, 0, 0.506341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397157,-99) , 
9, -0.740417, 1, 0, 0.47249,-99) , 
4, 0.999524, 0, 0, 0.504525,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.015352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459693,-99) , 
9, 3.37852, 1, 0, 0.498566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401907,-99) , 
9, -2.33696, 0, 0, 0.495413,-99) , 
7, -1.85694, 1, 0, 0.497251,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0103492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498521,-99) , 
7, 2.14287, 0, 0, 0.499854,-99) , 
4, 0.999048, 1, 0, 0.501537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46705,-99) , 
3, 9.38081, 1, 0, 0.500461,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0156958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496142,-99) , 
9, 3.99997, 1, 0, 0.524761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474496,-99) , 
9, -2.38821, 0, 0, 0.501628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445519,-99) , 
6, -951.286, 0, 0, 0.48247,-99) , 
7, 1.85714, 1, 0, 0.500324,-99) , 
8, 1.44563, 0, 0, 0.50194,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0579567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101417, 0, 1, 0.597606,-99) , 
NN(
0, 
0, 
-1, 0.00112677, 0, -1, 0.485965,-99) , 
5, 0.00788752, 0, 0, 0.501675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350295,-99) , 
5, 0.0236633, 1, 0, 0.497826,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0131726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527521,-99) , 
NN(
NN(
0, 
0, 
-1, -4.64854, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466525,-99) , 
9, 2.50646, 1, 0, 0.502407,-99) , 
8, 1.75153, 0, 0, 0.503818,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0158659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469909,-99) , 
7, -1.57142, 0, 0, 0.500641,-99) , 
8, -4.56677, 1, 0, 0.502593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512131,-99) , 
NN(
0, 
0, 
-1, 0.948828, 0, -1, 0.457186,-99) , 
8, 2.07895, 0, 0, 0.481305,-99) , 
9, 2.30105, 1, 0, 0.500255,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0124696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496108,-99) , 
7, -1.14819, 1, 0, 0.523537,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.495546,-99) , 
8, -4.34575, 1, 0, 0.497756,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0199287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.826485, 1, 1, 0.512103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456502,-99) , 
7, 1.2133, 1, 0, 0.498445,-99) , 
8, -1.76919, 0, 0, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466806,-99) , 
2, 0.213452, 1, 0, 0.501821,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.00948452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535013,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489932, 0, 1, 0.502262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451067,-99) , 
9, 3.15646, 1, 0, 0.500804,-99) , 
8, 2.77752, 0, 0, 0.502056,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.010389);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143729, 1, 1, 0.525253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533191,-99) , 
NN(
0, 
0, 
-1, -1.96496, 0, -1, 0.498082,-99) , 
8, -4.56311, 1, 0, 0.500086,-99) , 
8, 1.33504, 0, 0, 0.501827,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0185284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492132,-99) , 
7, -1.21292, 1, 0, 0.521679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495678,-99) , 
2, -0.0304183, 1, 0, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467853,-99) , 
2, 0.21442, 1, 0, 0.498898,-99) , 
8, -4.25254, 1, 0, 0.500992,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0200099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497642,-99) , 
3, 4.27915, 1, 0, 0.514908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494104,-99) , 
8, 0.509202, 0, 0, 0.496973,-99) , 
2, 0.0509893, 0, 0, 0.499873,-99) , 
2, 0.214255, 0, 0, 0.501294,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0284922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487833,-99) , 
0, 0.499043, 1, 0, 0.531968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481309,-99) , 
7, -0.700446, 0, 0, 0.504272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397746,-99) , 
7, -0.967779, 1, 0, 0.474911,-99) , 
9, -1.85949, 0, 0, 0.502097,-99) , 
7, -1.57122, 1, 0, 0.50401,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0225442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466815,-99) , 
9, -1.85282, 0, 0, 0.501148,-99) , 
7, -1.57125, 1, 0, 0.50377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490646,-99) , 
2, 0.0881446, 0, 0, 0.495127,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.465738,-99) , 
3, 4.52382, 1, 0, 0.488418,-99) , 
0, 0.499995, 1, 0, 0.498754,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0495702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.922157, 1, 1, 0.574882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455292,-99) , 
5, 0.000956231, 0, 0, 0.491204,-99) , 
5, 0.00669368, 0, 0, 0.506629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357317,-99) , 
5, 0.0234313, 1, 0, 0.50287,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.016827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549773,-99) , 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.495165,-99) , 
8, 0.462242, 0, 0, 0.497806,-99) , 
NN(
0, 
0, 
-1, 2.38939, 0, -1, 0.471703,-99) , 
9, 3.05633, 1, 0, 0.496083,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.025077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491878,-99) , 
7, 2.14288, 0, 0, 0.493414,-99) , 
3, 8.84402, 0, 0, 0.495497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415345,-99) , 
8, -3.02063, 1, 0, 0.467347,-99) , 
4, 0.999524, 0, 0, 0.493971,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0217035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497216,-99) , 
7, 0.141961, 1, 0, 0.522208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498152,-99) , 
8, -1.34185, 0, 0, 0.501592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438761,-99) , 
6, -951.286, 0, 0, 0.474185,-99) , 
9, 1.80356, 1, 0, 0.499021,-99) , 
8, 1.40603, 0, 0, 0.500627,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0154282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.38558, 0, 1, 0.52945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457824,-99) , 
7, 2.14286, 1, 0, 0.498723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460131,-99) , 
7, -0.139793, 1, 0, 0.473932,-99) , 
9, 2.22293, 1, 0, 0.495633,-99) , 
8, -4.3753, 1, 0, 0.498099,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0187342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467139,-99) , 
6, -951.286, 1, 0, 0.518887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47662,-99) , 
9, 1.41634, 1, 0, 0.499399,-99) , 
8, 0.807362, 0, 0, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458226,-99) , 
0, 0.489519, 0, 0, 0.500096,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0243633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480145,-99) , 
7, 1.00182, 0, 0, 0.494082,-99) , 
9, 2.83231, 1, 0, 0.518785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
8, -2.03891, 0, 0, 0.501264,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476568,-99) , 
9, 0.701251, 1, 0, 0.495992,-99) , 
8, 0.375626, 0, 0, 0.498687,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.028292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493092,-99) , 
4, 0.999989, 0, 0, 0.507053,-99) , 
NN(
0, 
0, 
-1, 0.999566, 1, -1, 0.470526,-99) , 
4, 0.999773, 0, 0, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470883,-99) , 
4, 0.999048, 0, 0, 0.503791,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.00963252);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14288, 0, 1, 0.503741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462904,-99) , 
4, 0.999048, 0, 0, 0.502426,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0094948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468183,-99) , 
9, 2.03758, 1, 0, 0.49855,-99) , 
8, 0.86527, 0, 0, 0.500515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475805,-99) , 
9, 3.27805, 1, 0, 0.499078,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0212796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467809,-99) , 
9, -2.03771, 0, 0, 0.487386,-99) , 
6, -951.286, 1, 0, 0.516738,-99) , 
NN(
NN(
0, 
0, 
-1, 2.83009, 1, -1, 0.496545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448291,-99) , 
9, 0.0187005, 0, 0, 0.473103,-99) , 
7, -0.999854, 0, 0, 0.494152,-99) , 
8, -3.9435, 1, 0, 0.497416,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0091562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467173,-99) , 
4, 0.999683, 0, 0, 0.499562,-99) , 
4, 0.999049, 1, 0, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4615,-99) , 
3, 9.10638, 1, 0, 0.499544,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0166481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.71385, 1, 1, 0.525618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484943,-99) , 
3, 4.7423, 1, 0, 0.499254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447944,-99) , 
7, -1.57124, 0, 0, 0.497171,-99) , 
8, -4.34575, 1, 0, 0.499403,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0149346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10161, 1, 1, 0.538123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496421,-99) , 
7, 1.85712, 0, 0, 0.498526,-99) , 
4, 0.999524, 1, 0, 0.500617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475876,-99) , 
3, 9.39171, 1, 0, 0.499854,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0117752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496461,-99) , 
8, -3.07698, 1, 0, 0.540477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498812,-99) , 
7, 2.14285, 0, 0, 0.500683,-99) , 
4, 0.999524, 1, 0, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475513,-99) , 
3, 8.95698, 1, 0, 0.501808,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0278537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475748,-99) , 
7, 1.14845, 1, 0, 0.503448,-99) , 
4, 0.999048, 1, 0, 0.505902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486802,-99) , 
7, 0.714564, 0, 0, 0.5017,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.453503,-99) , 
8, -1.27878, 0, 0, 0.493188,-99) , 
9, 0.71673, 1, 0, 0.502066,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.014663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496128,-99) , 
4, 0.999955, 1, 0, 0.498777,-99) , 
7, 2.14288, 0, 0, 0.500642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467942,-99) , 
4, 0.999048, 0, 0, 0.499589,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0189868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492194,-99) , 
6, -951.286, 0, 0, 0.498617,-99) , 
8, -4.65576, 1, 0, 0.500694,-99) , 
8, 2.18219, 0, 0, 0.502305,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.06286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489078,-99) , 
8, -3.37597, 1, 0, 0.499725,-99) , 
8, 1.94056, 0, 0, 0.504398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450084,-99) , 
6, -0.918336, 0, 0, 0.508795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211575,-99) , 
6, -2.14283, 0, 0, 0.492772,-99) , 
6, -951.286, 1, 0, 0.498672,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0317315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.437416, 0, 1, 0.554722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476311,-99) , 
9, 2.84463, 1, 0, 0.504722,-99) , 
9, 0.798978, 1, 0, 0.513981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491093,-99) , 
2, -0.0725759, 1, 0, 0.49509,-99) , 
8, -4.71383, 1, 0, 0.497342,-99) , 
8, -1.76919, 0, 0, 0.503111,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0157722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4887,-99) , 
6, -951.286, 1, 0, 0.517807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46421,-99) , 
7, 2.1428, 1, 0, 0.5014,-99) , 
8, 0.552358, 0, 0, 0.503189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458249,-99) , 
9, -2.56061, 0, 0, 0.501794,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0380726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49685,-99) , 
0, 0.50317, 1, 0, 0.508025,-99) , 
2, 0.0705203, 0, 0, 0.51199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435695,-99) , 
7, -1.57124, 0, 0, 0.504805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280206,-99) , 
6, -1.85716, 0, 0, 0.491855,-99) , 
6, -951.286, 1, 0, 0.498354,-99) , 
0, 0.500947, 0, 0, 0.501936,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0329805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46214,-99) , 
4, 0.999955, 0, 0, 0.516571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486428,-99) , 
4, 0.999955, 1, 0, 0.490218,-99) , 
7, 1.28577, 0, 0, 0.494348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454472,-99) , 
4, 0.999048, 0, 0, 0.493065,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0402412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480632,-99) , 
8, -3.28861, 1, 0, 0.507032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478452,-99) , 
6, -951.286, 1, 0, 0.493874,-99) , 
7, -0.428443, 1, 0, 0.497516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455507,-99) , 
9, -2.39957, 0, 0, 0.495729,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0211715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49845,-99) , 
9, 1.43732, 1, 0, 0.520937,-99) , 
NN(
0, 
0, 
-1, 0.503169, 1, -1, 0.481721,-99) , 
3, 4.38966, 1, 0, 0.51149,-99) , 
NN(
NN(
0, 
0, 
-1, -1.60824, 1, 1, 0.521704,-99) , 
NN(
0, 
0, 
-1, -1.59097, 0, -1, 0.494715,-99) , 
7, -1.28555, 1, 0, 0.497478,-99) , 
0, 0.500947, 0, 0, 0.501142,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0134379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46191,-99) , 
7, 2.34693, 1, 0, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455253,-99) , 
7, -1.57141, 0, 0, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472736,-99) , 
9, -2.26819, 0, 0, 0.498578,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0122734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78248, 0, 1, 0.503157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458407,-99) , 
4, 0.999562, 1, 0, 0.477728,-99) , 
4, 0.999819, 0, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463469,-99) , 
4, 0.999048, 0, 0, 0.500061,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0285441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441567,-99) , 
4, 0.999955, 0, 0, 0.508183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490602,-99) , 
2, 0.0706818, 0, 0, 0.494463,-99) , 
8, -1.41741, 0, 0, 0.498491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466479,-99) , 
4, 0.999048, 0, 0, 0.497478,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0208496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499928,-99) , 
0, 0.495233, 0, 0, 0.524413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463883,-99) , 
9, -1.57029, 0, 0, 0.496786,-99) , 
7, -1.28553, 1, 0, 0.499645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484037,-99) , 
2, -0.0733765, 1, 0, 0.490849,-99) , 
NN(
0, 
0, 
-1, -0.423445, 0, -1, 0.467963,-99) , 
9, 0.66396, 1, 0, 0.483316,-99) , 
0, 0.500947, 1, 0, 0.495493,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0200758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491946,-99) , 
7, -0.714145, 1, 0, 0.49499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468909,-99) , 
2, -0.132887, 0, 0, 0.493723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458038,-99) , 
2, -0.214506, 0, 0, 0.492227,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0221702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.14077, 1, 1, 0.522415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474012,-99) , 
7, -0.714276, 0, 0, 0.497382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353113,-99) , 
7, -0.659784, 1, 0, 0.464641,-99) , 
9, -1.51118, 0, 0, 0.494407,-99) , 
8, -4.34575, 1, 0, 0.496632,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.024522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48329,-99) , 
4, 0.999989, 0, 0, 0.496785,-99) , 
NN(
0, 
0, 
-1, 0.999566, 1, -1, 0.472589,-99) , 
4, 0.999773, 0, 0, 0.495328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460257,-99) , 
4, 0.999048, 0, 0, 0.494212,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.014065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446375,-99) , 
7, -1.77532, 0, 0, 0.501303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463043,-99) , 
7, 2.14288, 1, 0, 0.499712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458847,-99) , 
9, -2.42796, 0, 0, 0.498142,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.01817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42926, 0, 1, 0.514913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519957,-99) , 
NN(
0, 
0, 
-1, -0.133106, 0, -1, 0.491843,-99) , 
2, -0.214704, 1, 0, 0.493009,-99) , 
0, 0.491424, 1, 0, 0.49454,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0153854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494783,-99) , 
7, -2.04743, 0, 0, 0.522182,-99) , 
NN(
NN(
0, 
0, 
-1, 3.51503, 1, -1, 0.498021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366108,-99) , 
7, -0.912773, 1, 0, 0.465412,-99) , 
9, -1.83904, 0, 0, 0.495475,-99) , 
7, -1.57124, 1, 0, 0.497178,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0221791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467942,-99) , 
7, -1.57142, 0, 0, 0.505869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445327,-99) , 
8, 1.36917, 0, 0, 0.486646,-99) , 
9, 2.51767, 1, 0, 0.503968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455211,-99) , 
9, -2.52271, 0, 0, 0.502353,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.023954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484913,-99) , 
7, -1.97941, 0, 0, 0.515311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422715,-99) , 
7, 1.9116, 1, 0, 0.496456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231473,-99) , 
6, -2.14272, 0, 0, 0.485303,-99) , 
6, -951.286, 1, 0, 0.490853,-99) , 
7, -1.57126, 1, 0, 0.492372,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0194437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04743, 0, 1, 0.521602,-99) , 
NN(
0, 
0, 
-1, -1.92276, 0, -1, 0.491072,-99) , 
7, -1.57124, 1, 0, 0.492981,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0199536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484051,-99) , 
8, -1.92738, 0, 0, 0.51274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496789,-99) , 
4, 0.999524, 1, 0, 0.498953,-99) , 
7, 1.28579, 0, 0, 0.501141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459459,-99) , 
3, 2.65193, 1, 0, 0.490619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439423,-99) , 
3, 4.54098, 1, 0, 0.479848,-99) , 
0, 0.493329, 0, 0, 0.498323,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0207314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495603,-99) , 
8, -2.93167, 0, 0, 0.504495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444556,-99) , 
3, 4.08044, 1, 0, 0.488944,-99) , 
9, 1.62458, 1, 0, 0.501717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464246,-99) , 
9, -2.50949, 0, 0, 0.500435,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0258973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49002,-99) , 
3, 0.980622, 1, 0, 0.494229,-99) , 
3, 9.13153, 0, 0, 0.496277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462354,-99) , 
4, 0.999524, 0, 0, 0.494472,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0166115);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04744, 0, 1, 0.520325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490342,-99) , 
9, 0.370383, 1, 0, 0.49714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445706,-99) , 
9, -2.02983, 0, 0, 0.494464,-99) , 
7, -1.57126, 1, 0, 0.496087,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.00966553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.2201, 0, 1, 0.501713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444572,-99) , 
4, 0.999751, 0, 0, 0.499944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440525,-99) , 
7, 0.429869, 1, 0, 0.475128,-99) , 
4, 0.999524, 0, 0, 0.498586,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0153655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54773,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.495485,-99) , 
7, 2.14283, 0, 0, 0.497747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451533,-99) , 
4, 0.999048, 0, 0, 0.496324,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0267424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492086,-99) , 
8, -2.10557, 0, 0, 0.497204,-99) , 
4, 0.999048, 1, 0, 0.499776,-99) , 
NN(
0, 
0, 
-1, -0.0716622, 0, -1, 0.484816,-99) , 
9, 0.71673, 1, 0, 0.495255,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0199212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.73928, 1, 1, 0.524001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491223,-99) , 
3, 4.48129, 1, 0, 0.510865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493895,-99) , 
8, -1.09299, 0, 0, 0.497623,-99) , 
0, 0.500947, 0, 0, 0.501085,-99) , 
8, -4.3753, 1, 0, 0.502787,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0166276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495801,-99) , 
7, 1.20341, 0, 0, 0.510761,-99) , 
7, -0.428761, 1, 0, 0.524445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48943,-99) , 
9, -1.3985, 0, 0, 0.499144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448016,-99) , 
7, 2.14281, 1, 0, 0.497196,-99) , 
8, 0.375626, 0, 0, 0.500461,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.014685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493095,-99) , 
9, 2.95895, 1, 0, 0.525761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443951,-99) , 
9, 1.99394, 1, 0, 0.500684,-99) , 
8, 0.434181, 0, 0, 0.502708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472983,-99) , 
9, 4.15532, 1, 0, 0.501686,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0169789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428384, 1, 1, 0.551161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478666,-99) , 
6, -951.286, 1, 0, 0.521323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48447,-99) , 
7, 1.28571, 1, 0, 0.499089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427685,-99) , 
9, 2.26027, 1, 0, 0.497024,-99) , 
8, 0.807362, 0, 0, 0.499287,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.026732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478355,-99) , 
2, 0.240317, 1, 0, 0.513474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486863,-99) , 
2, -0.016158, 1, 0, 0.495109,-99) , 
2, 0.030474, 0, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46508,-99) , 
2, -0.214346, 0, 0, 0.498543,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0362808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492321,-99) , 
4, 0.999048, 1, 0, 0.495548,-99) , 
1, 0.00652116, 0, 0, 0.501161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486903,-99) , 
9, 1.15811, 1, 0, 0.502064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455492,-99) , 
8, 0.641453, 0, 0, 0.474951,-99) , 
7, 0.714406, 0, 0, 0.48893,-99) , 
9, 0.460091, 1, 0, 0.496891,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0162875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465991,-99) , 
8, -2.3021, 0, 0, 0.492446,-99) , 
7, 0.999924, 1, 0, 0.502838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0.491696, 1, -1, 0.477322,-99) , 
2, -0.0700905, 1, 0, 0.483385,-99) , 
0, 0.493329, 0, 0, 0.500211,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0203046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496697,-99) , 
7, 1.85714, 0, 0, 0.498651,-99) , 
4, 0.999524, 1, 0, 0.500566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46912,-99) , 
2, 0.0781859, 1, 0, 0.496596,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.457527,-99) , 
2, -0.0713091, 0, 0, 0.485,-99) , 
3, 4.70919, 1, 0, 0.497583,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0336569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49103,-99) , 
8, -2.6519, 0, 0, 0.498136,-99) , 
1, -0.00547265, 1, 0, 0.504153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474681,-99) , 
9, 2.48182, 1, 0, 0.500973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465842,-99) , 
8, 0.238222, 0, 0, 0.478487,-99) , 
7, 0.428682, 0, 0, 0.492302,-99) , 
9, -0.0810067, 1, 0, 0.498554,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0167008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.74869, 0, 1, 0.505594,-99) , 
NN(
0, 
0, 
-1, -0.826942, 1, -1, 0.469889,-99) , 
4, 0.999819, 0, 0, 0.503058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460716,-99) , 
4, 0.999048, 0, 0, 0.501713,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0423973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422928,-99) , 
7, 0.146572, 1, 0, 0.498931,-99) , 
8, -3.01559, 0, 0, 0.508193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484296,-99) , 
7, 1.0545, 1, 0, 0.494743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460558,-99) , 
8, 0.724652, 0, 0, 0.47586,-99) , 
7, -0.142744, 0, 0, 0.490309,-99) , 
9, -0.625753, 1, 0, 0.497171,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0287412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470977,-99) , 
4, 0.999955, 0, 0, 0.519898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48962,-99) , 
4, 0.999955, 1, 0, 0.493168,-99) , 
7, 1.2857, 0, 0, 0.497378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459371,-99) , 
4, 0.999048, 0, 0, 0.496162,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0101407);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499488,-99) , 
4, 0.999524, 1, 0, 0.500982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462645,-99) , 
9, 3.50693, 1, 0, 0.4992,-99) , 
NN(
0, 
0, 
-1, 2.34691, 1, -1, 0.474005,-99) , 
7, 1.85712, 1, 0, 0.497539,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0207541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78553, 0, 1, 0.506502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465621,-99) , 
4, 0.999796, 0, 0, 0.504735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413199,-99) , 
9, -0.918901, 1, 0, 0.465125,-99) , 
4, 0.999524, 0, 0, 0.502605,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.017533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493698,-99) , 
6, -951.286, 0, 0, 0.518524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495808,-99) , 
4, 0.999524, 1, 0, 0.49789,-99) , 
7, 1.57147, 0, 0, 0.50012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467375,-99) , 
3, 9.10638, 1, 0, 0.498999,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0221001);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.530889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495708,-99) , 
9, -0.0667686, 1, 0, 0.50152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383514,-99) , 
7, -0.980704, 1, 0, 0.459144,-99) , 
9, -1.85282, 0, 0, 0.498344,-99) , 
7, -1.57126, 1, 0, 0.500421,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0271541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453844,-99) , 
4, 0.999955, 0, 0, 0.520366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492051,-99) , 
6, -951.286, 1, 0, 0.499712,-99) , 
7, 1.28571, 0, 0, 0.502935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462261,-99) , 
4, 0.999048, 0, 0, 0.501625,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0124128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497528,-99) , 
3, 8.05765, 0, 0, 0.498909,-99) , 
7, 2.14288, 0, 0, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.475425,-99) , 
4, 0.999524, 0, 0, 0.499317,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0162044);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464093,-99) , 
7, 2.30611, 1, 0, 0.502596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451455,-99) , 
9, -2.13785, 0, 0, 0.49995,-99) , 
7, -1.85697, 1, 0, 0.501162,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0234429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486167,-99) , 
7, -0.713913, 0, 0, 0.506078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49097,-99) , 
7, -1.57124, 1, 0, 0.493308,-99) , 
0, 0.500947, 0, 0, 0.496636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45726,-99) , 
3, 9.27458, 1, 0, 0.495436,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0198869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493884,-99) , 
6, -951.286, 0, 0, 0.520481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48523,-99) , 
9, -1.50033, 0, 0, 0.503883,-99) , 
7, -1.28571, 1, 0, 0.505572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47962,-99) , 
0, 0.490472, 0, 0, 0.504438,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.010327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
3, 9.08707, 0, 0, 0.50038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464582,-99) , 
4, 0.999683, 0, 0, 0.498924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462379,-99) , 
4, 0.999048, 0, 0, 0.497767,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0132751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.77612, 0, 1, 0.504519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470174,-99) , 
4, 0.999683, 0, 0, 0.503121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460261,-99) , 
4, 0.999048, 0, 0, 0.501757,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0185743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2968, 1, 1, 0.533426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468986,-99) , 
4, 0.999796, 0, 0, 0.501008,-99) , 
4, 0.999524, 1, 0, 0.503313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483392,-99) , 
6, -951.286, 0, 0, 0.492736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456745,-99) , 
2, -0.071544, 0, 0, 0.486853,-99) , 
9, 0.954811, 1, 0, 0.499026,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0204712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.90347, 1, 1, 0.52766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472316,-99) , 
7, -0.918118, 0, 0, 0.50113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379226,-99) , 
7, -0.992684, 1, 0, 0.463771,-99) , 
9, -1.89697, 0, 0, 0.498569,-99) , 
7, -1.57122, 1, 0, 0.500442,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0197159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493917,-99) , 
7, 2.14288, 0, 0, 0.49529,-99) , 
4, 0.999524, 1, 0, 0.497571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454183,-99) , 
3, 9.12537, 1, 0, 0.496105,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0269121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485362,-99) , 
9, 0.417484, 1, 0, 0.515238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491984,-99) , 
0, 0.502852, 0, 0, 0.495242,-99) , 
3, 0.957822, 1, 0, 0.499382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458624,-99) , 
3, 9.07131, 1, 0, 0.497981,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0173821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497952,-99) , 
6, -951.286, 0, 0, 0.521682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475818,-99) , 
9, 2.71202, 1, 0, 0.501399,-99) , 
7, -1.28555, 1, 0, 0.503516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463397,-99) , 
4, 0.999048, 0, 0, 0.502261,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0157706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496899,-99) , 
0, 0.495233, 1, 0, 0.500536,-99) , 
NN(
0, 
0, 
-1, -2.87098, 1, -1, 0.473484,-99) , 
4, 0.999819, 0, 0, 0.49858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458511,-99) , 
4, 0.999048, 0, 0, 0.497318,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.00685288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75156, 0, 1, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47321,-99) , 
4, 0.999683, 0, 0, 0.500406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471752,-99) , 
4, 0.999048, 0, 0, 0.499492,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0426274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
9, -2.1034, 0, 0, 0.530544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457804,-99) , 
6, -951.286, 0, 0, 0.483265,-99) , 
9, -1.56188, 1, 0, 0.504219,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419585,-99) , 
9, -1.05446, 0, 0, 0.467046,-99) , 
8, -3.38792, 0, 0, 0.491761,-99) , 
7, -0.428573, 1, 0, 0.495599,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0226117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04746, 0, 1, 0.53093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470998,-99) , 
4, 0.999048, 0, 0, 0.504526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416885,-99) , 
7, -0.962426, 1, 0, 0.48598,-99) , 
9, -1.84583, 0, 0, 0.503061,-99) , 
7, -1.57128, 1, 0, 0.50486,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0369081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494031,-99) , 
9, -2.0503, 0, 0, 0.517715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469477,-99) , 
6, -951.286, 0, 0, 0.494799,-99) , 
9, -0.701084, 1, 0, 0.509148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433977,-99) , 
4, 0.999524, 0, 0, 0.49798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344456,-99) , 
9, -1.11732, 0, 0, 0.453435,-99) , 
8, -3.43984, 0, 0, 0.493336,-99) , 
7, -0.142851, 1, 0, 0.499712,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0205797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476671,-99) , 
3, 1.71359, 0, 0, 0.496082,-99) , 
9, 2.80003, 1, 0, 0.508682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52017,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.492056,-99) , 
8, -4.5149, 1, 0, 0.493904,-99) , 
8, 0.299902, 0, 0, 0.495698,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0154364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28567, 0, 1, 0.518329,-99) , 
NN(
0, 
0, 
-1, 2.14288, 1, -1, 0.495595,-99) , 
8, 0.0767756, 0, 0, 0.498678,-99) , 
NN(
0, 
0, 
-1, 0.506117, 0, -1, 0.471432,-99) , 
0, 0.504757, 1, 0, 0.496937,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0399748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05895, 0, 1, 0.535083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440259,-99) , 
2, 0.0556562, 1, 0, 0.498302,-99) , 
9, -1.49815, 1, 0, 0.515351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49706,-99) , 
7, 0.224466, 1, 0, 0.504231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418846,-99) , 
9, -1.07522, 0, 0, 0.462577,-99) , 
8, -3.40863, 0, 0, 0.498021,-99) , 
7, -0.428588, 1, 0, 0.503362,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0187682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479777,-99) , 
8, 1.2669, 0, 0, 0.495757,-99) , 
9, 1.91995, 1, 0, 0.509102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497424,-99) , 
8, -4.38143, 1, 0, 0.499492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465921,-99) , 
9, -2.5137, 0, 0, 0.498015,-99) , 
8, -1.06408, 0, 0, 0.500707,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0166875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474691,-99) , 
9, -1.98722, 0, 0, 0.502575,-99) , 
8, -4.78669, 1, 0, 0.504061,-99) , 
NN(
0, 
0, 
-1, 0.716187, 0, -1, 0.465791,-99) , 
9, 3.22526, 1, 0, 0.501798,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0211158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499323,-99) , 
4, 0.999048, 1, 0, 0.501767,-99) , 
8, -1.95805, 0, 0, 0.504969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484023,-99) , 
6, -951.286, 0, 0, 0.502239,-99) , 
NN(
0, 
0, 
-1, 4.43439, 1, -1, 0.481993,-99) , 
7, 1.00011, 0, 0, 0.490648,-99) , 
9, 0.460091, 1, 0, 0.499985,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0191525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.143715, 0, 1, 0.517574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492427,-99) , 
8, -2.3696, 0, 0, 0.498465,-99) , 
2, 0.071135, 0, 0, 0.501432,-99) , 
NN(
0, 
0, 
-1, 0.733414, 0, -1, 0.475499,-99) , 
9, 3.24397, 1, 0, 0.49989,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0144911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476679,-99) , 
7, -0.935322, 1, 0, 0.4925,-99) , 
6, -951.286, 1, 0, 0.519851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468736,-99) , 
4, 0.999524, 0, 0, 0.498661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451565,-99) , 
7, -1.57121, 0, 0, 0.49681,-99) , 
8, -4.03342, 1, 0, 0.49969,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0513101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.541537, 1, 1, 0.598535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490796,-99) , 
5, 0.00596176, 0, 0, 0.496484,-99) , 
5, 0.00894349, 0, 0, 0.507756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330767,-99) , 
5, 0.023484, 1, 0, 0.503341,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0242888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.143048, 0, 1, 0.530441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452638,-99) , 
9, -0.685375, 1, 0, 0.481748,-99) , 
3, 4.46703, 1, 0, 0.512431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494674,-99) , 
6, -951.286, 1, 0, 0.501233,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481343,-99) , 
0, 0.493329, 0, 0, 0.498828,-99) , 
2, -0.0714185, 1, 0, 0.501143,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0167774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.893666, 0, 1, 0.506706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480954,-99) , 
9, 3.24397, 1, 0, 0.505226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467605,-99) , 
7, 2.14288, 1, 0, 0.503761,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0207041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21455, 1, 1, 0.507503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472815,-99) , 
6, -951.286, 0, 0, 0.48923,-99) , 
0, 0.5019, 1, 0, 0.504089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470088,-99) , 
9, 3.38031, 1, 0, 0.502255,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0168706);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471505,-99) , 
7, 2.14289, 1, 0, 0.504193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456689,-99) , 
9, 2.70955, 1, 0, 0.502511,-99) , 
8, 1.99221, 0, 0, 0.503633,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0213359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47142,-99) , 
9, -1.93447, 0, 0, 0.500319,-99) , 
8, -4.65268, 1, 0, 0.502687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49251,-99) , 
9, 3.87519, 1, 0, 0.512401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468915,-99) , 
6, -951.286, 0, 0, 0.481723,-99) , 
8, 1.04694, 0, 0, 0.489924,-99) , 
9, 0.71673, 1, 0, 0.49881,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0138318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487342,-99) , 
6, -951.286, 0, 0, 0.513103,-99) , 
NN(
0, 
0, 
-1, -1.51229, 0, -1, 0.496604,-99) , 
7, -1.2857, 1, 0, 0.498302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469659,-99) , 
2, -0.214218, 0, 0, 0.497112,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0224216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497024,-99) , 
7, 0.350829, 0, 0, 0.529781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498897,-99) , 
4, 0.999524, 1, 0, 0.50176,-99) , 
8, -1.91976, 0, 0, 0.504946,-99) , 
NN(
NN(
0, 
0, 
-1, 3.6974, 1, 1, 0.518058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46666,-99) , 
6, -951.286, 0, 0, 0.480646,-99) , 
8, 1.06495, 0, 0, 0.490656,-99) , 
9, 0.759337, 1, 0, 0.500779,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0218094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.45502, 1, 1, 0.526502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464221,-99) , 
9, 0.422447, 1, 0, 0.499478,-99) , 
8, -1.81147, 0, 0, 0.501686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464311,-99) , 
6, -951.286, 0, 0, 0.480637,-99) , 
8, 2.23263, 0, 0, 0.487895,-99) , 
9, 0.71673, 1, 0, 0.497521,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.00988409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497403,-99) , 
7, -1.15646, 1, 0, 0.517236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444804,-99) , 
7, -1.57126, 0, 0, 0.497851,-99) , 
8, -4.36999, 1, 0, 0.499334,-99) , 
0, 0.505709, 0, 0, 0.500875,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0377867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.675704, 1, 1, 0.57953,-99) , 
NN(
0, 
0, 
-1, 0.000429183, 0, -1, 0.491931,-99) , 
5, 0.00901285, 0, 0, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354182,-99) , 
5, 0.0236633, 1, 0, 0.49744,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0156885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499467,-99) , 
7, 1.61227, 1, 0, 0.515922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496611,-99) , 
4, 0.999525, 1, 0, 0.498436,-99) , 
7, 1.28576, 0, 0, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467209,-99) , 
2, -0.214166, 0, 0, 0.499808,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0371973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.63112, 0, 1, 0.525046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392211,-99) , 
7, -0.111087, 1, 0, 0.510937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461663,-99) , 
4, 0.999524, 0, 0, 0.504718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445725,-99) , 
6, -951.287, 0, 0, 0.467667,-99) , 
7, -0.428444, 0, 0, 0.498138,-99) , 
9, -1.17123, 1, 0, 0.501167,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0196338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.537259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404093,-99) , 
9, 1.47015, 1, 0, 0.499183,-99) , 
6, -951.286, 0, 0, 0.517898,-99) , 
NN(
NN(
0, 
0, 
-1, 0.911623, 0, 1, 0.502162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470429,-99) , 
9, 3.50693, 1, 0, 0.500718,-99) , 
7, 1.57142, 0, 0, 0.502575,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0114683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436561,-99) , 
9, -2.28134, 0, 0, 0.497805,-99) , 
7, -1.85692, 1, 0, 0.498788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48139,-99) , 
0, 0.505346, 1, 0, 0.496296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453491,-99) , 
7, -0.428158, 0, 0, 0.483274,-99) , 
0, 0.502852, 1, 0, 0.496613,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0514473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0108343, 0, 1, 0.559715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487076,-99) , 
8, 1.14017, 0, 0, 0.490099,-99) , 
5, 0.00679148, 0, 0, 0.502654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356332,-99) , 
5, 0.0237713, 1, 0, 0.498973,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0104);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
3, 9.03277, 0, 0, 0.49965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467018,-99) , 
4, 0.999683, 0, 0, 0.498355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458973,-99) , 
4, 0.999048, 0, 0, 0.497153,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0158476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49877, 1, 1, 0.525325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470231,-99) , 
9, -2.05171, 0, 0, 0.501915,-99) , 
7, -1.57142, 1, 0, 0.503404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480044,-99) , 
6, -951.286, 0, 0, 0.493506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460679,-99) , 
0, 0.489791, 0, 0, 0.486149,-99) , 
0, 0.493329, 0, 0, 0.501126,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0251241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465255,-99) , 
4, 0.999977, 0, 0, 0.520987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
4, 0.999955, 1, 0, 0.500072,-99) , 
7, 1.28578, 0, 0, 0.503314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469747,-99) , 
4, 0.999524, 0, 0, 0.501552,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0180061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496196,-99) , 
6, -951.286, 1, 0, 0.519568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424505,-99) , 
7, -1.57126, 0, 0, 0.499657,-99) , 
8, -3.92379, 1, 0, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450574,-99) , 
1, 0.0143116, 1, 0, 0.501131,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0365672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.73476, 0, 1, 0.525175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447863,-99) , 
7, -0.256244, 1, 0, 0.511145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489704,-99) , 
9, 0.564542, 1, 0, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0.0710585, 1, -1, 0.477056,-99) , 
7, -0.142744, 0, 0, 0.496228,-99) , 
9, -1.155, 1, 0, 0.499863,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.012803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493456,-99) , 
8, -1.00305, 0, 0, 0.504415,-99) , 
1, -0.00386971, 1, 0, 0.515213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546297,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498046,-99) , 
4, 0.999049, 1, 0, 0.499576,-99) , 
7, 1.28571, 0, 0, 0.502059,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0373541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.07805, 0, 1, 0.537162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476996,-99) , 
9, 0.938216, 0, 0, 0.495404,-99) , 
9, -1.4441, 1, 0, 0.515685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493788,-99) , 
9, 0.313858, 1, 0, 0.502225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379347,-99) , 
9, -1.43231, 0, 0, 0.497273,-99) , 
7, -0.428444, 1, 0, 0.503011,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0194867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.524908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476881,-99) , 
2, -0.0714628, 0, 0, 0.502884,-99) , 
NN(
0, 
0, 
-1, 0.701096, 1, -1, 0.492648,-99) , 
8, -2.07047, 0, 0, 0.496385,-99) , 
7, 1.85714, 0, 0, 0.498413,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00856142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498082,-99) , 
8, -0.45416, 0, 0, 0.515525,-99) , 
NN(
0, 
0, 
-1, -4.45773, 1, 1, 0.502101,-99) , 
7, 1.57148, 0, 0, 0.503528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483653,-99) , 
2, 0.214083, 1, 0, 0.502804,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0327065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499803,-99) , 
8, 1.65039, 0, 0, 0.505951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312139,-99) , 
6, -1.85705, 0, 0, 0.498017,-99) , 
6, -951.286, 1, 0, 0.502045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471563,-99) , 
7, 2.14288, 1, 0, 0.500859,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.021262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40043, 0, 1, 0.537183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484773,-99) , 
6, -951.286, 1, 0, 0.517301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
8, -0.731913, 0, 0, 0.497688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454274,-99) , 
9, 1.93396, 1, 0, 0.49629,-99) , 
8, 0.299902, 0, 0, 0.498904,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0133538);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497142,-99) , 
6, -951.286, 1, 0, 0.522002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461948,-99) , 
7, -1.53062, 0, 0, 0.498767,-99) , 
8, -4.03342, 1, 0, 0.501808,-99) , 
7, 2.14285, 0, 0, 0.503558,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0197747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496268,-99) , 
0, 0.49809, 1, 0, 0.516992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495522,-99) , 
9, -0.959748, 1, 0, 0.499343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415465,-99) , 
7, -0.967779, 1, 0, 0.475002,-99) , 
9, -1.85282, 0, 0, 0.497502,-99) , 
7, -1.57117, 1, 0, 0.498722,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0136769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49756,-99) , 
7, 1.57142, 0, 0, 0.500247,-99) , 
3, 9.00889, 0, 0, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465586,-99) , 
4, 0.999048, 0, 0, 0.50064,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0180018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481356,-99) , 
7, -0.91605, 1, 0, 0.491214,-99) , 
6, -951.286, 1, 0, 0.513832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475522,-99) , 
4, 0.999909, 0, 0, 0.500506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473075,-99) , 
4, 0.999048, 0, 0, 0.49972,-99) , 
8, -4.03342, 1, 0, 0.501483,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0597177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422707,-99) , 
7, -1.57128, 0, 0, 0.507454,-99) , 
8, -4.21681, 1, 0, 0.512225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459394,-99) , 
6, -0.918336, 0, 0, 0.512397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24409,-99) , 
6, -2.14283, 0, 0, 0.498722,-99) , 
6, -951.286, 1, 0, 0.505547,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0175438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530634,-99) , 
NN(
0, 
0, 
-1, -2.13247, 0, -1, 0.492081,-99) , 
7, -1.85713, 1, 0, 0.493528,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0173021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477823,-99) , 
9, -1.76003, 0, 0, 0.501402,-99) , 
8, -4.66802, 1, 0, 0.503249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0.63529, 0, -1, 0.471762,-99) , 
8, 2.3104, 0, 0, 0.48212,-99) , 
9, 2.01783, 1, 0, 0.500458,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0307858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450244,-99) , 
7, -1.69352, 0, 0, 0.474775,-99) , 
6, -951.286, 0, 0, 0.508701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454659,-99) , 
7, 1.77563, 1, 0, 0.499837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302488,-99) , 
6, -1.85716, 0, 0, 0.485297,-99) , 
6, -951.286, 1, 0, 0.492513,-99) , 
7, -1.2853, 1, 0, 0.494164,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0171657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496598,-99) , 
7, -1.91138, 0, 0, 0.512502,-99) , 
NN(
0, 
0, 
-1, -1.91576, 0, -1, 0.491917,-99) , 
7, -1.57125, 1, 0, 0.493215,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0228022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475773,-99) , 
8, -2.08677, 0, 0, 0.505782,-99) , 
1, 0.00373063, 0, 0, 0.515855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48579,-99) , 
6, -951.286, 1, 0, 0.493312,-99) , 
4, 0.999524, 1, 0, 0.495396,-99) , 
7, 1.28571, 0, 0, 0.498649,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0116013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52092,-99) , 
NN(
0, 
0, 
-1, 0.214255, 1, -1, 0.497894,-99) , 
0, 0.502127, 0, 0, 0.498965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483525,-99) , 
6, -951.286, 0, 0, 0.501614,-99) , 
NN(
0, 
0, 
-1, -0.223635, 1, -1, 0.473215,-99) , 
7, 0.429411, 0, 0, 0.484392,-99) , 
0, 0.502852, 1, 0, 0.496929,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0221199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.41761, 0, 1, 0.526922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493346,-99) , 
8, 0.708619, 0, 0, 0.495447,-99) , 
NN(
0, 
0, 
-1, 1.00141, 0, -1, 0.472251,-99) , 
9, 3.00204, 1, 0, 0.493709,-99) , 
8, -4.36999, 1, 0, 0.496248,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0178927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142883, 1, 1, 0.536211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477103,-99) , 
6, -951.286, 1, 0, 0.511529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496277,-99) , 
8, -4.73474, 1, 0, 0.497579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429973,-99) , 
9, 2.21328, 1, 0, 0.495619,-99) , 
8, 0.734616, 0, 0, 0.497178,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0219089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0411091, 1, 1, 0.512875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493993,-99) , 
7, 1.00012, 0, 0, 0.498965,-99) , 
3, 1.85267, 1, 0, 0.505225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469767,-99) , 
3, 9.32353, 1, 0, 0.504135,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0209587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470873,-99) , 
7, -1.57118, 0, 0, 0.505131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45315,-99) , 
9, -2.58863, 0, 0, 0.503506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452192,-99) , 
7, 1.00303, 0, 0, 0.475998,-99) , 
9, 3.08085, 1, 0, 0.501679,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0274389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497851,-99) , 
7, 0.542086, 0, 0, 0.531093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475489,-99) , 
2, -0.0699441, 0, 0, 0.500131,-99) , 
9, 0.260284, 1, 0, 0.506546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496699,-99) , 
7, -1.62199, 1, 0, 0.501209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438329,-99) , 
9, -0.112271, 0, 0, 0.462788,-99) , 
7, 0.615819, 1, 0, 0.494405,-99) , 
8, -2.48512, 0, 0, 0.500431,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0140323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.15886, 1, 1, 0.505076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466846,-99) , 
7, -1.57142, 0, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469717,-99) , 
9, -2.51572, 0, 0, 0.5024,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0295237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498775,-99) , 
0, 0.498091, 1, 0, 0.520068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497957,-99) , 
8, 1.2702, 0, 0, 0.501609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289257,-99) , 
6, -1.85705, 0, 0, 0.490495,-99) , 
6, -951.286, 1, 0, 0.496041,-99) , 
7, -1.57124, 1, 0, 0.497531,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0338099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.541537, 1, 1, 0.568686,-99) , 
NN(
0, 
0, 
-1, 0.00043108, 0, -1, 0.492698,-99) , 
5, 0.00905262, 0, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362172,-99) , 
5, 0.0237713, 1, 0, 0.497224,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0193428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494915,-99) , 
0, 0.500812, 1, 0, 0.504878,-99) , 
NN(
0, 
0, 
-1, 0.49224, 1, -1, 0.487367,-99) , 
0, 0.493329, 0, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471789,-99) , 
9, 3.35768, 1, 0, 0.500883,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0183351);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.9794, 0, 1, 0.526285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491979,-99) , 
6, -951.286, 1, 0, 0.49902,-99) , 
7, 2.12924, 0, 0, 0.500377,-99) , 
7, -1.57125, 1, 0, 0.502,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0139469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459122,-99) , 
7, 2.14284, 1, 0, 0.502717,-99) , 
NN(
0, 
0, 
-1, 1.99734, 0, -1, 0.476967,-99) , 
9, 2.84504, 1, 0, 0.500727,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0156435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
9, -0.720988, 1, 0, 0.520151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497722,-99) , 
3, 9.13153, 0, 0, 0.499095,-99) , 
4, 0.999524, 1, 0, 0.500427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46781,-99) , 
3, 1.74855, 0, 0, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0.478118, 0, -1, 0.467902,-99) , 
8, 1.14774, 0, 0, 0.486803,-99) , 
9, 2.0872, 1, 0, 0.498675,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.017535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499812,-99) , 
7, -1.70458, 1, 0, 0.501908,-99) , 
8, -1.73711, 0, 0, 0.504162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480216,-99) , 
0, 0.503986, 0, 0, 0.483891,-99) , 
0, 0.492376, 1, 0, 0.487925,-99) , 
9, 0.71673, 1, 0, 0.499279,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0202226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49467,-99) , 
7, -0.86279, 1, 0, 0.522727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484216,-99) , 
3, 5.85242, 1, 0, 0.503511,-99) , 
8, -3.9435, 1, 0, 0.506191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468551,-99) , 
3, 9.38661, 1, 0, 0.505049,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0175647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489871,-99) , 
9, -1.52827, 0, 0, 0.518016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481691,-99) , 
7, -0.99984, 0, 0, 0.501123,-99) , 
8, -3.81798, 1, 0, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475295,-99) , 
9, -2.26819, 0, 0, 0.501739,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0365435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.522772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465448,-99) , 
6, -951.286, 0, 0, 0.48838,-99) , 
8, -3.33462, 1, 0, 0.506712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493091,-99) , 
9, -0.168468, 1, 0, 0.500947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373104,-99) , 
9, -1.4187, 0, 0, 0.466917,-99) , 
8, -3.40863, 0, 0, 0.495926,-99) , 
7, -0.428421, 1, 0, 0.49925,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0259421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49351,-99) , 
6, -951.286, 0, 0, 0.514415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489346,-99) , 
2, -0.0307584, 1, 0, 0.494565,-99) , 
7, -0.999839, 1, 0, 0.497647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45513,-99) , 
2, 0.214083, 1, 0, 0.496135,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0317616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49172,-99) , 
4, 0.999994, 0, 0, 0.505008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427859,-99) , 
9, -0.478165, 1, 0, 0.475083,-99) , 
4, 0.999864, 0, 0, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451643,-99) , 
4, 0.999048, 0, 0, 0.500818,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0184378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477096,-99) , 
6, -951.286, 1, 0, 0.505803,-99) , 
7, 1.28577, 0, 0, 0.515352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496832,-99) , 
4, 0.999524, 1, 0, 0.498759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459985,-99) , 
3, 9.33163, 1, 0, 0.49742,-99) , 
8, 0.0846499, 0, 0, 0.499925,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.022008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485185,-99) , 
9, 2.34497, 1, 0, 0.505425,-99) , 
7, 2.14284, 0, 0, 0.50758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481622,-99) , 
4, 0.999524, 0, 0, 0.506203,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0186455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97944, 0, 1, 0.525872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494194,-99) , 
2, 0.0296468, 0, 0, 0.498359,-99) , 
2, -0.215065, 1, 0, 0.500066,-99) , 
7, -1.57127, 1, 0, 0.50168,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.03825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.480915, 1, 1, 0.55154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474692,-99) , 
5, 0.00112851, 0, 0, 0.498327,-99) , 
5, 0.00789923, 0, 0, 0.505716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354505,-99) , 
5, 0.0236981, 1, 0, 0.501884,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0270815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471382,-99) , 
7, 1.00008, 0, 0, 0.489368,-99) , 
9, 0.371813, 1, 0, 0.500366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453591,-99) , 
3, 9.37272, 1, 0, 0.498996,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0116005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49731,-99) , 
4, 0.999048, 1, 0, 0.498305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469421,-99) , 
3, 7.1777, 1, 0, 0.497012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45893,-99) , 
3, 9.38661, 1, 0, 0.4959,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0231983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488552,-99) , 
8, -1.04975, 0, 0, 0.503186,-99) , 
1, -0.00386971, 1, 0, 0.515278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486692,-99) , 
9, -1.70024, 1, 0, 0.506218,-99) , 
NN(
0, 
0, 
-1, -1.49675, 0, -1, 0.494111,-99) , 
7, -0.959048, 1, 0, 0.496487,-99) , 
7, 1.28577, 0, 0, 0.499468,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0215337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493786,-99) , 
4, 0.999995, 0, 0, 0.502684,-99) , 
NN(
0, 
0, 
-1, -0.30228, 1, -1, 0.481061,-99) , 
4, 0.999887, 0, 0, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.474421,-99) , 
4, 0.999524, 0, 0, 0.499446,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00961993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491709,-99) , 
9, 1.67841, 1, 0, 0.499276,-99) , 
8, -4.21358, 1, 0, 0.500462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453052,-99) , 
9, -2.52271, 0, 0, 0.498863,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.01258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538394,-99) , 
NN(
NN(
0, 
0, 
-1, 0.86527, 0, 1, 0.503359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471484,-99) , 
9, 3.24276, 1, 0, 0.501531,-99) , 
7, 2.14284, 0, 0, 0.503165,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0163965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491973,-99) , 
3, 2.2273, 1, 0, 0.49886,-99) , 
2, 0.215976, 0, 0, 0.500336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470598,-99) , 
3, 8.96288, 1, 0, 0.499265,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0114825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491048,-99) , 
6, -951.286, 0, 0, 0.517031,-99) , 
NN(
0, 
0, 
-1, -2.26014, 0, -1, 0.498397,-99) , 
8, -0.0309768, 0, 0, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46583,-99) , 
9, 4.14387, 1, 0, 0.49933,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0178407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97937, 0, 1, 0.528647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467121,-99) , 
7, 2.34693, 1, 0, 0.503073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42251,-99) , 
7, -0.967779, 1, 0, 0.478966,-99) , 
9, -1.85949, 0, 0, 0.501273,-99) , 
7, -1.57122, 1, 0, 0.503029,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0108673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4984,-99) , 
7, -0.918329, 1, 0, 0.500663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467728,-99) , 
7, -1.57142, 0, 0, 0.499354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472942,-99) , 
9, -2.50949, 0, 0, 0.498434,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0185656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466033,-99) , 
7, 2.04767, 1, 0, 0.493047,-99) , 
1, 0.00152331, 0, 0, 0.511898,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.493294,-99) , 
7, 1.57147, 0, 0, 0.495277,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.008142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477082,-99) , 
0, 0.490472, 0, 0, 0.502085,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0222829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
9, -0.678484, 0, 0, 0.530021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476225,-99) , 
7, -2.02014, 0, 0, 0.516839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461624,-99) , 
9, -1.82661, 0, 0, 0.50183,-99) , 
NN(
0, 
0, 
-1, 1.46042, 0, -1, 0.483549,-99) , 
9, 2.33489, 1, 0, 0.499717,-99) , 
7, -1.28549, 1, 0, 0.501465,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0187436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04738, 0, 1, 0.518145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468257,-99) , 
7, -0.700442, 0, 0, 0.498113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408824,-99) , 
7, -0.967377, 1, 0, 0.474533,-99) , 
9, -1.85282, 0, 0, 0.496374,-99) , 
7, -1.57119, 1, 0, 0.497747,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0214036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447515,-99) , 
9, -1.91945, 1, 0, 0.501233,-99) , 
9, -0.147561, 0, 0, 0.515436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49219,-99) , 
7, 0.143104, 0, 0, 0.513394,-99) , 
NN(
0, 
0, 
-1, 0.503033, 1, -1, 0.494511,-99) , 
0, 0.503804, 0, 0, 0.496426,-99) , 
7, -1.28554, 1, 0, 0.498389,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0198404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493121,-99) , 
7, -0.999989, 1, 0, 0.495236,-99) , 
8, -4.17862, 1, 0, 0.497546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461185,-99) , 
9, -2.52667, 0, 0, 0.49634,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0143712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477397,-99) , 
7, -1.57141, 0, 0, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473798,-99) , 
9, -2.5359, 0, 0, 0.5024,-99) , 
8, 1.99221, 0, 0, 0.50373,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0223698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49037,-99) , 
9, -1.04725, 1, 0, 0.508838,-99) , 
NN(
0, 
0, 
-1, -1.15357, 0, -1, 0.494492,-99) , 
7, -0.142729, 1, 0, 0.499867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473294,-99) , 
9, -2.32196, 0, 0, 0.49864,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0277446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481852,-99) , 
8, 2.17023, 0, 0, 0.499712,-99) , 
9, 2.58142, 1, 0, 0.513901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488488,-99) , 
3, 4.7767, 1, 0, 0.512577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48135,-99) , 
2, 0.00319063, 0, 0, 0.492809,-99) , 
2, -0.0716195, 1, 0, 0.496123,-99) , 
8, 0.0846499, 0, 0, 0.498567,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.00966965);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499204,-99) , 
7, -1.77551, 1, 0, 0.500615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462216,-99) , 
7, 2.14285, 1, 0, 0.499144,-99) , 
8, 1.83089, 0, 0, 0.500723,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0171174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49628,-99) , 
3, 4.7767, 1, 0, 0.524534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484496,-99) , 
7, -0.712839, 0, 0, 0.515653,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.531143,-99) , 
NN(
0, 
0, 
-1, -2.10989, 0, -1, 0.496499,-99) , 
7, -1.57124, 1, 0, 0.498728,-99) , 
2, -0.0710073, 1, 0, 0.501619,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0152501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14279, 0, 1, 0.505814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463362,-99) , 
0, 0.505981, 0, 0, 0.484895,-99) , 
0, 0.504757, 1, 0, 0.504543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470019,-99) , 
2, 0.214083, 1, 0, 0.503339,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0133068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.673332, 1, 1, 0.503502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441208,-99) , 
9, -0.556736, 0, 0, 0.482416,-99) , 
7, -1.28555, 0, 0, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483826,-99) , 
9, -2.37309, 0, 0, 0.501259,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0131052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517486,-99) , 
NN(
0, 
0, 
-1, 2.55198, 1, -1, 0.494114,-99) , 
8, 1.74434, 0, 0, 0.495456,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0415591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496976,-99) , 
9, 1.63182, 1, 0, 0.514787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479424,-99) , 
6, -951.286, 0, 0, 0.492832,-99) , 
7, 0.142989, 0, 0, 0.506964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48602,-99) , 
9, -1.81784, 0, 0, 0.505652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434411,-99) , 
9, -0.695294, 0, 0, 0.460834,-99) , 
7, -0.0343401, 1, 0, 0.49174,-99) , 
8, -3.05609, 0, 0, 0.501582,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0262862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48294,-99) , 
8, -2.66484, 0, 0, 0.508972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479464,-99) , 
9, -0.166531, 1, 0, 0.496198,-99) , 
7, 0.428647, 0, 0, 0.501205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464553,-99) , 
9, 3.80655, 1, 0, 0.499718,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0197576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493325,-99) , 
7, 2.14288, 0, 0, 0.494831,-99) , 
3, 9.13835, 0, 0, 0.49621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467198,-99) , 
4, 0.999524, 0, 0, 0.4947,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0144326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145503, 1, 1, 0.519094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494775,-99) , 
8, -1.68874, 0, 0, 0.498537,-99) , 
0, 0.491424, 1, 0, 0.499931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467628,-99) , 
3, 9.38661, 1, 0, 0.49897,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0281034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494838,-99) , 
7, -0.444685, 0, 0, 0.548686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450133,-99) , 
7, 1.13497, 1, 0, 0.500736,-99) , 
8, -2.18814, 0, 0, 0.505577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489729,-99) , 
8, 1.60292, 0, 0, 0.496819,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.460321,-99) , 
2, 0.0719535, 1, 0, 0.491436,-99) , 
9, 0.341677, 1, 0, 0.5003,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0122205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13153, 0, 1, 0.503918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470284,-99) , 
4, 0.999728, 0, 0, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463513,-99) , 
4, 0.999048, 0, 0, 0.501122,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0215636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494849,-99) , 
8, -0.762665, 0, 0, 0.500115,-99) , 
8, -4.19339, 1, 0, 0.50252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462432,-99) , 
9, -2.52271, 0, 0, 0.501222,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.015329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494851,-99) , 
0, 0.491424, 1, 0, 0.496086,-99) , 
2, 0.214274, 0, 0, 0.49771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471278,-99) , 
3, 9.37272, 1, 0, 0.496911,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0195177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481053,-99) , 
9, 1.45886, 1, 0, 0.504019,-99) , 
8, 0.414386, 0, 0, 0.505869,-99) , 
NN(
0, 
0, 
-1, 2.30984, 1, -1, 0.478842,-99) , 
9, 3.08085, 1, 0, 0.504118,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0131255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460874,-99) , 
2, -0.0685946, 0, 0, 0.508847,-99) , 
NN(
0, 
0, 
-1, 1.31073, 1, -1, 0.498318,-99) , 
8, -0.580593, 0, 0, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467019,-99) , 
9, -2.50949, 0, 0, 0.499297,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0350896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490497,-99) , 
9, 2.51959, 1, 0, 0.513388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451159,-99) , 
2, 0.0696619, 1, 0, 0.492907,-99) , 
7, 0.142937, 0, 0, 0.50616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495532,-99) , 
6, -951.286, 1, 0, 0.508515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449841,-99) , 
9, -0.687577, 0, 0, 0.469266,-99) , 
7, -0.231791, 1, 0, 0.49261,-99) , 
8, -3.05747, 0, 0, 0.501391,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0245817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496132,-99) , 
9, 2.97569, 1, 0, 0.516526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482924,-99) , 
9, 0.494502, 1, 0, 0.502502,-99) , 
8, 0.602337, 0, 0, 0.503838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481172,-99) , 
9, 1.40802, 1, 0, 0.500374,-99) , 
NN(
0, 
0, 
-1, -2.67493, 1, -1, 0.470856,-99) , 
8, -2.18733, 0, 0, 0.491498,-99) , 
7, 1.00007, 1, 0, 0.501146,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0162097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524308,-99) , 
NN(
0, 
0, 
-1, -0.132615, 0, -1, 0.493595,-99) , 
2, -0.214257, 1, 0, 0.494968,-99) , 
7, 2.1428, 0, 0, 0.496387,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0238959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491241,-99) , 
7, -0.142781, 0, 0, 0.528106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481965,-99) , 
8, 0.88372, 0, 0, 0.500108,-99) , 
9, 1.50023, 1, 0, 0.50925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537164,-99) , 
NN(
0, 
0, 
-1, -2.10909, 0, -1, 0.493926,-99) , 
7, -1.85669, 1, 0, 0.495554,-99) , 
8, -1.33695, 0, 0, 0.49929,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0115285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498291,-99) , 
9, 4.11156, 1, 0, 0.519867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465738,-99) , 
7, 2.14284, 1, 0, 0.50114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471415,-99) , 
9, 2.30417, 1, 0, 0.499694,-99) , 
8, 1.45301, 0, 0, 0.501034,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0170683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.50594, 1, 1, 0.533388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486228,-99) , 
2, -0.0455389, 0, 0, 0.522837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465054,-99) , 
9, -2.51088, 0, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, -0.458108, 0, -1, 0.480295,-99) , 
9, 1.42516, 1, 0, 0.499791,-99) , 
8, 0.0767756, 0, 0, 0.502946,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0246279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.73122, 0, 1, 0.535368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468728,-99) , 
2, -0.0695244, 0, 0, 0.500304,-99) , 
9, 1.50023, 1, 0, 0.511586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49264,-99) , 
8, -1.8414, 0, 0, 0.495235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459275,-99) , 
7, 1.85609, 1, 0, 0.493775,-99) , 
8, -1.31932, 0, 0, 0.498675,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0187271);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.38401, 0, 1, 0.519823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497703,-99) , 
6, -951.286, 0, 0, 0.509578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
2, 0.0714933, 0, 0, 0.495689,-99) , 
8, -0.906103, 0, 0, 0.499065,-99) , 
8, -4.36999, 1, 0, 0.5006,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0185289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85718, 0, 1, 0.518541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418695,-99) , 
9, -2.34414, 0, 0, 0.498281,-99) , 
7, -1.85714, 1, 0, 0.499938,-99) , 
8, -1.06408, 0, 0, 0.504463,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0106046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465843,-99) , 
4, 0.999683, 0, 0, 0.500482,-99) , 
7, 2.14289, 0, 0, 0.502065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473035,-99) , 
4, 0.999048, 0, 0, 0.501163,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0201327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465068,-99) , 
9, 3.05633, 1, 0, 0.502729,-99) , 
7, 2.14287, 0, 0, 0.504088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490715,-99) , 
0, 0.493523, 0, 0, 0.496288,-99) , 
NN(
0, 
0, 
-1, 0.494611, 0, -1, 0.471463,-99) , 
0, 0.494145, 1, 0, 0.489578,-99) , 
0, 0.495233, 0, 0, 0.500554,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00964497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
0, 0.498091, 1, 0, 0.516816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462493,-99) , 
9, -1.98156, 0, 0, 0.497631,-99) , 
7, -1.61207, 1, 0, 0.498857,-99) , 
NN(
0, 
0, 
-1, 2.2925, 1, -1, 0.474212,-99) , 
7, 1.85714, 1, 0, 0.497261,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0236986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567961,-99) , 
NN(
0, 
0, 
-1, 0.490562, 0, -1, 0.482246,-99) , 
7, 0.714372, 0, 0, 0.509767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491501,-99) , 
8, 2.07299, 0, 0, 0.492756,-99) , 
2, 0.213937, 0, 0, 0.493803,-99) , 
0, 0.492376, 1, 0, 0.495403,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0191473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492973,-99) , 
8, -1.01921, 0, 0, 0.496717,-99) , 
4, 0.999524, 1, 0, 0.498832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466586,-99) , 
3, 9.32353, 1, 0, 0.497854,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0119729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498742,-99) , 
0, 0.499043, 1, 0, 0.521225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476989,-99) , 
9, -1.8542, 0, 0, 0.500605,-99) , 
7, -1.57141, 1, 0, 0.501889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471121,-99) , 
2, 0.214015, 1, 0, 0.500785,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0336133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448923,-99) , 
7, -1.20777, 1, 0, 0.498969,-99) , 
9, -1.9018, 0, 0, 0.513353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47782,-99) , 
8, -2.69138, 0, 0, 0.502498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477816,-99) , 
6, -951.286, 0, 0, 0.49004,-99) , 
7, 0.428668, 0, 0, 0.4957,-99) , 
8, -4.03342, 1, 0, 0.497919,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0202206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25512, 1, 1, 0.520929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497501,-99) , 
2, 0.0714384, 0, 0, 0.502132,-99) , 
7, -0.142536, 1, 0, 0.509822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494168,-99) , 
4, 0.999524, 1, 0, 0.496091,-99) , 
NN(
0, 
0, 
-1, -1.01473, 0, -1, 0.485083,-99) , 
9, 0.969131, 1, 0, 0.493258,-99) , 
0, 0.496186, 1, 0, 0.498606,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.034439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493132,-99) , 
8, -3.76746, 1, 0, 0.49926,-99) , 
9, 3.24397, 0, 0, 0.502566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497005,-99) , 
7, 1.85741, 0, 0, 0.503609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26164,-99) , 
6, -2.14285, 0, 0, 0.491172,-99) , 
6, -951.286, 1, 0, 0.496899,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0506541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495647,-99) , 
7, 1.47622, 1, 0, 0.514992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455787,-99) , 
9, -0.947708, 1, 0, 0.481467,-99) , 
7, -0.999854, 0, 0, 0.509393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457435,-99) , 
6, -1.16382, 0, 0, 0.510751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26245,-99) , 
6, -2.1431, 0, 0, 0.498129,-99) , 
6, -951.286, 1, 0, 0.503835,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0146155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.529285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478481,-99) , 
7, 2.31976, 1, 0, 0.516089,-99) , 
NN(
0, 
0, 
-1, 2.36507, 1, -1, 0.495072,-99) , 
7, 1.57148, 0, 0, 0.497311,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00832408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499007,-99) , 
2, -0.2105, 1, 0, 0.500129,-99) , 
3, 8.84402, 0, 0, 0.501341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464794,-99) , 
4, 0.999048, 0, 0, 0.500226,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0310638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.544623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457989,-99) , 
9, 1.88501, 1, 0, 0.500537,-99) , 
8, 0.874401, 0, 0, 0.50504,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5718, 0, 1, 0.508106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347357,-99) , 
6, -1.8572, 0, 0, 0.495657,-99) , 
6, -951.286, 1, 0, 0.500411,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0178269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494318,-99) , 
0, 0.494281, 1, 0, 0.497413,-99) , 
3, 9.13153, 0, 0, 0.498578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437453,-99) , 
8, -3.10657, 1, 0, 0.470862,-99) , 
4, 0.999524, 0, 0, 0.497114,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0112714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481021,-99) , 
9, 3.05534, 1, 0, 0.502179,-99) , 
8, -4.54446, 1, 0, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469668,-99) , 
9, 3.82918, 1, 0, 0.502153,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0235607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48908,-99) , 
4, 0.999989, 0, 0, 0.500485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465873,-99) , 
4, 0.999773, 0, 0, 0.499237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459491,-99) , 
4, 0.999524, 0, 0, 0.497163,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0319363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88956, 1, 1, 0.543932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493163,-99) , 
8, 1.81533, 0, 0, 0.494622,-99) , 
5, 0.00792338, 0, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357052,-99) , 
5, 0.0237713, 1, 0, 0.497738,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0196441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.561647, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471506,-99) , 
3, 9.39546, 1, 0, 0.503281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453612,-99) , 
8, 1.3182, 0, 0, 0.508135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441405,-99) , 
6, -951.286, 1, 0, 0.482199,-99) , 
9, 2.41454, 1, 0, 0.501114,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0143574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.649862, 0, 1, 0.517573,-99) , 
NN(
0, 
0, 
-1, 2.65786, 1, -1, 0.496198,-99) , 
7, 1.28577, 0, 0, 0.499501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452203,-99) , 
4, 0.999048, 0, 0, 0.498091,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.009564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499902,-99) , 
8, -0.911594, 0, 0, 0.502028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477495,-99) , 
7, 1.00031, 0, 0, 0.488813,-99) , 
9, 2.22554, 1, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469579,-99) , 
9, -2.59265, 0, 0, 0.499546,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0276955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142747, 0, 1, 0.561951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486262,-99) , 
5, 0.00145535, 0, 0, 0.498552,-99) , 
5, 0.0101874, 0, 0, 0.50369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365839,-99) , 
5, 0.0237713, 1, 0, 0.500221,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0318023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
8, 0.355438, 1, 0, 0.540013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486671,-99) , 
9, -0.266979, 1, 0, 0.494655,-99) , 
5, 0.00787487, 0, 0, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359978,-99) , 
5, 0.0236299, 1, 0, 0.497295,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0205626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492278,-99) , 
7, 0.673486, 0, 0, 0.496488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468568,-99) , 
7, 2.14288, 1, 0, 0.495493,-99) , 
NN(
0, 
0, 
-1, 2.38939, 0, -1, 0.464632,-99) , 
9, 3.05633, 1, 0, 0.493453,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0153286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494013,-99) , 
9, 2.98912, 1, 0, 0.51948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475312,-99) , 
9, 1.27254, 1, 0, 0.499427,-99) , 
8, 0.604372, 0, 0, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471397,-99) , 
9, 4.20343, 1, 0, 0.499887,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0171343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493458,-99) , 
9, -1.56018, 1, 0, 0.508233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428515,-99) , 
9, -1.35471, 0, 0, 0.496791,-99) , 
7, -0.428573, 1, 0, 0.499899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476019,-99) , 
9, -2.26819, 0, 0, 0.498645,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0141853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538031,-99) , 
NN(
0, 
0, 
-1, 3.15261, 1, -1, 0.495454,-99) , 
7, 2.1428, 0, 0, 0.497229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455984,-99) , 
4, 0.999048, 0, 0, 0.495983,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0179511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.527378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49112,-99) , 
9, 4.17927, 1, 0, 0.520561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
8, -1.38538, 0, 0, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469969,-99) , 
9, 1.41521, 1, 0, 0.500806,-99) , 
8, -0.479071, 0, 0, 0.504382,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0438507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439437,-99) , 
9, 2.61326, 1, 0, 0.504031,-99) , 
8, 1.90606, 0, 0, 0.507689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471705,-99) , 
6, -0.700856, 0, 0, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326763,-99) , 
6, -1.85715, 0, 0, 0.491758,-99) , 
6, -951.286, 1, 0, 0.499843,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0156224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495535,-99) , 
7, -1.571, 1, 0, 0.497407,-99) , 
4, 0.999048, 1, 0, 0.498793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46263,-99) , 
3, 9.32353, 1, 0, 0.497704,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0146878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495553,-99) , 
0, 0.5019, 0, 0, 0.498429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462231,-99) , 
3, 7.57947, 1, 0, 0.497233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471476,-99) , 
3, 9.33743, 1, 0, 0.496442,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0148515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494218,-99) , 
9, 0.384284, 1, 0, 0.501633,-99) , 
7, 2.14284, 0, 0, 0.502644,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.475952,-99) , 
0, 0.504757, 1, 0, 0.500968,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00971613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49989,-99) , 
8, -1.05212, 0, 0, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.474885,-99) , 
7, 1.85714, 1, 0, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478569,-99) , 
9, 3.35768, 1, 0, 0.499465,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0176062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494383,-99) , 
9, -1.95415, 1, 0, 0.514484,-99) , 
NN(
0, 
0, 
-1, -3.75773, 0, -1, 0.496004,-99) , 
7, -0.714167, 1, 0, 0.499758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459712,-99) , 
9, -2.57238, 0, 0, 0.498543,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0334424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451118,-99) , 
9, -2.15946, 1, 0, 0.500153,-99) , 
9, -0.150886, 0, 0, 0.519972,-99) , 
NN(
NN(
0, 
0, 
-1, 1.42288, 0, 1, 0.506509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32143,-99) , 
6, -1.85705, 0, 0, 0.491362,-99) , 
6, -951.286, 1, 0, 0.498907,-99) , 
7, -1.28554, 1, 0, 0.501105,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0187971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481943,-99) , 
9, 0.0704497, 0, 0, 0.512421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48934,-99) , 
6, -951.286, 1, 0, 0.495659,-99) , 
7, 1.00007, 0, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467108,-99) , 
4, 0.999048, 0, 0, 0.498384,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0174425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494244,-99) , 
4, 0.999955, 1, 0, 0.497982,-99) , 
3, 9.00889, 0, 0, 0.499044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46338,-99) , 
4, 0.999048, 0, 0, 0.497955,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0121533);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.19472, 0, 1, 0.526288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448227,-99) , 
7, -1.57142, 0, 0, 0.49943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462513,-99) , 
9, -2.50949, 0, 0, 0.498171,-99) , 
0, 0.491424, 1, 0, 0.500162,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0154359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498287,-99) , 
7, 0.143549, 0, 0, 0.518157,-99) , 
NN(
0, 
0, 
-1, 9.08246, 1, -1, 0.494531,-99) , 
8, 0.617997, 0, 0, 0.496268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453968,-99) , 
9, 4.33774, 1, 0, 0.494987,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00818663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525345,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.524488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44852,-99) , 
4, 0.999773, 0, 0, 0.498403,-99) , 
4, 0.999524, 1, 0, 0.499845,-99) , 
7, 2.14285, 0, 0, 0.500917,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0141243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498928,-99) , 
8, -1.57572, 0, 0, 0.501588,-99) , 
NN(
0, 
0, 
-1, 0.0691512, 1, -1, 0.48802,-99) , 
9, 1.00548, 1, 0, 0.49819,-99) , 
NN(
0, 
0, 
-1, 0.5058, 1, -1, 0.479823,-99) , 
0, 0.503805, 1, 0, 0.496419,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0102477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499185,-99) , 
3, 8.78535, 0, 0, 0.500783,-99) , 
NN(
0, 
0, 
-1, -0.355773, 1, -1, 0.474508,-99) , 
4, 0.999819, 0, 0, 0.498928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458062,-99) , 
4, 0.999048, 0, 0, 0.497706,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.00998248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
2, -0.2105, 1, 0, 0.49999,-99) , 
4, 0.999049, 1, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476601,-99) , 
3, 9.25184, 1, 0, 0.500597,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0210537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495989,-99) , 
7, -2.0474, 0, 0, 0.531198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461066,-99) , 
9, -2.18187, 0, 0, 0.504905,-99) , 
NN(
0, 
0, 
-1, 2.09658, 0, -1, 0.47635,-99) , 
9, 3.08216, 1, 0, 0.502954,-99) , 
7, -1.57122, 1, 0, 0.504726,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0119794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497459,-99) , 
7, 2.14288, 0, 0, 0.498723,-99) , 
3, 8.78248, 0, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474724,-99) , 
4, 0.999524, 0, 0, 0.498881,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0278755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466307,-99) , 
7, -1.77553, 0, 0, 0.494249,-99) , 
6, -951.287, 0, 0, 0.518546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465715,-99) , 
7, -0.877504, 0, 0, 0.503506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39502,-99) , 
7, -0.743497, 1, 0, 0.480481,-99) , 
9, -1.69071, 0, 0, 0.501616,-99) , 
7, -1.2857, 1, 0, 0.503323,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.023004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490752,-99) , 
6, -951.286, 0, 0, 0.515512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481089,-99) , 
9, 0.179503, 1, 0, 0.497576,-99) , 
8, -0.671412, 0, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474639,-99) , 
9, 3.35768, 1, 0, 0.498881,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0199222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495257,-99) , 
2, 0.0326421, 0, 0, 0.500521,-99) , 
2, -0.211823, 1, 0, 0.502284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463684,-99) , 
3, 9.27699, 1, 0, 0.501051,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0239523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438915,-99) , 
7, -1.7754, 0, 0, 0.497653,-99) , 
6, -951.286, 0, 0, 0.516632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494086,-99) , 
4, 0.999048, 1, 0, 0.495474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462726,-99) , 
3, 9.10638, 1, 0, 0.494376,-99) , 
7, -1.28554, 1, 0, 0.496672,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0245364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.53651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484491,-99) , 
7, 0.647698, 1, 0, 0.503299,-99) , 
8, -2.1187, 0, 0, 0.506186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496473,-99) , 
7, -0.999806, 1, 0, 0.500253,-99) , 
NN(
0, 
0, 
-1, -0.139604, 0, -1, 0.453461,-99) , 
2, -0.0716018, 0, 0, 0.492824,-99) , 
9, 0.357493, 1, 0, 0.501251,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0149182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47231,-99) , 
9, 3.58218, 1, 0, 0.501575,-99) , 
7, 2.14287, 0, 0, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448034,-99) , 
4, 0.999048, 0, 0, 0.502046,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00949788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46934,-99) , 
4, 0.999864, 0, 0, 0.499021,-99) , 
4, 0.999524, 1, 0, 0.500047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473281,-99) , 
3, 9.37272, 1, 0, 0.499234,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.017424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52344, 0, 1, 0.531952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491,-99) , 
8, -2.58898, 0, 0, 0.496264,-99) , 
7, 1.85714, 0, 0, 0.498713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443696,-99) , 
4, 0.999048, 0, 0, 0.497069,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0276656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487916,-99) , 
6, -951.286, 1, 0, 0.52311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485287,-99) , 
2, -0.0032833, 1, 0, 0.496101,-99) , 
8, 0.425737, 0, 0, 0.49921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516828,-99) , 
NN(
0, 
0, 
-1, 0.454026, 1, -1, 0.474042,-99) , 
0, 0.493329, 1, 0, 0.482445,-99) , 
2, 0.07151, 1, 0, 0.496694,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00878998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499688,-99) , 
3, 8.74033, 0, 0, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461365,-99) , 
4, 0.999796, 0, 0, 0.499383,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.474103,-99) , 
4, 0.999524, 0, 0, 0.498052,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0116271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.520212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
7, -1.77534, 1, 0, 0.500992,-99) , 
7, 1.28574, 0, 0, 0.504009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47183,-99) , 
2, -0.214346, 0, 0, 0.502666,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0167495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85712, 0, 1, 0.506127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466234,-99) , 
4, 0.999728, 0, 0, 0.504244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461873,-99) , 
4, 0.999048, 0, 0, 0.502942,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00990523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498865,-99) , 
8, -1.14454, 0, 0, 0.501427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476716,-99) , 
0, 0.490063, 0, 0, 0.500509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468803,-99) , 
0, 0.506253, 0, 0, 0.483374,-99) , 
0, 0.504757, 1, 0, 0.499421,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0174293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489246,-99) , 
0, 0.502852, 1, 0, 0.517179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479817,-99) , 
2, 0.0728659, 1, 0, 0.511933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499469,-99) , 
4, 0.999048, 1, 0, 0.501786,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.465361,-99) , 
9, 0.893946, 1, 0, 0.498724,-99) , 
8, -0.845409, 0, 0, 0.501595,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0133319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.81649, 0, 1, 0.505003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475133,-99) , 
3, 7.16313, 1, 0, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469107,-99) , 
3, 9.37272, 1, 0, 0.502594,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0164649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57148, 0, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474207,-99) , 
4, 0.999683, 0, 0, 0.505216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458983,-99) , 
4, 0.999048, 0, 0, 0.50382,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0104255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499677,-99) , 
3, 8.75156, 0, 0, 0.501603,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.473374,-99) , 
4, 0.999887, 0, 0, 0.499196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478491,-99) , 
4, 0.999524, 0, 0, 0.498104,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.01162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496267,-99) , 
7, -2.04761, 0, 0, 0.523814,-99) , 
NN(
0, 
0, 
-1, 1.91156, 1, -1, 0.495642,-99) , 
7, -1.57141, 1, 0, 0.497471,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00958684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49952,-99) , 
2, -0.202791, 1, 0, 0.50053,-99) , 
4, 0.999524, 1, 0, 0.502888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465756,-99) , 
3, 9.10638, 1, 0, 0.501634,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0134122);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.517043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498803,-99) , 
2, 0.0307141, 0, 0, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477865,-99) , 
2, -0.214062, 0, 0, 0.502102,-99) , 
0, 0.503804, 0, 0, 0.503627,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0144843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
3, 1.42015, 1, 0, 0.505107,-99) , 
2, 0.217012, 0, 0, 0.506361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469417,-99) , 
3, 9.37272, 1, 0, 0.505266,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0187924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477178,-99) , 
1, -0.00204691, 0, 0, 0.515355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479605,-99) , 
9, 1.58157, 1, 0, 0.502032,-99) , 
8, 0.472398, 0, 0, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461374,-99) , 
4, 0.999048, 0, 0, 0.502305,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.00655901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
7, 1.57148, 0, 0, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468073,-99) , 
4, 0.999048, 0, 0, 0.500589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47346,-99) , 
9, -2.50949, 0, 0, 0.499677,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.014949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49401,-99) , 
7, 0.141549, 0, 0, 0.52271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482301,-99) , 
9, 0.809766, 1, 0, 0.49915,-99) , 
8, -0.18025, 0, 0, 0.501066,-99) , 
NN(
0, 
0, 
-1, 1.84796, 0, -1, 0.483111,-99) , 
9, 2.77661, 1, 0, 0.499635,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0286442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45688,-99) , 
9, -0.107071, 0, 0, 0.499141,-99) , 
9, -2.11277, 1, 0, 0.516167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494671,-99) , 
8, -2.26079, 0, 0, 0.498825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
8, -0.208989, 0, 0, 0.48601,-99) , 
9, 0.436529, 1, 0, 0.494074,-99) , 
7, -1.28554, 1, 0, 0.496354,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0136735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481216,-99) , 
6, -951.286, 1, 0, 0.510668,-99) , 
8, -0.590595, 0, 0, 0.518547,-99) , 
NN(
NN(
0, 
0, 
-1, -2.37859, 0, 1, 0.519714,-99) , 
NN(
0, 
0, 
-1, -1.69372, 0, -1, 0.49768,-99) , 
8, -4.37409, 1, 0, 0.499506,-99) , 
7, 1.57148, 0, 0, 0.501538,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.017643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.85258, 1, 1, 0.518727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497635,-99) , 
3, 4.43263, 0, 0, 0.50146,-99) , 
0, 0.49537, 1, 0, 0.503892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496281,-99) , 
6, -951.286, 0, 0, 0.509727,-99) , 
NN(
0, 
0, 
-1, -0.713937, 0, -1, 0.475114,-99) , 
7, 0.428815, 0, 0, 0.48873,-99) , 
0, 0.493329, 0, 0, 0.501877,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0273509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477312,-99) , 
2, 0.215386, 1, 0, 0.508444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391992,-99) , 
7, -0.589612, 1, 0, 0.489378,-99) , 
9, -1.58113, 0, 0, 0.505888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470695,-99) , 
7, -1.85713, 0, 0, 0.504679,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0217452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497383,-99) , 
6, -951.286, 1, 0, 0.503562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462674,-99) , 
1, -0.00111496, 1, 0, 0.484529,-99) , 
7, 1.57148, 1, 0, 0.501654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483861,-99) , 
7, -0.0654518, 0, 0, 0.498534,-99) , 
NN(
0, 
0, 
-1, 0.139707, 1, -1, 0.465658,-99) , 
9, 0.0371492, 1, 0, 0.484214,-99) , 
2, 0.0717303, 1, 0, 0.49907,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0115487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14283, 0, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471643,-99) , 
4, 0.999683, 0, 0, 0.502024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445011,-99) , 
4, 0.999048, 0, 0, 0.500366,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0296473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00400652, 1, 1, 0.540642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488688,-99) , 
6, -951.286, 0, 0, 0.497633,-99) , 
5, 0.0089997, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383732,-99) , 
5, 0.0236249, 1, 0, 0.499189,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0150416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496191,-99) , 
8, 1.58535, 0, 0, 0.497703,-99) , 
4, 0.999048, 1, 0, 0.499054,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.469514,-99) , 
7, 1.85714, 1, 0, 0.497178,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0161052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0716018, 1, 1, 0.506531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474546,-99) , 
7, -1.57124, 0, 0, 0.505269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468841,-99) , 
9, -2.52271, 0, 0, 0.504088,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0192451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466262,-99) , 
9, -2.09324, 0, 0, 0.502986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473331,-99) , 
7, -1.85714, 0, 0, 0.501989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48287,-99) , 
0, 0.491923, 1, 0, 0.490238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456946,-99) , 
0, 0.490154, 0, 0, 0.483656,-99) , 
0, 0.494281, 0, 0, 0.498665,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00802772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536036,-99) , 
NN(
NN(
0, 
0, 
-1, -4.62519, 1, 1, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473898,-99) , 
9, 4.15532, 1, 0, 0.500821,-99) , 
7, 2.14284, 0, 0, 0.502348,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0211804);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.31813, 0, 1, 0.526187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492811,-99) , 
4, 0.999048, 1, 0, 0.494345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455822,-99) , 
3, 9.38661, 1, 0, 0.49315,-99) , 
8, 1.33504, 0, 0, 0.495532,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.017203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.506329,-99) , 
NN(
0, 
0, 
-1, -0.469166, 1, -1, 0.47476,-99) , 
4, 0.999864, 0, 0, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.474232,-99) , 
4, 0.999524, 0, 0, 0.502554,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00774729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524599,-99) , 
NN(
0, 
0, 
-1, -2.28134, 0, -1, 0.497853,-99) , 
7, -1.85713, 1, 0, 0.498831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47223,-99) , 
0, 0.505709, 1, 0, 0.49786,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0216345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.929804, 0, 1, 0.532954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497514,-99) , 
8, 1.62971, 0, 0, 0.501442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344051,-99) , 
6, -1.85712, 0, 0, 0.48783,-99) , 
6, -951.286, 1, 0, 0.494628,-99) , 
7, -1.57125, 1, 0, 0.497158,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0299082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44194,-99) , 
9, 2.34039, 1, 0, 0.499678,-99) , 
8, 1.60585, 0, 0, 0.50366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496768,-99) , 
7, 1.57179, 0, 0, 0.50285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356697,-99) , 
6, -1.85715, 0, 0, 0.491783,-99) , 
6, -951.286, 1, 0, 0.497813,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0174615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507098,-99) , 
NN(
0, 
0, 
-1, 0.534235, 0, -1, 0.491289,-99) , 
9, 0.460091, 1, 0, 0.501541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457219,-99) , 
3, 9.32353, 1, 0, 0.500197,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00956551);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473255,-99) , 
9, 3.24907, 1, 0, 0.498519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445344,-99) , 
9, -2.21141, 0, 0, 0.496287,-99) , 
7, -1.85713, 1, 0, 0.497246,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0159371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54728, 0, 1, 0.509021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493302,-99) , 
7, 1.00007, 0, 0, 0.495946,-99) , 
0, 0.500675, 0, 0, 0.498985,-99) , 
NN(
0, 
0, 
-1, -0.142705, 1, -1, 0.477113,-99) , 
0, 0.504757, 1, 0, 0.497604,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0136198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469556,-99) , 
3, 1.78677, 0, 0, 0.499545,-99) , 
9, 2.83231, 1, 0, 0.512579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499067,-99) , 
8, -0.628572, 0, 0, 0.500287,-99) , 
NN(
0, 
0, 
-1, -0.0922477, 0, -1, 0.477061,-99) , 
9, 1.53437, 1, 0, 0.498462,-99) , 
8, 0.398814, 0, 0, 0.500119,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00919883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456066,-99) , 
3, 7.10923, 1, 0, 0.499518,-99) , 
3, 8.75156, 0, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468003,-99) , 
4, 0.999048, 0, 0, 0.499588,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.00958732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.9794, 0, 1, 0.520775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469565,-99) , 
7, 1.9116, 1, 0, 0.499133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473539,-99) , 
9, 4.06459, 1, 0, 0.498146,-99) , 
7, -1.57125, 1, 0, 0.499602,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.020782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492524,-99) , 
8, -4.34575, 1, 0, 0.494388,-99) , 
4, 0.999048, 1, 0, 0.496078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464078,-99) , 
3, 9.07001, 1, 0, 0.494988,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0128433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18124, 0, 1, 0.519192,-99) , 
NN(
0, 
0, 
-1, 3.66705, 1, -1, 0.496095,-99) , 
7, 1.57151, 0, 0, 0.498533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46457,-99) , 
4, 0.999048, 0, 0, 0.497508,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0109196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490789, 1, 1, 0.515134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490098,-99) , 
0, 0.489519, 0, 0, 0.510252,-99) , 
NN(
NN(
0, 
0, 
-1, 3.2731, 1, -1, 0.497885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46827,-99) , 
7, 2.11568, 0, 0, 0.484922,-99) , 
7, 1.57146, 1, 0, 0.496578,-99) , 
0, 0.493329, 1, 0, 0.498455,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0159334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497758,-99) , 
1, 0.00718515, 0, 0, 0.499691,-99) , 
4, 0.999524, 1, 0, 0.501652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482558,-99) , 
9, 2.22664, 1, 0, 0.49564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46185,-99) , 
2, -0.0716622, 0, 0, 0.490197,-99) , 
9, 0.759337, 1, 0, 0.49832,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0146698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482856,-99) , 
9, 1.57247, 1, 0, 0.502355,-99) , 
8, 0.954896, 0, 0, 0.503471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480312,-99) , 
9, 3.84063, 1, 0, 0.502505,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0165617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501492, 0, 1, 0.506697,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.48666,-99) , 
0, 0.503804, 1, 0, 0.504786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461038,-99) , 
4, 0.999048, 0, 0, 0.503473,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00895933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49922,-99) , 
9, 2.42226, 0, 0, 0.500518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464082,-99) , 
3, 2.26363, 0, 0, 0.483725,-99) , 
9, 2.81353, 1, 0, 0.499166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468908,-99) , 
3, 9.08221, 1, 0, 0.498134,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0148356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67388, 0, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 1.70241, 0, -1, 0.480121,-99) , 
9, 2.81353, 1, 0, 0.503707,-99) , 
NN(
0, 
0, 
-1, 1.55061, 0, -1, 0.480159,-99) , 
7, 1.85719, 1, 0, 0.502198,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0156444);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493723,-99) , 
8, -3.9435, 1, 0, 0.495884,-99) , 
7, 2.14281, 0, 0, 0.496921,-99) , 
0, 0.505709, 0, 0, 0.498006,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00967251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453246,-99) , 
9, -2.22812, 0, 0, 0.498553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470186,-99) , 
9, 4.15632, 1, 0, 0.497572,-99) , 
7, -1.85696, 1, 0, 0.498976,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0171917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.32563, 0, 1, 0.5044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472324,-99) , 
4, 0.999048, 0, 0, 0.503425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527614,-99) , 
NN(
0, 
0, 
-1, -1.61245, 0, -1, 0.448279,-99) , 
9, -2.11064, 1, 0, 0.484379,-99) , 
7, -1.2857, 0, 0, 0.501562,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.01929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499782,-99) , 
0, 0.500403, 0, 0, 0.508582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490528,-99) , 
0, 0.493601, 1, 0, 0.494732,-99) , 
0, 0.499043, 0, 0, 0.500055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461014,-99) , 
0, 0.506117, 0, 0, 0.480265,-99) , 
0, 0.504757, 1, 0, 0.498777,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0150018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538434,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.496815,-99) , 
7, 2.14286, 0, 0, 0.498653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491611,-99) , 
0, 0.506026, 0, 0, 0.49518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450511,-99) , 
7, 1.28582, 1, 0, 0.488831,-99) , 
0, 0.500947, 1, 0, 0.496145,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0140977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496553,-99) , 
3, 9.00889, 0, 0, 0.497688,-99) , 
4, 0.999048, 1, 0, 0.49871,-99) , 
7, 2.14285, 0, 0, 0.500891,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.017417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466298,-99) , 
9, -2.5712, 0, 0, 0.503841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475012,-99) , 
9, 3.09326, 1, 0, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452268,-99) , 
7, 2.1428, 1, 0, 0.500219,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0207494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999951, 0, 1, 0.516229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49052,-99) , 
7, -0.142853, 1, 0, 0.496279,-99) , 
0, 0.496186, 1, 0, 0.499598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516325,-99) , 
NN(
0, 
0, 
-1, 0.42867, 0, -1, 0.4833,-99) , 
2, -0.0717387, 1, 0, 0.490619,-99) , 
0, 0.494281, 0, 0, 0.497944,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00699008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499993,-99) , 
2, -0.209911, 1, 0, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458958,-99) , 
4, 0.999751, 0, 0, 0.499909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47436,-99) , 
4, 0.999524, 0, 0, 0.498587,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0176537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.09845, 1, 1, 0.529857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497449,-99) , 
6, -951.286, 0, 0, 0.503295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458135,-99) , 
7, 2.14288, 1, 0, 0.5016,-99) , 
8, 1.33504, 0, 0, 0.503623,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0210046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494834,-99) , 
8, -1.94384, 0, 0, 0.498229,-99) , 
NN(
0, 
0, 
-1, -0.158284, 0, -1, 0.488025,-99) , 
9, 0.514112, 1, 0, 0.494579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468195,-99) , 
9, -2.21706, 0, 0, 0.493089,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0394465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940743, 0, 1, 0.51748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368541,-99) , 
6, -1.85733, 0, 0, 0.50046,-99) , 
6, -951.286, 1, 0, 0.509227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451215,-99) , 
4, 0.999048, 0, 0, 0.50755,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0252939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712183, 1, 1, 0.504332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478061,-99) , 
8, -0.692645, 0, 0, 0.488032,-99) , 
7, -0.428446, 0, 0, 0.501033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488893,-99) , 
8, -4.17435, 0, 0, 0.508616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397125,-99) , 
7, -0.701173, 1, 0, 0.480634,-99) , 
9, -1.55321, 0, 0, 0.497953,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.017936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493169,-99) , 
0, 0.492376, 1, 0, 0.494918,-99) , 
4, 0.999048, 1, 0, 0.496157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46615,-99) , 
3, 9.12028, 1, 0, 0.495176,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0155078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.508745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492049,-99) , 
6, -951.286, 1, 0, 0.497573,-99) , 
8, -1.14454, 0, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456925,-99) , 
4, 0.999048, 0, 0, 0.499186,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0231514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496692,-99) , 
9, -0.958746, 0, 0, 0.515617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490468,-99) , 
9, -0.578152, 1, 0, 0.495377,-99) , 
7, -1.28551, 1, 0, 0.497487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48199,-99) , 
0, 0.490517, 1, 0, 0.487248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46366,-99) , 
3, 4.57903, 1, 0, 0.482743,-99) , 
0, 0.495233, 0, 0, 0.493938,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0160372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494366, 1, 1, 0.502837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466079,-99) , 
0, 0.505994, 0, 0, 0.480101,-99) , 
0, 0.504213, 1, 0, 0.500716,-99) , 
NN(
0, 
0, 
-1, 0.492512, 1, -1, 0.469527,-99) , 
0, 0.493329, 0, 0, 0.496655,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0206387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498712,-99) , 
9, 2.66103, 1, 0, 0.514749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477676,-99) , 
8, 0.697015, 0, 0, 0.489064,-99) , 
0, 0.496186, 0, 0, 0.506502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494798,-99) , 
7, -1.84322, 1, 0, 0.49624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441724,-99) , 
7, 1.85713, 1, 0, 0.493862,-99) , 
8, -1.14454, 0, 0, 0.497059,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.029734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23882, 1, 1, 0.519573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491978,-99) , 
7, -0.714148, 1, 0, 0.496437,-99) , 
2, -0.068022, 1, 0, 0.499668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446369,-99) , 
6, -0.429494, 0, 0, 0.495847,-99) , 
NN(
0, 
0, 
-1, -0.142731, 0, -1, 0.4714,-99) , 
6, -951.286, 0, 0, 0.483858,-99) , 
3, 4.54783, 1, 0, 0.496441,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0103346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485066,-99) , 
7, -0.999989, 0, 0, 0.498394,-99) , 
8, 2.12087, 0, 0, 0.499625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45896,-99) , 
4, 0.999048, 0, 0, 0.498434,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0126912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.743926, 0, 1, 0.503907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468992,-99) , 
2, -0.132825, 0, 0, 0.50227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466311,-99) , 
2, -0.214437, 0, 0, 0.500798,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00947737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537553,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.49763,-99) , 
4, 0.999048, 1, 0, 0.4988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502834,-99) , 
NN(
0, 
0, 
-1, -0.142294, 0, -1, 0.477366,-99) , 
2, -0.0684755, 1, 0, 0.484095,-99) , 
0, 0.492377, 0, 0, 0.497396,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0108204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499434,-99) , 
8, 0.998191, 0, 0, 0.500733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46582,-99) , 
9, 3.50899, 1, 0, 0.499188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472605,-99) , 
0, 0.49809, 0, 0, 0.490443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453193,-99) , 
7, 2.31975, 1, 0, 0.480558,-99) , 
7, 1.5715, 1, 0, 0.497306,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00736037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470686,-99) , 
9, 4.19061, 1, 0, 0.499375,-99) , 
4, 0.999048, 1, 0, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46501,-99) , 
3, 9.25184, 1, 0, 0.499622,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0214901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.524443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464732,-99) , 
9, -1.36818, 1, 0, 0.488277,-99) , 
7, -0.142901, 0, 0, 0.510011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481243,-99) , 
7, 1.28571, 1, 0, 0.49911,-99) , 
NN(
0, 
0, 
-1, 0.00307367, 0, -1, 0.480035,-99) , 
0, 0.5019, 1, 0, 0.495645,-99) , 
2, -0.0714192, 1, 0, 0.498118,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0171249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482193,-99) , 
7, -0.33976, 0, 0, 0.518591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475253,-99) , 
9, 0.362159, 1, 0, 0.499014,-99) , 
8, -1.70961, 0, 0, 0.500981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474386,-99) , 
7, -0.142699, 0, 0, 0.495448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46122,-99) , 
8, -1.01473, 0, 0, 0.489549,-99) , 
9, 0.969131, 1, 0, 0.49803,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0142558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522339,-99) , 
NN(
0, 
0, 
-1, -0.142851, 0, -1, 0.494843,-99) , 
8, 2.09564, 0, 0, 0.496204,-99) , 
2, 0.214255, 0, 0, 0.497711,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0309557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476512,-99) , 
3, 4.68186, 1, 0, 0.507285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489531,-99) , 
2, 0.00729097, 0, 0, 0.495987,-99) , 
2, 0.030612, 0, 0, 0.498967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470702,-99) , 
2, -0.214257, 0, 0, 0.497794,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0354856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499174,-99) , 
7, 1.04082, 1, 0, 0.510773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424301,-99) , 
9, -0.441241, 0, 0, 0.479002,-99) , 
8, -2.8378, 0, 0, 0.504987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491755,-99) , 
8, -3.26627, 0, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, -0.0723801, 0, -1, 0.482055,-99) , 
9, -0.240556, 1, 0, 0.495548,-99) , 
7, 0.428571, 0, 0, 0.499304,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.011933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49067,-99) , 
3, 1.6006, 0, 0, 0.52335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496371,-99) , 
3, 3.21457, 1, 0, 0.514516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
8, -0.359461, 0, 0, 0.500681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4591,-99) , 
9, 2.21615, 1, 0, 0.499422,-99) , 
8, 0.734616, 0, 0, 0.500858,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0125212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.84095, 1, 1, 0.520014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474255,-99) , 
9, 1.71826, 1, 0, 0.500663,-99) , 
8, 0.536301, 0, 0, 0.50212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461052,-99) , 
9, 4.20333, 1, 0, 0.500785,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0135023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531586,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.505261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482327,-99) , 
0, 0.490472, 0, 0, 0.504273,-99) , 
8, 2.71126, 0, 0, 0.505285,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0215908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
0, 0.500947, 0, 0, 0.501284,-99) , 
1, 0.00373063, 0, 0, 0.51242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49539,-99) , 
8, 0.5783, 0, 0, 0.497535,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.47881,-99) , 
2, 0.0722928, 1, 0, 0.494774,-99) , 
7, 1.28577, 0, 0, 0.497518,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0104206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49083,-99) , 
7, -0.714137, 0, 0, 0.498705,-99) , 
8, 0.508793, 0, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, 1.92674, 0, -1, 0.478811,-99) , 
9, 2.77661, 1, 0, 0.49805,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0303457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492535,-99) , 
4, 0.999996, 0, 0, 0.503733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430894,-99) , 
9, -0.160748, 1, 0, 0.486311,-99) , 
4, 0.999909, 0, 0, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465754,-99) , 
4, 0.999048, 0, 0, 0.500485,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0173894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462717,-99) , 
8, -4.34407, 1, 0, 0.490749,-99) , 
7, -1.09584, 1, 0, 0.513822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499401,-99) , 
7, -0.428366, 1, 0, 0.502729,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.481577,-99) , 
7, -0.999854, 0, 0, 0.500549,-99) , 
8, -4.03342, 1, 0, 0.502193,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0131839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499089,-99) , 
0, 0.499995, 0, 0, 0.502855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452473,-99) , 
9, -2.21141, 0, 0, 0.500676,-99) , 
7, -1.85713, 1, 0, 0.501524,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0183664);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498861,-99) , 
9, -2.00146, 1, 0, 0.518207,-99) , 
NN(
0, 
0, 
-1, 0.7144, 0, 1, 0.505025,-99) , 
7, -0.999808, 1, 0, 0.507089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495144,-99) , 
0, 0.504757, 0, 0, 0.506462,-99) , 
NN(
0, 
0, 
-1, -2.59102, 1, -1, 0.484353,-99) , 
7, 0.14286, 0, 0, 0.495298,-99) , 
0, 0.500947, 1, 0, 0.504069,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0194555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.558926, 0, 1, 0.527932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485235,-99) , 
7, 1.47615, 1, 0, 0.498837,-99) , 
0, 0.497138, 1, 0, 0.510906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495834,-99) , 
7, -1.44895, 1, 0, 0.498058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47377,-99) , 
7, -1.85714, 0, 0, 0.496994,-99) , 
7, 0.999969, 0, 0, 0.50006,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0201117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473623,-99) , 
6, -951.286, 1, 0, 0.505171,-99) , 
8, -0.802906, 0, 0, 0.517866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467803,-99) , 
0, 0.505709, 1, 0, 0.500995,-99) , 
4, 0.999048, 1, 0, 0.502809,-99) , 
7, 1.28571, 0, 0, 0.505155,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0152065);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517932,-99) , 
NN(
NN(
0, 
0, 
-1, -1.90783, 0, 1, 0.505477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481933,-99) , 
8, -0.643084, 0, 0, 0.493996,-99) , 
9, 0.630301, 1, 0, 0.502318,-99) , 
8, 1.83089, 0, 0, 0.503186,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.014853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68739, 0, 1, 0.517608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495034,-99) , 
0, 0.494145, 1, 0, 0.497093,-99) , 
0, 0.504757, 0, 0, 0.498421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452327,-99) , 
3, 8.91541, 1, 0, 0.496788,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0108084);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.52196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470987,-99) , 
7, -1.97936, 0, 0, 0.499336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473073,-99) , 
9, 3.52123, 1, 0, 0.498236,-99) , 
7, 1.28577, 0, 0, 0.501985,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0190895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.14066, 0, 1, 0.507184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471339,-99) , 
4, 0.999796, 0, 0, 0.505683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447486,-99) , 
9, -0.890614, 1, 0, 0.482035,-99) , 
4, 0.999524, 0, 0, 0.504447,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0149245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495856,-99) , 
6, -951.286, 0, 0, 0.499593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461991,-99) , 
7, 2.14277, 1, 0, 0.498366,-99) , 
NN(
0, 
0, 
-1, 2.35067, 0, -1, 0.468456,-99) , 
9, 2.47498, 1, 0, 0.49543,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0252083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496682,-99) , 
9, -0.833993, 0, 0, 0.523263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484546,-99) , 
7, -1.93849, 0, 0, 0.511912,-99) , 
NN(
NN(
0, 
0, 
-1, 1.41479, 0, 1, 0.504291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334323,-99) , 
6, -1.85725, 0, 0, 0.493513,-99) , 
6, -951.286, 1, 0, 0.498909,-99) , 
7, -1.28544, 1, 0, 0.500259,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0368487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491701,-99) , 
9, 0.597513, 1, 0, 0.502168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42383,-99) , 
9, -1.11861, 0, 0, 0.497711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482247,-99) , 
8, -4.0347, 0, 0, 0.503032,-99) , 
NN(
0, 
0, 
-1, -0.0783631, 0, -1, 0.46937,-99) , 
9, -1.16235, 1, 0, 0.487113,-99) , 
7, -0.142851, 0, 0, 0.493462,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0241514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55017, 0, 1, 0.512632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47722,-99) , 
6, -951.286, 0, 0, 0.488939,-99) , 
9, -1.13217, 1, 0, 0.501438,-99) , 
NN(
0, 
0, 
-1, -1.10561, 0, -1, 0.489779,-99) , 
7, -0.142735, 1, 0, 0.494528,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0183857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494695,-99) , 
7, 2.29256, 1, 0, 0.526846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491212,-99) , 
0, 0.500947, 0, 0, 0.493623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469372,-99) , 
9, 3.82918, 1, 0, 0.492684,-99) , 
7, 1.85713, 0, 0, 0.495002,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0192974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465305,-99) , 
7, -0.142536, 0, 0, 0.486567,-99) , 
0, 0.492694, 0, 0, 0.50362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483122,-99) , 
7, -0.142554, 0, 0, 0.49537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459987,-99) , 
7, 1.28587, 1, 0, 0.490389,-99) , 
0, 0.500947, 1, 0, 0.500242,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00846931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495126,-99) , 
7, 2.29255, 1, 0, 0.524132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499884,-99) , 
4, 0.999524, 1, 0, 0.500775,-99) , 
NN(
0, 
0, 
-1, -0.455327, 0, -1, 0.483696,-99) , 
0, 0.492376, 0, 0, 0.499141,-99) , 
7, 1.85717, 0, 0, 0.500858,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0249973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491987,-99) , 
3, 4.50494, 1, 0, 0.516061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496409,-99) , 
8, 2.00472, 0, 0, 0.498169,-99) , 
2, 0.0715723, 0, 0, 0.500956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491642,-99) , 
8, -4.22167, 0, 0, 0.510769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400458,-99) , 
7, -0.703459, 1, 0, 0.48332,-99) , 
9, -1.56113, 0, 0, 0.498318,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0267162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478123,-99) , 
4, 0.999977, 0, 0, 0.521486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494622,-99) , 
6, -951.286, 1, 0, 0.503131,-99) , 
7, 1.28579, 0, 0, 0.505925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44465,-99) , 
8, -3.17646, 1, 0, 0.473213,-99) , 
4, 0.999524, 0, 0, 0.504251,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0206473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492723,-99) , 
8, -1.73059, 0, 0, 0.497416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4678,-99) , 
9, 3.24397, 1, 0, 0.495764,-99) , 
7, 2.14284, 0, 0, 0.497275,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0347895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.872416, 0, 1, 0.521263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478617,-99) , 
8, -1.91478, 0, 0, 0.501502,-99) , 
8, -2.97727, 1, 0, 0.507786,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28594, 0, 1, 0.50834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379222,-99) , 
6, -1.85705, 0, 0, 0.498593,-99) , 
6, -951.286, 1, 0, 0.503271,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0193462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484494,-99) , 
6, -951.286, 0, 0, 0.517455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498182,-99) , 
4, 0.999524, 1, 0, 0.499848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482997,-99) , 
8, -0.83085, 0, 0, 0.490706,-99) , 
0, 0.499995, 1, 0, 0.496794,-99) , 
7, 1.85713, 0, 0, 0.498204,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0225758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485246,-99) , 
9, 2.10817, 1, 0, 0.501609,-99) , 
7, -1.85688, 1, 0, 0.503594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476852,-99) , 
7, 0.143166, 0, 0, 0.49883,-99) , 
NN(
0, 
0, 
-1, -0.0146879, 1, -1, 0.47308,-99) , 
8, -3.01661, 0, 0, 0.489768,-99) , 
0, 0.499995, 1, 0, 0.49902,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0177814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.072978, 1, 1, 0.523655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496264,-99) , 
3, 8.84402, 0, 0, 0.498308,-99) , 
0, 0.493329, 1, 0, 0.501726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473729,-99) , 
4, 0.999524, 0, 0, 0.500285,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0176903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498881,-99) , 
8, -2.5033, 0, 0, 0.505091,-99) , 
NN(
0, 
0, 
-1, 0.143089, 0, -1, 0.486883,-99) , 
9, 1.05997, 1, 0, 0.503259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479368,-99) , 
8, 0.746509, 0, 0, 0.495858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45945,-99) , 
2, -0.0681797, 0, 0, 0.489664,-99) , 
9, 1.74667, 1, 0, 0.501103,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00892318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
6, -951.286, 0, 0, 0.526754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54034,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.498432,-99) , 
4, 0.999048, 1, 0, 0.499749,-99) , 
7, 1.85718, 0, 0, 0.501594,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0228045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494266,-99) , 
3, 4.37719, 1, 0, 0.517981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494216,-99) , 
2, 0.0222869, 0, 0, 0.501029,-99) , 
2, -0.0515344, 1, 0, 0.503947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47144,-99) , 
2, -0.214725, 0, 0, 0.502647,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0178792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00332356, 1, 1, 0.505545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455798,-99) , 
0, 0.505709, 1, 0, 0.503956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511218,-99) , 
NN(
0, 
0, 
-1, -0.260109, 1, -1, 0.474744,-99) , 
7, 0.7143, 0, 0, 0.485924,-99) , 
2, 0.0714933, 1, 0, 0.501209,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0141091);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.82101, 0, 1, 0.514971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498277,-99) , 
8, -0.597588, 0, 0, 0.500922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484995,-99) , 
9, -1.07853, 1, 0, 0.490013,-99) , 
0, 0.495233, 0, 0, 0.498276,-99) , 
7, -1.28554, 1, 0, 0.500028,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0106611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.26665, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471866,-99) , 
9, -2.56061, 0, 0, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467386,-99) , 
1, 0.0138019, 1, 0, 0.501695,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.016313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480235,-99) , 
3, 9.33163, 1, 0, 0.503126,-99) , 
0, 0.505709, 0, 0, 0.504536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514088,-99) , 
NN(
0, 
0, 
-1, 3.01893, 1, -1, 0.470605,-99) , 
8, 2.31949, 0, 0, 0.48542,-99) , 
9, 2.09511, 1, 0, 0.502099,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0138755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495627,-99) , 
7, 0.427353, 0, 0, 0.522141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496424,-99) , 
8, -4.26036, 1, 0, 0.497839,-99) , 
3, 0.539768, 1, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469156,-99) , 
3, 9.25993, 1, 0, 0.498738,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0171921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49898,-99) , 
7, 0.427842, 1, 0, 0.517188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496466,-99) , 
0, 0.501295, 0, 0, 0.499793,-99) , 
0, 0.495551, 1, 0, 0.501577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473111,-99) , 
7, 1.00016, 0, 0, 0.480321,-99) , 
2, -0.0684755, 1, 0, 0.488066,-99) , 
0, 0.494281, 0, 0, 0.499096,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0166128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0714015, 1, 1, 0.511855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495764,-99) , 
6, -951.286, 0, 0, 0.501258,-99) , 
0, 0.497455, 1, 0, 0.505183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474401,-99) , 
6, -951.286, 1, 0, 0.488316,-99) , 
0, 0.492376, 0, 0, 0.503553,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0150744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455354,-99) , 
7, -1.57127, 0, 0, 0.501747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470742,-99) , 
9, -2.50949, 0, 0, 0.500685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
7, 0.550948, 1, 0, 0.490952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458272,-99) , 
7, -0.428605, 0, 0, 0.480688,-99) , 
0, 0.492376, 0, 0, 0.498756,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00814907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46676,-99) , 
2, -0.13242, 0, 0, 0.498568,-99) , 
2, -0.214037, 1, 0, 0.499832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474195,-99) , 
9, 3.39176, 1, 0, 0.498475,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0127028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.91141, 0, 1, 0.527975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
7, 2.12928, 0, 0, 0.499868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4586,-99) , 
2, 0.21418, 1, 0, 0.498414,-99) , 
7, -1.57125, 1, 0, 0.50029,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0252293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49234,-99) , 
7, -0.714285, 0, 0, 0.505941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41354,-99) , 
7, -0.680101, 1, 0, 0.48938,-99) , 
9, -1.54265, 0, 0, 0.503428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0.49714, 1, -1, 0.476476,-99) , 
2, 0.20714, 0, 0, 0.48323,-99) , 
2, 0.0711262, 1, 0, 0.500372,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0160112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.429043, 0, 1, 0.523664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492177,-99) , 
0, 0.49809, 0, 0, 0.497915,-99) , 
3, 0.543175, 1, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45955,-99) , 
3, 9.33163, 1, 0, 0.498755,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0211867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.50729, 1, 1, 0.527494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489763,-99) , 
7, -0.904686, 1, 0, 0.500934,-99) , 
7, 0.142968, 0, 0, 0.516467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495709,-99) , 
7, 1.27621, 0, 0, 0.498428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449408,-99) , 
9, 1.28978, 1, 0, 0.496658,-99) , 
8, -0.739558, 0, 0, 0.500788,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0125413);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97937, 0, 1, 0.521203,-99) , 
NN(
0, 
0, 
-1, 1.10255, 1, -1, 0.494734,-99) , 
7, -1.57123, 1, 0, 0.496401,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0235439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.922157, 1, 1, 0.533125,-99) , 
NN(
0, 
0, 
-1, 1.85712, 1, -1, 0.496461,-99) , 
5, 0.00676617, 0, 0, 0.503112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378247,-99) , 
5, 0.0236981, 1, 0, 0.499945,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0162829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49883,-99) , 
8, -2.20993, 0, 0, 0.502156,-99) , 
4, 0.999048, 1, 0, 0.504018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515007,-99) , 
NN(
0, 
0, 
-1, 2.62036, 1, -1, 0.488551,-99) , 
8, 1.64954, 0, 0, 0.49303,-99) , 
9, 0.420636, 1, 0, 0.500106,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0294139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438601,-99) , 
7, 0.145983, 1, 0, 0.502676,-99) , 
8, -3.02891, 0, 0, 0.509089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469667,-99) , 
0, 0.491424, 0, 0, 0.498855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444269,-99) , 
7, 0.428566, 0, 0, 0.485882,-99) , 
2, -0.0716018, 0, 0, 0.49673,-99) , 
9, -0.625753, 1, 0, 0.501452,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.019611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.545548, 1, 1, 0.507008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468351,-99) , 
3, 9.38081, 1, 0, 0.505663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481052,-99) , 
0, 0.49936, 1, 0, 0.490265,-99) , 
NN(
0, 
0, 
-1, 2.13073, 1, -1, 0.470426,-99) , 
0, 0.495233, 0, 0, 0.485325,-99) , 
9, 0.954811, 1, 0, 0.500407,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0100186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499286,-99) , 
7, 2.14272, 0, 0, 0.500443,-99) , 
3, 9.12912, 0, 0, 0.501616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455903,-99) , 
4, 0.999524, 0, 0, 0.499324,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0219569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.79441, 0, 1, 0.518805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476738,-99) , 
7, -0.919088, 0, 0, 0.502438,-99) , 
8, -3.89663, 1, 0, 0.50596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48814,-99) , 
0, 0.499043, 0, 0, 0.4953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46901,-99) , 
2, 0.0700881, 1, 0, 0.491365,-99) , 
9, 0.71673, 1, 0, 0.501597,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0114064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484289,-99) , 
4, 0.999864, 0, 0, 0.500023,-99) , 
7, 1.85713, 0, 0, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465574,-99) , 
4, 0.999048, 0, 0, 0.501066,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0180945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494049,-99) , 
2, -0.0315868, 1, 0, 0.497577,-99) , 
3, 9.13835, 0, 0, 0.499115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467341,-99) , 
4, 0.999524, 0, 0, 0.497499,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00889754);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.178062, 0, 1, 0.502289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476916,-99) , 
8, 1.07937, 0, 0, 0.491708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453576,-99) , 
0, 0.5019, 1, 0, 0.483785,-99) , 
9, 1.99143, 1, 0, 0.499814,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0108191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85718, 0, 1, 0.502177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470671,-99) , 
7, 0.714203, 1, 0, 0.492414,-99) , 
0, 0.499859, 1, 0, 0.499271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458929,-99) , 
6, -951.286, 0, 0, 0.479527,-99) , 
0, 0.504757, 1, 0, 0.498038,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0153282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472992,-99) , 
2, 0.214083, 1, 0, 0.504251,-99) , 
NN(
0, 
0, 
-1, -0.998795, 0, -1, 0.485191,-99) , 
0, 0.501899, 1, 0, 0.500629,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0117507);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505256, 1, 1, 0.517426,-99) , 
NN(
0, 
0, 
-1, -2.37309, 0, -1, 0.495428,-99) , 
0, 0.503804, 0, 0, 0.497657,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0127353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497623,-99) , 
7, 2.07483, 0, 0, 0.499034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453059,-99) , 
9, -2.21141, 0, 0, 0.497048,-99) , 
7, -1.85713, 1, 0, 0.49832,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0104032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518167,-99) , 
NN(
0, 
0, 
-1, -1.78369, 0, -1, 0.496555,-99) , 
8, -4.65877, 1, 0, 0.497585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469105,-99) , 
9, 3.88864, 1, 0, 0.496462,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0211797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500053, 0, 1, 0.517593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485184,-99) , 
0, 0.501666, 0, 0, 0.502473,-99) , 
0, 0.500675, 1, 0, 0.507592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493715,-99) , 
6, -951.286, 0, 0, 0.50026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465885,-99) , 
0, 0.493602, 1, 0, 0.482262,-99) , 
2, 0.0712424, 1, 0, 0.49768,-99) , 
0, 0.499042, 0, 0, 0.501868,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0163337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487381,-99) , 
6, -951.286, 0, 0, 0.511293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491983,-99) , 
6, -951.286, 1, 0, 0.497958,-99) , 
7, 1.57142, 0, 0, 0.499324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477167,-99) , 
4, 0.999048, 0, 0, 0.498661,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0152119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493879,-99) , 
9, -1.92255, 1, 0, 0.513202,-99) , 
NN(
0, 
0, 
-1, 3.28316, 1, -1, 0.498421,-99) , 
7, -0.999839, 1, 0, 0.500758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500806,-99) , 
NN(
0, 
0, 
-1, 0.501582, 1, -1, 0.479753,-99) , 
2, 0.0705527, 0, 0, 0.483544,-99) , 
0, 0.500947, 1, 0, 0.496359,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0185064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445516,-99) , 
9, -2.32688, 0, 0, 0.503262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477562,-99) , 
7, -1.85697, 0, 0, 0.502266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473272,-99) , 
8, 1.19602, 0, 0, 0.489583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463458,-99) , 
0, 0.495235, 0, 0, 0.482902,-99) , 
9, 2.09511, 1, 0, 0.499845,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0202212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493347,-99) , 
7, -0.00663092, 1, 0, 0.499376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409655,-99) , 
9, -2.38109, 0, 0, 0.496876,-99) , 
7, -1.85713, 1, 0, 0.498022,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0225862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477246,-99) , 
9, -2.53871, 0, 0, 0.513627,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.49209,-99) , 
8, -3.33462, 1, 0, 0.503506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479786,-99) , 
8, -2.88453, 0, 0, 0.499591,-99) , 
NN(
0, 
0, 
-1, -0.142393, 1, -1, 0.486754,-99) , 
7, 0.387764, 0, 0, 0.494395,-99) , 
7, -0.428564, 1, 0, 0.497196,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0170303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496053,-99) , 
9, 3.21442, 1, 0, 0.510419,-99) , 
7, -0.99998, 1, 0, 0.513822,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00012, 0, 1, 0.511022,-99) , 
NN(
0, 
0, 
-1, 1.85726, 1, -1, 0.494493,-99) , 
1, -0.00348913, 1, 0, 0.497828,-99) , 
8, -0.651605, 0, 0, 0.501002,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0140024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506845,-99) , 
NN(
0, 
0, 
-1, 0.462793, 0, -1, 0.489205,-99) , 
9, 1.72654, 1, 0, 0.504029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487097,-99) , 
4, 0.999977, 0, 0, 0.497737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475083,-99) , 
4, 0.999524, 0, 0, 0.496448,-99) , 
0, 0.49809, 0, 0, 0.500344,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.015469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485713,-99) , 
8, 1.52644, 0, 0, 0.504855,-99) , 
6, -951.286, 0, 0, 0.513252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538586,-99) , 
NN(
0, 
0, 
-1, -2.25857, 0, -1, 0.497413,-99) , 
7, -1.85688, 1, 0, 0.498981,-99) , 
8, -0.405191, 0, 0, 0.501459,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0337416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.51342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481198,-99) , 
6, -951.286, 0, 0, 0.49455,-99) , 
7, -0.142873, 0, 0, 0.508602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478392,-99) , 
9, -1.99638, 0, 0, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445034,-99) , 
7, -0.292917, 1, 0, 0.491246,-99) , 
9, -1.21725, 0, 0, 0.504721,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0215782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49131,-99) , 
8, -1.82291, 0, 0, 0.49658,-99) , 
3, 9.09389, 0, 0, 0.498474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457115,-99) , 
4, 0.999524, 0, 0, 0.496414,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0135377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481478,-99) , 
3, 6.63483, 1, 0, 0.502455,-99) , 
2, -0.209432, 1, 0, 0.504026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472145,-99) , 
3, 9.25184, 1, 0, 0.503062,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.024793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493856,-99) , 
9, -1.4441, 1, 0, 0.50201,-99) , 
7, -0.278795, 0, 0, 0.50527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485869,-99) , 
2, -0.0715367, 0, 0, 0.509679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489285,-99) , 
3, 0.555202, 1, 0, 0.492647,-99) , 
3, 4.72918, 0, 0, 0.49596,-99) , 
7, -0.142742, 1, 0, 0.499736,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0243459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49457,-99) , 
6, -951.286, 1, 0, 0.504565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488437,-99) , 
8, -4.58716, 1, 0, 0.492207,-99) , 
7, -0.305952, 0, 0, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44927,-99) , 
7, 2.14289, 1, 0, 0.49827,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00878633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498521,-99) , 
6, -951.286, 0, 0, 0.520254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471968,-99) , 
9, 3.17219, 1, 0, 0.498751,-99) , 
7, 1.85713, 0, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461072,-99) , 
4, 0.999048, 0, 0, 0.499058,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0202038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495979,-99) , 
4, 0.999977, 0, 0, 0.505237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449366,-99) , 
7, -0.316998, 1, 0, 0.493713,-99) , 
9, -1.22685, 0, 0, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453568,-99) , 
4, 0.999524, 0, 0, 0.500402,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0147275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468742,-99) , 
0, 0.490474, 0, 0, 0.499429,-99) , 
8, -1.36412, 0, 0, 0.50117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529792,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.483803,-99) , 
7, -0.714119, 1, 0, 0.489697,-99) , 
9, 0.926524, 1, 0, 0.498115,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0260056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495997,-99) , 
9, -0.181073, 1, 0, 0.507543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453035,-99) , 
8, -2.84754, 0, 0, 0.492227,-99) , 
7, 0.428682, 1, 0, 0.500517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492238,-99) , 
8, -4.26243, 0, 0, 0.505504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415644,-99) , 
7, -0.724648, 1, 0, 0.4838,-99) , 
9, -1.6015, 0, 0, 0.49811,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0288698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492029,-99) , 
7, 1.85723, 0, 0, 0.500619,-99) , 
7, -0.99982, 1, 0, 0.506712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496033,-99) , 
7, 0.141337, 0, 0, 0.510546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478064,-99) , 
2, -0.00353391, 1, 0, 0.492652,-99) , 
2, 0.071273, 0, 0, 0.495393,-99) , 
8, -1.33695, 0, 0, 0.498553,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0125676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496421,-99) , 
2, -0.0714185, 1, 0, 0.498417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469553,-99) , 
7, -1.57142, 0, 0, 0.497232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471469,-99) , 
9, -2.47158, 0, 0, 0.496296,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0149414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97941, 0, 1, 0.517149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495961,-99) , 
8, 2.16823, 0, 0, 0.497207,-99) , 
7, -1.57125, 1, 0, 0.498489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504661,-99) , 
NN(
0, 
0, 
-1, -0.141607, 1, -1, 0.465833,-99) , 
0, 0.505981, 0, 0, 0.47865,-99) , 
0, 0.503804, 1, 0, 0.496591,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00759678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499598,-99) , 
4, 0.999048, 1, 0, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471944,-99) , 
3, 9.06192, 1, 0, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465237,-99) , 
9, 4.21549, 1, 0, 0.498909,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0285688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488139,-99) , 
7, -0.346825, 0, 0, 0.503087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478857,-99) , 
6, -951.286, 1, 0, 0.490229,-99) , 
7, 0.714372, 1, 0, 0.498534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483008,-99) , 
9, -2.4699, 0, 0, 0.504398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385316,-99) , 
7, -0.558187, 1, 0, 0.484076,-99) , 
9, -1.55321, 0, 0, 0.496343,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0199403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
8, -3.20737, 0, 0, 0.51311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467131,-99) , 
4, 0.999524, 0, 0, 0.499101,-99) , 
9, -0.718667, 1, 0, 0.502331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488407,-99) , 
8, -4.01997, 0, 0, 0.503522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394112,-99) , 
7, -0.520789, 1, 0, 0.485437,-99) , 
9, -1.51059, 0, 0, 0.499611,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0200832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498994,-99) , 
9, 1.21239, 1, 0, 0.508969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492157,-99) , 
4, 0.999048, 1, 0, 0.493376,-99) , 
8, -1.32664, 0, 0, 0.497077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468853,-99) , 
9, 3.48998, 1, 0, 0.49565,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0147445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495917,-99) , 
7, -0.305951, 1, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474339,-99) , 
2, -0.214037, 0, 0, 0.499491,-99) , 
7, 2.14286, 0, 0, 0.500558,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00742579);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470639,-99) , 
3, 7.60472, 1, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470657,-99) , 
3, 9.37272, 1, 0, 0.499052,-99) , 
8, 2.77752, 0, 0, 0.500145,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.01173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493924,-99) , 
0, 0.49809, 0, 0, 0.518304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498737,-99) , 
8, -4.51442, 1, 0, 0.500326,-99) , 
NN(
0, 
0, 
-1, 1.7676, 0, -1, 0.474597,-99) , 
9, 2.61733, 1, 0, 0.498216,-99) , 
7, 1.85713, 0, 0, 0.49959,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0148814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480899,-99) , 
9, 1.55677, 1, 0, 0.501815,-99) , 
8, 1.01284, 0, 0, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480579,-99) , 
9, 4.15532, 1, 0, 0.502428,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0228236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487924,-99) , 
9, 0.420636, 1, 0, 0.499557,-99) , 
NN(
0, 
0, 
-1, 4.53173, 1, -1, 0.477058,-99) , 
0, 0.502852, 1, 0, 0.496414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435816,-99) , 
1, 0.0143116, 1, 0, 0.494785,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0128722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503727,-99) , 
NN(
0, 
0, 
-1, 0.494283, 0, -1, 0.489174,-99) , 
3, 4.59838, 1, 0, 0.500813,-99) , 
NN(
0, 
0, 
-1, 2.29255, 1, -1, 0.474759,-99) , 
7, 1.8572, 1, 0, 0.499143,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0169959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494528,-99) , 
0, 0.499043, 1, 0, 0.500257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409233,-99) , 
7, -0.470247, 1, 0, 0.487308,-99) , 
9, -1.42635, 0, 0, 0.49798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451795,-99) , 
3, 9.33163, 1, 0, 0.496654,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0192725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490358,-99) , 
8, -3.21073, 0, 0, 0.508076,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498394,-99) , 
9, -0.734791, 1, 0, 0.500581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498454,-99) , 
8, -4.32481, 0, 0, 0.509819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422371,-99) , 
7, -0.670204, 1, 0, 0.48792,-99) , 
9, -1.51201, 0, 0, 0.498565,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0162214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48857,-99) , 
7, 1.93882, 1, 0, 0.50707,-99) , 
1, -0.00386971, 1, 0, 0.513949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473591,-99) , 
9, -1.57245, 0, 0, 0.496711,-99) , 
7, -1.77533, 1, 0, 0.497961,-99) , 
7, 1.28577, 0, 0, 0.500453,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0241334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483087,-99) , 
2, 0.0709465, 1, 0, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0.493011, 1, -1, 0.486553,-99) , 
0, 0.494281, 0, 0, 0.498083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483657,-99) , 
9, 0.330831, 1, 0, 0.491795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439118,-99) , 
8, -2.92766, 1, 0, 0.463104,-99) , 
8, -2.43534, 0, 0, 0.484137,-99) , 
7, 0.714273, 1, 0, 0.493988,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0112308);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497208,-99) , 
8, -4.70419, 1, 0, 0.498442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466824,-99) , 
9, 2.70955, 1, 0, 0.497259,-99) , 
8, 2.07703, 0, 0, 0.498377,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0224631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444783,-99) , 
7, -1.69366, 0, 0, 0.491627,-99) , 
8, -4.12735, 1, 0, 0.510044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483298,-99) , 
7, -0.469163, 0, 0, 0.499531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39133,-99) , 
7, -0.55216, 1, 0, 0.478602,-99) , 
9, -1.52103, 0, 0, 0.497176,-99) , 
7, -1.28551, 1, 0, 0.498519,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0177926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492163,-99) , 
2, 0.0306365, 0, 0, 0.496081,-99) , 
2, -0.214257, 1, 0, 0.497135,-99) , 
7, 2.14288, 0, 0, 0.498305,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00993453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.7177, 1, 1, 0.526341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489787,-99) , 
9, -1.64151, 0, 0, 0.49974,-99) , 
8, 0.556939, 0, 0, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479652,-99) , 
9, 3.39176, 1, 0, 0.499985,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0145922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498143,-99) , 
3, 4.95429, 0, 0, 0.500185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483283,-99) , 
2, -0.0716933, 1, 0, 0.488239,-99) , 
0, 0.500947, 1, 0, 0.497173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459743,-99) , 
3, 9.37272, 1, 0, 0.496092,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.01059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05616, 0, 1, 0.502766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456281,-99) , 
9, -2.21141, 0, 0, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472261,-99) , 
7, -1.85683, 0, 0, 0.499821,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0180361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.347191, 1, 1, 0.5083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487285,-99) , 
7, -1.28554, 0, 0, 0.506185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489314,-99) , 
3, 1.56487, 0, 0, 0.513254,-99) , 
NN(
0, 
0, 
-1, 1.19275, 1, -1, 0.492487,-99) , 
8, 0.375626, 0, 0, 0.494945,-99) , 
0, 0.497138, 1, 0, 0.499449,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0244253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489698,-99) , 
9, 2.9857, 1, 0, 0.515395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445523,-99) , 
3, 2.71679, 1, 0, 0.483467,-99) , 
7, -0.142824, 0, 0, 0.505204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530594,-99) , 
NN(
0, 
0, 
-1, -1.61484, 0, -1, 0.492107,-99) , 
8, -4.76061, 1, 0, 0.493957,-99) , 
8, -0.940716, 0, 0, 0.496478,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0133754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499815,-99) , 
0, 0.499043, 0, 0, 0.505203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481575,-99) , 
0, 0.504756, 1, 0, 0.503682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470393,-99) , 
7, 0.00694863, 0, 0, 0.499167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42342,-99) , 
9, -1.13346, 0, 0, 0.495249,-99) , 
7, -0.142708, 1, 0, 0.498689,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0226962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493497,-99) , 
1, -0.00486399, 1, 0, 0.496026,-99) , 
4, 0.999048, 1, 0, 0.498725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505536,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.483202,-99) , 
8, 1.63893, 0, 0, 0.487115,-99) , 
9, 0.496443, 1, 0, 0.494809,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0182825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486589,-99) , 
9, 3.08085, 1, 0, 0.506768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482175,-99) , 
7, 2.14278, 1, 0, 0.505813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482334,-99) , 
0, 0.505709, 1, 0, 0.504922,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0143561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479943,-99) , 
4, 0.999977, 0, 0, 0.516295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47486,-99) , 
7, 1.136, 1, 0, 0.498642,-99) , 
7, 1.57139, 0, 0, 0.500453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466496,-99) , 
4, 0.999524, 0, 0, 0.498737,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0136654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.529364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485356,-99) , 
0, 0.499996, 1, 0, 0.515842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498115,-99) , 
8, -0.767075, 0, 0, 0.500715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478351,-99) , 
9, 3.50693, 1, 0, 0.499677,-99) , 
7, 1.5714, 0, 0, 0.501374,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0235604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49888,-99) , 
7, -0.18921, 0, 0, 0.529927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443115,-99) , 
9, 0.0533873, 1, 0, 0.500908,-99) , 
8, -2.22713, 0, 0, 0.504045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484995,-99) , 
9, 1.7083, 1, 0, 0.50344,-99) , 
NN(
0, 
0, 
-1, 0.918243, 0, -1, 0.484283,-99) , 
7, 0.714363, 0, 0, 0.494093,-99) , 
9, 0.329206, 1, 0, 0.500308,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.022878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428686, 1, 1, 0.515993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470352,-99) , 
2, 0.0706786, 1, 0, 0.501054,-99) , 
0, 0.497138, 1, 0, 0.507177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487526,-99) , 
4, 0.999955, 1, 0, 0.491442,-99) , 
4, 0.999048, 1, 0, 0.493111,-99) , 
9, 0.460091, 0, 0, 0.498087,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.015375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496948,-99) , 
3, 8.78248, 0, 0, 0.498774,-99) , 
NN(
0, 
0, 
-1, -2.98326, 1, -1, 0.468974,-99) , 
4, 0.999841, 0, 0, 0.497018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464809,-99) , 
4, 0.999524, 0, 0, 0.495376,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0260709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45681,-99) , 
7, 0.211505, 1, 0, 0.513119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495708,-99) , 
0, 0.503805, 0, 0, 0.497612,-99) , 
9, -0.774017, 1, 0, 0.501056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487369,-99) , 
9, -2.10323, 1, 0, 0.50202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433151,-99) , 
7, -0.702464, 1, 0, 0.48497,-99) , 
9, -1.55321, 0, 0, 0.498582,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.014236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499159,-99) , 
2, -0.0230599, 1, 0, 0.506603,-99) , 
NN(
0, 
0, 
-1, -0.0683526, 0, -1, 0.495573,-99) , 
3, 2.31242, 1, 0, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466134,-99) , 
3, 9.38081, 1, 0, 0.500537,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0131461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.482959, 1, 1, 0.504743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464392,-99) , 
7, -1.57142, 0, 0, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479609,-99) , 
9, -2.33914, 0, 0, 0.502136,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0105515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499245,-99) , 
7, 0.999961, 0, 0, 0.502276,-99) , 
4, 0.999048, 1, 0, 0.503189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462432,-99) , 
3, 9.39546, 1, 0, 0.502036,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0180957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.84402, 0, 1, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483298,-99) , 
4, 0.999524, 0, 0, 0.504157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494223,-99) , 
0, 0.496186, 0, 0, 0.510207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408779,-99) , 
7, -0.497298, 1, 0, 0.493832,-99) , 
9, -1.49436, 0, 0, 0.502461,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0109433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499993, 1, 1, 0.521508,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.497919,-99) , 
7, 1.57142, 0, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448455,-99) , 
4, 0.999048, 0, 0, 0.498881,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0153656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476267,-99) , 
9, -1.52046, 0, 0, 0.49869,-99) , 
8, -4.71179, 1, 0, 0.499894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48964,-99) , 
0, 0.49904, 0, 0, 0.497583,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.469306,-99) , 
7, 0.714492, 1, 0, 0.484327,-99) , 
9, 2.24517, 1, 0, 0.498127,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00782554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13548, 0, 1, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474093,-99) , 
4, 0.999796, 0, 0, 0.500634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47592,-99) , 
4, 0.999524, 0, 0, 0.499356,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0122577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49906,-99) , 
7, 1.28578, 0, 0, 0.501074,-99) , 
NN(
0, 
0, 
-1, -0.471094, 1, -1, 0.472377,-99) , 
4, 0.999864, 0, 0, 0.498522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452816,-99) , 
4, 0.999048, 0, 0, 0.497187,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00989411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462984,-99) , 
9, 2.6773, 1, 0, 0.499985,-99) , 
8, 2.07299, 0, 0, 0.501168,-99) , 
0, 0.505709, 0, 0, 0.502324,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0206718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
4, 0.999995, 0, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446948,-99) , 
8, -2.76517, 1, 0, 0.481772,-99) , 
4, 0.999887, 0, 0, 0.501977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433677,-99) , 
8, -3.17646, 1, 0, 0.477511,-99) , 
4, 0.999524, 0, 0, 0.500715,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0144512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493733,-99) , 
3, 4.75378, 1, 0, 0.502202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456057,-99) , 
7, 2.1428, 1, 0, 0.500537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453045,-99) , 
9, 4.33774, 1, 0, 0.499121,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0227343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462816,-99) , 
8, 0.588892, 0, 0, 0.500143,-99) , 
9, 2.10528, 1, 0, 0.507197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492611,-99) , 
8, -3.44227, 1, 0, 0.495168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479216,-99) , 
2, -0.0721639, 1, 0, 0.485677,-99) , 
0, 0.499995, 1, 0, 0.492067,-99) , 
8, -0.388594, 0, 0, 0.494672,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0162107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499033,-99) , 
8, -1.69236, 0, 0, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0.504439, 1, -1, 0.484418,-99) , 
0, 0.502852, 1, 0, 0.500014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479637,-99) , 
7, 0.420594, 0, 0, 0.490529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453093,-99) , 
9, 1.28166, 1, 0, 0.482815,-99) , 
2, -0.0716018, 0, 0, 0.497208,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0107624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.09102, 0, 1, 0.503954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477223,-99) , 
4, 0.999773, 0, 0, 0.503012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480387,-99) , 
4, 0.999524, 0, 0, 0.501861,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0177412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.706812, 1, 1, 0.522469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497726,-99) , 
8, -4.79423, 1, 0, 0.498967,-99) , 
8, -1.49762, 0, 0, 0.500715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482778,-99) , 
3, 2.33553, 1, 0, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0.5019, 0, -1, 0.473625,-99) , 
8, 0.311628, 0, 0, 0.486818,-99) , 
9, 1.02914, 1, 0, 0.497259,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0108871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78248, 0, 1, 0.502735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458708,-99) , 
0, 0.499043, 0, 0, 0.477447,-99) , 
4, 0.999864, 0, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470711,-99) , 
4, 0.999048, 0, 0, 0.499602,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0141798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500949, 0, 1, 0.51444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497912,-99) , 
7, -0.469252, 1, 0, 0.500304,-99) , 
2, 0.0727818, 0, 0, 0.502435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512604,-99) , 
NN(
0, 
0, 
-1, -1.6937, 0, -1, 0.467442,-99) , 
9, -2.14082, 1, 0, 0.487288,-99) , 
7, -1.28555, 0, 0, 0.500905,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0190739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499944,-99) , 
8, -3.93558, 1, 0, 0.502884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422118,-99) , 
7, -0.778746, 1, 0, 0.485422,-99) , 
9, -1.69694, 0, 0, 0.500412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450584,-99) , 
7, 0.431076, 1, 0, 0.49389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461958,-99) , 
6, -951.286, 1, 0, 0.480666,-99) , 
9, 2.40213, 1, 0, 0.498381,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0350476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.520955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367473,-99) , 
6, -1.85715, 0, 0, 0.51007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49965,-99) , 
8, 1.5538, 0, 0, 0.503271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458797,-99) , 
7, 1.8572, 1, 0, 0.500404,-99) , 
6, -951.286, 0, 0, 0.505202,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0288494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483208,-99) , 
8, -1.09118, 1, 0, 0.504422,-99) , 
8, 1.69818, 0, 0, 0.506624,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366341,-99) , 
6, -1.85713, 0, 0, 0.494921,-99) , 
6, -951.286, 1, 0, 0.500865,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0210185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.168774, 0, 1, 0.51498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463788,-99) , 
2, -0.0710971, 0, 0, 0.506624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493998,-99) , 
0, 0.490474, 1, 0, 0.495543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472189,-99) , 
4, 0.999524, 0, 0, 0.494283,-99) , 
7, -0.714176, 1, 0, 0.497104,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0258487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48133,-99) , 
7, -0.714121, 0, 0, 0.505735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440741,-99) , 
7, -0.659625, 1, 0, 0.489028,-99) , 
9, -1.50903, 0, 0, 0.502639,-99) , 
NN(
0, 
0, 
-1, 2.29595, 0, -1, 0.482021,-99) , 
9, 2.0312, 1, 0, 0.499953,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0152614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49583,-99) , 
6, -951.286, 1, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455308,-99) , 
7, -1.571, 0, 0, 0.499668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478428,-99) , 
9, -2.21706, 0, 0, 0.498426,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0163845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495016,-99) , 
2, 0.0303285, 0, 0, 0.498571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470812,-99) , 
2, -0.214495, 0, 0, 0.497439,-99) , 
7, 2.14284, 0, 0, 0.499182,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0122066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460991,-99) , 
7, -1.77533, 0, 0, 0.501673,-99) , 
7, 2.14288, 0, 0, 0.502826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457327,-99) , 
9, -2.56061, 0, 0, 0.501398,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0120003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49801,-99) , 
2, -0.0511432, 1, 0, 0.500774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47213,-99) , 
2, -0.214304, 0, 0, 0.499618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468484,-99) , 
9, -2.47158, 0, 0, 0.498473,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0183888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484886,-99) , 
4, 0.999909, 0, 0, 0.504679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445267,-99) , 
7, -0.326026, 1, 0, 0.492964,-99) , 
9, -1.25366, 0, 0, 0.502195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471726,-99) , 
4, 0.999048, 0, 0, 0.501297,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0237698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48198,-99) , 
9, 2.82566, 1, 0, 0.502019,-99) , 
7, -1.57141, 1, 0, 0.503643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476935,-99) , 
8, -3.82865, 0, 0, 0.490797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433689,-99) , 
7, -0.381092, 1, 0, 0.481609,-99) , 
9, -1.34315, 0, 0, 0.499371,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.020012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0134221, 1, 1, 0.550798,-99) , 
NN(
0, 
0, 
-1, 2.1429, 1, -1, 0.496238,-99) , 
5, 0.0101876, 0, 0, 0.500632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397403,-99) , 
5, 0.0237713, 1, 0, 0.497966,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0146342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481357,-99) , 
7, -1.04067, 0, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477844,-99) , 
9, -2.26819, 0, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465507,-99) , 
7, 2.14288, 1, 0, 0.498776,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0140495);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.515336,-99) , 
NN(
0, 
0, 
-1, -0.0714836, 0, -1, 0.493588,-99) , 
0, 0.491424, 1, 0, 0.495081,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0152897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.35726, 0, 1, 0.516239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494259,-99) , 
8, 0.718706, 0, 0, 0.495655,-99) , 
0, 0.504757, 0, 0, 0.496973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469974,-99) , 
2, -0.214346, 0, 0, 0.495869,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00820497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483442,-99) , 
9, -2.32196, 0, 0, 0.500941,-99) , 
0, 0.489519, 1, 0, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47127,-99) , 
7, 2.14284, 1, 0, 0.50046,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.014815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49734,-99) , 
8, -4.45471, 1, 0, 0.499069,-99) , 
4, 0.999524, 1, 0, 0.500923,-99) , 
NN(
0, 
0, 
-1, -0.142755, 0, -1, 0.475663,-99) , 
0, 0.492376, 0, 0, 0.498547,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.025879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.252858, 1, 1, 0.511251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460859,-99) , 
7, 0.00708858, 1, 0, 0.496957,-99) , 
8, -3.21528, 0, 0, 0.50513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480594,-99) , 
9, 1.77733, 1, 0, 0.499092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432764,-99) , 
9, -0.304971, 0, 0, 0.492989,-99) , 
7, 0.714273, 1, 0, 0.501532,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0116486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.29255, 1, 1, 0.523233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498814,-99) , 
8, -0.468929, 0, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470587,-99) , 
9, 3.47774, 1, 0, 0.499836,-99) , 
7, 1.85718, 0, 0, 0.50143,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0226611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487392,-99) , 
9, -1.39778, 0, 0, 0.508221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480735,-99) , 
8, -2.67878, 0, 0, 0.496883,-99) , 
7, 0.428663, 1, 0, 0.503487,-99) , 
NN(
0, 
0, 
-1, -2.58658, 0, -1, 0.476746,-99) , 
9, -2.13337, 0, 0, 0.501763,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0190572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49878,-99) , 
8, -2.22273, 0, 0, 0.50299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474902,-99) , 
8, -0.596714, 0, 0, 0.487611,-99) , 
9, 0.31815, 1, 0, 0.497262,-99) , 
NN(
0, 
0, 
-1, 0.074439, 1, -1, 0.480293,-99) , 
0, 0.493329, 0, 0, 0.495018,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0103346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498121,-99) , 
3, 9.08969, 0, 0, 0.499543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460363,-99) , 
4, 0.999048, 0, 0, 0.498469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468519,-99) , 
0, 0.505709, 1, 0, 0.497383,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0322555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419483,-99) , 
7, 0.760582, 1, 0, 0.502988,-99) , 
8, -2.55938, 0, 0, 0.507891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490162,-99) , 
7, 1.00003, 0, 0, 0.498873,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.482505,-99) , 
9, 1.52546, 1, 0, 0.492705,-99) , 
9, -0.092933, 1, 0, 0.500693,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0208853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.394345, 0, 1, 0.544218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480144,-99) , 
9, 0.128176, 1, 0, 0.500819,-99) , 
8, -1.76007, 0, 0, 0.504179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512982,-99) , 
NN(
0, 
0, 
-1, -0.714088, 0, -1, 0.485476,-99) , 
8, 2.25815, 0, 0, 0.489669,-99) , 
9, 0.71673, 1, 0, 0.499877,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.013255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497503,-99) , 
9, -0.731104, 1, 0, 0.501294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470893,-99) , 
7, -1.57141, 0, 0, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469434,-99) , 
9, -2.39957, 0, 0, 0.498891,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0111949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498472,-99) , 
2, 0.0232979, 0, 0, 0.501936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484365,-99) , 
2, -0.132072, 0, 0, 0.501084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471511,-99) , 
2, -0.213645, 0, 0, 0.499861,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0335974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998958, 0, 1, 0.507898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363245,-99) , 
6, -1.85725, 0, 0, 0.499222,-99) , 
6, -951.286, 1, 0, 0.503789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456843,-99) , 
9, -2.57426, 0, 0, 0.503555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410737,-99) , 
7, -0.472009, 1, 0, 0.489435,-99) , 
9, -1.48154, 0, 0, 0.5014,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0137626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54158,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.494891,-99) , 
4, 0.999048, 1, 0, 0.496401,-99) , 
7, 2.14288, 0, 0, 0.497391,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0156912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491009,-99) , 
9, 4.09715, 1, 0, 0.513389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49538,-99) , 
7, -1.85713, 1, 0, 0.496305,-99) , 
8, 0.178684, 0, 0, 0.498607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463574,-99) , 
4, 0.999048, 0, 0, 0.497584,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0169171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0189509, 1, 1, 0.509643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49426,-99) , 
0, 0.492377, 1, 0, 0.496605,-99) , 
3, 1.41178, 1, 0, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472065,-99) , 
3, 9.25993, 1, 0, 0.500158,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0151058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97941, 0, 1, 0.523435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458546,-99) , 
9, -2.10989, 0, 0, 0.502377,-99) , 
7, -1.57125, 1, 0, 0.50369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473397,-99) , 
2, 0.21442, 1, 0, 0.502637,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0179257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.06874, 1, 1, 0.528583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47243,-99) , 
8, -0.226526, 0, 0, 0.498157,-99) , 
9, 1.41986, 1, 0, 0.50705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481449,-99) , 
9, -1.75264, 0, 0, 0.498202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438363,-99) , 
7, 1.85609, 1, 0, 0.496024,-99) , 
8, -1.33695, 0, 0, 0.499059,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0175291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493243,-99) , 
3, 4.62455, 0, 0, 0.496114,-99) , 
7, 2.14288, 0, 0, 0.497301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470659,-99) , 
4, 0.999524, 0, 0, 0.495959,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.019121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.577067, 1, 1, 0.507944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492732,-99) , 
2, 0.0721267, 0, 0, 0.49583,-99) , 
8, -1.84054, 0, 0, 0.500113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456708,-99) , 
0, 0.490472, 0, 0, 0.498325,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0130467);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496196,-99) , 
0, 0.491696, 1, 0, 0.497646,-99) , 
NN(
0, 
0, 
-1, 2.75778, 1, -1, 0.479754,-99) , 
0, 0.504757, 1, 0, 0.496531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462826,-99) , 
3, 9.37272, 1, 0, 0.495555,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0169247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.576994, 0, 1, 0.506676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482798,-99) , 
9, 3.05633, 1, 0, 0.505076,-99) , 
NN(
NN(
0, 
0, 
-1, 2.68937, 1, -1, 0.495689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462033,-99) , 
7, -1.47606, 1, 0, 0.480611,-99) , 
7, -0.714154, 0, 0, 0.492424,-99) , 
0, 0.497138, 0, 0, 0.500057,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00827332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478842,-99) , 
4, 0.999683, 0, 0, 0.499704,-99) , 
4, 0.999048, 1, 0, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444635,-99) , 
3, 9.25993, 1, 0, 0.499389,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0145877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489783,-99) , 
0, 0.496187, 1, 0, 0.49354,-99) , 
3, 2.30369, 1, 0, 0.50025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471051,-99) , 
3, 9.37272, 1, 0, 0.499405,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0119323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497555,-99) , 
8, -4.03342, 1, 0, 0.499592,-99) , 
3, 9.12912, 0, 0, 0.500725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473465,-99) , 
4, 0.999524, 0, 0, 0.499374,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0246057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427362,-99) , 
7, 0.525236, 1, 0, 0.494085,-99) , 
9, -0.405698, 0, 0, 0.497174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483088,-99) , 
7, 1.28572, 1, 0, 0.496472,-99) , 
NN(
0, 
0, 
-1, -1.72849, 0, -1, 0.480998,-99) , 
7, 0.428619, 0, 0, 0.489595,-99) , 
8, -2.70844, 1, 0, 0.493041,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0120976);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.518971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
4, 0.999524, 1, 0, 0.50027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477027,-99) , 
0, 0.5019, 0, 0, 0.48513,-99) , 
2, 0.0715542, 1, 0, 0.497993,-99) , 
7, 1.85714, 0, 0, 0.499407,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0118245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470124,-99) , 
2, -0.205632, 0, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, -3.01566, 0, -1, 0.490468,-99) , 
0, 0.493329, 0, 0, 0.500721,-99) , 
NN(
0, 
0, 
-1, -3.15182, 1, -1, 0.472804,-99) , 
4, 0.999524, 0, 0, 0.499298,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0224316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498373,-99) , 
7, -1.28548, 1, 0, 0.50022,-99) , 
9, -0.597789, 1, 0, 0.503134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458891,-99) , 
9, -1.01353, 1, 0, 0.496724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417887,-99) , 
9, -0.617599, 0, 0, 0.469195,-99) , 
7, 0.220741, 1, 0, 0.490908,-99) , 
8, -2.98998, 0, 0, 0.498533,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0191615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464542,-99) , 
9, -0.738458, 0, 0, 0.504597,-99) , 
NN(
0, 
0, 
-1, -0.0714192, 0, -1, 0.493932,-99) , 
7, 0.183609, 0, 0, 0.498825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465393,-99) , 
7, 2.14281, 1, 0, 0.497606,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0208729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.199863, 0, 1, 0.521968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488147,-99) , 
9, 3.30521, 1, 0, 0.514892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540348,-99) , 
NN(
0, 
0, 
-1, -1.59261, 0, -1, 0.494464,-99) , 
7, -1.85693, 1, 0, 0.496209,-99) , 
8, -1.31231, 0, 0, 0.501349,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0107463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49839,-99) , 
7, 1.2858, 0, 0, 0.500905,-99) , 
3, 9.08466, 0, 0, 0.502033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471655,-99) , 
4, 0.999048, 0, 0, 0.501137,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0161816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.506129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484242,-99) , 
2, 0.214323, 1, 0, 0.505421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492062,-99) , 
9, 1.59076, 1, 0, 0.511071,-99) , 
NN(
0, 
0, 
-1, 0.210013, 0, -1, 0.482124,-99) , 
8, -1.96538, 0, 0, 0.494457,-99) , 
0, 0.502852, 1, 0, 0.503873,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0229879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440411,-99) , 
9, -1.62099, 0, 0, 0.505972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468665,-99) , 
3, 4.10501, 1, 0, 0.493726,-99) , 
9, 1.94077, 1, 0, 0.503976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516,-99) , 
NN(
0, 
0, 
-1, -1.80251, 0, -1, 0.487002,-99) , 
8, -4.78844, 1, 0, 0.491573,-99) , 
7, -0.714127, 0, 0, 0.501207,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0148317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494998,-99) , 
7, 0.143745, 0, 0, 0.520175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496846,-99) , 
7, -0.428421, 1, 0, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471033,-99) , 
2, -0.21455, 0, 0, 0.499751,-99) , 
0, 0.491424, 1, 0, 0.501197,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0181233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78535, 0, 1, 0.505871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443251,-99) , 
9, -0.315834, 1, 0, 0.486272,-99) , 
4, 0.999887, 0, 0, 0.504223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467121,-99) , 
4, 0.999524, 0, 0, 0.502403,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0242201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.43777, 1, 1, 0.533763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490546,-99) , 
0, 0.499995, 1, 0, 0.501605,-99) , 
7, -0.999752, 1, 0, 0.504318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494467,-99) , 
8, -3.71655, 0, 0, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439762,-99) , 
7, -0.281088, 1, 0, 0.490623,-99) , 
9, -1.17123, 0, 0, 0.501106,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0235104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541592,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.49322,-99) , 
6, -951.286, 1, 0, 0.512347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491394,-99) , 
7, -0.673231, 1, 0, 0.493913,-99) , 
NN(
0, 
0, 
-1, -1.69378, 0, -1, 0.467896,-99) , 
7, -1.28555, 0, 0, 0.492263,-99) , 
8, -4.06022, 1, 0, 0.494688,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00923707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499715,-99) , 
8, -4.13857, 1, 0, 0.501827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468758,-99) , 
7, -1.57141, 0, 0, 0.500459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459913,-99) , 
9, -2.57238, 0, 0, 0.49927,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0121317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498562,-99) , 
7, 1.136, 0, 0, 0.50028,-99) , 
4, 0.999048, 1, 0, 0.501429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4845,-99) , 
9, 1.38621, 0, 0, 0.496584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450446,-99) , 
7, 2.31975, 1, 0, 0.484936,-99) , 
7, 1.57147, 1, 0, 0.499776,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0191161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499867,-99) , 
9, -0.905101, 0, 0, 0.518054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48013,-99) , 
9, -1.67001, 0, 0, 0.502241,-99) , 
7, -1.28555, 1, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51521,-99) , 
NN(
0, 
0, 
-1, 0.495777, 1, -1, 0.472132,-99) , 
0, 0.5019, 0, 0, 0.482792,-99) , 
2, 0.0713089, 1, 0, 0.500757,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0125406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499351,-99) , 
8, -4.0063, 1, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460541,-99) , 
7, 2.1428, 1, 0, 0.500211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475368,-99) , 
9, 4.23026, 1, 0, 0.494837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450429,-99) , 
8, 1.27759, 0, 0, 0.480752,-99) , 
9, 2.41454, 1, 0, 0.498227,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.03425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0612431, 0, 1, 0.515513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460225,-99) , 
7, -0.0610105, 1, 0, 0.498389,-99) , 
8, -3.21528, 0, 0, 0.507567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488707,-99) , 
9, 0.505464, 1, 0, 0.498838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41866,-99) , 
9, -0.454627, 0, 0, 0.46387,-99) , 
8, -2.84754, 0, 0, 0.492777,-99) , 
7, 0.428574, 1, 0, 0.501832,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0203471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497309,-99) , 
7, 0.238144, 0, 0, 0.503272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474138,-99) , 
7, 1.38099, 0, 0, 0.49165,-99) , 
7, 1.00003, 1, 0, 0.50078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487674,-99) , 
0, 0.494262, 0, 0, 0.49229,-99) , 
NN(
0, 
0, 
-1, -0.142319, 0, -1, 0.476526,-99) , 
0, 0.494961, 1, 0, 0.487897,-99) , 
0, 0.496186, 0, 0, 0.496729,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0182848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85885, 0, 1, 0.535943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49899,-99) , 
6, -951.286, 1, 0, 0.51835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491172,-99) , 
6, -951.286, 0, 0, 0.498367,-99) , 
8, 2.1619, 0, 0, 0.499612,-99) , 
0, 0.503804, 0, 0, 0.5015,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.023365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49338,-99) , 
4, 0.999977, 1, 0, 0.499307,-99) , 
4, 0.999524, 1, 0, 0.501289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510479,-99) , 
NN(
0, 
0, 
-1, 2.45503, 1, -1, 0.481711,-99) , 
7, 2.14289, 0, 0, 0.487038,-99) , 
7, 1.00008, 1, 0, 0.498216,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0111645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533378,-99) , 
NN(
NN(
0, 
0, 
-1, 0.146738, 0, 1, 0.502905,-99) , 
NN(
0, 
0, 
-1, 1.71655, 0, -1, 0.47749,-99) , 
9, 2.77661, 1, 0, 0.500993,-99) , 
7, 2.14288, 0, 0, 0.502335,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0124462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481564,-99) , 
0, 0.490472, 0, 0, 0.502663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48788,-99) , 
7, 1.23162, 0, 0, 0.49521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46589,-99) , 
7, -0.713655, 0, 0, 0.488674,-99) , 
2, 0.0714181, 1, 0, 0.500594,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0227922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497772,-99) , 
6, -951.286, 1, 0, 0.505627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467552,-99) , 
7, 2.29254, 1, 0, 0.504265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495947,-99) , 
8, -4.24749, 0, 0, 0.509166,-99) , 
NN(
0, 
0, 
-1, -0.512698, 0, -1, 0.473641,-99) , 
9, -1.63549, 1, 0, 0.490785,-99) , 
7, -0.714137, 0, 0, 0.501249,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0135897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471092,-99) , 
9, 2.71991, 1, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480117,-99) , 
0, 0.493329, 0, 0, 0.498619,-99) , 
8, 2.09155, 0, 0, 0.500135,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0115597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484105,-99) , 
6, -951.286, 1, 0, 0.512815,-99) , 
NN(
0, 
0, 
-1, 0.816132, 1, -1, 0.49752,-99) , 
8, 0.491749, 0, 0, 0.499179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462488,-99) , 
0, 0.489519, 0, 0, 0.498255,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0241719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498668,-99) , 
7, 1.76191, 1, 0, 0.514059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4764,-99) , 
9, 0.0354839, 0, 0, 0.509218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497829,-99) , 
8, -2.65632, 0, 0, 0.505091,-99) , 
NN(
0, 
0, 
-1, -0.0716793, 0, -1, 0.485929,-99) , 
9, -0.2213, 1, 0, 0.497805,-99) , 
7, 0.999999, 0, 0, 0.500359,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0154451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498826,-99) , 
9, -1.19462, 0, 0, 0.524302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484801,-99) , 
0, 0.504666, 1, 0, 0.497208,-99) , 
9, 0.447015, 1, 0, 0.514278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
0, 0.499258, 1, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, -2.06079, 1, -1, 0.49246,-99) , 
0, 0.497047, 0, 0, 0.497113,-99) , 
0, 0.502852, 0, 0, 0.499587,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0152192);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.0926, 1, 1, 0.519599,-99) , 
NN(
NN(
0, 
0, 
-1, -3.59682, 1, 1, 0.50535,-99) , 
NN(
0, 
0, 
-1, 0.498106, 1, -1, 0.471895,-99) , 
9, -1.92942, 0, 0, 0.503224,-99) , 
7, -1.57122, 1, 0, 0.504265,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0136673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.838755, 0, 1, 0.528328,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504312,-99) , 
NN(
0, 
0, 
-1, -2.03617, 0, -1, 0.487873,-99) , 
7, 1.16325, 1, 0, 0.502357,-99) , 
7, 1.85714, 0, 0, 0.504147,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0135315);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487117,-99) , 
9, 3.45236, 1, 0, 0.503725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453999,-99) , 
9, -2.38109, 0, 0, 0.502309,-99) , 
7, -1.85692, 1, 0, 0.502916,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0277386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486576,-99) , 
7, 0.198392, 0, 0, 0.527406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497877,-99) , 
7, -0.714154, 1, 0, 0.500984,-99) , 
9, -0.259951, 1, 0, 0.505039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496966,-99) , 
8, -3.27589, 0, 0, 0.504001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423921,-99) , 
9, -0.541872, 0, 0, 0.464318,-99) , 
7, 0.268534, 1, 0, 0.495703,-99) , 
8, -2.91496, 0, 0, 0.501342,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0178098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496163,-99) , 
7, -1.97958, 0, 0, 0.516711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485562,-99) , 
7, -0.700638, 0, 0, 0.502668,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.466108,-99) , 
9, -1.92942, 0, 0, 0.500414,-99) , 
7, -1.57141, 1, 0, 0.501434,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0245103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465316,-99) , 
9, -1.93444, 0, 0, 0.502266,-99) , 
7, -1.39525, 1, 0, 0.516531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493935,-99) , 
3, 1.58642, 0, 0, 0.511952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489497,-99) , 
6, -951.286, 0, 0, 0.496888,-99) , 
8, 1.19412, 0, 0, 0.498166,-99) , 
8, -4.03342, 1, 0, 0.500433,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0115061);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456511,-99) , 
7, -1.57125, 0, 0, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473738,-99) , 
9, -2.50949, 0, 0, 0.499955,-99) , 
0, 0.490472, 1, 0, 0.500981,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0179608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492331, 0, 1, 0.513691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484782,-99) , 
7, 1.47635, 0, 0, 0.49671,-99) , 
7, 0.714502, 1, 0, 0.508696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462473,-99) , 
7, -1.57122, 0, 0, 0.500187,-99) , 
NN(
0, 
0, 
-1, -1.85701, 0, -1, 0.490957,-99) , 
6, -951.286, 1, 0, 0.49563,-99) , 
0, 0.495233, 1, 0, 0.498871,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0137824);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529905,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.517942,-99) , 
NN(
0, 
0, 
-1, 1.49114, 1, -1, 0.494922,-99) , 
7, 1.84358, 0, 0, 0.496574,-99) , 
7, -1.85696, 1, 0, 0.497814,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0155937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499234,-99) , 
2, -0.038236, 1, 0, 0.50337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469195,-99) , 
3, 4.27825, 1, 0, 0.50195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482929,-99) , 
9, -0.72869, 1, 0, 0.494293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463952,-99) , 
9, 1.56127, 1, 0, 0.4895,-99) , 
3, 4.71771, 1, 0, 0.499601,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0112742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47782,-99) , 
9, 2.25277, 1, 0, 0.500709,-99) , 
8, 2.07875, 0, 0, 0.501741,-99) , 
0, 0.505709, 0, 0, 0.502879,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0180893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499534,-99) , 
6, -951.286, 1, 0, 0.514651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462159,-99) , 
7, -1.76168, 0, 0, 0.504808,-99) , 
NN(
0, 
0, 
-1, -1.1658, 0, -1, 0.493496,-99) , 
7, -0.999808, 1, 0, 0.494781,-99) , 
8, -4.25254, 1, 0, 0.496582,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0142813);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.525031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463311,-99) , 
9, -2.24322, 0, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, -0.127613, 0, -1, 0.488399,-99) , 
7, 0.823223, 1, 0, 0.497403,-99) , 
7, -1.57122, 1, 0, 0.49916,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0146659);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.35689, 0, 1, 0.523647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495681,-99) , 
8, -3.67966, 1, 0, 0.4976,-99) , 
8, 2.6478, 0, 0, 0.498793,-99) , 
8, -4.34575, 1, 0, 0.500733,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0215273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494066,-99) , 
9, -1.00135, 0, 0, 0.518,-99) , 
NN(
NN(
0, 
0, 
-1, 1.1634, 0, 1, 0.504994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36333,-99) , 
6, -1.85732, 0, 0, 0.492727,-99) , 
6, -951.286, 1, 0, 0.498872,-99) , 
7, -1.28552, 1, 0, 0.500878,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0301759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490426,-99) , 
7, 1.77556, 1, 0, 0.509604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431236,-99) , 
9, -0.433726, 0, 0, 0.482541,-99) , 
8, -2.8303, 0, 0, 0.5047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491347,-99) , 
8, -3.28343, 0, 0, 0.500081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476044,-99) , 
7, -0.0611565, 0, 0, 0.487305,-99) , 
2, -0.0710971, 0, 0, 0.497902,-99) , 
7, 0.428663, 0, 0, 0.500588,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0131042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.24808, 1, 1, 0.51788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440268,-99) , 
7, -1.69389, 0, 0, 0.498616,-99) , 
8, -4.28293, 1, 0, 0.500433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516649,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.463829,-99) , 
8, -0.748601, 0, 0, 0.481252,-99) , 
7, 1.57138, 1, 0, 0.498569,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0135042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497018,-99) , 
7, 2.14289, 0, 0, 0.498352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462636,-99) , 
4, 0.999751, 0, 0, 0.497284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460862,-99) , 
4, 0.999524, 0, 0, 0.495492,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0240158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457074,-99) , 
9, -1.76916, 0, 0, 0.498562,-99) , 
7, -1.18801, 1, 0, 0.51113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491977,-99) , 
0, 0.497138, 1, 0, 0.496535,-99) , 
NN(
0, 
0, 
-1, -0.142809, 0, -1, 0.483834,-99) , 
2, -0.0716846, 0, 0, 0.494454,-99) , 
8, -3.9435, 1, 0, 0.496814,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0271082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.524452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430045,-99) , 
9, -1.61354, 0, 0, 0.497506,-99) , 
7, -0.768071, 1, 0, 0.513067,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85716, 0, 1, 0.504324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490926,-99) , 
9, -1.39673, 1, 0, 0.493906,-99) , 
8, -1.2412, 0, 0, 0.497148,-99) , 
8, -3.83621, 1, 0, 0.499737,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0117234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.344616, 0, 1, 0.510415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472369,-99) , 
4, 0.999524, 0, 0, 0.499637,-99) , 
0, 0.499995, 0, 0, 0.503223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476204,-99) , 
9, 3.84063, 1, 0, 0.502109,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0199507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478432,-99) , 
9, -1.85546, 0, 0, 0.505349,-99) , 
7, -1.23754, 1, 0, 0.520656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496248,-99) , 
7, 1.85717, 0, 0, 0.498531,-99) , 
4, 0.999524, 1, 0, 0.499997,-99) , 
8, -4.03342, 1, 0, 0.502558,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0220315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27973, 0, 1, 0.509604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494432,-99) , 
8, -1.24031, 0, 0, 0.495818,-99) , 
0, 0.499043, 0, 0, 0.501658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477504,-99) , 
0, 0.503169, 1, 0, 0.502961,-99) , 
NN(
0, 
0, 
-1, 0.143166, 0, -1, 0.476415,-99) , 
0, 0.500947, 0, 0, 0.483979,-99) , 
9, 1.30911, 1, 0, 0.498005,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0142361);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.523866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
3, 8.75399, 0, 0, 0.498976,-99) , 
NN(
0, 
0, 
-1, -0.469166, 1, -1, 0.479005,-99) , 
4, 0.999887, 0, 0, 0.497287,-99) , 
4, 0.999524, 1, 0, 0.498737,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0190787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493568,-99) , 
7, -1.57121, 0, 0, 0.507212,-99) , 
0, 0.493102, 1, 0, 0.508108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489735,-99) , 
7, 0.428569, 0, 0, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478847,-99) , 
1, -0.00204691, 0, 0, 0.493578,-99) , 
0, 0.492376, 0, 0, 0.50671,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00848122);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.85038, 0, 1, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476633,-99) , 
4, 0.999524, 0, 0, 0.501872,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0182549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47795,-99) , 
2, -0.213875, 0, 0, 0.500171,-99) , 
8, -1.53533, 0, 0, 0.50205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475391,-99) , 
6, -951.286, 0, 0, 0.498076,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.477567,-99) , 
7, 1.28577, 0, 0, 0.484182,-99) , 
9, 0.926524, 1, 0, 0.497334,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0242561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498038,-99) , 
8, -3.49937, 1, 0, 0.502886,-99) , 
NN(
0, 
0, 
-1, -0.319482, 1, -1, 0.486765,-99) , 
9, -1.25487, 0, 0, 0.498672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449639,-99) , 
8, 1.40311, 0, 0, 0.47535,-99) , 
6, -951.286, 0, 0, 0.48683,-99) , 
8, -0.541537, 1, 0, 0.496531,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0214707);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.517188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494723,-99) , 
9, -0.797652, 0, 0, 0.503022,-99) , 
NN(
0, 
0, 
-1, -0.169995, 0, -1, 0.491388,-99) , 
8, -3.13009, 1, 0, 0.495798,-99) , 
7, 1.57149, 0, 0, 0.498069,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.011153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.528389, 1, 1, 0.502273,-99) , 
NN(
0, 
0, 
-1, -0.714166, 0, -1, 0.493067,-99) , 
3, 4.50116, 1, 0, 0.500335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478632,-99) , 
7, 0.714669, 1, 0, 0.498515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46277,-99) , 
6, -951.286, 1, 0, 0.484026,-99) , 
9, 2.48002, 1, 0, 0.498735,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0358654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57087, 0, 1, 0.516701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35532,-99) , 
7, 0.715846, 1, 0, 0.456344,-99) , 
6, -1.00013, 0, 0, 0.503918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453636,-99) , 
7, -1.61226, 0, 0, 0.498571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447785,-99) , 
7, 1.85714, 1, 0, 0.495401,-99) , 
6, -951.286, 0, 0, 0.499646,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0161395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489965,-99) , 
0, 0.499996, 1, 0, 0.511649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494981,-99) , 
8, -4.49154, 1, 0, 0.496443,-99) , 
7, 1.40812, 0, 0, 0.497888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462027,-99) , 
7, 2.14288, 1, 0, 0.49658,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00974033);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499592,-99) , 
7, 1.14971, 0, 0, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459753,-99) , 
9, -2.29516, 0, 0, 0.500422,-99) , 
7, -1.85691, 1, 0, 0.501535,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00837052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54316, 0, 1, 0.520399,-99) , 
NN(
0, 
0, 
-1, 1.72742, 1, -1, 0.498444,-99) , 
7, 1.85713, 0, 0, 0.499921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463471,-99) , 
2, -0.214166, 0, 0, 0.498449,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.00876422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498578,-99) , 
2, 0.207989, 0, 0, 0.499609,-99) , 
3, 8.71932, 0, 0, 0.500907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468036,-99) , 
4, 0.999048, 0, 0, 0.499956,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0186743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491019,-99) , 
6, -951.286, 1, 0, 0.503802,-99) , 
9, 2.50594, 1, 0, 0.516767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494759,-99) , 
9, 0.626134, 1, 0, 0.503954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461789,-99) , 
9, -2.60024, 0, 0, 0.502517,-99) , 
8, 0.0345393, 0, 0, 0.504511,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0207486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.574137, 0, 1, 0.510543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486964,-99) , 
3, 2.92621, 1, 0, 0.500275,-99) , 
7, 0.714372, 0, 0, 0.505578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532902,-99) , 
NN(
0, 
0, 
-1, 0.760215, 1, -1, 0.491866,-99) , 
8, -2.51899, 0, 0, 0.495962,-99) , 
9, -0.092933, 0, 0, 0.500555,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0199014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.605642, 1, 1, 0.510558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4939,-99) , 
0, 0.503805, 0, 0, 0.496425,-99) , 
3, 2.24029, 1, 0, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461433,-99) , 
3, 9.10638, 1, 0, 0.502589,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0175866);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.520632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48085,-99) , 
9, -1.69531, 0, 0, 0.502683,-99) , 
NN(
0, 
0, 
-1, -1.92935, 1, -1, 0.482429,-99) , 
0, 0.502852, 1, 0, 0.499911,-99) , 
7, -1.28571, 1, 0, 0.502041,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0176436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494133,-99) , 
0, 0.493329, 1, 0, 0.496898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456511,-99) , 
4, 0.999048, 0, 0, 0.495816,-99) , 
9, -2.21706, 1, 0, 0.497337,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00988059);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.13153, 0, 1, 0.503577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468812,-99) , 
4, 0.999524, 0, 0, 0.501861,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0119536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471073,-99) , 
4, 0.999048, 0, 0, 0.50213,-99) , 
8, -4.58624, 1, 0, 0.503434,-99) , 
NN(
0, 
0, 
-1, 1.74855, 0, -1, 0.483193,-99) , 
9, 2.77661, 1, 0, 0.50183,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0157999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496691,-99) , 
8, -1.69679, 0, 0, 0.499438,-99) , 
NN(
0, 
0, 
-1, -0.0473203, 0, -1, 0.487672,-99) , 
9, 0.986613, 1, 0, 0.496745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464537,-99) , 
9, 4.2114, 1, 0, 0.495695,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0232079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496269,-99) , 
8, -2.21478, 0, 0, 0.49975,-99) , 
7, -1.78339, 1, 0, 0.50183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
6, -951.286, 0, 0, 0.503493,-99) , 
NN(
0, 
0, 
-1, -1.05425, 0, -1, 0.477488,-99) , 
7, 0.714391, 0, 0, 0.490841,-99) , 
9, 0.341677, 1, 0, 0.497739,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0104555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465646,-99) , 
3, 7.56538, 1, 0, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475081,-99) , 
3, 9.32353, 1, 0, 0.501502,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0137205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495892,-99) , 
3, 1.81681, 0, 0, 0.515528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484695,-99) , 
9, 1.43732, 1, 0, 0.498101,-99) , 
0, 0.493329, 1, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467872,-99) , 
3, 9.07131, 1, 0, 0.499447,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0184855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.92643, 1, 1, 0.530326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484787,-99) , 
3, 1.20699, 0, 0, 0.501701,-99) , 
7, 0.714328, 0, 0, 0.512887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497649,-99) , 
4, 0.999524, 1, 0, 0.50021,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.470203,-99) , 
9, 0.921984, 1, 0, 0.497616,-99) , 
8, -0.758607, 0, 0, 0.500788,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0184749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496254,-99) , 
7, -0.142797, 0, 0, 0.516121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487898,-99) , 
9, 0.188079, 1, 0, 0.499932,-99) , 
8, -0.650235, 0, 0, 0.50268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467842,-99) , 
9, 4.15532, 1, 0, 0.501495,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0145171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.519952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496267,-99) , 
0, 0.506163, 0, 0, 0.49736,-99) , 
NN(
0, 
0, 
-1, -0.142922, 0, -1, 0.480151,-99) , 
0, 0.492376, 0, 0, 0.495728,-99) , 
8, -4.28007, 1, 0, 0.497864,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0132011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452495,-99) , 
7, -1.01289, 1, 0, 0.493941,-99) , 
9, -1.80343, 0, 0, 0.50808,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.496989,-99) , 
8, -3.92379, 1, 0, 0.498606,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0109719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.52765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491195,-99) , 
9, -1.08323, 0, 0, 0.500064,-99) , 
9, -0.114366, 0, 0, 0.51465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451724,-99) , 
9, -2.30753, 0, 0, 0.499224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475474,-99) , 
7, -1.85713, 0, 0, 0.498416,-99) , 
0, 0.493329, 1, 0, 0.500679,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0135855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487891,-99) , 
7, -1.3807, 0, 0, 0.510748,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501451,-99) , 
0, 0.499043, 0, 0, 0.505365,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.485466,-99) , 
7, 1.85716, 1, 0, 0.504128,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0204721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.791616, 0, 1, 0.528517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483567,-99) , 
6, -0.146596, 0, 0, 0.496323,-99) , 
6, -951.286, 1, 0, 0.513158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484806,-99) , 
0, 0.502171, 1, 0, 0.508248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494017,-99) , 
8, 2.09564, 0, 0, 0.495626,-99) , 
3, 4.71771, 0, 0, 0.498066,-99) , 
0, 0.493329, 1, 0, 0.500129,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0187897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459504,-99) , 
9, -2.19335, 1, 0, 0.503056,-99) , 
9, -0.217995, 0, 0, 0.512753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497893,-99) , 
8, -0.758344, 0, 0, 0.500964,-99) , 
NN(
0, 
0, 
-1, 0.683517, 0, -1, 0.485428,-99) , 
9, 2.14247, 1, 0, 0.498946,-99) , 
7, -1.28553, 1, 0, 0.500365,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0133728);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.210606, 1, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469887,-99) , 
4, 0.999524, 0, 0, 0.50371,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0243064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479123,-99) , 
0, 0.492377, 0, 0, 0.504878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477602,-99) , 
9, 0.128339, 1, 0, 0.493824,-99) , 
8, -2.45463, 1, 0, 0.502414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484214,-99) , 
9, 0.865715, 1, 0, 0.489738,-99) , 
8, 2.37486, 0, 0, 0.492938,-99) , 
8, -1.7302, 1, 0, 0.499281,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0193726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.75664, 1, 1, 0.540892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497929,-99) , 
8, 1.51521, 0, 0, 0.499828,-99) , 
5, 0.0101531, 0, 0, 0.503054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373478,-99) , 
5, 0.0236981, 1, 0, 0.499791,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0127423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494408,-99) , 
7, -0.562706, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478069,-99) , 
7, 1.65299, 1, 0, 0.499771,-99) , 
7, 2.14285, 0, 0, 0.501207,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0104285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45752,-99) , 
9, 2.11737, 1, 0, 0.500199,-99) , 
8, 0.597329, 0, 0, 0.501468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471871,-99) , 
9, 3.38031, 1, 0, 0.499855,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0131298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498605,-99) , 
9, -2.26488, 0, 0, 0.515139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499864,-99) , 
0, 0.499451, 1, 0, 0.5024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486301,-99) , 
6, -951.286, 0, 0, 0.493836,-99) , 
0, 0.499043, 0, 0, 0.497468,-99) , 
8, -4.28293, 1, 0, 0.499016,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00976349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496105,-99) , 
9, -0.740417, 1, 0, 0.519874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499871,-99) , 
3, 8.75156, 0, 0, 0.501119,-99) , 
NN(
0, 
0, 
-1, -0.412447, 1, -1, 0.469124,-99) , 
4, 0.999887, 0, 0, 0.498478,-99) , 
4, 0.999524, 1, 0, 0.499646,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0407974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490953,-99) , 
4, 0.999999, 0, 0, 0.507625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462988,-99) , 
9, -0.0289242, 1, 0, 0.492416,-99) , 
4, 0.999977, 0, 0, 0.503245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481931,-99) , 
4, 0.999524, 0, 0, 0.502172,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0201943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.534118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480167,-99) , 
9, -1.95115, 1, 0, 0.504445,-99) , 
9, -0.195175, 0, 0, 0.512457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494893,-99) , 
9, 0.910841, 1, 0, 0.519448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481026,-99) , 
8, -3.75773, 0, 0, 0.499271,-99) , 
0, 0.492376, 1, 0, 0.501247,-99) , 
7, -0.714306, 1, 0, 0.503833,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0159184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.922615, 0, 1, 0.531299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499313,-99) , 
7, -1.76362, 1, 0, 0.501468,-99) , 
9, 0.451221, 0, 0, 0.503907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491748,-99) , 
0, 0.502172, 1, 0, 0.503893,-99) , 
NN(
0, 
0, 
-1, -0.0715367, 0, -1, 0.483886,-99) , 
0, 0.499995, 0, 0, 0.490859,-99) , 
9, 0.745017, 1, 0, 0.500142,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0113396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498896,-99) , 
7, 0.999999, 0, 0, 0.502089,-99) , 
4, 0.999048, 1, 0, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472326,-99) , 
3, 9.38081, 1, 0, 0.502475,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0183871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489258,-99) , 
0, 0.504712, 0, 0, 0.509302,-99) , 
0, 0.503805, 1, 0, 0.518949,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0298694, 0, 1, 0.525384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481719,-99) , 
7, 1.57141, 1, 0, 0.500237,-99) , 
0, 0.491696, 1, 0, 0.502701,-99) , 
0, 0.5019, 0, 0, 0.505882,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0173654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.772213, 0, 1, 0.523129,-99) , 
NN(
NN(
0, 
0, 
-1, -0.877373, 1, 1, 0.505367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469442,-99) , 
8, -4.16772, 0, 0, 0.503041,-99) , 
7, -1.28552, 1, 0, 0.505139,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0104383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564609, 0, 1, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467216,-99) , 
9, 4.19777, 1, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451033,-99) , 
9, -2.52271, 0, 0, 0.499931,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00806989);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532525,-99) , 
NN(
0, 
0, 
-1, -2.57238, 0, -1, 0.497184,-99) , 
7, 2.14285, 0, 0, 0.498633,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.012016);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.71185, 0, 1, 0.503288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469923,-99) , 
3, 1.45611, 0, 0, 0.490046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455719,-99) , 
3, 4.12895, 1, 0, 0.482613,-99) , 
9, 2.06512, 1, 0, 0.500647,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0202025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.826318, 1, 1, 0.539427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476052,-99) , 
5, 0.000485154, 0, 0, 0.499927,-99) , 
5, 0.0101874, 0, 0, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38017,-99) , 
5, 0.0237713, 1, 0, 0.500051,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0139859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.520821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
3, 4.72382, 0, 0, 0.496899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480517,-99) , 
9, -2.26819, 0, 0, 0.49601,-99) , 
7, 1.85716, 0, 0, 0.497672,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0228892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49272,-99) , 
7, 0.428532, 1, 0, 0.502642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46674,-99) , 
7, 0.428666, 0, 0, 0.48738,-99) , 
2, 0.0707112, 1, 0, 0.500468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492016,-99) , 
7, -0.428435, 1, 0, 0.497918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460275,-99) , 
6, -0.428528, 0, 0, 0.486563,-99) , 
6, -951.286, 1, 0, 0.492372,-99) , 
0, 0.496186, 0, 0, 0.497912,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0185703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0575072, 0, 1, 0.521365,-99) , 
NN(
0, 
0, 
-1, 0.506214, 1, -1, 0.481058,-99) , 
0, 0.505164, 1, 0, 0.51067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516352,-99) , 
NN(
0, 
0, 
-1, -1.85692, 0, -1, 0.49422,-99) , 
9, 3.05633, 0, 0, 0.495716,-99) , 
0, 0.501899, 0, 0, 0.498647,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.011294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497725,-99) , 
7, 2.14288, 0, 0, 0.499102,-99) , 
4, 0.999524, 1, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473991,-99) , 
3, 9.33163, 1, 0, 0.500097,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0193204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497416,-99) , 
4, 0.999996, 0, 0, 0.505253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454584,-99) , 
2, 0.0712014, 1, 0, 0.486725,-99) , 
4, 0.999909, 0, 0, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459745,-99) , 
4, 0.999048, 0, 0, 0.501738,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0107251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142658, 0, 1, 0.522544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4989,-99) , 
2, 0.0714181, 0, 0, 0.501007,-99) , 
8, 0.619848, 0, 0, 0.502523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460996,-99) , 
9, 4.21549, 1, 0, 0.501198,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0243198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475586,-99) , 
7, -1.57125, 0, 0, 0.510467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405732,-99) , 
6, -1.85725, 0, 0, 0.496115,-99) , 
6, -951.286, 1, 0, 0.503461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482639,-99) , 
4, 0.999524, 0, 0, 0.502434,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0146686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476935,-99) , 
7, -0.42839, 0, 0, 0.518681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497475,-99) , 
7, -1.57125, 1, 0, 0.498933,-99) , 
8, -0.136976, 0, 0, 0.500751,-99) , 
NN(
0, 
0, 
-1, 2.64703, 1, -1, 0.479403,-99) , 
9, 3.09326, 1, 0, 0.49936,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0251335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.93372, 0, 1, 0.508358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478132,-99) , 
7, -1.57141, 0, 0, 0.506205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496832,-99) , 
7, 1.5718, 0, 0, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384049,-99) , 
6, -1.85712, 0, 0, 0.494265,-99) , 
6, -951.286, 1, 0, 0.500315,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0284493);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409631,-99) , 
6, -1.85725, 0, 0, 0.504973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487694,-99) , 
7, 0.428691, 0, 0, 0.494801,-99) , 
6, -951.286, 0, 0, 0.49986,-99) , 
0, 0.490472, 1, 0, 0.500927,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.017056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484959,-99) , 
7, 1.28571, 1, 0, 0.50512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493791,-99) , 
2, -0.0701876, 1, 0, 0.496453,-99) , 
0, 0.499043, 0, 0, 0.500108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456209,-99) , 
3, 1.70162, 0, 0, 0.482144,-99) , 
9, 3.05633, 1, 0, 0.498925,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0141239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.51922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453264,-99) , 
9, -2.16975, 0, 0, 0.500622,-99) , 
7, -1.57132, 1, 0, 0.501929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483179,-99) , 
0, 0.500538, 0, 0, 0.491854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465175,-99) , 
0, 0.496185, 0, 0, 0.483427,-99) , 
9, 1.99143, 1, 0, 0.499454,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0210577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492894,-99) , 
3, 2.77018, 1, 0, 0.518339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494305,-99) , 
2, -0.00859773, 1, 0, 0.500103,-99) , 
2, 0.0656142, 0, 0, 0.502521,-99) , 
NN(
0, 
0, 
-1, -0.0716195, 0, -1, 0.48256,-99) , 
3, 4.73378, 1, 0, 0.498742,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0150854);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.523625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495734,-99) , 
7, 2.12929, 0, 0, 0.497213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45678,-99) , 
4, 0.999048, 0, 0, 0.496071,-99) , 
7, -1.57125, 1, 0, 0.497831,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0196768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.7062, 0, 1, 0.52472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473575,-99) , 
7, 0.730516, 0, 0, 0.489786,-99) , 
6, -951.286, 1, 0, 0.511384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529134,-99) , 
NN(
0, 
0, 
-1, 0.999909, 0, -1, 0.495989,-99) , 
4, 0.999048, 1, 0, 0.497275,-99) , 
9, 0.71673, 0, 0, 0.501591,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0179373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489217,-99) , 
7, -1.57124, 0, 0, 0.506362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476704,-99) , 
4, 0.999048, 0, 0, 0.505438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474639,-99) , 
0, 0.499991, 0, 0, 0.485469,-99) , 
9, 2.84504, 1, 0, 0.503908,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00988582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497482,-99) , 
1, -0.000627221, 0, 0, 0.523642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498747,-99) , 
3, 8.84402, 0, 0, 0.49985,-99) , 
0, 0.491424, 1, 0, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456797,-99) , 
4, 0.999048, 0, 0, 0.500214,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0127837);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496441,-99) , 
8, -1.31682, 0, 0, 0.498664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472306,-99) , 
9, 2.53366, 1, 0, 0.483626,-99) , 
9, 2.19189, 1, 0, 0.497536,-99) , 
8, 2.07299, 0, 0, 0.498689,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0135795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477928,-99) , 
9, 3.50693, 1, 0, 0.500005,-99) , 
4, 0.999048, 1, 0, 0.501423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420064,-99) , 
6, -951.286, 1, 0, 0.467316,-99) , 
8, -0.772849, 0, 0, 0.481929,-99) , 
7, 1.5715, 1, 0, 0.499493,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0150601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.517902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466522,-99) , 
0, 0.502126, 1, 0, 0.498734,-99) , 
0, 0.502852, 0, 0, 0.50144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489657,-99) , 
3, 1.62828, 0, 0, 0.504364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447208,-99) , 
6, -951.287, 0, 0, 0.473626,-99) , 
7, 0.429691, 1, 0, 0.487187,-99) , 
9, 1.74667, 1, 0, 0.499215,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0172341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52182, 0, 1, 0.506514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401091,-99) , 
6, -1.85716, 0, 0, 0.494147,-99) , 
6, -951.286, 1, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, -0.0733765, 0, -1, 0.486519,-99) , 
0, 0.5019, 1, 0, 0.497763,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.012364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525805,-99) , 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.495597,-99) , 
9, 2.40675, 0, 0, 0.497017,-99) , 
NN(
0, 
0, 
-1, 0.498094, 0, -1, 0.481734,-99) , 
9, 3.23131, 1, 0, 0.496098,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0173205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491911,-99) , 
7, 1.44898, 1, 0, 0.501516,-99) , 
1, -0.00345143, 1, 0, 0.512939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495679,-99) , 
9, -1.83008, 1, 0, 0.511137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471038,-99) , 
9, 3.15787, 1, 0, 0.498836,-99) , 
7, -0.755146, 1, 0, 0.501974,-99) , 
7, 1.28571, 0, 0, 0.503668,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0141071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0460272, 0, 1, 0.506607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472941,-99) , 
8, 0.253058, 1, 0, 0.503403,-99) , 
NN(
0, 
0, 
-1, -1.13257, 0, -1, 0.493989,-99) , 
7, -0.142873, 1, 0, 0.49785,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0242627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.537134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495093,-99) , 
8, 0.24714, 0, 0, 0.497746,-99) , 
5, 0.00905547, 0, 0, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397813,-99) , 
5, 0.0237713, 1, 0, 0.499312,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0176787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474573,-99) , 
0, 0.505679, 0, 0, 0.495837,-99) , 
0, 0.504711, 1, 0, 0.512984,-99) , 
NN(
NN(
0, 
0, 
-1, -3.38086, 1, 1, 0.505094,-99) , 
NN(
0, 
0, 
-1, 2.44605, 1, -1, 0.492178,-99) , 
0, 0.496095, 1, 0, 0.496656,-99) , 
0, 0.503804, 0, 0, 0.498297,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0117264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492329,-99) , 
7, 1.9116, 1, 0, 0.507879,-99) , 
1, 0.00152331, 0, 0, 0.523731,-99) , 
NN(
NN(
0, 
0, 
-1, -4.29433, 1, 1, 0.50129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455583,-99) , 
7, 0.047892, 1, 0, 0.480559,-99) , 
0, 0.503804, 1, 0, 0.499325,-99) , 
7, 1.57141, 0, 0, 0.501883,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0109204);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.12928, 1, 1, 0.523967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476414,-99) , 
0, 0.490472, 0, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473235,-99) , 
9, 3.05633, 1, 0, 0.49894,-99) , 
7, 1.85718, 0, 0, 0.500621,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0132963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497033,-99) , 
8, -3.68688, 1, 0, 0.498881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460441,-99) , 
9, -2.13247, 0, 0, 0.496958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467869,-99) , 
7, -1.85684, 0, 0, 0.495965,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0130574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0462014, 0, 1, 0.52674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490152,-99) , 
3, 4.18018, 1, 0, 0.51688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521679,-99) , 
NN(
0, 
0, 
-1, -0.0714192, 0, -1, 0.496838,-99) , 
7, 2.14284, 0, 0, 0.49785,-99) , 
0, 0.502852, 0, 0, 0.500571,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0149282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489687,-99) , 
8, -1.80319, 1, 0, 0.526281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
0, 0.490472, 1, 0, 0.498526,-99) , 
3, 0.557533, 1, 0, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463096,-99) , 
3, 9.39171, 1, 0, 0.499801,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00947841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.958746, 0, 1, 0.517288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498028,-99) , 
8, -0.72464, 0, 0, 0.507297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488133,-99) , 
0, 0.502852, 1, 0, 0.498931,-99) , 
2, 0.0713805, 0, 0, 0.5002,-99) , 
7, -1.28572, 1, 0, 0.501965,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0134826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39453, 1, 1, 0.505272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473144,-99) , 
9, -2.1661, 0, 0, 0.503745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480738,-99) , 
7, -1.85713, 0, 0, 0.502958,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00945404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
7, 2.14288, 0, 0, 0.499575,-99) , 
4, 0.999524, 1, 0, 0.50102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465854,-99) , 
3, 9.37272, 1, 0, 0.500018,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00745148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52839,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.498191,-99) , 
4, 0.999048, 1, 0, 0.499099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471077,-99) , 
0, 0.490472, 0, 0, 0.497909,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0117778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477831,-99) , 
3, 6.84652, 1, 0, 0.501593,-99) , 
4, 0.999048, 1, 0, 0.50313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478895,-99) , 
3, 8.95163, 1, 0, 0.502282,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0139401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10618, 0, 1, 0.524667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489701,-99) , 
0, 0.500947, 1, 0, 0.515977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496111,-99) , 
7, 0.755202, 0, 0, 0.499172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471716,-99) , 
0, 0.505709, 1, 0, 0.498189,-99) , 
7, -1.28549, 1, 0, 0.500057,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0264332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47182, 0, 1, 0.516124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486871,-99) , 
9, 1.52717, 0, 0, 0.495444,-99) , 
9, -1.07812, 1, 0, 0.505559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48141,-99) , 
7, 0.402011, 0, 0, 0.49927,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.479608,-99) , 
7, 1.5034, 1, 0, 0.494927,-99) , 
7, 0.142861, 1, 0, 0.50035,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0146346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492806,-99) , 
6, -951.286, 1, 0, 0.529174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48347,-99) , 
6, -951.286, 0, 0, 0.500207,-99) , 
0, 0.499995, 0, 0, 0.510997,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480593,-99) , 
8, 0.257493, 0, 0, 0.490228,-99) , 
9, 0.969131, 1, 0, 0.499214,-99) , 
2, 0.0709021, 0, 0, 0.501032,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0174113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49997,-99) , 
2, -0.0723171, 1, 0, 0.503004,-99) , 
NN(
0, 
0, 
-1, -1.47524, 0, -1, 0.491212,-99) , 
0, 0.499043, 1, 0, 0.498112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483224,-99) , 
0, 0.501898, 0, 0, 0.488356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448785,-99) , 
7, -0.99982, 0, 0, 0.483746,-99) , 
8, -1.14454, 1, 0, 0.494622,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0109763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494,-99) , 
0, 0.498092, 0, 0, 0.506978,-99) , 
7, 1.91163, 1, 0, 0.520728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53842,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.497738,-99) , 
4, 0.999048, 1, 0, 0.498956,-99) , 
7, 1.57142, 0, 0, 0.501214,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0167099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.429291, 0, 1, 0.529385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496526,-99) , 
9, 1.62718, 1, 0, 0.507905,-99) , 
2, 0.0709779, 0, 0, 0.511386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460653,-99) , 
4, 0.999841, 0, 0, 0.499314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468179,-99) , 
4, 0.999524, 0, 0, 0.497751,-99) , 
0, 0.499043, 0, 0, 0.503538,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.014422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496293,-99) , 
9, -0.108208, 1, 0, 0.501565,-99) , 
0, 0.505709, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450004,-99) , 
7, 2.14285, 1, 0, 0.500541,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0193427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484582,-99) , 
7, -0.673315, 0, 0, 0.505537,-99) , 
7, -1.28555, 1, 0, 0.507099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521706,-99) , 
NN(
0, 
0, 
-1, 0.272726, 1, -1, 0.492441,-99) , 
9, -0.721452, 0, 0, 0.496462,-99) , 
8, -3.01661, 0, 0, 0.503243,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0165428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499384,-99) , 
7, -0.551021, 0, 0, 0.502321,-99) , 
NN(
0, 
0, 
-1, 1.17522, 1, -1, 0.490656,-99) , 
7, -0.428564, 1, 0, 0.49432,-99) , 
2, 0.213864, 0, 0, 0.495625,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00780945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477292,-99) , 
9, -2.5095, 0, 0, 0.499212,-99) , 
8, 0.89989, 0, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 2.1798, 0, -1, 0.472226,-99) , 
9, 3.27805, 1, 0, 0.499277,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0227024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.17377, 0, 1, 0.524656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475538,-99) , 
2, -0.0472851, 0, 0, 0.499836,-99) , 
9, -1.56394, 1, 0, 0.512319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492868,-99) , 
0, 0.500947, 0, 0, 0.497403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461699,-99) , 
7, 2.11569, 1, 0, 0.495635,-99) , 
7, -0.714121, 1, 0, 0.499474,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0193786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494344,-99) , 
9, -1.69167, 0, 0, 0.507092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487326,-99) , 
9, 3.14527, 1, 0, 0.505923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
9, 1.54212, 1, 0, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0.196087, 1, -1, 0.484007,-99) , 
8, -2.70685, 0, 0, 0.494992,-99) , 
0, 0.500947, 1, 0, 0.503131,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0282387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493758,-99) , 
8, -0.541537, 1, 0, 0.509787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481692,-99) , 
2, -0.0106624, 1, 0, 0.496869,-99) , 
2, 0.00358361, 0, 0, 0.503639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487154,-99) , 
8, -2.20415, 1, 0, 0.505969,-99) , 
NN(
0, 
0, 
-1, -0.9862, 1, -1, 0.47782,-99) , 
7, 0.143853, 0, 0, 0.491495,-99) , 
2, -0.0712075, 0, 0, 0.501647,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0234262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.73982, 0, 1, 0.511053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48346,-99) , 
0, 0.502673, 0, 0, 0.497343,-99) , 
0, 0.501129, 1, 0, 0.505492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485144,-99) , 
6, -951.286, 1, 0, 0.495749,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.472751,-99) , 
3, 4.59366, 1, 0, 0.491443,-99) , 
0, 0.497138, 0, 0, 0.499912,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00912034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498599,-99) , 
7, 2.14284, 0, 0, 0.499666,-99) , 
3, 9.12912, 0, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462435,-99) , 
4, 0.999048, 0, 0, 0.499895,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0225928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.71282, 0, 1, 0.522286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480764,-99) , 
9, -2.49116, 0, 0, 0.5125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486506,-99) , 
9, 2.36381, 1, 0, 0.500409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459334,-99) , 
8, -3.36862, 0, 0, 0.484484,-99) , 
9, -1.0565, 0, 0, 0.498132,-99) , 
8, -3.9435, 1, 0, 0.500186,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0281877);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404952,-99) , 
6, -1.85727, 0, 0, 0.503909,-99) , 
NN(
0, 
0, 
-1, 2.4796, 1, -1, 0.490178,-99) , 
6, -951.286, 0, 0, 0.497033,-99) , 
8, 1.74434, 0, 0, 0.498287,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0185962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523553,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.492192,-99) , 
2, 0.214101, 0, 0, 0.4932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456533,-99) , 
4, 0.999048, 0, 0, 0.492174,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0135418);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474241,-99) , 
7, -1.28554, 0, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473953,-99) , 
9, -2.54011, 0, 0, 0.499711,-99) , 
8, 2.17642, 0, 0, 0.501607,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00990949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498516,-99) , 
2, 0.0714181, 0, 0, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47459,-99) , 
9, 2.54816, 1, 0, 0.499282,-99) , 
8, 1.83707, 0, 0, 0.500671,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_6_8_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_6_8_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_6_8_noPCts *ReadBDT_maker_LHC19c2b_6_8_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_6_8_noPCts(theInpVar);
  }
}
