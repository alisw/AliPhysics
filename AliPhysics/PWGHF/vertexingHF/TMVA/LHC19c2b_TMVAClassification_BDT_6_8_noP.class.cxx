#include "LHC19c2b_TMVAClassification_BDT_6_8_noP.class.h"

double ReadBDT_LHC19c2b_6_8_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_6_8_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.383600670823979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.741663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381282,-99) , 
5, 0.514162, 1, 0, 0.654656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236288,-99) , 
5, -0.714616, 0, 0, 0.438735,-99) , 
7, -951.286, 0, 0, 0.545785,-99) , 
NN(
0, 
0, 
-1, 0.425732, 1, -1, 0.209134,-99) , 
8, 1.57141, 1, 0, 0.499805,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.355239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281225,-99) , 
7, -1.57141, 0, 0, 0.635261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258134,-99) , 
9, -1.54163, 1, 0, 0.409058,-99) , 
7, -951.286, 0, 0, 0.518595,-99) , 
NN(
0, 
0, 
-1, 0.223027, 1, -1, 0.14327,-99) , 
4, 0.999524, 0, 0, 0.487262,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.360548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312937,-99) , 
7, -1.85727, 0, 0, 0.655972,-99) , 
NN(
0, 
0, 
-1, -1.00171, 0, -1, 0.300565,-99) , 
5, 0.615255, 1, 0, 0.574862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291035,-99) , 
5, 0.518142, 1, 0, 0.482066,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.299672,-99) , 
9, -2.39492, 1, 0, 0.375991,-99) , 
7, -951.286, 0, 0, 0.473477,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.24283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352263,-99) , 
5, 0.712841, 1, 0, 0.581447,-99) , 
NN(
0, 
0, 
-1, -1.61206, 0, -1, 0.420596,-99) , 
7, -951.286, 0, 0, 0.498419,-99) , 
NN(
0, 
0, 
-1, 0.332164, 1, -1, 0.193153,-99) , 
8, 1.85718, 1, 0, 0.47092,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.19906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417855,-99) , 
5, -0.715564, 0, 0, 0.524217,-99) , 
NN(
0, 
0, 
-1, 0.331532, 1, -1, 0.249278,-99) , 
8, 1.85715, 1, 0, 0.502158,-99) , 
NN(
0, 
0, 
-1, 1.00099, 1, -1, 0.19511,-99) , 
4, 0.999524, 0, 0, 0.478205,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.198575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345611,-99) , 
7, -1.85712, 0, 0, 0.581818,-99) , 
NN(
0, 
0, 
-1, -1.57122, 0, -1, 0.448703,-99) , 
7, -951.286, 0, 0, 0.509241,-99) , 
NN(
0, 
0, 
-1, 1.00278, 1, -1, 0.299547,-99) , 
5, 0.617618, 1, 0, 0.472867,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.198497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29172,-99) , 
8, -1.85715, 0, 0, 0.550453,-99) , 
NN(
0, 
0, 
-1, 0.0620134, 1, -1, 0.391791,-99) , 
4, 0.999977, 0, 0, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0.0730658, 1, -1, 0.216731,-99) , 
4, 0.999524, 0, 0, 0.481703,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.176298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44222,-99) , 
5, -0.621615, 0, 0, 0.518556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230174,-99) , 
4, 0.999048, 0, 0, 0.507286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377867,-99) , 
7, -951.286, 0, 0, 0.440721,-99) , 
NN(
0, 
0, 
-1, 0.975173, 1, -1, 0.153008,-99) , 
5, 0.427368, 1, 0, 0.322906,-99) , 
8, 1.28578, 1, 0, 0.47471,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.191249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341212,-99) , 
8, -1.57122, 0, 0, 0.532338,-99) , 
NN(
0, 
0, 
-1, -0.30214, 0, -1, 0.303997,-99) , 
4, 0.999905, 0, 0, 0.51373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406582,-99) , 
8, -0.330968, 1, 0, 0.455352,-99) , 
NN(
0, 
0, 
-1, 0.634568, 1, -1, 0.202251,-99) , 
8, 1.00141, 1, 0, 0.371085,-99) , 
5, 0.332205, 1, 0, 0.46996,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.109699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40251,-99) , 
4, 0.999955, 0, 0, 0.488565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242807,-99) , 
4, 0.999048, 0, 0, 0.478241,-99) , 
NN(
0, 
0, 
-1, 0.424663, 1, -1, 0.181048,-99) , 
8, 2.14288, 1, 0, 0.461873,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0794966);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.460335,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0737161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281358,-99) , 
8, -2.07464, 0, 0, 0.493834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242076,-99) , 
4, 0.999048, 0, 0, 0.484033,-99) , 
NN(
0, 
0, 
-1, 0.521677, 1, -1, 0.260316,-99) , 
8, 1.8571, 1, 0, 0.465682,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.120699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439204,-99) , 
10, -0.138381, 1, 0, 0.481137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216341,-99) , 
4, 0.998572, 0, 0, 0.473514,-99) , 
NN(
0, 
0, 
-1, 0.332184, 1, -1, 0.209688,-99) , 
8, 2.14281, 1, 0, 0.459443,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0773819);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.461386,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0633492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29365,-99) , 
8, -2.02022, 0, 0, 0.494947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268581,-99) , 
4, 0.999048, 0, 0, 0.48584,-99) , 
NN(
0, 
0, 
-1, 0.332164, 1, -1, 0.236348,-99) , 
8, 2.14286, 1, 0, 0.472696,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0707093);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14288, 1, -1, 0.464704,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0850956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411338,-99) , 
4, 0.999932, 0, 0, 0.492467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21623,-99) , 
4, 0.998572, 0, 0, 0.485014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.225357,-99) , 
8, 2.14288, 1, 0, 0.471916,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0982067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281623,-99) , 
8, -2.0204, 0, 0, 0.501989,-99) , 
NN(
0, 
0, 
-1, 0.681947, 1, -1, 0.410294,-99) , 
5, 0.427362, 1, 0, 0.479309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242919,-99) , 
8, 2.14281, 1, 0, 0.467333,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.104741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330622,-99) , 
4, 0.999048, 0, 0, 0.503555,-99) , 
NN(
0, 
0, 
-1, -1.16327, 0, -1, 0.407773,-99) , 
5, -0.809856, 0, 0, 0.486768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386129,-99) , 
7, -951.286, 0, 0, 0.44519,-99) , 
NN(
0, 
0, 
-1, 0.638793, 1, -1, 0.208766,-99) , 
5, 0.427317, 1, 0, 0.355109,-99) , 
8, 1.28571, 1, 0, 0.465147,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.111964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452366,-99) , 
10, -1.06938, 1, 0, 0.47165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247987,-99) , 
4, 0.998572, 0, 0, 0.465422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.19517,-99) , 
8, 2.42858, 1, 0, 0.457436,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0720805);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.464022,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0853259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43286,-99) , 
5, 0.330677, 1, 0, 0.489154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307497,-99) , 
2, -0.214276, 0, 0, 0.480746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203858,-99) , 
8, 2.42858, 1, 0, 0.472731,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0626953);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42856, 1, -1, 0.468693,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0847327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464271,-99) , 
7, -951.286, 0, 0, 0.49199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335288,-99) , 
2, -0.215271, 0, 0, 0.484819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213187,-99) , 
8, 2.42856, 1, 0, 0.47712,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0453509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363004,-99) , 
8, -1.70734, 0, 0, 0.492702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311915,-99) , 
4, 0.999048, 0, 0, 0.485794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.225354,-99) , 
8, 2.42858, 1, 0, 0.478536,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.072681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373679,-99) , 
5, 0.806972, 1, 0, 0.500291,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.421375,-99) , 
0, 0.501899, 1, 0, 0.484855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296915,-99) , 
8, 2.14284, 1, 0, 0.475818,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0572305);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42856, 1, -1, 0.471416,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.221199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474465,-99) , 
8, -1.28525, 0, 0, 0.633198,-99) , 
NN(
0, 
0, 
-1, 0.00236366, 0, -1, 0.4133,-99) , 
6, 0.00451251, 0, 0, 0.487204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.222957,-99) , 
6, 0.0236981, 1, 0, 0.480435,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0754072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477782,-99) , 
10, -0.138381, 1, 0, 0.505401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370179,-99) , 
2, -0.212913, 0, 0, 0.499107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252961,-99) , 
8, 2.42856, 1, 0, 0.492455,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0574424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35961,-99) , 
8, -1.96598, 0, 0, 0.505198,-99) , 
NN(
0, 
0, 
-1, 0.361654, 1, -1, 0.365691,-99) , 
5, 0.805919, 1, 0, 0.497043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258184,-99) , 
8, 2.42856, 1, 0, 0.490737,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0421471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421333,-99) , 
4, 0.999864, 0, 0, 0.493831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321557,-99) , 
4, 0.998572, 0, 0, 0.489234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252869,-99) , 
8, 2.42858, 1, 0, 0.483024,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.183175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00724294, 0, 1, 0.579918,-99) , 
NN(
0, 
0, 
-1, 2.14282, 1, -1, 0.408524,-99) , 
6, 0.00338003, 0, 0, 0.486219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242142,-99) , 
6, 0.0236633, 1, 0, 0.480046,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0324571);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368392,-99) , 
8, -1.96578, 0, 0, 0.495179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353438,-99) , 
3, 9.33163, 1, 0, 0.490121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249881,-99) , 
8, 2.42858, 1, 0, 0.483965,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.044006);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42856, 1, -1, 0.478011,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0539163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382728,-99) , 
2, 0.228858, 1, 0, 0.500295,-99) , 
NN(
0, 
0, 
-1, -0.431146, 0, -1, 0.42488,-99) , 
2, -0.0701876, 0, 0, 0.487318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281554,-99) , 
8, 2.42859, 1, 0, 0.481927,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0408948);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.479564,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0670207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483035,-99) , 
10, -1.155, 1, 0, 0.498234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349609,-99) , 
3, 9.33163, 1, 0, 0.49319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267542,-99) , 
8, 2.42854, 1, 0, 0.487487,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0662893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480008,-99) , 
7, -951.286, 0, 0, 0.504223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366498,-99) , 
3, 9.27961, 1, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299208,-99) , 
8, 2.42856, 1, 0, 0.494228,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0668904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00532551, 1, 1, 0.534834,-99) , 
NN(
0, 
0, 
-1, -1.57126, 0, -1, 0.475649,-99) , 
10, -0.54153, 1, 0, 0.499139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287214,-99) , 
4, 0.998572, 0, 0, 0.493523,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0902964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466149,-99) , 
5, 0.332206, 1, 0, 0.509597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223861,-99) , 
9, -2.75329, 1, 0, 0.416677,-99) , 
8, -1.53063, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344265,-99) , 
8, 2.14273, 1, 0, 0.495512,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.065233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448387,-99) , 
4, 0.999864, 0, 0, 0.513741,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.464537,-99) , 
0, 0.499995, 1, 0, 0.497247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310341,-99) , 
4, 0.998572, 0, 0, 0.492314,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.045002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431016,-99) , 
10, 1.16508, 1, 0, 0.486675,-99) , 
9, 1.85493, 0, 0, 0.492147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298633,-99) , 
4, 0.998572, 0, 0, 0.487217,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0771904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461073,-99) , 
5, 0.237003, 1, 0, 0.497061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232866,-99) , 
9, -2.65458, 1, 0, 0.413464,-99) , 
8, -1.28554, 0, 0, 0.488114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313065,-99) , 
4, 0.998572, 0, 0, 0.483616,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.143082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.525827, 0, 1, 0.610989,-99) , 
NN(
0, 
0, 
-1, 0.00214821, 0, -1, 0.448709,-99) , 
6, 0.00563913, 0, 0, 0.489191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.240822,-99) , 
6, 0.0236981, 1, 0, 0.482919,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0747623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402328,-99) , 
3, 9.07001, 1, 0, 0.509674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319045,-99) , 
10, -1.6995, 1, 0, 0.440778,-99) , 
8, -1.14951, 0, 0, 0.499917,-99) , 
NN(
0, 
0, 
-1, 0.427334, 1, -1, 0.401964,-99) , 
8, 1.85717, 1, 0, 0.493085,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0611376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390046,-99) , 
3, 9.35068, 1, 0, 0.50734,-99) , 
NN(
0, 
0, 
-1, -1.04071, 0, -1, 0.460523,-99) , 
5, -0.429043, 0, 0, 0.489105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377522,-99) , 
8, 2.14289, 1, 0, 0.484284,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0468545);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491826,-99) , 
9, 2.18185, 0, 0, 0.496761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211757,-99) , 
10, -0.716205, 1, 0, 0.401735,-99) , 
8, -1.57142, 0, 0, 0.490456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34016,-99) , 
4, 0.998572, 0, 0, 0.486597,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0314232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376489,-99) , 
8, 2.3061, 1, 0, 0.499755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394805,-99) , 
8, -1.85713, 0, 0, 0.495409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364788,-99) , 
3, 9.34278, 1, 0, 0.491112,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0339622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373908,-99) , 
8, 2.34697, 1, 0, 0.496743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232371,-99) , 
9, -2.65458, 1, 0, 0.407945,-99) , 
8, -1.57114, 0, 0, 0.490677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339996,-99) , 
4, 0.998572, 0, 0, 0.486875,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0572437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497103,-99) , 
1, 0.00208167, 0, 0, 0.515832,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.476672,-99) , 
10, -0.625753, 1, 0, 0.491636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387477,-99) , 
7, -0.428882, 0, 0, 0.461636,-99) , 
NN(
0, 
0, 
-1, -0.427523, 0, -1, 0.41164,-99) , 
7, -951.286, 0, 0, 0.435707,-99) , 
0, 0.502852, 1, 0, 0.483544,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0781223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471364,-99) , 
5, 0.236535, 1, 0, 0.503624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349847,-99) , 
9, -3.58881, 1, 0, 0.449551,-99) , 
8, -0.999864, 0, 0, 0.494917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361349,-99) , 
4, 0.998572, 0, 0, 0.491431,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.112827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00738471, 0, 1, 0.533902,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.42158,-99) , 
6, 0.00226393, 0, 0, 0.489959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257764,-99) , 
6, 0.0237713, 1, 0, 0.484052,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0496509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445727,-99) , 
0, 0.502852, 1, 0, 0.496704,-99) , 
NN(
0, 
0, 
-1, 0.100301, 1, -1, 0.423185,-99) , 
2, 0.153111, 1, 0, 0.490681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404251,-99) , 
8, 0.724548, 1, 0, 0.475238,-99) , 
NN(
0, 
0, 
-1, -0.139035, 0, -1, 0.382023,-99) , 
5, -0.429001, 0, 0, 0.439022,-99) , 
2, -0.0713365, 0, 0, 0.481798,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0503142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428647, 0, 1, 0.553576,-99) , 
NN(
0, 
0, 
-1, -0.854092, 1, -1, 0.476819,-99) , 
9, 1.53351, 0, 0, 0.481756,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0426216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465602,-99) , 
4, 0.999955, 0, 0, 0.495915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383064,-99) , 
4, 0.999048, 0, 0, 0.49175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239049,-99) , 
9, -2.55649, 1, 0, 0.402314,-99) , 
8, -1.57125, 0, 0, 0.485934,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0992332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620026, 0, 1, 0.589541,-99) , 
NN(
0, 
0, 
-1, -0.364388, 1, -1, 0.465216,-99) , 
6, 0.00678872, 0, 0, 0.487807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268386,-99) , 
6, 0.0237713, 1, 0, 0.482266,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0755691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713889, 0, 1, 0.597737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427378,-99) , 
6, 0.00150921, 0, 0, 0.478061,-99) , 
6, 0.00792352, 0, 0, 0.494538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279838,-99) , 
6, 0.0237713, 1, 0, 0.48909,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.056686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.78572, 0, 1, 0.52339,-99) , 
NN(
0, 
0, 
-1, -1.27487, 0, -1, 0.443864,-99) , 
5, -0.429011, 0, 0, 0.512599,-99) , 
NN(
0, 
0, 
-1, -1.28555, 0, -1, 0.4712,-99) , 
10, -0.138381, 1, 0, 0.49209,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0641814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471549,-99) , 
0, 0.5019, 1, 0, 0.504498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413732,-99) , 
8, 2.0476, 1, 0, 0.499185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547188,-99) , 
NN(
0, 
0, 
-1, -1.762, 0, -1, 0.357468,-99) , 
9, -3.72151, 1, 0, 0.446469,-99) , 
8, -0.999996, 0, 0, 0.490832,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0424385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25851, 1, -1, 0.489958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271938,-99) , 
10, -0.796572, 1, 0, 0.42804,-99) , 
8, -1.57141, 0, 0, 0.485783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384103,-99) , 
2, -0.212026, 0, 0, 0.481153,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0391628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465605,-99) , 
2, -0.0714836, 0, 0, 0.499626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38666,-99) , 
8, 2.34695, 1, 0, 0.496289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280528,-99) , 
9, -2.40603, 1, 0, 0.421458,-99) , 
8, -1.57125, 0, 0, 0.491282,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.039833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491555,-99) , 
9, 1.20073, 0, 0, 0.49578,-99) , 
NN(
0, 
0, 
-1, -2.04739, 0, -1, 0.421298,-99) , 
8, -1.57121, 0, 0, 0.490891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39062,-99) , 
2, -0.214276, 0, 0, 0.486466,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0290369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461183,-99) , 
0, 0.503804, 1, 0, 0.497834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404612,-99) , 
3, 9.38081, 1, 0, 0.494712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289271,-99) , 
5, -0.718014, 0, 0, 0.413734,-99) , 
8, -1.57123, 0, 0, 0.489376,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0546849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494366,-99) , 
5, -0.741843, 1, 0, 0.503092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409299,-99) , 
10, -1.72173, 1, 0, 0.455302,-99) , 
8, -0.714148, 0, 0, 0.492091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335601,-99) , 
8, 0.430396, 1, 0, 0.414641,-99) , 
5, 0.806969, 1, 0, 0.487638,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0248295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430626,-99) , 
2, -0.212913, 0, 0, 0.497239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393031,-99) , 
8, 2.34694, 1, 0, 0.494115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278552,-99) , 
10, -0.919421, 1, 0, 0.41593,-99) , 
8, -1.57125, 0, 0, 0.489002,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0315699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430994,-99) , 
2, 0.193315, 1, 0, 0.49875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288236,-99) , 
9, -2.65458, 1, 0, 0.421197,-99) , 
8, -1.57142, 0, 0, 0.493724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391308,-99) , 
2, -0.214635, 0, 0, 0.489265,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0538914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42739,-99) , 
4, 0.999524, 0, 0, 0.502071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411393,-99) , 
5, 0.807231, 1, 0, 0.496227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470407,-99) , 
10, -2.53483, 0, 0, 0.515998,-99) , 
NN(
0, 
0, 
-1, -1.69371, 0, -1, 0.393698,-99) , 
10, -1.63833, 1, 0, 0.450685,-99) , 
8, -0.714137, 0, 0, 0.485927,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0401685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.34685, 1, -1, 0.485342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282857,-99) , 
5, -0.718014, 0, 0, 0.414265,-99) , 
8, -1.57127, 0, 0, 0.480726,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0237054);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.34693, 1, -1, 0.493024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305623,-99) , 
9, -2.65458, 1, 0, 0.423565,-99) , 
8, -1.57141, 0, 0, 0.488479,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0219557);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.34691, 1, -1, 0.493841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319257,-99) , 
5, -0.717998, 0, 0, 0.42315,-99) , 
8, -1.57142, 0, 0, 0.489216,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0462686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434833,-99) , 
2, -0.214257, 0, 0, 0.508317,-99) , 
NN(
0, 
0, 
-1, -0.714536, 1, -1, 0.463799,-99) , 
10, 1.49784, 1, 0, 0.499459,-99) , 
NN(
0, 
0, 
-1, -2.60816, 1, -1, 0.412425,-99) , 
8, -1.57141, 0, 0, 0.493813,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0326238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476655,-99) , 
10, 1.10255, 1, 0, 0.497722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397496,-99) , 
8, 2.34697, 1, 0, 0.494801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301157,-99) , 
9, -2.65458, 1, 0, 0.427096,-99) , 
8, -1.57122, 0, 0, 0.490378,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0253798);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.57122, 0, -1, 0.487313,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0300308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432856,-99) , 
2, 0.192905, 1, 0, 0.500293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317898,-99) , 
9, -2.65458, 1, 0, 0.429624,-99) , 
8, -1.57125, 0, 0, 0.495719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404727,-99) , 
2, -0.214769, 0, 0, 0.4919,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0435591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474718,-99) , 
8, 0.990589, 1, 0, 0.505877,-99) , 
NN(
0, 
0, 
-1, -0.428274, 0, -1, 0.476929,-99) , 
10, 0.842378, 1, 0, 0.497812,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.466506,-99) , 
0, 0.499995, 1, 0, 0.487466,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0395258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494815,-99) , 
9, 1.76838, 0, 0, 0.49894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38978,-99) , 
4, 0.999048, 0, 0, 0.4951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524015,-99) , 
NN(
0, 
0, 
-1, -1.69373, 0, -1, 0.357844,-99) , 
9, -3.72151, 1, 0, 0.43808,-99) , 
8, -1.28554, 0, 0, 0.489198,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0413058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443156,-99) , 
4, 0.999524, 0, 0, 0.505815,-99) , 
NN(
0, 
0, 
-1, 0.551089, 1, -1, 0.421948,-99) , 
5, 0.80723, 1, 0, 0.500779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513516,-99) , 
NN(
0, 
0, 
-1, -1.69377, 0, -1, 0.368266,-99) , 
10, -1.70024, 1, 0, 0.441247,-99) , 
8, -1.28552, 0, 0, 0.494645,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0221758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433027,-99) , 
8, 2.34697, 1, 0, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417894,-99) , 
3, 9.07131, 1, 0, 0.497148,-99) , 
NN(
0, 
0, 
-1, -0.715704, 0, -1, 0.42815,-99) , 
8, -1.57117, 0, 0, 0.492689,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0584732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488197,-99) , 
5, 0.0584515, 1, 0, 0.506269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337544,-99) , 
8, 0.877732, 1, 0, 0.430081,-99) , 
5, 0.709809, 1, 0, 0.497057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452657,-99) , 
10, -2.29682, 0, 0, 0.4945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392378,-99) , 
7, -951.286, 0, 0, 0.428928,-99) , 
10, -1.10523, 1, 0, 0.465851,-99) , 
8, -0.428385, 0, 0, 0.487416,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0515233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475689,-99) , 
10, 1.82106, 1, 0, 0.49824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406454,-99) , 
5, 0.80723, 1, 0, 0.492272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48182,-99) , 
5, 0.522996, 0, 0, 0.50026,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.417531,-99) , 
9, -3.33462, 1, 0, 0.460947,-99) , 
8, -0.428605, 0, 0, 0.482583,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0467419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543032,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480899,-99) , 
9, 1.99221, 0, 0, 0.484229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39239,-99) , 
4, 0.999048, 0, 0, 0.481102,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0969435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369383,-99) , 
7, -1.00023, 0, 0, 0.507071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472901,-99) , 
10, 3.22526, 0, 0, 0.482255,-99) , 
7, -951.286, 0, 0, 0.494332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421258,-99) , 
3, 9.38081, 1, 0, 0.491922,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0426538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485727,-99) , 
7, -951.286, 1, 0, 0.497328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396242,-99) , 
8, 0.755536, 1, 0, 0.467035,-99) , 
5, 0.712837, 1, 0, 0.493844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39091,-99) , 
9, -3.61024, 1, 0, 0.458245,-99) , 
8, -1.28546, 0, 0, 0.490153,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0721378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810543, 0, 1, 0.576261,-99) , 
NN(
0, 
0, 
-1, 0.0012936, 0, -1, 0.478716,-99) , 
6, 0.00679159, 0, 0, 0.496351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278747,-99) , 
6, 0.0237713, 1, 0, 0.490873,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0298421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495978,-99) , 
3, 2.3243, 0, 0, 0.506271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436656,-99) , 
3, 9.39171, 1, 0, 0.50401,-99) , 
NN(
0, 
0, 
-1, -2.59052, 1, -1, 0.44698,-99) , 
8, -1.57141, 0, 0, 0.500364,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0439625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484259,-99) , 
10, 1.94816, 1, 0, 0.506951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42684,-99) , 
9, -3.61433, 1, 0, 0.470471,-99) , 
8, -0.714148, 0, 0, 0.498708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424778,-99) , 
4, 0.999048, 0, 0, 0.496156,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0469127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484087,-99) , 
5, 0.141411, 1, 0, 0.50771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456649,-99) , 
10, -0.838297, 1, 0, 0.488069,-99) , 
8, -0.142853, 0, 0, 0.499694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433014,-99) , 
4, 0.999048, 0, 0, 0.497409,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0273511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474263,-99) , 
5, 0.712774, 1, 0, 0.503389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43899,-99) , 
2, -0.132602, 0, 0, 0.500234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431831,-99) , 
2, -0.214218, 0, 0, 0.49731,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0170885);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.85696, 0, -1, 0.491457,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0381741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494409,-99) , 
4, 0.999524, 1, 0, 0.49873,-99) , 
9, -1.74056, 0, 0, 0.502937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445614,-99) , 
8, -0.14271, 0, 0, 0.492301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341609,-99) , 
5, 0.236317, 1, 0, 0.479072,-99) , 
10, 0.71673, 1, 0, 0.495589,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0444468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491681,-99) , 
1, -0.00208011, 1, 0, 0.50451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422161,-99) , 
5, -0.715797, 1, 0, 0.477884,-99) , 
10, 1.11977, 1, 0, 0.497876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35117,-99) , 
9, -2.82901, 1, 0, 0.446751,-99) , 
8, -1.57141, 0, 0, 0.494621,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0424891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462664,-99) , 
10, -2.19605, 0, 0, 0.50856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432921,-99) , 
5, -0.809627, 0, 0, 0.504882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422183,-99) , 
2, -0.068022, 0, 0, 0.491652,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.405476,-99) , 
5, -0.716712, 1, 0, 0.469681,-99) , 
10, 1.39755, 1, 0, 0.497703,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0459753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499988,-99) , 
9, -2.34426, 0, 0, 0.509115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334184,-99) , 
5, 0.299803, 1, 0, 0.445522,-99) , 
10, 0.551029, 1, 0, 0.501862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458231,-99) , 
8, -0.428444, 0, 0, 0.487139,-99) , 
NN(
0, 
0, 
-1, -0.140128, 0, -1, 0.42437,-99) , 
2, -0.0724774, 0, 0, 0.476457,-99) , 
5, -0.33429, 0, 0, 0.491076,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0413522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467008,-99) , 
10, 0.951958, 1, 0, 0.512483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434063,-99) , 
3, 9.28094, 1, 0, 0.508624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469875,-99) , 
5, -0.714494, 1, 0, 0.487734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417717,-99) , 
8, -1.57144, 0, 0, 0.481454,-99) , 
5, -0.333886, 0, 0, 0.497019,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0278062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477165,-99) , 
10, 1.2326, 1, 0, 0.498657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424111,-99) , 
10, -2.28134, 0, 0, 0.49593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437208,-99) , 
8, -1.85692, 0, 0, 0.493781,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0594097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810003, 0, 1, 0.58334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46299,-99) , 
5, -0.333895, 0, 0, 0.488899,-99) , 
6, 0.00789687, 0, 0, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297387,-99) , 
6, 0.0236981, 1, 0, 0.496624,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0308124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485295,-99) , 
0, 0.49809, 1, 0, 0.495354,-99) , 
NN(
0, 
0, 
-1, 0.137638, 0, -1, 0.437804,-99) , 
2, -0.193805, 0, 0, 0.492233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427797,-99) , 
2, 0.214323, 1, 0, 0.489767,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0395937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493305,-99) , 
9, -1.69428, 0, 0, 0.498515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460459,-99) , 
9, 1.44896, 0, 0, 0.474337,-99) , 
10, 0.926524, 1, 0, 0.492124,-99) , 
NN(
0, 
0, 
-1, 4.49894, 1, -1, 0.461018,-99) , 
0, 0.493328, 0, 0, 0.487939,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0527078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0360347, 1, 1, 0.602075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453059,-99) , 
6, 0.00128583, 0, 0, 0.488687,-99) , 
6, 0.00900085, 0, 0, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322186,-99) , 
6, 0.0236295, 1, 0, 0.496204,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0369955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404075,-99) , 
10, -0.710459, 1, 0, 0.493768,-99) , 
9, -2.89452, 0, 0, 0.503559,-99) , 
NN(
0, 
0, 
-1, 0.711864, 1, -1, 0.482178,-99) , 
10, -0.478358, 1, 0, 0.491108,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0473975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47182, 1, 1, 0.550006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487814,-99) , 
5, 0.522592, 0, 0, 0.497166,-99) , 
9, -1.82859, 0, 0, 0.501773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478081,-99) , 
8, 1.85718, 0, 0, 0.489305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354075,-99) , 
5, 0.235191, 1, 0, 0.477548,-99) , 
10, 0.71673, 1, 0, 0.494376,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0299508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493692,-99) , 
2, 0.0120145, 0, 0, 0.501138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40957,-99) , 
10, 0.0620134, 1, 0, 0.468845,-99) , 
2, -0.11234, 0, 0, 0.497344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435854,-99) , 
2, 0.214083, 1, 0, 0.494994,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0189079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
8, 1.85714, 0, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446989,-99) , 
5, 0.807927, 1, 0, 0.497746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434489,-99) , 
4, 0.999048, 0, 0, 0.495545,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0622937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247554,-99) , 
7, -2.14283, 0, 0, 0.510769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483789,-99) , 
9, 1.83707, 0, 0, 0.49311,-99) , 
7, -951.286, 0, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446004,-99) , 
3, 9.33743, 1, 0, 0.49998,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.019738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499885,-99) , 
9, -3.02114, 0, 0, 0.510491,-99) , 
NN(
0, 
0, 
-1, 0.711823, 1, -1, 0.493073,-99) , 
10, -0.562581, 1, 0, 0.50006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437603,-99) , 
0, 0.489519, 0, 0, 0.498403,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0395003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495242,-99) , 
5, 0.141243, 1, 0, 0.510964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412178,-99) , 
5, -0.336105, 0, 0, 0.47686,-99) , 
2, -0.112602, 0, 0, 0.506953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435526,-99) , 
2, 0.21376, 1, 0, 0.504256,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0285771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484244,-99) , 
2, 0.100586, 1, 0, 0.507571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463137,-99) , 
2, -0.132625, 0, 0, 0.505397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451045,-99) , 
2, -0.214257, 0, 0, 0.503044,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0154115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499869,-99) , 
9, 1.8082, 0, 0, 0.50239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431277,-99) , 
10, -0.0489618, 1, 0, 0.47194,-99) , 
2, -0.112359, 0, 0, 0.498857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45469,-99) , 
2, 0.214029, 1, 0, 0.497172,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0221165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498329,-99) , 
5, -0.714646, 1, 0, 0.504075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440315,-99) , 
10, -2.13785, 0, 0, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444942,-99) , 
8, -1.85683, 0, 0, 0.498731,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0400752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.107473, 0, 1, 0.533937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494826,-99) , 
5, 0.521694, 0, 0, 0.502767,-99) , 
1, 0.00258747, 0, 0, 0.511029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487475,-99) , 
8, 1.85718, 0, 0, 0.496402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366696,-99) , 
5, 0.237004, 1, 0, 0.484927,-99) , 
10, 0.71673, 1, 0, 0.503112,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0227516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454115,-99) , 
10, -2.04078, 0, 0, 0.503475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414743,-99) , 
5, -0.715685, 0, 0, 0.465591,-99) , 
8, -1.57141, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441061,-99) , 
0, 0.489519, 0, 0, 0.499554,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0421428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434284,-99) , 
10, -1.11861, 0, 0, 0.511802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483232,-99) , 
5, 0.416143, 0, 0, 0.495277,-99) , 
8, -0.142768, 0, 0, 0.505049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453389,-99) , 
4, 0.999048, 0, 0, 0.503246,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0368771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409707,-99) , 
10, -0.345833, 1, 0, 0.498066,-99) , 
9, -2.48391, 0, 0, 0.506748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403718,-99) , 
8, -1.28548, 0, 0, 0.497406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353622,-99) , 
5, 0.711866, 1, 0, 0.489609,-99) , 
10, -0.092933, 1, 0, 0.498582,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0197396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.541234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438684,-99) , 
10, 0.622225, 1, 0, 0.498919,-99) , 
9, -1.53533, 0, 0, 0.501869,-99) , 
NN(
0, 
0, 
-1, -0.0717479, 0, -1, 0.48085,-99) , 
10, 0.926524, 1, 0, 0.496201,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0165738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461375,-99) , 
2, -0.215154, 0, 0, 0.500431,-99) , 
NN(
0, 
0, 
-1, -0.225164, 0, -1, 0.465028,-99) , 
0, 0.504757, 1, 0, 0.498135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394939,-99) , 
8, 0.430396, 1, 0, 0.450356,-99) , 
5, 0.807993, 1, 0, 0.495406,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0309792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471867,-99) , 
4, 0.999977, 0, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460166,-99) , 
4, 0.999524, 0, 0, 0.494795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387083,-99) , 
8, 0.432234, 1, 0, 0.446337,-99) , 
5, 0.807991, 1, 0, 0.492063,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0212227);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.807991, 1, -1, 0.48939,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0173054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477573,-99) , 
2, -0.0706397, 0, 0, 0.496571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394161,-99) , 
8, 0.430027, 1, 0, 0.453357,-99) , 
5, 0.805919, 1, 0, 0.494127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428828,-99) , 
0, 0.489519, 0, 0, 0.492472,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0348115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468085,-99) , 
10, 1.54888, 1, 0, 0.53899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489294,-99) , 
9, -4.49154, 1, 0, 0.491372,-99) , 
8, 1.85705, 0, 0, 0.494621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400494,-99) , 
8, 0.430096, 1, 0, 0.452379,-99) , 
5, 0.807926, 1, 0, 0.492222,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0517876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810003, 0, 1, 0.578015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47019,-99) , 
6, 0.00186357, 0, 0, 0.489928,-99) , 
6, 0.00782737, 0, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319307,-99) , 
6, 0.0234841, 1, 0, 0.497458,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0303805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482449,-99) , 
7, -951.286, 1, 0, 0.51273,-99) , 
NN(
0, 
0, 
-1, 1.45816, 1, -1, 0.489757,-99) , 
5, -0.714687, 1, 0, 0.494827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44386,-99) , 
8, -1.85696, 0, 0, 0.492995,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0262651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490152,-99) , 
10, 0.417484, 1, 0, 0.503071,-99) , 
NN(
0, 
0, 
-1, -0.336111, 1, -1, 0.463672,-99) , 
0, 0.49088, 0, 0, 0.500849,-99) , 
NN(
0, 
0, 
-1, 0.143939, 0, -1, 0.463687,-99) , 
0, 0.504757, 1, 0, 0.498476,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.033407);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451361,-99) , 
8, -1.57143, 0, 0, 0.502144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448377,-99) , 
10, -2.57109, 0, 0, 0.50027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431168,-99) , 
7, -951.286, 1, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404604,-99) , 
5, -0.812047, 1, 0, 0.473387,-99) , 
10, 2.0312, 1, 0, 0.496691,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0350444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451486,-99) , 
4, 0.999955, 0, 0, 0.500706,-99) , 
NN(
0, 
0, 
-1, -0.622595, 1, -1, 0.483053,-99) , 
9, -2.59957, 0, 0, 0.492406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439743,-99) , 
4, 0.999048, 0, 0, 0.490634,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.026467);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464734,-99) , 
5, 0.710285, 0, 0, 0.541407,-99) , 
NN(
0, 
0, 
-1, 0.807927, 1, -1, 0.492044,-99) , 
4, 0.999524, 1, 0, 0.494823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44127,-99) , 
3, 9.25993, 1, 0, 0.493112,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0200503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480359,-99) , 
5, 0.711864, 1, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, -0.621429, 0, -1, 0.467472,-99) , 
2, -0.112501, 0, 0, 0.497899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454069,-99) , 
2, 0.213932, 1, 0, 0.496239,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0166424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496506,-99) , 
3, 8.61282, 0, 0, 0.498122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453432,-99) , 
5, 0.807926, 1, 0, 0.496201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442969,-99) , 
4, 0.999048, 0, 0, 0.494416,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0315064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41126,-99) , 
8, 0.245956, 1, 0, 0.504113,-99) , 
9, -3.03618, 0, 0, 0.512322,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490603,-99) , 
10, -0.734196, 1, 0, 0.498243,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0102039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499447,-99) , 
3, 8.67027, 0, 0, 0.500948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461483,-99) , 
2, 0.215626, 1, 0, 0.49962,-99) , 
NN(
0, 
0, 
-1, 0.429847, 1, -1, 0.463787,-99) , 
5, 0.807991, 1, 0, 0.4976,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0210968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.503985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418376,-99) , 
5, -0.827912, 1, 0, 0.48243,-99) , 
10, 2.06512, 1, 0, 0.500957,-99) , 
NN(
0, 
0, 
-1, 0.430378, 1, -1, 0.453279,-99) , 
5, 0.80723, 1, 0, 0.498286,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0357808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439506,-99) , 
8, -1.57122, 0, 0, 0.502692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453934,-99) , 
10, -2.58859, 0, 0, 0.501005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424541,-99) , 
7, -951.286, 1, 0, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416107,-99) , 
5, -0.81261, 1, 0, 0.475798,-99) , 
10, 2.01783, 1, 0, 0.49763,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0312137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492059,-99) , 
5, 0.612639, 0, 0, 0.498552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407177,-99) , 
5, 0.519609, 1, 0, 0.47756,-99) , 
8, 1.28579, 1, 0, 0.495426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449067,-99) , 
3, 9.402, 1, 0, 0.493983,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0274799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435995,-99) , 
4, 0.999799, 0, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45357,-99) , 
4, 0.999531, 0, 0, 0.500881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443068,-99) , 
7, -951.286, 0, 0, 0.503579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395118,-99) , 
8, 1.01406, 1, 0, 0.470937,-99) , 
5, 0.710871, 1, 0, 0.497677,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0380322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489572,-99) , 
9, -2.54336, 0, 0, 0.498709,-99) , 
NN(
0, 
0, 
-1, 0.521629, 1, -1, 0.482477,-99) , 
10, -0.108208, 1, 0, 0.490998,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.458309,-99) , 
0, 0.504757, 1, 0, 0.488937,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0307153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455155,-99) , 
5, 0.721839, 1, 0, 0.508941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486079,-99) , 
5, 0.291337, 0, 0, 0.494233,-99) , 
8, -0.142744, 0, 0, 0.502889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449945,-99) , 
5, 0.862302, 1, 0, 0.474179,-99) , 
5, 0.807929, 1, 0, 0.501233,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0301845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49643,-99) , 
1, -0.00232929, 1, 0, 0.506349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480325,-99) , 
7, -951.286, 0, 0, 0.490826,-99) , 
5, -0.397325, 0, 0, 0.499849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403865,-99) , 
8, 0.430052, 1, 0, 0.45583,-99) , 
5, 0.807993, 1, 0, 0.497388,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0157374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528426,-99) , 
NN(
0, 
0, 
-1, -1.57122, 0, -1, 0.495383,-99) , 
9, -4.45095, 1, 0, 0.49742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427954,-99) , 
8, 0.429898, 1, 0, 0.466475,-99) , 
5, 0.807992, 1, 0, 0.495641,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0291918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494497,-99) , 
8, -0.71417, 0, 0, 0.517545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493001,-99) , 
5, -0.827975, 1, 0, 0.496811,-99) , 
3, 3.04205, 0, 0, 0.504397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414346,-99) , 
8, 0.430396, 1, 0, 0.461573,-99) , 
5, 0.805923, 1, 0, 0.502002,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0385409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.336161, 0, 1, 0.562828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450362,-99) , 
8, 0.891777, 1, 0, 0.499394,-99) , 
9, -2.31229, 0, 0, 0.508051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460797,-99) , 
2, 0.0743673, 1, 0, 0.499601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390932,-99) , 
5, 0.236352, 1, 0, 0.486989,-99) , 
10, 0.360757, 1, 0, 0.500227,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.026065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456385,-99) , 
5, -0.82799, 0, 0, 0.504339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411299,-99) , 
5, -0.742031, 1, 0, 0.486553,-99) , 
10, 1.81536, 1, 0, 0.501395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423804,-99) , 
8, 0.429528, 1, 0, 0.464261,-99) , 
5, 0.805919, 1, 0, 0.499257,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.020308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494763,-99) , 
5, 0.711847, 0, 0, 0.540209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494385,-99) , 
9, 2.01077, 0, 0, 0.496179,-99) , 
4, 0.999524, 1, 0, 0.498578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449905,-99) , 
3, 9.37272, 1, 0, 0.497072,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0323576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490479,-99) , 
10, -0.313228, 1, 0, 0.499596,-99) , 
8, 1.85707, 0, 0, 0.501936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453569,-99) , 
7, -951.286, 1, 0, 0.505127,-99) , 
NN(
0, 
0, 
-1, 2.32519, 1, -1, 0.431798,-99) , 
5, -0.8109, 1, 0, 0.479495,-99) , 
10, 1.74667, 1, 0, 0.498317,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0341443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498717,-99) , 
10, 0.280107, 1, 0, 0.508288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484073,-99) , 
4, 0.999524, 1, 0, 0.490723,-99) , 
9, -2.48512, 0, 0, 0.499553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424847,-99) , 
3, 9.33163, 1, 0, 0.497245,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.055312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475839,-99) , 
9, -2.83155, 0, 0, 0.508654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487645,-99) , 
5, 0.223453, 0, 0, 0.494783,-99) , 
8, 0.142959, 0, 0, 0.50142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326116,-99) , 
7, -0.433777, 0, 0, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423346,-99) , 
7, -951.286, 0, 0, 0.473769,-99) , 
5, 0.712834, 1, 0, 0.498509,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0284384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494529,-99) , 
3, 4.83566, 1, 0, 0.539196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452595,-99) , 
2, 0.138807, 1, 0, 0.485059,-99) , 
5, -0.14435, 0, 0, 0.512824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492255,-99) , 
2, -0.00355863, 1, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0.0451691, 1, -1, 0.484192,-99) , 
0, 0.500947, 1, 0, 0.49696,-99) , 
2, 0.0712424, 0, 0, 0.499456,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0344944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90606, 0, 1, 0.509671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301104,-99) , 
7, -1.8572, 0, 0, 0.49231,-99) , 
7, -951.286, 1, 0, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0.862377, 1, -1, 0.463742,-99) , 
5, 0.807991, 1, 0, 0.499286,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0385619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497829,-99) , 
10, 0.108257, 1, 0, 0.513762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461365,-99) , 
10, -0.546851, 1, 0, 0.49591,-99) , 
9, -2.51372, 0, 0, 0.503117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444937,-99) , 
7, -951.286, 1, 0, 0.492809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422311,-99) , 
5, -0.717371, 1, 0, 0.479305,-99) , 
10, 1.74667, 1, 0, 0.499247,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0217213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470472,-99) , 
10, -0.740417, 1, 0, 0.529241,-99) , 
NN(
0, 
0, 
-1, 0.140581, 1, -1, 0.493134,-99) , 
4, 0.999524, 1, 0, 0.495142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452125,-99) , 
3, 9.38081, 1, 0, 0.49379,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0501924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.597696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480564,-99) , 
6, 0.00291058, 0, 0, 0.494151,-99) , 
6, 0.0101872, 0, 0, 0.502542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329284,-99) , 
6, 0.0237713, 1, 0, 0.498219,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0302173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484296,-99) , 
5, 0.426762, 1, 0, 0.503136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447287,-99) , 
5, 0.229856, 0, 0, 0.477864,-99) , 
2, -0.112873, 0, 0, 0.500219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462342,-99) , 
2, 0.213484, 1, 0, 0.49881,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0195795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447823,-99) , 
10, 1.59898, 1, 0, 0.49772,-99) , 
9, 0.348513, 0, 0, 0.500043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431275,-99) , 
5, -0.910657, 1, 0, 0.477956,-99) , 
10, 2.77661, 1, 0, 0.498209,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0152511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476832,-99) , 
10, 2.60558, 1, 0, 0.499666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458639,-99) , 
8, -1.57141, 0, 0, 0.497971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451899,-99) , 
10, -2.39957, 0, 0, 0.496018,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0308767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477617,-99) , 
5, 0.711304, 0, 0, 0.535137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480058,-99) , 
9, -2.39492, 0, 0, 0.491336,-99) , 
4, 0.999524, 1, 0, 0.49377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444712,-99) , 
3, 9.34253, 1, 0, 0.492229,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0344457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495764,-99) , 
5, -0.336241, 0, 0, 0.531736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492158,-99) , 
5, -0.618328, 1, 0, 0.49493,-99) , 
9, -1.60831, 0, 0, 0.500077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470018,-99) , 
7, -951.286, 1, 0, 0.497057,-99) , 
NN(
0, 
0, 
-1, 1.86985, 1, -1, 0.434425,-99) , 
5, -0.716724, 1, 0, 0.480473,-99) , 
10, 1.34887, 1, 0, 0.496002,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0467776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.541537, 1, 1, 0.574694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486758,-99) , 
6, 0.00514326, 0, 0, 0.491457,-99) , 
6, 0.00900085, 0, 0, 0.50038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326702,-99) , 
6, 0.0236298, 1, 0, 0.495995,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0255409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236354, 0, 1, 0.508736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471352,-99) , 
10, -2.39957, 0, 0, 0.506785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46603,-99) , 
5, -0.864137, 1, 0, 0.488469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440047,-99) , 
5, -0.714692, 1, 0, 0.477225,-99) , 
10, 1.49332, 1, 0, 0.501152,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0147993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499229,-99) , 
8, 1.85713, 0, 0, 0.501498,-99) , 
NN(
0, 
0, 
-1, -0.812562, 1, -1, 0.477584,-99) , 
10, 1.99143, 1, 0, 0.498077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443932,-99) , 
4, 0.999048, 0, 0, 0.496295,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0253137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468974,-99) , 
5, -0.809667, 0, 0, 0.50553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440029,-99) , 
5, -0.81164, 1, 0, 0.484557,-99) , 
10, 1.99143, 1, 0, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449013,-99) , 
3, 9.38661, 1, 0, 0.500833,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0176118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492788,-99) , 
7, -951.286, 0, 0, 0.498951,-99) , 
NN(
0, 
0, 
-1, -0.914033, 1, -1, 0.470675,-99) , 
10, 3.05633, 1, 0, 0.497065,-99) , 
8, 2.14285, 0, 0, 0.498544,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0424961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481863,-99) , 
10, 1.78099, 1, 0, 0.510003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487777,-99) , 
5, 0.549706, 0, 0, 0.492307,-99) , 
8, 0.428607, 0, 0, 0.49905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465904,-99) , 
10, -1.56226, 0, 0, 0.512594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41062,-99) , 
8, 0.715438, 1, 0, 0.474648,-99) , 
5, 0.712834, 1, 0, 0.496517,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.032133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.239872, 0, 1, 0.532681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492391,-99) , 
1, 0.00652116, 0, 0, 0.495191,-99) , 
9, -1.64617, 0, 0, 0.50072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465438,-99) , 
3, 1.80496, 0, 0, 0.486751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409285,-99) , 
5, -0.621052, 1, 0, 0.474032,-99) , 
10, 1.33432, 1, 0, 0.495162,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0786893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470216,-99) , 
5, 0.743575, 1, 0, 0.530603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476581,-99) , 
9, 1.71131, 0, 0, 0.490873,-99) , 
5, -0.334242, 0, 0, 0.510278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431939,-99) , 
10, 2.3341, 1, 0, 0.514477,-99) , 
NN(
0, 
0, 
-1, 0.7195, 1, -1, 0.332007,-99) , 
7, -1.57121, 0, 0, 0.493645,-99) , 
7, -951.286, 1, 0, 0.502201,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0361062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425346,-99) , 
2, -0.11083, 0, 0, 0.502764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483943,-99) , 
1, -0.00376688, 1, 0, 0.490531,-99) , 
5, -0.619382, 1, 0, 0.494105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467528,-99) , 
2, 0.21442, 1, 0, 0.493089,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0409052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.951704, 0, 1, 0.508279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373105,-99) , 
7, -1.2858, 0, 0, 0.491941,-99) , 
7, -951.286, 1, 0, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460952,-99) , 
4, 0.999048, 0, 0, 0.499079,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.045647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.59338, 0, 1, 0.510886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413133,-99) , 
10, -1.05588, 1, 0, 0.467462,-99) , 
8, -0.999856, 0, 0, 0.503468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433969,-99) , 
7, -1.16287, 0, 0, 0.497806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254972,-99) , 
7, -2.14245, 0, 0, 0.485106,-99) , 
7, -951.286, 1, 0, 0.494562,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0249502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490831,-99) , 
5, -0.714521, 1, 0, 0.493722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434934,-99) , 
5, -0.910618, 1, 0, 0.470243,-99) , 
10, 2.77661, 1, 0, 0.49174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451678,-99) , 
2, -0.213882, 0, 0, 0.490045,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0227022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568632,-99) , 
NN(
0, 
0, 
-1, 1.46088, 1, -1, 0.491943,-99) , 
9, 0.855289, 0, 0, 0.494101,-99) , 
NN(
0, 
0, 
-1, -0.907803, 1, -1, 0.466749,-99) , 
10, 3.08085, 1, 0, 0.492254,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0331259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497302,-99) , 
9, -1.52059, 0, 0, 0.505228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48235,-99) , 
5, 0.51462, 0, 0, 0.490256,-99) , 
8, -0.14271, 0, 0, 0.498744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463883,-99) , 
10, 4.15747, 1, 0, 0.488018,-99) , 
NN(
0, 
0, 
-1, 2.45877, 1, -1, 0.445102,-99) , 
9, 1.12289, 0, 0, 0.47001,-99) , 
10, 2.0312, 1, 0, 0.494901,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0303604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483576,-99) , 
5, -0.528376, 0, 0, 0.524112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459259,-99) , 
10, 0.361687, 1, 0, 0.498265,-99) , 
9, -1.73505, 0, 0, 0.501023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476854,-99) , 
8, 1.85717, 0, 0, 0.484995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419192,-99) , 
5, -0.143604, 1, 0, 0.478358,-99) , 
10, 0.969131, 1, 0, 0.495036,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0370677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441624,-99) , 
8, -1.37055, 0, 0, 0.512136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489734,-99) , 
8, -1.57003, 1, 0, 0.492731,-99) , 
5, -0.714631, 1, 0, 0.495937,-99) , 
NN(
0, 
0, 
-1, 1.80898, 0, -1, 0.456437,-99) , 
10, 2.77661, 1, 0, 0.492761,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0348538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458512,-99) , 
8, -0.605782, 0, 0, 0.538124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459297,-99) , 
10, 0.317997, 1, 0, 0.501326,-99) , 
9, -1.75577, 0, 0, 0.505171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485082,-99) , 
8, 1.85717, 0, 0, 0.492166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416185,-99) , 
5, -0.144868, 1, 0, 0.484284,-99) , 
10, 0.926524, 1, 0, 0.499579,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0182415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495744,-99) , 
4, 0.999524, 1, 0, 0.498485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460549,-99) , 
3, 9.38081, 1, 0, 0.497226,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.470336,-99) , 
10, 3.05633, 1, 0, 0.495362,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0337684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.155862, 1, 1, 0.515328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490067,-99) , 
4, 0.999524, 1, 0, 0.493337,-99) , 
9, -2.2729, 0, 0, 0.500712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459731,-99) , 
7, -951.286, 1, 0, 0.496909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417465,-99) , 
5, -0.716359, 1, 0, 0.482797,-99) , 
10, 1.73748, 1, 0, 0.497768,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0129782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475939,-99) , 
10, 3.15261, 1, 0, 0.500658,-99) , 
8, 2.14289, 0, 0, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448762,-99) , 
4, 0.999048, 0, 0, 0.500336,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0299955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.147434, 0, 1, 0.535854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477395,-99) , 
10, -1.93172, 0, 0, 0.502036,-99) , 
9, -2.06588, 0, 0, 0.506795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491674,-99) , 
8, 1.85721, 0, 0, 0.499073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40947,-99) , 
5, 0.237003, 1, 0, 0.491413,-99) , 
10, 0.71673, 1, 0, 0.502122,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0238066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493557,-99) , 
5, -0.483703, 0, 0, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475241,-99) , 
5, 0.806972, 1, 0, 0.501148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487455,-99) , 
5, -0.723539, 1, 0, 0.492956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452312,-99) , 
5, -0.904819, 0, 0, 0.489845,-99) , 
0, 0.499043, 1, 0, 0.496429,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0238766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447818,-99) , 
8, 1.2938, 1, 0, 0.515229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433599,-99) , 
4, 0.999785, 0, 0, 0.498476,-99) , 
5, 0.617621, 0, 0, 0.501154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471698,-99) , 
8, -0.142733, 0, 0, 0.492172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42805,-99) , 
3, 4.49023, 1, 0, 0.478702,-99) , 
0, 0.493329, 0, 0, 0.498168,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0356667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452046,-99) , 
8, -0.714407, 0, 0, 0.524352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490339,-99) , 
8, -1.85696, 1, 0, 0.493446,-99) , 
9, -1.58306, 0, 0, 0.498121,-99) , 
NN(
0, 
0, 
-1, -0.0708549, 0, -1, 0.481387,-99) , 
10, 1.47124, 1, 0, 0.494901,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0210925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487313,-99) , 
5, 0.712858, 0, 0, 0.538753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487929,-99) , 
9, -2.68977, 0, 0, 0.49666,-99) , 
4, 0.999524, 1, 0, 0.498987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461532,-99) , 
3, 9.3513, 1, 0, 0.497786,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.011299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489077,-99) , 
10, 0.926524, 1, 0, 0.49735,-99) , 
3, 9.12912, 0, 0, 0.498421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454411,-99) , 
4, 0.999048, 0, 0, 0.49698,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0744487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462146,-99) , 
4, 0.999995, 0, 0, 0.512677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425434,-99) , 
4, 0.999905, 0, 0, 0.507172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494627,-99) , 
9, -2.71527, 0, 0, 0.504541,-99) , 
NN(
0, 
0, 
-1, 0.499884, 1, -1, 0.449997,-99) , 
10, 0.1058, 1, 0, 0.494471,-99) , 
5, 0.0467398, 1, 0, 0.501964,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0188013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488011,-99) , 
5, 0.712858, 0, 0, 0.531699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495494,-99) , 
2, 0.0750975, 0, 0, 0.498574,-99) , 
4, 0.999524, 1, 0, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459336,-99) , 
3, 9.38661, 1, 0, 0.49913,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0366067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473669,-99) , 
8, -0.105679, 0, 0, 0.540108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423223,-99) , 
10, 0.137372, 1, 0, 0.500681,-99) , 
9, -2.18814, 0, 0, 0.505091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486421,-99) , 
8, 2.14288, 0, 0, 0.495206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417031,-99) , 
5, 0.42732, 1, 0, 0.488692,-99) , 
10, 0.417484, 1, 0, 0.499198,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0387797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0133609, 1, 1, 0.57544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490053,-99) , 
10, -0.615186, 1, 0, 0.499128,-99) , 
6, 0.0101411, 0, 0, 0.505239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355039,-99) , 
6, 0.0236633, 1, 0, 0.501461,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0229435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490455,-99) , 
9, -2.27967, 0, 0, 0.497038,-99) , 
9, 1.83089, 0, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434574,-99) , 
4, 0.999048, 0, 0, 0.497221,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0205038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482641,-99) , 
10, 2.94808, 1, 0, 0.506142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474177,-99) , 
8, -1.57141, 0, 0, 0.504816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476505,-99) , 
10, -2.33914, 0, 0, 0.503467,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0243875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488138,-99) , 
5, 0.427334, 1, 0, 0.51565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493437,-99) , 
5, 0.61065, 0, 0, 0.496847,-99) , 
8, 1.00007, 0, 0, 0.500927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4643,-99) , 
4, 0.999048, 0, 0, 0.499738,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0249261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.527116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464423,-99) , 
8, -1.57177, 0, 0, 0.520074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
8, 1.57156, 0, 0, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453897,-99) , 
10, 1.49513, 1, 0, 0.499177,-99) , 
5, -0.714526, 1, 0, 0.503971,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0239898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714721, 1, 1, 0.51388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479154,-99) , 
10, 3.16741, 1, 0, 0.511742,-99) , 
NN(
NN(
0, 
0, 
-1, 0.608155, 0, 1, 0.509545,-99) , 
NN(
0, 
0, 
-1, -0.714285, 0, -1, 0.490144,-99) , 
10, -0.562581, 1, 0, 0.497873,-99) , 
0, 0.498091, 1, 0, 0.504722,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0179709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489092,-99) , 
8, -0.715727, 0, 0, 0.508036,-99) , 
5, -0.755318, 0, 0, 0.514088,-99) , 
NN(
NN(
0, 
0, 
-1, -1.38624, 0, 1, 0.504022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466713,-99) , 
10, 1.49789, 1, 0, 0.501896,-99) , 
5, -0.714526, 1, 0, 0.50467,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.00898117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.04045, 0, 1, 0.502533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469724,-99) , 
10, 4.15532, 1, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473322,-99) , 
0, 0.490472, 0, 0, 0.50019,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0181632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428807, 1, 1, 0.557751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473652,-99) , 
7, -951.286, 1, 0, 0.522407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498189,-99) , 
9, -4.56861, 1, 0, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447154,-99) , 
10, 2.26593, 1, 0, 0.498765,-99) , 
9, 0.851357, 0, 0, 0.500967,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0293776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46109,-99) , 
10, -2.06183, 0, 0, 0.503802,-99) , 
9, -4.72052, 1, 0, 0.505743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499057,-99) , 
8, -0.144283, 1, 0, 0.519223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445915,-99) , 
7, -951.286, 0, 0, 0.473327,-99) , 
5, -0.904829, 1, 0, 0.488159,-99) , 
10, 1.34887, 1, 0, 0.50213,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0310199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.811338, 0, 1, 0.568317,-99) , 
NN(
0, 
0, 
-1, 9.25993, 1, -1, 0.495007,-99) , 
6, 0.00900257, 0, 0, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335586,-99) , 
6, 0.0236326, 1, 0, 0.498506,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0192676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.18782, 1, 1, 0.531139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49709,-99) , 
8, 0.142859, 0, 0, 0.503656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466112,-99) , 
10, 2.32961, 1, 0, 0.50174,-99) , 
9, 1.54117, 0, 0, 0.503637,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0194322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.50764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450368,-99) , 
8, -1.57141, 0, 0, 0.505527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481742,-99) , 
10, -2.21706, 0, 0, 0.504148,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0223114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464426,-99) , 
5, 0.520779, 1, 0, 0.523455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494891,-99) , 
7, -951.286, 1, 0, 0.501807,-99) , 
8, 1.57142, 0, 0, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466004,-99) , 
4, 0.999048, 0, 0, 0.502758,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0125835);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46574,-99) , 
10, 3.37852, 1, 0, 0.498559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426624,-99) , 
10, -2.33696, 0, 0, 0.496176,-99) , 
8, -1.85694, 1, 0, 0.49793,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0300662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420107,-99) , 
10, -1.70925, 0, 0, 0.483944,-99) , 
8, -0.976363, 1, 0, 0.51588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481396,-99) , 
10, 2.49295, 1, 0, 0.501093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438575,-99) , 
8, -1.57126, 0, 0, 0.498667,-99) , 
9, -3.88399, 1, 0, 0.501304,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0111622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499906,-99) , 
5, -0.809681, 1, 0, 0.502924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461051,-99) , 
8, -1.57141, 0, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470771,-99) , 
10, -2.37309, 0, 0, 0.499938,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.033323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.570994,-99) , 
NN(
0, 
0, 
-1, 0.000429248, 0, -1, 0.493375,-99) , 
6, 0.00901431, 0, 0, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365976,-99) , 
6, 0.0236633, 1, 0, 0.498178,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0153671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712858, 0, 1, 0.561664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498795,-99) , 
8, 2.14285, 0, 0, 0.500688,-99) , 
4, 0.999524, 1, 0, 0.504196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450587,-99) , 
3, 9.37272, 1, 0, 0.502572,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0298936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496857,-99) , 
9, -2.30399, 0, 0, 0.50243,-99) , 
4, 0.999524, 1, 0, 0.506911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490863,-99) , 
8, 1.57148, 0, 0, 0.498926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389347,-99) , 
5, 0.522468, 1, 0, 0.49131,-99) , 
10, 0.369964, 1, 0, 0.50115,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0339082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488678,-99) , 
8, 0.325478, 0, 0, 0.542417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458853,-99) , 
10, -0.188219, 1, 0, 0.503114,-99) , 
9, -2.29984, 0, 0, 0.50838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497082,-99) , 
8, 2.14288, 0, 0, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384777,-99) , 
5, 0.520773, 1, 0, 0.492491,-99) , 
10, 0.360757, 1, 0, 0.502502,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.02271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498706,-99) , 
10, 3.15865, 1, 0, 0.521681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471054,-99) , 
8, -1.57247, 0, 0, 0.516005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497834,-99) , 
9, -1.41464, 0, 0, 0.501815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458463,-99) , 
10, 1.49663, 1, 0, 0.499373,-99) , 
5, -0.714521, 1, 0, 0.503161,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0185243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540941,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489932, 0, 1, 0.507344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468923,-99) , 
10, 3.15646, 1, 0, 0.506236,-99) , 
9, 2.77752, 0, 0, 0.507536,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0179276);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.940501, 1, 1, 0.535846,-99) , 
NN(
NN(
0, 
0, 
-1, -0.631441, 0, 1, 0.5055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468749,-99) , 
10, 2.18478, 1, 0, 0.503465,-99) , 
9, 1.33504, 0, 0, 0.505746,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0183568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473742,-99) , 
2, 0.0715831, 1, 0, 0.495923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444203,-99) , 
0, 0.49333, 0, 0, 0.489063,-99) , 
3, 4.72382, 1, 0, 0.50396,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0186271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47129,-99) , 
5, -0.87601, 1, 0, 0.510963,-99) , 
10, 2.83231, 1, 0, 0.520443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540354,-99) , 
NN(
0, 
0, 
-1, -1.99523, 0, -1, 0.495473,-99) , 
9, -4.71455, 1, 0, 0.497534,-99) , 
9, 0.417863, 0, 0, 0.50021,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0167152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.146652, 1, 1, 0.544654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484431,-99) , 
8, 0.714265, 0, 0, 0.505636,-99) , 
5, -0.908321, 1, 0, 0.525062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499942,-99) , 
9, -1.33835, 0, 0, 0.502802,-99) , 
NN(
0, 
0, 
-1, 1.30421, 1, -1, 0.46686,-99) , 
10, 1.605, 1, 0, 0.500285,-99) , 
9, 0.375626, 0, 0, 0.503287,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0229106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.507986,-99) , 
NN(
0, 
0, 
-1, 4.49833, 1, -1, 0.490519,-99) , 
0, 0.500947, 1, 0, 0.503569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396085,-99) , 
5, 0.233388, 1, 0, 0.469077,-99) , 
8, 1.85717, 1, 0, 0.50143,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0276406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0089249, 0, 1, 0.510543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359699,-99) , 
6, 0.0234313, 1, 0, 0.506737,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0243165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.750137, 1, 1, 0.541841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468979,-99) , 
2, -0.0594658, 0, 0, 0.502046,-99) , 
5, -0.782508, 0, 0, 0.510959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
9, -2.02344, 0, 0, 0.503168,-99) , 
NN(
0, 
0, 
-1, 0.427316, 1, -1, 0.474617,-99) , 
10, 0.50241, 1, 0, 0.497661,-99) , 
5, -0.714536, 1, 0, 0.50071,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.03117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478258,-99) , 
3, 4.78624, 1, 0, 0.520434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490109,-99) , 
2, 0.00319029, 0, 0, 0.49899,-99) , 
2, -0.0715962, 1, 0, 0.502651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473237,-99) , 
8, 0.142775, 0, 0, 0.494525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402956,-99) , 
5, -0.144842, 1, 0, 0.485116,-99) , 
10, 0.926524, 1, 0, 0.49801,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0181711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.42575, 1, 1, 0.530763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451088,-99) , 
10, 1.89849, 1, 0, 0.499895,-99) , 
9, 0.878353, 0, 0, 0.502615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458501,-99) , 
1, 0.0143116, 1, 0, 0.50139,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0151413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49817,-99) , 
9, -4.60284, 1, 0, 0.499902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462904,-99) , 
0, 0.490472, 0, 0, 0.498333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50723,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.445367,-99) , 
5, -0.907972, 1, 0, 0.475015,-99) , 
10, 2.41454, 1, 0, 0.495943,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0262638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909901, 1, 1, 0.558471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473357,-99) , 
7, -951.286, 1, 0, 0.523819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499384,-99) , 
8, 1.57048, 0, 0, 0.50255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43732,-99) , 
7, -951.286, 0, 0, 0.473098,-99) , 
10, 1.41634, 1, 0, 0.499165,-99) , 
9, 0.807362, 0, 0, 0.501491,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.00830307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.807232, 0, 1, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465098,-99) , 
3, 9.37272, 1, 0, 0.501987,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0301031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492136,-99) , 
4, 0.999987, 0, 0, 0.508236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474359,-99) , 
4, 0.999728, 0, 0, 0.50653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474162,-99) , 
4, 0.999048, 0, 0, 0.505454,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0103149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.0147, 0, 1, 0.504198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46683,-99) , 
4, 0.999048, 0, 0, 0.502961,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0115022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46507,-99) , 
10, 2.03758, 1, 0, 0.49934,-99) , 
9, 0.86527, 0, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, -0.918579, 1, -1, 0.475988,-99) , 
10, 3.27805, 1, 0, 0.499783,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0294009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444063,-99) , 
10, -1.74479, 0, 0, 0.496733,-99) , 
8, -1.3535, 1, 0, 0.517244,-99) , 
NN(
0, 
0, 
-1, -0.999854, 0, -1, 0.493612,-99) , 
9, -3.9435, 1, 0, 0.497056,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0142121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.79439, 0, 1, 0.504223,-99) , 
NN(
0, 
0, 
-1, -0.918585, 1, -1, 0.468985,-99) , 
10, 3.24284, 1, 0, 0.502041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457091,-99) , 
10, -2.52125, 0, 0, 0.500556,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0237281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00699, 0, 1, 0.511748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484546,-99) , 
8, 0.42868, 0, 0, 0.498063,-99) , 
10, -0.562581, 1, 0, 0.503601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4827,-99) , 
3, 2.18514, 0, 0, 0.493541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460115,-99) , 
5, 0.325291, 1, 0, 0.484941,-99) , 
0, 0.493329, 0, 0, 0.501123,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0174199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496355,-99) , 
5, 0.711847, 0, 0, 0.534554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494888,-99) , 
5, -0.714644, 1, 0, 0.498575,-99) , 
4, 0.999524, 1, 0, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470041,-99) , 
3, 9.39171, 1, 0, 0.499585,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0190331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711865, 0, 1, 0.53486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493493,-99) , 
3, 2.22929, 0, 0, 0.500667,-99) , 
4, 0.999524, 1, 0, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476147,-99) , 
3, 8.95698, 1, 0, 0.501542,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.01703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490893,-99) , 
3, 1.44427, 0, 0, 0.499561,-99) , 
4, 0.999048, 1, 0, 0.501579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4591,-99) , 
3, 9.39196, 1, 0, 0.500316,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0113325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467648,-99) , 
5, -0.904824, 0, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453432,-99) , 
10, 2.54062, 1, 0, 0.498595,-99) , 
9, 1.74434, 0, 0, 0.500072,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0147841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.529057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46733,-99) , 
8, -1.13603, 0, 0, 0.500936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456632,-99) , 
10, -2.04755, 0, 0, 0.498672,-99) , 
8, -1.57141, 1, 0, 0.500696,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.016637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495613,-99) , 
3, 9.13548, 0, 0, 0.497359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46786,-99) , 
4, 0.999728, 0, 0, 0.495896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457281,-99) , 
4, 0.999048, 0, 0, 0.494648,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0180799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0783631, 1, 1, 0.506711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449156,-99) , 
0, 0.495235, 0, 0, 0.489719,-99) , 
3, 4.60913, 1, 0, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473601,-99) , 
10, 3.35768, 1, 0, 0.501568,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0157197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476058,-99) , 
7, -951.286, 1, 0, 0.515545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472163,-99) , 
10, 1.46547, 1, 0, 0.496785,-99) , 
9, 0.845204, 0, 0, 0.498603,-99) , 
NN(
0, 
0, 
-1, 0.861276, 1, -1, 0.467449,-99) , 
5, 0.806925, 1, 0, 0.496897,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0247112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0568452, 1, 1, 0.513381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463029,-99) , 
0, 0.503169, 1, 0, 0.489237,-99) , 
3, 4.74649, 1, 0, 0.508188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489748,-99) , 
5, 0.711866, 0, 0, 0.492299,-99) , 
8, 2.14282, 0, 0, 0.493562,-99) , 
0, 0.500947, 0, 0, 0.497407,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0254324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489665,-99) , 
4, 0.999955, 1, 0, 0.494549,-99) , 
3, 9.08707, 0, 0, 0.495943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457792,-99) , 
4, 0.999048, 0, 0, 0.494671,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0103823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90031, 0, 1, 0.520062,-99) , 
NN(
0, 
0, 
-1, -1.28554, 0, -1, 0.497605,-99) , 
9, -4.07003, 1, 0, 0.499425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464303,-99) , 
10, -2.39957, 0, 0, 0.497922,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.013073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
7, -951.286, 0, 0, 0.526031,-99) , 
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.502469,-99) , 
5, 0.712836, 0, 0, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
3, 9.37272, 1, 0, 0.504057,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0181581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561945,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.497921,-99) , 
4, 0.999048, 1, 0, 0.500024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46375,-99) , 
2, -0.0784519, 0, 0, 0.495305,-99) , 
NN(
0, 
0, 
-1, 0.133642, 0, -1, 0.452767,-99) , 
2, 0.0711978, 1, 0, 0.483727,-99) , 
3, 4.7423, 1, 0, 0.496885,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0144715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450306,-99) , 
10, 2.69522, 1, 0, 0.501009,-99) , 
9, 1.99221, 0, 0, 0.502464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45686,-99) , 
4, 0.999048, 0, 0, 0.500998,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0217282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49202,-99) , 
5, -0.150299, 0, 0, 0.515155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48982,-99) , 
5, -0.239603, 1, 0, 0.496966,-99) , 
2, 0.0706818, 0, 0, 0.499681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463344,-99) , 
4, 0.999048, 0, 0, 0.498499,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0261491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487671,-99) , 
2, 0.0747477, 1, 0, 0.503029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42383,-99) , 
8, 0.715458, 1, 0, 0.479307,-99) , 
5, 0.71212, 1, 0, 0.500421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48259,-99) , 
9, -2.12074, 0, 0, 0.488297,-99) , 
NN(
0, 
0, 
-1, 1.28615, 1, -1, 0.46488,-99) , 
10, 0.66396, 1, 0, 0.480566,-99) , 
0, 0.500947, 1, 0, 0.495343,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.011736);
  fForest.push_back( 
NN(
0, 
0, 
-1, -0.214506, 0, -1, 0.494132,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0220696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483396,-99) , 
5, 0.492435, 1, 0, 0.525074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466414,-99) , 
8, -0.999989, 0, 0, 0.4975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369523,-99) , 
8, -0.659784, 1, 0, 0.469801,-99) , 
10, -1.51118, 0, 0, 0.494931,-99) , 
9, -4.34575, 1, 0, 0.497309,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0246931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491707,-99) , 
9, -1.41741, 0, 0, 0.497258,-99) , 
4, 0.999524, 1, 0, 0.499327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465495,-99) , 
10, 0.226653, 1, 0, 0.488526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445163,-99) , 
0, 0.494283, 0, 0, 0.480957,-99) , 
3, 4.74841, 1, 0, 0.495817,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0171096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498603,-99) , 
5, 0.33145, 0, 0, 0.50395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463223,-99) , 
10, -2.46586, 0, 0, 0.502435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453782,-99) , 
8, 2.14288, 1, 0, 0.500655,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0233447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.526345, 0, 1, 0.536506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454125,-99) , 
10, 0.347284, 1, 0, 0.498041,-99) , 
9, -1.75577, 0, 0, 0.502279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486787,-99) , 
9, 1.2443, 0, 0, 0.495264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453385,-99) , 
2, -0.0719589, 0, 0, 0.488475,-99) , 
10, 0.954811, 1, 0, 0.498627,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0310043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491311,-99) , 
7, -951.286, 0, 0, 0.517506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487772,-99) , 
7, -951.286, 1, 0, 0.497177,-99) , 
8, -0.999839, 1, 0, 0.500437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478162,-99) , 
3, 8.70529, 0, 0, 0.487718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437488,-99) , 
5, 0.705688, 1, 0, 0.48127,-99) , 
3, 4.60913, 1, 0, 0.496586,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.015486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463058,-99) , 
8, -1.57142, 0, 0, 0.50155,-99) , 
9, -4.19339, 1, 0, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455039,-99) , 
10, -2.52271, 0, 0, 0.502101,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0354418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454552,-99) , 
3, 3.31426, 1, 0, 0.490996,-99) , 
5, -0.147153, 0, 0, 0.510411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486464,-99) , 
10, 0.597463, 1, 0, 0.497082,-99) , 
NN(
0, 
0, 
-1, -1.7592, 0, -1, 0.482366,-99) , 
9, -2.57789, 0, 0, 0.490417,-99) , 
8, -0.999856, 1, 0, 0.493569,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.019491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497853,-99) , 
3, 3.39512, 0, 0, 0.500455,-99) , 
4, 0.999048, 1, 0, 0.502132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471606,-99) , 
0, 0.499362, 1, 0, 0.488749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450098,-99) , 
0, 0.495236, 0, 0, 0.479769,-99) , 
3, 4.70919, 1, 0, 0.49782,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0282582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492962,-99) , 
5, 0.0467055, 1, 0, 0.514091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486085,-99) , 
10, -0.226034, 1, 0, 0.500101,-99) , 
8, 0.428689, 0, 0, 0.505634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471233,-99) , 
2, 0.0709773, 1, 0, 0.492797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436936,-99) , 
0, 0.493332, 0, 0, 0.485403,-99) , 
3, 4.76442, 1, 0, 0.501797,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0220851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.806969, 0, 1, 0.508765,-99) , 
NN(
0, 
0, 
-1, 0.713883, 1, -1, 0.4859,-99) , 
3, 4.73378, 1, 0, 0.504389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453563,-99) , 
10, -2.50949, 0, 0, 0.50265,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0211646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493049,-99) , 
3, 0.980622, 1, 0, 0.49644,-99) , 
3, 9.13153, 0, 0, 0.498018,-99) , 
NN(
0, 
0, 
-1, 0.712859, 0, -1, 0.456411,-99) , 
4, 0.999524, 0, 0, 0.495741,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0247022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492664,-99) , 
7, -951.286, 0, 0, 0.519408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488352,-99) , 
10, 3.57764, 1, 0, 0.510401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495336,-99) , 
9, -1.53195, 0, 0, 0.498161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426311,-99) , 
9, -0.726242, 0, 0, 0.458304,-99) , 
10, 1.14621, 1, 0, 0.494812,-99) , 
9, -0.314841, 0, 0, 0.497479,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0228746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493875,-99) , 
4, 0.999988, 0, 0, 0.50421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458128,-99) , 
4, 0.999751, 0, 0, 0.502771,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.464555,-99) , 
4, 0.999524, 0, 0, 0.500653,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0147881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497006,-99) , 
5, 0.520777, 0, 0, 0.499677,-99) , 
8, 2.14283, 0, 0, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451076,-99) , 
4, 0.999048, 0, 0, 0.499747,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0323382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494299,-99) , 
8, 0.106342, 0, 0, 0.527767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493221,-99) , 
8, -1.44554, 1, 0, 0.497441,-99) , 
9, -2.10557, 0, 0, 0.502027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486802,-99) , 
7, -951.286, 0, 0, 0.497889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392619,-99) , 
5, 0.140181, 1, 0, 0.488553,-99) , 
10, 0.71673, 1, 0, 0.497956,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0323295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494228,-99) , 
5, 0.139873, 1, 0, 0.505597,-99) , 
4, 0.999524, 1, 0, 0.508503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43972,-99) , 
7, -0.715276, 0, 0, 0.510483,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.48054,-99) , 
7, -951.286, 0, 0, 0.495703,-99) , 
3, 4.7423, 1, 0, 0.506025,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0211647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492773,-99) , 
5, -0.923798, 1, 0, 0.511345,-99) , 
10, 2.83231, 1, 0, 0.528008,-99) , 
NN(
NN(
0, 
0, 
-1, 1.78712, 0, 1, 0.503548,-99) , 
NN(
0, 
0, 
-1, -0.61935, 1, -1, 0.465627,-99) , 
10, 1.17855, 1, 0, 0.498735,-99) , 
9, 0.375626, 0, 0, 0.502298,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0217804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.81374, 1, 1, 0.537057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474286,-99) , 
0, 0.495235, 1, 0, 0.490907,-99) , 
5, -0.14435, 0, 0, 0.514367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
3, 4.61524, 0, 0, 0.502168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42805,-99) , 
5, -0.243609, 0, 0, 0.475363,-99) , 
2, -0.153041, 0, 0, 0.499827,-99) , 
2, 0.0714181, 0, 0, 0.50209,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0242715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909901, 1, 1, 0.552884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482399,-99) , 
7, -951.286, 1, 0, 0.524314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492094,-99) , 
10, 0.0536189, 1, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438492,-99) , 
10, 2.26027, 1, 0, 0.500133,-99) , 
9, 0.807362, 0, 0, 0.502426,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0230008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.676705, 1, 1, 0.514799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419894,-99) , 
4, 0.999905, 0, 0, 0.497427,-99) , 
5, 0.14189, 0, 0, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457611,-99) , 
10, -2.52271, 0, 0, 0.502229,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0574353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429428,-99) , 
10, -2.30623, 0, 0, 0.518511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418055,-99) , 
10, 0.509332, 1, 0, 0.508611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464873,-99) , 
4, 0.999991, 0, 0, 0.497382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431166,-99) , 
4, 0.99981, 0, 0, 0.494585,-99) , 
5, 0.331423, 0, 0, 0.498735,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0254654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468756,-99) , 
7, -951.286, 1, 0, 0.502633,-99) , 
10, 2.49391, 1, 0, 0.513192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494766,-99) , 
8, 1.27682, 0, 0, 0.498186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426717,-99) , 
5, -0.619132, 1, 0, 0.468445,-99) , 
10, 1.28895, 1, 0, 0.495727,-99) , 
9, -0.0411847, 0, 0, 0.49833,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0190359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.31574, 1, 1, 0.524907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466574,-99) , 
10, 3.33385, 1, 0, 0.498747,-99) , 
2, -0.068022, 1, 0, 0.502525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476453,-99) , 
5, 0.227829, 0, 0, 0.484619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452006,-99) , 
5, 0.611595, 1, 0, 0.478896,-99) , 
3, 4.70919, 1, 0, 0.497985,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0465661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463373,-99) , 
8, -0.149841, 0, 0, 0.5443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461027,-99) , 
8, 0.366696, 1, 0, 0.494786,-99) , 
9, -2.6519, 0, 0, 0.501942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412684,-99) , 
7, -1.00079, 0, 0, 0.50082,-99) , 
NN(
0, 
0, 
-1, -0.99982, 0, -1, 0.483652,-99) , 
7, -951.286, 0, 0, 0.490832,-99) , 
10, -0.0810067, 1, 0, 0.496713,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0257352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14986, 1, 1, 0.519229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489646,-99) , 
5, -0.945641, 0, 0, 0.511162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491829,-99) , 
8, 1.5716, 0, 0, 0.495491,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.461567,-99) , 
10, 1.79552, 1, 0, 0.49342,-99) , 
5, -0.809782, 1, 0, 0.496253,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0316874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457618,-99) , 
8, 0.808885, 1, 0, 0.509394,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.492462,-99) , 
5, 0.427363, 0, 0, 0.496552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457262,-99) , 
10, -2.56061, 0, 0, 0.495343,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0231632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481565,-99) , 
9, -2.84992, 0, 0, 0.512751,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.495243,-99) , 
8, 0.428561, 0, 0, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449908,-99) , 
4, 0.999048, 0, 0, 0.500417,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0184859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48323,-99) , 
5, 0.396915, 1, 0, 0.518574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474893,-99) , 
8, 1.91154, 1, 0, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447184,-99) , 
8, -1.57126, 0, 0, 0.498859,-99) , 
9, -4.20197, 1, 0, 0.500823,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0341058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0672045, 1, 1, 0.514807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483094,-99) , 
7, -951.286, 1, 0, 0.496066,-99) , 
9, -2.58898, 0, 0, 0.506053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407878,-99) , 
10, -0.918901, 1, 0, 0.458871,-99) , 
4, 0.999524, 0, 0, 0.503488,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0150316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430096, 0, 1, 0.533486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496623,-99) , 
8, 2.14287, 0, 0, 0.498167,-99) , 
5, 0.807991, 0, 0, 0.500053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454817,-99) , 
3, 9.10638, 1, 0, 0.49853,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00889166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498688,-99) , 
2, -0.215811, 1, 0, 0.499831,-99) , 
4, 0.999048, 1, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461905,-99) , 
3, 9.25993, 1, 0, 0.499615,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0200204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.137077, 0, 1, 0.518642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488575,-99) , 
5, 0.332206, 1, 0, 0.499523,-99) , 
3, 0.993658, 1, 0, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455833,-99) , 
3, 9.38661, 1, 0, 0.50233,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0305213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.422335, 1, 1, 0.529414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490128,-99) , 
8, -0.428392, 0, 0, 0.51731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484121,-99) , 
2, -0.146227, 0, 0, 0.502716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476108,-99) , 
2, 0.0247508, 0, 0, 0.488068,-99) , 
2, -0.00374605, 1, 0, 0.496011,-99) , 
2, 0.0710598, 0, 0, 0.499348,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0129748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498849,-99) , 
9, 0.777614, 0, 0, 0.500355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443123,-99) , 
3, 1.71596, 0, 0, 0.478559,-99) , 
10, 3.12477, 1, 0, 0.498855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424614,-99) , 
5, 0.861591, 1, 0, 0.468032,-99) , 
5, 0.80723, 1, 0, 0.497172,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0158686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498148,-99) , 
8, 1.66192, 0, 0, 0.500538,-99) , 
NN(
0, 
0, 
-1, -0.336878, 1, -1, 0.486222,-99) , 
10, 1.02914, 1, 0, 0.496864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451597,-99) , 
4, 0.999048, 0, 0, 0.495396,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.03367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45742,-99) , 
8, -1.69391, 0, 0, 0.485585,-99) , 
9, -3.74704, 1, 0, 0.522883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487863,-99) , 
8, -0.469352, 0, 0, 0.508161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409812,-99) , 
8, -0.543224, 1, 0, 0.476828,-99) , 
10, -1.50033, 0, 0, 0.504411,-99) , 
8, -1.28571, 1, 0, 0.50633,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0156598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.75577, 0, 1, 0.504813,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.487747,-99) , 
10, 1.02914, 1, 0, 0.500457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458429,-99) , 
4, 0.999048, 0, 0, 0.49911,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0214381);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476079,-99) , 
10, 1.46479, 1, 0, 0.520535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495266,-99) , 
5, 0.236528, 0, 0, 0.4996,-99) , 
8, 1.57142, 0, 0, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456212,-99) , 
4, 0.999048, 0, 0, 0.500241,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0216285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421721,-99) , 
8, -1.20565, 1, 0, 0.494391,-99) , 
10, -1.90921, 0, 0, 0.513306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
10, 1.76779, 1, 0, 0.497606,-99) , 
NN(
0, 
0, 
-1, -1.69387, 0, -1, 0.468266,-99) , 
8, -1.28555, 0, 0, 0.495673,-99) , 
9, -4.03342, 1, 0, 0.497918,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0199765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493376,-99) , 
9, -2.90347, 1, 0, 0.529173,-99) , 
NN(
NN(
0, 
0, 
-1, -0.717304, 0, 1, 0.520523,-99) , 
NN(
0, 
0, 
-1, 1.07007, 1, -1, 0.494571,-99) , 
9, -0.473126, 0, 0, 0.499472,-99) , 
8, -1.57122, 1, 0, 0.501401,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0164021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498689,-99) , 
5, 0.710285, 0, 0, 0.53738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496042,-99) , 
2, -0.0740727, 1, 0, 0.498383,-99) , 
4, 0.999524, 1, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457775,-99) , 
3, 9.12537, 1, 0, 0.499088,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0321592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450947,-99) , 
9, -2.30712, 1, 0, 0.494216,-99) , 
7, -951.286, 0, 0, 0.520633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492541,-99) , 
10, 0.710602, 1, 0, 0.503183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375554,-99) , 
8, -0.754106, 1, 0, 0.4659,-99) , 
10, -1.69071, 0, 0, 0.500065,-99) , 
8, -1.2855, 1, 0, 0.502239,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0227699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489169,-99) , 
10, 2.61822, 1, 0, 0.513534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49626,-99) , 
8, -1.31577, 1, 0, 0.499402,-99) , 
9, -1.7302, 0, 0, 0.504262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466867,-99) , 
4, 0.999048, 0, 0, 0.503066,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0163277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0746377, 0, 1, 0.505556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469158,-99) , 
4, 0.999819, 0, 0, 0.503738,-99) , 
NN(
0, 
0, 
-1, -0.918901, 1, -1, 0.468764,-99) , 
4, 0.999524, 0, 0, 0.501812,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0109949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497703,-99) , 
8, 2.14285, 0, 0, 0.49912,-99) , 
2, 0.213178, 0, 0, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466426,-99) , 
4, 0.999048, 0, 0, 0.49922,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.021477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.51662, 0, 1, 0.521203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480795,-99) , 
2, 0.140488, 1, 0, 0.495118,-99) , 
10, 0.0313416, 1, 0, 0.509806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48943,-99) , 
7, -951.286, 1, 0, 0.497681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442727,-99) , 
7, -951.286, 0, 0, 0.479491,-99) , 
5, 0.617677, 1, 0, 0.494946,-99) , 
2, 0.0725378, 0, 0, 0.497191,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0217674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.537413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480668,-99) , 
7, -951.286, 0, 0, 0.491395,-99) , 
3, 4.73972, 1, 0, 0.521383,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.518743,-99) , 
NN(
0, 
0, 
-1, -1.1818, 0, -1, 0.494347,-99) , 
8, -0.999883, 1, 0, 0.498284,-99) , 
2, 0.0714933, 0, 0, 0.501868,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.01815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482924,-99) , 
5, -0.963757, 0, 0, 0.518286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428113,-99) , 
10, 2.26136, 1, 0, 0.499576,-99) , 
5, -0.809777, 1, 0, 0.502638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446788,-99) , 
3, 9.34253, 1, 0, 0.500963,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0268517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.32553, 1, 1, 0.520284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477931,-99) , 
8, -1.28697, 0, 0, 0.513456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484982,-99) , 
3, 4.55921, 1, 0, 0.508298,-99) , 
NN(
0, 
0, 
-1, -0.00100949, 1, -1, 0.490552,-99) , 
2, -0.0716195, 1, 0, 0.493583,-99) , 
5, -0.714646, 1, 0, 0.498164,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0275728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469271,-99) , 
7, -951.286, 1, 0, 0.506669,-99) , 
10, 2.50594, 1, 0, 0.517252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499611,-99) , 
9, -2.38029, 0, 0, 0.504389,-99) , 
NN(
0, 
0, 
-1, 0.426571, 1, -1, 0.478054,-99) , 
10, 0.171833, 1, 0, 0.496062,-99) , 
9, 0.0767756, 0, 0, 0.499032,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0136796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.78455, 0, 1, 0.505876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464232,-99) , 
4, 0.999048, 0, 0, 0.504535,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0212415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470286,-99) , 
10, 4.18441, 1, 0, 0.503072,-99) , 
8, 2.14285, 0, 0, 0.504467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462494,-99) , 
7, -951.287, 0, 0, 0.505235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421119,-99) , 
8, 1.00104, 1, 0, 0.481901,-99) , 
5, 0.712116, 1, 0, 0.502152,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0410776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447724,-99) , 
8, 0.148202, 1, 0, 0.499805,-99) , 
9, -3.00256, 0, 0, 0.507716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48999,-99) , 
10, 0.0995184, 1, 0, 0.497205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455247,-99) , 
9, -3.01538, 1, 0, 0.474477,-99) , 
9, -2.52978, 0, 0, 0.492542,-99) , 
10, -0.636146, 1, 0, 0.498365,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0367426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496996,-99) , 
10, 0.262618, 1, 0, 0.51054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436522,-99) , 
10, -0.652247, 0, 0, 0.474912,-99) , 
9, -3.05263, 0, 0, 0.504762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477342,-99) , 
9, -4.1951, 0, 0, 0.530181,-99) , 
NN(
0, 
0, 
-1, 0.999845, 0, -1, 0.489255,-99) , 
5, 0.610991, 0, 0, 0.494687,-99) , 
8, 0.14285, 0, 0, 0.499621,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0291861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.57031, 1, 1, 0.528737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470265,-99) , 
3, 3.2347, 1, 0, 0.493841,-99) , 
5, -0.429697, 0, 0, 0.515695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44688,-99) , 
2, -0.152232, 0, 0, 0.505472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474557,-99) , 
2, -0.00360318, 1, 0, 0.488522,-99) , 
5, -0.23906, 1, 0, 0.496521,-99) , 
2, 0.0712014, 0, 0, 0.499479,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0122242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4986,-99) , 
3, 9.13153, 0, 0, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450481,-99) , 
4, 0.999751, 0, 0, 0.499004,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.467934,-99) , 
4, 0.999524, 0, 0, 0.497301,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.031002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.541537, 1, 1, 0.566728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49837,-99) , 
6, 0.00596176, 0, 0, 0.502503,-99) , 
6, 0.00894349, 0, 0, 0.509483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348941,-99) , 
6, 0.023484, 1, 0, 0.505447,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0151667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497821,-99) , 
9, -0.913702, 0, 0, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456077,-99) , 
10, 2.71991, 1, 0, 0.499383,-99) , 
9, 2.09564, 0, 0, 0.501032,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0215264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.80193, 1, 1, 0.517948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464623,-99) , 
10, 0.610011, 1, 0, 0.502568,-99) , 
9, -1.61337, 0, 0, 0.507656,-99) , 
NN(
0, 
0, 
-1, 0.711857, 0, -1, 0.476492,-99) , 
4, 0.999524, 0, 0, 0.505939,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0157702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484744,-99) , 
10, 1.36375, 1, 0, 0.521843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499128,-99) , 
4, 0.999524, 1, 0, 0.501072,-99) , 
8, 1.28582, 0, 0, 0.504054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474501,-99) , 
10, 3.38031, 1, 0, 0.502442,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0250855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.79348, 1, 1, 0.526529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483595,-99) , 
5, -0.963755, 0, 0, 0.519196,-99) , 
NN(
NN(
0, 
0, 
-1, -1.59065, 0, 1, 0.507574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460955,-99) , 
7, -951.286, 0, 0, 0.48111,-99) , 
10, 1.28876, 1, 0, 0.504695,-99) , 
5, -0.80987, 1, 0, 0.506991,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0164793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.11491, 1, 1, 0.522756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471159,-99) , 
10, 2.89246, 1, 0, 0.500609,-99) , 
2, -0.0701878, 1, 0, 0.503747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466902,-99) , 
5, 0.611605, 1, 0, 0.495292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467765,-99) , 
8, -0.999864, 0, 0, 0.491038,-99) , 
3, 4.74841, 1, 0, 0.501317,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0218698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498534,-99) , 
5, -0.950153, 0, 0, 0.522839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493229,-99) , 
8, -0.142755, 0, 0, 0.502216,-99) , 
NN(
0, 
0, 
-1, 3.1188, 1, -1, 0.456735,-99) , 
10, 2.43484, 1, 0, 0.499651,-99) , 
5, -0.904841, 1, 0, 0.501492,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0180387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493688,-99) , 
7, -951.287, 0, 0, 0.519982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479961,-99) , 
10, -1.57026, 0, 0, 0.50166,-99) , 
8, -1.28572, 1, 0, 0.503581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4668,-99) , 
2, 0.21352, 1, 0, 0.502261,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0431323);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00724666, 0, 1, 0.523331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310131,-99) , 
7, -1.85699, 0, 0, 0.50095,-99) , 
NN(
0, 
0, 
-1, 1.29886, 1, -1, 0.48726,-99) , 
7, -951.286, 0, 0, 0.494021,-99) , 
9, 1.42159, 0, 0, 0.496034,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0102452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496088,-99) , 
5, 0.54967, 1, 0, 0.522717,-99) , 
NN(
0, 
0, 
-1, -1.57126, 0, -1, 0.497974,-99) , 
9, -4.36999, 1, 0, 0.499886,-99) , 
0, 0.505709, 0, 0, 0.501298,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0256025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.715015, 0, 1, 0.558143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476912,-99) , 
6, 0.000965635, 0, 0, 0.49674,-99) , 
6, 0.0101395, 0, 0, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360688,-99) , 
6, 0.0236633, 1, 0, 0.498124,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0504286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42891, 1, 1, 0.546059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437085,-99) , 
10, 1.90603, 1, 0, 0.499333,-99) , 
9, 0.874401, 0, 0, 0.504264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496204,-99) , 
8, 1.57066, 0, 0, 0.508015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249129,-99) , 
5, 0.234689, 1, 0, 0.383455,-99) , 
7, -1.2859, 0, 0, 0.48882,-99) , 
7, -951.286, 1, 0, 0.496711,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0189636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494232,-99) , 
2, -0.202791, 1, 0, 0.495673,-99) , 
3, 9.13153, 0, 0, 0.497095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429951,-99) , 
5, 0.712858, 0, 0, 0.471472,-99) , 
4, 0.999524, 0, 0, 0.495702,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0125167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453499,-99) , 
5, -0.904844, 0, 0, 0.500797,-99) , 
9, 1.14257, 0, 0, 0.502808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472983,-99) , 
10, 4.12124, 1, 0, 0.501744,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0258394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446111,-99) , 
8, -0.99982, 0, 0, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481813,-99) , 
10, -0.497546, 1, 0, 0.494554,-99) , 
9, -1.29207, 0, 0, 0.497545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466073,-99) , 
0, 0.505709, 1, 0, 0.496413,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0213879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79443, 0, 1, 0.51738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485635,-99) , 
2, 0.0822342, 1, 0, 0.513405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532431,-99) , 
NN(
0, 
0, 
-1, -1.99641, 0, -1, 0.49325,-99) , 
9, -4.7538, 1, 0, 0.495292,-99) , 
5, -0.619382, 1, 0, 0.500583,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0169868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496316,-99) , 
2, 0.0645246, 0, 0, 0.499397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455904,-99) , 
4, 0.999683, 0, 0, 0.497649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451832,-99) , 
4, 0.999048, 0, 0, 0.496215,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0150492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499959,-99) , 
0, 0.502443, 0, 0, 0.512392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495676,-99) , 
9, 1.33504, 0, 0, 0.497659,-99) , 
2, 0.071273, 0, 0, 0.499887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46077,-99) , 
0, 0.489519, 0, 0, 0.498906,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0173715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0648137, 0, 1, 0.506313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471123,-99) , 
5, 0.807927, 1, 0, 0.505026,-99) , 
NN(
0, 
0, 
-1, 0.711305, 0, -1, 0.464071,-99) , 
4, 0.999524, 0, 0, 0.502825,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0248995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462635,-99) , 
10, -2.2868, 0, 0, 0.509471,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.493508,-99) , 
5, -0.0488071, 0, 0, 0.500946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443411,-99) , 
1, 0.0143116, 1, 0, 0.499375,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.017963);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523864,-99) , 
NN(
NN(
0, 
0, 
-1, 1.8571, 0, 1, 0.501931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446977,-99) , 
7, -951.286, 0, 0, 0.480201,-99) , 
10, 1.61607, 1, 0, 0.499232,-99) , 
9, 1.83089, 0, 0, 0.500626,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0324709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465254,-99) , 
8, -0.291391, 0, 0, 0.533314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456693,-99) , 
5, 0.521621, 1, 0, 0.497514,-99) , 
10, -0.350164, 1, 0, 0.502738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495222,-99) , 
5, 0.517213, 0, 0, 0.505922,-99) , 
NN(
0, 
0, 
-1, -1.17264, 0, -1, 0.472993,-99) , 
8, -0.199617, 1, 0, 0.492853,-99) , 
9, -2.98998, 0, 0, 0.499024,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0229586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.51616, 0, 1, 0.512353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48367,-99) , 
10, 1.18682, 1, 0, 0.49836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406115,-99) , 
10, -1.43231, 0, 0, 0.4946,-99) , 
8, -0.428444, 1, 0, 0.500239,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0274274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492578,-99) , 
5, -0.908804, 1, 0, 0.534514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486367,-99) , 
7, -951.286, 1, 0, 0.51435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49057,-99) , 
8, 1.85706, 0, 0, 0.492822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447038,-99) , 
10, 2.21306, 1, 0, 0.491415,-99) , 
9, 0.734616, 0, 0, 0.493696,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0251936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441159,-99) , 
10, -1.75749, 0, 0, 0.48902,-99) , 
8, -1.18764, 1, 0, 0.509524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495578,-99) , 
9, -1.33827, 0, 0, 0.499594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467681,-99) , 
8, -1.57124, 0, 0, 0.498317,-99) , 
9, -3.9435, 1, 0, 0.499922,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0127957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479038,-99) , 
10, -1.80545, 0, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465129,-99) , 
8, -2.0202, 0, 0, 0.499438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472231,-99) , 
8, 2.14288, 1, 0, 0.498454,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0217646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494212,-99) , 
10, 2.79355, 1, 0, 0.515616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493919,-99) , 
8, 2.14288, 0, 0, 0.495458,-99) , 
9, 0.299902, 0, 0, 0.498127,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.461129,-99) , 
4, 0.999524, 0, 0, 0.496155,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0239975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460961,-99) , 
10, -2.30371, 0, 0, 0.503517,-99) , 
5, 0.256579, 1, 0, 0.520555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493227,-99) , 
8, 0.60545, 0, 0, 0.498483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459867,-99) , 
8, -1.57141, 0, 0, 0.496985,-99) , 
9, -4.03342, 1, 0, 0.499958,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0260837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91516, 0, 1, 0.510378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399877,-99) , 
9, -2.69734, 1, 0, 0.477048,-99) , 
10, -0.292189, 1, 0, 0.506494,-99) , 
NN(
0, 
0, 
-1, -1.28547, 0, -1, 0.491423,-99) , 
9, -2.50379, 1, 0, 0.499076,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.01659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497132,-99) , 
4, 0.999932, 1, 0, 0.499933,-99) , 
3, 9.03197, 0, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.465413,-99) , 
4, 0.999524, 0, 0, 0.500052,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0541364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473212,-99) , 
4, 0.999991, 0, 0, 0.505451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442854,-99) , 
4, 0.99981, 0, 0, 0.502562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4324,-99) , 
10, -2.28681, 0, 0, 0.502929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428051,-99) , 
10, 0.0952765, 1, 0, 0.490066,-99) , 
5, 0.42731, 1, 0, 0.499507,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0322015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466344,-99) , 
10, -2.51865, 0, 0, 0.531615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485979,-99) , 
7, -951.286, 0, 0, 0.502337,-99) , 
5, -0.14828, 0, 0, 0.51405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491785,-99) , 
3, 1.6629, 0, 0, 0.508736,-99) , 
NN(
0, 
0, 
-1, -1.64137, 0, -1, 0.492699,-99) , 
5, -0.239189, 1, 0, 0.499794,-99) , 
8, -0.714184, 1, 0, 0.503079,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0196692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495387,-99) , 
5, 0.132533, 0, 0, 0.511819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49422,-99) , 
9, 0.398814, 0, 0, 0.496603,-99) , 
3, 0.982163, 1, 0, 0.49985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469588,-99) , 
3, 9.26574, 1, 0, 0.498896,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0270595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461822,-99) , 
10, -2.07485, 0, 0, 0.505669,-99) , 
9, -4.66802, 1, 0, 0.507345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463412,-99) , 
7, -951.286, 1, 0, 0.499104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446504,-99) , 
8, 1.28731, 1, 0, 0.484932,-99) , 
10, 2.01783, 1, 0, 0.504358,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0187719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45367,-99) , 
4, 0.999864, 0, 0, 0.512967,-99) , 
NN(
0, 
0, 
-1, 0.805918, 1, -1, 0.495102,-99) , 
2, 0.0706131, 0, 0, 0.49774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469972,-99) , 
4, 0.999048, 0, 0, 0.496868,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0148739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.08707, 0, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468631,-99) , 
4, 0.999728, 0, 0, 0.503697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470536,-99) , 
4, 0.999048, 0, 0, 0.502644,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0181284);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485337,-99) , 
9, -3.21642, 1, 0, 0.49669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464044,-99) , 
0, 0.502852, 1, 0, 0.491399,-99) , 
3, 4.67335, 1, 0, 0.503595,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.00961125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528045,-99) , 
NN(
NN(
0, 
0, 
-1, 8.61832, 0, 1, 0.502629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465467,-99) , 
5, 0.807926, 1, 0, 0.501061,-99) , 
4, 0.999048, 1, 0, 0.501992,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0205436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49262,-99) , 
5, 0.549739, 1, 0, 0.525495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49472,-99) , 
9, 0.708619, 0, 0, 0.496928,-99) , 
NN(
0, 
0, 
-1, -0.907803, 1, -1, 0.474122,-99) , 
10, 3.00204, 1, 0, 0.495187,-99) , 
9, -4.36999, 1, 0, 0.497485,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0153716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497831,-99) , 
10, 3.44338, 1, 0, 0.521144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470043,-99) , 
5, -0.810186, 0, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434577,-99) , 
10, 2.21328, 1, 0, 0.498081,-99) , 
9, 0.734616, 0, 0, 0.500409,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0143554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466787,-99) , 
3, 7.12614, 1, 0, 0.503497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470627,-99) , 
3, 9.32353, 1, 0, 0.502468,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0117789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467088,-99) , 
8, -1.57118, 0, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462236,-99) , 
10, -2.58863, 0, 0, 0.499388,-99) , 
NN(
0, 
0, 
-1, -0.907816, 1, -1, 0.476567,-99) , 
10, 3.08085, 1, 0, 0.497849,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.031531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487971,-99) , 
8, 0.542086, 0, 0, 0.528569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462004,-99) , 
5, 0.0466961, 1, 0, 0.498443,-99) , 
10, 0.260284, 1, 0, 0.504672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536401,-99) , 
NN(
0, 
0, 
-1, -2.12197, 0, -1, 0.48732,-99) , 
8, -1.55313, 1, 0, 0.491476,-99) , 
9, -2.48512, 0, 0, 0.498001,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0191933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.541308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459099,-99) , 
5, 0.522525, 1, 0, 0.518686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475583,-99) , 
10, -1.80178, 0, 0, 0.499504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460942,-99) , 
8, -1.91156, 0, 0, 0.498179,-99) , 
8, 1.57139, 0, 0, 0.50028,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0194971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486778,-99) , 
5, 0.422869, 1, 0, 0.505036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491383,-99) , 
4, 0.999524, 1, 0, 0.492434,-99) , 
0, 0.494281, 1, 0, 0.494786,-99) , 
8, 2.14288, 0, 0, 0.495884,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0186839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472854,-99) , 
10, 1.53117, 1, 0, 0.525685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496801,-99) , 
2, 0.212867, 0, 0, 0.497877,-99) , 
NN(
0, 
0, 
-1, 4.4643, 1, -1, 0.48264,-99) , 
0, 0.494281, 0, 0, 0.495081,-99) , 
8, 1.85717, 0, 0, 0.497092,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00667507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499882,-99) , 
9, -4.74752, 1, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477128,-99) , 
10, 3.35768, 1, 0, 0.499607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45727,-99) , 
0, 0.489519, 0, 0, 0.49853,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.011347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498292,-99) , 
8, 1.85714, 0, 0, 0.500059,-99) , 
4, 0.999048, 1, 0, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463231,-99) , 
3, 9.10638, 1, 0, 0.500267,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0259089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.433723, 0, 1, 0.552069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473217,-99) , 
10, 0.210136, 1, 0, 0.501488,-99) , 
9, -1.75577, 0, 0, 0.505931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484244,-99) , 
10, 2.25958, 1, 0, 0.496027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416456,-99) , 
5, -0.0484576, 1, 0, 0.488094,-99) , 
10, 0.795688, 1, 0, 0.500765,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.00621443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499803,-99) , 
4, 0.999048, 1, 0, 0.500761,-99) , 
NN(
0, 
0, 
-1, -0.713654, 0, -1, 0.488054,-99) , 
0, 0.503306, 1, 0, 0.499208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472125,-99) , 
0, 0.489519, 0, 0, 0.498521,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0177625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498367,-99) , 
2, -0.213406, 1, 0, 0.50071,-99) , 
8, 1.40222, 0, 0, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0.045162, 1, -1, 0.484528,-99) , 
10, 0.71673, 1, 0, 0.497553,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0126811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492357,-99) , 
7, -951.286, 0, 0, 0.526213,-99) , 
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.503421,-99) , 
8, 1.85714, 0, 0, 0.504874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464982,-99) , 
4, 0.999048, 0, 0, 0.503616,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0109945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.525335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469829,-99) , 
4, 0.999728, 0, 0, 0.499537,-99) , 
8, 1.57147, 0, 0, 0.502109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468543,-99) , 
4, 0.999048, 0, 0, 0.501054,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00872208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48218,-99) , 
4, 0.999841, 0, 0, 0.500345,-99) , 
8, 2.14288, 0, 0, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.478069,-99) , 
4, 0.999524, 0, 0, 0.500115,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0192859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493893,-99) , 
8, 1.57148, 0, 0, 0.496158,-99) , 
4, 0.999049, 1, 0, 0.497638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448643,-99) , 
3, 9.25993, 1, 0, 0.496125,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0180968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477751,-99) , 
5, 0.71087, 1, 0, 0.504105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476899,-99) , 
4, 0.999728, 0, 0, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460929,-99) , 
4, 0.999048, 0, 0, 0.501497,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0203591);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.940512, 1, 1, 0.522437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496838,-99) , 
9, -2.42853, 0, 0, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0.615254, 1, -1, 0.488084,-99) , 
10, 0.0125057, 1, 0, 0.496125,-99) , 
9, 1.45301, 0, 0, 0.497931,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0287083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484398,-99) , 
10, 0.0638053, 0, 0, 0.534673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441916,-99) , 
10, 0.10868, 1, 0, 0.505715,-99) , 
9, -2.15183, 0, 0, 0.508469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494763,-99) , 
8, 2.14288, 0, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453053,-99) , 
5, 0.42652, 1, 0, 0.496011,-99) , 
10, 0.384284, 1, 0, 0.503908,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0115002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35183, 0, 1, 0.540806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498264,-99) , 
8, 2.14283, 0, 0, 0.499561,-99) , 
5, 0.806969, 0, 0, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469948,-99) , 
3, 9.37272, 1, 0, 0.500863,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0110651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711857, 0, 1, 0.538926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498923,-99) , 
0, 0.505709, 0, 0, 0.500429,-99) , 
4, 0.999524, 1, 0, 0.502481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457821,-99) , 
3, 9.38081, 1, 0, 0.50119,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0215805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461178,-99) , 
3, 9.4045, 1, 0, 0.507314,-99) , 
NN(
0, 
0, 
-1, -0.428421, 0, -1, 0.486013,-99) , 
10, 1.33432, 1, 0, 0.502934,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0268182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.19106, 1, 1, 0.537785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48366,-99) , 
2, -0.0136733, 0, 0, 0.502532,-99) , 
8, -0.430223, 1, 0, 0.518491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495612,-99) , 
9, -2.02591, 0, 0, 0.500499,-99) , 
NN(
0, 
0, 
-1, 0.137322, 1, -1, 0.479104,-99) , 
10, 0.594554, 1, 0, 0.495852,-99) , 
5, -0.809687, 1, 0, 0.499464,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0231781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0749406, 0, 1, 0.525356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418633,-99) , 
10, 0.454438, 1, 0, 0.480685,-99) , 
5, 0.427323, 1, 0, 0.511949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437591,-99) , 
8, -1.76173, 0, 0, 0.498817,-99) , 
9, -4.44059, 1, 0, 0.500659,-99) , 
8, 0.714366, 0, 0, 0.504034,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0108554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498871,-99) , 
2, 0.0697041, 0, 0, 0.501188,-99) , 
3, 9.08466, 0, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, -3.09051, 1, -1, 0.469052,-99) , 
4, 0.999524, 0, 0, 0.50038,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0117518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69486, 0, 1, 0.504609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442925,-99) , 
5, -0.0484576, 1, 0, 0.494695,-99) , 
10, 0.837725, 1, 0, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467785,-99) , 
10, -2.52271, 0, 0, 0.500593,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0181328);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490773,-99) , 
3, 9.15998, 0, 0, 0.497839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454797,-99) , 
0, 0.494283, 0, 0, 0.490409,-99) , 
3, 4.7423, 1, 0, 0.503661,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0204256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.70085, 0, 1, 0.526468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47824,-99) , 
5, -0.836983, 0, 0, 0.488424,-99) , 
3, 2.33234, 1, 0, 0.509591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496452,-99) , 
8, 1.57147, 0, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469899,-99) , 
10, 1.4912, 1, 0, 0.49758,-99) , 
5, -0.714694, 1, 0, 0.500328,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.017705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468794,-99) , 
10, 1.55644, 1, 0, 0.522816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486248,-99) , 
5, -0.527263, 0, 0, 0.510697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47766,-99) , 
0, 0.493329, 0, 0, 0.497626,-99) , 
2, -0.0714192, 1, 0, 0.499826,-99) , 
8, 1.85718, 0, 0, 0.501324,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.009119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499192,-99) , 
8, -1.28552, 1, 0, 0.501196,-99) , 
4, 0.999048, 1, 0, 0.502317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468447,-99) , 
3, 9.39196, 1, 0, 0.501293,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0188851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498087, 0, 1, 0.526013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
5, -0.569647, 0, 0, 0.512224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489305,-99) , 
2, 0.00331882, 0, 0, 0.495971,-99) , 
2, -0.0714836, 1, 0, 0.498724,-99) , 
5, 0.807232, 0, 0, 0.500292,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.010461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461653,-99) , 
4, 0.999048, 0, 0, 0.499173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456753,-99) , 
10, 3.15281, 1, 0, 0.497993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420017,-99) , 
9, 1.49344, 0, 0, 0.466701,-99) , 
5, -0.904897, 0, 0, 0.495636,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0132429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496404,-99) , 
9, 0.811435, 0, 0, 0.497822,-99) , 
0, 0.492105, 1, 0, 0.499171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466258,-99) , 
0, 0.490472, 0, 0, 0.497752,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.00899314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13548, 0, 1, 0.502724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468558,-99) , 
4, 0.999751, 0, 0, 0.501669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458193,-99) , 
5, 0.710919, 0, 0, 0.481021,-99) , 
4, 0.999524, 0, 0, 0.500561,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0177991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498005,-99) , 
5, -0.715706, 0, 0, 0.520468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477653,-99) , 
8, -0.700442, 0, 0, 0.498828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393934,-99) , 
8, -0.967377, 1, 0, 0.467294,-99) , 
10, -1.85282, 0, 0, 0.496449,-99) , 
8, -1.57119, 1, 0, 0.498018,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0216495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494938,-99) , 
5, -0.0529462, 1, 0, 0.505194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491324,-99) , 
5, 0.377501, 0, 0, 0.496223,-99) , 
8, 0.142953, 0, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, 0.862369, 1, -1, 0.475486,-99) , 
5, 0.807991, 1, 0, 0.499208,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0309287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430894,-99) , 
8, -1.76189, 0, 0, 0.498797,-99) , 
7, -951.286, 0, 0, 0.513006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491008,-99) , 
10, -0.648025, 1, 0, 0.495131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398609,-99) , 
8, -0.415353, 1, 0, 0.474066,-99) , 
10, -1.42313, 0, 0, 0.492737,-99) , 
8, -0.999989, 1, 0, 0.495952,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0128938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491467,-99) , 
7, -951.286, 0, 0, 0.532465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463959,-99) , 
4, 0.999683, 0, 0, 0.500196,-99) , 
8, 1.85714, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4642,-99) , 
4, 0.999048, 0, 0, 0.501102,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0179244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.510671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491335,-99) , 
8, -0.224326, 1, 0, 0.495873,-99) , 
2, -0.0711602, 1, 0, 0.498397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427469,-99) , 
5, 0.23704, 1, 0, 0.478984,-99) , 
8, 1.85717, 1, 0, 0.497231,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0201457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495231,-99) , 
5, 0.0331617, 0, 0, 0.507953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492321,-99) , 
9, 0.0846499, 0, 0, 0.494892,-99) , 
2, -0.0714185, 1, 0, 0.497079,-99) , 
NN(
0, 
0, 
-1, -3.27386, 0, -1, 0.470079,-99) , 
5, 0.807993, 1, 0, 0.495657,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.029317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.552247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495821,-99) , 
9, 1.83089, 0, 0, 0.49804,-99) , 
6, 0.00905568, 0, 0, 0.503735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338565,-99) , 
6, 0.0237713, 1, 0, 0.499609,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.058706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38052,-99) , 
7, -1.28597, 0, 0, 0.511566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491401,-99) , 
9, -2.98933, 1, 0, 0.499071,-99) , 
7, -951.286, 0, 0, 0.505272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437533,-99) , 
5, -0.907671, 1, 0, 0.479649,-99) , 
10, 3.01709, 1, 0, 0.503445,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0247046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484469,-99) , 
8, -0.428459, 0, 0, 0.505075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437932,-99) , 
8, -0.314871, 1, 0, 0.490412,-99) , 
10, -1.21517, 0, 0, 0.501527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474048,-99) , 
10, 3.39176, 1, 0, 0.499994,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.022304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.510053, 0, 1, 0.512599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49321,-99) , 
2, -0.0754763, 1, 0, 0.496493,-99) , 
3, 0.978442, 1, 0, 0.500619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477111,-99) , 
0, 0.495869, 0, 0, 0.495458,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.462972,-99) , 
0, 0.500948, 1, 0, 0.486167,-99) , 
3, 4.73378, 1, 0, 0.497848,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0193991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492128,-99) , 
3, 0.973761, 1, 0, 0.495271,-99) , 
2, 0.211748, 0, 0, 0.496652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452194,-99) , 
3, 9.32353, 1, 0, 0.495298,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0299723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809967, 0, 1, 0.544366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495927,-99) , 
5, -0.904841, 1, 0, 0.499155,-99) , 
6, 0.00792337, 0, 0, 0.505286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364817,-99) , 
6, 0.0237713, 1, 0, 0.501752,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0379521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.17487, 1, 1, 0.520725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47913,-99) , 
10, 2.82289, 1, 0, 0.515638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491553,-99) , 
5, 0.320164, 0, 0, 0.502333,-99) , 
NN(
0, 
0, 
-1, -0.387506, 1, -1, 0.481831,-99) , 
9, -3.38536, 0, 0, 0.493896,-99) , 
8, 0.428647, 0, 0, 0.502468,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.014416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478153,-99) , 
10, 1.77274, 1, 0, 0.516117,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498103,-99) , 
8, 1.28577, 0, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453383,-99) , 
4, 0.999048, 0, 0, 0.499344,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0227243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469628,-99) , 
5, -0.932014, 0, 0, 0.516873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490186,-99) , 
10, 0.519699, 1, 0, 0.50296,-99) , 
5, -0.714513, 1, 0, 0.505771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470594,-99) , 
10, 4.2114, 1, 0, 0.504566,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0242209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495919,-99) , 
0, 0.499043, 1, 0, 0.50256,-99) , 
8, 1.85394, 0, 0, 0.504905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474966,-99) , 
7, -951.286, 1, 0, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.461017,-99) , 
8, 1.28578, 1, 0, 0.491288,-99) , 
10, 1.30911, 1, 0, 0.502038,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0218677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499162,-99) , 
5, -0.429046, 1, 0, 0.509613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492647,-99) , 
8, 1.28583, 0, 0, 0.497066,-99) , 
0, 0.499043, 0, 0, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459875,-99) , 
4, 0.999048, 0, 0, 0.501045,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0162209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499424,-99) , 
9, -0.762665, 0, 0, 0.504349,-99) , 
9, -4.19339, 1, 0, 0.506455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466795,-99) , 
10, -2.52271, 0, 0, 0.505175,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0184383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460054,-99) , 
3, 9.11447, 1, 0, 0.502803,-99) , 
8, 1.85714, 0, 0, 0.50492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47201,-99) , 
0, 0.501898, 1, 0, 0.497313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441327,-99) , 
5, -0.714694, 1, 0, 0.487976,-99) , 
10, 1.78644, 1, 0, 0.502281,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0218702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.521882, 0, 1, 0.508969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465025,-99) , 
10, -2.58859, 0, 0, 0.507599,-99) , 
NN(
0, 
0, 
-1, -0.916874, 1, -1, 0.472579,-99) , 
10, 3.08085, 1, 0, 0.505309,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0252526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469929,-99) , 
0, 0.505709, 1, 0, 0.503953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458064,-99) , 
5, -0.82712, 1, 0, 0.484625,-99) , 
8, -0.999996, 0, 0, 0.502291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473586,-99) , 
10, -2.46366, 0, 0, 0.508625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422318,-99) , 
8, -0.689717, 1, 0, 0.486471,-99) , 
10, -1.5449, 0, 0, 0.499839,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0144582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
8, -1.53047, 1, 0, 0.4988,-99) , 
8, 2.14284, 0, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45325,-99) , 
4, 0.999048, 0, 0, 0.499206,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0090044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.502878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477471,-99) , 
5, 0.807926, 1, 0, 0.501821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470923,-99) , 
4, 0.999048, 0, 0, 0.500839,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0150204);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525194,-99) , 
NN(
0, 
0, 
-1, -0.132615, 0, -1, 0.494089,-99) , 
2, -0.214257, 1, 0, 0.495479,-99) , 
8, 2.1428, 0, 0, 0.496656,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0264772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473343,-99) , 
10, 4.25118, 1, 0, 0.51141,-99) , 
NN(
0, 
0, 
-1, 2.88968, 1, -1, 0.482648,-99) , 
8, -0.999846, 0, 0, 0.505681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494341,-99) , 
8, 1.52061, 0, 0, 0.497643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423263,-99) , 
10, 1.15811, 1, 0, 0.494574,-99) , 
5, -0.429054, 1, 0, 0.498857,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0227887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.25648, 0, 1, 0.536077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477503,-99) , 
0, 0.492377, 0, 0, 0.502186,-99) , 
8, 1.18384, 0, 0, 0.505431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493249,-99) , 
0, 0.5019, 0, 0, 0.499561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416004,-99) , 
5, 0.0466948, 1, 0, 0.491759,-99) , 
10, 0.759337, 1, 0, 0.501433,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0109432);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49938,-99) , 
9, 0.171632, 0, 0, 0.501492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44706,-99) , 
9, 2.18363, 0, 0, 0.485202,-99) , 
10, 2.77661, 1, 0, 0.50025,-99) , 
8, 2.14288, 0, 0, 0.501329,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0436857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4815, 0, 1, 0.506098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475739,-99) , 
8, 1.85714, 1, 0, 0.504077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
5, 0.612645, 0, 0, 0.514641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261472,-99) , 
5, 0.232727, 1, 0, 0.392159,-99) , 
7, -1.28574, 0, 0, 0.495938,-99) , 
7, -951.286, 1, 0, 0.500108,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0436327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491034,-99) , 
4, 0.999991, 0, 0, 0.508102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438098,-99) , 
4, 0.99981, 0, 0, 0.504742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461248,-99) , 
10, -2.15203, 0, 0, 0.527082,-99) , 
NN(
0, 
0, 
-1, -3.12747, 0, -1, 0.468333,-99) , 
8, -0.140981, 1, 0, 0.488285,-99) , 
5, 0.522519, 1, 0, 0.501505,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0148931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.534366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495993,-99) , 
5, -0.619354, 1, 0, 0.498891,-99) , 
2, 0.21409, 0, 0, 0.500174,-99) , 
8, 1.85713, 0, 0, 0.502412,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0219738);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491339,-99) , 
10, 1.01194, 1, 0, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449618,-99) , 
10, -2.30753, 0, 0, 0.502004,-99) , 
8, -1.8569, 1, 0, 0.503241,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0205918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479232,-99) , 
5, 0.619151, 1, 0, 0.520607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496356,-99) , 
5, 0.235645, 0, 0, 0.501391,-99) , 
8, 1.28577, 0, 0, 0.504068,-99) , 
NN(
0, 
0, 
-1, 2.42524, 0, -1, 0.479977,-99) , 
10, 3.05633, 1, 0, 0.502457,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0203539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.717928, 0, 1, 0.556178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446354,-99) , 
10, 0.502845, 1, 0, 0.49872,-99) , 
9, -1.71791, 0, 0, 0.50348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490173,-99) , 
0, 0.5019, 0, 0, 0.497101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437947,-99) , 
5, 0.045162, 1, 0, 0.49168,-99) , 
10, 0.795688, 1, 0, 0.500098,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0287743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48854,-99) , 
7, -951.286, 0, 0, 0.526353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445487,-99) , 
5, 0.617677, 1, 0, 0.496561,-99) , 
10, -0.294306, 1, 0, 0.50161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489744,-99) , 
5, 0.617307, 0, 0, 0.496674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418081,-99) , 
9, -3.39707, 1, 0, 0.460422,-99) , 
8, 0.193553, 1, 0, 0.489065,-99) , 
9, -3.01661, 0, 0, 0.496978,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.012812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712858, 0, 1, 0.53791,-99) , 
NN(
0, 
0, 
-1, 0.332161, 1, -1, 0.496323,-99) , 
4, 0.999524, 1, 0, 0.498559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464977,-99) , 
3, 9.32353, 1, 0, 0.49755,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0177538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496433,-99) , 
5, 0.199779, 1, 0, 0.529337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498994,-99) , 
9, -4.65909, 1, 0, 0.500938,-99) , 
8, 1.57142, 0, 0, 0.503311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472951,-99) , 
5, -0.883407, 1, 0, 0.5054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44532,-99) , 
5, -0.811643, 1, 0, 0.488104,-99) , 
10, 1.99143, 1, 0, 0.501219,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0565547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393159,-99) , 
7, -1.28559, 0, 0, 0.510934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485371,-99) , 
8, 0.428668, 0, 0, 0.494454,-99) , 
7, -951.286, 0, 0, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0.49904, 1, -1, 0.471288,-99) , 
10, 3.05633, 1, 0, 0.500515,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0296251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460746,-99) , 
3, 3.33118, 1, 0, 0.497699,-99) , 
5, -0.148026, 0, 0, 0.520333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491039,-99) , 
3, 3.98339, 1, 0, 0.505587,-99) , 
NN(
0, 
0, 
-1, -1.72578, 0, -1, 0.486651,-99) , 
5, 0.332206, 1, 0, 0.499877,-99) , 
8, -0.999778, 1, 0, 0.503146,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.024124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454418,-99) , 
10, 1.51789, 1, 0, 0.522065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497532,-99) , 
9, -2.67412, 0, 0, 0.503622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466614,-99) , 
9, -2.1304, 0, 0, 0.491049,-99) , 
10, -0.31321, 1, 0, 0.497326,-99) , 
8, 1.85714, 0, 0, 0.498923,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0207265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495434,-99) , 
5, 0.513427, 0, 0, 0.504299,-99) , 
9, -0.479071, 0, 0, 0.512718,-99) , 
NN(
NN(
0, 
0, 
-1, -2.74644, 0, 1, 0.506564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485953,-99) , 
5, -0.714523, 1, 0, 0.493376,-99) , 
10, -0.31321, 1, 0, 0.499663,-99) , 
0, 0.5019, 0, 0, 0.502211,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0222214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498702,-99) , 
4, 0.999524, 1, 0, 0.500024,-99) , 
8, 1.85534, 0, 0, 0.50224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44962,-99) , 
7, -951.286, 0, 0, 0.475583,-99) , 
9, 2.29257, 0, 0, 0.48509,-99) , 
10, 1.34887, 1, 0, 0.498713,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0320495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49405,-99) , 
8, -0.249823, 0, 0, 0.54704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427384,-99) , 
10, -0.0498983, 1, 0, 0.503131,-99) , 
9, -2.33904, 0, 0, 0.508044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482219,-99) , 
3, 1.88937, 0, 0, 0.495031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420409,-99) , 
5, 0.522469, 1, 0, 0.489815,-99) , 
10, 0.217946, 1, 0, 0.500782,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0131382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497173,-99) , 
8, 2.14285, 0, 0, 0.498578,-99) , 
3, 9.30072, 0, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, -3.2468, 0, -1, 0.469977,-99) , 
5, 0.805919, 1, 0, 0.498332,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.017579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496323,-99) , 
4, 0.999955, 1, 0, 0.499927,-99) , 
9, -4.34132, 1, 0, 0.501826,-99) , 
NN(
0, 
0, 
-1, -3.10657, 1, -1, 0.466345,-99) , 
4, 0.999524, 0, 0, 0.499935,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0312742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.622553, 0, 1, 0.544585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47475,-99) , 
10, 0.157469, 1, 0, 0.505991,-99) , 
9, -1.8617, 0, 0, 0.509803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489677,-99) , 
8, 1.57148, 0, 0, 0.495715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429882,-99) , 
5, 0.0467139, 1, 0, 0.489557,-99) , 
10, 0.745017, 1, 0, 0.503858,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0248954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492889,-99) , 
4, 0.99999, 0, 0, 0.504573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469191,-99) , 
4, 0.999796, 0, 0, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0.711848, 0, -1, 0.468969,-99) , 
4, 0.999524, 0, 0, 0.501261,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0246438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63359, 0, 1, 0.51766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451671,-99) , 
5, -0.239873, 1, 0, 0.497085,-99) , 
10, 1.00237, 1, 0, 0.507508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
9, -3.0017, 0, 0, 0.500287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457747,-99) , 
8, 0.778816, 1, 0, 0.495998,-99) , 
9, -2.58898, 0, 0, 0.501991,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.018498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.561647, 1, 1, 0.504205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471005,-99) , 
3, 9.39546, 1, 0, 0.503131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434707,-99) , 
9, 1.3182, 0, 0, 0.496408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459011,-99) , 
7, -951.286, 1, 0, 0.482008,-99) , 
10, 2.41454, 1, 0, 0.500928,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.027677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472662,-99) , 
4, 0.999955, 0, 0, 0.516635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49146,-99) , 
4, 0.999955, 1, 0, 0.496064,-99) , 
3, 4.48453, 0, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454278,-99) , 
4, 0.999048, 0, 0, 0.499031,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0124007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488011,-99) , 
7, -951.286, 0, 0, 0.524086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479144,-99) , 
10, -1.60878, 0, 0, 0.497167,-99) , 
8, -1.84353, 1, 0, 0.498534,-99) , 
8, 1.85709, 0, 0, 0.500171,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0189007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489695,-99) , 
5, -0.0489442, 0, 0, 0.510598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49496,-99) , 
5, -0.619529, 1, 0, 0.498935,-99) , 
2, -0.0716846, 1, 0, 0.500773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48447,-99) , 
0, 0.489558, 0, 0, 0.498368,-99) , 
NN(
0, 
0, 
-1, -0.241808, 1, -1, 0.477347,-99) , 
0, 0.491696, 1, 0, 0.489099,-99) , 
0, 0.493329, 0, 0, 0.499202,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0329013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483145,-99) , 
5, -0.809973, 0, 0, 0.535121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490474,-99) , 
5, 0.236535, 0, 0, 0.496074,-99) , 
6, 0.00787487, 0, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357771,-99) , 
6, 0.0236299, 1, 0, 0.497768,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0230982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494494,-99) , 
9, -1.73985, 0, 0, 0.498277,-99) , 
8, -1.92202, 1, 0, 0.500089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471758,-99) , 
10, 2.44782, 1, 0, 0.489076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452842,-99) , 
5, -0.241386, 1, 0, 0.485058,-99) , 
10, 0.926524, 1, 0, 0.496115,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0195655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85396, 0, 1, 0.506579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482646,-99) , 
3, 3.1588, 1, 0, 0.503108,-99) , 
NN(
0, 
0, 
-1, -0.620985, 1, -1, 0.466452,-99) , 
9, 0.215079, 0, 0, 0.488898,-99) , 
10, 1.32143, 1, 0, 0.502891,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0211812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480784,-99) , 
10, 2.29571, 1, 0, 0.503869,-99) , 
NN(
0, 
0, 
-1, -1.69401, 0, -1, 0.475638,-99) , 
8, -1.28571, 0, 0, 0.501993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472764,-99) , 
10, -2.26819, 0, 0, 0.50044,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0190582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491329,-99) , 
0, 0.499995, 0, 0, 0.495849,-99) , 
8, 2.1428, 0, 0, 0.49748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459199,-99) , 
4, 0.999048, 0, 0, 0.496299,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0116291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.24547, 1, 1, 0.528762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462075,-99) , 
10, -2.05092, 0, 0, 0.499167,-99) , 
9, -4.64789, 1, 0, 0.500631,-99) , 
9, 0.789697, 0, 0, 0.503321,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0104255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
3, 9.13548, 0, 0, 0.499312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4632,-99) , 
4, 0.999751, 0, 0, 0.498187,-99) , 
NN(
0, 
0, 
-1, 0.711848, 1, -1, 0.470613,-99) , 
4, 0.999524, 0, 0, 0.49673,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.00723037);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458623,-99) , 
3, 9.32353, 1, 0, 0.501157,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0296304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489091,-99) , 
4, 0.999991, 0, 0, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439763,-99) , 
4, 0.99981, 0, 0, 0.500326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499244,-99) , 
8, -0.913334, 1, 0, 0.514134,-99) , 
NN(
0, 
0, 
-1, -3.58359, 0, -1, 0.478701,-99) , 
8, -0.424148, 1, 0, 0.48763,-99) , 
5, 0.426761, 1, 0, 0.497215,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.017036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483519,-99) , 
10, 1.52586, 1, 0, 0.520744,-99) , 
NN(
NN(
0, 
0, 
-1, -1.88393, 1, 1, 0.504614,-99) , 
NN(
0, 
0, 
-1, -0.45566, 0, -1, 0.490601,-99) , 
10, -0.055909, 1, 0, 0.498632,-99) , 
8, 1.85713, 0, 0, 0.500049,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0250236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494556,-99) , 
2, 0.0630807, 0, 0, 0.498499,-99) , 
4, 0.999048, 1, 0, 0.500498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483838,-99) , 
10, -1.13171, 0, 0, 0.498354,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.465647,-99) , 
10, -0.149146, 1, 0, 0.483068,-99) , 
3, 4.60913, 1, 0, 0.496965,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.015788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497942,-99) , 
5, 0.0412988, 0, 0, 0.51511,-99) , 
NN(
0, 
0, 
-1, -3.75773, 0, -1, 0.495823,-99) , 
8, -0.714167, 1, 0, 0.499801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46565,-99) , 
10, -2.57238, 0, 0, 0.498763,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0297666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479284,-99) , 
10, 0.0810725, 0, 0, 0.5054,-99) , 
9, -4.04366, 1, 0, 0.521703,-99) , 
NN(
NN(
0, 
0, 
-1, 1.42288, 0, 1, 0.507438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335504,-99) , 
7, -1.85705, 0, 0, 0.492556,-99) , 
7, -951.286, 1, 0, 0.50005,-99) , 
8, -1.28554, 1, 0, 0.502333,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0204463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.388541, 1, 1, 0.518466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492286,-99) , 
0, 0.496185, 1, 0, 0.497157,-99) , 
8, 1.28577, 0, 0, 0.500298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459908,-99) , 
4, 0.999048, 0, 0, 0.499071,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0179008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494611,-99) , 
3, 4.75378, 1, 0, 0.505133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482296,-99) , 
5, -0.904797, 0, 0, 0.503382,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490196,-99) , 
0, 0.498091, 0, 0, 0.497002,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0112924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489118,-99) , 
5, -0.0550393, 1, 0, 0.526259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467854,-99) , 
8, -1.57142, 0, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469105,-99) , 
10, -2.50949, 0, 0, 0.498928,-99) , 
0, 0.491424, 1, 0, 0.500835,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0230558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49391,-99) , 
3, 1.83505, 0, 0, 0.519621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491743,-99) , 
4, 0.999524, 1, 0, 0.49341,-99) , 
0, 0.492376, 1, 0, 0.495978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462932,-99) , 
3, 9.08246, 1, 0, 0.494859,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.01712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495055,-99) , 
7, -951.286, 0, 0, 0.524184,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481488,-99) , 
9, -3.72151, 1, 0, 0.515695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440816,-99) , 
10, -1.99811, 0, 0, 0.498548,-99) , 
8, -1.38095, 1, 0, 0.500157,-99) , 
8, 1.85714, 0, 0, 0.501707,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0100637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519496,-99) , 
NN(
0, 
0, 
-1, 2.50646, 1, -1, 0.497483,-99) , 
9, 1.74434, 0, 0, 0.498745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475206,-99) , 
8, -0.347751, 0, 0, 0.488489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461883,-99) , 
8, 0.714391, 1, 0, 0.481019,-99) , 
0, 0.503805, 1, 0, 0.497031,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0298651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480318,-99) , 
4, 0.999977, 0, 0, 0.507687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487335,-99) , 
8, -0.998114, 1, 0, 0.491695,-99) , 
5, -0.42927, 1, 0, 0.498247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465553,-99) , 
4, 0.999524, 0, 0, 0.496519,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0208258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482319,-99) , 
10, 0.347352, 1, 0, 0.502261,-99) , 
8, 1.60876, 0, 0, 0.504308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471081,-99) , 
5, -0.431573, 1, 0, 0.502122,-99) , 
NN(
0, 
0, 
-1, -0.186897, 0, -1, 0.468872,-99) , 
0, 0.500947, 1, 0, 0.493046,-99) , 
10, 0.954811, 1, 0, 0.501353,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0239748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484777,-99) , 
8, -2.0474, 0, 0, 0.53087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494362,-99) , 
5, -0.0488236, 0, 0, 0.500685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409299,-99) , 
8, -0.98611, 1, 0, 0.46829,-99) , 
10, -1.85282, 0, 0, 0.498242,-99) , 
8, -1.57122, 1, 0, 0.500339,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0144712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496666,-99) , 
8, 2.14288, 0, 0, 0.497995,-99) , 
3, 8.78248, 0, 0, 0.499427,-99) , 
NN(
0, 
0, 
-1, 0.710896, 0, -1, 0.463743,-99) , 
4, 0.999524, 0, 0, 0.497538,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.014806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494597,-99) , 
5, 0.141849, 1, 0, 0.501741,-99) , 
4, 0.999048, 1, 0, 0.503158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474145,-99) , 
3, 9.25184, 1, 0, 0.502263,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0206085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904882, 1, 1, 0.510964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460288,-99) , 
10, -0.149146, 1, 0, 0.485153,-99) , 
3, 4.70258, 1, 0, 0.506294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494194,-99) , 
9, -0.441725, 0, 0, 0.495801,-99) , 
NN(
0, 
0, 
-1, 1.34297, 0, -1, 0.481499,-99) , 
5, -0.809761, 0, 0, 0.493629,-99) , 
0, 0.497138, 1, 0, 0.498741,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0152954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497862,-99) , 
2, 0.030687, 0, 0, 0.50206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469846,-99) , 
5, 0.807991, 1, 0, 0.500498,-99) , 
2, -0.214166, 1, 0, 0.501995,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0232163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.239233, 0, 1, 0.521945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489738,-99) , 
10, 2.28532, 0, 0, 0.500044,-99) , 
10, 0.287687, 1, 0, 0.512845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491294,-99) , 
10, -1.74495, 1, 0, 0.51245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491129,-99) , 
8, 1.57148, 0, 0, 0.492875,-99) , 
8, -1.28554, 1, 0, 0.494884,-99) , 
0, 0.501899, 0, 0, 0.498414,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0284161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.537274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490311,-99) , 
10, -0.468387, 1, 0, 0.506902,-99) , 
9, -2.1187, 0, 0, 0.509518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490691,-99) , 
8, 0.714391, 0, 0, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455227,-99) , 
5, 0.237003, 1, 0, 0.495206,-99) , 
10, 0.357493, 1, 0, 0.504248,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0130015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479548,-99) , 
10, 3.58218, 1, 0, 0.501633,-99) , 
8, 2.14287, 0, 0, 0.503211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446362,-99) , 
4, 0.999048, 0, 0, 0.501526,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0157534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467507,-99) , 
4, 0.999048, 0, 0, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447737,-99) , 
10, -2.21141, 0, 0, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468551,-99) , 
8, -1.85696, 0, 0, 0.499483,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0187717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52344, 1, 1, 0.532628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494632,-99) , 
2, -0.215926, 1, 0, 0.496081,-99) , 
8, 1.85714, 0, 0, 0.498434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449538,-99) , 
4, 0.999048, 0, 0, 0.496956,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0200666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.55862, 1, 1, 0.522182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491515,-99) , 
7, -951.286, 1, 0, 0.498138,-99) , 
2, -0.0754763, 1, 0, 0.501302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476975,-99) , 
0, 0.497142, 0, 0, 0.492577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447501,-99) , 
5, 0.610927, 1, 0, 0.484986,-99) , 
3, 4.74841, 1, 0, 0.498234,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0119421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463314,-99) , 
4, 0.999796, 0, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474759,-99) , 
4, 0.999524, 0, 0, 0.500348,-99) , 
NN(
0, 
0, 
-1, 0.870373, 1, -1, 0.472928,-99) , 
5, 0.806968, 1, 0, 0.498909,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0192049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492458,-99) , 
5, 0.471466, 1, 0, 0.529156,-99) , 
NN(
0, 
0, 
-1, -1.77534, 1, 1, 0.502579,-99) , 
8, 1.28574, 0, 0, 0.505858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49085,-99) , 
7, -951.287, 1, 0, 0.509417,-99) , 
NN(
0, 
0, 
-1, 2.15612, 1, -1, 0.462106,-99) , 
9, 0.750766, 0, 0, 0.490168,-99) , 
10, 1.74667, 1, 0, 0.503363,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.00979242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497771,-99) , 
2, 0.192862, 0, 0, 0.498807,-99) , 
2, -0.214823, 1, 0, 0.499937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466722,-99) , 
3, 9.32353, 1, 0, 0.498949,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0162211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481499,-99) , 
7, -951.286, 0, 0, 0.518367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499184,-99) , 
8, -0.452107, 1, 0, 0.510147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452688,-99) , 
4, 0.999905, 0, 0, 0.496737,-99) , 
5, 0.521882, 0, 0, 0.499396,-99) , 
8, 1.85718, 0, 0, 0.500609,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0249704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486332,-99) , 
0, 0.502852, 1, 0, 0.514164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48041,-99) , 
2, 0.0630807, 1, 0, 0.508766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49726,-99) , 
9, -2.1763, 0, 0, 0.500549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463952,-99) , 
9, -0.608498, 0, 0, 0.476346,-99) , 
10, 0.513098, 1, 0, 0.496045,-99) , 
5, -0.714526, 1, 0, 0.499006,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0234914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499423,-99) , 
8, 0.142593, 0, 0, 0.527324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471353,-99) , 
10, 0.814644, 1, 0, 0.501287,-99) , 
9, -0.942205, 0, 0, 0.504956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472188,-99) , 
9, 1.83278, 0, 0, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436631,-99) , 
5, -0.812562, 1, 0, 0.487199,-99) , 
10, 2.37761, 1, 0, 0.50307,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0158377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476882,-99) , 
10, 1.46479, 1, 0, 0.521537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498364,-99) , 
9, 0.355438, 0, 0, 0.500561,-99) , 
8, 1.57148, 0, 0, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46774,-99) , 
4, 0.999048, 0, 0, 0.50157,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.012344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50916, 1, 1, 0.519214,-99) , 
NN(
0, 
0, 
-1, 0.999789, 0, -1, 0.496934,-99) , 
5, 0.617677, 0, 0, 0.500243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470991,-99) , 
3, 9.32353, 1, 0, 0.499364,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0150641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483668,-99) , 
8, -2.04761, 0, 0, 0.519117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482775,-99) , 
8, -0.700661, 0, 0, 0.498721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402383,-99) , 
8, -0.962494, 1, 0, 0.464116,-99) , 
10, -1.85949, 0, 0, 0.49613,-99) , 
8, -1.57141, 1, 0, 0.497636,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0248416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494672,-99) , 
4, 0.999977, 1, 0, 0.50064,-99) , 
4, 0.999524, 1, 0, 0.503347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480055,-99) , 
0, 0.496187, 0, 0, 0.506008,-99) , 
NN(
0, 
0, 
-1, -0.0757874, 0, -1, 0.476365,-99) , 
5, 0.0428521, 0, 0, 0.489505,-99) , 
3, 4.60062, 1, 0, 0.500537,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0186572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.51407, 0, 1, 0.506406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470218,-99) , 
8, 1.00018, 1, 0, 0.493034,-99) , 
10, 1.41042, 1, 0, 0.503594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471648,-99) , 
10, -2.23425, 0, 0, 0.501801,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0227653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.010191, 0, 1, 0.554571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497462,-99) , 
9, 0.807362, 0, 0, 0.499689,-99) , 
6, 0.0101877, 0, 0, 0.504136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373776,-99) , 
6, 0.0237714, 1, 0, 0.500878,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.00888096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
9, 0.339753, 0, 0, 0.501675,-99) , 
NN(
0, 
0, 
-1, -0.909768, 1, -1, 0.483146,-99) , 
10, 3.12477, 1, 0, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469028,-99) , 
4, 0.999048, 0, 0, 0.499457,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0242904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459162,-99) , 
9, -2.47813, 1, 0, 0.499662,-99) , 
7, -951.286, 0, 0, 0.521074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498936,-99) , 
10, -0.919531, 1, 0, 0.502902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398347,-99) , 
8, -0.878825, 1, 0, 0.454076,-99) , 
10, -1.70818, 0, 0, 0.498949,-99) , 
8, -1.28554, 1, 0, 0.501263,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0157032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499368,-99) , 
8, 0.141549, 0, 0, 0.527701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497238,-99) , 
2, 0.0714933, 0, 0, 0.500067,-99) , 
9, -0.18025, 0, 0, 0.502374,-99) , 
NN(
0, 
0, 
-1, 1.84796, 0, -1, 0.479267,-99) , 
10, 2.77661, 1, 0, 0.500501,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0173066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486678,-99) , 
8, -1.77531, 0, 0, 0.500556,-99) , 
7, -951.286, 0, 0, 0.521327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474506,-99) , 
10, 2.6254, 1, 0, 0.49874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421691,-99) , 
10, -2.01698, 0, 0, 0.470658,-99) , 
9, -4.08861, 0, 0, 0.496536,-99) , 
8, -1.28554, 1, 0, 0.499135,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0156133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495655,-99) , 
5, 0.554751, 1, 0, 0.53036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48751,-99) , 
10, 2.16408, 1, 0, 0.519606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497796,-99) , 
8, -0.605588, 1, 0, 0.51536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486849,-99) , 
10, 0.423521, 1, 0, 0.498146,-99) , 
5, -0.904924, 1, 0, 0.499593,-99) , 
8, 1.57148, 0, 0, 0.501614,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0203126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460715,-99) , 
4, 0.999841, 0, 0, 0.504182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463741,-99) , 
4, 0.999524, 0, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0.870645, 0, -1, 0.471644,-99) , 
5, 0.80723, 1, 0, 0.501031,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0268145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486689,-99) , 
0, 0.499995, 1, 0, 0.503764,-99) , 
5, -0.146137, 0, 0, 0.508152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491702,-99) , 
5, 0.522592, 0, 0, 0.498342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45955,-99) , 
10, -2.52426, 0, 0, 0.496322,-99) , 
9, -1.85427, 0, 0, 0.500544,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.02424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469173,-99) , 
8, -0.206282, 0, 0, 0.538574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441959,-99) , 
10, -0.30655, 1, 0, 0.497698,-99) , 
9, -2.57546, 0, 0, 0.502699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474152,-99) , 
2, 0.0764488, 1, 0, 0.497547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452008,-99) , 
9, -1.68264, 0, 0, 0.471152,-99) , 
5, 0.0455324, 1, 0, 0.492508,-99) , 
10, -0.0541579, 1, 0, 0.497984,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.00670037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499725,-99) , 
3, 9.13153, 0, 0, 0.500608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475283,-99) , 
4, 0.999683, 0, 0, 0.499553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457198,-99) , 
4, 0.999048, 0, 0, 0.498277,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.01848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476051,-99) , 
10, 1.51004, 1, 0, 0.521875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524913,-99) , 
NN(
0, 
0, 
-1, -2.13247, 0, -1, 0.493866,-99) , 
8, -1.84327, 1, 0, 0.495137,-99) , 
8, 1.85711, 0, 0, 0.496844,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0368704);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371668,-99) , 
7, -1.85715, 0, 0, 0.504196,-99) , 
NN(
0, 
0, 
-1, 1.23427, 1, -1, 0.487656,-99) , 
7, -951.286, 0, 0, 0.495831,-99) , 
9, 2.09564, 0, 0, 0.497352,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0122772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714523, 1, 1, 0.505331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469902,-99) , 
10, -2.52271, 0, 0, 0.504176,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0291956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493017,-99) , 
8, 0.445933, 0, 0, 0.528448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473934,-99) , 
5, 0.0461413, 1, 0, 0.499531,-99) , 
10, 0.0996007, 1, 0, 0.50482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
9, -4.15677, 1, 0, 0.507359,-99) , 
NN(
0, 
0, 
-1, -1.28539, 0, -1, 0.479283,-99) , 
7, -951.286, 1, 0, 0.491471,-99) , 
9, -2.58898, 0, 0, 0.498391,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00881296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538649,-99) , 
NN(
NN(
0, 
0, 
-1, 0.712113, 0, 1, 0.502401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476964,-99) , 
3, 9.37272, 1, 0, 0.501663,-99) , 
8, 2.14284, 0, 0, 0.503124,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0140013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496539,-99) , 
2, -0.214276, 1, 0, 0.497988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459866,-99) , 
3, 9.38661, 1, 0, 0.496854,-99) , 
9, 2.71126, 0, 0, 0.498516,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0132838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.505421,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.471387,-99) , 
4, 0.999524, 0, 0, 0.50363,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0233842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495072,-99) , 
8, -0.429472, 0, 0, 0.529303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493293,-99) , 
7, -951.286, 1, 0, 0.500851,-99) , 
9, -0.711921, 0, 0, 0.502584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492228,-99) , 
10, 3.14417, 1, 0, 0.505992,-99) , 
NN(
0, 
0, 
-1, 0.248123, 0, -1, 0.465854,-99) , 
9, 0.779443, 0, 0, 0.489865,-99) , 
10, 1.77307, 1, 0, 0.500571,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.012531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04743, 0, 1, 0.532229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460696,-99) , 
10, -2.05444, 0, 0, 0.498585,-99) , 
NN(
0, 
0, 
-1, 0.388376, 0, -1, 0.470425,-99) , 
0, 0.491424, 0, 0, 0.496734,-99) , 
8, -1.57125, 1, 0, 0.499121,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0203225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57858, 0, 1, 0.524662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494423,-99) , 
3, 0.95519, 1, 0, 0.499564,-99) , 
5, -0.90484, 1, 0, 0.501668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481106,-99) , 
2, 0.0711578, 1, 0, 0.495907,-99) , 
NN(
0, 
0, 
-1, 0.714333, 1, -1, 0.466401,-99) , 
10, 0.899227, 1, 0, 0.488555,-99) , 
3, 4.54637, 1, 0, 0.498983,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0151513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475553,-99) , 
4, 0.999524, 0, 0, 0.501889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421846,-99) , 
10, -2.38109, 0, 0, 0.499587,-99) , 
8, -1.85696, 1, 0, 0.5009,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0319545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496044,-99) , 
9, -4.47987, 1, 0, 0.501278,-99) , 
5, 0.610918, 0, 0, 0.504964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481609,-99) , 
10, 0.712008, 1, 0, 0.497787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431866,-99) , 
10, -1.12885, 0, 0, 0.468854,-99) , 
9, -3.40863, 0, 0, 0.493436,-99) , 
8, -0.428573, 1, 0, 0.497079,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0328587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490655,-99) , 
4, 0.99999, 0, 0, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457145,-99) , 
4, 0.999789, 0, 0, 0.501307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459224,-99) , 
10, -1.87904, 0, 0, 0.510591,-99) , 
NN(
0, 
0, 
-1, -2.93239, 0, -1, 0.464875,-99) , 
8, 0.144891, 1, 0, 0.484591,-99) , 
5, 0.617677, 1, 0, 0.49881,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0147883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711305, 0, 1, 0.540809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49698,-99) , 
9, 0.600872, 0, 0, 0.499451,-99) , 
4, 0.999524, 1, 0, 0.501637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470269,-99) , 
3, 9.32353, 1, 0, 0.500686,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0205862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477302,-99) , 
3, 4.2031, 1, 0, 0.505975,-99) , 
8, 1.00005, 0, 0, 0.51247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493971,-99) , 
9, -3.58785, 1, 0, 0.512499,-99) , 
NN(
0, 
0, 
-1, -1.71603, 0, -1, 0.493829,-99) , 
8, -1.28573, 1, 0, 0.495779,-99) , 
0, 0.5019, 0, 0, 0.499079,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0128384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465379,-99) , 
10, 2.088, 1, 0, 0.500244,-99) , 
9, 1.1036, 0, 0, 0.501904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470335,-99) , 
10, 4.18441, 1, 0, 0.500815,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0239916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488285,-99) , 
5, -0.143932, 1, 0, 0.498962,-99) , 
4, 0.999524, 1, 0, 0.500906,-99) , 
NN(
0, 
0, 
-1, 0.495235, 0, -1, 0.484369,-99) , 
3, 4.5869, 1, 0, 0.497541,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0292006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.511358, 1, 1, 0.542349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459154,-99) , 
7, -951.286, 0, 0, 0.478683,-99) , 
10, 1.11496, 1, 0, 0.511908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490465,-99) , 
5, -0.619712, 1, 0, 0.496248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456496,-99) , 
8, -1.97926, 0, 0, 0.494985,-99) , 
8, 1.28582, 0, 0, 0.497524,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0220509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498,-99) , 
9, -4.70991, 1, 0, 0.49958,-99) , 
8, 1.42168, 0, 0, 0.502151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486445,-99) , 
10, 1.45257, 1, 0, 0.495903,-99) , 
NN(
0, 
0, 
-1, 0.964329, 0, -1, 0.444905,-99) , 
9, -1.25772, 0, 0, 0.487052,-99) , 
10, 0.71673, 1, 0, 0.497604,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0246414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.04973, 0, 1, 0.52157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479559,-99) , 
10, -0.414548, 1, 0, 0.498671,-99) , 
8, 0.667174, 0, 0, 0.503977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478172,-99) , 
10, 2.22665, 1, 0, 0.491162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443557,-99) , 
5, 0.0447185, 1, 0, 0.486738,-99) , 
10, 0.759337, 1, 0, 0.498962,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.013998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
0, 0.503804, 0, 0, 0.50201,-99) , 
8, 1.46411, 0, 0, 0.503969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522324,-99) , 
NN(
0, 
0, 
-1, 1.65311, 1, -1, 0.486991,-99) , 
8, 2.14289, 0, 0, 0.491405,-99) , 
10, 0.759337, 1, 0, 0.500278,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0202571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.363646, 0, 1, 0.514745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48042,-99) , 
9, -3.3728, 0, 0, 0.500473,-99) , 
8, -0.428446, 1, 0, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458948,-99) , 
4, 0.999048, 0, 0, 0.503641,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00821156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499624,-99) , 
9, 0.329722, 0, 0, 0.500898,-99) , 
NN(
0, 
0, 
-1, 1.93979, 0, -1, 0.479447,-99) , 
10, 2.81353, 1, 0, 0.499144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469076,-99) , 
3, 9.08221, 1, 0, 0.498121,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0137889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
0, 0.495233, 1, 0, 0.503603,-99) , 
9, 0.6367, 0, 0, 0.504974,-99) , 
NN(
0, 
0, 
-1, 1.89798, 0, -1, 0.481225,-99) , 
10, 2.81353, 1, 0, 0.503094,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0334839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12083, 0, 1, 0.51201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458225,-99) , 
10, -0.107472, 0, 0, 0.484974,-99) , 
8, 0.604402, 1, 0, 0.507407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483454,-99) , 
10, 0.260284, 1, 0, 0.489269,-99) , 
8, 2.14281, 0, 0, 0.492955,-99) , 
9, -2.50379, 1, 0, 0.500307,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0297621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.900969, 1, 1, 0.512443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456914,-99) , 
8, -0.203779, 1, 0, 0.492828,-99) , 
9, -3.25864, 0, 0, 0.504302,-99) , 
NN(
0, 
0, 
-1, -0.334267, 1, -1, 0.486702,-99) , 
10, 0.911751, 1, 0, 0.499624,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.025013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497796,-99) , 
3, 4.73378, 1, 0, 0.508473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400158,-99) , 
8, -0.962426, 1, 0, 0.467931,-99) , 
10, -1.8542, 0, 0, 0.505475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456914,-99) , 
0, 0.49809, 1, 0, 0.479111,-99) , 
8, -1.57141, 0, 0, 0.503882,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0260066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497737,-99) , 
8, 0.237281, 1, 0, 0.510713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492034,-99) , 
0, 0.500947, 0, 0, 0.496251,-99) , 
5, 0.33221, 0, 0, 0.499815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492887,-99) , 
9, -4.15985, 0, 0, 0.507321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382542,-99) , 
8, -0.558049, 1, 0, 0.486904,-99) , 
10, -1.55321, 0, 0, 0.497825,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0140884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524581,-99) , 
NN(
NN(
0, 
0, 
-1, 0.918439, 0, 1, 0.505282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491795,-99) , 
5, 0.331644, 0, 0, 0.495108,-99) , 
0, 0.495233, 1, 0, 0.497646,-99) , 
8, 2.14286, 0, 0, 0.498672,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0162956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0489433, 1, 1, 0.544982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485526,-99) , 
5, -0.904994, 0, 0, 0.50033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485851,-99) , 
0, 0.506026, 0, 0, 0.489427,-99) , 
0, 0.500947, 1, 0, 0.497527,-99) , 
8, 1.85714, 0, 0, 0.500682,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0169754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00227555, 0, 1, 0.513109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495042,-99) , 
2, 0.153213, 0, 0, 0.497224,-99) , 
2, -0.0712183, 1, 0, 0.499956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464272,-99) , 
8, 2.1428, 1, 0, 0.498725,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0105485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.807991, 0, 1, 0.501944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483858,-99) , 
2, -0.0717387, 1, 0, 0.489044,-99) , 
0, 0.494281, 0, 0, 0.499581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465791,-99) , 
10, -2.48877, 0, 0, 0.498372,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0246157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478229,-99) , 
7, -951.286, 0, 0, 0.516104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
3, 1.35686, 0, 0, 0.504929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49219,-99) , 
8, -1.1479, 1, 0, 0.495159,-99) , 
5, -0.429294, 1, 0, 0.499015,-99) , 
8, 1.85716, 0, 0, 0.500077,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0355804);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.09845, 1, 1, 0.531388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347111,-99) , 
7, -1.85712, 0, 0, 0.506418,-99) , 
NN(
0, 
0, 
-1, 2.20043, 1, -1, 0.495151,-99) , 
7, -951.286, 0, 0, 0.500709,-99) , 
9, 1.33504, 0, 0, 0.50295,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0153042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489845,-99) , 
10, 0.514112, 1, 0, 0.497319,-99) , 
NN(
0, 
0, 
-1, -0.449695, 0, -1, 0.476104,-99) , 
8, -1.28554, 0, 0, 0.495916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464188,-99) , 
10, -2.21706, 0, 0, 0.494089,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0329917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.148195, 0, 1, 0.515722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40479,-99) , 
7, -1.57169, 0, 0, 0.494209,-99) , 
7, -951.286, 1, 0, 0.505401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436829,-99) , 
4, 0.999048, 0, 0, 0.503447,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0318557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487929,-99) , 
10, 1.56354, 1, 0, 0.502947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475165,-99) , 
5, -0.906677, 1, 0, 0.486753,-99) , 
8, -0.428446, 0, 0, 0.499609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48404,-99) , 
9, -4.17435, 0, 0, 0.498535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406946,-99) , 
8, -0.701173, 1, 0, 0.47539,-99) , 
10, -1.55321, 0, 0, 0.495888,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0337379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483117,-99) , 
0, 0.502851, 1, 0, 0.515131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477314,-99) , 
8, -0.551017, 0, 0, 0.485623,-99) , 
8, -0.142723, 0, 0, 0.50566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482687,-99) , 
8, -1.31036, 1, 0, 0.509054,-99) , 
NN(
0, 
0, 
-1, 0.521883, 0, -1, 0.486263,-99) , 
9, -4.13208, 1, 0, 0.489691,-99) , 
9, -1.26707, 0, 0, 0.493939,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0187653);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498523,-99) , 
5, 0.0467411, 1, 0, 0.531275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4916,-99) , 
7, -951.286, 1, 0, 0.498688,-99) , 
8, 1.85709, 0, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459697,-99) , 
4, 0.999048, 0, 0, 0.499524,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0199313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487423,-99) , 
7, -951.286, 0, 0, 0.514719,-99) , 
NN(
0, 
0, 
-1, 1.28579, 1, -1, 0.495749,-99) , 
5, 0.712834, 0, 0, 0.497727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482035,-99) , 
8, 0.999832, 0, 0, 0.488395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451625,-99) , 
5, 0.612577, 1, 0, 0.483066,-99) , 
0, 0.495233, 0, 0, 0.494189,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.020088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4956,-99) , 
0, 0.496957, 0, 0, 0.503182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460875,-99) , 
0, 0.505994, 0, 0, 0.481442,-99) , 
0, 0.504213, 1, 0, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0.492512, 1, -1, 0.477608,-99) , 
0, 0.493329, 0, 0, 0.498075,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0279031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.507577, 1, 1, 0.528779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473676,-99) , 
3, 2.83825, 1, 0, 0.497766,-99) , 
5, -0.144339, 0, 0, 0.513265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
10, 3.97486, 1, 0, 0.507462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490739,-99) , 
9, -0.970909, 0, 0, 0.493103,-99) , 
5, -0.714526, 1, 0, 0.496442,-99) , 
2, 0.071273, 0, 0, 0.499018,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0169971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23882, 1, 1, 0.518095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49675,-99) , 
8, 1.57147, 0, 0, 0.49903,-99) , 
2, -0.068022, 1, 0, 0.501693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473466,-99) , 
0, 0.497138, 0, 0, 0.492611,-99) , 
NN(
0, 
0, 
-1, -0.0519494, 0, -1, 0.475483,-99) , 
2, -0.0718883, 0, 0, 0.487564,-99) , 
3, 4.54783, 1, 0, 0.498807,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0221751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485377,-99) , 
4, 0.999955, 1, 0, 0.513411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475379,-99) , 
4, 0.999955, 0, 0, 0.498878,-99) , 
5, 0.522468, 0, 0, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457494,-99) , 
4, 0.999048, 0, 0, 0.500258,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0297449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.18682, 0, 1, 0.51433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461895,-99) , 
10, 0.509332, 1, 0, 0.509025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497702,-99) , 
10, 0.968676, 1, 0, 0.508864,-99) , 
NN(
0, 
0, 
-1, -0.877423, 0, -1, 0.486497,-99) , 
8, 0.428616, 0, 0, 0.494193,-99) , 
5, -0.144044, 0, 0, 0.501528,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00939631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49935,-99) , 
8, -0.700439, 1, 0, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470803,-99) , 
8, -1.57115, 0, 0, 0.500514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473281,-99) , 
10, -2.52064, 0, 0, 0.499608,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0127147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483131,-99) , 
10, 1.29729, 1, 0, 0.499403,-99) , 
9, 0.998191, 0, 0, 0.500812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475671,-99) , 
10, 3.39176, 1, 0, 0.499452,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00775621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468857,-99) , 
3, 9.25184, 1, 0, 0.499873,-99) , 
9, -4.30461, 1, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466416,-99) , 
10, -2.56685, 0, 0, 0.500202,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0208656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.865769, 1, 1, 0.532221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45777,-99) , 
8, -0.432483, 1, 0, 0.481749,-99) , 
5, -0.927486, 0, 0, 0.514345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497103,-99) , 
8, 1.85727, 0, 0, 0.499387,-99) , 
NN(
0, 
0, 
-1, 0.189438, 0, -1, 0.473992,-99) , 
10, 1.56179, 1, 0, 0.497337,-99) , 
5, -0.809677, 1, 0, 0.50004,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0264385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476973,-99) , 
8, -1.09533, 0, 0, 0.504299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406134,-99) , 
8, -1.25107, 1, 0, 0.483132,-99) , 
10, -2.06535, 0, 0, 0.502162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492112,-99) , 
8, 1.57136, 0, 0, 0.497547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451727,-99) , 
5, -0.240204, 1, 0, 0.492785,-99) , 
10, 0.969131, 1, 0, 0.499743,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0101148);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523637,-99) , 
NN(
0, 
0, 
-1, -2.06711, 0, -1, 0.496984,-99) , 
9, 2.09564, 0, 0, 0.49831,-99) , 
2, 0.214255, 0, 0, 0.499549,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0176408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495267,-99) , 
8, 0.428632, 0, 0, 0.523539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486761,-99) , 
10, 0.198939, 1, 0, 0.497156,-99) , 
9, -0.615664, 0, 0, 0.500431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445466,-99) , 
3, 1.75609, 0, 0, 0.482478,-99) , 
10, 2.77661, 1, 0, 0.49897,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0174643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495001,-99) , 
7, -951.286, 0, 0, 0.504383,-99) , 
5, -0.239187, 0, 0, 0.509753,-99) , 
NN(
NN(
0, 
0, 
-1, -2.50865, 0, -1, 0.497852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449495,-99) , 
5, -0.0460106, 1, 0, 0.477888,-99) , 
10, 0.177057, 1, 0, 0.49499,-99) , 
9, -1.6641, 0, 0, 0.499792,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0216916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475659,-99) , 
5, -0.812759, 1, 0, 0.508479,-99) , 
10, 1.85908, 1, 0, 0.516837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
8, 1.28573, 0, 0, 0.499231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438673,-99) , 
10, 1.40063, 1, 0, 0.497221,-99) , 
9, -0.541537, 0, 0, 0.500922,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0147617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909869, 1, 1, 0.524368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464958,-99) , 
10, 1.71826, 1, 0, 0.500144,-99) , 
9, 0.536301, 0, 0, 0.501995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453375,-99) , 
10, 4.20333, 1, 0, 0.500394,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0294133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483562,-99) , 
9, 2.05664, 0, 0, 0.50454,-99) , 
10, 2.49391, 1, 0, 0.516701,-99) , 
NN(
NN(
0, 
0, 
-1, -2.83174, 0, 1, 0.508959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486868,-99) , 
9, -2.71389, 1, 0, 0.492825,-99) , 
10, -0.301631, 1, 0, 0.501811,-99) , 
9, -0.0411847, 0, 0, 0.504025,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0249492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49877,-99) , 
9, -1.80773, 0, 0, 0.506274,-99) , 
NN(
0, 
0, 
-1, 0.068083, 1, -1, 0.489208,-99) , 
8, -0.142742, 0, 0, 0.501546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488898,-99) , 
9, -3.83236, 0, 0, 0.499221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403868,-99) , 
8, -0.367498, 1, 0, 0.4846,-99) , 
10, -1.34315, 0, 0, 0.49818,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0229486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457517,-99) , 
4, 0.999905, 0, 0, 0.503752,-99) , 
NN(
0, 
0, 
-1, -2.32687, 0, -1, 0.488937,-99) , 
5, 0.237008, 1, 0, 0.498469,-99) , 
NN(
0, 
0, 
-1, 1.00182, 1, -1, 0.473929,-99) , 
10, 2.77661, 1, 0, 0.496493,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0146351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00006, 1, 1, 0.526899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494376,-99) , 
9, -3.08614, 0, 0, 0.516606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531727,-99) , 
NN(
0, 
0, 
-1, 0.499224, 1, -1, 0.495909,-99) , 
8, 2.14288, 0, 0, 0.497282,-99) , 
0, 0.502852, 0, 0, 0.500071,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0156308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477793,-99) , 
2, -0.0726031, 0, 0, 0.508433,-99) , 
0, 0.493329, 1, 0, 0.514517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470084,-99) , 
10, -2.11825, 0, 0, 0.498,-99) , 
8, -1.85656, 1, 0, 0.499561,-99) , 
9, -1.14454, 0, 0, 0.503364,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0401783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476245,-99) , 
4, 0.999995, 0, 0, 0.507599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465408,-99) , 
4, 0.999905, 0, 0, 0.505361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493926,-99) , 
9, -1.94813, 0, 0, 0.497968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438188,-99) , 
10, 0.889302, 1, 0, 0.494618,-99) , 
5, -0.238758, 1, 0, 0.499722,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0194407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493341,-99) , 
2, -0.00345423, 1, 0, 0.508673,-99) , 
2, 0.0713805, 0, 0, 0.51472,-99) , 
NN(
NN(
0, 
0, 
-1, -3.06145, 0, 1, 0.513817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487745,-99) , 
0, 0.502308, 1, 0, 0.499524,-99) , 
5, 0.616722, 0, 0, 0.501761,-99) , 
0, 0.495233, 1, 0, 0.505018,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0161014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495853,-99) , 
9, -0.723309, 0, 0, 0.499542,-99) , 
9, -4.19918, 1, 0, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473389,-99) , 
10, -2.52125, 0, 0, 0.500541,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.019788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.70535, 1, 1, 0.527946,-99) , 
NN(
0, 
0, 
-1, -0.275183, 1, -1, 0.491539,-99) , 
3, 4.62601, 1, 0, 0.515106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495836,-99) , 
4, 0.999977, 1, 0, 0.500717,-99) , 
4, 0.999524, 1, 0, 0.501908,-99) , 
2, 0.0707112, 0, 0, 0.503944,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0227159);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492236,-99) , 
10, 1.09596, 1, 0, 0.506598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454953,-99) , 
5, -0.904808, 0, 0, 0.504608,-99) , 
9, 1.83089, 0, 0, 0.505711,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0168343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.512725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495902,-99) , 
9, -0.542672, 0, 0, 0.497559,-99) , 
5, -0.714523, 1, 0, 0.501162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457897,-99) , 
3, 8.91541, 1, 0, 0.499631,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.013298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499939,-99) , 
8, 1.16327, 0, 0, 0.502905,-99) , 
NN(
0, 
0, 
-1, 1.48415, 0, -1, 0.473041,-99) , 
5, -0.90511, 0, 0, 0.500621,-99) , 
8, 2.14287, 0, 0, 0.502595,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0235519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999942, 1, 1, 0.510607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475291,-99) , 
4, 0.999796, 0, 0, 0.509128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459255,-99) , 
10, -0.890614, 1, 0, 0.480974,-99) , 
4, 0.999524, 0, 0, 0.507646,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0257558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22061, 0, 1, 0.507075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442305,-99) , 
5, 0.141911, 1, 0, 0.496813,-99) , 
10, 0.251949, 1, 0, 0.503787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462498,-99) , 
0, 0.499046, 1, 0, 0.491559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431539,-99) , 
9, 1.36285, 0, 0, 0.472471,-99) , 
10, 2.47498, 1, 0, 0.500643,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0403568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444467,-99) , 
8, -1.77524, 0, 0, 0.494851,-99) , 
7, -951.286, 0, 0, 0.51532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475171,-99) , 
5, 0.612078, 1, 0, 0.505751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391184,-99) , 
7, -1.2859, 0, 0, 0.490645,-99) , 
7, -951.286, 1, 0, 0.498298,-99) , 
8, -1.28544, 1, 0, 0.500095,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0297457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430819,-99) , 
10, -1.14242, 0, 0, 0.502129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481009,-99) , 
5, 0.515909, 0, 0, 0.487435,-99) , 
8, -0.142851, 0, 0, 0.496017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451214,-99) , 
10, 4.12124, 1, 0, 0.494463,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.021993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493972,-99) , 
9, -0.962479, 0, 0, 0.495884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459571,-99) , 
10, 1.66346, 1, 0, 0.494499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461854,-99) , 
10, 4.14403, 1, 0, 0.483799,-99) , 
NN(
0, 
0, 
-1, 2.45146, 1, -1, 0.458678,-99) , 
9, 1.12541, 0, 0, 0.472986,-99) , 
10, 2.01783, 1, 0, 0.491609,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0304757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480261,-99) , 
10, 1.52118, 1, 0, 0.5208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493362,-99) , 
9, -2.7218, 0, 0, 0.499825,-99) , 
NN(
0, 
0, 
-1, -0.524726, 1, -1, 0.484156,-99) , 
10, -0.283037, 1, 0, 0.492138,-99) , 
8, 1.85713, 0, 0, 0.493949,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0158493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499238,-99) , 
8, 0.142982, 1, 0, 0.504922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481624,-99) , 
10, -2.26819, 0, 0, 0.503678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493514,-99) , 
2, -0.0731645, 1, 0, 0.497478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458877,-99) , 
8, 1.28587, 1, 0, 0.492199,-99) , 
0, 0.500947, 1, 0, 0.500752,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00988701);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468931,-99) , 
3, 9.33163, 1, 0, 0.503079,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0208198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.530046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456505,-99) , 
7, -0.428721, 0, 0, 0.494612,-99) , 
7, -951.286, 1, 0, 0.512848,-99) , 
NN(
NN(
0, 
0, 
-1, -2.05659, 1, 1, 0.516338,-99) , 
NN(
0, 
0, 
-1, -1.85397, 0, -1, 0.494067,-99) , 
8, -1.2857, 1, 0, 0.496427,-99) , 
2, 0.0711978, 0, 0, 0.49898,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0188808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0736411, 1, 1, 0.517348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
4, 0.999977, 1, 0, 0.50097,-99) , 
0, 0.495234, 1, 0, 0.504997,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.476126,-99) , 
4, 0.999524, 0, 0, 0.503512,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0103298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531552,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.497515,-99) , 
8, 2.14284, 0, 0, 0.498746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464714,-99) , 
4, 0.999524, 0, 0, 0.497001,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0343307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493438,-99) , 
5, 0.611207, 1, 0, 0.527034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468867,-99) , 
8, -0.714136, 0, 0, 0.499813,-99) , 
9, -2.97727, 1, 0, 0.508528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49744,-99) , 
5, 0.615826, 0, 0, 0.505652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387656,-99) , 
7, -1.85705, 0, 0, 0.497084,-99) , 
7, -951.286, 1, 0, 0.502965,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0266871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.607646, 0, 1, 0.508893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494999,-99) , 
10, -0.315353, 1, 0, 0.499944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419087,-99) , 
10, -1.15974, 0, 0, 0.475037,-99) , 
9, -3.47085, 0, 0, 0.496611,-99) , 
8, -0.428566, 1, 0, 0.500495,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0207885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492964,-99) , 
3, 2.64068, 1, 0, 0.522303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465027,-99) , 
5, 0.422881, 1, 0, 0.510745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463949,-99) , 
8, -1.28547, 0, 0, 0.500476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433794,-99) , 
8, -0.596509, 1, 0, 0.487821,-99) , 
10, -1.42635, 0, 0, 0.498163,-99) , 
0, 0.493329, 1, 0, 0.49989,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0179129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480153,-99) , 
10, -2.09611, 0, 0, 0.50158,-99) , 
9, -0.104284, 0, 0, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468668,-99) , 
5, -0.881972, 1, 0, 0.49722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44816,-99) , 
8, 1.28573, 1, 0, 0.484353,-99) , 
10, 2.31346, 1, 0, 0.501467,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0175811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498089,-99) , 
0, 0.490472, 1, 0, 0.49951,-99) , 
8, 1.40372, 0, 0, 0.502346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490341,-99) , 
3, 4.41976, 0, 0, 0.496408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464863,-99) , 
2, -0.0705134, 0, 0, 0.491296,-99) , 
10, 0.71673, 1, 0, 0.499042,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0101015);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498868,-99) , 
3, 9.13153, 0, 0, 0.500334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465477,-99) , 
4, 0.999728, 0, 0, 0.498674,-99) , 
4, 0.999048, 1, 0, 0.49985,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0134042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499259,-99) , 
7, -951.286, 0, 0, 0.522619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48354,-99) , 
10, 0.0703143, 1, 0, 0.515725,-99) , 
NN(
NN(
0, 
0, 
-1, -4.19632, 1, 1, 0.50262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471142,-99) , 
4, 0.999785, 0, 0, 0.501065,-99) , 
5, 0.617621, 0, 0, 0.503324,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0156069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489734,-99) , 
5, 0.712834, 1, 0, 0.502705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457299,-99) , 
9, -2.65458, 1, 0, 0.489492,-99) , 
8, -0.999851, 0, 0, 0.500663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468496,-99) , 
0, 0.505709, 1, 0, 0.499502,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0149826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497552,-99) , 
0, 0.499043, 1, 0, 0.514504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496531,-99) , 
9, -3.76211, 1, 0, 0.498804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455269,-99) , 
10, -2.06228, 0, 0, 0.496691,-99) , 
8, -1.57124, 1, 0, 0.497859,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0155431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.31229, 0, 1, 0.504583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481664,-99) , 
9, -0.599623, 0, 0, 0.492865,-99) , 
10, 0.341677, 1, 0, 0.50029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461514,-99) , 
1, 0.0138019, 1, 0, 0.499132,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00937502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
0, 0.491923, 1, 0, 0.498585,-99) , 
8, 2.1428, 0, 0, 0.499524,-99) , 
0, 0.505709, 0, 0, 0.500398,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0183457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496023,-99) , 
7, -951.286, 1, 0, 0.516533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496297,-99) , 
8, 1.00007, 0, 0, 0.499133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413493,-99) , 
8, -0.801955, 1, 0, 0.46912,-99) , 
10, -1.49942, 0, 0, 0.496613,-99) , 
9, -4.26036, 1, 0, 0.498382,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0119998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499211,-99) , 
5, -0.714506, 1, 0, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449421,-99) , 
10, -2.16599, 0, 0, 0.499327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472847,-99) , 
8, -1.85696, 0, 0, 0.498397,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0213083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47829,-99) , 
5, 0.480348, 1, 0, 0.520103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484072,-99) , 
10, -1.41598, 0, 0, 0.503839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448576,-99) , 
8, -1.69378, 0, 0, 0.478979,-99) , 
8, -1.28555, 0, 0, 0.502134,-99) , 
9, -4.28007, 1, 0, 0.503665,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0135423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49816,-99) , 
10, -0.524202, 1, 0, 0.501905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446406,-99) , 
10, -2.28134, 0, 0, 0.499854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472627,-99) , 
8, -1.85697, 0, 0, 0.498892,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0265215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491593,-99) , 
5, 0.0471145, 1, 0, 0.508866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491859,-99) , 
5, 0.516794, 0, 0, 0.497597,-99) , 
8, 0.714225, 0, 0, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477549,-99) , 
10, 3.39176, 1, 0, 0.499542,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.01115);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537243,-99) , 
NN(
NN(
0, 
0, 
-1, -1.77533, 1, 1, 0.503447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472943,-99) , 
2, 0.213649, 1, 0, 0.502355,-99) , 
8, 2.14288, 0, 0, 0.503713,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0174503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496292,-99) , 
3, 4.52944, 1, 0, 0.51907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477337,-99) , 
10, 2.51767, 1, 0, 0.500456,-99) , 
2, -0.0716846, 1, 0, 0.503655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463246,-99) , 
10, -2.52271, 0, 0, 0.502349,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0170307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.171321, 0, 1, 0.53056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496184,-99) , 
5, 0.807991, 0, 0, 0.498284,-99) , 
3, 0.543175, 1, 0, 0.500889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458741,-99) , 
3, 9.33163, 1, 0, 0.499626,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0161712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53418, 1, 1, 0.520119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498885,-99) , 
8, 1.56125, 0, 0, 0.501314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454055,-99) , 
10, 1.28978, 1, 0, 0.499675,-99) , 
9, -0.739558, 0, 0, 0.503986,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0189197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491767,-99) , 
8, -2.0474, 0, 0, 0.52351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495275,-99) , 
10, -0.0728283, 1, 0, 0.500931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426724,-99) , 
8, -0.980856, 1, 0, 0.475413,-99) , 
10, -1.85949, 0, 0, 0.499037,-99) , 
8, -1.57123, 1, 0, 0.500605,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0196929);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00789386, 0, 1, 0.506829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373443,-99) , 
6, 0.0236981, 1, 0, 0.503469,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0197096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48412,-99) , 
10, -1.86562, 0, 0, 0.5002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457704,-99) , 
7, -951.286, 0, 0, 0.47741,-99) , 
10, 1.3042, 1, 0, 0.496395,-99) , 
9, 2.01077, 0, 0, 0.497786,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0133788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493016,-99) , 
7, -951.286, 1, 0, 0.51438,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436698,-99) , 
8, -0.808043, 1, 0, 0.474007,-99) , 
10, -1.49942, 0, 0, 0.495377,-99) , 
9, -4.23611, 1, 0, 0.497136,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.015117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490002,-99) , 
10, -1.98021, 1, 0, 0.510253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483198,-99) , 
10, 1.61761, 1, 0, 0.497112,-99) , 
8, -0.999996, 1, 0, 0.499199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456792,-99) , 
3, 9.38081, 1, 0, 0.497996,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0123147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497506,-99) , 
9, -4.34132, 1, 0, 0.499209,-99) , 
3, 9.12912, 0, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473474,-99) , 
4, 0.999524, 0, 0, 0.499175,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0155492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480676,-99) , 
8, -2.04743, 0, 0, 0.521671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497645,-99) , 
9, -3.54608, 1, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, -4.50505, 1, -1, 0.473655,-99) , 
10, -1.92413, 0, 0, 0.498613,-99) , 
8, -1.57126, 1, 0, 0.500097,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0318554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491024,-99) , 
8, -0.0538386, 0, 0, 0.536533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494442,-99) , 
9, -1.85431, 0, 0, 0.50609,-99) , 
10, -0.294306, 1, 0, 0.510832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49337,-99) , 
9, -3.68651, 0, 0, 0.504478,-99) , 
NN(
0, 
0, 
-1, -1.21792, 0, -1, 0.477869,-99) , 
8, -0.188295, 1, 0, 0.493803,-99) , 
9, -2.95361, 0, 0, 0.504249,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0148702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491217,-99) , 
10, 1.52994, 1, 0, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473212,-99) , 
10, -2.08659, 0, 0, 0.500181,-99) , 
8, -1.85696, 1, 0, 0.501306,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0176489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456153,-99) , 
10, -1.84846, 0, 0, 0.499651,-99) , 
8, -1.24025, 1, 0, 0.514749,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0.616767, 1, -1, 0.49034,-99) , 
0, 0.496186, 0, 0, 0.497954,-99) , 
9, -4.03342, 1, 0, 0.500072,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.017194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495443,-99) , 
7, -951.286, 0, 0, 0.520785,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0710758, 1, 1, 0.5073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48995,-99) , 
5, -0.429706, 1, 0, 0.495238,-99) , 
0, 0.496186, 1, 0, 0.499113,-99) , 
8, 1.85718, 0, 0, 0.500476,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0136533);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488649,-99) , 
10, 3.67381, 1, 0, 0.510825,-99) , 
NN(
0, 
0, 
-1, 0.840446, 1, -1, 0.497125,-99) , 
9, -0.936056, 0, 0, 0.500358,-99) , 
4, 0.999048, 1, 0, 0.501545,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00901107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50453, 1, 1, 0.514867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498851,-99) , 
5, 0.712115, 0, 0, 0.500431,-99) , 
0, 0.503804, 0, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473951,-99) , 
8, 2.14288, 1, 0, 0.500928,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0119304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04761, 0, 1, 0.527799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534705,-99) , 
NN(
0, 
0, 
-1, -1.8526, 0, -1, 0.496937,-99) , 
8, 2.12925, 0, 0, 0.49856,-99) , 
8, -1.57141, 1, 0, 0.50049,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.010939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47228,-99) , 
10, -1.78369, 0, 0, 0.499331,-99) , 
9, -4.65877, 1, 0, 0.500659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47279,-99) , 
10, 3.88864, 1, 0, 0.499543,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0212236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.999856, 1, 1, 0.510286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482455,-99) , 
2, 0.0727222, 1, 0, 0.502693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476266,-99) , 
5, -0.904854, 1, 0, 0.484041,-99) , 
10, 0.819345, 1, 0, 0.497607,-99) , 
0, 0.499042, 0, 0, 0.502978,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0167217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0905313, 0, 1, 0.505539,-99) , 
NN(
0, 
0, 
-1, 0.502853, 1, -1, 0.488841,-99) , 
3, 2.96655, 1, 0, 0.501855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486407,-99) , 
2, -0.0717479, 0, 0, 0.501906,-99) , 
NN(
0, 
0, 
-1, 0.421428, 1, -1, 0.480651,-99) , 
0, 0.499043, 0, 0, 0.490426,-99) , 
3, 4.73378, 1, 0, 0.499663,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0117745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49889,-99) , 
8, 1.85711, 0, 0, 0.500172,-99) , 
NN(
0, 
0, 
-1, 1.57245, 1, -1, 0.487036,-99) , 
10, 1.82036, 1, 0, 0.498216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473173,-99) , 
0, 0.505256, 1, 0, 0.48891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465341,-99) , 
7, -951.286, 1, 0, 0.477742,-99) , 
0, 0.503804, 1, 0, 0.496225,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0202535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.16018, 0, 1, 0.51922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456037,-99) , 
5, 0.141235, 1, 0, 0.493444,-99) , 
10, 0.684245, 1, 0, 0.506003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495143,-99) , 
2, -0.0717964, 1, 0, 0.498892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458786,-99) , 
8, -1.9386, 0, 0, 0.497211,-99) , 
8, 0.714366, 0, 0, 0.499794,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0185612);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495575,-99) , 
8, -0.00663092, 1, 0, 0.501063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430477,-99) , 
10, -2.38109, 0, 0, 0.499075,-99) , 
8, -1.85713, 1, 0, 0.50077,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0200768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464835,-99) , 
5, -0.810642, 1, 0, 0.493145,-99) , 
10, -2.16612, 1, 0, 0.516235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480291,-99) , 
8, -0.67337, 0, 0, 0.499264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397007,-99) , 
8, -0.74414, 1, 0, 0.475048,-99) , 
10, -1.67001, 0, 0, 0.497195,-99) , 
8, -1.2857, 1, 0, 0.499199,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0191158);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.549739, 1, 1, 0.525043,-99) , 
NN(
NN(
0, 
0, 
-1, 3.35046, 1, 1, 0.516367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492391,-99) , 
8, 0.714388, 0, 0, 0.496259,-99) , 
9, 0.109789, 0, 0, 0.499277,-99) , 
9, -4.34132, 1, 0, 0.501298,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0200497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.60852, 0, 1, 0.529348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453441,-99) , 
8, -1.66669, 0, 0, 0.484689,-99) , 
9, -3.5602, 1, 0, 0.508005,-99) , 
NN(
NN(
0, 
0, 
-1, 3.76809, 1, -1, 0.497219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429691,-99) , 
10, -1.64693, 0, 0, 0.47739,-99) , 
9, -3.86101, 0, 0, 0.495205,-99) , 
8, -0.99999, 1, 0, 0.497241,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0168137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492706,-99) , 
10, 3.06176, 1, 0, 0.513671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487672,-99) , 
5, -0.945622, 0, 0, 0.509932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499598,-99) , 
9, -1.79898, 0, 0, 0.502097,-99) , 
NN(
0, 
0, 
-1, 2.03814, 0, -1, 0.463068,-99) , 
10, 1.01745, 1, 0, 0.499092,-99) , 
5, -0.61938, 1, 0, 0.502235,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0155175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496848,-99) , 
8, -0.714287, 0, 0, 0.520603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499293,-99) , 
8, 0.999969, 0, 0, 0.502687,-99) , 
2, -0.0716195, 1, 0, 0.505718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475662,-99) , 
10, -2.23979, 0, 0, 0.504109,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0100337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499217,-99) , 
9, -4.31202, 1, 0, 0.500764,-99) , 
3, 9.29904, 0, 0, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466654,-99) , 
5, 0.807993, 1, 0, 0.500287,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0205811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532236, 1, 1, 0.519178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471048,-99) , 
4, 0.99981, 0, 0, 0.503465,-99) , 
5, 0.237047, 0, 0, 0.508489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480373,-99) , 
10, -2.56061, 0, 0, 0.507636,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0150409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57117, 1, 1, 0.510004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492391,-99) , 
10, 0.420636, 1, 0, 0.499371,-99) , 
0, 0.497818, 1, 0, 0.504035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483071,-99) , 
0, 0.490472, 0, 0, 0.503115,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0071476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499642,-99) , 
4, 0.999049, 1, 0, 0.500893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469286,-99) , 
3, 9.25993, 1, 0, 0.499967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46415,-99) , 
8, 2.14289, 1, 0, 0.498753,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0100364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498298,-99) , 
8, 1.85713, 0, 0, 0.499944,-99) , 
2, 0.213937, 0, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465525,-99) , 
4, 0.999048, 0, 0, 0.499999,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0207662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498289,-99) , 
4, 0.999991, 0, 0, 0.506741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478136,-99) , 
4, 0.999819, 0, 0, 0.50532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461532,-99) , 
4, 0.999524, 0, 0, 0.503131,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.017595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480825,-99) , 
10, -1.91825, 0, 0, 0.51894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469693,-99) , 
0, 0.494283, 0, 0, 0.510941,-99) , 
NN(
NN(
0, 
0, 
-1, -1.2857, 1, 1, 0.50216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45064,-99) , 
4, 0.99981, 0, 0, 0.499714,-99) , 
5, 0.52252, 0, 0, 0.501956,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0158394);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.33057, 0, 1, 0.50369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48205,-99) , 
9, -1.49121, 0, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451518,-99) , 
10, 1.7286, 1, 0, 0.486094,-99) , 
8, 1.28578, 1, 0, 0.501171,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0374195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.74895, 1, 1, 0.533353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449754,-99) , 
3, 3.39579, 1, 0, 0.494424,-99) , 
5, -0.144339, 0, 0, 0.514084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471903,-99) , 
0, 0.504757, 1, 0, 0.506938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469257,-99) , 
2, 0.0142778, 0, 0, 0.489211,-99) , 
2, -0.00353391, 1, 0, 0.498915,-99) , 
2, 0.071273, 0, 0, 0.501245,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0314137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474959,-99) , 
10, 3.44291, 1, 0, 0.509646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419853,-99) , 
10, 0.266641, 1, 0, 0.478624,-99) , 
5, 0.522525, 1, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484527,-99) , 
5, 0.42199, 0, 0, 0.489839,-99) , 
9, -4.56134, 1, 0, 0.49197,-99) , 
8, 0.428561, 0, 0, 0.495978,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.024258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
3, 2.10729, 0, 0, 0.513347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496426,-99) , 
8, 1.5714, 0, 0, 0.499462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441236,-99) , 
7, -951.286, 0, 0, 0.468255,-99) , 
10, 1.35031, 1, 0, 0.494954,-99) , 
9, 1.40603, 0, 0, 0.496221,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.012494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496756,-99) , 
8, 1.85705, 0, 0, 0.498278,-99) , 
4, 0.999048, 1, 0, 0.499376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466043,-99) , 
3, 9.06192, 1, 0, 0.498265,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0232618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491967,-99) , 
3, 4.55921, 1, 0, 0.51326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490808,-99) , 
5, -0.524409, 1, 0, 0.496341,-99) , 
2, -0.0710758, 1, 0, 0.499232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507199,-99) , 
NN(
0, 
0, 
-1, 0.842205, 1, -1, 0.47232,-99) , 
8, 2.02045, 0, 0, 0.483721,-99) , 
8, 1.28578, 1, 0, 0.497005,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0151092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526604,-99) , 
NN(
NN(
0, 
0, 
-1, -1.8617, 0, 1, 0.504565,-99) , 
NN(
0, 
0, 
-1, -0.429042, 1, -1, 0.48722,-99) , 
10, 0.836366, 1, 0, 0.500289,-99) , 
9, 2.17862, 0, 0, 0.501556,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0101044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49651,-99) , 
0, 0.499043, 0, 0, 0.520708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497953,-99) , 
9, -4.68404, 1, 0, 0.498816,-99) , 
8, 1.85713, 0, 0, 0.500138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476153,-99) , 
10, 3.48998, 1, 0, 0.498908,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0119993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49754,-99) , 
5, 0.0467491, 0, 0, 0.501397,-99) , 
8, 2.14286, 0, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476931,-99) , 
2, -0.214166, 0, 0, 0.501361,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0116313);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499751,-99) , 
8, 1.28848, 0, 0, 0.502129,-99) , 
NN(
0, 
0, 
-1, -0.048438, 1, -1, 0.489975,-99) , 
10, 0.569939, 1, 0, 0.498448,-99) , 
9, 2.77752, 0, 0, 0.499654,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0095785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.71385, 1, 1, 0.523139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499618,-99) , 
8, 1.85713, 0, 0, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46883,-99) , 
4, 0.999048, 0, 0, 0.500787,-99) , 
9, -4.34575, 1, 0, 0.502558,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.01301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483145,-99) , 
10, 1.71771, 1, 0, 0.512048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499882,-99) , 
8, -1.8567, 1, 0, 0.501194,-99) , 
2, 0.0306125, 0, 0, 0.504049,-99) , 
2, -0.214218, 1, 0, 0.504939,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.025109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483517,-99) , 
10, -1.83924, 0, 0, 0.507705,-99) , 
NN(
0, 
0, 
-1, -0.147428, 1, -1, 0.491008,-99) , 
10, 0.795688, 1, 0, 0.502804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465082,-99) , 
4, 0.999524, 0, 0, 0.500874,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0157346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493969,-99) , 
8, 1.16415, 1, 0, 0.521771,-99) , 
NN(
0, 
0, 
-1, 0.712843, 0, 1, 0.503522,-99) , 
10, 1.78644, 0, 0, 0.506203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452011,-99) , 
7, -951.286, 0, 0, 0.476109,-99) , 
8, 1.8572, 1, 0, 0.504412,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0169803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71765, 0, 1, 0.54531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45511,-99) , 
3, 9.33163, 1, 0, 0.499773,-99) , 
6, 0.0101402, 0, 0, 0.503471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395401,-99) , 
6, 0.0236633, 1, 0, 0.500713,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00953029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.211697, 1, 1, 0.502528,-99) , 
NN(
0, 
0, 
-1, -0.0696794, 0, -1, 0.485683,-99) , 
3, 6.56878, 1, 0, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473639,-99) , 
5, 0.807992, 1, 0, 0.499595,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0121833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490886,-99) , 
10, -1.26003, 1, 0, 0.514866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498395,-99) , 
9, 0.282591, 0, 0, 0.500697,-99) , 
NN(
0, 
0, 
-1, 0.498095, 1, -1, 0.47292,-99) , 
10, -1.92413, 0, 0, 0.498877,-99) , 
8, -1.57125, 1, 0, 0.499883,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0168567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491515,-99) , 
5, -0.873351, 0, 0, 0.504193,-99) , 
NN(
0, 
0, 
-1, 0.0377926, 1, -1, 0.494548,-99) , 
5, -0.335073, 1, 0, 0.498779,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.475127,-99) , 
8, 1.57141, 1, 0, 0.496574,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00684477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.13153, 0, 1, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475013,-99) , 
4, 0.999524, 0, 0, 0.500876,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0153897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498491,-99) , 
3, 7.18254, 0, 0, 0.49976,-99) , 
0, 0.490472, 1, 0, 0.500818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539156,-99) , 
NN(
0, 
0, 
-1, -3.31488, 0, -1, 0.470358,-99) , 
8, -0.424148, 1, 0, 0.487536,-99) , 
5, 0.617683, 1, 0, 0.498861,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0154988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.62781, 0, 1, 0.521861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475378,-99) , 
3, 4.731, 1, 0, 0.512216,-99) , 
NN(
NN(
0, 
0, 
-1, 1.90606, 0, 1, 0.502991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453079,-99) , 
4, 0.999785, 0, 0, 0.50061,-99) , 
5, 0.616725, 0, 0, 0.502392,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0125583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
10, 2.55415, 1, 0, 0.499297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441161,-99) , 
5, 0.330204, 1, 0, 0.494615,-99) , 
10, 0.460091, 1, 0, 0.500441,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0150635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494843,-99) , 
2, 0.0541649, 0, 0, 0.497264,-99) , 
2, 0.217012, 0, 0, 0.498231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463369,-99) , 
3, 9.37272, 1, 0, 0.497228,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0377279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40259, 0, 1, 0.507451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408025,-99) , 
7, -1.28564, 0, 0, 0.497957,-99) , 
7, -951.286, 1, 0, 0.502775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52985,-99) , 
NN(
0, 
0, 
-1, -1.6936, 0, -1, 0.456275,-99) , 
7, -951.286, 0, 0, 0.488,-99) , 
8, -1.28544, 0, 0, 0.501283,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0151136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49563,-99) , 
0, 0.493329, 1, 0, 0.498286,-99) , 
3, 9.12912, 0, 0, 0.49976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484033,-99) , 
4, 0.999524, 0, 0, 0.498935,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0289775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489327,-99) , 
8, 0.160412, 1, 0, 0.50734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483481,-99) , 
8, -0.142735, 0, 0, 0.494829,-99) , 
5, 0.141217, 0, 0, 0.498613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482906,-99) , 
8, -0.385939, 1, 0, 0.506265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451785,-99) , 
8, 0.430096, 1, 0, 0.480524,-99) , 
5, 0.711825, 1, 0, 0.49681,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0206659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483784,-99) , 
8, -0.713816, 0, 0, 0.511616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490969,-99) , 
8, -0.428407, 1, 0, 0.495484,-99) , 
0, 0.502852, 0, 0, 0.497774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46701,-99) , 
2, -0.21455, 0, 0, 0.496546,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0233658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494725,-99) , 
8, 1.24205, 0, 0, 0.496473,-99) , 
4, 0.999048, 1, 0, 0.49895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473517,-99) , 
8, -0.428588, 0, 0, 0.496915,-99) , 
NN(
0, 
0, 
-1, 1.3736, 1, -1, 0.472181,-99) , 
9, -0.500163, 0, 0, 0.485563,-99) , 
10, 0.496443, 1, 0, 0.494421,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0206002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490403,-99) , 
10, 0.347351, 1, 0, 0.506482,-99) , 
8, 1.5752, 0, 0, 0.507847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482949,-99) , 
2, -0.0764839, 0, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442644,-99) , 
5, -0.238765, 1, 0, 0.495008,-99) , 
10, 0.954811, 1, 0, 0.504486,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0157017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497003,-99) , 
9, -1.3827, 0, 0, 0.500234,-99) , 
NN(
0, 
0, 
-1, 1.28577, 1, -1, 0.483877,-99) , 
10, 2.06512, 1, 0, 0.498017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452012,-99) , 
4, 0.999048, 0, 0, 0.496675,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0242666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498818,-99) , 
9, -3.31466, 0, 0, 0.514061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49915,-99) , 
5, -0.941334, 1, 0, 0.50136,-99) , 
5, 0.231932, 0, 0, 0.505166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491895,-99) , 
10, 0.790472, 1, 0, 0.503266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435818,-99) , 
10, -0.351176, 0, 0, 0.47025,-99) , 
9, -2.69138, 0, 0, 0.49569,-99) , 
8, 0.428614, 1, 0, 0.501546,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0315739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486549,-99) , 
8, -0.18921, 0, 0, 0.533368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433475,-99) , 
10, 0.0533873, 1, 0, 0.504087,-99) , 
9, -2.22713, 0, 0, 0.507226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486142,-99) , 
10, 3.27491, 1, 0, 0.50609,-99) , 
NN(
0, 
0, 
-1, -0.714148, 0, -1, 0.483849,-99) , 
9, 0.399141, 0, 0, 0.490816,-99) , 
10, 0.329206, 1, 0, 0.501092,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00966997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489666,-99) , 
5, 0.331645, 1, 0, 0.49761,-99) , 
2, 0.212867, 0, 0, 0.498652,-99) , 
8, 2.14286, 0, 0, 0.499572,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0160711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499824,-99) , 
9, -1.45277, 0, 0, 0.503238,-99) , 
NN(
0, 
0, 
-1, 0.50285, 1, -1, 0.488807,-99) , 
10, 1.33432, 1, 0, 0.500265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468022,-99) , 
8, -0.142745, 0, 0, 0.492618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469804,-99) , 
5, 0.332231, 1, 0, 0.486396,-99) , 
2, -0.071745, 0, 0, 0.497974,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0244269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488243,-99) , 
10, -1.86504, 0, 0, 0.50181,-99) , 
2, -0.214484, 1, 0, 0.503595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481497,-99) , 
10, 2.1444, 1, 0, 0.503856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477831,-99) , 
9, -3.23604, 1, 0, 0.484684,-99) , 
5, -0.0484009, 1, 0, 0.494158,-99) , 
8, 0.428574, 1, 0, 0.499973,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0127929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141455, 0, 1, 0.526279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498505,-99) , 
4, 0.999524, 1, 0, 0.49994,-99) , 
8, 1.8571, 0, 0, 0.501581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462227,-99) , 
2, -0.15318, 0, 0, 0.49307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466586,-99) , 
2, 0.0712424, 1, 0, 0.485913,-99) , 
3, 4.7423, 1, 0, 0.498609,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0110871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494721,-99) , 
5, 0.871433, 1, 0, 0.519776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470775,-99) , 
4, 0.999864, 0, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474536,-99) , 
4, 0.999524, 0, 0, 0.499153,-99) , 
5, 0.807991, 0, 0, 0.500297,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0093604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498457,-99) , 
8, 1.85709, 0, 0, 0.49971,-99) , 
4, 0.999048, 1, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457462,-99) , 
3, 9.39546, 1, 0, 0.499578,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0167203);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47396,-99) , 
8, -0.428421, 0, 0, 0.500389,-99) , 
NN(
0, 
0, 
-1, 0.676881, 1, -1, 0.46534,-99) , 
9, -1.58152, 0, 0, 0.494642,-99) , 
10, 0.460091, 1, 0, 0.501252,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0227104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475556,-99) , 
10, 1.52534, 1, 0, 0.533163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494857,-99) , 
8, -1.84355, 1, 0, 0.496758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456648,-99) , 
4, 0.999524, 0, 0, 0.49482,-99) , 
8, 1.85714, 0, 0, 0.497291,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0150792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461455,-99) , 
8, 0.714492, 1, 0, 0.483054,-99) , 
10, 2.24517, 1, 0, 0.501353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456432,-99) , 
2, 0.152911, 1, 0, 0.493693,-99) , 
NN(
0, 
0, 
-1, 0.137638, 0, -1, 0.470848,-99) , 
2, -0.0715367, 0, 0, 0.487021,-99) , 
3, 4.68186, 1, 0, 0.498559,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.021753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481651,-99) , 
10, 1.07799, 1, 0, 0.501058,-99) , 
9, 1.74434, 0, 0, 0.502447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479988,-99) , 
10, 0.584278, 1, 0, 0.497715,-99) , 
NN(
0, 
0, 
-1, -0.428629, 0, -1, 0.470741,-99) , 
7, -951.286, 1, 0, 0.484598,-99) , 
2, 0.071273, 1, 0, 0.499794,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0126024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497302,-99) , 
3, 9.13153, 0, 0, 0.498465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458851,-99) , 
4, 0.999683, 0, 0, 0.496919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456363,-99) , 
4, 0.999048, 0, 0, 0.495717,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0110737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487566,-99) , 
0, 0.503124, 1, 0, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473776,-99) , 
2, -0.214037, 0, 0, 0.500144,-99) , 
0, 0.505709, 0, 0, 0.501479,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0151861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487277,-99) , 
10, 3.67946, 1, 0, 0.518421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497896,-99) , 
9, -3.86969, 1, 0, 0.500573,-99) , 
9, 0.893913, 0, 0, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.473393,-99) , 
4, 0.999524, 0, 0, 0.500738,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0145463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499507,-99) , 
3, 0.999235, 1, 0, 0.503467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480698,-99) , 
8, -0.428426, 1, 0, 0.488724,-99) , 
3, 4.75378, 1, 0, 0.500664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472926,-99) , 
10, 3.35768, 1, 0, 0.499174,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0243229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485115,-99) , 
7, -951.286, 0, 0, 0.517826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479692,-99) , 
8, -1.25838, 0, 0, 0.504308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489203,-99) , 
9, -2.35708, 0, 0, 0.491967,-99) , 
5, -0.619681, 1, 0, 0.495655,-99) , 
8, 1.57146, 0, 0, 0.497851,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0122046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.408369, 1, 1, 0.51693,-99) , 
NN(
0, 
0, 
-1, -0.927497, 0, -1, 0.497537,-99) , 
5, 0.522519, 0, 0, 0.501259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466788,-99) , 
10, -2.56061, 0, 0, 0.500196,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0108397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479725,-99) , 
3, 9.25184, 1, 0, 0.504166,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0104054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498933,-99) , 
2, -0.215811, 1, 0, 0.500445,-99) , 
4, 0.999524, 1, 0, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476911,-99) , 
3, 9.0008, 1, 0, 0.501737,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0101449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.09102, 0, 1, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476514,-99) , 
4, 0.999728, 0, 0, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470633,-99) , 
4, 0.999048, 0, 0, 0.501195,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0133172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.69346, 1, 1, 0.515944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49791,-99) , 
5, 0.332218, 0, 0, 0.501816,-99) , 
9, 0.417863, 0, 0, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471644,-99) , 
3, 9.33743, 1, 0, 0.502606,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0150067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.1429, 0, 1, 0.521428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461263,-99) , 
3, 9.26574, 1, 0, 0.500474,-99) , 
9, -1.06022, 0, 0, 0.503675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478941,-99) , 
8, 0.716497, 1, 0, 0.493039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463012,-99) , 
0, 0.496188, 0, 0, 0.48357,-99) , 
10, 2.40213, 1, 0, 0.501585,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00725064);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499682,-99) , 
3, 8.53085, 0, 0, 0.501134,-99) , 
4, 0.999524, 1, 0, 0.502216,-99) , 
2, 0.21442, 0, 0, 0.503063,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0156147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498522,-99) , 
8, 0.144532, 1, 0, 0.514465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474923,-99) , 
4, 0.999825, 0, 0, 0.501355,-99) , 
5, 0.616763, 0, 0, 0.503396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508592,-99) , 
NN(
0, 
0, 
-1, 0.0803202, 0, -1, 0.474933,-99) , 
2, -0.068996, 1, 0, 0.483128,-99) , 
0, 0.493329, 0, 0, 0.500737,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0203539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492183,-99) , 
10, -2.52613, 0, 0, 0.520583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471324,-99) , 
5, -0.715997, 1, 0, 0.500197,-99) , 
9, -3.63632, 1, 0, 0.510025,-99) , 
NN(
0, 
0, 
-1, 0.426761, 1, -1, 0.493981,-99) , 
8, -0.714176, 1, 0, 0.497698,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0145215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447546,-99) , 
10, -2.31182, 0, 0, 0.499756,-99) , 
8, -1.85692, 1, 0, 0.501368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421643,-99) , 
9, 1.00775, 0, 0, 0.48095,-99) , 
5, -0.904878, 0, 0, 0.49981,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0119727);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488456,-99) , 
10, 1.10701, 1, 0, 0.500072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462542,-99) , 
5, -0.904826, 0, 0, 0.498595,-99) , 
9, 1.86231, 0, 0, 0.499628,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0181944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494443,-99) , 
2, 0.0303285, 0, 0, 0.498571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469916,-99) , 
2, -0.214495, 0, 0, 0.497429,-99) , 
8, 2.14284, 0, 0, 0.499278,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0277986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494736,-99) , 
10, 0.643448, 1, 0, 0.507955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47124,-99) , 
10, -0.852313, 0, 0, 0.505436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494239,-99) , 
9, -3.37835, 0, 0, 0.50607,-99) , 
NN(
0, 
0, 
-1, -0.350024, 1, -1, 0.487324,-99) , 
5, -0.146808, 0, 0, 0.495699,-99) , 
8, 0.142961, 0, 0, 0.500456,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0171495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85687, 1, 1, 0.504805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457088,-99) , 
9, 2.01383, 0, 0, 0.484696,-99) , 
5, -0.918483, 0, 0, 0.503355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479816,-99) , 
5, 0.78946, 0, 0, 0.494622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447562,-99) , 
5, 0.847685, 1, 0, 0.479295,-99) , 
5, 0.711823, 1, 0, 0.500983,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0237697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37299, 1, 1, 0.521217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485228,-99) , 
7, -951.286, 0, 0, 0.500591,-99) , 
0, 0.49809, 0, 0, 0.511511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488648,-99) , 
10, 0.450841, 1, 0, 0.512015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494563,-99) , 
8, -1.77561, 1, 0, 0.496186,-99) , 
8, 1.28536, 0, 0, 0.497943,-99) , 
9, -1.33695, 0, 0, 0.501716,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0223774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.59547, 1, 1, 0.506176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450507,-99) , 
9, 1.93979, 0, 0, 0.483255,-99) , 
10, 2.82566, 1, 0, 0.50397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48711,-99) , 
9, -3.82865, 0, 0, 0.499934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430551,-99) , 
8, -0.381092, 1, 0, 0.488703,-99) , 
10, -1.34315, 0, 0, 0.500978,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0175424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0134221, 1, 1, 0.548418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498841,-99) , 
9, 1.72742, 0, 0, 0.500235,-99) , 
6, 0.0101876, 0, 0, 0.504161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392617,-99) , 
6, 0.0237713, 1, 0, 0.50132,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0142887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.513364, 0, 1, 0.513138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485752,-99) , 
2, -0.0715962, 0, 0, 0.500438,-99) , 
0, 0.5019, 0, 0, 0.502927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473557,-99) , 
8, 2.14288, 1, 0, 0.501922,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.020938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495007,-99) , 
10, 1.67843, 1, 0, 0.518965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491988,-99) , 
7, -951.286, 1, 0, 0.497592,-99) , 
8, 0.999594, 0, 0, 0.502177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494115,-99) , 
8, -0.904654, 1, 0, 0.498728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447053,-99) , 
5, -0.238707, 1, 0, 0.471255,-99) , 
8, 1.00007, 1, 0, 0.493217,-99) , 
0, 0.499042, 1, 0, 0.498422,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0224187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.57633, 1, 1, 0.505763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485756,-99) , 
7, -951.286, 0, 0, 0.495158,-99) , 
5, -0.0484167, 0, 0, 0.499914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507998,-99) , 
NN(
0, 
0, 
-1, -0.0696923, 0, -1, 0.476947,-99) , 
8, 1.00047, 0, 0, 0.483707,-99) , 
3, 4.67335, 1, 0, 0.496752,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0158244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495933,-99) , 
4, 0.999977, 1, 0, 0.500146,-99) , 
3, 8.85038, 0, 0, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0.712888, 1, -1, 0.475155,-99) , 
4, 0.999524, 0, 0, 0.500136,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0141582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483637,-99) , 
10, 2.20574, 1, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473607,-99) , 
8, -1.57142, 0, 0, 0.499646,-99) , 
9, -4.44059, 1, 0, 0.501195,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0117797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493083,-99) , 
8, 0.428529, 1, 0, 0.4993,-99) , 
2, 0.213184, 0, 0, 0.500195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46841,-99) , 
8, 2.14283, 1, 0, 0.499127,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0193731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
10, 1.54316, 1, 0, 0.527646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488609,-99) , 
5, -0.918508, 0, 0, 0.512611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495174,-99) , 
8, -0.918133, 1, 0, 0.497783,-99) , 
5, -0.809853, 1, 0, 0.500202,-99) , 
8, 1.85718, 0, 0, 0.501937,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0214957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619528, 1, 1, 0.527415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48173,-99) , 
2, -0.0715701, 0, 0, 0.506379,-99) , 
0, 0.495233, 1, 0, 0.511995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477083,-99) , 
10, -2.04473, 0, 0, 0.498304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455781,-99) , 
10, 0.919842, 1, 0, 0.495891,-99) , 
5, -0.334167, 1, 0, 0.502893,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0210073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495686,-99) , 
10, 3.40643, 1, 0, 0.513175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493262,-99) , 
9, -0.519048, 0, 0, 0.494828,-99) , 
9, 0.131311, 0, 0, 0.497318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0.468998, 1, -1, 0.471993,-99) , 
9, -3.36406, 1, 0, 0.480918,-99) , 
2, 0.0711978, 1, 0, 0.494889,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00883861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498857,-99) , 
3, 9.08969, 0, 0, 0.500473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464494,-99) , 
4, 0.999048, 0, 0, 0.499473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473928,-99) , 
0, 0.505709, 1, 0, 0.498537,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0142446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476141,-99) , 
10, -2.57111, 0, 0, 0.50314,-99) , 
8, 2.1429, 0, 0, 0.50446,-99) , 
NN(
0, 
0, 
-1, -0.912727, 1, -1, 0.47637,-99) , 
10, 3.09326, 1, 0, 0.502678,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.030966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434863,-99) , 
8, 0.391825, 1, 0, 0.496658,-99) , 
9, -2.75493, 0, 0, 0.504752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493103,-99) , 
8, 2.14279, 0, 0, 0.495178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468579,-99) , 
5, 0.616728, 1, 0, 0.493108,-99) , 
10, -0.31321, 1, 0, 0.498611,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00950556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214166, 1, 1, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474853,-99) , 
8, -1.57141, 0, 0, 0.501878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474404,-99) , 
10, -2.39957, 0, 0, 0.500766,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0167564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485021,-99) , 
2, -0.0505072, 0, 0, 0.506428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479549,-99) , 
10, 0.220645, 1, 0, 0.497819,-99) , 
5, -0.524215, 1, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47798,-99) , 
2, -0.213645, 0, 0, 0.499858,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0196719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488956,-99) , 
4, 0.999955, 0, 0, 0.500612,-99) , 
4, 0.999524, 1, 0, 0.501629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460373,-99) , 
10, -2.57426, 0, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387561,-99) , 
8, -0.472009, 1, 0, 0.485311,-99) , 
10, -1.48154, 0, 0, 0.498879,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0172602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489487,-99) , 
10, 1.363, 1, 0, 0.511869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529588,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.493053,-99) , 
4, 0.999048, 1, 0, 0.494219,-99) , 
8, 1.85718, 0, 0, 0.495322,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0158983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.135185, 0, 1, 0.510931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495232,-99) , 
8, -1.85713, 1, 0, 0.496819,-99) , 
3, 4.43116, 0, 0, 0.499912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462718,-99) , 
4, 0.999048, 0, 0, 0.498822,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0158942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.12079, 1, 1, 0.521564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482097,-99) , 
3, 2.0776, 1, 0, 0.491231,-99) , 
8, 0.140808, 1, 0, 0.510421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496809,-99) , 
9, -1.47286, 0, 0, 0.499363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458274,-99) , 
10, 2.13861, 1, 0, 0.497807,-99) , 
5, -0.809676, 1, 0, 0.499791,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0101885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.263392, 0, 1, 0.525051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479146,-99) , 
3, 6.85633, 1, 0, 0.500022,-99) , 
3, 0.545548, 1, 0, 0.502065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472347,-99) , 
3, 9.38081, 1, 0, 0.501212,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0134828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.75211, 1, 1, 0.517874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487452,-99) , 
9, -0.713593, 1, 0, 0.511939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499417,-99) , 
5, 0.807926, 0, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, -0.284093, 1, -1, 0.485323,-99) , 
10, -1.1979, 0, 0, 0.497052,-99) , 
2, -0.0715367, 1, 0, 0.49957,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0081001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49883,-99) , 
8, 2.14288, 0, 0, 0.499763,-99) , 
3, 9.12912, 0, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475026,-99) , 
4, 0.999524, 0, 0, 0.499434,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0207925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475854,-99) , 
5, 0.0467018, 1, 0, 0.507054,-99) , 
10, 0.577067, 1, 0, 0.510511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49014,-99) , 
8, -0.225172, 1, 0, 0.49565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465168,-99) , 
0, 0.491424, 0, 0, 0.493834,-99) , 
9, -1.84054, 0, 0, 0.499784,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0307114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83823, 1, 1, 0.511659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439561,-99) , 
10, -1.10076, 0, 0, 0.494653,-99) , 
5, -0.143569, 1, 0, 0.502699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45903,-99) , 
10, -2.11916, 0, 0, 0.510003,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484072,-99) , 
5, 0.231882, 0, 0, 0.491361,-99) , 
8, -0.142744, 0, 0, 0.498075,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0279483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.540649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491014,-99) , 
7, -951.286, 0, 0, 0.498843,-99) , 
6, 0.00900257, 0, 0, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385085,-99) , 
6, 0.0236326, 1, 0, 0.500293,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0140395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.209432, 1, 1, 0.503831,-99) , 
NN(
0, 
0, 
-1, -0.619591, 1, -1, 0.488046,-99) , 
10, 1.30911, 1, 0, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444314,-99) , 
3, 9.25993, 1, 0, 0.498829,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0173973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477317,-99) , 
9, 0.500654, 0, 0, 0.50536,-99) , 
5, -0.716724, 0, 0, 0.512801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530382,-99) , 
NN(
0, 
0, 
-1, 4.7423, 1, -1, 0.496166,-99) , 
9, -4.77518, 1, 0, 0.49772,-99) , 
9, -0.480915, 0, 0, 0.500497,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0117423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00021, 0, 1, 0.518747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499096,-99) , 
3, 8.72742, 0, 0, 0.500156,-99) , 
0, 0.494281, 1, 0, 0.503546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477092,-99) , 
4, 0.999524, 0, 0, 0.502217,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.014383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518591,-99) , 
NN(
0, 
0, 
-1, -2.2024, 0, -1, 0.493249,-99) , 
8, -1.85697, 1, 0, 0.49419,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0191019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.854082, 0, 1, 0.518517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491139,-99) , 
10, 2.6284, 1, 0, 0.514132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491752,-99) , 
9, -2.20654, 1, 0, 0.50054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470911,-99) , 
5, 0.807234, 1, 0, 0.499182,-99) , 
8, 0.999999, 0, 0, 0.502386,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0191614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484091,-99) , 
4, 0.999977, 0, 0, 0.50841,-99) , 
NN(
0, 
0, 
-1, 0.915622, 1, -1, 0.495596,-99) , 
5, -0.333921, 1, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, -3.15182, 1, -1, 0.472337,-99) , 
4, 0.999524, 0, 0, 0.499893,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0248278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09597, 1, 1, 0.521365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483168,-99) , 
9, -2.30474, 0, 0, 0.51209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466629,-99) , 
8, -1.66641, 0, 0, 0.506121,-99) , 
NN(
0, 
0, 
-1, -1.57152, 0, -1, 0.490888,-99) , 
7, -951.286, 1, 0, 0.498696,-99) , 
8, 1.0001, 0, 0, 0.501521,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0320046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457878,-99) , 
8, -1.53063, 0, 0, 0.507132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454324,-99) , 
7, -1.00026, 0, 0, 0.498537,-99) , 
7, -951.286, 1, 0, 0.502917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462751,-99) , 
8, 2.14281, 1, 0, 0.501589,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0216935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505256, 1, 1, 0.522313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495242,-99) , 
8, 0.142908, 0, 0, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0.145029, 1, -1, 0.488569,-99) , 
5, 0.0457845, 1, 0, 0.497025,-99) , 
0, 0.503805, 0, 0, 0.499634,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0206977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473319,-99) , 
8, -1.69363, 0, 0, 0.493487,-99) , 
10, -2.13595, 1, 0, 0.517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486947,-99) , 
10, 1.39524, 1, 0, 0.500079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425378,-99) , 
8, -0.83708, 1, 0, 0.469928,-99) , 
10, -1.75196, 0, 0, 0.497862,-99) , 
8, -1.28548, 1, 0, 0.499842,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0129795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489168,-99) , 
8, -1.18165, 1, 0, 0.514151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478807,-99) , 
8, -1.2857, 0, 0, 0.500675,-99) , 
9, -4.16985, 1, 0, 0.501965,-99) , 
NN(
0, 
0, 
-1, -3.38854, 1, -1, 0.478383,-99) , 
5, 0.806924, 1, 0, 0.500741,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0158093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495977,-99) , 
5, -0.524398, 1, 0, 0.499336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459614,-99) , 
5, -0.866632, 1, 0, 0.486332,-99) , 
10, 2.0312, 1, 0, 0.497701,-99) , 
8, 2.14287, 0, 0, 0.499006,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0164944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
8, -1.97939, 0, 0, 0.522336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491422,-99) , 
10, 0.655656, 1, 0, 0.499925,-99) , 
NN(
0, 
0, 
-1, 0.49808, 0, -1, 0.471083,-99) , 
10, -1.92942, 0, 0, 0.498094,-99) , 
8, -1.57122, 1, 0, 0.499675,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0102658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57141, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460426,-99) , 
4, 0.999524, 0, 0, 0.501225,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0115767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.719424, 1, 1, 0.52759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480573,-99) , 
0, 0.504756, 1, 0, 0.499314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414912,-99) , 
8, -0.967757, 1, 0, 0.46877,-99) , 
10, -1.8542, 0, 0, 0.497055,-99) , 
8, -1.57114, 1, 0, 0.499062,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0332968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497858,-99) , 
10, -2.53638, 0, 0, 0.533958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470327,-99) , 
7, -951.286, 0, 0, 0.48493,-99) , 
10, -1.84776, 1, 0, 0.504868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48436,-99) , 
3, 3.97413, 1, 0, 0.498498,-99) , 
NN(
0, 
0, 
-1, -1.64197, 0, -1, 0.479644,-99) , 
5, -0.143569, 1, 0, 0.488946,-99) , 
8, -0.714148, 1, 0, 0.492636,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0708333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487276,-99) , 
5, 0.59951, 1, 0, 0.512569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338872,-99) , 
7, -0.999837, 0, 0, 0.494185,-99) , 
7, -951.286, 1, 0, 0.501855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469026,-99) , 
4, 0.999995, 0, 0, 0.493893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443892,-99) , 
4, 0.999905, 0, 0, 0.491129,-99) , 
5, -0.0484512, 0, 0, 0.495949,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0200173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486537,-99) , 
10, 3.26482, 1, 0, 0.507293,-99) , 
NN(
0, 
0, 
-1, 0.571486, 1, -1, 0.493567,-99) , 
9, 0.0846499, 0, 0, 0.495427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508747,-99) , 
NN(
0, 
0, 
-1, 1.04441, 1, -1, 0.474494,-99) , 
2, -0.0743182, 1, 0, 0.482096,-99) , 
0, 0.502852, 1, 0, 0.493558,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0185759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493256,-99) , 
8, -1.93865, 0, 0, 0.514722,-99) , 
NN(
0, 
0, 
-1, -1.67001, 0, -1, 0.494725,-99) , 
8, -1.28555, 1, 0, 0.49677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506202,-99) , 
NN(
0, 
0, 
-1, 0.502535, 0, -1, 0.469595,-99) , 
0, 0.494281, 1, 0, 0.478446,-99) , 
2, 0.0713089, 1, 0, 0.494063,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0139876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.811159, 0, 1, 0.524608,-99) , 
NN(
0, 
0, 
-1, 1.2971, 1, -1, 0.497485,-99) , 
9, -0.365908, 0, 0, 0.499543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473858,-99) , 
5, -0.940512, 1, 0, 0.491214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445071,-99) , 
9, 1.27759, 0, 0, 0.476382,-99) , 
10, 2.41454, 1, 0, 0.49716,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0202927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.430472, 0, 1, 0.535968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499178,-99) , 
8, -1.85722, 1, 0, 0.501162,-99) , 
9, -1.29471, 0, 0, 0.504191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471283,-99) , 
7, -951.286, 1, 0, 0.501143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442359,-99) , 
7, -951.286, 0, 0, 0.464682,-99) , 
8, 1.00034, 1, 0, 0.488035,-99) , 
10, 1.35535, 1, 0, 0.500901,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0145645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491971,-99) , 
10, -0.0185424, 1, 0, 0.497479,-99) , 
5, 0.807991, 0, 0, 0.499297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470086,-99) , 
3, 9.06322, 1, 0, 0.498349,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0201674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.531274, 1, 1, 0.530999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455736,-99) , 
8, 1.29524, 1, 0, 0.517729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498926,-99) , 
0, 0.503805, 0, 0, 0.501912,-99) , 
NN(
0, 
0, 
-1, -3.58648, 1, -1, 0.487287,-99) , 
8, -0.714276, 0, 0, 0.498459,-99) , 
5, 0.617677, 0, 0, 0.50138,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0203659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35385, 1, 1, 0.526269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450283,-99) , 
5, 0.137708, 0, 0, 0.489485,-99) , 
3, 4.78253, 1, 0, 0.514176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
5, 0.419523, 0, 0, 0.507634,-99) , 
NN(
0, 
0, 
-1, 0.522465, 1, -1, 0.49527,-99) , 
8, -0.714079, 1, 0, 0.498147,-99) , 
2, -0.0713365, 1, 0, 0.50086,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0175867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.533221,-99) , 
NN(
NN(
0, 
0, 
-1, 0.807991, 0, 1, 0.505292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485012,-99) , 
5, 0.516182, 0, 0, 0.491229,-99) , 
3, 4.68186, 1, 0, 0.502533,-99) , 
8, 1.85718, 0, 0, 0.504456,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.013816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499251,-99) , 
5, -0.143572, 0, 0, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469785,-99) , 
1, 0.0143116, 1, 0, 0.503887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
0, 0.490472, 0, 0, 0.502882,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0210248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489321,-99) , 
0, 0.497138, 0, 0, 0.510959,-99) , 
5, 0.766215, 1, 0, 0.521483,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0778906, 1, 1, 0.509306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485931,-99) , 
7, -951.286, 1, 0, 0.494054,-99) , 
3, 2.663, 1, 0, 0.503053,-99) , 
5, 0.711866, 0, 0, 0.504968,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0165305);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492164,-99) , 
5, -0.429365, 0, 0, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468731,-99) , 
10, -2.57485, 0, 0, 0.499792,-99) , 
9, 2.09155, 0, 0, 0.501173,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.01662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
9, 1.72742, 0, 0, 0.500996,-99) , 
6, 0.0112846, 0, 0, 0.504414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373914,-99) , 
6, 0.0236981, 1, 0, 0.501143,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0164554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499449,-99) , 
0, 0.499042, 1, 0, 0.516365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499403,-99) , 
8, -1.09338, 1, 0, 0.502472,-99) , 
8, 1.0009, 0, 0, 0.505606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473499,-99) , 
0, 0.496185, 0, 0, 0.495309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456504,-99) , 
10, 1.13105, 0, 0, 0.488264,-99) , 
5, -0.809777, 0, 0, 0.502949,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0169257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498811,-99) , 
8, 0.142964, 0, 0, 0.504515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485018,-99) , 
10, 3.30714, 1, 0, 0.5034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485203,-99) , 
5, 0.138634, 0, 0, 0.496636,-99) , 
NN(
0, 
0, 
-1, -0.620658, 1, -1, 0.479367,-99) , 
10, -0.0527197, 1, 0, 0.488348,-99) , 
0, 0.495233, 0, 0, 0.499766,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0349388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493223,-99) , 
10, -1.73554, 0, 0, 0.52226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481776,-99) , 
10, 0.108477, 1, 0, 0.515632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49002,-99) , 
4, 0.999995, 0, 0, 0.504106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435076,-99) , 
3, 1.73556, 1, 0, 0.47819,-99) , 
4, 0.999905, 0, 0, 0.501891,-99) , 
5, 0.522519, 0, 0, 0.504623,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0223181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85711, 0, 1, 0.512853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483005,-99) , 
8, 0.999984, 1, 0, 0.499366,-99) , 
0, 0.499632, 1, 0, 0.507437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516823,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.47868,-99) , 
0, 0.489655, 1, 0, 0.490054,-99) , 
0, 0.492376, 0, 0, 0.505812,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00888398);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.85692, 1, 1, 0.504442,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0319119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489135,-99) , 
8, 0.198392, 0, 0, 0.530456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486945,-99) , 
5, -0.145086, 1, 0, 0.501769,-99) , 
10, -0.259951, 1, 0, 0.506255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497382,-99) , 
9, -3.27589, 0, 0, 0.50592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424825,-99) , 
10, -0.541872, 0, 0, 0.462003,-99) , 
8, 0.268534, 1, 0, 0.497006,-99) , 
9, -2.91496, 0, 0, 0.502557,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0201425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97958, 0, 1, 0.521982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490582,-99) , 
10, 0.655679, 1, 0, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.460229,-99) , 
10, -1.92942, 0, 0, 0.498227,-99) , 
8, -1.57141, 1, 0, 0.499747,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0187055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468386,-99) , 
10, -0.477223, 0, 0, 0.498166,-99) , 
9, -4.12885, 1, 0, 0.515896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496571,-99) , 
8, 0.346881, 0, 0, 0.510066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495714,-99) , 
5, 0.711867, 0, 0, 0.497369,-99) , 
2, -0.0716018, 1, 0, 0.499512,-99) , 
8, -1.2857, 1, 0, 0.501239,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0101258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493225,-99) , 
0, 0.496185, 0, 0, 0.517494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476789,-99) , 
5, -0.918423, 0, 0, 0.498975,-99) , 
5, 0.712774, 0, 0, 0.500874,-99) , 
0, 0.490472, 1, 0, 0.501903,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0189286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494181,-99) , 
8, -0.427975, 0, 0, 0.504145,-99) , 
5, -0.904913, 1, 0, 0.506467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490375,-99) , 
7, -951.286, 1, 0, 0.510092,-99) , 
NN(
0, 
0, 
-1, -1.28552, 0, -1, 0.492828,-99) , 
9, -3.91596, 1, 0, 0.495426,-99) , 
0, 0.496186, 1, 0, 0.498968,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0207803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48142,-99) , 
10, 1.55061, 1, 0, 0.533564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492271,-99) , 
5, -0.524745, 1, 0, 0.496845,-99) , 
9, -4.45095, 1, 0, 0.498766,-99) , 
8, 1.85718, 0, 0, 0.500961,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.012725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.208746, 0, 1, 0.504397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463247,-99) , 
4, 0.999637, 0, 0, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463019,-99) , 
4, 0.999048, 0, 0, 0.501899,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0143583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528497,-99) , 
NN(
NN(
0, 
0, 
-1, 1.3674, 0, 1, 0.504758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470898,-99) , 
7, -951.286, 0, 0, 0.487445,-99) , 
8, -1.28555, 0, 0, 0.503003,-99) , 
0, 0.505709, 0, 0, 0.504009,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0135206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497856,-99) , 
9, -0.0933363, 0, 0, 0.499273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470031,-99) , 
5, -0.904834, 0, 0, 0.498407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470294,-99) , 
10, 4.27433, 1, 0, 0.491716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452302,-99) , 
9, 1.37573, 0, 0, 0.478489,-99) , 
10, 2.46655, 1, 0, 0.496415,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.023672);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04739, 0, 1, 0.525949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485561,-99) , 
8, 0.605706, 1, 0, 0.512618,-99) , 
NN(
0, 
0, 
-1, -1.91489, 0, -1, 0.491392,-99) , 
2, -0.0715449, 1, 0, 0.494974,-99) , 
8, -1.57122, 1, 0, 0.496982,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0159451);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.55555, 1, 1, 0.525986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
8, -0.340432, 1, 0, 0.508191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492058,-99) , 
7, -951.286, 0, 0, 0.496758,-99) , 
5, 0.33145, 0, 0, 0.499745,-99) , 
9, -4.34575, 1, 0, 0.501821,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0182608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
5, 0.232389, 0, 0, 0.508296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47212,-99) , 
9, -2.98028, 0, 0, 0.496802,-99) , 
8, 0.142982, 1, 0, 0.502502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479784,-99) , 
10, -2.37309, 0, 0, 0.501528,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0206104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.527169, 1, 1, 0.524206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491578,-99) , 
0, 0.503804, 1, 0, 0.503935,-99) , 
8, 1.28574, 0, 0, 0.506602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471474,-99) , 
10, 4.27433, 1, 0, 0.49635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454531,-99) , 
9, 1.36285, 0, 0, 0.48247,-99) , 
10, 2.46655, 1, 0, 0.504202,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0252573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489969,-99) , 
3, 2.53112, 1, 0, 0.524939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487007,-99) , 
8, 0.142783, 1, 0, 0.496048,-99) , 
3, 4.71064, 1, 0, 0.515018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486628,-99) , 
3, 4.73378, 1, 0, 0.504613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481588,-99) , 
2, 0.0110378, 0, 0, 0.493526,-99) , 
2, -0.00321171, 1, 0, 0.499615,-99) , 
2, 0.0716008, 0, 0, 0.501957,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0106084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215087, 1, 1, 0.502179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462656,-99) , 
4, 0.999751, 0, 0, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454473,-99) , 
4, 0.999524, 0, 0, 0.498717,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0165933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4906,-99) , 
7, -951.286, 0, 0, 0.506763,-99) , 
NN(
0, 
0, 
-1, 0.814644, 1, -1, 0.495468,-99) , 
9, -1.00175, 0, 0, 0.497499,-99) , 
NN(
0, 
0, 
-1, 1.65672, 0, -1, 0.47645,-99) , 
10, 3.05633, 1, 0, 0.496097,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0177743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492757,-99) , 
5, -0.148261, 0, 0, 0.503993,-99) , 
NN(
0, 
0, 
-1, -1.13346, 0, -1, 0.494861,-99) , 
8, -0.142752, 1, 0, 0.498638,-99) , 
2, -0.214835, 1, 0, 0.499873,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.017753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 0, 1, 0.534689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488013,-99) , 
0, 0.497138, 1, 0, 0.502331,-99) , 
2, 0.139737, 0, 0, 0.518567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484671,-99) , 
0, 0.492376, 0, 0, 0.507911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473429,-99) , 
0, 0.503804, 1, 0, 0.497958,-99) , 
8, -0.142862, 1, 0, 0.502056,-99) , 
2, 0.0717303, 0, 0, 0.504583,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0131518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.711847, 0, 1, 0.527569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473394,-99) , 
10, 1.544, 1, 0, 0.528258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499093,-99) , 
9, 1.74434, 0, 0, 0.500624,-99) , 
8, 1.85717, 0, 0, 0.502307,-99) , 
4, 0.999524, 1, 0, 0.503709,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0164362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497931,-99) , 
0, 0.499995, 0, 0, 0.502075,-99) , 
2, 0.214015, 0, 0, 0.50356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469586,-99) , 
5, -0.843356, 1, 0, 0.494979,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.46528,-99) , 
5, -0.927503, 0, 0, 0.484451,-99) , 
5, -0.809683, 0, 0, 0.50064,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0145768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494294,-99) , 
7, -951.286, 1, 0, 0.533495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499238,-99) , 
4, 0.999524, 1, 0, 0.501378,-99) , 
8, 1.57095, 0, 0, 0.503592,-99) , 
NN(
0, 
0, 
-1, -0.61938, 1, -1, 0.484602,-99) , 
10, 1.43732, 1, 0, 0.499923,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0200121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.58063, 0, 1, 0.510916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484296,-99) , 
9, -0.985025, 0, 0, 0.500083,-99) , 
10, 0.926524, 1, 0, 0.508065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47492,-99) , 
0, 0.489519, 0, 0, 0.507225,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0110889);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533539,-99) , 
NN(
NN(
0, 
0, 
-1, -0.178062, 0, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0.900582, 0, -1, 0.475201,-99) , 
10, 2.11608, 1, 0, 0.499891,-99) , 
9, 2.73737, 0, 0, 0.50116,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0191536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49975,-99) , 
9, -2.32704, 0, 0, 0.503793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477828,-99) , 
10, 0.622225, 1, 0, 0.50205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482536,-99) , 
8, 1.57147, 0, 0, 0.488453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463831,-99) , 
5, -0.429073, 1, 0, 0.48493,-99) , 
10, 0.926524, 1, 0, 0.497534,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.027867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.77196, 1, 1, 0.510706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400976,-99) , 
8, -0.520247, 1, 0, 0.487467,-99) , 
10, -1.51062, 0, 0, 0.504951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487157,-99) , 
0, 0.5019, 0, 0, 0.49317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457722,-99) , 
5, 0.136762, 1, 0, 0.489348,-99) , 
10, 0.445771, 1, 0, 0.49955,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0145622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52004,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.494734,-99) , 
2, -0.214257, 1, 0, 0.495818,-99) , 
8, 2.14289, 0, 0, 0.497583,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0104057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479535,-99) , 
5, -0.429561, 0, 0, 0.503958,-99) , 
0, 0.493329, 1, 0, 0.511159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472627,-99) , 
8, -1.57141, 0, 0, 0.499005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477525,-99) , 
10, -2.3623, 0, 0, 0.498082,-99) , 
2, 0.0717926, 0, 0, 0.500071,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0175292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498408, 0, 1, 0.504346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473655,-99) , 
9, -2.17356, 1, 0, 0.490048,-99) , 
2, -0.0714192, 0, 0, 0.502139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473267,-99) , 
3, 3.82606, 1, 0, 0.497343,-99) , 
NN(
0, 
0, 
-1, -0.972997, 1, -1, 0.458667,-99) , 
5, 0.418288, 1, 0, 0.489183,-99) , 
0, 0.500947, 1, 0, 0.49881,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0139587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0462567, 0, 1, 0.517638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495841,-99) , 
9, 1.58535, 0, 0, 0.497094,-99) , 
8, 1.40812, 0, 0, 0.498959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466539,-99) , 
8, 2.14288, 1, 0, 0.497891,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0149184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494875,-99) , 
10, 3.34269, 1, 0, 0.521458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498322,-99) , 
8, 1.28572, 0, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448905,-99) , 
10, 2.14559, 1, 0, 0.499187,-99) , 
9, 0.65064, 0, 0, 0.50148,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0169216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496637,-99) , 
2, -0.0315868, 1, 0, 0.501069,-99) , 
3, 9.08707, 0, 0, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47063,-99) , 
4, 0.999524, 0, 0, 0.500861,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.00856537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.71932, 0, 1, 0.503474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468768,-99) , 
4, 0.999048, 0, 0, 0.502463,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0180018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479516,-99) , 
7, -951.286, 1, 0, 0.505504,-99) , 
10, 2.50594, 1, 0, 0.516872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471633,-99) , 
10, 1.70158, 1, 0, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466353,-99) , 
10, -2.60024, 0, 0, 0.501218,-99) , 
9, 0.0345393, 0, 0, 0.503448,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0193479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494718,-99) , 
0, 0.496186, 0, 0, 0.508332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492877,-99) , 
8, -1.77518, 1, 0, 0.494239,-99) , 
9, -1.04645, 0, 0, 0.49751,-99) , 
8, 2.14288, 0, 0, 0.498854,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0196628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0124503, 1, 1, 0.514114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495275,-99) , 
2, 0.0715007, 0, 0, 0.498965,-99) , 
3, 1.38211, 1, 0, 0.504079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468248,-99) , 
3, 9.10638, 1, 0, 0.502912,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0303144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447402,-99) , 
8, 0.189932, 1, 0, 0.50543,-99) , 
9, -2.98801, 0, 0, 0.510238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48116,-99) , 
5, 0.426558, 1, 0, 0.501082,-99) , 
NN(
0, 
0, 
-1, 1.3335, 1, -1, 0.476993,-99) , 
0, 0.502852, 1, 0, 0.497604,-99) , 
10, -0.580306, 1, 0, 0.502671,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0157412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0733123, 0, 1, 0.511601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494927,-99) , 
3, 9.02354, 0, 0, 0.49611,-99) , 
0, 0.494281, 1, 0, 0.498974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46175,-99) , 
4, 0.999048, 0, 0, 0.497903,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0143544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28571, 0, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 1.28587, 1, -1, 0.485565,-99) , 
10, 2.20725, 1, 0, 0.502287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468309,-99) , 
4, 0.999524, 0, 0, 0.500583,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0152107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495874,-99) , 
0, 0.497138, 0, 0, 0.502176,-99) , 
NN(
0, 
0, 
-1, 2.36535, 0, -1, 0.478284,-99) , 
10, 1.99167, 1, 0, 0.500771,-99) , 
NN(
0, 
0, 
-1, 1.82301, 0, -1, 0.478309,-99) , 
10, 2.77661, 1, 0, 0.49898,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0204525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496247,-99) , 
9, -1.69679, 0, 0, 0.49928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477216,-99) , 
9, 0.997145, 0, 0, 0.485448,-99) , 
10, 0.986613, 1, 0, 0.496149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464594,-99) , 
10, 4.2114, 1, 0, 0.495105,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0194587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487589,-99) , 
3, 4.72814, 1, 0, 0.516844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496762,-99) , 
8, -1.57075, 1, 0, 0.49818,-99) , 
2, 0.071273, 0, 0, 0.501061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0.463696, 0, -1, 0.47536,-99) , 
0, 0.49428, 1, 0, 0.482568,-99) , 
5, -0.809677, 0, 0, 0.4982,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0169325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.42851, 1, 1, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482681,-99) , 
9, -4.01394, 0, 0, 0.503821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511845,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.474429,-99) , 
5, -0.147151, 0, 0, 0.489155,-99) , 
8, -0.999989, 0, 0, 0.501542,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00878341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.513925, 0, 1, 0.51442,-99) , 
NN(
0, 
0, 
-1, -1.57121, 0, -1, 0.498552,-99) , 
3, 4.80097, 0, 0, 0.501101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469395,-99) , 
3, 9.07131, 1, 0, 0.500095,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.012681);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.530198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497711,-99) , 
9, 1.79108, 0, 0, 0.499217,-99) , 
0, 0.505709, 0, 0, 0.500814,-99) , 
5, 0.807926, 0, 0, 0.502441,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0177826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496705,-99) , 
3, 3.92334, 1, 0, 0.522197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487649,-99) , 
10, 0.560835, 1, 0, 0.501033,-99) , 
9, -0.650235, 0, 0, 0.504695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474381,-99) , 
10, 4.15532, 1, 0, 0.50364,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0147845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
8, 1.28578, 1, 0, 0.501266,-99) , 
5, 0.807993, 0, 0, 0.50288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475177,-99) , 
0, 0.493011, 1, 0, 0.494468,-99) , 
NN(
0, 
0, 
-1, 0.492694, 0, -1, 0.480208,-99) , 
5, 0.0421615, 1, 0, 0.489283,-99) , 
0, 0.494281, 0, 0, 0.500398,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0216157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493965,-99) , 
10, 0.136907, 1, 0, 0.513385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490913,-99) , 
2, 0.0716008, 0, 0, 0.495381,-99) , 
0, 0.494553, 0, 0, 0.502108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480752,-99) , 
10, -1.49764, 0, 0, 0.503455,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.491651,-99) , 
5, 0.520233, 0, 0, 0.494012,-99) , 
0, 0.496186, 1, 0, 0.496601,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0198511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493102, 1, 1, 0.522075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49682,-99) , 
10, 0.738541, 0, 0, 0.501646,-99) , 
8, 0.99981, 0, 0, 0.506025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494444,-99) , 
0, 0.503079, 0, 0, 0.508711,-99) , 
NN(
0, 
0, 
-1, 0.428561, 1, -1, 0.491117,-99) , 
2, 0.0697379, 0, 0, 0.493863,-99) , 
0, 0.49809, 1, 0, 0.49989,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0122055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.557542, 1, 1, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476048,-99) , 
3, 9.39171, 1, 0, 0.504756,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0163183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8195, 0, 1, 0.533036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480111,-99) , 
0, 0.498091, 1, 0, 0.495313,-99) , 
10, 1.20099, 1, 0, 0.516114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497327,-99) , 
2, 0.0747477, 0, 0, 0.508184,-99) , 
NN(
0, 
0, 
-1, -0.21446, 0, -1, 0.495891,-99) , 
0, 0.493329, 1, 0, 0.497579,-99) , 
8, 1.28581, 0, 0, 0.500289,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0100666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524671,-99) , 
NN(
NN(
0, 
0, 
-1, 0.610996, 0, 1, 0.50427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478802,-99) , 
5, 0.617021, 1, 0, 0.497085,-99) , 
8, 0.183732, 1, 0, 0.501072,-99) , 
8, 2.14287, 0, 0, 0.501934,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0116446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.210606, 1, 1, 0.504562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470311,-99) , 
4, 0.999524, 0, 0, 0.502846,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0281796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441941,-99) , 
10, -0.684862, 1, 0, 0.500986,-99) , 
9, -2.88676, 0, 0, 0.505918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49018,-99) , 
10, 1.02997, 1, 0, 0.501165,-99) , 
NN(
0, 
0, 
-1, -0.528206, 1, -1, 0.483014,-99) , 
8, 0.714369, 0, 0, 0.491839,-99) , 
10, -0.453124, 1, 0, 0.497969,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0156153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499013,-99) , 
9, 1.51521, 0, 0, 0.501247,-99) , 
6, 0.0112812, 0, 0, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384396,-99) , 
6, 0.0236981, 1, 0, 0.500285,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0149465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488878,-99) , 
5, 0.850032, 1, 0, 0.516038,-99) , 
NN(
0, 
0, 
-1, 0.999818, 0, -1, 0.496468,-99) , 
5, 0.61482, 0, 0, 0.499443,-99) , 
8, 2.14285, 0, 0, 0.501006,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0132484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481088,-99) , 
10, 3.45231, 1, 0, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459209,-99) , 
10, -2.38109, 0, 0, 0.501542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474639,-99) , 
8, -1.85692, 0, 0, 0.500609,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0257576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488903,-99) , 
4, 0.999995, 0, 0, 0.508235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475089,-99) , 
4, 0.999905, 0, 0, 0.506476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497052,-99) , 
9, -2.40879, 0, 0, 0.499887,-99) , 
NN(
0, 
0, 
-1, 2.06408, 0, -1, 0.462889,-99) , 
10, 0.539413, 1, 0, 0.496313,-99) , 
5, -0.23873, 1, 0, 0.501109,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0136997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5058, 1, 1, 0.520474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
5, -0.716402, 0, 0, 0.514929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496545,-99) , 
9, -3.7655, 1, 0, 0.499068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478183,-99) , 
10, -2.26819, 0, 0, 0.497961,-99) , 
0, 0.503804, 0, 0, 0.499678,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0176925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.520257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489356,-99) , 
10, 3.61973, 1, 0, 0.514119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497306,-99) , 
9, -1.52761, 0, 0, 0.499409,-99) , 
9, -4.57768, 1, 0, 0.501355,-99) , 
9, -1.01921, 0, 0, 0.50438,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0369203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489613,-99) , 
5, -0.183247, 0, 0, 0.506851,-99) , 
5, -0.905224, 1, 0, 0.513463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488452,-99) , 
10, 1.99826, 1, 0, 0.506023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418325,-99) , 
10, -1.38424, 0, 0, 0.479864,-99) , 
9, -3.66978, 0, 0, 0.502997,-99) , 
8, -0.714306, 1, 0, 0.505448,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0205981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45158,-99) , 
10, -2.39365, 0, 0, 0.502948,-99) , 
8, -1.95385, 1, 0, 0.504594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476911,-99) , 
3, 1.36968, 0, 0, 0.494913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466001,-99) , 
5, -0.33429, 1, 0, 0.490657,-99) , 
10, 0.745017, 1, 0, 0.500591,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0298575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405892,-99) , 
7, -1.85736, 0, 0, 0.507111,-99) , 
NN(
0, 
0, 
-1, 2.19289, 1, -1, 0.492721,-99) , 
7, -951.286, 0, 0, 0.499817,-99) , 
9, 2.09564, 0, 0, 0.501411,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0136441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493473,-99) , 
8, 0.14295, 1, 0, 0.505802,-99) , 
0, 0.502444, 1, 0, 0.511137,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498693, 0, 1, 0.502731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475224,-99) , 
7, -951.286, 1, 0, 0.48872,-99) , 
0, 0.499859, 1, 0, 0.500115,-99) , 
0, 0.5019, 0, 0, 0.502272,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.017582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.796085, 0, 1, 0.517243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446585,-99) , 
10, -1.89968, 0, 0, 0.4983,-99) , 
8, -1.28368, 1, 0, 0.500016,-99) , 
5, -0.714523, 1, 0, 0.504004,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0137251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493592,-99) , 
10, 1.54316, 1, 0, 0.523357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497245,-99) , 
5, 0.709809, 0, 0, 0.498906,-99) , 
8, 1.85714, 0, 0, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451788,-99) , 
10, -2.52271, 0, 0, 0.498897,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0229878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.38018, 1, 1, 0.519836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494858,-99) , 
9, -3.17586, 1, 0, 0.50134,-99) , 
9, -0.549638, 0, 0, 0.505627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48358,-99) , 
8, -0.87658, 0, 0, 0.507151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483636,-99) , 
2, 0.00209493, 1, 0, 0.491687,-99) , 
2, -0.0726598, 1, 0, 0.494281,-99) , 
8, 0.428574, 0, 0, 0.498671,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0133121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488466,-99) , 
8, -0.428709, 0, 0, 0.527906,-99) , 
NN(
0, 
0, 
-1, 1.35859, 1, -1, 0.498235,-99) , 
9, -0.587288, 0, 0, 0.500337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465524,-99) , 
5, -0.870956, 1, 0, 0.491167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454208,-99) , 
8, 1.28587, 1, 0, 0.481563,-99) , 
10, 2.06512, 1, 0, 0.497923,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0170438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.531313,-99) , 
NN(
NN(
0, 
0, 
-1, -3.10573, 0, 1, 0.515117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492859,-99) , 
7, -951.286, 1, 0, 0.499303,-99) , 
5, 0.712834, 0, 0, 0.500857,-99) , 
8, 1.8571, 0, 0, 0.50274,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0192305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.530257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486795,-99) , 
5, 0.520796, 1, 0, 0.518806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491167,-99) , 
0, 0.502851, 1, 0, 0.510221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494712,-99) , 
3, 4.06471, 0, 0, 0.496835,-99) , 
3, 4.72382, 0, 0, 0.499451,-99) , 
8, 1.57146, 0, 0, 0.501319,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.016891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487619,-99) , 
10, 2.45131, 1, 0, 0.504334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472192,-99) , 
8, -1.57124, 0, 0, 0.503036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473009,-99) , 
10, -2.50949, 0, 0, 0.502018,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0124812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0720236, 1, 1, 0.513684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489359,-99) , 
0, 0.505391, 1, 0, 0.509421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49947,-99) , 
9, 0.392224, 0, 0, 0.501117,-99) , 
NN(
0, 
0, 
-1, 0.418634, 1, -1, 0.48566,-99) , 
2, 0.0714933, 1, 0, 0.498948,-99) , 
0, 0.500947, 0, 0, 0.501698,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0102187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.447784, 0, 1, 0.528571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498873,-99) , 
4, 0.999524, 1, 0, 0.50029,-99) , 
3, 0.543187, 1, 0, 0.502522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47436,-99) , 
3, 9.33163, 1, 0, 0.501707,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0175122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57704, 1, 1, 0.508547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459872,-99) , 
9, -4.474, 0, 0, 0.495351,-99) , 
5, 0.237008, 1, 0, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451804,-99) , 
4, 0.999048, 0, 0, 0.503021,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0112929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.522702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489413,-99) , 
10, 0.896397, 1, 0, 0.499706,-99) , 
9, 0.619848, 0, 0, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475328,-99) , 
10, 4.21549, 1, 0, 0.500499,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0247729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.03833, 1, 1, 0.514291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478023,-99) , 
0, 0.499995, 1, 0, 0.500189,-99) , 
3, 1.64016, 0, 0, 0.508551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496564,-99) , 
9, -3.7821, 0, 0, 0.507059,-99) , 
NN(
0, 
0, 
-1, -1.10624, 0, -1, 0.489929,-99) , 
8, -0.141366, 1, 0, 0.49621,-99) , 
5, -0.238739, 1, 0, 0.502067,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0303155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452125,-99) , 
10, -1.72759, 0, 0, 0.49744,-99) , 
8, -1.15605, 1, 0, 0.511917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489572,-99) , 
8, 0.142957, 0, 0, 0.499366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410923,-99) , 
8, -0.187221, 1, 0, 0.48493,-99) , 
10, -1.04413, 0, 0, 0.497257,-99) , 
9, -3.91596, 1, 0, 0.499446,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0297019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498693,-99) , 
9, -3.97772, 1, 0, 0.520456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444761,-99) , 
8, -1.2857, 0, 0, 0.501523,-99) , 
9, -3.31539, 1, 0, 0.505983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494145,-99) , 
8, 1.5718, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400978,-99) , 
7, -1.85712, 0, 0, 0.49271,-99) , 
7, -951.286, 1, 0, 0.49951,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.017091);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49239,-99) , 
10, -0.0552226, 1, 0, 0.499565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451313,-99) , 
9, 0.959574, 0, 0, 0.473387,-99) , 
10, 2.08402, 1, 0, 0.497544,-99) , 
9, 1.83089, 0, 0, 0.499206,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0155218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495673,-99) , 
5, -0.619772, 1, 0, 0.499118,-99) , 
NN(
0, 
0, 
-1, -0.919717, 1, -1, 0.475518,-99) , 
10, 3.05633, 1, 0, 0.497649,-99) , 
8, 2.14284, 0, 0, 0.498929,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0114659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496758,-99) , 
3, 0.562891, 1, 0, 0.498421,-99) , 
3, 9.14176, 0, 0, 0.499395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475026,-99) , 
4, 0.999048, 0, 0, 0.498689,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0202028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459363,-99) , 
10, 2.68301, 1, 0, 0.503402,-99) , 
9, 2.07703, 0, 0, 0.504817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476516,-99) , 
0, 0.496186, 0, 0, 0.499247,-99) , 
NN(
0, 
0, 
-1, 1.18921, 1, -1, 0.472932,-99) , 
8, 0.143402, 1, 0, 0.486672,-99) , 
3, 4.73378, 1, 0, 0.50139,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0126859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496982,-99) , 
0, 0.491424, 1, 0, 0.498414,-99) , 
8, 2.14288, 0, 0, 0.499537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467926,-99) , 
4, 0.999524, 0, 0, 0.497954,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0327744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462964,-99) , 
8, -1.28711, 0, 0, 0.526573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467928,-99) , 
7, 0.147764, 1, 0, 0.496944,-99) , 
7, -951.286, 1, 0, 0.516186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490767,-99) , 
9, -4.00984, 1, 0, 0.494026,-99) , 
9, -0.948904, 0, 0, 0.49637,-99) , 
5, -0.714687, 1, 0, 0.500988,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0157904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00002, 0, 1, 0.506896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484789,-99) , 
10, 3.86971, 1, 0, 0.505953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470332,-99) , 
4, 0.999048, 0, 0, 0.50493,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0129321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491425, 1, 1, 0.503952,-99) , 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.489048,-99) , 
10, 1.30911, 1, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458644,-99) , 
4, 0.999048, 0, 0, 0.49956,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0206094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495447,-99) , 
8, 1.85707, 0, 0, 0.497052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457228,-99) , 
7, -951.286, 0, 0, 0.481238,-99) , 
10, 1.71346, 1, 0, 0.495124,-99) , 
9, 2.07299, 0, 0, 0.496483,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0186943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469924,-99) , 
10, -2.3827, 0, 0, 0.500538,-99) , 
4, 0.999048, 1, 0, 0.502443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485421,-99) , 
0, 0.499995, 0, 0, 0.492349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437074,-99) , 
5, 0.332157, 1, 0, 0.487853,-99) , 
10, 0.417484, 1, 0, 0.49727,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0134368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
9, -3.2145, 0, 0, 0.518874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470381,-99) , 
10, 1.40331, 1, 0, 0.499014,-99) , 
0, 0.502852, 0, 0, 0.501814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474832,-99) , 
5, -0.833447, 1, 0, 0.497682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45743,-99) , 
8, 1.28645, 1, 0, 0.486987,-99) , 
10, 1.74667, 1, 0, 0.499476,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0264525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496883,-99) , 
9, -2.80095, 0, 0, 0.508093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476098,-99) , 
5, -0.0489784, 1, 0, 0.495826,-99) , 
10, -0.463389, 1, 0, 0.499297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471999,-99) , 
10, -2.07746, 0, 0, 0.495185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431848,-99) , 
8, -0.35514, 1, 0, 0.484719,-99) , 
10, -1.29486, 0, 0, 0.496242,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.018592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45159,-99) , 
10, 0.549566, 1, 0, 0.50378,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.4936,-99) , 
5, 0.14189, 0, 0, 0.497219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47245,-99) , 
10, -2.53843, 0, 0, 0.496423,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0185861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495607,-99) , 
10, 1.55677, 1, 0, 0.520747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496093,-99) , 
10, -1.83008, 1, 0, 0.508803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495158,-99) , 
8, 0.887909, 0, 0, 0.499379,-99) , 
8, -0.687072, 1, 0, 0.501752,-99) , 
8, 1.85714, 0, 0, 0.50291,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0241997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.728195, 1, 1, 0.50647,-99) , 
NN(
0, 
0, 
-1, 1.04138, 0, -1, 0.489848,-99) , 
10, 1.96249, 1, 0, 0.503446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481615,-99) , 
8, -0.26816, 1, 0, 0.494753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433628,-99) , 
10, -2.29026, 0, 0, 0.488264,-99) , 
5, 0.426761, 1, 0, 0.499822,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0209672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.715015, 0, 1, 0.540062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496488,-99) , 
9, 2.17642, 0, 0, 0.498421,-99) , 
6, 0.0101874, 0, 0, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395535,-99) , 
6, 0.0237713, 1, 0, 0.499198,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0198586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480033,-99) , 
0, 0.504666, 1, 0, 0.493839,-99) , 
8, -0.428115, 1, 0, 0.509692,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0710283, 0, 1, 0.505186,-99) , 
NN(
0, 
0, 
-1, 1.67507, 1, -1, 0.490428,-99) , 
0, 0.496322, 1, 0, 0.496154,-99) , 
0, 0.502852, 0, 0, 0.498123,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0160016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.551572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499113,-99) , 
10, 1.39602, 1, 0, 0.528947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495941,-99) , 
9, 1.56515, 0, 0, 0.522585,-99) , 
NN(
0, 
0, 
-1, 0.484362, 1, -1, 0.496262,-99) , 
5, -0.904924, 1, 0, 0.498442,-99) , 
8, 1.57141, 0, 0, 0.501467,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0153031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.46244, 1, 1, 0.524847,-99) , 
NN(
NN(
0, 
0, 
-1, -2.07464, 0, 1, 0.522124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495986,-99) , 
7, -951.286, 1, 0, 0.501479,-99) , 
8, -1.61207, 1, 0, 0.502798,-99) , 
8, 1.85718, 0, 0, 0.504163,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0187723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04312, 0, 1, 0.529208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481582,-99) , 
0, 0.495236, 0, 0, 0.518136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496831,-99) , 
2, -0.0480338, 1, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465722,-99) , 
4, 0.999825, 0, 0, 0.497613,-99) , 
5, 0.617618, 0, 0, 0.500741,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0151894);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48523,-99) , 
3, 4.17515, 1, 0, 0.517999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496518,-99) , 
5, -0.429292, 1, 0, 0.500044,-99) , 
0, 0.503804, 0, 0, 0.501862,-99) , 
8, 2.14284, 0, 0, 0.503098,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0186499);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475202,-99) , 
10, 3.3314, 1, 0, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466916,-99) , 
10, -2.09617, 0, 0, 0.501761,-99) , 
8, -1.85687, 1, 0, 0.503122,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0113221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.958746, 0, 1, 0.515739,-99) , 
NN(
NN(
0, 
0, 
-1, -1.45904e-05, 1, 1, 0.522169,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496596,-99) , 
5, 0.80723, 0, 0, 0.498057,-99) , 
8, -1.28572, 1, 0, 0.499917,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0215661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464535,-99) , 
8, 0.542364, 1, 0, 0.505208,-99) , 
8, 0.915241, 0, 0, 0.508262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473545,-99) , 
3, 3.85015, 1, 0, 0.49959,-99) , 
NN(
0, 
0, 
-1, -0.336344, 1, -1, 0.478796,-99) , 
3, 4.73378, 1, 0, 0.49576,-99) , 
9, -2.70844, 1, 0, 0.501509,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00856196);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522879,-99) , 
NN(
NN(
0, 
0, 
-1, 0.184365, 0, 1, 0.516773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490058,-99) , 
0, 0.500675, 1, 0, 0.49807,-99) , 
0, 0.504756, 0, 0, 0.499317,-99) , 
8, 2.14288, 0, 0, 0.500183,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0175916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496726,-99) , 
8, 0.142569, 0, 0, 0.502055,-99) , 
NN(
0, 
0, 
-1, -1.28565, 0, -1, 0.490768,-99) , 
0, 0.496186, 0, 0, 0.49852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483338,-99) , 
8, -0.331706, 1, 0, 0.494926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436457,-99) , 
8, 1.00102, 1, 0, 0.479476,-99) , 
5, 0.712116, 1, 0, 0.496648,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0208632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709474, 1, 1, 0.513399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464991,-99) , 
4, 0.999905, 0, 0, 0.50035,-99) , 
5, 0.519834, 0, 0, 0.503045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463217,-99) , 
2, 0.0773264, 0, 0, 0.47288,-99) , 
2, -0.0721639, 1, 0, 0.487316,-99) , 
0, 0.502852, 1, 0, 0.500861,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0146607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487179,-99) , 
10, -1.49764, 0, 0, 0.510231,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.497918,-99) , 
5, 0.386589, 0, 0, 0.500136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0.969409, 0, -1, 0.453633,-99) , 
8, 0.157061, 1, 0, 0.476939,-99) , 
5, 0.712839, 1, 0, 0.497883,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0335914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497951,-99) , 
5, 0.141907, 0, 0, 0.509682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428357,-99) , 
7, -1.85727, 0, 0, 0.503832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496767,-99) , 
5, 0.244359, 1, 0, 0.512665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481524,-99) , 
5, -0.904806, 1, 0, 0.485731,-99) , 
9, -3.14056, 1, 0, 0.493137,-99) , 
7, -951.286, 0, 0, 0.49841,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.03914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420828,-99) , 
7, -1.57163, 0, 0, 0.512444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494651,-99) , 
2, 0.0724252, 0, 0, 0.499829,-99) , 
7, -951.286, 0, 0, 0.505643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481886,-99) , 
5, 0.13794, 0, 0, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450384,-99) , 
8, -0.259538, 1, 0, 0.492049,-99) , 
10, -1.155, 0, 0, 0.502337,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0208281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494204,-99) , 
9, -2.26493, 1, 0, 0.542274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444468,-99) , 
10, -0.345899, 1, 0, 0.499623,-99) , 
9, -2.57546, 0, 0, 0.504475,-99) , 
NN(
NN(
0, 
0, 
-1, -0.99982, 0, -1, 0.49663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45537,-99) , 
10, 0.189292, 1, 0, 0.472141,-99) , 
5, 0.141264, 1, 0, 0.492486,-99) , 
10, -0.092933, 1, 0, 0.498839,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.014968);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479778,-99) , 
5, 0.724451, 1, 0, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465431,-99) , 
5, -0.904935, 0, 0, 0.499675,-99) , 
9, 2.07703, 0, 0, 0.501039,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0298826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474076,-99) , 
10, 3.10582, 1, 0, 0.506677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48101,-99) , 
5, -0.809813, 1, 0, 0.488485,-99) , 
0, 0.494281, 0, 0, 0.503377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495265,-99) , 
9, -4.22754, 0, 0, 0.508203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407074,-99) , 
8, -0.722328, 1, 0, 0.484589,-99) , 
10, -1.59318, 0, 0, 0.500628,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0100147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487302,-99) , 
2, 0.0714181, 1, 0, 0.499155,-99) , 
0, 0.505709, 0, 0, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453395,-99) , 
8, 2.14285, 1, 0, 0.498545,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0176754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49846,-99) , 
5, -0.908591, 1, 0, 0.539221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492,-99) , 
7, -951.286, 1, 0, 0.519961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
9, -3.72536, 1, 0, 0.501552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41317,-99) , 
8, -0.677, 1, 0, 0.483877,-99) , 
10, -1.53032, 0, 0, 0.49851,-99) , 
9, 0.789697, 0, 0, 0.500573,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0155269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534668,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49729,-99) , 
2, 0.214202, 0, 0, 0.498655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488272,-99) , 
9, -3.83236, 0, 0, 0.496166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427669,-99) , 
8, -0.355369, 1, 0, 0.48558,-99) , 
10, -1.31109, 0, 0, 0.495936,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0268993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49449,-99) , 
4, 0.999995, 0, 0, 0.506383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468201,-99) , 
4, 0.999905, 0, 0, 0.503995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486795,-99) , 
9, -1.75902, 0, 0, 0.489569,-99) , 
4, 0.999048, 1, 0, 0.492022,-99) , 
5, 0.141849, 1, 0, 0.499597,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0160084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491891,-99) , 
5, -0.24145, 1, 0, 0.521368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499518,-99) , 
9, -2.59926, 0, 0, 0.502949,-99) , 
NN(
0, 
0, 
-1, -0.143562, 1, -1, 0.49058,-99) , 
10, -0.193371, 1, 0, 0.496913,-99) , 
0, 0.504757, 0, 0, 0.498541,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0149236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.621672, 1, 1, 0.524497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498414,-99) , 
0, 0.497075, 0, 0, 0.503592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475502,-99) , 
0, 0.506094, 0, 0, 0.489954,-99) , 
0, 0.504711, 1, 0, 0.502614,-99) , 
0, 0.492376, 1, 0, 0.504793,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0197687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490468,-99) , 
8, -0.437911, 0, 0, 0.530362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475629,-99) , 
9, -0.30331, 0, 0, 0.503375,-99) , 
10, 1.30068, 1, 0, 0.510653,-99) , 
NN(
NN(
0, 
0, 
-1, 1.46415, 0, 1, 0.503091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448854,-99) , 
10, 0.755423, 1, 0, 0.500519,-99) , 
9, -1.41741, 0, 0, 0.503414,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0131474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49724,-99) , 
7, -951.286, 1, 0, 0.50159,-99) , 
8, 2.14289, 0, 0, 0.502841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477049,-99) , 
5, -0.146695, 1, 0, 0.492424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47248,-99) , 
8, -0.428223, 0, 0, 0.486023,-99) , 
0, 0.492376, 0, 0, 0.501262,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0086275);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12912, 0, 1, 0.503482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46738,-99) , 
4, 0.999048, 0, 0, 0.502452,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00992692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486229,-99) , 
5, 0.861268, 1, 0, 0.525085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
0, 0.490472, 1, 0, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0.717193, 1, -1, 0.481879,-99) , 
5, 0.634825, 1, 0, 0.499103,-99) , 
5, 0.806924, 0, 0, 0.500554,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0249252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497748,-99) , 
9, -3.49142, 1, 0, 0.512745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492695,-99) , 
8, 1.00006, 0, 0, 0.498267,-99) , 
10, -0.341189, 1, 0, 0.502657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491772,-99) , 
9, -3.63397, 0, 0, 0.500476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444675,-99) , 
8, -0.292477, 1, 0, 0.491297,-99) , 
10, -1.20329, 0, 0, 0.500024,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0111511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538757,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.496651,-99) , 
2, 0.214101, 0, 0, 0.498044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457231,-99) , 
4, 0.999048, 0, 0, 0.496919,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0213133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0694593, 0, 1, 0.52113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479936,-99) , 
10, 2.85506, 1, 0, 0.500968,-99) , 
0, 0.499995, 1, 0, 0.514261,-99) , 
NN(
NN(
0, 
0, 
-1, -2.40414, 0, 1, 0.504078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444957,-99) , 
5, 0.139304, 1, 0, 0.485663,-99) , 
10, 0.15635, 1, 0, 0.501331,-99) , 
9, -1.6711, 0, 0, 0.505534,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0187001);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48835,-99) , 
3, 4.71064, 1, 0, 0.515208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492036,-99) , 
8, 0.428832, 1, 0, 0.499634,-99) , 
2, 0.0714181, 0, 0, 0.502055,-99) , 
9, 1.83707, 0, 0, 0.503496,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_6_8_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_6_8_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_6_8_noP *ReadBDT_maker_LHC19c2b_6_8_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_6_8_noP(theInpVar);
  }
}
