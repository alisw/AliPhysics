#include "LHC19c2a_TMVAClassification_BDT_8_12.class.h"

double ReadBDT_LHC19c2a_8_12::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_8_12::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.706229953211802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999905, 0, 1, 0.873727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281535,-99) , 
11, -3.53263, 1, 0, 0.389983,-99) , 
6, 0.714369, 1, 0, 0.787294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263595,-99) , 
11, -1.23048, 1, 0, 0.475829,-99) , 
NN(
0, 
0, 
-1, -1.85196, 1, -1, 0.0837035,-99) , 
6, 0.523789, 1, 0, 0.298553,-99) , 
11, -2.63065, 1, 0, 0.501638,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.598506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618358, 1, 1, 0.772616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.184613,-99) , 
5, 0.999524, 0, 0, 0.717408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320813,-99) , 
9, -949.507, 0, 0, 0.441073,-99) , 
NN(
0, 
0, 
-1, -1.88565, 1, -1, 0.111414,-99) , 
6, 0.42854, 1, 0, 0.288064,-99) , 
11, -2.44277, 1, 0, 0.486539,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.434292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56824, 1, 1, 0.800503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303079,-99) , 
6, 0.836685, 1, 0, 0.441783,-99) , 
6, 0.619048, 1, 0, 0.704231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245301,-99) , 
3, 1.87202, 0, 0, 0.455372,-99) , 
NN(
0, 
0, 
-1, -1.87938, 1, -1, 0.119478,-99) , 
6, 0.619011, 1, 0, 0.333689,-99) , 
11, -2.66445, 1, 0, 0.47885,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.410131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30764, 1, 1, 0.74932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311418,-99) , 
3, 8.12849, 0, 0, 0.411156,-99) , 
6, 0.619046, 1, 0, 0.654261,-99) , 
NN(
0, 
0, 
-1, 0.714265, 1, -1, 0.319103,-99) , 
11, -2.56582, 1, 0, 0.460309,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.324972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75078, 1, 1, 0.796063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.186605,-99) , 
5, 0.999877, 0, 0, 0.490612,-99) , 
11, -3.28405, 1, 0, 0.560341,-99) , 
NN(
0, 
0, 
-1, -1.8053, 1, -1, 0.22829,-99) , 
6, 0.714243, 1, 0, 0.475122,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.344789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.28406, 1, 1, 0.616744,-99) , 
NN(
0, 
0, 
-1, 0.998165, 0, -1, 0.218246,-99) , 
5, 0.999524, 0, 0, 0.574924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351218,-99) , 
9, -951.286, 0, 0, 0.412538,-99) , 
NN(
0, 
0, 
-1, 0.715979, 1, -1, 0.131855,-99) , 
6, 0.333284, 1, 0, 0.292508,-99) , 
11, -1.97724, 1, 0, 0.460385,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.276874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.63509, 1, 1, 0.791092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443162,-99) , 
10, -0.724992, 0, 0, 0.547684,-99) , 
6, 0.523741, 1, 0, 0.710576,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.387813,-99) , 
11, -3.32811, 1, 0, 0.449214,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.26448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85577, 1, 1, 0.698597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350782,-99) , 
6, 0.333281, 1, 0, 0.461676,-99) , 
11, -3.2362, 1, 0, 0.514393,-99) , 
NN(
0, 
0, 
-1, -2.78118, 1, -1, 0.169964,-99) , 
5, 0.999524, 0, 0, 0.472535,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.296937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.635632, 0, 1, 0.737365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379573,-99) , 
10, -0.0610033, 0, 0, 0.497552,-99) , 
11, -3.71968, 1, 0, 0.542169,-99) , 
NN(
0, 
0, 
-1, 0.714243, 1, -1, 0.327477,-99) , 
11, -1.97724, 1, 0, 0.456535,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.17956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401401, 0, 1, 0.685261,-99) , 
NN(
0, 
0, 
-1, 2.14308, 1, -1, 0.465003,-99) , 
11, -3.45108, 1, 0, 0.501197,-99) , 
NN(
0, 
0, 
-1, -2.49611, 1, -1, 0.184383,-99) , 
5, 0.999524, 0, 0, 0.465127,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.233804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40272,-99) , 
5, 0.999955, 0, 0, 0.534815,-99) , 
NN(
0, 
0, 
-1, 0.523945, 1, -1, 0.224476,-99) , 
10, 2.14286, 1, 0, 0.512257,-99) , 
NN(
0, 
0, 
-1, -1.94318, 1, -1, 0.15003,-99) , 
5, 0.999048, 0, 0, 0.483652,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.178596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.338151, 0, 1, 0.680899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258675,-99) , 
10, -0.714182, 0, 0, 0.481239,-99) , 
11, -3.35858, 1, 0, 0.517307,-99) , 
NN(
0, 
0, 
-1, -1.43659, 1, -1, 0.264602,-99) , 
6, 0.809477, 1, 0, 0.476496,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.161196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477999,-99) , 
11, -3.28405, 1, 0, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0.523605, 1, -1, 0.228222,-99) , 
10, 2.14282, 1, 0, 0.487851,-99) , 
NN(
0, 
0, 
-1, -2.1773, 1, -1, 0.160915,-99) , 
5, 0.999048, 0, 0, 0.463448,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.180431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379407,-99) , 
3, 2.05573, 0, 0, 0.522747,-99) , 
NN(
0, 
0, 
-1, 2.51017, 1, -1, 0.230756,-99) , 
10, 2.14281, 1, 0, 0.50225,-99) , 
NN(
0, 
0, 
-1, -2.10436, 1, -1, 0.182243,-99) , 
5, 0.999048, 0, 0, 0.478086,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.164813);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47328,-99) , 
11, -2.9389, 1, 0, 0.510032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196612,-99) , 
11, -1.16442, 1, 0, 0.295058,-99) , 
10, 1.85709, 1, 0, 0.487674,-99) , 
NN(
0, 
0, 
-1, -1.96091, 1, -1, 0.176409,-99) , 
5, 0.999048, 0, 0, 0.4649,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.171474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419345,-99) , 
10, -0.455894, 0, 0, 0.508647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211791,-99) , 
11, -1.20282, 1, 0, 0.304291,-99) , 
10, 1.8571, 1, 0, 0.487385,-99) , 
NN(
0, 
0, 
-1, 8.00745, 0, -1, 0.146624,-99) , 
5, 0.998572, 0, 0, 0.469705,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.215903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00524329, 0, 1, 0.591859,-99) , 
NN(
0, 
0, 
-1, -1.28455, 0, -1, 0.44186,-99) , 
3, 2.9347, 0, 0, 0.529955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354219,-99) , 
3, 8.34284, 0, 0, 0.420591,-99) , 
NN(
0, 
0, 
-1, 1.12523, 1, -1, 0.163717,-99) , 
11, -1.32029, 1, 0, 0.377254,-99) , 
6, 0.42854, 1, 0, 0.469241,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.114346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490148,-99) , 
11, -4.08055, 1, 0, 0.503868,-99) , 
NN(
0, 
0, 
-1, -1.13293, 1, -1, 0.313519,-99) , 
10, 1.85712, 1, 0, 0.484599,-99) , 
NN(
0, 
0, 
-1, -2.18526, 1, -1, 0.19745,-99) , 
5, 0.999048, 0, 0, 0.464951,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.137769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262808,-99) , 
3, 1.52918, 0, 0, 0.523105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248013,-99) , 
10, 2.42838, 1, 0, 0.513476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307332,-99) , 
3, 9.22165, 0, 0, 0.367682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0665599,-99) , 
12, 0.628596, 1, 0, 0.306611,-99) , 
6, 0.809502, 1, 0, 0.482213,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.136285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.72913, 0, 1, 0.535674,-99) , 
NN(
0, 
0, 
-1, 0.559338, 1, -1, 0.425648,-99) , 
6, 0.238064, 1, 0, 0.487676,-99) , 
NN(
0, 
0, 
-1, -2.10436, 1, -1, 0.229207,-99) , 
5, 0.999048, 0, 0, 0.469702,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.107896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479907,-99) , 
11, -3.94337, 1, 0, 0.493862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216238,-99) , 
10, 2.42852, 1, 0, 0.483297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197893,-99) , 
5, 0.998572, 0, 0, 0.46886,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.140746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361165,-99) , 
10, -1.14963, 0, 0, 0.51295,-99) , 
NN(
0, 
0, 
-1, 0.142827, 1, -1, 0.344543,-99) , 
10, 1.85711, 1, 0, 0.496356,-99) , 
NN(
0, 
0, 
-1, -2.33584, 1, -1, 0.234957,-99) , 
5, 0.999048, 0, 0, 0.47921,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.175361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436809,-99) , 
6, 0.714561, 1, 0, 0.604991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439847,-99) , 
3, 2.04044, 0, 0, 0.575768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669132,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.426283,-99) , 
11, -4.08399, 1, 0, 0.439731,-99) , 
1, -0.0026657, 1, 0, 0.470715,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.136703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466953,-99) , 
5, 0.999995, 0, 0, 0.515619,-99) , 
NN(
0, 
0, 
-1, -2.23822, 1, -1, 0.393001,-99) , 
5, 0.999887, 0, 0, 0.49489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.134756,-99) , 
5, 0.997619, 0, 0, 0.484416,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.109805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326535,-99) , 
10, -1.61219, 0, 0, 0.515216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288822,-99) , 
11, -1.16442, 1, 0, 0.37538,-99) , 
10, 1.85703, 1, 0, 0.501312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226044,-99) , 
5, 0.998572, 0, 0, 0.488516,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0836477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28854, 0, 1, 0.663807,-99) , 
NN(
0, 
0, 
-1, -1.28541, 0, -1, 0.478624,-99) , 
11, -3.97577, 1, 0, 0.491177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232941,-99) , 
5, 0.998572, 0, 0, 0.479475,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423491,-99) , 
10, -0.673391, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25742,-99) , 
10, 2.42842, 1, 0, 0.493326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153904,-99) , 
5, 0.997619, 0, 0, 0.48366,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0827694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28097, 0, 1, 0.648477,-99) , 
NN(
0, 
0, 
-1, -1.28427, 0, -1, 0.480225,-99) , 
11, -3.97577, 1, 0, 0.491607,-99) , 
NN(
0, 
0, 
-1, -1.97767, 1, -1, 0.263258,-99) , 
5, 0.999048, 0, 0, 0.477562,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.105684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490137, 0, 1, 0.556485,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.469706,-99) , 
11, -2.79302, 1, 0, 0.502446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513266,-99) , 
NN(
0, 
0, 
-1, 0.523922, 1, -1, 0.26697,-99) , 
11, -1.22881, 1, 0, 0.344312,-99) , 
10, 1.85713, 1, 0, 0.486522,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.10295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493123,-99) , 
1, 0.0040614, 0, 0, 0.521461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355484,-99) , 
3, 7.44708, 0, 0, 0.428662,-99) , 
5, 0.999932, 0, 0, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273943,-99) , 
5, 0.998571, 0, 0, 0.492291,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.128178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424269,-99) , 
10, -0.999839, 0, 0, 0.531557,-99) , 
NN(
0, 
0, 
-1, -1.39431, 1, -1, 0.42272,-99) , 
5, 0.999932, 0, 0, 0.50918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269432,-99) , 
5, 0.998572, 0, 0, 0.498892,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0911805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393408,-99) , 
10, -1.28559, 0, 0, 0.512219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29519,-99) , 
5, 0.998095, 0, 0, 0.506144,-99) , 
NN(
0, 
0, 
-1, 0.619039, 1, -1, 0.307464,-99) , 
10, 2.14282, 1, 0, 0.493145,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0853287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365562,-99) , 
10, -0.918302, 0, 0, 0.489816,-99) , 
11, -4.33155, 1, 0, 0.49788,-99) , 
NN(
0, 
0, 
-1, -1.19502, 1, -1, 0.350388,-99) , 
10, 1.85703, 1, 0, 0.48303,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0817173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.46383, 1, 1, 0.622214,-99) , 
NN(
0, 
0, 
-1, -1.28071, 0, -1, 0.472824,-99) , 
11, -3.9727, 1, 0, 0.483181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203322,-99) , 
5, 0.997619, 0, 0, 0.475726,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0851654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22861, 0, 1, 0.628175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42569,-99) , 
10, -0.142776, 0, 0, 0.483692,-99) , 
11, -3.94337, 1, 0, 0.494024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201809,-99) , 
5, 0.997619, 0, 0, 0.486519,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.102498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.881204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491296,-99) , 
11, -4.26044, 1, 0, 0.51666,-99) , 
10, 0.448954, 0, 0, 0.544895,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.452699,-99) , 
11, -2.82161, 1, 0, 0.482822,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.135105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.749303, 1, 1, 0.62793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403627,-99) , 
6, 0.360512, 1, 0, 0.49295,-99) , 
3, 8.20499, 0, 0, 0.508942,-99) , 
NN(
0, 
0, 
-1, -2.27312, 1, -1, 0.319354,-99) , 
6, 0.904715, 1, 0, 0.497949,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.115789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.25862, 1, 1, 0.580171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440706,-99) , 
11, -2.71731, 1, 0, 0.469811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235368,-99) , 
10, 2.42851, 1, 0, 0.461043,-99) , 
1, -0.00283878, 1, 0, 0.48743,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.103969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.745301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485914,-99) , 
6, 0.65994, 1, 0, 0.55303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397542,-99) , 
6, 0.229132, 1, 0, 0.478853,-99) , 
3, 7.483, 0, 0, 0.495854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24587,-99) , 
5, 0.998095, 0, 0, 0.488534,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.155968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.30615, 1, 1, 0.683025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410436,-99) , 
11, -3.14872, 1, 0, 0.475091,-99) , 
10, 0.579002, 0, 0, 0.518634,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.442625,-99) , 
11, -2.07046, 1, 0, 0.486873,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0764699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498844,-99) , 
3, 7.91813, 0, 0, 0.515022,-99) , 
NN(
0, 
0, 
-1, -4.14959, 1, -1, 0.368916,-99) , 
10, -1.2856, 0, 0, 0.502718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444557,-99) , 
12, -0.965544, 1, 0, 0.49434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151444,-99) , 
11, -1.97767, 1, 0, 0.369677,-99) , 
5, 0.999524, 0, 0, 0.490933,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.137786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.60357, 1, 1, 0.652074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39278,-99) , 
6, 0.292458, 1, 0, 0.488733,-99) , 
3, 7.43249, 0, 0, 0.513199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400437,-99) , 
3, 8.97272, 0, 0, 0.464062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.17784,-99) , 
11, -1.5434, 1, 0, 0.40345,-99) , 
6, 0.809479, 1, 0, 0.497812,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0569533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54412, 1, 1, 0.512384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316199,-99) , 
12, -2.38373, 1, 0, 0.392724,-99) , 
10, -1.28557, 0, 0, 0.502712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229964,-99) , 
11, -2.41963, 1, 0, 0.358292,-99) , 
5, 0.999048, 0, 0, 0.494351,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0667917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48943,-99) , 
11, -3.74679, 1, 0, 0.498688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340283,-99) , 
10, -1.57123, 0, 0, 0.490598,-99) , 
NN(
0, 
0, 
-1, -0.456846, 1, -1, 0.333558,-99) , 
5, 0.999048, 0, 0, 0.481928,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0806667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.573115, 1, 1, 0.560536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415829,-99) , 
6, 0.229129, 1, 0, 0.480182,-99) , 
3, 7.47656, 0, 0, 0.498685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299119,-99) , 
5, 0.998095, 0, 0, 0.493081,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.113354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.575931, 1, 1, 0.598431,-99) , 
NN(
0, 
0, 
-1, 0.120114, 1, -1, 0.468897,-99) , 
3, 6.97717, 0, 0, 0.497092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404268,-99) , 
3, 9.22617, 0, 0, 0.447319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229734,-99) , 
11, -1.56086, 1, 0, 0.39909,-99) , 
6, 0.809499, 1, 0, 0.483319,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.114373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.260457, 0, 1, 0.653366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330478,-99) , 
5, 0.999524, 0, 0, 0.491563,-99) , 
11, -2.95566, 1, 0, 0.515368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69627,-99) , 
NN(
0, 
0, 
-1, -1.53033, 0, -1, 0.414136,-99) , 
11, -4.41313, 1, 0, 0.444542,-99) , 
10, -0.428453, 0, 0, 0.497229,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0526352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493658,-99) , 
11, -3.87938, 1, 0, 0.50304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342307,-99) , 
10, -1.70735, 0, 0, 0.496661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312926,-99) , 
10, 2.42842, 1, 0, 0.490404,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0741289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377283,-99) , 
10, 2.34691, 1, 0, 0.514108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369449,-99) , 
10, -1.57049, 0, 0, 0.506786,-99) , 
NN(
0, 
0, 
-1, 8.95474, 0, -1, 0.339571,-99) , 
6, 0.904735, 1, 0, 0.497525,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.07785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492136,-99) , 
11, -3.32112, 1, 0, 0.507902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385431,-99) , 
11, -4.33846, 1, 0, 0.424964,-99) , 
10, -0.93196, 0, 0, 0.495986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324363,-99) , 
10, 2.42852, 1, 0, 0.490028,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0982289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477211,-99) , 
10, 0.41287, 0, 0, 0.514348,-99) , 
NN(
0, 
0, 
-1, 0.618989, 1, -1, 0.448344,-99) , 
11, -1.53248, 1, 0, 0.496429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319255,-99) , 
10, -1.85695, 0, 0, 0.49145,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0600749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0502167, 0, 1, 0.575227,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.489026,-99) , 
11, -3.07162, 1, 0, 0.508349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374894,-99) , 
10, -1.57127, 0, 0, 0.502161,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.113371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.57591, 1, 1, 0.596668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414753,-99) , 
6, 0.12001, 1, 0, 0.493153,-99) , 
3, 6.99906, 0, 0, 0.514992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447528,-99) , 
3, 9.22165, 0, 0, 0.479573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20492,-99) , 
11, -1.56086, 1, 0, 0.425105,-99) , 
6, 0.809477, 1, 0, 0.502521,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0693458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485725,-99) , 
0, 0.498091, 1, 0, 0.512462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362302,-99) , 
10, 2.42868, 1, 0, 0.507025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34267,-99) , 
3, 1.55121, 0, 0, 0.502145,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0743772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.831139, 1, 1, 0.617775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439005,-99) , 
6, 0.541928, 1, 0, 0.498215,-99) , 
3, 8.65343, 0, 0, 0.507775,-99) , 
NN(
0, 
0, 
-1, -2.30603, 1, -1, 0.388406,-99) , 
6, 0.904735, 1, 0, 0.500952,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0710664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.29594, 0, 1, 0.55584,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.478804,-99) , 
11, -2.89781, 1, 0, 0.498799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328959,-99) , 
12, -2.33027, 1, 0, 0.406672,-99) , 
10, -1.2856, 0, 0, 0.491601,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0613899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486911,-99) , 
10, 0.428769, 0, 0, 0.508966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348576,-99) , 
3, 1.54598, 0, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369162,-99) , 
5, 0.998572, 0, 0, 0.49927,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0715847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.616848, 1, 1, 0.576307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44315,-99) , 
6, 0.360503, 1, 0, 0.494157,-99) , 
3, 7.70202, 0, 0, 0.508137,-99) , 
NN(
0, 
0, 
-1, 0.940989, 1, -1, 0.39138,-99) , 
6, 0.904705, 1, 0, 0.501846,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.112998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.69851, 1, 1, 0.703929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273198,-99) , 
12, 0.608603, 1, 0, 0.485157,-99) , 
6, 0.526372, 1, 0, 0.526766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382578,-99) , 
6, 0.0686157, 1, 0, 0.485268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301039,-99) , 
5, 0.999905, 0, 0, 0.46927,-99) , 
3, 6.48518, 0, 0, 0.49156,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.075648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.747845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489209,-99) , 
6, 0.363471, 1, 0, 0.51929,-99) , 
NN(
0, 
0, 
-1, 0.0572729, 1, -1, 0.470231,-99) , 
3, 6.01328, 0, 0, 0.492159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322189,-99) , 
10, -1.85668, 0, 0, 0.487276,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0573241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.231302, 0, 1, 0.602293,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.492166,-99) , 
11, -3.31048, 1, 0, 0.505025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444094,-99) , 
8, 6.95709, 0, 0, 0.50387,-99) , 
NN(
0, 
0, 
-1, -1.40985, 0, -1, 0.377146,-99) , 
12, -2.17745, 1, 0, 0.428927,-99) , 
10, -0.999905, 0, 0, 0.495512,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.105709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.239913, 1, 1, 0.673859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260951,-99) , 
12, 0.898852, 1, 0, 0.487034,-99) , 
6, 0.473788, 1, 0, 0.527278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.76357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477681,-99) , 
3, 5.05628, 0, 0, 0.493267,-99) , 
NN(
0, 
0, 
-1, 5.50483, 0, -1, 0.368755,-99) , 
6, 0.0539675, 1, 0, 0.475988,-99) , 
3, 5.99845, 0, 0, 0.49902,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0804245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
11, -2.72954, 1, 0, 0.524611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45204,-99) , 
11, -4.41629, 1, 0, 0.469939,-99) , 
10, -0.14282, 0, 0, 0.505389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338041,-99) , 
5, 0.998095, 0, 0, 0.501173,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0530182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.71409, 1, 1, 0.518678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404894,-99) , 
10, -1.57102, 0, 0, 0.513269,-99) , 
NN(
0, 
0, 
-1, -0.456846, 1, -1, 0.397122,-99) , 
5, 0.999048, 0, 0, 0.507253,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0893311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.455608, 1, 1, 0.60509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329407,-99) , 
5, 0.99981, 0, 0, 0.500435,-99) , 
3, 6.69566, 0, 0, 0.520576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457591,-99) , 
3, 8.80484, 0, 0, 0.487774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27472,-99) , 
11, -1.52912, 1, 0, 0.450418,-99) , 
6, 0.714243, 1, 0, 0.506016,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0618257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.577515, 1, 1, 0.569203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423149,-99) , 
6, 0.45113, 1, 0, 0.486685,-99) , 
3, 7.65894, 0, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, -0.576085, 1, -1, 0.388814,-99) , 
6, 0.904714, 1, 0, 0.495278,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0360446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498098, 1, 1, 0.589856,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.489846,-99) , 
11, -3.96618, 1, 0, 0.495242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351568,-99) , 
10, -1.8567, 0, 0, 0.491423,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.068935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11222, 0, 1, 0.595226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461629,-99) , 
10, 0.224556, 0, 0, 0.493492,-99) , 
11, -3.88241, 1, 0, 0.499527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318397,-99) , 
10, -1.85699, 0, 0, 0.494392,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0388974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3838,-99) , 
4, 8.17267, 1, 0, 0.503213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370437,-99) , 
10, 2.42855, 1, 0, 0.498546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349452,-99) , 
3, 1.54626, 0, 0, 0.49447,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0682659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.488555, 1, 1, 0.53618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39641,-99) , 
6, 0.104252, 1, 0, 0.480612,-99) , 
3, 6.70236, 0, 0, 0.49865,-99) , 
NN(
0, 
0, 
-1, 8.97836, 0, -1, 0.385464,-99) , 
6, 0.904716, 1, 0, 0.492581,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0843626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.417906, 0, 1, 0.560934,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.475816,-99) , 
11, -2.76345, 1, 0, 0.499337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526805,-99) , 
NN(
0, 
0, 
-1, -1.38079, 0, -1, 0.375466,-99) , 
11, -4.15257, 1, 0, 0.419311,-99) , 
10, -0.99987, 0, 0, 0.489324,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0860631);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.01256, 0, 1, 0.608085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492787,-99) , 
6, 0.237491, 1, 0, 0.51086,-99) , 
NN(
0, 
0, 
-1, -0.109425, 1, -1, 0.449296,-99) , 
3, 5.51745, 0, 0, 0.481156,-99) , 
1, -0.00631266, 1, 0, 0.491964,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0563388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490967,-99) , 
3, 5.99845, 0, 0, 0.511716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407038,-99) , 
10, 2.3061, 1, 0, 0.506919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357355,-99) , 
10, -1.85693, 0, 0, 0.503046,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0492925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499536,-99) , 
3, 6.51297, 0, 0, 0.517738,-99) , 
NN(
0, 
0, 
-1, -1.10676, 1, -1, 0.474427,-99) , 
6, 0.523798, 1, 0, 0.50335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340892,-99) , 
10, -1.85697, 0, 0, 0.498965,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0555089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492776,-99) , 
11, -2.14091, 1, 0, 0.515755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36588,-99) , 
10, 2.53736, 1, 0, 0.511789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371572,-99) , 
10, -1.85697, 0, 0, 0.50815,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0771245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.04009, 0, 1, 0.625492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476547,-99) , 
10, -0.141367, 0, 0, 0.507094,-99) , 
1, -0.0045365, 1, 0, 0.522965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571043,-99) , 
NN(
0, 
0, 
-1, -0.142667, 0, -1, 0.461981,-99) , 
6, -0.904726, 1, 0, 0.473682,-99) , 
0, 0.499995, 1, 0, 0.505598,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0683723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.97216, 1, 1, 0.532519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480109,-99) , 
11, -4.36544, 1, 0, 0.491969,-99) , 
10, 0.143419, 0, 0, 0.514366,-99) , 
NN(
0, 
0, 
-1, -0.566862, 1, -1, 0.410006,-99) , 
6, 0.904712, 1, 0, 0.508806,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0474195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398455,-99) , 
10, -1.28557, 0, 0, 0.504673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367036,-99) , 
5, 0.998571, 0, 0, 0.499934,-99) , 
11, -4.19754, 1, 0, 0.504949,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0547255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.38923, 1, 1, 0.587149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471488,-99) , 
6, 0.0475823, 1, 0, 0.491589,-99) , 
11, -3.93975, 1, 0, 0.496731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366816,-99) , 
10, -1.85672, 0, 0, 0.49317,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0578837);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.44491, 1, 1, 0.588474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495648,-99) , 
11, -3.06892, 1, 0, 0.509659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400494,-99) , 
12, -1.16499, 0, 0, 0.43922,-99) , 
10, -0.710774, 0, 0, 0.499455,-99) , 
11, -4.08599, 1, 0, 0.504001,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0548563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.59973, 0, 1, 0.603626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408799,-99) , 
5, 0.999524, 0, 0, 0.500189,-99) , 
11, -3.54412, 1, 0, 0.509216,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.419778,-99) , 
10, -1.2856, 0, 0, 0.502081,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0322719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85295, 1, 1, 0.509862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415364,-99) , 
10, -1.70709, 0, 0, 0.506298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37694,-99) , 
10, 2.42842, 1, 0, 0.502257,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0819961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.48104, 1, 1, 0.61874,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.485534,-99) , 
3, 6.48379, 0, 0, 0.50658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456619,-99) , 
10, 0.74811, 0, 0, 0.492052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291959,-99) , 
12, 0.680856, 1, 0, 0.469126,-99) , 
6, 0.619028, 1, 0, 0.496232,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.028652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.4567, 0, 1, 0.508587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391323,-99) , 
4, 8.62065, 1, 0, 0.505088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38527,-99) , 
10, -1.85693, 0, 0, 0.501896,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0448792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487645,-99) , 
3, 7.20216, 0, 0, 0.499087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407067,-99) , 
4, 8.34566, 1, 0, 0.496044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370041,-99) , 
3, 1.55235, 0, 0, 0.492466,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0622454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.24611, 0, 1, 0.58795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480308,-99) , 
10, 0.148486, 0, 0, 0.50674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400499,-99) , 
5, 0.999048, 0, 0, 0.501359,-99) , 
11, -3.88662, 1, 0, 0.507416,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.117577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.11284, 1, 1, 0.672478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465966,-99) , 
11, -3.14394, 1, 0, 0.491819,-99) , 
10, 1.12248, 0, 0, 0.509593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42187,-99) , 
8, 1.73454, 0, 0, 0.536824,-99) , 
NN(
0, 
0, 
-1, 0.0479138, 1, -1, 0.412244,-99) , 
10, 1.00062, 1, 0, 0.46602,-99) , 
11, -1.77805, 1, 0, 0.495189,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0701512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348609,-99) , 
5, 0.99981, 0, 0, 0.502301,-99) , 
3, 7.01094, 0, 0, 0.513613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411292,-99) , 
3, 7.39851, 0, 0, 0.483128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302576,-99) , 
12, 0.907778, 1, 0, 0.468623,-99) , 
6, 0.523773, 1, 0, 0.499019,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0585774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68284, 0, 1, 0.559736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443075,-99) , 
11, -1.74848, 1, 0, 0.491701,-99) , 
6, -0.904749, 1, 0, 0.498053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411006,-99) , 
10, -1.57099, 0, 0, 0.494012,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0299485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
6, -0.904713, 1, 0, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382081,-99) , 
3, 1.57167, 0, 0, 0.500171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391936,-99) , 
4, 7.85372, 1, 0, 0.496038,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0453003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451366,-99) , 
12, 0.56553, 1, 0, 0.495783,-99) , 
6, -0.904724, 1, 0, 0.502706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367352,-99) , 
3, 1.54671, 0, 0, 0.499097,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0874247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.515497, 1, 1, 0.590953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398375,-99) , 
6, 0.079031, 1, 0, 0.48512,-99) , 
3, 6.47736, 0, 0, 0.501728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451526,-99) , 
3, 9.39703, 0, 0, 0.471294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282712,-99) , 
11, -1.18365, 1, 0, 0.453687,-99) , 
6, 0.619008, 1, 0, 0.488718,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0732284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475364,-99) , 
1, 0.00682455, 0, 0, 0.487134,-99) , 
6, -0.904713, 1, 0, 0.492313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39402,-99) , 
3, 1.54671, 0, 0, 0.489492,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0580162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.607719,-99) , 
NN(
NN(
0, 
0, 
-1, 0.774743, 1, 1, 0.543209,-99) , 
NN(
0, 
0, 
-1, 0.523732, 1, -1, 0.478414,-99) , 
3, 8.46663, 0, 0, 0.486444,-99) , 
1, 0.00855322, 0, 0, 0.493289,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0385159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495077,-99) , 
3, 6.98504, 0, 0, 0.506921,-99) , 
NN(
0, 
0, 
-1, 0.941006, 1, -1, 0.434733,-99) , 
6, 0.904715, 1, 0, 0.502852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398442,-99) , 
3, 1.54671, 0, 0, 0.499877,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0470358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.33339, 0, 1, 0.520123,-99) , 
NN(
0, 
0, 
-1, -1.22829, 1, -1, 0.476699,-99) , 
6, 0.523812, 1, 0, 0.505583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393303,-99) , 
3, 1.54626, 0, 0, 0.502546,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0597565);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.02187, 0, 1, 0.600451,-99) , 
NN(
NN(
0, 
0, 
-1, 0.180924, 1, 1, 0.518959,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.471819,-99) , 
3, 5.51564, 0, 0, 0.496217,-99) , 
1, 0.00682455, 0, 0, 0.504923,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0465017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.335512, 0, 1, 0.573432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381337,-99) , 
5, 0.999048, 0, 0, 0.498787,-99) , 
11, -3.38972, 1, 0, 0.50588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385659,-99) , 
12, -2.42669, 1, 0, 0.42875,-99) , 
11, -2.79961, 0, 0, 0.451874,-99) , 
10, -0.999636, 0, 0, 0.499163,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0761935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.431141, 1, 1, 0.620493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367413,-99) , 
5, 0.999905, 0, 0, 0.49419,-99) , 
3, 6.82631, 0, 0, 0.507915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455743,-99) , 
5, 0.999524, 1, 0, 0.478936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329026,-99) , 
11, -1.18783, 1, 0, 0.464009,-99) , 
6, 0.619031, 1, 0, 0.495912,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0327514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46111,-99) , 
10, -0.237949, 0, 0, 0.490674,-99) , 
11, -4.00613, 1, 0, 0.494133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378084,-99) , 
10, -1.85693, 0, 0, 0.491109,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0922102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472236,-99) , 
11, -4.35728, 1, 0, 0.560516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474559,-99) , 
11, -2.955, 1, 0, 0.490411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428831,-99) , 
11, -2.34419, 0, 0, 0.453155,-99) , 
10, -0.142671, 0, 0, 0.478897,-99) , 
11, -3.99145, 1, 0, 0.483698,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0602346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.613293, 0, 1, 0.5904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471335,-99) , 
10, 0.551438, 0, 0, 0.490801,-99) , 
11, -3.57055, 1, 0, 0.498812,-99) , 
NN(
0, 
0, 
-1, -4.14959, 1, -1, 0.420082,-99) , 
10, -1.28531, 0, 0, 0.492556,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0587457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.392969, 0, 1, 0.549801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37151,-99) , 
5, 0.999524, 0, 0, 0.491021,-99) , 
11, -2.72883, 1, 0, 0.508036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546794,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.413652,-99) , 
12, -2.49319, 1, 0, 0.442196,-99) , 
10, -0.999889, 0, 0, 0.49985,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0623641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494807,-99) , 
11, -3.09046, 1, 0, 0.508868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428466,-99) , 
9, -951.286, 0, 0, 0.468604,-99) , 
10, -0.713999, 0, 0, 0.501321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540089,-99) , 
NN(
0, 
0, 
-1, 8.23969, 1, -1, 0.42001,-99) , 
1, 0.00260131, 0, 0, 0.450781,-99) , 
4, 4.28099, 1, 0, 0.490955,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0486458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480925,-99) , 
6, -0.142836, 1, 0, 0.496817,-99) , 
11, -4.21708, 1, 0, 0.500605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39696,-99) , 
3, 1.56943, 0, 0, 0.497425,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0527028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.833017, 1, 1, 0.552563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484762,-99) , 
3, 6.70442, 0, 0, 0.496406,-99) , 
NN(
0, 
0, 
-1, -0.285012, 1, -1, 0.433911,-99) , 
6, 0.809447, 1, 0, 0.490906,-99) , 
3, 8.95469, 0, 0, 0.495881,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.085922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.71222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387688,-99) , 
3, 5.93117, 0, 0, 0.499605,-99) , 
6, 0.117343, 1, 0, 0.518272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480171,-99) , 
3, 3.88155, 0, 0, 0.495007,-99) , 
NN(
0, 
0, 
-1, 4.50275, 0, -1, 0.370947,-99) , 
6, -0.270183, 1, 0, 0.475695,-99) , 
3, 5.01284, 0, 0, 0.498537,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0653786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383933,-99) , 
5, 0.999905, 0, 0, 0.502655,-99) , 
3, 6.31999, 0, 0, 0.514927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421836,-99) , 
3, 6.94145, 0, 0, 0.494532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346389,-99) , 
12, 0.841928, 1, 0, 0.482146,-99) , 
6, 0.428555, 1, 0, 0.50281,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0524951);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.150413, 0, 1, 0.564708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491597,-99) , 
6, 0.359158, 1, 0, 0.508775,-99) , 
NN(
0, 
0, 
-1, -0.0213163, 1, -1, 0.476064,-99) , 
3, 5.99398, 0, 0, 0.490914,-99) , 
1, 0.00855322, 0, 0, 0.495164,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0467237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48213,-99) , 
6, 0.523791, 1, 0, 0.506968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400283,-99) , 
10, -1.85697, 0, 0, 0.50415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390019,-99) , 
4, 8.42112, 1, 0, 0.500688,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0634982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.753854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49497,-99) , 
3, 4.31132, 0, 0, 0.523578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376174,-99) , 
3, 5.72536, 0, 0, 0.492013,-99) , 
6, -0.0476247, 1, 0, 0.506656,-99) , 
NN(
0, 
0, 
-1, -0.0704645, 0, -1, 0.461595,-99) , 
4, 4.36372, 1, 0, 0.497615,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0932059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.761676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464334,-99) , 
9, -951.286, 0, 0, 0.501719,-99) , 
3, 5.10497, 0, 0, 0.516833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480342,-99) , 
6, 0.319753, 1, 0, 0.495165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365201,-99) , 
3, 5.63063, 0, 0, 0.483038,-99) , 
6, 0.0476073, 1, 0, 0.499304,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0920451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.725309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406776,-99) , 
6, -0.351507, 1, 0, 0.503355,-99) , 
3, 4.84595, 0, 0, 0.521325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488297,-99) , 
6, 0.410443, 1, 0, 0.507268,-99) , 
NN(
0, 
0, 
-1, 5.45489, 0, -1, 0.396198,-99) , 
3, 6.01859, 0, 0, 0.489313,-99) , 
6, 0.0475947, 1, 0, 0.504971,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0458921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499022,-99) , 
6, 0.866679, 1, 0, 0.578095,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0045365, 1, 1, 0.519581,-99) , 
NN(
0, 
0, 
-1, 0.714216, 1, -1, 0.48366,-99) , 
0, 0.498091, 1, 0, 0.501499,-99) , 
3, 8.9703, 0, 0, 0.507743,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0686568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.38961, 0, 1, 0.524186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433439,-99) , 
10, 1.28805, 1, 0, 0.487457,-99) , 
11, -1.54877, 1, 0, 0.514425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464536,-99) , 
11, -2.16061, 1, 0, 0.49414,-99) , 
NN(
0, 
0, 
-1, -0.523821, 1, -1, 0.449315,-99) , 
10, -0.138132, 0, 0, 0.477756,-99) , 
0, 0.5019, 1, 0, 0.506511,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.107524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485083,-99) , 
6, 0.83304, 1, 0, 0.552051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470737,-99) , 
11, -2.02779, 1, 0, 0.511879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458414,-99) , 
1, 0.0040614, 0, 0, 0.482944,-99) , 
10, 0.714441, 0, 0, 0.493315,-99) , 
3, 8.95212, 0, 0, 0.497932,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0588815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0934599, 1, 1, 0.53015,-99) , 
NN(
NN(
0, 
0, 
-1, 3.52457, 0, 1, 0.514703,-99) , 
NN(
0, 
0, 
-1, 4.15233, 0, -1, 0.390861,-99) , 
6, -0.366035, 1, 0, 0.496739,-99) , 
3, 4.51454, 0, 0, 0.515951,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0704817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379792,-99) , 
12, 0.57657, 1, 0, 0.520519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43775,-99) , 
6, 0.154569, 1, 0, 0.493708,-99) , 
3, 6.99497, 0, 0, 0.50198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552186,-99) , 
NN(
0, 
0, 
-1, 0.431039, 0, -1, 0.449151,-99) , 
11, -3.51727, 1, 0, 0.463218,-99) , 
4, 4.2338, 1, 0, 0.493836,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0734509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497758,-99) , 
11, -4.41146, 1, 0, 0.566541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484833,-99) , 
11, -2.53189, 1, 0, 0.50701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455391,-99) , 
12, -0.254516, 0, 0, 0.472175,-99) , 
10, -0.14283, 0, 0, 0.496079,-99) , 
11, -4.05358, 1, 0, 0.499713,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0201352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.06696, 0, 1, 0.505294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420781,-99) , 
4, 8.63683, 1, 0, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399233,-99) , 
3, 1.55121, 0, 0, 0.499924,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0412866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.165048, 1, 1, 0.518357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338954,-99) , 
6, -0.403624, 1, 0, 0.484929,-99) , 
3, 4.0199, 0, 0, 0.505596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394536,-99) , 
10, -1.85546, 0, 0, 0.502612,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0254272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497798,-99) , 
6, -0.904714, 1, 0, 0.502107,-99) , 
11, -4.06591, 1, 0, 0.506125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395069,-99) , 
3, 1.55121, 0, 0, 0.502917,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0830715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72696, 1, 1, 0.597319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44973,-99) , 
6, 0.714276, 1, 0, 0.496896,-99) , 
11, -2.53043, 1, 0, 0.515463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47458,-99) , 
10, -0.306042, 0, 0, 0.5054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384402,-99) , 
6, -0.523875, 1, 0, 0.456474,-99) , 
12, -1.2254, 1, 0, 0.480087,-99) , 
10, 0.143038, 0, 0, 0.499659,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.069127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.744031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377757,-99) , 
3, 5.17884, 0, 0, 0.497209,-99) , 
6, -0.0934532, 1, 0, 0.510302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475241,-99) , 
3, 3.6983, 0, 0, 0.490328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356871,-99) , 
6, -0.306932, 1, 0, 0.475395,-99) , 
3, 4.52071, 0, 0, 0.4953,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0386234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486559,-99) , 
6, -0.714279, 1, 0, 0.494236,-99) , 
12, -2.18114, 1, 0, 0.497351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403716,-99) , 
10, -1.85693, 0, 0, 0.494923,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0879757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.07823, 0, 1, 0.623986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401545,-99) , 
3, 5.03468, 0, 0, 0.503714,-99) , 
6, -0.238302, 1, 0, 0.515692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45627,-99) , 
9, -949.507, 0, 0, 0.496397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334108,-99) , 
6, -0.535049, 1, 0, 0.479063,-99) , 
3, 3.52526, 0, 0, 0.503274,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0411962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00136178, 1, 1, 0.530644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450051,-99) , 
6, 0.269782, 1, 0, 0.486357,-99) , 
3, 7.70202, 0, 0, 0.493863,-99) , 
NN(
0, 
0, 
-1, 0.945506, 1, -1, 0.437848,-99) , 
6, 0.90469, 1, 0, 0.490796,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0339691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483054,-99) , 
6, -0.0476689, 1, 0, 0.494372,-99) , 
3, 9.46546, 0, 0, 0.497284,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.441102,-99) , 
0, 0.490473, 0, 0, 0.493893,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0766722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476387,-99) , 
9, -951.286, 1, 0, 0.49381,-99) , 
6, -0.314873, 1, 0, 0.505126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476551,-99) , 
3, 2.82777, 0, 0, 0.491241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377809,-99) , 
6, -0.591705, 1, 0, 0.472727,-99) , 
3, 3.53245, 0, 0, 0.494157,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0270614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477941,-99) , 
13, 7.71361, 1, 0, 0.557266,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.548434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464666,-99) , 
0, 0.502852, 1, 0, 0.495036,-99) , 
1, 0.00855322, 0, 0, 0.498259,-99) , 
11, -3.91043, 1, 0, 0.502253,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0868445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.906017, 0, 1, 0.546687,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.478245,-99) , 
11, -1.9915, 1, 0, 0.50763,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.539911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444254,-99) , 
1, -0.00388221, 1, 0, 0.46659,-99) , 
11, -2.066, 0, 0, 0.481747,-99) , 
10, 0.142889, 0, 0, 0.496146,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0268737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.696434, 0, 1, 0.557755,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.495426,-99) , 
11, -3.57409, 1, 0, 0.502996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403985,-99) , 
3, 1.54671, 0, 0, 0.500197,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0690032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48851,-99) , 
11, -2.14227, 1, 0, 0.519359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476369,-99) , 
11, -1.94988, 0, 0, 0.491007,-99) , 
10, 0.714452, 0, 0, 0.501536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408922,-99) , 
3, 1.57198, 0, 0, 0.498611,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0862144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.52392, 0, 1, 0.603925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418208,-99) , 
12, 0.628899, 1, 0, 0.510027,-99) , 
NN(
0, 
0, 
-1, -0.103242, 1, -1, 0.463921,-99) , 
3, 5.99586, 0, 0, 0.485682,-99) , 
1, -0.00439438, 1, 0, 0.502232,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0474197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.814628, 1, 1, 0.560123,-99) , 
NN(
NN(
0, 
0, 
-1, 5.11736, 0, 1, 0.521556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4355,-99) , 
3, 6.48745, 0, 0, 0.486427,-99) , 
6, 0.142799, 1, 0, 0.506093,-99) , 
3, 8.95866, 0, 0, 0.510382,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0882508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.19818, 1, 1, 0.613625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447257,-99) , 
6, 0.142847, 1, 0, 0.493377,-99) , 
11, -1.84057, 1, 0, 0.527464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467938,-99) , 
11, -0.252799, 1, 0, 0.541276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471696,-99) , 
11, -4.22999, 1, 0, 0.478296,-99) , 
11, -1.24715, 0, 0, 0.486367,-99) , 
10, 0.999966, 0, 0, 0.497742,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0524125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.14533, 0, 1, 0.521601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471402,-99) , 
3, 8.76866, 0, 0, 0.488696,-99) , 
6, 0.523791, 1, 0, 0.510419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418172,-99) , 
3, 1.54626, 0, 0, 0.507776,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0747885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30685, 0, 1, 0.622032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465108,-99) , 
10, 2.14293, 0, 0, 0.487065,-99) , 
11, -1.83455, 1, 0, 0.52513,-99) , 
NN(
NN(
0, 
0, 
-1, 0.238411, 0, 1, 0.517069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459662,-99) , 
12, 0.534041, 0, 0, 0.47247,-99) , 
11, -2.88318, 1, 0, 0.490641,-99) , 
10, 1.0001, 0, 0, 0.500236,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0513363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66136,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.45182,-99) , 
11, -1.09958, 1, 0, 0.547349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490701,-99) , 
11, -2.83054, 1, 0, 0.50313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418329,-99) , 
10, -1.84345, 0, 0, 0.500564,-99) , 
10, 1.85694, 0, 0, 0.505115,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0294807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498297,-99) , 
10, -0.849369, 0, 0, 0.547126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492133,-99) , 
10, 2.12926, 0, 0, 0.495217,-99) , 
11, -3.71962, 1, 0, 0.498996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442015,-99) , 
10, -1.57127, 0, 0, 0.49644,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0366554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49368,-99) , 
10, -0.544944, 0, 0, 0.540085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496803,-99) , 
10, 1.1497, 0, 0, 0.50625,-99) , 
11, -3.39163, 1, 0, 0.510874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396428,-99) , 
10, -1.85698, 0, 0, 0.507933,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0414299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.841929, 1, 1, 0.552469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464812,-99) , 
8, 8.81114, 1, 0, 0.509071,-99) , 
3, 8.95508, 0, 0, 0.512612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416171,-99) , 
10, -1.85697, 0, 0, 0.510133,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0436626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47029,-99) , 
10, -0.686741, 0, 0, 0.509462,-99) , 
11, -4.32852, 1, 0, 0.511641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442778,-99) , 
8, 1.73799, 0, 0, 0.509089,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0453477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.698766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495881,-99) , 
6, -0.130546, 1, 0, 0.50976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381472,-99) , 
6, -0.451705, 1, 0, 0.482966,-99) , 
3, 4.26407, 0, 0, 0.498288,-99) , 
3, 9.45654, 0, 0, 0.50182,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0636693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484735,-99) , 
11, -3.60439, 1, 0, 0.509393,-99) , 
10, 0.389435, 0, 0, 0.525018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490439,-99) , 
8, 7.6052, 0, 0, 0.503171,-99) , 
NN(
0, 
0, 
-1, -2.13307, 1, -1, 0.426614,-99) , 
6, 0.809499, 1, 0, 0.493984,-99) , 
11, -2.68351, 1, 0, 0.5051,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0439243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.72705, 1, 1, 0.571025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
6, -0.0476353, 1, 0, 0.504231,-99) , 
11, -3.38906, 1, 0, 0.51039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408073,-99) , 
11, -4.32285, 1, 0, 0.441989,-99) , 
11, -3.21032, 0, 0, 0.472525,-99) , 
10, -0.999874, 0, 0, 0.505732,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0730801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446003,-99) , 
3, 6.35491, 0, 0, 0.509844,-99) , 
6, 0.239425, 1, 0, 0.524408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488135,-99) , 
3, 4.23599, 0, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, 4.77158, 0, -1, 0.404262,-99) , 
6, -0.172767, 1, 0, 0.485098,-99) , 
3, 5.5072, 0, 0, 0.504071,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.056474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82885, 1, 1, 0.556336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372079,-99) , 
5, 0.99981, 0, 0, 0.501448,-99) , 
3, 6.40647, 0, 0, 0.513133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59353,-99) , 
NN(
0, 
0, 
-1, 7.6831, 0, -1, 0.461657,-99) , 
6, 0.585996, 1, 0, 0.481055,-99) , 
13, 8.22781, 1, 0, 0.505745,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.029485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.64872, 0, 1, 0.51034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42094,-99) , 
3, 7.38278, 0, 0, 0.482228,-99) , 
6, 0.619008, 1, 0, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0.428612, 0, -1, 0.449287,-99) , 
2, -0.211964, 0, 0, 0.500001,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0716312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.84775, 0, 1, 0.602993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444547,-99) , 
3, 4.23321, 0, 0, 0.502221,-99) , 
6, -0.607368, 1, 0, 0.510098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472683,-99) , 
8, 2.22492, 1, 0, 0.530387,-99) , 
NN(
0, 
0, 
-1, 1.76354, 0, -1, 0.424871,-99) , 
9, -949.507, 0, 0, 0.465283,-99) , 
3, 2.53972, 0, 0, 0.500293,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0607457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.57784, 1, 1, 0.547309,-99) , 
NN(
0, 
0, 
-1, 0.158133, 1, -1, 0.485714,-99) , 
3, 6.54475, 0, 0, 0.497814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451238,-99) , 
6, 0.754606, 1, 0, 0.484793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389708,-99) , 
3, 7.68369, 0, 0, 0.465325,-99) , 
8, 8.25998, 1, 0, 0.490402,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0625003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.90419, 0, 1, 0.62841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398865,-99) , 
6, -0.0567085, 1, 0, 0.499842,-99) , 
3, 5.39505, 0, 0, 0.511886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49281,-99) , 
6, 0.601036, 1, 0, 0.510174,-99) , 
NN(
0, 
0, 
-1, 7.44736, 1, -1, 0.451582,-99) , 
3, 7.38805, 0, 0, 0.484545,-99) , 
6, 0.238097, 1, 0, 0.499635,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0272274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47014,-99) , 
10, -1.19035, 0, 0, 0.504593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434973,-99) , 
10, 2.42844, 1, 0, 0.502406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429735,-99) , 
4, 8.43467, 1, 0, 0.500162,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.03125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.41034, 0, 1, 0.514637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387487,-99) , 
3, 6.13274, 0, 0, 0.489775,-99) , 
6, 0.238069, 1, 0, 0.503227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414256,-99) , 
10, -1.85699, 0, 0, 0.500834,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0300108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578477,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.486742,-99) , 
3, 9.95556, 0, 0, 0.489194,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0268184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492763,-99) , 
10, 1.00003, 0, 0, 0.499658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444341,-99) , 
6, 0.904706, 1, 0, 0.497409,-99) , 
3, 9.92028, 0, 0, 0.499142,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0762414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.148469, 1, 1, 0.620456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482371,-99) , 
6, -0.0893582, 1, 0, 0.490927,-99) , 
1, 0.00338089, 0, 0, 0.512525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485961,-99) , 
3, 3.18196, 0, 0, 0.497461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392181,-99) , 
6, -0.488341, 1, 0, 0.4807,-99) , 
3, 4.0276, 0, 0, 0.500213,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0323294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495983,-99) , 
5, 0.999524, 1, 0, 0.516043,-99) , 
6, 0.66014, 1, 0, 0.535891,-99) , 
NN(
NN(
0, 
0, 
-1, 7.22354, 0, 1, 0.505264,-99) , 
NN(
0, 
0, 
-1, 8.6356, 1, -1, 0.448119,-99) , 
8, 7.87379, 1, 0, 0.4983,-99) , 
3, 7.96152, 0, 0, 0.504855,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0679218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0488363, 1, 1, 0.567005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473559,-99) , 
3, 7.47905, 0, 0, 0.484626,-99) , 
1, 0.00276032, 0, 0, 0.504691,-99) , 
NN(
0, 
0, 
-1, 0.0473755, 1, -1, 0.463018,-99) , 
0, 0.504757, 1, 0, 0.501395,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.027443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809488, 1, 1, 0.511105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446912,-99) , 
3, 1.57239, 0, 0, 0.509052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442495,-99) , 
4, 8.62065, 1, 0, 0.507174,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0566816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480209,-99) , 
9, -951.286, 0, 0, 0.505815,-99) , 
3, 3.33804, 0, 0, 0.521431,-99) , 
NN(
NN(
0, 
0, 
-1, -0.22439, 1, 1, 0.510973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341545,-99) , 
3, 3.96094, 0, 0, 0.500021,-99) , 
6, -0.428577, 1, 0, 0.507499,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0647553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45337,-99) , 
9, -949.507, 0, 0, 0.495865,-99) , 
3, 2.24011, 0, 0, 0.529364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593301,-99) , 
NN(
0, 
0, 
-1, 3.29548, 0, -1, 0.483319,-99) , 
1, -0.00775719, 1, 0, 0.488244,-99) , 
6, -0.714286, 1, 0, 0.497834,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0454819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.421828, 1, 1, 0.552652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430698,-99) , 
3, 1.58244, 0, 0, 0.529309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493518,-99) , 
6, -0.464845, 1, 0, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416209,-99) , 
3, 2.52534, 0, 0, 0.494833,-99) , 
6, -0.809512, 1, 0, 0.500849,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0368039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.34137, 0, 1, 0.519301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417837,-99) , 
12, 0.645998, 1, 0, 0.491039,-99) , 
6, 0.523765, 1, 0, 0.509876,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.450881,-99) , 
0, 0.490472, 0, 0, 0.506094,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0515819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450354,-99) , 
3, 1.65839, 0, 0, 0.500568,-99) , 
9, -951.286, 0, 0, 0.531242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494007,-99) , 
6, -0.463932, 1, 0, 0.50209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402119,-99) , 
6, -0.744569, 1, 0, 0.437302,-99) , 
3, 2.99952, 0, 0, 0.49341,-99) , 
6, -0.809521, 1, 0, 0.500111,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0374752);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.866663, 1, 1, 0.557121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495109,-99) , 
3, 6.62103, 0, 0, 0.50439,-99) , 
NN(
0, 
0, 
-1, 0.772947, 1, -1, 0.45056,-99) , 
8, 8.83719, 1, 0, 0.49946,-99) , 
3, 8.9663, 0, 0, 0.504204,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0622741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.234722, 1, 1, 0.646178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494055,-99) , 
6, -0.714244, 1, 0, 0.504142,-99) , 
10, 0.742616, 0, 0, 0.521727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468627,-99) , 
5, 0.999977, 0, 0, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340208,-99) , 
5, 0.999524, 0, 0, 0.493431,-99) , 
11, -2.17497, 1, 0, 0.508706,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0472826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491949,-99) , 
1, -0.00298015, 1, 0, 0.510918,-99) , 
10, 0.401239, 0, 0, 0.525194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494963,-99) , 
10, -0.422437, 1, 0, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38429,-99) , 
5, 0.999048, 0, 0, 0.497365,-99) , 
11, -2.66445, 1, 0, 0.50751,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.056073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00183606, 1, 1, 0.533456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382035,-99) , 
6, -0.181322, 1, 0, 0.50068,-99) , 
3, 4.83859, 0, 0, 0.517639,-99) , 
NN(
0, 
0, 
-1, 0.945547, 1, -1, 0.455806,-99) , 
6, 0.904714, 1, 0, 0.514323,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0699075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143552, 0, 1, 0.588171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488593,-99) , 
6, -0.49825, 1, 0, 0.493688,-99) , 
1, -0.00226719, 1, 0, 0.515613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4864,-99) , 
3, 2.27507, 0, 0, 0.505388,-99) , 
NN(
0, 
0, 
-1, -0.150943, 0, -1, 0.417435,-99) , 
6, -0.743923, 1, 0, 0.482436,-99) , 
3, 3.02884, 0, 0, 0.506023,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0692478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.65605, 0, 1, 0.570561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412179,-99) , 
3, 5.37209, 0, 0, 0.507635,-99) , 
6, -0.0575968, 1, 0, 0.522062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488298,-99) , 
3, 2.39519, 0, 0, 0.50635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421104,-99) , 
6, -0.711916, 1, 0, 0.488641,-99) , 
3, 3.05353, 0, 0, 0.512213,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0487281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419982,-99) , 
3, 5.17439, 0, 0, 0.503761,-99) , 
6, -0.0934595, 1, 0, 0.513172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494397,-99) , 
10, -0.713653, 1, 0, 0.502905,-99) , 
NN(
0, 
0, 
-1, -0.524495, 1, -1, 0.402922,-99) , 
12, -1.09417, 0, 0, 0.486316,-99) , 
3, 4.51454, 0, 0, 0.501601,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0763621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.328381, 1, 1, 0.59487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477983,-99) , 
6, 0.333222, 1, 0, 0.50713,-99) , 
10, 0.516619, 0, 0, 0.526073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462811,-99) , 
5, 0.999977, 0, 0, 0.504999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361975,-99) , 
5, 0.999524, 0, 0, 0.495291,-99) , 
11, -2.10327, 1, 0, 0.512422,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0420018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85468, 0, 1, 0.589616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446321,-99) , 
12, -0.417056, 1, 0, 0.501227,-99) , 
6, 0.779901, 1, 0, 0.533778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480781,-99) , 
3, 1.56673, 0, 0, 0.532984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432658,-99) , 
3, 2.2752, 0, 0, 0.493546,-99) , 
6, -0.904781, 1, 0, 0.498357,-99) , 
3, 7.97122, 0, 0, 0.504412,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0606919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11859, 1, 1, 0.609407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466588,-99) , 
11, -4.44492, 1, 0, 0.479577,-99) , 
10, -0.202418, 0, 0, 0.518632,-99) , 
NN(
NN(
0, 
0, 
-1, -1.91095, 1, 1, 0.549512,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487351,-99) , 
10, -0.427211, 1, 0, 0.494253,-99) , 
11, -2.82977, 1, 0, 0.501907,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0415288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 10.7079, 1, 1, 0.558192,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467234,-99) , 
3, 4.22937, 0, 0, 0.496216,-99) , 
6, -0.809524, 1, 0, 0.502663,-99) , 
3, 9.42873, 0, 0, 0.505593,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0428403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448448,-99) , 
0, 0.499046, 1, 0, 0.499754,-99) , 
6, 0.743279, 1, 0, 0.533198,-99) , 
NN(
NN(
0, 
0, 
-1, 3.63805, 0, 1, 0.514956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372953,-99) , 
3, 4.5593, 0, 0, 0.486011,-99) , 
6, -0.333359, 1, 0, 0.498357,-99) , 
3, 8.47164, 0, 0, 0.502531,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0443874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.33643, 1, 1, 0.565674,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.489563,-99) , 
11, -3.06775, 1, 0, 0.500362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51696,-99) , 
NN(
0, 
0, 
-1, -1.81462, 1, -1, 0.453848,-99) , 
11, -2.56583, 0, 0, 0.466844,-99) , 
10, -0.713999, 0, 0, 0.494377,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0390487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.597447, 0, 1, 0.584541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491343,-99) , 
3, 8.43633, 0, 0, 0.496265,-99) , 
11, -3.51653, 1, 0, 0.503643,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.456512,-99) , 
10, -1.28554, 0, 0, 0.500033,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0550255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.185709, 1, 1, 0.605175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433345,-99) , 
6, 0.0157271, 1, 0, 0.505227,-99) , 
3, 5.68751, 0, 0, 0.515429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488049,-99) , 
10, 1.72003, 0, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398642,-99) , 
12, 0.869376, 1, 0, 0.491783,-99) , 
6, 0.333301, 1, 0, 0.505494,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0268596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467925,-99) , 
10, -0.931714, 0, 0, 0.504218,-99) , 
12, -2.19001, 1, 0, 0.506496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418536,-99) , 
10, -1.85697, 0, 0, 0.504193,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0439003);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.562147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488532,-99) , 
11, -3.28108, 1, 0, 0.495773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394865,-99) , 
11, -2.47819, 0, 0, 0.452253,-99) , 
8, 9.19099, 1, 0, 0.491926,-99) , 
3, 9.44855, 0, 0, 0.495613,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0511546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.16526, 1, 1, 0.518648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390358,-99) , 
6, -0.488337, 1, 0, 0.495726,-99) , 
3, 4.03012, 0, 0, 0.509813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441543,-99) , 
10, -1.57123, 0, 0, 0.506497,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0312229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49433,-99) , 
3, 8.06491, 0, 0, 0.499395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371247,-99) , 
11, -2.65043, 0, 0, 0.444287,-99) , 
8, 9.71981, 1, 0, 0.495642,-99) , 
3, 9.95556, 0, 0, 0.497736,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.031469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491617,-99) , 
10, -0.42851, 0, 0, 0.508775,-99) , 
NN(
0, 
0, 
-1, 3.50935, 0, -1, 0.476716,-99) , 
0, 0.491924, 0, 0, 0.505286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452916,-99) , 
0, 0.505709, 1, 0, 0.502736,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0710208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.421152, 1, 1, 0.614093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480325,-99) , 
6, -0.619011, 1, 0, 0.49145,-99) , 
10, 0.564886, 0, 0, 0.512009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493049,-99) , 
8, 2.27621, 0, 0, 0.521863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446925,-99) , 
6, -0.0476007, 1, 0, 0.473699,-99) , 
10, 0.431543, 1, 0, 0.487388,-99) , 
11, -2.19214, 1, 0, 0.500366,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0588907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.88495, 1, 1, 0.594596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448265,-99) , 
6, 0.0201604, 1, 0, 0.50496,-99) , 
3, 5.94916, 0, 0, 0.514982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488322,-99) , 
6, 0.755275, 1, 0, 0.518881,-99) , 
NN(
0, 
0, 
-1, 8.13819, 1, -1, 0.469604,-99) , 
3, 8.34512, 0, 0, 0.486759,-99) , 
6, 0.428556, 1, 0, 0.504342,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0357466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54887, 1, 1, 0.579986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498365,-99) , 
11, -4.38065, 1, 0, 0.502124,-99) , 
10, 1.56965, 0, 0, 0.511101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487505,-99) , 
2, 0.00541821, 1, 0, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36312,-99) , 
10, 1.86058, 1, 0, 0.467684,-99) , 
11, -0.776762, 1, 0, 0.505667,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0482921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496867,-99) , 
11, -4.27355, 1, 0, 0.517057,-99) , 
10, -0.331656, 0, 0, 0.544039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434623,-99) , 
10, 0.0109339, 0, 0, 0.54634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49359,-99) , 
12, -0.80259, 1, 0, 0.498573,-99) , 
11, -3.03349, 1, 0, 0.502082,-99) , 
12, -1.2497, 1, 0, 0.510847,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0525751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387055,-99) , 
3, 4.27457, 0, 0, 0.505049,-99) , 
6, -0.322911, 1, 0, 0.513883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493274,-99) , 
3, 2.58047, 0, 0, 0.508715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395065,-99) , 
6, -0.544036, 1, 0, 0.49527,-99) , 
3, 3.52162, 0, 0, 0.507459,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0606629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439547,-99) , 
3, 5.04415, 0, 0, 0.504971,-99) , 
6, -0.320852, 1, 0, 0.513298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483894,-99) , 
1, 0.0040614, 0, 0, 0.499766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414522,-99) , 
6, -0.573794, 1, 0, 0.487468,-99) , 
3, 3.53814, 0, 0, 0.504498,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0266746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486804,-99) , 
11, -4.34112, 1, 0, 0.54195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49597,-99) , 
10, 1.28625, 0, 0, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436628,-99) , 
5, 0.998571, 0, 0, 0.500466,-99) , 
11, -3.9727, 1, 0, 0.502881,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0510449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492334,-99) , 
1, 0.00579008, 0, 0, 0.505357,-99) , 
3, 4.85476, 0, 0, 0.515576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570708,-99) , 
NN(
0, 
0, 
-1, 6.31647, 0, -1, 0.47966,-99) , 
1, -0.0048345, 1, 0, 0.485696,-99) , 
6, 0.0476131, 1, 0, 0.500273,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0525644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39859, 1, 1, 0.556844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46413,-99) , 
11, -4.34105, 1, 0, 0.483548,-99) , 
10, -0.530398, 0, 0, 0.521732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497698,-99) , 
10, -0.428313, 1, 0, 0.504415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398628,-99) , 
5, 0.999048, 0, 0, 0.499629,-99) , 
11, -2.68351, 1, 0, 0.50753,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0734685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459206,-99) , 
6, -0.174759, 1, 0, 0.516561,-99) , 
3, 5.41259, 0, 0, 0.52765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431947,-99) , 
3, 6.14177, 0, 0, 0.513951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373698,-99) , 
12, 0.923421, 1, 0, 0.504006,-99) , 
6, 0.23808, 1, 0, 0.517124,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0606735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453835,-99) , 
6, -0.301656, 1, 0, 0.512926,-99) , 
3, 4.8482, 0, 0, 0.524152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489391,-99) , 
10, -0.558844, 0, 0, 0.531529,-99) , 
NN(
0, 
0, 
-1, 0.0115569, 0, -1, 0.482199,-99) , 
12, -1.34662, 1, 0, 0.49449,-99) , 
6, 0.0475938, 1, 0, 0.508942,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.060144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425771,-99) , 
12, -1.7821, 1, 0, 0.493178,-99) , 
10, -0.585773, 0, 0, 0.530167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498936,-99) , 
3, 3.88546, 0, 0, 0.513437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469516,-99) , 
9, -951.286, 1, 0, 0.487104,-99) , 
6, -0.14287, 1, 0, 0.49967,-99) , 
12, -1.35811, 1, 0, 0.505257,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0619188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.03077, 0, 1, 0.58515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492833,-99) , 
11, -2.97963, 1, 0, 0.503483,-99) , 
1, -0.00439438, 1, 0, 0.514932,-99) , 
NN(
NN(
0, 
0, 
-1, -1.70529, 1, 1, 0.542736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452076,-99) , 
11, -4.35653, 1, 0, 0.466345,-99) , 
11, -2.7658, 0, 0, 0.488305,-99) , 
10, -0.428446, 0, 0, 0.508001,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0602365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.52978, 1, 1, 0.529313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423258,-99) , 
6, -0.843274, 1, 0, 0.497293,-99) , 
3, 2.54775, 0, 0, 0.522395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48541,-99) , 
6, 0.0475894, 1, 0, 0.506325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400783,-99) , 
11, -4.01521, 0, 0, 0.499213,-99) , 
0, 0.499043, 1, 0, 0.512489,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0414071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499417,-99) , 
3, 7.80844, 0, 0, 0.512119,-99) , 
6, -0.0215871, 1, 0, 0.521213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497485,-99) , 
3, 3.52674, 0, 0, 0.505112,-99) , 
NN(
0, 
0, 
-1, 4.11972, 0, -1, 0.425335,-99) , 
13, 4.16065, 1, 0, 0.493614,-99) , 
3, 4.51536, 0, 0, 0.509395,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0516953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.30601, 0, 1, 0.583298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463052,-99) , 
3, 6.31888, 0, 0, 0.514126,-99) , 
6, 0.197318, 1, 0, 0.526501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499482,-99) , 
3, 3.84988, 0, 0, 0.505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380022,-99) , 
8, 4.61131, 1, 0, 0.497243,-99) , 
3, 4.50944, 0, 0, 0.51394,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0747513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.37457, 1, 1, 0.567817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455019,-99) , 
6, -0.13303, 1, 0, 0.510281,-99) , 
3, 5.76059, 0, 0, 0.521686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443423,-99) , 
11, -2.3349, 1, 0, 0.543098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438987,-99) , 
10, 0.144149, 0, 0, 0.480199,-99) , 
5, 0.999524, 1, 0, 0.492732,-99) , 
6, 0.523789, 1, 0, 0.512168,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0561837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.98105, 0, 1, 0.583803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410128,-99) , 
3, 4.65869, 0, 0, 0.503185,-99) , 
6, -0.240231, 1, 0, 0.511214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486267,-99) , 
9, -951.286, 0, 0, 0.516567,-99) , 
NN(
0, 
0, 
-1, 2.63948, 0, -1, 0.452069,-99) , 
6, -0.771061, 1, 0, 0.489843,-99) , 
3, 3.52526, 0, 0, 0.503827,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0679299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446583,-99) , 
6, -0.29255, 1, 0, 0.504192,-99) , 
3, 5.11092, 0, 0, 0.516716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473137,-99) , 
10, 0.27443, 0, 0, 0.501566,-99) , 
NN(
0, 
0, 
-1, 1.73091, 0, -1, 0.452333,-99) , 
12, 0.293193, 1, 0, 0.491818,-99) , 
6, 0.142843, 1, 0, 0.504612,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0174769);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.92267, 1, 1, 0.507229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433342,-99) , 
10, -1.85676, 0, 0, 0.505354,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0619328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.106874, 1, 1, 0.529093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401723,-99) , 
6, -0.542101, 1, 0, 0.492753,-99) , 
3, 3.65201, 0, 0, 0.512424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455902,-99) , 
13, 8.994, 1, 0, 0.504646,-99) , 
NN(
0, 
0, 
-1, 0.863934, 1, -1, 0.443445,-99) , 
12, -0.689156, 1, 0, 0.47225,-99) , 
6, 0.714264, 1, 0, 0.504006,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0697516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.48954, 1, 1, 0.547685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467601,-99) , 
9, -951.286, 1, 0, 0.484689,-99) , 
1, -0.00123792, 1, 0, 0.505226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4717,-99) , 
9, -951.287, 0, 0, 0.492378,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.417551,-99) , 
6, -0.624027, 1, 0, 0.477846,-99) , 
3, 3.52526, 0, 0, 0.495696,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0366455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.25409, 1, 1, 0.526428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490714,-99) , 
8, 2.85839, 1, 0, 0.495773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435224,-99) , 
3, 2.26008, 0, 0, 0.490684,-99) , 
6, -0.904758, 1, 0, 0.494332,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0307319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496434,-99) , 
6, 0.868298, 1, 0, 0.532815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497657,-99) , 
3, 6.88449, 0, 0, 0.504539,-99) , 
NN(
0, 
0, 
-1, 8.04034, 0, -1, 0.461185,-99) , 
8, 8.25424, 1, 0, 0.497467,-99) , 
3, 8.94875, 0, 0, 0.500357,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0902946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4691,-99) , 
5, 0.999986, 0, 0, 0.512344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378133,-99) , 
5, 0.999714, 0, 0, 0.506923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451063,-99) , 
11, -1.80884, 1, 0, 0.514973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436361,-99) , 
5, 0.999524, 1, 0, 0.460731,-99) , 
10, 1.00743, 0, 0, 0.478666,-99) , 
6, 0.523791, 1, 0, 0.497542,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.057389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.76043, 0, 1, 0.540754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448587,-99) , 
3, 5.78709, 0, 0, 0.506216,-99) , 
6, 0.1045, 1, 0, 0.516415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474537,-99) , 
3, 2.11157, 0, 0, 0.495848,-99) , 
NN(
0, 
0, 
-1, 2.68611, 0, -1, 0.429016,-99) , 
6, -0.749802, 1, 0, 0.477143,-99) , 
3, 3.05016, 0, 0, 0.504799,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0636868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469917,-99) , 
11, -1.68967, 1, 0, 0.518452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481315,-99) , 
11, -1.29935, 0, 0, 0.488527,-99) , 
10, 1.28572, 0, 0, 0.494519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356545,-99) , 
6, 0.940971, 1, 0, 0.445593,-99) , 
6, 0.90469, 1, 0, 0.491881,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.055139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.162211, 1, 1, 0.6071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441027,-99) , 
13, 9.03016, 1, 0, 0.501989,-99) , 
10, 0.819807, 0, 0, 0.513324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490769,-99) , 
10, 2.14371, 0, 0, 0.498224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365257,-99) , 
5, 0.999524, 0, 0, 0.489613,-99) , 
11, -2.11407, 1, 0, 0.502627,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0397457);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.868267, 1, 1, 0.544365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478533,-99) , 
13, 7.07412, 1, 0, 0.505539,-99) , 
NN(
0, 
0, 
-1, 8.29193, 0, -1, 0.46334,-99) , 
13, 8.94921, 1, 0, 0.501589,-99) , 
3, 8.95464, 0, 0, 0.504987,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0492599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49694,-99) , 
12, -1.41068, 1, 0, 0.508852,-99) , 
6, 0.0406688, 1, 0, 0.515719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493188,-99) , 
0, 0.498091, 0, 0, 0.516488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44851,-99) , 
11, -3.03824, 1, 0, 0.469499,-99) , 
12, 0.058667, 0, 0, 0.494015,-99) , 
3, 5.00918, 0, 0, 0.505493,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0430718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5461, 0, 1, 0.543403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434045,-99) , 
11, -1.22829, 1, 0, 0.531679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493389,-99) , 
3, 6.55877, 0, 0, 0.499489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442211,-99) , 
13, 8.13653, 1, 0, 0.496056,-99) , 
3, 7.47656, 0, 0, 0.504637,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0340259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487232,-99) , 
13, 7.63937, 1, 0, 0.557281,-99) , 
NN(
0, 
0, 
-1, -950.08, 1, 1, 0.50977,-99) , 
11, -3.53398, 1, 0, 0.51369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447152,-99) , 
12, -1.96127, 0, 0, 0.480196,-99) , 
10, -1.28564, 0, 0, 0.511161,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0577575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.357187, 1, 1, 0.617972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410806,-99) , 
6, 0.714261, 1, 0, 0.483206,-99) , 
11, -1.61109, 1, 0, 0.524841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450418,-99) , 
10, -1.43198, 0, 0, 0.532891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486376,-99) , 
11, -1.4021, 0, 0, 0.493756,-99) , 
11, -3.64916, 1, 0, 0.498756,-99) , 
10, 1.28572, 0, 0, 0.504074,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0405598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.04648, 0, 1, 0.518111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421889,-99) , 
3, 6.68365, 0, 0, 0.494912,-99) , 
8, 6.89598, 1, 0, 0.507399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422403,-99) , 
6, -0.934848, 1, 0, 0.471566,-99) , 
3, 2.04581, 0, 0, 0.502602,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0308428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.42811, 1, 1, 0.566616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433214,-99) , 
12, -2.45304, 1, 0, 0.485651,-99) , 
10, -1.09845, 0, 0, 0.530701,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.493071,-99) , 
11, -3.41502, 1, 0, 0.498491,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0400086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486685,-99) , 
11, -2.32371, 1, 0, 0.50319,-99) , 
10, 2.14282, 0, 0, 0.506825,-99) , 
NN(
0, 
0, 
-1, 1.74069, 1, -1, 0.46025,-99) , 
12, 1.66945, 1, 0, 0.503434,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0328779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481485,-99) , 
10, -0.237949, 0, 0, 0.501707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438383,-99) , 
5, 0.998572, 0, 0, 0.499663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404433,-99) , 
10, -1.85693, 0, 0, 0.497225,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.01415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14273, 0, 1, 0.503553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454658,-99) , 
2, -0.214612, 0, 0, 0.501304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451023,-99) , 
0, 0.48952, 0, 0, 0.499456,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0540719);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.00488, 0, 1, 0.562124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485332,-99) , 
12, -0.71698, 1, 0, 0.508366,-99) , 
NN(
0, 
0, 
-1, 7.33503, 1, -1, 0.480383,-99) , 
3, 6.99259, 0, 0, 0.490033,-99) , 
1, -0.0043846, 1, 0, 0.500074,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0327513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42886, 0, 1, 0.556792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48013,-99) , 
6, 0.523703, 1, 0, 0.502065,-99) , 
3, 8.90147, 0, 0, 0.505047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445236,-99) , 
8, 10.762, 1, 0, 0.503079,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0115031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499858,-99) , 
12, -2.2013, 1, 0, 0.501977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438828,-99) , 
10, -1.85672, 0, 0, 0.500312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426048,-99) , 
1, -0.012758, 0, 0, 0.498253,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0356396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.96408, 0, 1, 0.513408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451761,-99) , 
10, 1.38272, 1, 0, 0.492373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370815,-99) , 
6, -0.523804, 1, 0, 0.467796,-99) , 
12, 1.20696, 1, 0, 0.507703,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.048088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.1901, 0, 1, 0.529469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442277,-99) , 
11, -1.41472, 1, 0, 0.517058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486979,-99) , 
3, 5.30434, 0, 0, 0.496977,-99) , 
NN(
0, 
0, 
-1, -3.11528, 0, -1, 0.446679,-99) , 
8, 7.43268, 1, 0, 0.490855,-99) , 
3, 7.48237, 0, 0, 0.497249,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0523462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.92381, 1, 1, 0.555445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46618,-99) , 
12, -0.624739, 0, 0, 0.497962,-99) , 
3, 5.50069, 0, 0, 0.506482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572496,-99) , 
NN(
0, 
0, 
-1, 6.98081, 0, -1, 0.476486,-99) , 
13, 7.11377, 1, 0, 0.48728,-99) , 
8, 6.89201, 1, 0, 0.498786,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0255642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471469,-99) , 
10, 2.5103, 1, 0, 0.525982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492491,-99) , 
5, 0.999048, 1, 0, 0.494654,-99) , 
10, 2.14282, 0, 0, 0.496496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438559,-99) , 
4, 8.62065, 1, 0, 0.494951,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0495185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0179094, 1, 1, 0.523132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438319,-99) , 
6, -0.366468, 1, 0, 0.497299,-99) , 
3, 4.78562, 0, 0, 0.509095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534808,-99) , 
NN(
0, 
0, 
-1, 0.867355, 1, -1, 0.453874,-99) , 
3, 9.84138, 0, 0, 0.46903,-99) , 
8, 8.87271, 1, 0, 0.50268,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0695984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.105364, 1, 1, 0.567198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486637,-99) , 
0, 0.499046, 0, 0, 0.50976,-99) , 
3, 3.03385, 0, 0, 0.546532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479965,-99) , 
10, -0.896933, 0, 0, 0.527843,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.476053,-99) , 
11, -3.58766, 1, 0, 0.481765,-99) , 
1, 0.00210728, 0, 0, 0.50125,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0556478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461995,-99) , 
6, 0.855189, 1, 0, 0.510144,-99) , 
6, -0.0135096, 1, 0, 0.518936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47096,-99) , 
4, 3.17292, 1, 0, 0.49923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421771,-99) , 
8, 4.38579, 1, 0, 0.491799,-99) , 
3, 4.51454, 0, 0, 0.507131,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0543906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23464, 0, 1, 0.597302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423361,-99) , 
11, -0.859195, 1, 0, 0.526991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493717,-99) , 
10, 0.362149, 0, 0, 0.505114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478629,-99) , 
10, -0.685782, 1, 0, 0.483873,-99) , 
11, -2.74294, 1, 0, 0.491546,-99) , 
10, 1.85718, 0, 0, 0.494938,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0470577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494658,-99) , 
5, 0.999524, 1, 0, 0.506496,-99) , 
6, 0.568244, 1, 0, 0.518034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49361,-99) , 
3, 4.71962, 0, 0, 0.504831,-99) , 
NN(
0, 
0, 
-1, 7.40901, 1, -1, 0.460459,-99) , 
6, 0.0727785, 1, 0, 0.492676,-99) , 
3, 6.98237, 0, 0, 0.500728,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0473032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473218,-99) , 
13, 7.43028, 1, 0, 0.551453,-99) , 
NN(
0, 
0, 
-1, -0.809489, 1, 1, 0.515791,-99) , 
11, -3.56888, 1, 0, 0.519849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448103,-99) , 
3, 1.5628, 0, 0, 0.517529,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0443254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465811,-99) , 
10, -1.43696, 0, 0, 0.548684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497413,-99) , 
11, -2.38339, 1, 0, 0.510283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467648,-99) , 
11, -2.55056, 0, 0, 0.485336,-99) , 
10, -0.142636, 0, 0, 0.502591,-99) , 
11, -3.97577, 1, 0, 0.505101,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0280255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449799,-99) , 
5, 0.998571, 0, 0, 0.506848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450376,-99) , 
8, 1.7297, 0, 0, 0.504732,-99) , 
11, -4.1223, 1, 0, 0.507194,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0345111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
6, -0.0476361, 1, 0, 0.508715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465191,-99) , 
3, 7.17599, 0, 0, 0.483818,-99) , 
4, 4.1246, 1, 0, 0.503135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416866,-99) , 
3, 1.54598, 0, 0, 0.500715,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0452577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.172363, 1, 1, 0.576285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484574,-99) , 
6, -0.238079, 1, 0, 0.503279,-99) , 
11, -2.08171, 1, 0, 0.519891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489959,-99) , 
12, 0.480636, 0, 0, 0.495462,-99) , 
5, 0.999048, 1, 0, 0.49943,-99) , 
10, 0.714322, 0, 0, 0.506895,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.022218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.94587, 0, 1, 0.509285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419434,-99) , 
10, -1.85698, 0, 0, 0.506988,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0432863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.34662, 1, 1, 0.535546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451106,-99) , 
0, 0.492377, 0, 0, 0.527296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408232,-99) , 
5, 0.99981, 0, 0, 0.502101,-99) , 
NN(
0, 
0, 
-1, 7.50881, 1, -1, 0.467184,-99) , 
8, 6.57377, 1, 0, 0.496137,-99) , 
3, 6.99027, 0, 0, 0.505893,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0474507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.232702, 1, 1, 0.512253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458012,-99) , 
6, -0.883792, 1, 0, 0.477855,-99) , 
3, 3.54344, 0, 0, 0.500842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469824,-99) , 
10, 0.434849, 1, 0, 0.496798,-99) , 
NN(
0, 
0, 
-1, 7.77348, 0, -1, 0.451183,-99) , 
6, -0.142812, 1, 0, 0.473388,-99) , 
0, 0.500948, 1, 0, 0.493231,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0577528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.128973, 0, 1, 0.597866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483297,-99) , 
3, 7.6259, 0, 0, 0.494397,-99) , 
1, 0.00508348, 0, 0, 0.505003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440631,-99) , 
3, 1.69354, 0, 0, 0.489598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405031,-99) , 
6, -0.786929, 1, 0, 0.473248,-99) , 
3, 2.54106, 0, 0, 0.49777,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0192021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498874,-99) , 
11, -3.66726, 1, 0, 0.503998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438006,-99) , 
3, 1.54626, 0, 0, 0.502172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448867,-99) , 
0, 0.505709, 1, 0, 0.499697,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0352201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442277,-99) , 
0, 0.505891, 1, 0, 0.506271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44071,-99) , 
0, 0.489521, 0, 0, 0.503884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524266,-99) , 
NN(
0, 
0, 
-1, 1.71155, 0, -1, 0.438661,-99) , 
9, -949.507, 0, 0, 0.467817,-99) , 
3, 2.04135, 0, 0, 0.499126,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0213281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49363,-99) , 
10, -1.2461, 0, 0, 0.532353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495342,-99) , 
0, 0.500947, 0, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457134,-99) , 
6, 0.904715, 1, 0, 0.497688,-99) , 
11, -3.88662, 1, 0, 0.500025,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0378857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.38664, 1, 1, 0.581164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393717,-99) , 
12, -2.37339, 1, 0, 0.464143,-99) , 
10, -1.14362, 0, 0, 0.530539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493371,-99) , 
10, -0.995337, 1, 0, 0.495749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423518,-99) , 
5, 0.998571, 0, 0, 0.493399,-99) , 
11, -3.45788, 1, 0, 0.498303,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0251567);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238972, 1, 1, 0.544742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537194,-99) , 
NN(
0, 
0, 
-1, 9.78477, 1, -1, 0.491869,-99) , 
3, 9.45332, 0, 0, 0.494322,-99) , 
1, 0.00682455, 0, 0, 0.498455,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0587672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497141, 1, 1, 0.571124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483548,-99) , 
2, 0.0717208, 0, 0, 0.488548,-99) , 
1, 0.00305744, 0, 0, 0.506121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513337,-99) , 
NN(
0, 
0, 
-1, -0.921785, 1, -1, 0.441887,-99) , 
9, -949.507, 0, 0, 0.465994,-99) , 
3, 2.05436, 0, 0, 0.50073,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0419458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489941,-99) , 
13, 7.87246, 1, 0, 0.55188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493305,-99) , 
9, -951.286, 0, 0, 0.504552,-99) , 
11, -3.46721, 1, 0, 0.510565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352772,-99) , 
9, -0.13982, 0, 0, 0.444138,-99) , 
9, -951.286, 1, 0, 0.466327,-99) , 
13, 9.72367, 1, 0, 0.506419,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490591,-99) , 
11, -0.580745, 1, 0, 0.530068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447569,-99) , 
0, 0.501901, 1, 0, 0.492575,-99) , 
10, -0.142882, 0, 0, 0.516817,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57144, 0, 1, 0.543875,-99) , 
NN(
0, 
0, 
-1, 0.435388, 1, -1, 0.294093,-99) , 
9, -1.14408, 0, 0, 0.497204,-99) , 
9, -20.6011, 1, 0, 0.505835,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0162459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.612109, 0, 1, 0.532953,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.497537,-99) , 
11, -3.41884, 1, 0, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444611,-99) , 
8, 10.8707, 1, 0, 0.500572,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0433082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445165,-99) , 
12, -1.85329, 1, 0, 0.493284,-99) , 
10, -0.520719, 0, 0, 0.526263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48511,-99) , 
11, -1.98107, 0, 0, 0.495287,-99) , 
10, -0.988911, 1, 0, 0.497012,-99) , 
12, -1.298, 1, 0, 0.502739,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0237697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.76213, 0, 1, 0.507671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43677,-99) , 
11, -2.31647, 0, 0, 0.462445,-99) , 
3, 9.8128, 0, 0, 0.472888,-99) , 
13, 8.97001, 1, 0, 0.502159,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0408218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.21633, 1, 1, 0.534317,-99) , 
NN(
0, 
0, 
-1, 6.84185, 1, -1, 0.490937,-99) , 
3, 6.73028, 0, 0, 0.498095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466064,-99) , 
12, -0.327917, 1, 0, 0.494842,-99) , 
NN(
0, 
0, 
-1, -1.06645, 1, -1, 0.455673,-99) , 
10, 0.431061, 0, 0, 0.475706,-99) , 
13, 8.19512, 1, 0, 0.492861,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0570117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412548,-99) , 
5, 0.999905, 0, 0, 0.499921,-99) , 
3, 5.35531, 0, 0, 0.508968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475131,-99) , 
10, 1.22451, 0, 0, 0.492751,-99) , 
NN(
0, 
0, 
-1, 0.673998, 1, -1, 0.429167,-99) , 
11, -1.52912, 1, 0, 0.482742,-99) , 
6, 0.238083, 1, 0, 0.497093,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0387421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36943, 0, 1, 0.536343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493669,-99) , 
1, 0.00508348, 0, 0, 0.500159,-99) , 
6, -0.714239, 1, 0, 0.504538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521565,-99) , 
NN(
0, 
0, 
-1, 1.743, 0, -1, 0.432251,-99) , 
6, -0.956774, 1, 0, 0.463702,-99) , 
3, 2.03844, 0, 0, 0.499207,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0518186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46014,-99) , 
12, 0.604934, 1, 0, 0.511595,-99) , 
6, -0.0926039, 1, 0, 0.517189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479397,-99) , 
3, 2.38434, 0, 0, 0.497533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407205,-99) , 
6, -0.261424, 1, 0, 0.490149,-99) , 
3, 4.52268, 0, 0, 0.505466,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0501315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408818,-99) , 
12, 0.95061, 1, 0, 0.496785,-99) , 
6, -0.16526, 1, 0, 0.502765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480906,-99) , 
3, 2.7693, 0, 0, 0.498567,-99) , 
NN(
0, 
0, 
-1, 0.498085, 0, -1, 0.387726,-99) , 
6, -0.495377, 1, 0, 0.480028,-99) , 
3, 4.03743, 0, 0, 0.493807,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0485754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.972789, 1, 1, 0.557449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420103,-99) , 
5, 0.999048, 0, 0, 0.496192,-99) , 
11, -2.77004, 1, 0, 0.504933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476902,-99) , 
11, -1.52208, 1, 0, 0.524142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453956,-99) , 
11, -4.24427, 1, 0, 0.467339,-99) , 
11, -2.47859, 0, 0, 0.482095,-99) , 
10, -0.142757, 0, 0, 0.496899,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0470724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440634,-99) , 
12, -1.41621, 0, 0, 0.498229,-99) , 
3, 5.21897, 0, 0, 0.504276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487932,-99) , 
10, -0.779915, 0, 0, 0.527165,-99) , 
NN(
0, 
0, 
-1, 0.0116066, 0, -1, 0.472455,-99) , 
12, -1.44772, 1, 0, 0.484191,-99) , 
6, 0.142829, 1, 0, 0.494605,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0737901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449191,-99) , 
0, 0.5019, 1, 0, 0.49663,-99) , 
10, 0.105557, 0, 0, 0.509468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475127,-99) , 
11, -1.63323, 1, 0, 0.507948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454382,-99) , 
11, -1.2726, 0, 0, 0.473158,-99) , 
10, 1.28628, 0, 0, 0.484338,-99) , 
12, -0.731408, 1, 0, 0.493292,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0478534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493328,-99) , 
5, 0.999524, 1, 0, 0.501064,-99) , 
6, 0.176048, 1, 0, 0.507142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480527,-99) , 
3, 4.23599, 0, 0, 0.489885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393557,-99) , 
8, 5.55927, 1, 0, 0.482782,-99) , 
3, 5.5072, 0, 0, 0.494411,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0203845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499188,-99) , 
6, -0.619021, 1, 0, 0.506062,-99) , 
11, -4.31747, 1, 0, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463566,-99) , 
8, 1.73366, 0, 0, 0.506344,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0260468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.198168, 1, 1, 0.514046,-99) , 
NN(
0, 
0, 
-1, 5.31522, 1, -1, 0.491697,-99) , 
3, 5.25352, 0, 0, 0.502577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423662,-99) , 
8, 10.8651, 1, 0, 0.500252,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0267142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656833,-99) , 
NN(
0, 
0, 
-1, 2.45573, 1, -1, 0.462409,-99) , 
11, -1.15453, 1, 0, 0.544463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498121,-99) , 
12, -2.24512, 1, 0, 0.500034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437245,-99) , 
10, -1.84323, 0, 0, 0.498195,-99) , 
10, 1.85705, 0, 0, 0.502647,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0425761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459433,-99) , 
12, 1.2739, 1, 0, 0.560936,-99) , 
NN(
NN(
0, 
0, 
-1, 0.607295, 0, 1, 0.510325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482477,-99) , 
11, -2.23201, 1, 0, 0.491802,-99) , 
12, -0.376211, 1, 0, 0.50116,-99) , 
10, 2.14277, 0, 0, 0.504748,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0511155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636151,-99) , 
NN(
0, 
0, 
-1, 0.618987, 1, -1, 0.48093,-99) , 
11, -1.47117, 1, 0, 0.526019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4949,-99) , 
3, 2.02512, 0, 0, 0.525628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483975,-99) , 
8, 3.12076, 1, 0, 0.492556,-99) , 
11, -1.27611, 0, 0, 0.497617,-99) , 
10, 1.57142, 0, 0, 0.501609,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0299373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.63552, 1, 1, 0.509591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428961,-99) , 
8, 3.5494, 1, 0, 0.466349,-99) , 
10, -1.28537, 0, 0, 0.506257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421258,-99) , 
5, 0.998572, 0, 0, 0.503518,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0215091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451401,-99) , 
8, 10.3136, 1, 0, 0.50399,-99) , 
3, 9.94788, 0, 0, 0.505661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422893,-99) , 
10, -1.85697, 0, 0, 0.503518,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0417374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.96828, 1, 1, 0.537335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489368,-99) , 
10, 0.428583, 0, 0, 0.506509,-99) , 
NN(
0, 
0, 
-1, 2.65638, 1, -1, 0.473989,-99) , 
3, 2.73885, 0, 0, 0.500977,-99) , 
6, -0.90476, 1, 0, 0.504904,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0495643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49172,-99) , 
12, -1.06154, 1, 0, 0.590964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440349,-99) , 
12, -1.403, 1, 0, 0.498756,-99) , 
10, -0.20317, 0, 0, 0.51978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492318,-99) , 
10, 2.1439, 0, 0, 0.497145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418281,-99) , 
5, 0.999048, 0, 0, 0.493771,-99) , 
12, -0.904558, 1, 0, 0.501755,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0374587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.19444, 0, 1, 0.51738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484433,-99) , 
3, 7.28594, 0, 0, 0.499715,-99) , 
6, -0.428558, 1, 0, 0.505645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446571,-99) , 
3, 1.54671, 0, 0, 0.503971,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0453015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470536,-99) , 
11, -1.61188, 1, 0, 0.538855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48069,-99) , 
6, 0.923589, 1, 0, 0.527388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495233,-99) , 
11, -2.91599, 1, 0, 0.503307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451911,-99) , 
8, 3.33607, 1, 0, 0.47928,-99) , 
10, -0.428522, 0, 0, 0.496883,-99) , 
3, 7.97272, 0, 0, 0.502106,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0217779);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23612, 1, 1, 0.509539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439099,-99) , 
10, -1.85697, 0, 0, 0.50769,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0342893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.73573, 1, 1, 0.556328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447842,-99) , 
5, 0.999048, 0, 0, 0.503648,-99) , 
12, -1.55682, 1, 0, 0.506894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555876,-99) , 
NN(
0, 
0, 
-1, -0.524328, 1, -1, 0.443387,-99) , 
1, -0.00233647, 1, 0, 0.473078,-99) , 
10, -0.999877, 0, 0, 0.502687,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0642324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.560085, 1, 1, 0.603448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482372,-99) , 
10, 1.89797, 0, 0, 0.494187,-99) , 
11, -2.34739, 1, 0, 0.513641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489321,-99) , 
3, 6.14512, 0, 0, 0.499741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440697,-99) , 
5, 0.999524, 1, 0, 0.457779,-99) , 
6, 0.523676, 1, 0, 0.487646,-99) , 
10, 0.428612, 0, 0, 0.499602,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0385386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.760484, 0, 1, 0.53109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419744,-99) , 
5, 0.999524, 0, 0, 0.4978,-99) , 
11, -2.35165, 1, 0, 0.509618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49999,-99) , 
0, 0.498097, 0, 0, 0.52174,-99) , 
NN(
0, 
0, 
-1, -1.56683, 1, -1, 0.472592,-99) , 
12, -1.13054, 0, 0, 0.48686,-99) , 
10, -0.427203, 0, 0, 0.503806,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0379204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.741828, 1, 1, 0.572249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490488,-99) , 
13, 3.21489, 1, 0, 0.500646,-99) , 
10, 0.137947, 0, 0, 0.51321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49349,-99) , 
10, 1.57195, 0, 0, 0.499366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417344,-99) , 
5, 0.999524, 0, 0, 0.493742,-99) , 
11, -2.71731, 1, 0, 0.500399,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0488069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.89462, 0, 1, 0.541091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486055,-99) , 
11, -3.65637, 1, 0, 0.490528,-99) , 
1, 0.00197988, 0, 0, 0.506027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441433,-99) , 
3, 1.54626, 0, 0, 0.504255,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0299982);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556677,-99) , 
NN(
NN(
0, 
0, 
-1, 0.904681, 0, 1, 0.511757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417567,-99) , 
11, -2.65043, 0, 0, 0.468849,-99) , 
8, 9.74776, 1, 0, 0.509018,-99) , 
3, 9.94751, 0, 0, 0.510284,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0279805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481687,-99) , 
10, 0.437233, 1, 0, 0.526082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443716,-99) , 
3, 2.52824, 0, 0, 0.499954,-99) , 
6, -0.809513, 1, 0, 0.504015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417181,-99) , 
3, 1.54671, 0, 0, 0.501713,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0337264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476853,-99) , 
12, -0.0928657, 1, 0, 0.550736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457327,-99) , 
8, 7.1837, 1, 0, 0.498707,-99) , 
3, 7.17246, 0, 0, 0.503618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531836,-99) , 
NN(
0, 
0, 
-1, -3.42891, 0, -1, 0.466648,-99) , 
6, 0.653621, 1, 0, 0.480435,-99) , 
8, 8.19527, 1, 0, 0.4982,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0195887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480938,-99) , 
6, 0.428539, 1, 0, 0.494051,-99) , 
5, 0.999501, 1, 0, 0.495717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453899,-99) , 
5, 0.999048, 0, 0, 0.49374,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0415973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0583877, 1, 1, 0.516643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440781,-99) , 
0, 0.506344, 1, 0, 0.508017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479166,-99) , 
6, -0.904758, 1, 0, 0.482281,-99) , 
11, -3.85368, 1, 0, 0.485782,-99) , 
0, 0.500947, 0, 0, 0.491912,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0376079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460489,-99) , 
3, 6.24247, 0, 0, 0.501216,-99) , 
6, 0.123838, 1, 0, 0.508016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431963,-99) , 
6, -0.207866, 1, 0, 0.49596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392281,-99) , 
12, -1.71613, 0, 0, 0.488526,-99) , 
3, 5.01964, 0, 0, 0.49872,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.038332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15526, 0, 1, 0.518541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456915,-99) , 
6, -0.881601, 1, 0, 0.485629,-99) , 
3, 2.53598, 0, 0, 0.510551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520837,-99) , 
NN(
0, 
0, 
-1, 3.71223, 0, -1, 0.481831,-99) , 
6, -0.904757, 1, 0, 0.485612,-99) , 
1, -0.000449345, 1, 0, 0.496579,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0435501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.75825, 0, 1, 0.51119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467646,-99) , 
10, 0.456017, 1, 0, 0.483743,-99) , 
11, -2.30783, 1, 0, 0.496713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425046,-99) , 
10, -1.85672, 0, 0, 0.494845,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0149363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498427,-99) , 
5, 0.999524, 1, 0, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436446,-99) , 
3, 1.54269, 0, 0, 0.499348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433361,-99) , 
4, 8.64067, 1, 0, 0.497607,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0171363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480742,-99) , 
8, 10.7004, 1, 0, 0.531251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427707,-99) , 
13, 10.0034, 1, 0, 0.498116,-99) , 
3, 9.06696, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427784,-99) , 
3, 1.55121, 0, 0, 0.498556,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0384951);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488963,-99) , 
11, -3.1125, 1, 0, 0.496418,-99) , 
NN(
0, 
0, 
-1, -1.95144, 0, -1, 0.475372,-99) , 
0, 0.499043, 1, 0, 0.487503,-99) , 
3, 9.93594, 0, 0, 0.489147,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0295625);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48077,-99) , 
13, 7.50383, 1, 0, 0.530903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492798,-99) , 
12, -1.52708, 1, 0, 0.495414,-99) , 
11, -3.76204, 1, 0, 0.4985,-99) , 
11, -0.087632, 0, 0, 0.502038,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0262719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.09926, 1, 1, 0.533558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492809,-99) , 
0, 0.502852, 0, 0, 0.496255,-99) , 
3, 8.06728, 0, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436923,-99) , 
8, 10.8733, 1, 0, 0.499289,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0587454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51151, 1, 1, 0.580983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471604,-99) , 
9, -951.286, 1, 0, 0.491811,-99) , 
11, -2.23356, 1, 0, 0.512587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489946,-99) , 
3, 2.01897, 0, 0, 0.520514,-99) , 
NN(
0, 
0, 
-1, -0.901406, 1, -1, 0.47815,-99) , 
12, -0.330561, 0, 0, 0.487392,-99) , 
10, 0.429025, 0, 0, 0.498985,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0387827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494897, 1, 1, 0.51701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422644,-99) , 
6, -0.142878, 1, 0, 0.474048,-99) , 
0, 0.490337, 0, 0, 0.51279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489577,-99) , 
12, -0.323788, 1, 0, 0.521595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473782,-99) , 
6, -0.142881, 1, 0, 0.488105,-99) , 
2, -0.0874184, 1, 0, 0.493347,-99) , 
0, 0.499043, 1, 0, 0.504488,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0291014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492714,-99) , 
10, 0.0117434, 0, 0, 0.519772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423929,-99) , 
5, 0.999048, 0, 0, 0.497632,-99) , 
12, -0.930806, 1, 0, 0.502593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393789,-99) , 
3, 5.06987, 0, 0, 0.454453,-99) , 
12, -1.50198, 0, 0, 0.474741,-99) , 
10, -0.999839, 0, 0, 0.499086,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0363305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0040832, 0, 1, 0.516175,-99) , 
NN(
0, 
0, 
-1, -0.573793, 1, -1, 0.486178,-99) , 
3, 3.53618, 0, 0, 0.505875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38917,-99) , 
1, -0.012758, 0, 0, 0.502464,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0425719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.56671, 1, 1, 0.575572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493739,-99) , 
12, -2.0731, 1, 0, 0.49916,-99) , 
6, -0.0893688, 1, 0, 0.506872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489871,-99) , 
3, 3.23979, 0, 0, 0.49847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381597,-99) , 
8, 3.92645, 1, 0, 0.486024,-99) , 
3, 4.0199, 0, 0, 0.498604,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0356455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482095,-99) , 
13, 7.40732, 1, 0, 0.555681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453151,-99) , 
2, -0.213808, 0, 0, 0.500828,-99) , 
11, -3.16915, 1, 0, 0.506576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474089,-99) , 
3, 4.99586, 0, 0, 0.497938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440156,-99) , 
13, 7.67504, 1, 0, 0.484038,-99) , 
10, -0.714216, 0, 0, 0.502513,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0370133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498688,-99) , 
11, -1.84057, 1, 0, 0.522338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477083,-99) , 
13, 7.3747, 1, 0, 0.49725,-99) , 
10, 1.00253, 0, 0, 0.504205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464832,-99) , 
3, 5.50792, 0, 0, 0.491735,-99) , 
NN(
0, 
0, 
-1, -0.0762289, 0, -1, 0.455447,-99) , 
0, 0.498093, 0, 0, 0.474141,-99) , 
4, 4.36372, 1, 0, 0.498268,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0397375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0024, 0, 1, 0.54,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465509,-99) , 
11, -1.88961, 1, 0, 0.499114,-99) , 
0, 0.49809, 0, 0, 0.519723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493314,-99) , 
3, 7.24533, 0, 0, 0.500821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452524,-99) , 
3, 9.60034, 0, 0, 0.470253,-99) , 
13, 8.97246, 1, 0, 0.496051,-99) , 
2, -0.0708962, 1, 0, 0.500372,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0719088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445265,-99) , 
6, -0.0476206, 1, 0, 0.473176,-99) , 
11, -1.48523, 1, 0, 0.52701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499308,-99) , 
0, 0.499995, 1, 0, 0.532453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471343,-99) , 
1, -0.0015657, 1, 0, 0.490049,-99) , 
11, -1.17411, 0, 0, 0.496305,-99) , 
10, 1.57244, 0, 0, 0.500654,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.026052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482607,-99) , 
3, 1.69404, 0, 0, 0.52126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496045,-99) , 
11, -1.2027, 0, 0, 0.500264,-99) , 
6, -0.809501, 1, 0, 0.504143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458171,-99) , 
10, 2.4285, 1, 0, 0.502778,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0233057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459562,-99) , 
8, 9.7926, 1, 0, 0.505592,-99) , 
3, 9.45332, 0, 0, 0.507392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460334,-99) , 
5, 0.998572, 0, 0, 0.505919,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0398752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45247,-99) , 
3, 5.50375, 0, 0, 0.506399,-99) , 
6, -0.0205655, 1, 0, 0.513407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493614,-99) , 
3, 3.69125, 0, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397813,-99) , 
8, 4.58359, 1, 0, 0.494234,-99) , 
3, 4.51536, 0, 0, 0.505021,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0989413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489598,-99) , 
3, 2.28361, 0, 0, 0.522034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45219,-99) , 
0, 0.496183, 0, 0, 0.488325,-99) , 
6, 0.61898, 1, 0, 0.515025,-99) , 
NN(
NN(
0, 
0, 
-1, 0.428769, 0, 1, 0.540793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293262,-99) , 
13, 4.73824, 1, 0, 0.349833,-99) , 
9, -0.934234, 0, 0, 0.497092,-99) , 
9, -9.14007, 1, 0, 0.504959,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0444139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.20438, 1, 1, 0.559084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477095,-99) , 
6, -0.887085, 1, 0, 0.499236,-99) , 
3, 2.70269, 0, 0, 0.512197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495087,-99) , 
6, -0.0105629, 1, 0, 0.50156,-99) , 
NN(
0, 
0, 
-1, 4.51212, 1, -1, 0.449196,-99) , 
3, 4.62765, 0, 0, 0.491915,-99) , 
6, -0.523805, 1, 0, 0.498526,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0298123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998186, 0, 1, 0.540665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
3, 6.8974, 0, 0, 0.502623,-99) , 
NN(
0, 
0, 
-1, -3.4616, 0, -1, 0.475501,-99) , 
13, 8.22781, 1, 0, 0.496864,-99) , 
5, 0.999048, 1, 0, 0.499118,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0398207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46239,-99) , 
12, 0.460725, 0, 0, 0.502717,-99) , 
11, -2.35175, 1, 0, 0.521855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496551,-99) , 
8, 3.72796, 1, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418105,-99) , 
3, 3.17265, 0, 0, 0.496124,-99) , 
8, 3.04807, 1, 0, 0.503029,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0317112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.540859,-99) , 
NN(
NN(
0, 
0, 
-1, 5.81261, 0, 1, 0.518253,-99) , 
NN(
0, 
0, 
-1, 5.89675, 0, -1, 0.490469,-99) , 
13, 6.26629, 1, 0, 0.505868,-99) , 
2, -0.214379, 1, 0, 0.50783,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0324779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495133,-99) , 
8, 9.85826, 1, 0, 0.523647,-99) , 
10, 1.30584, 0, 0, 0.540963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496661,-99) , 
11, -3.42738, 1, 0, 0.502919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427562,-99) , 
11, -2.68051, 0, 0, 0.468468,-99) , 
8, 8.37425, 1, 0, 0.499186,-99) , 
3, 8.46977, 0, 0, 0.504126,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0452363);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.71666, 1, 1, 0.538074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470887,-99) , 
3, 3.98182, 0, 0, 0.501383,-99) , 
1, -0.00775719, 1, 0, 0.505566,-99) , 
6, -0.809513, 1, 0, 0.511655,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0400948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483923,-99) , 
12, -1.04506, 1, 0, 0.498127,-99) , 
6, 0.239435, 1, 0, 0.507047,-99) , 
NN(
0, 
0, 
-1, 0.0726293, 1, -1, 0.485904,-99) , 
3, 5.49358, 0, 0, 0.496029,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0453984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.11427, 0, 1, 0.52522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456108,-99) , 
3, 5.51878, 0, 0, 0.507304,-99) , 
6, -0.14287, 1, 0, 0.515159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454167,-99) , 
10, -1.85702, 0, 0, 0.513586,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0407947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2149, 1, 1, 0.513571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473836,-99) , 
1, 0.00195716, 0, 0, 0.489207,-99) , 
6, 0.428539, 1, 0, 0.504624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453737,-99) , 
2, 0.214156, 1, 0, 0.50203,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.049867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.147175, 1, 1, 0.529515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490112,-99) , 
11, -2.09148, 0, 0, 0.49815,-99) , 
10, 0.714285, 0, 0, 0.510311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447577,-99) , 
3, 1.61732, 0, 0, 0.508637,-99) , 
NN(
0, 
0, 
-1, 1.84707, 0, -1, 0.453723,-99) , 
10, 0.429404, 1, 0, 0.487731,-99) , 
3, 2.53598, 0, 0, 0.505133,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0429501);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 10.8467, 1, 1, 0.540824,-99) , 
NN(
NN(
0, 
0, 
-1, 2.95047, 0, 1, 0.543271,-99) , 
NN(
0, 
0, 
-1, 4.43996, 0, -1, 0.485298,-99) , 
1, 0.0040614, 0, 0, 0.49548,-99) , 
3, 8.9495, 0, 0, 0.499222,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0491047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453897,-99) , 
8, 10.2332, 1, 0, 0.50752,-99) , 
6, -0.483231, 1, 0, 0.512596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475983,-99) , 
11, -2.06311, 1, 0, 0.490567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427778,-99) , 
13, 2.97155, 1, 0, 0.481763,-99) , 
3, 3.05498, 0, 0, 0.503238,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0311619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.87298, 1, 1, 0.52798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491518,-99) , 
0, 0.497002, 1, 0, 0.5008,-99) , 
6, 0.809471, 0, 0, 0.504702,-99) , 
NN(
0, 
0, 
-1, -0.238425, 1, -1, 0.458328,-99) , 
0, 0.490472, 0, 0, 0.50201,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.064764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499859, 1, 1, 0.529293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348873,-99) , 
9, -1.03677, 0, 0, 0.496814,-99) , 
9, -951.286, 1, 0, 0.510908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488993,-99) , 
11, -2.8779, 1, 0, 0.496232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445314,-99) , 
0, 0.496866, 0, 0, 0.46641,-99) , 
10, -0.428343, 0, 0, 0.488267,-99) , 
0, 0.499043, 0, 0, 0.497897,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0323527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.42587, 0, 1, 0.515675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454671,-99) , 
11, -2.46448, 0, 0, 0.481979,-99) , 
8, 9.41849, 1, 0, 0.511743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495745,-99) , 
3, 6.29148, 0, 0, 0.50302,-99) , 
NN(
0, 
0, 
-1, 7.78602, 0, -1, 0.472559,-99) , 
13, 7.6758, 1, 0, 0.494329,-99) , 
0, 0.49809, 1, 0, 0.503025,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0446536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56865, 1, 1, 0.559209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469526,-99) , 
6, -0.214456, 1, 0, 0.50113,-99) , 
3, 5.77052, 0, 0, 0.507368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475611,-99) , 
10, 0.672813, 0, 0, 0.493318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407711,-99) , 
12, 0.873891, 1, 0, 0.487289,-99) , 
8, 6.87995, 1, 0, 0.499525,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0584544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.15316, 1, 1, 0.541305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416667,-99) , 
10, 1.58981, 0, 0, 0.479568,-99) , 
12, -0.0608195, 1, 0, 0.522468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491239,-99) , 
3, 5.28519, 0, 0, 0.500609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427865,-99) , 
11, -2.65081, 0, 0, 0.467849,-99) , 
13, 6.28329, 1, 0, 0.49404,-99) , 
3, 6.97662, 0, 0, 0.503083,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0414797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461821,-99) , 
12, -1.81174, 1, 0, 0.500733,-99) , 
10, -0.609328, 0, 0, 0.52584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487275,-99) , 
6, 0.0474433, 1, 0, 0.500095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393501,-99) , 
12, -0.404744, 1, 0, 0.457039,-99) , 
5, 0.999524, 0, 0, 0.496946,-99) , 
12, -1.4003, 1, 0, 0.501819,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0311768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.54059, 1, 1, 0.572271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484183,-99) , 
6, 0.871261, 1, 0, 0.537384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491004,-99) , 
0, 0.496186, 1, 0, 0.497101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452007,-99) , 
10, -1.57124, 0, 0, 0.494804,-99) , 
3, 8.46663, 0, 0, 0.499827,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0222389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.55714, 0, 1, 0.554597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49583,-99) , 
6, -0.714273, 1, 0, 0.500633,-99) , 
10, 2.14275, 0, 0, 0.503807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445117,-99) , 
5, 0.998572, 0, 0, 0.501925,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0340887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85805, 0, 1, 0.536066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455536,-99) , 
8, 8.87492, 1, 0, 0.48206,-99) , 
6, 0.855952, 1, 0, 0.519658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464927,-99) , 
8, 6.95127, 1, 0, 0.497213,-99) , 
0, 0.490473, 1, 0, 0.499979,-99) , 
3, 6.98773, 0, 0, 0.506231,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0512933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.02145, 0, 1, 0.543739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481623,-99) , 
3, 8.42445, 0, 0, 0.486849,-99) , 
1, -0.00283878, 1, 0, 0.499849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440634,-99) , 
5, 0.998572, 0, 0, 0.497996,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0270424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.35964, 1, 1, 0.508554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463938,-99) , 
6, -0.772014, 1, 0, 0.490976,-99) , 
3, 3.39908, 0, 0, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445407,-99) , 
8, 10.8634, 1, 0, 0.500564,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0378443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.159058, 1, 1, 0.525575,-99) , 
NN(
0, 
0, 
-1, 4.07138, 1, -1, 0.491278,-99) , 
3, 4.17297, 0, 0, 0.505239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448078,-99) , 
13, 11.2687, 1, 0, 0.497793,-99) , 
NN(
0, 
0, 
-1, -2.94163, 0, -1, 0.459178,-99) , 
3, 7.89953, 0, 0, 0.48132,-99) , 
8, 7.60698, 1, 0, 0.49787,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0439534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456419,-99) , 
3, 4.24885, 0, 0, 0.501422,-99) , 
6, -0.49825, 1, 0, 0.505288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474334,-99) , 
3, 2.20636, 0, 0, 0.49538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404931,-99) , 
13, 2.98073, 1, 0, 0.482459,-99) , 
3, 3.05129, 0, 0, 0.498451,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0433464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 0, 1, 0.576178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487754,-99) , 
6, -0.145975, 1, 0, 0.550482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489293,-99) , 
11, -3.24409, 1, 0, 0.49575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452788,-99) , 
3, 8.70676, 0, 0, 0.478085,-99) , 
8, 8.25572, 1, 0, 0.491468,-99) , 
1, -0.00631266, 1, 0, 0.496693,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0355095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.71433, 0, 1, 0.515477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484268,-99) , 
10, 1.28601, 0, 0, 0.493927,-99) , 
6, 0.333284, 1, 0, 0.506321,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.460992,-99) , 
0, 0.490472, 0, 0, 0.503592,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.041169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.415757, 0, 1, 0.545633,-99) , 
NN(
0, 
0, 
-1, 7.10395, 0, -1, 0.472004,-99) , 
13, 7.38611, 1, 0, 0.513994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494252,-99) , 
12, -0.579146, 1, 0, 0.499433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422405,-99) , 
5, 0.999524, 0, 0, 0.494008,-99) , 
11, -2.88424, 1, 0, 0.499644,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0453084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477474,-99) , 
12, 0.267261, 1, 0, 0.502594,-99) , 
6, 0.0656767, 1, 0, 0.508494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485393,-99) , 
1, 0.00504267, 0, 0, 0.50039,-99) , 
NN(
0, 
0, 
-1, 3.20551, 1, -1, 0.454113,-99) , 
2, 0.0677912, 1, 0, 0.491148,-99) , 
3, 5.00927, 0, 0, 0.500164,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.034069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468735,-99) , 
10, -1.27919, 0, 0, 0.500822,-99) , 
11, -3.96442, 1, 0, 0.503461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444641,-99) , 
11, -3.23136, 0, 0, 0.503223,-99) , 
NN(
0, 
0, 
-1, -2.28921, 0, -1, 0.45411,-99) , 
12, -0.694877, 1, 0, 0.477711,-99) , 
8, 8.26347, 1, 0, 0.497602,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0474908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.882133, 0, 1, 0.574471,-99) , 
NN(
0, 
0, 
-1, 4.28569, 1, -1, 0.489965,-99) , 
12, 0.00917223, 1, 0, 0.507697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48806,-99) , 
10, 0.361165, 0, 0, 0.499129,-99) , 
NN(
0, 
0, 
-1, -0.142981, 1, -1, 0.47106,-99) , 
12, -0.572532, 1, 0, 0.489161,-99) , 
10, 0.715032, 0, 0, 0.495863,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0408361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497696,-99) , 
10, 0.714791, 1, 0, 0.535967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472892,-99) , 
2, 0.0552341, 1, 0, 0.522375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
6, 0.273184, 1, 0, 0.506319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453354,-99) , 
6, -0.332681, 1, 0, 0.476375,-99) , 
3, 5.78478, 0, 0, 0.494967,-99) , 
8, 3.04902, 1, 0, 0.502195,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0274621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.439494, 1, 1, 0.521564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495947,-99) , 
10, 1.24976, 0, 0, 0.501559,-99) , 
12, 0.381868, 0, 0, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46165,-99) , 
4, 8.15265, 1, 0, 0.506226,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0408807);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559115,-99) , 
NN(
NN(
0, 
0, 
-1, 4.21156, 0, 1, 0.515509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482151,-99) , 
12, -1.25787, 1, 0, 0.493589,-99) , 
6, 0.0476073, 1, 0, 0.504555,-99) , 
11, -4.02976, 1, 0, 0.507153,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.038788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.72005, 0, 1, 0.514155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432237,-99) , 
10, 0.0883341, 0, 0, 0.48617,-99) , 
12, -2.02434, 1, 0, 0.49291,-99) , 
13, 7.35949, 1, 0, 0.50715,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0491241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464975,-99) , 
5, 0.999524, 0, 0, 0.522752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469931,-99) , 
3, 2.53686, 0, 0, 0.50979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493056,-99) , 
0, 0.503487, 0, 0, 0.504804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478859,-99) , 
10, 1.30957, 0, 0, 0.484629,-99) , 
12, 0.422538, 0, 0, 0.490303,-99) , 
0, 0.495234, 1, 0, 0.495576,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0247206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472484,-99) , 
3, 8.00745, 0, 0, 0.527416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470743,-99) , 
13, 9.72188, 1, 0, 0.502289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440777,-99) , 
5, 0.999728, 0, 0, 0.500295,-99) , 
5, 0.999524, 1, 0, 0.502513,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0329403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.33292, 1, 1, 0.54277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487876,-99) , 
8, 8.20675, 1, 0, 0.501985,-99) , 
6, 0.684213, 1, 0, 0.517985,-99) , 
NN(
0, 
0, 
-1, 6.8381, 1, -1, 0.491122,-99) , 
3, 6.491, 0, 0, 0.501287,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0305995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.82187, 0, 1, 0.560998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458948,-99) , 
12, -0.688828, 1, 0, 0.490066,-99) , 
8, 9.21613, 1, 0, 0.5225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487844,-99) , 
6, 0.666421, 1, 0, 0.519727,-99) , 
NN(
0, 
0, 
-1, 8.23025, 1, -1, 0.492052,-99) , 
3, 7.88456, 0, 0, 0.494695,-99) , 
6, 0.809499, 0, 0, 0.498517,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0445446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.441464, 0, 1, 0.607636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463783,-99) , 
12, -1.06802, 1, 0, 0.503231,-99) , 
10, 0.293848, 0, 0, 0.51658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492838,-99) , 
4, 4.18931, 0, 0, 0.498901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455657,-99) , 
5, 0.999524, 0, 0, 0.496037,-99) , 
12, -0.543712, 1, 0, 0.504632,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0430374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809559, 1, 1, 0.517349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49214,-99) , 
11, -3.09851, 1, 0, 0.499441,-99) , 
0, 0.49809, 0, 0, 0.5085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444302,-99) , 
6, 0.82936, 1, 0, 0.512991,-99) , 
NN(
0, 
0, 
-1, -1.35003, 1, -1, 0.451829,-99) , 
11, -2.59316, 0, 0, 0.483836,-99) , 
8, 8.91066, 1, 0, 0.504583,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0539065);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.430248, 0, 1, 0.553023,-99) , 
NN(
NN(
0, 
0, 
-1, 2.75137, 0, 1, 0.524371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484713,-99) , 
1, 0.00305744, 0, 0, 0.501057,-99) , 
6, -0.523798, 1, 0, 0.508823,-99) , 
2, 0.214084, 0, 0, 0.51118,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0423368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489854,-99) , 
10, -0.142593, 0, 0, 0.515125,-99) , 
6, -0.0342845, 1, 0, 0.519868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493811,-99) , 
11, -2.77892, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414514,-99) , 
12, -1.67277, 0, 0, 0.494355,-99) , 
3, 4.50793, 0, 0, 0.508709,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0444156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.513415, 1, 1, 0.517183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466647,-99) , 
6, 0.428426, 0, 0, 0.48971,-99) , 
4, 4.2338, 1, 0, 0.511794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449931,-99) , 
0, 0.506094, 1, 0, 0.515173,-99) , 
NN(
0, 
0, 
-1, 0.0649514, 1, -1, 0.481593,-99) , 
0, 0.503623, 0, 0, 0.493429,-99) , 
0, 0.499995, 1, 0, 0.505375,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0391835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.38131, 1, 1, 0.519048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489677,-99) , 
1, -0.00228702, 1, 0, 0.504383,-99) , 
10, 0.428645, 0, 0, 0.511138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47349,-99) , 
2, -0.213722, 0, 0, 0.50926,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0424406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.48187, 1, 1, 0.517202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482228,-99) , 
1, -0.00808972, 1, 0, 0.491117,-99) , 
3, 4.03257, 0, 0, 0.506526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429306,-99) , 
5, 0.998571, 0, 0, 0.504164,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0462702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467503,-99) , 
10, 0.287959, 0, 0, 0.514007,-99) , 
12, -1.41068, 1, 0, 0.52894,-99) , 
NN(
NN(
0, 
0, 
-1, 5.64074, 0, 1, 0.513938,-99) , 
NN(
0, 
0, 
-1, 6.27754, 0, -1, 0.470441,-99) , 
13, 6.28507, 1, 0, 0.499501,-99) , 
3, 7.9365, 0, 0, 0.504703,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0288443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46465,-99) , 
10, 0.427458, 1, 0, 0.500403,-99) , 
3, 2.38052, 0, 0, 0.517052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499446,-99) , 
11, -4.26313, 1, 0, 0.502112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446904,-99) , 
3, 3.16478, 0, 0, 0.498541,-99) , 
8, 3.04546, 1, 0, 0.503428,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0195499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.95846, 0, 1, 0.515309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408673,-99) , 
12, 0.856902, 1, 0, 0.497088,-99) , 
8, 3.71935, 1, 0, 0.503313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45493,-99) , 
10, 2.42851, 1, 0, 0.501844,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0375284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.73556, 1, 1, 0.521075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456461,-99) , 
0, 0.50639, 1, 0, 0.516832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499987,-99) , 
3, 6.42491, 0, 0, 0.517787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467881,-99) , 
9, -951.286, 0, 0, 0.48648,-99) , 
1, -0.00111011, 1, 0, 0.498114,-99) , 
0, 0.499044, 0, 0, 0.505943,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0448955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.477986, 1, 1, 0.523114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381274,-99) , 
10, 1.83183, 0, 0, 0.460115,-99) , 
12, 0.245361, 1, 0, 0.509921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487132,-99) , 
6, -0.615332, 1, 0, 0.499801,-99) , 
NN(
0, 
0, 
-1, 6.1084, 0, -1, 0.427009,-99) , 
8, 6.49246, 1, 0, 0.493152,-99) , 
3, 6.49309, 0, 0, 0.499495,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0328081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92557, 0, 1, 0.524941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481213,-99) , 
12, 0.0393651, 0, 0, 0.515195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49073,-99) , 
6, -0.550949, 1, 0, 0.494579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437112,-99) , 
3, 2.52974, 0, 0, 0.490544,-99) , 
6, -0.809505, 1, 0, 0.495099,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0639399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489769,-99) , 
8, 3.83795, 1, 0, 0.501209,-99) , 
10, 1.38026, 0, 0, 0.510433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467242,-99) , 
8, 2.27621, 0, 0, 0.507375,-99) , 
NN(
0, 
0, 
-1, 7.46113, 1, -1, 0.450836,-99) , 
10, 1.28628, 1, 0, 0.480714,-99) , 
11, -1.57355, 1, 0, 0.50194,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0394273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01204, 1, 1, 0.584477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428572,-99) , 
12, -1.16004, 1, 0, 0.500003,-99) , 
10, -0.0624136, 0, 0, 0.522029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49625,-99) , 
8, 9.1649, 0, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383816,-99) , 
5, 0.999048, 0, 0, 0.495519,-99) , 
11, -2.74543, 1, 0, 0.50428,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0980267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492589,-99) , 
6, 0.689467, 1, 0, 0.538648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437321,-99) , 
13, 3.60231, 1, 0, 0.50699,-99) , 
3, 4.01119, 0, 0, 0.522404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481819,-99) , 
3, 3.54319, 0, 0, 0.52945,-99) , 
NN(
0, 
0, 
-1, -1.74578, 0, -1, 0.306636,-99) , 
9, -1.34855, 0, 0, 0.499215,-99) , 
9, -9.14007, 1, 0, 0.509366,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0301958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.95919, 1, 1, 0.529095,-99) , 
NN(
NN(
0, 
0, 
-1, -1.23967, 1, 1, 0.508337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469087,-99) , 
11, -2.93646, 0, 0, 0.482311,-99) , 
10, -0.428494, 0, 0, 0.501917,-99) , 
6, -0.904759, 1, 0, 0.504827,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0434127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.43349, 1, 1, 0.556502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489709,-99) , 
10, 0.877586, 0, 0, 0.500758,-99) , 
11, -3.09048, 1, 0, 0.507638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529971,-99) , 
NN(
0, 
0, 
-1, -1.84329, 1, -1, 0.458895,-99) , 
12, -1.04622, 0, 0, 0.474519,-99) , 
10, -0.714182, 0, 0, 0.501502,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0373351);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
10, 1.00754, 0, 0, 0.506761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456076,-99) , 
10, 1.00076, 1, 0, 0.480434,-99) , 
11, -1.88391, 1, 0, 0.497789,-99) , 
11, -0.0170143, 0, 0, 0.500538,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0455575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497502,-99) , 
10, 0.598387, 0, 0, 0.51335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479996,-99) , 
10, 0.17108, 1, 0, 0.492859,-99) , 
11, -2.2694, 1, 0, 0.502662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445846,-99) , 
10, -1.57127, 0, 0, 0.499845,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0364456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448331,-99) , 
12, -1.69139, 1, 0, 0.49989,-99) , 
10, -0.488613, 0, 0, 0.526928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495436,-99) , 
2, -0.0214021, 1, 0, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0.809479, 0, -1, 0.464596,-99) , 
5, 0.999524, 0, 0, 0.498916,-99) , 
12, -1.27111, 1, 0, 0.504516,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0460627);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49722,-99) , 
3, 2.98465, 0, 0, 0.517864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479866,-99) , 
12, -0.71698, 1, 0, 0.500091,-99) , 
6, -0.0476444, 1, 0, 0.508573,-99) , 
3, 9.95975, 0, 0, 0.510373,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0418025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.638207, 0, 1, 0.567196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449148,-99) , 
11, -3.18082, 0, 0, 0.505154,-99) , 
12, -1.45992, 1, 0, 0.509981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415861,-99) , 
12, -2.25715, 1, 0, 0.461904,-99) , 
12, -1.40064, 0, 0, 0.481103,-99) , 
10, -0.999645, 0, 0, 0.506491,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0275464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482029,-99) , 
12, -2.01706, 1, 0, 0.511499,-99) , 
10, -0.680196, 0, 0, 0.536023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
10, 1.28756, 0, 0, 0.504294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434346,-99) , 
12, -0.12396, 1, 0, 0.475735,-99) , 
5, 0.999524, 0, 0, 0.502133,-99) , 
12, -1.4734, 1, 0, 0.507274,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0156421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.62918, 1, 1, 0.530435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4997,-99) , 
6, 0.714221, 0, 0, 0.504149,-99) , 
4, 5.39388, 0, 0, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465513,-99) , 
4, 8.63683, 1, 0, 0.505455,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0231894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90819, 1, 1, 0.509227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468733,-99) , 
10, -1.57124, 0, 0, 0.507307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452539,-99) , 
0, 0.48952, 0, 0, 0.505363,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0357744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85747, 0, 1, 0.522024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450353,-99) , 
5, 0.999905, 0, 0, 0.503801,-99) , 
NN(
0, 
0, 
-1, -1.35738, 1, -1, 0.479098,-99) , 
6, 0.523771, 1, 0, 0.495129,-99) , 
1, -0.00111011, 1, 0, 0.505246,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0386124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499069,-99) , 
10, -0.379036, 0, 0, 0.566197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485038,-99) , 
8, 8.20537, 1, 0, 0.503587,-99) , 
12, -1.25315, 1, 0, 0.509145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471826,-99) , 
13, 4.58471, 1, 0, 0.495617,-99) , 
NN(
0, 
0, 
-1, 3.00633, 0, -1, 0.454634,-99) , 
9, -949.507, 0, 0, 0.476616,-99) , 
10, -0.713999, 0, 0, 0.503268,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0417801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.519099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43418,-99) , 
12, 0.185553, 1, 0, 0.485952,-99) , 
4, 4.17442, 1, 0, 0.511681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45154,-99) , 
6, -0.943495, 1, 0, 0.470835,-99) , 
3, 2.24963, 0, 0, 0.480061,-99) , 
3, 2.53146, 0, 0, 0.504395,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0387984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497308,-99) , 
10, 1.5716, 0, 0, 0.50492,-99) , 
6, 0.109188, 1, 0, 0.510296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489674,-99) , 
3, 3.16664, 0, 0, 0.500619,-99) , 
NN(
0, 
0, 
-1, 4.24051, 0, -1, 0.454025,-99) , 
8, 4.01249, 1, 0, 0.489805,-99) , 
3, 4.99711, 0, 0, 0.500491,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0301852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08798, 1, 1, 0.509281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468315,-99) , 
12, -0.502318, 1, 0, 0.48718,-99) , 
6, -0.333332, 1, 0, 0.49576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429326,-99) , 
10, -1.85698, 0, 0, 0.493985,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.032972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493711,-99) , 
12, -1.11734, 1, 0, 0.505391,-99) , 
NN(
0, 
0, 
-1, 4.14862, 1, -1, 0.483506,-99) , 
3, 5.00702, 0, 0, 0.494959,-99) , 
0, 0.48952, 1, 0, 0.496975,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0463184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490142,-99) , 
12, -0.336369, 1, 0, 0.556194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493668,-99) , 
8, 3.31424, 1, 0, 0.503167,-99) , 
10, 0.564903, 0, 0, 0.512487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484045,-99) , 
10, 0.43149, 1, 0, 0.49632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410889,-99) , 
5, 0.999524, 0, 0, 0.490912,-99) , 
11, -2.16545, 1, 0, 0.50226,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0300788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493348,-99) , 
6, 0.887499, 1, 0, 0.550027,-99) , 
NN(
0, 
0, 
-1, -0.409822, 1, 1, 0.506257,-99) , 
3, 9.30865, 0, 0, 0.509537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474983,-99) , 
4, 2.10185, 1, 0, 0.497619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393465,-99) , 
11, -2.09759, 1, 0, 0.451377,-99) , 
12, 0.381618, 0, 0, 0.481045,-99) , 
3, 2.53888, 0, 0, 0.50285,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0196578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490259,-99) , 
9, -951.286, 1, 0, 0.506751,-99) , 
NN(
0, 
0, 
-1, 0.491606, 0, -1, 0.466293,-99) , 
0, 0.49809, 0, 0, 0.485994,-99) , 
2, -0.0709319, 0, 0, 0.502718,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0450235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47524,-99) , 
3, 5.78127, 0, 0, 0.550296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438111,-99) , 
0, 0.492379, 0, 0, 0.501528,-99) , 
6, 0.366174, 1, 0, 0.509854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48509,-99) , 
3, 4.64112, 0, 0, 0.491118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42509,-99) , 
8, 5.52204, 1, 0, 0.486357,-99) , 
3, 5.48618, 0, 0, 0.497628,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0278045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470563,-99) , 
12, -0.120197, 1, 0, 0.525513,-99) , 
NN(
0, 
0, 
-1, 8.36809, 1, -1, 0.494427,-99) , 
3, 8.46251, 0, 0, 0.498272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385505,-99) , 
1, 0.0124237, 1, 0, 0.49452,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0185167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484314,-99) , 
3, 3.19362, 0, 0, 0.518424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498226,-99) , 
2, 0.302907, 0, 0, 0.499942,-99) , 
2, -0.0710706, 1, 0, 0.503173,-99) , 
3, 9.94331, 0, 0, 0.504745,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0504148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493643,-99) , 
10, -0.115466, 0, 0, 0.558911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478864,-99) , 
10, 0.551229, 0, 0, 0.501507,-99) , 
12, -1.04921, 1, 0, 0.5073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534826,-99) , 
NN(
0, 
0, 
-1, -3.95885, 0, -1, 0.467224,-99) , 
12, -0.718163, 0, 0, 0.480489,-99) , 
10, -0.428279, 0, 0, 0.50023,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0304757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809483, 0, 1, 0.512588,-99) , 
NN(
0, 
0, 
-1, -0.911913, 1, -1, 0.476177,-99) , 
3, 1.9855, 0, 0, 0.508082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44252,-99) , 
8, 10.8698, 1, 0, 0.506191,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0386486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455295,-99) , 
12, -1.99865, 1, 0, 0.490584,-99) , 
10, -0.646224, 0, 0, 0.520188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
11, -2.6279, 1, 0, 0.507028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445061,-99) , 
10, 0.151573, 0, 0, 0.488825,-99) , 
6, -0.0476247, 1, 0, 0.498025,-99) , 
12, -1.43506, 1, 0, 0.501654,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0478687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464096,-99) , 
6, -0.365117, 1, 0, 0.507868,-99) , 
3, 4.60578, 0, 0, 0.513087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47968,-99) , 
12, -0.649222, 1, 0, 0.498981,-99) , 
NN(
0, 
0, 
-1, 5.65812, 1, -1, 0.443289,-99) , 
3, 5.7539, 0, 0, 0.490955,-99) , 
6, -0.0476405, 1, 0, 0.501279,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0398847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48204,-99) , 
12, -1.72118, 0, 0, 0.556031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45022,-99) , 
5, 0.999906, 0, 0, 0.503785,-99) , 
11, -3.18024, 1, 0, 0.511586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491767,-99) , 
6, 0.400956, 1, 0, 0.496905,-99) , 
NN(
0, 
0, 
-1, 0.498086, 0, -1, 0.42111,-99) , 
3, 6.32517, 0, 0, 0.487312,-99) , 
8, 6.30552, 1, 0, 0.500429,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0471182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15515, 1, 1, 0.561373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446827,-99) , 
12, -1.44303, 1, 0, 0.494563,-99) , 
10, -0.264191, 0, 0, 0.516163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492835,-99) , 
0, 0.496188, 1, 0, 0.502572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420199,-99) , 
0, 0.497141, 0, 0, 0.468962,-99) , 
6, 0.809499, 1, 0, 0.498773,-99) , 
12, -0.764562, 1, 0, 0.50481,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0299012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475475,-99) , 
10, -0.998638, 0, 0, 0.504947,-99) , 
NN(
0, 
0, 
-1, 0.503649, 0, -1, 0.484669,-99) , 
0, 0.502716, 1, 0, 0.499755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482115,-99) , 
3, 7.31437, 0, 0, 0.488442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445557,-99) , 
8, 9.81652, 1, 0, 0.484842,-99) , 
0, 0.496186, 0, 0, 0.494651,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0502485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492858,-99) , 
10, -0.708522, 0, 0, 0.536477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471992,-99) , 
2, -0.0746104, 0, 0, 0.503222,-99) , 
11, -3.25862, 1, 0, 0.508205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473264,-99) , 
11, -2.4787, 0, 0, 0.497886,-99) , 
NN(
0, 
0, 
-1, 0.839181, 1, -1, 0.444196,-99) , 
12, -0.0112876, 1, 0, 0.483451,-99) , 
8, 7.57779, 1, 0, 0.500544,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0236719);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495802,-99) , 
1, 0.00554443, 0, 0, 0.500863,-99) , 
NN(
0, 
0, 
-1, 2.29716, 1, -1, 0.470885,-99) , 
3, 1.90287, 0, 0, 0.497617,-99) , 
3, 9.92925, 0, 0, 0.499174,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.056671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03429, 0, 1, 0.543526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480845,-99) , 
12, -0.702833, 1, 0, 0.49729,-99) , 
12, 0.77267, 0, 0, 0.503411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566264,-99) , 
NN(
0, 
0, 
-1, 1.97958, 0, -1, 0.414696,-99) , 
11, -1.36872, 1, 0, 0.468398,-99) , 
10, 1.57143, 1, 0, 0.498716,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0343041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.91244, 1, 1, 0.550964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488004,-99) , 
6, -0.2381, 1, 0, 0.497883,-99) , 
12, -1.71485, 1, 0, 0.50101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432457,-99) , 
12, -1.94293, 0, 0, 0.469059,-99) , 
10, -1.28537, 0, 0, 0.498491,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0290875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492467,-99) , 
10, 2.51006, 1, 0, 0.531967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477067,-99) , 
10, -0.549091, 0, 0, 0.518264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491198,-99) , 
10, 0.918374, 0, 0, 0.495811,-99) , 
4, 4.26395, 0, 0, 0.500396,-99) , 
10, 2.14274, 0, 0, 0.502225,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0376537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29198, 1, 1, 0.558318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498034,-99) , 
12, -0.641892, 1, 0, 0.504109,-99) , 
11, -2.92748, 1, 0, 0.511271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485377,-99) , 
3, 4.20114, 0, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, -1.93014, 1, -1, 0.452708,-99) , 
6, 0.333218, 1, 0, 0.484096,-99) , 
10, -0.428446, 0, 0, 0.504234,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0223495);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440714,-99) , 
4, 8.44159, 1, 0, 0.507869,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0395725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2086, 0, 1, 0.555108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489519,-99) , 
8, 9.26714, 1, 0, 0.508914,-99) , 
6, 0.776931, 1, 0, 0.525724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487328,-99) , 
6, -0.144079, 1, 0, 0.499939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449129,-99) , 
11, -1.47185, 1, 0, 0.475,-99) , 
10, 1.57132, 1, 0, 0.496685,-99) , 
3, 7.96513, 0, 0, 0.501773,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0122075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498905,-99) , 
12, -2.23232, 1, 0, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435912,-99) , 
10, -1.85698, 0, 0, 0.498954,-99) , 
3, 9.93082, 0, 0, 0.500725,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0530829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.52786, 1, 1, 0.565815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481762,-99) , 
1, 0.00367803, 0, 0, 0.49733,-99) , 
11, -2.27142, 1, 0, 0.511494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49462,-99) , 
3, 3.733, 0, 0, 0.507949,-99) , 
NN(
0, 
0, 
-1, -0.987049, 1, -1, 0.475673,-99) , 
6, 0.237988, 1, 0, 0.49469,-99) , 
10, 0.428744, 0, 0, 0.50236,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0536855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0192641, 0, 1, 0.554525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423476,-99) , 
10, 0.477666, 0, 0, 0.504289,-99) , 
12, -0.918087, 1, 0, 0.523501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467541,-99) , 
8, 1.81033, 0, 0, 0.503935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400456,-99) , 
11, -2.62405, 0, 0, 0.450596,-99) , 
8, 6.1291, 1, 0, 0.495984,-99) , 
3, 6.48791, 0, 0, 0.506323,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0363434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54913, 0, 1, 0.517522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440774,-99) , 
12, 0.951386, 1, 0, 0.512395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496559,-99) , 
3, 3.88582, 0, 0, 0.502177,-99) , 
NN(
0, 
0, 
-1, -0.155708, 1, -1, 0.435767,-99) , 
13, 4.62219, 1, 0, 0.493398,-99) , 
3, 5.02087, 0, 0, 0.503177,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0325015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.99279, 0, 1, 0.54042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492547,-99) , 
6, 0.618969, 0, 0, 0.504303,-99) , 
0, 0.499044, 0, 0, 0.520556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468757,-99) , 
13, 7.75025, 1, 0, 0.522925,-99) , 
NN(
0, 
0, 
-1, -2.71494, 0, -1, 0.489868,-99) , 
11, -3.61012, 1, 0, 0.493345,-99) , 
2, -0.0715937, 1, 0, 0.498234,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0339429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00100989, 0, 1, 0.530044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496709,-99) , 
3, 9.46546, 0, 0, 0.499751,-99) , 
1, -0.00283878, 1, 0, 0.50639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455807,-99) , 
12, -0.655065, 1, 0, 0.497804,-99) , 
NN(
0, 
0, 
-1, 2.13348, 1, -1, 0.456633,-99) , 
3, 5.48914, 0, 0, 0.47592,-99) , 
2, 0.0737127, 1, 0, 0.500953,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0336169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472396,-99) , 
12, -1.4544, 1, 0, 0.53717,-99) , 
NN(
0, 
0, 
-1, -0.301037, 0, 1, 0.507271,-99) , 
11, -3.17631, 1, 0, 0.510321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48953,-99) , 
11, -3.58271, 1, 0, 0.502635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405293,-99) , 
12, -2.3808, 1, 0, 0.460675,-99) , 
11, -3.89947, 0, 0, 0.489784,-99) , 
10, -0.714034, 0, 0, 0.506581,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0695342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484168,-99) , 
7, 0.00424691, 0, 0, 0.507529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37347,-99) , 
1, 0.0127407, 1, 0, 0.503341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446104,-99) , 
1, -0.0108299, 0, 0, 0.501233,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0448053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.26253, 1, 1, 0.527871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465385,-99) , 
3, 1.7067, 0, 0, 0.507911,-99) , 
3, 5.49141, 0, 0, 0.517944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463978,-99) , 
0, 0.506254, 1, 0, 0.514365,-99) , 
NN(
0, 
0, 
-1, 1.0039, 1, -1, 0.483042,-99) , 
0, 0.502852, 0, 0, 0.501575,-99) , 
0, 0.500948, 1, 0, 0.513426,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0456877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0496751, 1, 1, 0.543247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494842,-99) , 
12, -1.17395, 1, 0, 0.502961,-99) , 
11, -0.846845, 0, 0, 0.507224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588239,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.423741,-99) , 
11, -1.40505, 1, 0, 0.47933,-99) , 
10, 1.57196, 1, 0, 0.503431,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0178733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569692,-99) , 
NN(
NN(
0, 
0, 
-1, 9.10692, 0, 1, 0.505219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42498,-99) , 
8, 10.396, 1, 0, 0.502762,-99) , 
3, 9.95556, 0, 0, 0.504459,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0349803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473001,-99) , 
6, 0.877505, 1, 0, 0.509643,-99) , 
5, 0.999048, 1, 0, 0.522896,-99) , 
NN(
NN(
0, 
0, 
-1, -0.968889, 1, 1, 0.518818,-99) , 
NN(
0, 
0, 
-1, 2.73152, 0, -1, 0.489542,-99) , 
6, -0.836727, 1, 0, 0.495607,-99) , 
6, 0.714245, 0, 0, 0.501418,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0425667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.30002, 0, 1, 0.515687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47704,-99) , 
10, 1.29569, 0, 0, 0.493241,-99) , 
13, 8.10274, 1, 0, 0.510344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483827,-99) , 
13, 8.95871, 1, 0, 0.519847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458898,-99) , 
0, 0.50095, 0, 0, 0.471903,-99) , 
6, 0.523738, 0, 0, 0.489141,-99) , 
4, 4.27821, 1, 0, 0.50593,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0331459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.53727, 1, 1, 0.572779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492478,-99) , 
10, 0.429077, 0, 0, 0.508296,-99) , 
6, 0.177705, 1, 0, 0.51464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498541,-99) , 
10, -0.999139, 1, 0, 0.503421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417984,-99) , 
12, -1.69461, 0, 0, 0.497215,-99) , 
3, 5.01054, 0, 0, 0.506273,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0531087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487964,-99) , 
3, 7.4495, 0, 0, 0.501736,-99) , 
10, 0.759813, 0, 0, 0.510405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483187,-99) , 
10, 0.718742, 1, 0, 0.498525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384543,-99) , 
5, 0.999524, 0, 0, 0.492145,-99) , 
12, -0.214811, 1, 0, 0.50178,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0176255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.68355, 1, 1, 0.506913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452528,-99) , 
10, -1.57102, 0, 0, 0.504367,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0210963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486705,-99) , 
10, -0.482717, 0, 0, 0.503056,-99) , 
12, -1.97264, 1, 0, 0.505188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469062,-99) , 
10, -1.57127, 0, 0, 0.503477,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0435967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.386135, 0, 1, 0.535627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425128,-99) , 
10, 1.00419, 0, 0, 0.490085,-99) , 
12, -0.417056, 1, 0, 0.515878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48867,-99) , 
3, 5.45669, 0, 0, 0.493238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440078,-99) , 
8, 6.841, 1, 0, 0.490175,-99) , 
3, 6.49309, 0, 0, 0.499813,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0369337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491227,-99) , 
10, -1.50064, 0, 0, 0.54329,-99) , 
NN(
NN(
0, 
0, 
-1, -3.12866, 1, 1, 0.515597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469521,-99) , 
12, -0.302804, 1, 0, 0.491592,-99) , 
6, -0.142866, 1, 0, 0.502682,-99) , 
12, -2.06689, 1, 0, 0.505081,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.047874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.18227, 0, 1, 0.555711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481128,-99) , 
3, 6.38388, 0, 0, 0.493151,-99) , 
1, 0.00305744, 0, 0, 0.505972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525744,-99) , 
NN(
0, 
0, 
-1, -0.392329, 1, -1, 0.455934,-99) , 
6, -0.950603, 1, 0, 0.479452,-99) , 
8, 2.39382, 0, 0, 0.501466,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0305766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459299,-99) , 
0, 0.489521, 0, 0, 0.505479,-99) , 
10, 2.14007, 0, 0, 0.508304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473408,-99) , 
10, 0.472989, 0, 0, 0.50763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411432,-99) , 
10, 1.85882, 1, 0, 0.483947,-99) , 
11, -0.749716, 1, 0, 0.50528,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0319826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46111,-99) , 
10, 1.57072, 1, 0, 0.49889,-99) , 
3, 6.69024, 0, 0, 0.502444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523402,-99) , 
NN(
0, 
0, 
-1, -2.53021, 0, -1, 0.475623,-99) , 
12, -1.93444, 1, 0, 0.480721,-99) , 
6, 0.428553, 1, 0, 0.494399,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0361778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.33888, 0, 1, 0.508895,-99) , 
NN(
0, 
0, 
-1, 1.52648, 0, -1, 0.466235,-99) , 
3, 1.73969, 0, 0, 0.50516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483296,-99) , 
12, 0.402253, 1, 0, 0.538398,-99) , 
NN(
0, 
0, 
-1, -1.18831, 1, -1, 0.463979,-99) , 
11, -1.91413, 0, 0, 0.484733,-99) , 
8, 8.27305, 1, 0, 0.50048,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0255978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495786,-99) , 
0, 0.500539, 0, 0, 0.499284,-99) , 
10, 2.14284, 0, 0, 0.502621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476417,-99) , 
11, -2.60474, 1, 0, 0.490032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451855,-99) , 
0, 0.502444, 0, 0, 0.483983,-99) , 
0, 0.5019, 1, 0, 0.498663,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0283874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496911,-99) , 
10, 1.99852, 0, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448267,-99) , 
12, 1.23764, 1, 0, 0.499081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480289,-99) , 
11, -1.6795, 1, 0, 0.49309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43625,-99) , 
6, -0.786951, 1, 0, 0.48229,-99) , 
3, 2.54106, 0, 0, 0.49518,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.034168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478202,-99) , 
10, -0.142229, 0, 0, 0.495813,-99) , 
8, 3.13663, 1, 0, 0.500202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47311,-99) , 
3, 1.71822, 0, 0, 0.506378,-99) , 
NN(
0, 
0, 
-1, 0.79049, 0, -1, 0.468829,-99) , 
10, -0.4263, 1, 0, 0.48067,-99) , 
3, 2.56024, 0, 0, 0.495632,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0411627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49116,-99) , 
3, 3.02884, 0, 0, 0.507025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47815,-99) , 
10, 0.216086, 0, 0, 0.491086,-99) , 
11, -2.63586, 0, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451801,-99) , 
5, 0.999048, 0, 0, 0.499034,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0206681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498086, 1, 1, 0.534589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496563,-99) , 
0, 0.494282, 1, 0, 0.500526,-99) , 
10, 2.14277, 0, 0, 0.502495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38237,-99) , 
6, 0.940997, 1, 0, 0.443943,-99) , 
6, 0.904712, 1, 0, 0.499477,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0573158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476777,-99) , 
12, -0.13063, 1, 0, 0.527358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443122,-99) , 
8, 4.04211, 1, 0, 0.503752,-99) , 
3, 4.42264, 0, 0, 0.510589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483217,-99) , 
11, -2.08834, 0, 0, 0.49813,-99) , 
NN(
0, 
0, 
-1, 1.88399, 0, -1, 0.446353,-99) , 
12, 0.245361, 1, 0, 0.488034,-99) , 
8, 6.95526, 1, 0, 0.501812,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0787784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459849,-99) , 
7, 0.00182256, 0, 0, 0.505703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452917,-99) , 
1, 0.0107095, 1, 0, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414899,-99) , 
1, -0.012758, 0, 0, 0.501262,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0335925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56883, 1, 1, 0.53586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476953,-99) , 
13, 4.57687, 1, 0, 0.496543,-99) , 
3, 5.83579, 0, 0, 0.500981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498005,-99) , 
0, 0.49809, 0, 0, 0.52462,-99) , 
NN(
0, 
0, 
-1, 9.29514, 1, -1, 0.47335,-99) , 
3, 9.36355, 0, 0, 0.480395,-99) , 
8, 6.95811, 1, 0, 0.493032,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0283362);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904706, 0, 1, 0.508558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491911,-99) , 
11, -3.4616, 1, 0, 0.500115,-99) , 
NN(
0, 
0, 
-1, 2.61238, 1, -1, 0.459142,-99) , 
3, 3.06592, 0, 0, 0.487323,-99) , 
0, 0.497138, 0, 0, 0.499784,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0444566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46468, 1, 1, 0.515383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440726,-99) , 
12, -1.79781, 1, 0, 0.485114,-99) , 
10, -0.713574, 0, 0, 0.510242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458592,-99) , 
12, -0.0631683, 0, 0, 0.493067,-99) , 
NN(
0, 
0, 
-1, 1.69565, 0, -1, 0.447077,-99) , 
10, 0.14201, 1, 0, 0.471079,-99) , 
3, 2.53598, 0, 0, 0.501234,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.046638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0499913, 0, 1, 0.529589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367958,-99) , 
10, 0.4477, 0, 0, 0.484661,-99) , 
12, -0.774667, 1, 0, 0.504222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475915,-99) , 
9, -949.507, 0, 0, 0.491432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389766,-99) , 
8, 4.61131, 1, 0, 0.485393,-99) , 
3, 4.51454, 0, 0, 0.495859,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0266505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473812,-99) , 
11, -2.26307, 1, 0, 0.535769,-99) , 
NN(
0, 
0, 
-1, 5.41134, 1, -1, 0.492342,-99) , 
5, 0.999524, 1, 0, 0.495545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402802,-99) , 
1, -0.000320656, 0, 0, 0.463032,-99) , 
8, 10.1707, 1, 0, 0.49351,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.02867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540435,-99) , 
NN(
0, 
0, 
-1, 4.02145, 0, -1, 0.492491,-99) , 
5, 0.999048, 1, 0, 0.494564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513532,-99) , 
NN(
0, 
0, 
-1, -0.428627, 0, -1, 0.468954,-99) , 
0, 0.489429, 1, 0, 0.474435,-99) , 
0, 0.495234, 0, 0, 0.48912,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.036143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237799, 0, 1, 0.532921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424693,-99) , 
9, -0.144067, 0, 0, 0.503993,-99) , 
9, -951.286, 1, 0, 0.516688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529437,-99) , 
NN(
0, 
0, 
-1, 9.79199, 1, -1, 0.492853,-99) , 
3, 9.39045, 0, 0, 0.494638,-99) , 
4, 4.37807, 0, 0, 0.498957,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0438927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460424,-99) , 
12, 0.810485, 0, 0, 0.50338,-99) , 
11, -1.88794, 1, 0, 0.515893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474784,-99) , 
12, 0.202166, 1, 0, 0.503212,-99) , 
NN(
0, 
0, 
-1, 3.09383, 1, -1, 0.455484,-99) , 
3, 3.23045, 0, 0, 0.497939,-99) , 
6, -0.714293, 1, 0, 0.502334,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0418391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.210066, 0, 1, 0.528361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489624,-99) , 
10, -0.999932, 1, 0, 0.494088,-99) , 
11, -2.85043, 1, 0, 0.503229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521491,-99) , 
NN(
0, 
0, 
-1, -3.39898, 0, -1, 0.465456,-99) , 
2, 0.0713112, 0, 0, 0.476449,-99) , 
8, 8.25921, 1, 0, 0.497091,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0191039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.08261, 0, 1, 0.505889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439049,-99) , 
12, -0.0834366, 1, 0, 0.484788,-99) , 
8, 8.50166, 1, 0, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450681,-99) , 
8, 10.8197, 1, 0, 0.50075,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0168341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494753,-99) , 
10, 0.366207, 0, 0, 0.533098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498938,-99) , 
11, -4.35049, 1, 0, 0.501044,-99) , 
11, -0.697467, 0, 0, 0.504594,-99) , 
10, 2.42832, 0, 0, 0.506287,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0323838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427489, 1, 1, 0.561728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478539,-99) , 
9, 0.428151, 0, 0, 0.509749,-99) , 
9, -951.286, 1, 0, 0.532833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49741,-99) , 
11, -2.97453, 1, 0, 0.503537,-99) , 
NN(
0, 
0, 
-1, -0.333388, 1, -1, 0.470307,-99) , 
10, -1.28556, 0, 0, 0.500967,-99) , 
2, -0.075787, 1, 0, 0.50647,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0242411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.34719, 1, 1, 0.531366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45999,-99) , 
10, 1.5711, 1, 0, 0.510355,-99) , 
NN(
0, 
0, 
-1, 4.4389, 0, -1, 0.493876,-99) , 
8, 4.34423, 1, 0, 0.500559,-99) , 
11, -3.97861, 1, 0, 0.502162,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0413344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0366735, 0, 1, 0.525041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493848,-99) , 
6, -0.14286, 1, 0, 0.505901,-99) , 
4, 1.3378, 1, 0, 0.513662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478454,-99) , 
0, 0.498089, 0, 0, 0.505709,-99) , 
NN(
0, 
0, 
-1, 7.35817, 0, -1, 0.460405,-99) , 
8, 6.95877, 1, 0, 0.485709,-99) , 
4, 4.37797, 1, 0, 0.508178,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0264089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499293,-99) , 
6, 0.760519, 1, 0, 0.518612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466493,-99) , 
13, 6.2815, 1, 0, 0.495735,-99) , 
3, 6.979, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454177,-99) , 
5, 0.998572, 0, 0, 0.500963,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0389162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492762,-99) , 
3, 2.07946, 0, 0, 0.52044,-99) , 
NN(
0, 
0, 
-1, -0.14114, 0, -1, 0.483115,-99) , 
2, -0.0714972, 0, 0, 0.513629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485367,-99) , 
8, 8.91144, 0, 0, 0.489892,-99) , 
11, -3.81559, 1, 0, 0.494297,-99) , 
0, 0.498091, 1, 0, 0.503911,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0232307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497755,-99) , 
12, 1.34465, 0, 0, 0.501759,-99) , 
10, 2.42852, 0, 0, 0.503625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487101,-99) , 
12, 0.0378844, 0, 0, 0.507698,-99) , 
NN(
0, 
0, 
-1, 6.80558, 0, -1, 0.465814,-99) , 
13, 5.15095, 1, 0, 0.482939,-99) , 
4, 4.36372, 1, 0, 0.499603,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0351935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.445702, 1, 1, 0.559874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499528,-99) , 
10, 0.715207, 0, 0, 0.510885,-99) , 
6, 0.18533, 1, 0, 0.516418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49306,-99) , 
11, -2.02828, 1, 0, 0.501725,-99) , 
NN(
0, 
0, 
-1, 2.57867, 0, -1, 0.476467,-99) , 
12, -0.102733, 0, 0, 0.490695,-99) , 
3, 5.00918, 0, 0, 0.504039,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0265182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449308,-99) , 
1, 0.0113528, 1, 0, 0.507336,-99) , 
11, -0.320824, 0, 0, 0.509331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453647,-99) , 
3, 1.5452, 0, 0, 0.507835,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0428644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478561,-99) , 
6, 0.714017, 1, 0, 0.538718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492265,-99) , 
3, 2.02992, 0, 0, 0.529208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456305,-99) , 
12, 0.63249, 1, 0, 0.516085,-99) , 
NN(
0, 
0, 
-1, -0.629008, 0, -1, 0.489755,-99) , 
3, 6.50445, 0, 0, 0.500727,-99) , 
1, -0.00283878, 1, 0, 0.507004,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0392515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0161051, 0, 1, 0.542663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490021,-99) , 
3, 6.11109, 0, 0, 0.4987,-99) , 
1, -0.00439438, 1, 0, 0.506128,-99) , 
NN(
NN(
0, 
0, 
-1, -0.709388, 0, 1, 0.518866,-99) , 
NN(
0, 
0, 
-1, -2.53646, 0, -1, 0.475426,-99) , 
12, -1.34662, 1, 0, 0.486508,-99) , 
8, 8.12699, 1, 0, 0.501432,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0198297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499584,-99) , 
6, 0.142847, 1, 0, 0.507721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472093,-99) , 
11, -4.10197, 0, 0, 0.505995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461968,-99) , 
3, 1.55235, 0, 0, 0.504729,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0335929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494521,-99) , 
10, -0.9618, 0, 0, 0.56781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490046,-99) , 
10, 0.142756, 0, 0, 0.503462,-99) , 
12, -1.70081, 1, 0, 0.507199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434444,-99) , 
6, -0.333389, 1, 0, 0.476461,-99) , 
10, -1.28568, 0, 0, 0.504831,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0314647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401026,-99) , 
11, -0.928723, 1, 0, 0.534951,-99) , 
NN(
0, 
0, 
-1, -0.668191, 0, 1, 0.507151,-99) , 
10, 2.14269, 0, 0, 0.508724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446617,-99) , 
5, 0.998572, 0, 0, 0.506901,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0208145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471518,-99) , 
10, -1.68555, 0, 0, 0.523674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481906,-99) , 
10, -0.428321, 0, 0, 0.498696,-99) , 
12, -1.98655, 1, 0, 0.500518,-99) , 
11, -0.105119, 0, 0, 0.502228,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0335167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.85706, 0, 1, 0.558276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381597,-99) , 
3, 7.54579, 0, 0, 0.472694,-99) , 
13, 7.39425, 1, 0, 0.518907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536267,-99) , 
NN(
0, 
0, 
-1, -0.904749, 0, -1, 0.491826,-99) , 
11, 0.385689, 0, 0, 0.493771,-99) , 
11, -3.45108, 1, 0, 0.497005,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0366832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495697,-99) , 
8, 7.52387, 1, 0, 0.508175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439069,-99) , 
3, 5.47196, 0, 0, 0.476979,-99) , 
4, 3.66953, 1, 0, 0.505849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451788,-99) , 
13, 6.79312, 1, 0, 0.494644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427329,-99) , 
6, 0.523791, 0, 0, 0.459726,-99) , 
2, 0.0712453, 1, 0, 0.483939,-99) , 
4, 4.26395, 1, 0, 0.501318,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.106018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00906205, 1, 1, 0.529679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350487,-99) , 
9, -0.713644, 0, 0, 0.501647,-99) , 
9, -951.286, 1, 0, 0.511545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490491,-99) , 
3, 3.02865, 0, 0, 0.497251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414567,-99) , 
6, -0.395318, 1, 0, 0.490376,-99) , 
3, 4.01722, 0, 0, 0.503092,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0365701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166121, 0, 1, 0.543789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477499,-99) , 
12, 1.21754, 0, 0, 0.500043,-99) , 
11, -1.38772, 1, 0, 0.518914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490988,-99) , 
3, 9.06209, 0, 0, 0.495347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439416,-99) , 
3, 3.1567, 0, 0, 0.491625,-99) , 
8, 3.02676, 1, 0, 0.498919,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0422766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.25517, 1, 1, 0.514624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418922,-99) , 
10, -1.47864, 0, 0, 0.500657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392716,-99) , 
13, 9.07813, 1, 0, 0.478607,-99) , 
11, -3.36417, 0, 0, 0.50917,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0342032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46903,-99) , 
12, -0.703039, 0, 0, 0.501375,-99) , 
3, 3.5812, 0, 0, 0.506274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459181,-99) , 
12, 0.245361, 1, 0, 0.494492,-99) , 
NN(
0, 
0, 
-1, 5.45853, 1, -1, 0.460849,-99) , 
3, 5.40045, 0, 0, 0.487645,-99) , 
6, -0.333338, 1, 0, 0.494936,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0318433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.554773,-99) , 
NN(
NN(
0, 
0, 
-1, 4.78693, 0, 1, 0.512037,-99) , 
NN(
0, 
0, 
-1, 0.587439, 1, -1, 0.485242,-99) , 
8, 5.66229, 1, 0, 0.498789,-99) , 
10, 2.14282, 0, 0, 0.502216,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0439354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493817,-99) , 
11, -2.13599, 0, 0, 0.499974,-99) , 
10, 0.813545, 0, 0, 0.507569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491088,-99) , 
8, 2.07462, 0, 0, 0.512585,-99) , 
NN(
0, 
0, 
-1, 1.04406, 0, -1, 0.472925,-99) , 
10, 0.43249, 1, 0, 0.482059,-99) , 
12, -0.171012, 1, 0, 0.495632,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0508949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.4496, 0, 1, 0.535835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48808,-99) , 
11, -4.35401, 1, 0, 0.493961,-99) , 
11, -2.35975, 0, 0, 0.506558,-99) , 
NN(
NN(
0, 
0, 
-1, -0.534859, 1, 1, 0.551448,-99) , 
NN(
0, 
0, 
-1, 1.04079, 0, -1, 0.475831,-99) , 
11, -2.29785, 1, 0, 0.490573,-99) , 
10, 0.428593, 1, 0, 0.499297,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.023199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481836,-99) , 
10, 1.85991, 1, 0, 0.533668,-99) , 
NN(
0, 
0, 
-1, 2.1427, 0, 1, 0.503662,-99) , 
11, -0.697467, 0, 0, 0.50752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48331,-99) , 
10, 0.14424, 1, 0, 0.497168,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.457641,-99) , 
2, 0.0719452, 1, 0, 0.485147,-99) , 
4, 4.36372, 1, 0, 0.503164,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0251336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492819,-99) , 
10, 1.39444, 0, 0, 0.496077,-99) , 
10, 2.4285, 0, 0, 0.498359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438363,-99) , 
2, 0.214584, 1, 0, 0.495539,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0368919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420777,-99) , 
11, -0.942781, 1, 0, 0.544438,-99) , 
NN(
NN(
0, 
0, 
-1, 0.876411, 0, 1, 0.532678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482944,-99) , 
11, -2.26593, 1, 0, 0.494831,-99) , 
12, 1.34465, 0, 0, 0.498108,-99) , 
10, 2.14273, 0, 0, 0.50076,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0242347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495795,-99) , 
0, 0.495234, 0, 0, 0.507569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441318,-99) , 
4, 7.01265, 1, 0, 0.505725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457064,-99) , 
4, 8.63428, 1, 0, 0.504344,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0364252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491021,-99) , 
10, 0.428528, 1, 0, 0.502827,-99) , 
3, 6.05203, 0, 0, 0.506673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48839,-99) , 
12, -0.748265, 1, 0, 0.503359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430945,-99) , 
11, -2.28313, 0, 0, 0.460417,-99) , 
3, 6.96333, 0, 0, 0.492826,-99) , 
6, 0.333319, 1, 0, 0.500958,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0548183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.136606, 1, 1, 0.580966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469932,-99) , 
13, 9.01425, 0, 0, 0.481803,-99) , 
11, -1.81841, 1, 0, 0.509059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491585,-99) , 
11, -0.349475, 1, 0, 0.530092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460773,-99) , 
12, -0.592832, 1, 0, 0.488806,-99) , 
12, 0.559704, 0, 0, 0.494057,-99) , 
10, 0.99996, 0, 0, 0.498258,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0581368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.8358, 1, 1, 0.551874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458398,-99) , 
12, 1.24212, 0, 0, 0.496414,-99) , 
8, 3.02514, 0, 0, 0.516289,-99) , 
NN(
NN(
0, 
0, 
-1, 0.853772, 0, 1, 0.521933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472161,-99) , 
10, 1.52468, 0, 0, 0.47803,-99) , 
1, 0.00158957, 0, 0, 0.492949,-99) , 
11, -1.35313, 0, 0, 0.49859,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0283626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.43102, 1, 1, 0.525839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48726,-99) , 
8, 3.15039, 1, 0, 0.493163,-99) , 
NN(
0, 
0, 
-1, 6.27087, 0, -1, 0.443236,-99) , 
11, -3.9727, 0, 0, 0.490082,-99) , 
3, 8.96054, 0, 0, 0.493038,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0335511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46393,-99) , 
11, -1.12413, 1, 0, 0.520785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48946,-99) , 
11, -1.13401, 0, 0, 0.493154,-99) , 
10, 1.85711, 0, 0, 0.495743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450418,-99) , 
8, 10.8681, 1, 0, 0.494358,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0319419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238076, 1, 1, 0.511438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461531,-99) , 
6, -0.934839, 1, 0, 0.484831,-99) , 
3, 2.05489, 0, 0, 0.507914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483036,-99) , 
3, 7.32722, 0, 0, 0.491471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450777,-99) , 
8, 9.28802, 1, 0, 0.486978,-99) , 
0, 0.500948, 1, 0, 0.502065,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0492389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06682, 1, 1, 0.593108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471816,-99) , 
10, 0.306404, 0, 0, 0.504295,-99) , 
12, -0.874648, 1, 0, 0.512576,-99) , 
NN(
NN(
0, 
0, 
-1, -1.24401, 1, 1, 0.536484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468414,-99) , 
8, 3.22212, 1, 0, 0.479407,-99) , 
11, -2.22787, 0, 0, 0.49184,-99) , 
10, -0.142671, 0, 0, 0.505237,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0192662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.597787, 1, 1, 0.507207,-99) , 
NN(
0, 
0, 
-1, -0.821716, 1, -1, 0.487453,-99) , 
3, 2.46938, 0, 0, 0.502678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451905,-99) , 
8, 10.8733, 1, 0, 0.501141,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0308756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496525,-99) , 
11, -4.35713, 1, 0, 0.498795,-99) , 
10, 2.14138, 0, 0, 0.502644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455024,-99) , 
10, 0.706303, 0, 0, 0.495639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395396,-99) , 
10, 1.86001, 1, 0, 0.470837,-99) , 
11, -0.791893, 1, 0, 0.498419,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0308327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455131,-99) , 
11, -0.942781, 1, 0, 0.558102,-99) , 
NN(
NN(
0, 
0, 
-1, -1.23603, 0, 1, 0.504868,-99) , 
NN(
0, 
0, 
-1, 1.75868, 0, -1, 0.475364,-99) , 
3, 2.53598, 0, 0, 0.497786,-99) , 
10, 2.14282, 0, 0, 0.501358,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0372195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.37603, 0, 1, 0.516917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460852,-99) , 
10, -0.713574, 0, 0, 0.494901,-99) , 
13, 5.11321, 1, 0, 0.507075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455318,-99) , 
11, -2.56089, 0, 0, 0.481112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430375,-99) , 
12, -0.042762, 1, 0, 0.467691,-99) , 
8, 8.83288, 1, 0, 0.500659,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0185229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479582,-99) , 
6, 0.523665, 1, 0, 0.494466,-99) , 
5, 0.998572, 1, 0, 0.495661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457071,-99) , 
2, 0.214156, 1, 0, 0.493849,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0509622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497315,-99) , 
10, 0.915883, 0, 0, 0.508584,-99) , 
NN(
0, 
0, 
-1, 1.47533, 0, -1, 0.465937,-99) , 
12, -0.0431373, 1, 0, 0.496097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489432,-99) , 
11, -0.965912, 1, 0, 0.508908,-99) , 
NN(
0, 
0, 
-1, -0.521169, 1, -1, 0.448761,-99) , 
12, 0.3012, 0, 0, 0.481258,-99) , 
3, 3.52162, 0, 0, 0.49067,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.027318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
12, -0.655065, 1, 0, 0.519774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461084,-99) , 
8, 7.13671, 1, 0, 0.498099,-99) , 
3, 7.1607, 0, 0, 0.503295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449294,-99) , 
3, 9.80699, 0, 0, 0.472529,-99) , 
8, 10.2159, 1, 0, 0.501373,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0282683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496715,-99) , 
3, 5.12669, 0, 0, 0.50669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458484,-99) , 
11, -1.88879, 0, 0, 0.476912,-99) , 
8, 9.57475, 1, 0, 0.503746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443132,-99) , 
10, -1.85693, 0, 0, 0.50215,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0221367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539791,-99) , 
NN(
NN(
0, 
0, 
-1, 3.84702, 0, 1, 0.506811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485097,-99) , 
12, -1.07947, 1, 0, 0.493278,-99) , 
6, -0.142876, 1, 0, 0.499453,-99) , 
3, 9.94836, 0, 0, 0.500524,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0390464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.71256, 1, 1, 0.555439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482472,-99) , 
11, -1.93578, 0, 0, 0.499909,-99) , 
13, 9.5526, 1, 0, 0.525395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495884,-99) , 
3, 3.21303, 0, 0, 0.510632,-99) , 
NN(
0, 
0, 
-1, 6.19212, 0, -1, 0.484747,-99) , 
8, 6.09557, 1, 0, 0.501247,-99) , 
3, 7.97075, 0, 0, 0.505451,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0383482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491538,-99) , 
6, -0.959219, 1, 0, 0.504899,-99) , 
3, 2.26218, 0, 0, 0.515635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490059,-99) , 
8, 4.35564, 1, 0, 0.49575,-99) , 
NN(
0, 
0, 
-1, 3.09958, 1, -1, 0.453129,-99) , 
3, 3.25286, 0, 0, 0.490966,-99) , 
6, -0.714289, 1, 0, 0.497096,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0406049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467183,-99) , 
6, -0.0476206, 1, 0, 0.493246,-99) , 
11, -1.44474, 1, 0, 0.531898,-99) , 
NN(
NN(
0, 
0, 
-1, 0.870106, 0, 1, 0.509745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415008,-99) , 
13, 5.7782, 1, 0, 0.48574,-99) , 
12, -0.0616756, 1, 0, 0.501929,-99) , 
10, 1.57135, 0, 0, 0.506127,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0245494);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490174,-99) , 
11, -1.80411, 1, 0, 0.512645,-99) , 
NN(
0, 
0, 
-1, 3.16429, 0, -1, 0.493591,-99) , 
8, 3.04902, 1, 0, 0.498088,-99) , 
11, -0.0418059, 0, 0, 0.500382,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0411178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57196, 0, 1, 0.536907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483608,-99) , 
13, 9.0287, 1, 0, 0.508627,-99) , 
6, 0.842037, 1, 0, 0.528764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496926,-99) , 
3, 3.56865, 0, 0, 0.502664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453417,-99) , 
3, 5.15977, 0, 0, 0.484736,-99) , 
6, -0.254928, 1, 0, 0.496662,-99) , 
3, 6.49829, 0, 0, 0.508833,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0241746);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56356,-99) , 
NN(
NN(
0, 
0, 
-1, 4.26016, 0, 1, 0.510181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437513,-99) , 
12, 0.259705, 1, 0, 0.490207,-99) , 
6, 0.0475946, 1, 0, 0.500177,-99) , 
10, 2.42845, 0, 0, 0.502304,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0324563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.90419, 1, 1, 0.522329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48495,-99) , 
3, 3.03646, 0, 0, 0.51075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495807,-99) , 
10, -0.42419, 1, 0, 0.499802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471701,-99) , 
10, 0.100514, 0, 0, 0.480225,-99) , 
12, -0.763679, 0, 0, 0.492894,-99) , 
2, -0.0712486, 1, 0, 0.496095,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0382773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484893,-99) , 
10, 2.4287, 0, 0, 0.496588,-99) , 
11, -1.65158, 1, 0, 0.519647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492652,-99) , 
11, -1.56154, 0, 0, 0.498603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443665,-99) , 
10, -0.346792, 1, 0, 0.473377,-99) , 
6, -0.904746, 0, 0, 0.495553,-99) , 
10, 1.28582, 0, 0, 0.500357,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.028339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.512608, 1, 1, 0.521462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484014,-99) , 
8, 5.39864, 1, 0, 0.499974,-99) , 
3, 6.98961, 0, 0, 0.506218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454228,-99) , 
5, 0.998572, 0, 0, 0.504666,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0264169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.32233, 0, 1, 0.541408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494414,-99) , 
0, 0.498091, 1, 0, 0.503755,-99) , 
11, -3.87918, 1, 0, 0.506252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462146,-99) , 
12, 1.79809, 1, 0, 0.503456,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0318081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498474,-99) , 
12, -1.07947, 1, 0, 0.508297,-99) , 
6, -0.162779, 1, 0, 0.512752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494224,-99) , 
11, -2.68157, 1, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425202,-99) , 
8, 3.92512, 1, 0, 0.49381,-99) , 
3, 4.02413, 0, 0, 0.505035,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0218034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.69432, 0, 1, 0.507243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4304,-99) , 
4, 2.11675, 0, 0, 0.469636,-99) , 
8, 10.1767, 1, 0, 0.504851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440027,-99) , 
4, 8.33212, 1, 0, 0.502836,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0317221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499987,-99) , 
12, 0.33996, 1, 0, 0.56734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497048,-99) , 
8, 8.29845, 0, 0, 0.511731,-99) , 
11, -1.59428, 1, 0, 0.528446,-99) , 
NN(
NN(
0, 
0, 
-1, 0.268985, 1, 1, 0.522917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476425,-99) , 
12, -0.211003, 1, 0, 0.498679,-99) , 
12, 0.77267, 0, 0, 0.501551,-99) , 
10, 1.28572, 0, 0, 0.506993,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0438863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488132,-99) , 
12, 0.10047, 1, 0, 0.570433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491763,-99) , 
10, 2.23835, 0, 0, 0.503851,-99) , 
11, -1.84057, 1, 0, 0.521339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480496,-99) , 
12, -0.0207777, 0, 0, 0.4865,-99) , 
5, 0.999048, 1, 0, 0.488841,-99) , 
10, 1.00076, 0, 0, 0.497861,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0509896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498661,-99) , 
10, 1.16867, 0, 0, 0.577939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480494,-99) , 
0, 0.495235, 1, 0, 0.495423,-99) , 
11, -1.77883, 1, 0, 0.520135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488697,-99) , 
8, 2.2592, 0, 0, 0.520864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466386,-99) , 
13, 6.47038, 1, 0, 0.483848,-99) , 
11, -1.67617, 0, 0, 0.490949,-99) , 
10, 0.999949, 0, 0, 0.498827,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0164164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570933,-99) , 
NN(
NN(
0, 
0, 
-1, -1.48573, 1, 1, 0.505269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462743,-99) , 
0, 0.48952, 0, 0, 0.503587,-99) , 
3, 9.93029, 0, 0, 0.505337,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.056493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.684107, 1, 1, 0.550566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432182,-99) , 
10, -0.0675304, 0, 0, 0.511112,-99) , 
12, -1.37314, 1, 0, 0.520324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498827,-99) , 
11, -1.65109, 1, 0, 0.511042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465685,-99) , 
1, -0.00602228, 1, 0, 0.475986,-99) , 
12, -0.0214244, 0, 0, 0.492792,-99) , 
3, 6.49309, 0, 0, 0.503064,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0411855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477869,-99) , 
12, 0.704392, 0, 0, 0.496115,-99) , 
3, 2.36853, 0, 0, 0.51007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463978,-99) , 
11, -3.47853, 0, 0, 0.525393,-99) , 
NN(
0, 
0, 
-1, 5.76653, 0, -1, 0.485204,-99) , 
1, 0.00305744, 0, 0, 0.492885,-99) , 
8, 3.03167, 1, 0, 0.49762,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0409086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.824928, 1, 1, 0.552099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440274,-99) , 
5, 0.999524, 0, 0, 0.507458,-99) , 
12, -0.521025, 1, 0, 0.514488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492564,-99) , 
11, -1.06315, 1, 0, 0.530594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444971,-99) , 
12, -1.02128, 1, 0, 0.48779,-99) , 
12, -0.459544, 0, 0, 0.497386,-99) , 
10, 0.143039, 0, 0, 0.506913,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0262175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467646,-99) , 
11, -0.803547, 1, 0, 0.497533,-99) , 
11, -1.20238, 1, 0, 0.53362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
11, -1.19069, 0, 0, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462886,-99) , 
8, 1.72782, 0, 0, 0.501062,-99) , 
10, 1.85712, 0, 0, 0.504131,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0437015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0981461, 1, 1, 0.58553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477746,-99) , 
10, -0.999651, 0, 0, 0.506298,-99) , 
1, -0.0057274, 1, 0, 0.511946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451346,-99) , 
12, -0.0198997, 0, 0, 0.496412,-99) , 
NN(
0, 
0, 
-1, 2.1395, 0, -1, 0.456293,-99) , 
10, 0.427848, 1, 0, 0.481488,-99) , 
3, 2.56116, 0, 0, 0.504488,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.031563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.710774, 1, 1, 0.510292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466498,-99) , 
10, -0.53426, 0, 0, 0.489288,-99) , 
11, -2.71684, 0, 0, 0.503306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457026,-99) , 
2, 0.216428, 1, 0, 0.50107,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0334409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609594,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.464373,-99) , 
11, -1.16489, 1, 0, 0.522187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48953,-99) , 
6, 0.333316, 1, 0, 0.506753,-99) , 
NN(
0, 
0, 
-1, -0.223433, 0, -1, 0.489633,-99) , 
0, 0.499995, 0, 0, 0.495552,-99) , 
10, 1.85717, 0, 0, 0.498022,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0179905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488528,-99) , 
5, 0.998186, 0, 0, 0.536231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496137,-99) , 
4, 7.96725, 0, 0, 0.498046,-99) , 
5, 0.999048, 1, 0, 0.500029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44806,-99) , 
3, 1.56167, 0, 0, 0.498471,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0278053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.86472, 1, 1, 0.51321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429496,-99) , 
8, 4.59092, 1, 0, 0.497739,-99) , 
3, 4.76849, 0, 0, 0.505803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447379,-99) , 
8, 10.8197, 1, 0, 0.503881,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0196385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.18396, 1, 1, 0.505138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383729,-99) , 
1, -0.0123865, 0, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451274,-99) , 
3, 1.54626, 0, 0, 0.499848,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0892777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486002,-99) , 
3, 5.05248, 0, 0, 0.561229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436691,-99) , 
13, 4.36207, 1, 0, 0.464699,-99) , 
9, 0.260026, 0, 0, 0.502106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479043,-99) , 
12, -0.145682, 0, 0, 0.517324,-99) , 
NN(
0, 
0, 
-1, 1.85695, 1, -1, 0.479734,-99) , 
1, -0.0043846, 1, 0, 0.485643,-99) , 
9, -950.08, 0, 0, 0.49474,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0243503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485201,-99) , 
10, -0.94901, 0, 0, 0.55834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456095,-99) , 
11, -3.33566, 0, 0, 0.500774,-99) , 
12, -1.69226, 1, 0, 0.50426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446547,-99) , 
12, -2.38373, 1, 0, 0.46959,-99) , 
10, -1.2856, 0, 0, 0.501519,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0473134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452019,-99) , 
12, -1.27766, 1, 0, 0.507392,-99) , 
10, -0.0749267, 0, 0, 0.522434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48271,-99) , 
11, -1.19023, 0, 0, 0.489643,-99) , 
10, 2.42922, 0, 0, 0.492133,-99) , 
12, -0.949833, 1, 0, 0.500859,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0193433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14023, 0, 1, 0.506812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454212,-99) , 
9, -951.287, 0, 0, 0.481322,-99) , 
12, 1.55585, 1, 0, 0.504601,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0722822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468084,-99) , 
3, 6.53178, 0, 0, 0.497055,-99) , 
10, -0.631572, 0, 0, 0.516984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472787,-99) , 
2, 0.0704481, 1, 0, 0.504675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363426,-99) , 
9, -0.934615, 0, 0, 0.483912,-99) , 
9, -9.14007, 1, 0, 0.493345,-99) , 
12, -1.43567, 1, 0, 0.49719,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0402974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479662,-99) , 
8, 4.81329, 0, 0, 0.529207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488463,-99) , 
10, 1.57008, 0, 0, 0.491918,-99) , 
11, -1.26687, 0, 0, 0.494931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464348,-99) , 
13, 2.30828, 0, 0, 0.482262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410343,-99) , 
6, 0.142837, 1, 0, 0.470598,-99) , 
12, 1.04261, 1, 0, 0.491093,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0404519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495511,-99) , 
10, 0.759813, 0, 0, 0.50325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467322,-99) , 
10, 0.437537, 1, 0, 0.479766,-99) , 
12, -0.216523, 1, 0, 0.492846,-99) , 
11, 0.325731, 0, 0, 0.494664,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0282736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43943,-99) , 
10, -1.72668, 0, 0, 0.49615,-99) , 
10, -0.569201, 0, 0, 0.519713,-99) , 
NN(
0, 
0, 
-1, 0.809477, 1, -1, 0.491404,-99) , 
12, -1.35811, 1, 0, 0.496477,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0422729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438385,-99) , 
12, -1.18165, 1, 0, 0.500659,-99) , 
10, 0.0134006, 0, 0, 0.516288,-99) , 
NN(
NN(
0, 
0, 
-1, -1.97408, 1, 1, 0.534649,-99) , 
NN(
0, 
0, 
-1, 0.755969, 0, -1, 0.49028,-99) , 
10, -0.14161, 1, 0, 0.496421,-99) , 
12, -0.843761, 1, 0, 0.502772,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0349787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489918,-99) , 
0, 0.494553, 1, 0, 0.512599,-99) , 
0, 0.503804, 0, 0, 0.524681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48512,-99) , 
3, 2.27508, 0, 0, 0.502467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473241,-99) , 
6, 0.660425, 1, 0, 0.482397,-99) , 
3, 7.47291, 1, 0, 0.497808,-99) , 
2, 0.0717925, 0, 0, 0.502797,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0342089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0230922, 0, 1, 0.542912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499744,-99) , 
0, 0.502535, 1, 0, 0.513282,-99) , 
12, -0.571865, 1, 0, 0.524785,-99) , 
NN(
NN(
0, 
0, 
-1, 0.880155, 0, 1, 0.509984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475201,-99) , 
10, 0.715101, 1, 0, 0.488486,-99) , 
11, -1.9407, 1, 0, 0.50176,-99) , 
0, 0.500948, 0, 0, 0.508061,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0251009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491045,-99) , 
0, 0.500944, 0, 0, 0.504969,-99) , 
12, 0.10275, 1, 0, 0.519587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545155,-99) , 
NN(
0, 
0, 
-1, 1.73642, 0, -1, 0.496492,-99) , 
0, 0.505708, 0, 0, 0.49892,-99) , 
10, 1.00004, 0, 0, 0.504732,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0450012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4775,-99) , 
12, 0.644308, 1, 0, 0.51862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429663,-99) , 
3, 9.42813, 0, 0, 0.469998,-99) , 
8, 10.0888, 1, 0, 0.513187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492942,-99) , 
10, -0.710349, 1, 0, 0.498944,-99) , 
NN(
0, 
0, 
-1, -0.587221, 1, -1, 0.440856,-99) , 
12, -1.02992, 0, 0, 0.490258,-99) , 
3, 4.03694, 0, 0, 0.503766,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0430588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07153, 1, 1, 0.549967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494998,-99) , 
10, 0.905066, 0, 0, 0.508699,-99) , 
12, -0.759292, 1, 0, 0.514395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499736,-99) , 
10, -1.50211, 1, 0, 0.510676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445252,-99) , 
12, -2.16834, 1, 0, 0.466287,-99) , 
8, 6.0685, 1, 0, 0.492308,-99) , 
10, -0.142291, 0, 0, 0.50668,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0254767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560526,-99) , 
NN(
NN(
0, 
0, 
-1, 6.1161, 0, 1, 0.512227,-99) , 
NN(
0, 
0, 
-1, 6.74448, 0, -1, 0.4903,-99) , 
13, 7.35949, 1, 0, 0.505421,-99) , 
3, 9.93082, 0, 0, 0.506873,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0427583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466422,-99) , 
8, 6.2987, 1, 0, 0.514229,-99) , 
12, 0.948627, 1, 0, 0.537833,-99) , 
NN(
NN(
0, 
0, 
-1, 0.740281, 0, 1, 0.512156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480218,-99) , 
10, 0.472571, 1, 0, 0.49746,-99) , 
12, -0.229838, 1, 0, 0.505831,-99) , 
10, 1.85703, 0, 0, 0.508868,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0310303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.589583, 1, 1, 0.508612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478771,-99) , 
5, 0.999524, 1, 0, 0.487731,-99) , 
11, -2.75897, 0, 0, 0.501633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449826,-99) , 
3, 1.5519, 0, 0, 0.500066,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0508772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473272,-99) , 
11, -3.26132, 0, 0, 0.556041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469032,-99) , 
10, 0.387825, 0, 0, 0.494446,-99) , 
12, -0.979277, 1, 0, 0.502093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448415,-99) , 
8, 1.88735, 0, 0, 0.513501,-99) , 
NN(
0, 
0, 
-1, -1.66107, 1, -1, 0.461278,-99) , 
8, 2.9499, 1, 0, 0.477391,-99) , 
10, -0.428524, 0, 0, 0.495629,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0254011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504061, 0, 1, 0.526772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492346,-99) , 
0, 0.506026, 1, 0, 0.51858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493489,-99) , 
12, -2.01371, 1, 0, 0.496365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442672,-99) , 
2, 0.20895, 1, 0, 0.493762,-99) , 
0, 0.502852, 0, 0, 0.497707,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0370491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.143471, 1, 1, 0.540293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446009,-99) , 
9, -951.287, 0, 0, 0.478702,-99) , 
10, 1.93618, 1, 0, 0.519672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486452,-99) , 
12, -1.01897, 1, 0, 0.495039,-99) , 
10, 1.8125, 0, 0, 0.497447,-99) , 
12, 1.01609, 0, 0, 0.501131,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0207524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.0495, 1, 1, 0.533967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483845,-99) , 
2, -0.112355, 0, 0, 0.503027,-99) , 
3, 8.93492, 0, 0, 0.505574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466174,-99) , 
2, 0.214156, 1, 0, 0.503588,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0298411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498432,-99) , 
8, 2.511, 1, 0, 0.503169,-99) , 
10, 1.52767, 0, 0, 0.5078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55706,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.475597,-99) , 
12, 0.529844, 1, 0, 0.485752,-99) , 
11, -1.39431, 1, 0, 0.50236,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0238156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547402,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498096, 1, 1, 0.537452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471318,-99) , 
11, -0.84697, 1, 0, 0.503554,-99) , 
11, -0.253745, 0, 0, 0.506294,-99) , 
3, 9.46631, 0, 0, 0.508286,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0439761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.643139, 0, 1, 0.515814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450913,-99) , 
13, 5.58946, 1, 0, 0.492662,-99) , 
12, -0.0927102, 1, 0, 0.505067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447821,-99) , 
6, 0.835565, 1, 0, 0.505525,-99) , 
NN(
0, 
0, 
-1, -1.20764, 1, -1, 0.4561,-99) , 
11, -2.37904, 0, 0, 0.477539,-99) , 
13, 8.96443, 1, 0, 0.500679,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0345984);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484606,-99) , 
6, -0.52336, 1, 0, 0.492073,-99) , 
NN(
0, 
0, 
-1, -0.931726, 1, -1, 0.466966,-99) , 
3, 1.90545, 0, 0, 0.489353,-99) , 
3, 9.9564, 0, 0, 0.49055,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0289288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495993,-99) , 
11, -1.41158, 0, 0, 0.500003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448106,-99) , 
11, -1.42587, 1, 0, 0.478825,-99) , 
10, 1.5715, 1, 0, 0.496989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447543,-99) , 
8, 1.73509, 0, 0, 0.495146,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0293394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487404,-99) , 
2, -0.0692183, 0, 0, 0.504536,-99) , 
10, 2.14082, 0, 0, 0.507475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463178,-99) , 
10, 0.193191, 0, 0, 0.497052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420749,-99) , 
10, 2.14579, 1, 0, 0.482101,-99) , 
11, -0.818939, 1, 0, 0.50385,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0193335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62073, 1, 1, 0.515539,-99) , 
NN(
0, 
0, 
-1, 6.68731, 1, -1, 0.495604,-99) , 
3, 6.69161, 0, 0, 0.501661,-99) , 
NN(
0, 
0, 
-1, -2.41031, 0, -1, 0.462442,-99) , 
8, 10.1707, 1, 0, 0.499179,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0178488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.96989, 0, 1, 0.50792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458648,-99) , 
5, 0.998571, 0, 0, 0.506441,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0414887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499644,-99) , 
11, -2.66905, 1, 0, 0.513482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485495,-99) , 
11, -2.20518, 0, 0, 0.497406,-99) , 
10, 0.0477042, 0, 0, 0.505775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532661,-99) , 
NN(
0, 
0, 
-1, 7.05244, 1, -1, 0.447687,-99) , 
11, -1.40749, 1, 0, 0.474964,-99) , 
10, 1.57142, 1, 0, 0.501651,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0552827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.51014, 1, 1, 0.538873,-99) , 
NN(
NN(
0, 
0, 
-1, -2.16059, 0, 1, 0.5147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355394,-99) , 
9, -1.29221, 0, 0, 0.495924,-99) , 
9, -9.14007, 1, 0, 0.504347,-99) , 
10, 2.1428, 0, 0, 0.506356,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0406804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46501,-99) , 
8, 1.70377, 0, 0, 0.519133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484579,-99) , 
8, 3.76587, 1, 0, 0.491376,-99) , 
11, -1.17411, 0, 0, 0.495459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52324,-99) , 
NN(
0, 
0, 
-1, -0.142581, 1, -1, 0.45098,-99) , 
11, -1.47185, 1, 0, 0.470642,-99) , 
10, 1.57141, 1, 0, 0.492076,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0453315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495339,-99) , 
12, -2.0731, 1, 0, 0.501275,-99) , 
6, -0.0215871, 1, 0, 0.506183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478378,-99) , 
11, -2.25588, 1, 0, 0.493974,-99) , 
NN(
0, 
0, 
-1, 3.67818, 1, -1, 0.439126,-99) , 
12, -1.03953, 0, 0, 0.484725,-99) , 
3, 4.51454, 0, 0, 0.49646,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0231068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463909,-99) , 
0, 0.506071, 1, 0, 0.504997,-99) , 
NN(
0, 
0, 
-1, 0.332736, 1, -1, 0.473259,-99) , 
0, 0.491424, 0, 0, 0.502177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449192,-99) , 
10, -1.57106, 0, 0, 0.499708,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0328107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.833277, 0, 1, 0.509945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483828,-99) , 
11, -1.80947, 1, 0, 0.500241,-99) , 
NN(
0, 
0, 
-1, 2.86981, 0, -1, 0.464852,-99) , 
6, -0.735437, 1, 0, 0.487932,-99) , 
3, 3.51958, 0, 0, 0.501993,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0292948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.75457, 1, 1, 0.527954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444878,-99) , 
3, 3.83905, 0, 0, 0.497773,-99) , 
6, -0.486989, 1, 0, 0.502098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473331,-99) , 
8, 2.17074, 0, 0, 0.493675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454154,-99) , 
12, 0.132693, 0, 0, 0.482743,-99) , 
3, 2.53464, 0, 0, 0.49751,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0168042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530249,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455822,-99) , 
8, 2.6996, 1, 0, 0.475617,-99) , 
10, -0.999875, 0, 0, 0.494497,-99) , 
3, 9.44719, 0, 0, 0.496174,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0193801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480443,-99) , 
8, 8.63858, 1, 0, 0.499033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452066,-99) , 
8, 5.90951, 0, 0, 0.46917,-99) , 
0, 0.504757, 1, 0, 0.496661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43968,-99) , 
5, 0.998571, 0, 0, 0.495027,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0397067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -950.08, 1, 1, 0.519819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475729,-99) , 
8, 2.43074, 0, 0, 0.510795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482356,-99) , 
11, -1.83759, 1, 0, 0.498407,-99) , 
NN(
0, 
0, 
-1, 3.16656, 0, -1, 0.481696,-99) , 
8, 3.04902, 1, 0, 0.486113,-99) , 
0, 0.494281, 1, 0, 0.491348,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.028407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501809, 1, 1, 0.523366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479506,-99) , 
10, -0.999845, 0, 0, 0.518016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539074,-99) , 
NN(
0, 
0, 
-1, 0.491406, 0, -1, 0.491963,-99) , 
0, 0.489384, 1, 0, 0.494305,-99) , 
0, 0.499995, 0, 0, 0.502457,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0263366);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97318, 1, 1, 0.509238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478036,-99) , 
0, 0.492377, 1, 0, 0.515402,-99) , 
NN(
0, 
0, 
-1, 4.06556, 0, -1, 0.476204,-99) , 
12, 0.234932, 0, 0, 0.4898,-99) , 
0, 0.494282, 0, 0, 0.505018,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0319533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467606,-99) , 
6, 0.923942, 1, 0, 0.531758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465891,-99) , 
0, 0.49428, 0, 0, 0.519305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524238,-99) , 
NN(
0, 
0, 
-1, -0.948214, 1, -1, 0.490318,-99) , 
11, -0.0149694, 0, 0, 0.492625,-99) , 
3, 7.95867, 0, 0, 0.497145,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.039773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.798807, 1, 1, 0.546167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4776,-99) , 
11, -2.52969, 0, 0, 0.496666,-99) , 
6, 0.383282, 1, 0, 0.50871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495441,-99) , 
11, -2.02347, 1, 0, 0.50677,-99) , 
NN(
0, 
0, 
-1, 2.69413, 0, -1, 0.484872,-99) , 
6, -0.752544, 1, 0, 0.49486,-99) , 
3, 5.00918, 0, 0, 0.501927,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0407775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.112215, 0, 1, 0.537191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453778,-99) , 
6, 0.863934, 1, 0, 0.497865,-99) , 
12, -0.485545, 1, 0, 0.51925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485094,-99) , 
5, 0.999987, 0, 0, 0.504108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434298,-99) , 
5, 0.999724, 0, 0, 0.500594,-99) , 
6, 0.714264, 0, 0, 0.504502,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0323908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476591,-99) , 
6, 0.863854, 1, 0, 0.501606,-99) , 
12, -0.748265, 1, 0, 0.525822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469444,-99) , 
10, -1.11013, 0, 0, 0.519518,-99) , 
NN(
0, 
0, 
-1, 0.637099, 1, -1, 0.493383,-99) , 
11, -3.34856, 1, 0, 0.497078,-99) , 
6, 0.809427, 0, 0, 0.500991,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0354114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56214, 1, 1, 0.509792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453511,-99) , 
11, -2.74772, 0, 0, 0.48678,-99) , 
8, 8.82516, 1, 0, 0.50603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518383,-99) , 
NN(
0, 
0, 
-1, 7.01254, 1, -1, 0.441414,-99) , 
11, -1.3495, 1, 0, 0.469164,-99) , 
10, 1.57134, 1, 0, 0.501135,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0302552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498305,-99) , 
12, 0.15352, 0, 0, 0.502912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468593,-99) , 
11, -1.8587, 1, 0, 0.488658,-99) , 
10, 1.00004, 1, 0, 0.498968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454003,-99) , 
0, 0.48952, 0, 0, 0.497249,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0257705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497009,-99) , 
11, -0.805849, 0, 0, 0.499044,-99) , 
8, 3.14448, 1, 0, 0.502119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46535,-99) , 
3, 1.71608, 0, 0, 0.497991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438378,-99) , 
12, -0.0970573, 0, 0, 0.483901,-99) , 
3, 2.56177, 0, 0, 0.49776,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0190204);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.546451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472586,-99) , 
12, 0.416023, 1, 0, 0.495314,-99) , 
12, 1.53177, 0, 0, 0.497842,-99) , 
10, 2.14274, 0, 0, 0.500568,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0446172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10662, 0, 1, 0.575782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499763,-99) , 
5, 0.999048, 1, 0, 0.507116,-99) , 
6, 0.575933, 1, 0, 0.519103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470509,-99) , 
10, -1.08716, 0, 0, 0.531794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472255,-99) , 
12, 0.278205, 0, 0, 0.4868,-99) , 
11, -3.25573, 1, 0, 0.493416,-99) , 
8, 7.6069, 0, 0, 0.501319,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0308232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492855,-99) , 
3, 3.18535, 0, 0, 0.506978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460816,-99) , 
8, 3.99279, 1, 0, 0.483558,-99) , 
0, 0.493329, 0, 0, 0.503133,-99) , 
3, 9.95797, 0, 0, 0.504502,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0236612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.74329, 1, 1, 0.508798,-99) , 
NN(
0, 
0, 
-1, -2.08869, 1, -1, 0.470473,-99) , 
0, 0.49088, 0, 0, 0.505906,-99) , 
NN(
0, 
0, 
-1, 3.59988, 0, -1, 0.471205,-99) , 
0, 0.504756, 1, 0, 0.503146,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0402141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433877,-99) , 
12, -0.517147, 1, 0, 0.504691,-99) , 
10, 0.676989, 0, 0, 0.511665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49689,-99) , 
11, -2.23156, 1, 0, 0.505601,-99) , 
NN(
0, 
0, 
-1, 0.930344, 0, -1, 0.473118,-99) , 
3, 5.01964, 1, 0, 0.493004,-99) , 
12, -0.323391, 1, 0, 0.502178,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0314819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472485,-99) , 
12, 0.406839, 1, 0, 0.532802,-99) , 
NN(
0, 
0, 
-1, -1.33632, 0, 1, 0.505266,-99) , 
10, 1.18803, 0, 0, 0.509104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472764,-99) , 
8, 2.16281, 0, 0, 0.491539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441859,-99) , 
6, 0.142837, 1, 0, 0.481868,-99) , 
12, 0.808574, 1, 0, 0.50365,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0223349);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492908,-99) , 
2, 0.217648, 0, 0, 0.494974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449319,-99) , 
6, 0.90466, 1, 0, 0.49324,-99) , 
3, 9.93906, 0, 0, 0.49475,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0225872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485617,-99) , 
6, 0.940998, 1, 0, 0.530856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524834,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.491914,-99) , 
11, -0.151982, 0, 0, 0.49429,-99) , 
6, 0.904714, 0, 0, 0.496329,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0417315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.481051, 1, 1, 0.521078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483714,-99) , 
6, -0.157559, 1, 0, 0.494113,-99) , 
10, 0.143086, 0, 0, 0.510077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489547,-99) , 
11, -2.60594, 1, 0, 0.498913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449027,-99) , 
8, 3.49092, 1, 0, 0.493935,-99) , 
3, 3.52162, 0, 0, 0.504178,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0371496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0118152, 0, 1, 0.545748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493949,-99) , 
0, 0.495231, 1, 0, 0.51366,-99) , 
9, -950.08, 0, 0, 0.53148,-99) , 
NN(
NN(
0, 
0, 
-1, 6.7961, 0, 1, 0.515697,-99) , 
NN(
0, 
0, 
-1, 0.917154, 1, -1, 0.486801,-99) , 
13, 7.35949, 1, 0, 0.506202,-99) , 
2, -0.0715937, 1, 0, 0.510808,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0177407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.55714, 0, 1, 0.537857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496246,-99) , 
12, -2.1819, 1, 0, 0.498542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45749,-99) , 
10, -1.77537, 0, 0, 0.497225,-99) , 
10, 2.14282, 0, 0, 0.49967,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0228106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.29013, 0, 1, 0.507751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463699,-99) , 
12, -0.482823, 1, 0, 0.486743,-99) , 
6, 0.714245, 1, 0, 0.50344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441177,-99) , 
10, -1.8552, 0, 0, 0.501783,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0295482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
12, -1.04506, 1, 0, 0.514854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472946,-99) , 
13, 6.26629, 1, 0, 0.496217,-99) , 
3, 7.47517, 0, 0, 0.500674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462143,-99) , 
1, -0.0108299, 0, 0, 0.499259,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0449772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48834,-99) , 
11, -2.44001, 1, 0, 0.501485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471243,-99) , 
12, -0.316414, 0, 0, 0.484096,-99) , 
10, -0.139969, 0, 0, 0.495953,-99) , 
11, -4.01102, 1, 0, 0.497433,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0549354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496772,-99) , 
10, -0.897934, 0, 0, 0.54447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402792,-99) , 
10, -0.333937, 0, 0, 0.505577,-99) , 
12, -1.60069, 1, 0, 0.512306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485891,-99) , 
11, -1.85829, 1, 0, 0.496165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450528,-99) , 
11, -3.5983, 1, 0, 0.464816,-99) , 
12, -0.440681, 0, 0, 0.486285,-99) , 
3, 4.51454, 0, 0, 0.500545,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0347618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482984,-99) , 
10, 0.598869, 0, 0, 0.573314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48763,-99) , 
10, 1.28573, 0, 0, 0.49999,-99) , 
12, -0.326765, 1, 0, 0.511137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496796,-99) , 
8, 7.43403, 0, 0, 0.502133,-99) , 
NN(
0, 
0, 
-1, -1.03909, 1, -1, 0.474705,-99) , 
6, 0.618915, 1, 0, 0.495414,-99) , 
10, 0.428612, 0, 0, 0.502669,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0361547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449295,-99) , 
12, -1.8344, 1, 0, 0.494784,-99) , 
10, -0.614985, 0, 0, 0.520354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496882,-99) , 
12, -0.95344, 1, 0, 0.503592,-99) , 
NN(
0, 
0, 
-1, 5.09621, 1, -1, 0.479975,-99) , 
10, -0.139216, 0, 0, 0.49846,-99) , 
12, -1.40817, 1, 0, 0.502132,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0583464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04747, 0, 1, 0.552971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495024,-99) , 
11, 0.0857138, 0, 0, 0.504377,-99) , 
10, 0.429478, 1, 0, 0.518389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472484,-99) , 
12, -0.368562, 1, 0, 0.536915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478048,-99) , 
8, 3.85208, 1, 0, 0.489641,-99) , 
10, 0.579002, 0, 0, 0.498854,-99) , 
11, -2.07046, 0, 0, 0.507537,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0264893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214084, 0, 1, 0.511789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437371,-99) , 
8, 10.8651, 1, 0, 0.509662,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0234743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497013,-99) , 
10, -1.62343, 0, 0, 0.541261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466966,-99) , 
5, 0.99966, 0, 0, 0.504315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44342,-99) , 
5, 0.998571, 0, 0, 0.502535,-99) , 
12, -2.06689, 1, 0, 0.504781,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0361337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.31448, 0, 1, 0.584353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472023,-99) , 
10, 0.0614222, 0, 0, 0.504016,-99) , 
12, -1.15613, 1, 0, 0.509608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533014,-99) , 
NN(
0, 
0, 
-1, 0.428417, 1, -1, 0.484413,-99) , 
12, -2.1613, 1, 0, 0.493581,-99) , 
10, -0.428352, 0, 0, 0.505468,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0307234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.374312, 1, 1, 0.586825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498888,-99) , 
12, -1.41068, 1, 0, 0.506732,-99) , 
6, -0.25481, 1, 0, 0.513746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497905,-99) , 
11, -2.20933, 1, 0, 0.506331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44886,-99) , 
12, -0.979252, 0, 0, 0.498429,-99) , 
3, 3.5412, 0, 0, 0.508105,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0510834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.31975, 0, 1, 0.549455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424428,-99) , 
3, 7.01547, 1, 0, 0.477273,-99) , 
10, 1.57304, 1, 0, 0.522596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484108,-99) , 
12, -1.32397, 1, 0, 0.494397,-99) , 
10, 1.52743, 0, 0, 0.498496,-99) , 
11, -1.39883, 0, 0, 0.504639,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0191539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.28076, 0, 1, 0.544525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495629,-99) , 
12, -0.0431373, 1, 0, 0.530414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499852,-99) , 
2, -0.185042, 1, 0, 0.502367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452876,-99) , 
5, 0.999524, 0, 0, 0.499995,-99) , 
3, 7.96672, 0, 0, 0.505175,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0355105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00439438, 1, 1, 0.51598,-99) , 
NN(
NN(
0, 
0, 
-1, 5.15326, 0, 1, 0.514838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435284,-99) , 
8, 8.68123, 0, 0, 0.471994,-99) , 
6, 0.428447, 1, 0, 0.501491,-99) , 
10, -0.428476, 0, 0, 0.5123,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0429241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18928, 0, 1, 0.580772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483048,-99) , 
10, 1.85734, 0, 0, 0.499715,-99) , 
12, 0.174022, 1, 0, 0.515223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493581,-99) , 
8, 3.39101, 0, 0, 0.516665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488568,-99) , 
1, -0.00599822, 1, 0, 0.493484,-99) , 
11, -1.99221, 0, 0, 0.499571,-99) , 
10, 1.00003, 0, 0, 0.503869,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0371539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.9056, 0, 1, 0.51546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430156,-99) , 
10, 2.1839, 1, 0, 0.487501,-99) , 
12, 1.26153, 1, 0, 0.511074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527201,-99) , 
NN(
0, 
0, 
-1, -1.62637, 1, -1, 0.478596,-99) , 
12, -0.78248, 0, 0, 0.488674,-99) , 
10, -0.428524, 0, 0, 0.505276,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0269988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488598,-99) , 
12, -0.0842009, 0, 0, 0.509937,-99) , 
2, 0.0591763, 0, 0, 0.519738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497135,-99) , 
3, 7.41131, 0, 0, 0.501667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463172,-99) , 
11, -1.9418, 0, 0, 0.483437,-99) , 
8, 8.91397, 1, 0, 0.498735,-99) , 
0, 0.503804, 0, 0, 0.501204,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0467812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59622, 0, 1, 0.600357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483851,-99) , 
12, -1.35669, 1, 0, 0.501283,-99) , 
10, 0.352366, 0, 0, 0.515635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49506,-99) , 
9, -951.286, 1, 0, 0.507856,-99) , 
NN(
0, 
0, 
-1, 1.14363, 0, -1, 0.456277,-99) , 
6, 0.714262, 1, 0, 0.499902,-99) , 
12, -0.428799, 1, 0, 0.50706,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0244137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499088,-99) , 
2, 0.0661466, 0, 0, 0.504407,-99) , 
0, 0.500312, 0, 0, 0.507685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489258,-99) , 
10, 0.154506, 1, 0, 0.519475,-99) , 
NN(
0, 
0, 
-1, 1.57477, 1, -1, 0.482293,-99) , 
0, 0.505391, 0, 0, 0.490211,-99) , 
0, 0.500947, 1, 0, 0.502892,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0195682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.22103, 1, 1, 0.508577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4469,-99) , 
10, -1.85693, 0, 0, 0.506907,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0489444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.777567, 1, 1, 0.52536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469112,-99) , 
12, -0.055045, 1, 0, 0.505157,-99) , 
12, 0.40148, 0, 0, 0.508632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435391,-99) , 
11, -0.878539, 1, 0, 0.514333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44492,-99) , 
12, 0.413794, 1, 0, 0.474005,-99) , 
10, 2.10203, 0, 0, 0.486268,-99) , 
10, 1.28572, 1, 0, 0.504178,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0122898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550686,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213808, 1, 1, 0.502621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459438,-99) , 
10, 1.91153, 1, 0, 0.500365,-99) , 
10, 2.42852, 0, 0, 0.502048,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0268895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
8, 6.90851, 1, 0, 0.538683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495036,-99) , 
12, -1.31434, 1, 0, 0.497697,-99) , 
11, -3.53398, 1, 0, 0.500664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436205,-99) , 
12, -1.96617, 0, 0, 0.474547,-99) , 
10, -1.28558, 0, 0, 0.498615,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0442151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0362429, 1, 1, 0.564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485442,-99) , 
8, 8.94609, 0, 0, 0.496603,-99) , 
11, -1.83455, 1, 0, 0.513593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49601,-99) , 
3, 6.40647, 0, 0, 0.50303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459316,-99) , 
11, -2.4134, 0, 0, 0.473054,-99) , 
13, 7.35949, 1, 0, 0.493907,-99) , 
10, 1.00001, 0, 0, 0.499333,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0469966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473603,-99) , 
10, 0.58978, 0, 0, 0.511992,-99) , 
12, -1.4051, 1, 0, 0.520749,-99) , 
NN(
NN(
0, 
0, 
-1, 2.69329, 0, 1, 0.515565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476935,-99) , 
3, 7.32274, 0, 0, 0.483775,-99) , 
8, 5.33441, 1, 0, 0.503575,-99) , 
3, 7.4888, 0, 0, 0.507562,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0323243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02971, 0, 1, 0.54047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495245,-99) , 
2, -0.0767712, 1, 0, 0.502802,-99) , 
10, 0.429566, 1, 0, 0.513564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498058,-99) , 
10, 0.740401, 0, 0, 0.506648,-99) , 
NN(
0, 
0, 
-1, -0.527538, 1, -1, 0.473729,-99) , 
13, 8.49925, 1, 0, 0.498696,-99) , 
11, -2.00879, 0, 0, 0.505022,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0417483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477143,-99) , 
5, 0.999524, 0, 0, 0.532438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495791,-99) , 
11, -1.9783, 0, 0, 0.504407,-99) , 
1, -0.000643858, 1, 0, 0.515856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498799,-99) , 
3, 2.04912, 1, 0, 0.515215,-99) , 
NN(
0, 
0, 
-1, -0.000716265, 0, -1, 0.476863,-99) , 
9, -949.507, 0, 0, 0.491149,-99) , 
3, 2.53464, 0, 0, 0.510016,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0252601);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.528189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487695,-99) , 
8, 10.2849, 1, 0, 0.524684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494916,-99) , 
0, 0.495237, 1, 0, 0.499812,-99) , 
3, 8.54448, 0, 0, 0.502891,-99) , 
6, -0.90476, 1, 0, 0.505687,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0265631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.87897, 0, 1, 0.529602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489027,-99) , 
8, 8.25136, 1, 0, 0.520033,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428534, 1, 1, 0.509085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475087,-99) , 
6, -0.951133, 1, 0, 0.487425,-99) , 
3, 2.03844, 0, 0, 0.505837,-99) , 
4, 4.23649, 0, 0, 0.508764,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0305418);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489386, 1, 1, 0.557469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495053,-99) , 
6, 0.809484, 0, 0, 0.544377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485,-99) , 
0, 0.501901, 1, 0, 0.502918,-99) , 
5, 0.999524, 1, 0, 0.506056,-99) , 
0, 0.490475, 1, 0, 0.509106,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0326032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497185,-99) , 
12, -0.478171, 1, 0, 0.508964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451701,-99) , 
10, -1.57099, 0, 0, 0.506556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47247,-99) , 
2, -0.010837, 0, 0, 0.493613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453169,-99) , 
2, 0.062709, 1, 0, 0.485542,-99) , 
3, 2.56043, 0, 0, 0.501559,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0177153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.51501, 1, 1, 0.550719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477165,-99) , 
8, 6.73941, 1, 0, 0.501842,-99) , 
0, 0.499992, 0, 0, 0.519879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446482,-99) , 
10, -1.77531, 0, 0, 0.498316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459189,-99) , 
10, 2.14281, 1, 0, 0.49634,-99) , 
2, -0.0710108, 1, 0, 0.500571,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0358165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.939659, 0, 1, 0.544159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491694,-99) , 
6, -0.0884423, 1, 0, 0.503162,-99) , 
12, -1.64749, 1, 0, 0.508392,-99) , 
NN(
0, 
0, 
-1, 1.89223, 1, -1, 0.473464,-99) , 
6, -0.904757, 0, 0, 0.50459,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0248742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499313,-99) , 
7, 0.00668259, 0, 0, 0.507725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466392,-99) , 
1, 0.0107092, 1, 0, 0.506115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402585,-99) , 
1, -0.012758, 0, 0, 0.503136,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0320379);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49673, 1, 1, 0.515298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494398,-99) , 
12, -0.590481, 1, 0, 0.502966,-99) , 
NN(
0, 
0, 
-1, -3.69039, 0, -1, 0.453534,-99) , 
10, -0.714175, 0, 0, 0.493915,-99) , 
0, 0.496186, 0, 0, 0.507944,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494878,-99) , 
3, 4.37324, 0, 0, 0.50499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44896,-99) , 
3, 1.54671, 0, 0, 0.503406,-99) , 
0, 0.505709, 0, 0, 0.504942,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0259907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.123155, 1, 1, 0.541915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496243,-99) , 
0, 0.506162, 1, 0, 0.527809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494387,-99) , 
8, 4.23541, 1, 0, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453131,-99) , 
8, 1.7699, 0, 0, 0.499681,-99) , 
0, 0.503804, 0, 0, 0.502942,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0311086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484387,-99) , 
10, 0.785098, 0, 0, 0.532819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497662,-99) , 
3, 4.37436, 0, 0, 0.514037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485924,-99) , 
8, 4.17114, 1, 0, 0.495487,-99) , 
0, 0.495233, 1, 0, 0.500473,-99) , 
6, 0.904735, 0, 0, 0.502289,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0419689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96997, 1, 1, 0.522018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431571,-99) , 
8, 9.68764, 1, 0, 0.46866,-99) , 
6, 0.854936, 1, 0, 0.512885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491659,-99) , 
11, -2.84993, 1, 0, 0.499096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42191,-99) , 
8, 4.59127, 1, 0, 0.494532,-99) , 
3, 4.52071, 0, 0, 0.504587,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0299139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08707, 0, 1, 0.548703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486022,-99) , 
10, -0.142655, 1, 0, 0.499436,-99) , 
2, -0.0750925, 1, 0, 0.50924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541327,-99) , 
NN(
0, 
0, 
-1, -0.142847, 0, -1, 0.489824,-99) , 
11, -4.1306, 1, 0, 0.491904,-99) , 
0, 0.500947, 0, 0, 0.496786,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0469565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482519,-99) , 
12, -0.921185, 1, 0, 0.559995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
6, -0.238104, 1, 0, 0.510339,-99) , 
11, -2.77004, 1, 0, 0.516751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497803,-99) , 
11, -1.49701, 1, 0, 0.531605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451827,-99) , 
13, 5.2612, 1, 0, 0.473761,-99) , 
11, -2.44929, 0, 0, 0.489002,-99) , 
10, -0.142776, 0, 0, 0.507017,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0385261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473524,-99) , 
3, 6.24566, 0, 0, 0.523416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466032,-99) , 
6, 0.942087, 1, 0, 0.520039,-99) , 
NN(
NN(
0, 
0, 
-1, 3.87959, 0, 1, 0.508588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410344,-99) , 
3, 4.6463, 0, 0, 0.476999,-99) , 
13, 4.60411, 1, 0, 0.500228,-99) , 
3, 5.99709, 0, 0, 0.508745,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0325155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618052, 1, 1, 0.541269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471666,-99) , 
2, -0.137498, 0, 0, 0.498108,-99) , 
3, 5.94708, 0, 0, 0.516843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470311,-99) , 
11, -3.1462, 0, 0, 0.504637,-99) , 
NN(
0, 
0, 
-1, 6.82723, 1, -1, 0.490595,-99) , 
8, 7.61006, 0, 0, 0.494817,-99) , 
2, -0.0704645, 1, 0, 0.498791,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0298665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.687622, 0, 1, 0.512864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488937,-99) , 
2, 0.069202, 0, 0, 0.496791,-99) , 
0, 0.498091, 1, 0, 0.504751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443778,-99) , 
10, -1.85611, 0, 0, 0.503202,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0505741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.58437, 0, 1, 0.568649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449534,-99) , 
10, 0.918628, 0, 0, 0.495081,-99) , 
12, -0.31845, 1, 0, 0.506785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478874,-99) , 
11, -2.12805, 0, 0, 0.488214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431607,-99) , 
8, 1.72782, 0, 0, 0.485481,-99) , 
10, 0.428744, 0, 0, 0.495213,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0503161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51921, 0, 1, 0.519381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415536,-99) , 
10, 2.12305, 0, 0, 0.469458,-99) , 
12, 0.659878, 1, 0, 0.513618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489191,-99) , 
11, -0.984299, 1, 0, 0.508897,-99) , 
NN(
0, 
0, 
-1, -2.39606, 1, -1, 0.459687,-99) , 
12, 0.448483, 0, 0, 0.487262,-99) , 
3, 3.02771, 0, 0, 0.505504,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0266532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483683,-99) , 
11, -3.32811, 0, 0, 0.50243,-99) , 
8, 10.8707, 0, 0, 0.504221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479983,-99) , 
12, -0.265157, 0, 0, 0.500793,-99) , 
NN(
0, 
0, 
-1, -0.0395671, 0, -1, 0.45271,-99) , 
9, -951.286, 1, 0, 0.474329,-99) , 
0, 0.493329, 0, 0, 0.499262,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0347672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497518,-99) , 
0, 0.494282, 1, 0, 0.503091,-99) , 
5, 0.999048, 1, 0, 0.505328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447601,-99) , 
11, -1.15453, 1, 0, 0.505061,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.430275,-99) , 
10, 1.91152, 0, 0, 0.475203,-99) , 
10, 1.57137, 1, 0, 0.501213,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.043295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473084,-99) , 
12, -1.49342, 1, 0, 0.497135,-99) , 
10, 0.0266473, 0, 0, 0.513017,-99) , 
NN(
NN(
0, 
0, 
-1, -0.273017, 0, 1, 0.520533,-99) , 
NN(
0, 
0, 
-1, 0.41856, 0, -1, 0.486433,-99) , 
10, 0.146834, 1, 0, 0.493554,-99) , 
12, -0.81149, 1, 0, 0.499935,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0229549);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497073,-99) , 
0, 0.49809, 0, 0, 0.515936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492884,-99) , 
0, 0.490472, 1, 0, 0.494857,-99) , 
2, -0.0508227, 1, 0, 0.498633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464672,-99) , 
2, -0.213989, 0, 0, 0.496972,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0292424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47877,-99) , 
10, -0.714216, 0, 0, 0.504288,-99) , 
12, -2.42325, 1, 0, 0.506045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418904,-99) , 
1, 0.0124237, 1, 0, 0.503318,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0207172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.3123, 1, 1, 0.532917,-99) , 
NN(
NN(
0, 
0, 
-1, -1.34866, 1, 1, 0.508063,-99) , 
NN(
0, 
0, 
-1, 7.88953, 1, -1, 0.489212,-99) , 
0, 0.492513, 0, 0, 0.505422,-99) , 
0, 0.504756, 0, 0, 0.50757,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0377711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04446, 1, 1, 0.540113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446959,-99) , 
8, 4.57503, 1, 0, 0.505425,-99) , 
3, 4.72972, 0, 0, 0.510988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493992,-99) , 
10, 0.932343, 0, 0, 0.504228,-99) , 
NN(
0, 
0, 
-1, 1.44882, 0, -1, 0.475222,-99) , 
12, -0.00661317, 1, 0, 0.4962,-99) , 
6, 0.238083, 1, 0, 0.504458,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0505593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480389,-99) , 
9, 0.326485, 0, 0, 0.509188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488866,-99) , 
0, 0.491425, 1, 0, 0.494063,-99) , 
9, -949.507, 0, 0, 0.502321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469888,-99) , 
6, 0.904713, 1, 0, 0.500694,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0218404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.06324, 1, 1, 0.569034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44974,-99) , 
3, 5.17254, 0, 0, 0.533246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459786,-99) , 
10, -0.618941, 0, 0, 0.497291,-99) , 
10, -0.999874, 1, 0, 0.499524,-99) , 
12, -1.83647, 1, 0, 0.50256,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0405692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10342, 1, 1, 0.582162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468385,-99) , 
12, -1.44153, 1, 0, 0.509159,-99) , 
10, -0.230994, 0, 0, 0.524921,-99) , 
NN(
NN(
0, 
0, 
-1, 7.21596, 0, 1, 0.508012,-99) , 
NN(
0, 
0, 
-1, -2.50679, 0, -1, 0.476383,-99) , 
13, 7.37649, 1, 0, 0.499193,-99) , 
12, -0.949833, 1, 0, 0.506549,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0256687);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493122,-99) , 
3, 6.07057, 0, 0, 0.50012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438461,-99) , 
11, -2.5987, 0, 0, 0.474611,-99) , 
8, 9.146, 1, 0, 0.497241,-99) , 
3, 9.94587, 0, 0, 0.498088,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0240008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490615,-99) , 
11, -2.55925, 1, 0, 0.508248,-99) , 
0, 0.494282, 1, 0, 0.520545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496041,-99) , 
11, -3.85758, 1, 0, 0.498247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450941,-99) , 
10, -1.57126, 0, 0, 0.49593,-99) , 
2, 0.0702233, 0, 0, 0.500607,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0216638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.417056, 1, 1, 0.516316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448225,-99) , 
5, 0.999932, 0, 0, 0.496255,-99) , 
3, 6.00648, 0, 0, 0.504304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452282,-99) , 
5, 0.998572, 0, 0, 0.502781,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0369152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.544705, 0, 1, 0.513861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477148,-99) , 
13, 6.66215, 1, 0, 0.498117,-99) , 
12, -0.440282, 1, 0, 0.503628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478747,-99) , 
12, -1.8632, 1, 0, 0.507231,-99) , 
NN(
0, 
0, 
-1, 0.0489181, 0, -1, 0.428767,-99) , 
10, -1.25559, 0, 0, 0.480111,-99) , 
11, -3.32011, 0, 0, 0.499886,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.024888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578539,-99) , 
NN(
NN(
0, 
0, 
-1, 0.142999, 1, 1, 0.517249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479857,-99) , 
6, 0.42844, 1, 0, 0.494891,-99) , 
10, 0.999946, 0, 0, 0.501059,-99) , 
3, 9.95556, 0, 0, 0.503103,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0386847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462565,-99) , 
10, -0.681663, 0, 0, 0.50951,-99) , 
12, -2.24725, 1, 0, 0.514013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478875,-99) , 
3, 2.7581, 0, 0, 0.491494,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.465596,-99) , 
4, 4.27758, 1, 0, 0.486725,-99) , 
3, 5.50318, 0, 0, 0.499563,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.023851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550614,-99) , 
NN(
0, 
0, 
-1, 0.904714, 1, -1, 0.489093,-99) , 
12, -2.49107, 1, 0, 0.490666,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0451927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.541126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475111,-99) , 
12, -0.0966406, 1, 0, 0.520881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491433,-99) , 
11, -0.822944, 1, 0, 0.505072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479224,-99) , 
11, -1.29817, 0, 0, 0.481878,-99) , 
12, 0.808574, 0, 0, 0.487004,-99) , 
3, 7.97638, 0, 0, 0.492601,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0241786);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498893,-99) , 
3, 4.38799, 0, 0, 0.509244,-99) , 
NN(
0, 
0, 
-1, 6.26056, 0, -1, 0.489325,-99) , 
13, 6.28329, 1, 0, 0.50089,-99) , 
3, 9.92925, 0, 0, 0.502389,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0234021);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578391,-99) , 
NN(
NN(
0, 
0, 
-1, 1.74361, 1, 1, 0.506482,-99) , 
NN(
0, 
0, 
-1, -0.416467, 0, -1, 0.476173,-99) , 
0, 0.493329, 0, 0, 0.501492,-99) , 
11, -4.14985, 1, 0, 0.504121,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0407943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464792,-99) , 
12, -0.0690458, 1, 0, 0.503422,-99) , 
10, 1.25059, 0, 0, 0.508485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475317,-99) , 
8, 2.16944, 0, 0, 0.501715,-99) , 
NN(
0, 
0, 
-1, 1.92384, 0, -1, 0.472652,-99) , 
6, -0.42861, 1, 0, 0.491267,-99) , 
12, 0.379509, 1, 0, 0.503394,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0370425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.519135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478621,-99) , 
10, 0.428381, 1, 0, 0.498193,-99) , 
3, 6.00003, 0, 0, 0.506805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493191,-99) , 
10, 0.721722, 0, 0, 0.510518,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.476454,-99) , 
0, 0.50095, 0, 0, 0.487104,-99) , 
4, 4.01646, 1, 0, 0.502328,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0395054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493638,-99) , 
12, -0.56953, 1, 0, 0.500742,-99) , 
11, 0.1368, 0, 0, 0.505374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484492,-99) , 
3, 5.87897, 0, 0, 0.49091,-99) , 
NN(
0, 
0, 
-1, -1.5304, 1, -1, 0.462313,-99) , 
6, 0.42845, 1, 0, 0.48164,-99) , 
10, 0.142913, 0, 0, 0.494821,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0226804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497217,-99) , 
9, -951.287, 0, 0, 0.536558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488151,-99) , 
3, 3.05062, 0, 0, 0.500828,-99) , 
0, 0.48952, 1, 0, 0.502429,-99) , 
10, 2.14273, 0, 0, 0.504366,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0272434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493065,-99) , 
2, -0.0692183, 0, 0, 0.51437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492117,-99) , 
2, -0.0821376, 1, 0, 0.495689,-99) , 
4, 3.38827, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456927,-99) , 
6, 0.904705, 1, 0, 0.498929,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0274289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.3155, 1, 1, 0.532273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499916,-99) , 
12, -1.71975, 1, 0, 0.503965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460537,-99) , 
10, -1.28537, 0, 0, 0.500951,-99) , 
8, 3.04546, 1, 0, 0.509651,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0326251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499963,-99) , 
3, 4.28938, 0, 0, 0.507308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47729,-99) , 
11, -1.99546, 0, 0, 0.491352,-99) , 
8, 5.58679, 1, 0, 0.499624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457898,-99) , 
5, 0.999048, 0, 0, 0.497761,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0439977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.94589, 1, 1, 0.572797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
12, 0.0188819, 1, 0, 0.507955,-99) , 
11, -2.35, 1, 0, 0.518439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480539,-99) , 
10, -0.897934, 0, 0, 0.519247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477349,-99) , 
6, -0.142871, 1, 0, 0.496094,-99) , 
12, -1.62478, 1, 0, 0.501333,-99) , 
10, 0.428622, 0, 0, 0.509237,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0349161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497138,-99) , 
10, 0.889754, 0, 0, 0.558055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45606,-99) , 
11, -1.98079, 0, 0, 0.512733,-99) , 
12, -0.00158503, 1, 0, 0.522389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497181,-99) , 
11, -2.03907, 0, 0, 0.503603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459434,-99) , 
8, 1.76598, 0, 0, 0.501215,-99) , 
10, 0.714726, 0, 0, 0.508945,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0563896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.19678, 1, 1, 0.545255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452911,-99) , 
13, 6.83919, 1, 0, 0.513315,-99) , 
3, 6.89016, 0, 0, 0.517709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47191,-99) , 
0, 0.498092, 1, 0, 0.523051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46704,-99) , 
12, -1.96038, 1, 0, 0.478821,-99) , 
11, -1.97351, 0, 0, 0.491737,-99) , 
13, 8.19333, 1, 0, 0.511641,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0283669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.447594, 0, 1, 0.524977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444698,-99) , 
5, 0.999048, 0, 0, 0.503186,-99) , 
12, -1.22639, 1, 0, 0.508455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515718,-99) , 
NN(
0, 
0, 
-1, 0.149066, 1, -1, 0.470888,-99) , 
13, 1.74086, 1, 0, 0.484894,-99) , 
3, 2.04135, 0, 0, 0.505146,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0270131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.48835, 0, 1, 0.521627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498459,-99) , 
10, 0.918454, 0, 0, 0.503848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453863,-99) , 
11, -1.44474, 1, 0, 0.484468,-99) , 
10, 1.57147, 1, 0, 0.501234,-99) , 
0, 0.502852, 0, 0, 0.504506,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0323339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547584,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0951315, 0, 1, 0.511615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484192,-99) , 
10, -0.156708, 1, 0, 0.488337,-99) , 
12, -0.741388, 1, 0, 0.496818,-99) , 
8, 1.73689, 1, 0, 0.498926,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.056352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485365,-99) , 
12, -0.394022, 1, 0, 0.543001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489215,-99) , 
11, -0.859891, 0, 0, 0.501536,-99) , 
11, -2.19829, 1, 0, 0.511264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491479,-99) , 
10, -0.442877, 0, 0, 0.514516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473562,-99) , 
10, -0.714086, 1, 0, 0.485421,-99) , 
12, -1.21661, 1, 0, 0.496844,-99) , 
10, 0.428622, 0, 0, 0.503455,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.029354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474412,-99) , 
6, -0.935739, 1, 0, 0.511671,-99) , 
3, 1.85287, 0, 0, 0.525797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491696,-99) , 
0, 0.501901, 1, 0, 0.517898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483727,-99) , 
3, 4.72662, 0, 0, 0.494635,-99) , 
4, 4.23371, 0, 0, 0.499547,-99) , 
3, 2.04135, 1, 0, 0.50339,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0317974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563879,-99) , 
NN(
NN(
0, 
0, 
-1, -0.887955, 1, 1, 0.508389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473059,-99) , 
11, -2.55607, 0, 0, 0.490058,-99) , 
10, -0.13925, 0, 0, 0.502335,-99) , 
11, -4.25345, 1, 0, 0.504157,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0281369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562486,-99) , 
NN(
NN(
0, 
0, 
-1, -1.15749, 1, 1, 0.514389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446275,-99) , 
8, 9.82226, 1, 0, 0.498837,-99) , 
0, 0.496186, 0, 0, 0.509039,-99) , 
11, 0.333311, 0, 0, 0.511256,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0339993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494995,-99) , 
12, -0.487867, 1, 0, 0.505663,-99) , 
10, 2.13056, 0, 0, 0.508275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474135,-99) , 
3, 2.01581, 0, 0, 0.493012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414199,-99) , 
10, 2.14487, 1, 0, 0.476883,-99) , 
11, -0.90616, 1, 0, 0.50346,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0400258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.31648, 1, 1, 0.545777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440905,-99) , 
6, -0.743432, 1, 0, 0.496271,-99) , 
3, 2.81266, 0, 0, 0.505863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491103,-99) , 
6, 0.394312, 1, 0, 0.497141,-99) , 
NN(
0, 
0, 
-1, 5.6843, 1, -1, 0.47059,-99) , 
3, 5.67675, 0, 0, 0.488946,-99) , 
8, 3.69358, 1, 0, 0.494897,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0373704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85754, 0, 1, 0.520169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475515,-99) , 
6, 0.0203606, 1, 0, 0.504018,-99) , 
6, 0.42854, 0, 0, 0.510252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486375,-99) , 
8, 5.80204, 1, 0, 0.516176,-99) , 
NN(
0, 
0, 
-1, -1.50826, 1, -1, 0.480821,-99) , 
11, -2.82659, 1, 0, 0.490978,-99) , 
0, 0.500947, 1, 0, 0.504989,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0230051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499953,-99) , 
12, -1.37934, 1, 0, 0.504759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471544,-99) , 
12, -1.58303, 0, 0, 0.485125,-99) , 
10, -0.713517, 0, 0, 0.501398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507994,-99) , 
NN(
0, 
0, 
-1, 1.7871, 0, -1, 0.464952,-99) , 
6, -0.965239, 1, 0, 0.477432,-99) , 
3, 2.04671, 0, 0, 0.497968,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0330906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492738,-99) , 
10, 0.714342, 0, 0, 0.501979,-99) , 
8, 3.14181, 1, 0, 0.505225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509807,-99) , 
NN(
0, 
0, 
-1, 0.914765, 0, -1, 0.468513,-99) , 
11, -1.8978, 1, 0, 0.47863,-99) , 
3, 2.5589, 0, 0, 0.498866,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0491565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.268975, 0, 1, 0.53592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379012,-99) , 
10, 0.274823, 0, 0, 0.497151,-99) , 
12, -0.976954, 1, 0, 0.51153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488047,-99) , 
3, 3.9286, 0, 0, 0.494412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443246,-99) , 
8, 4.8207, 1, 0, 0.489344,-99) , 
3, 5.02252, 0, 0, 0.500561,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0219122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496159,-99) , 
10, -1.4564, 0, 0, 0.537016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442982,-99) , 
10, -0.876951, 0, 0, 0.500704,-99) , 
10, -1.2854, 1, 0, 0.502805,-99) , 
12, -2.02636, 1, 0, 0.504927,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0251232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488013,-99) , 
0, 0.498089, 1, 0, 0.538295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492323,-99) , 
2, -0.0307299, 1, 0, 0.497831,-99) , 
10, 2.14286, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457093,-99) , 
2, 0.214156, 1, 0, 0.49815,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0370699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493777,-99) , 
8, 3.86839, 1, 0, 0.542526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46171,-99) , 
2, -0.071805, 0, 0, 0.49994,-99) , 
3, 2.93032, 0, 0, 0.511306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489812,-99) , 
11, -1.30943, 0, 0, 0.493896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442679,-99) , 
12, 0.907778, 1, 0, 0.490452,-99) , 
8, 4.33505, 1, 0, 0.498895,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0244343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.796049, 1, 1, 0.549116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447212,-99) , 
13, 8.88435, 1, 0, 0.503608,-99) , 
3, 8.29522, 0, 0, 0.506281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447469,-99) , 
6, 0.8657, 1, 0, 0.484666,-99) , 
13, 9.70667, 1, 0, 0.504206,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0404598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468498,-99) , 
12, -1.85763, 1, 0, 0.513927,-99) , 
10, -0.618011, 0, 0, 0.530406,-99) , 
NN(
NN(
0, 
0, 
-1, 0.437396, 0, 1, 0.526031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481715,-99) , 
0, 0.500131, 0, 0, 0.490695,-99) , 
0, 0.493329, 1, 0, 0.496584,-99) , 
12, -1.43506, 1, 0, 0.501988,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0146443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499031,-99) , 
12, -1.5188, 1, 0, 0.503053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463202,-99) , 
10, -1.70706, 0, 0, 0.501538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447044,-99) , 
10, 2.42855, 1, 0, 0.499972,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.048473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463812,-99) , 
12, -0.600955, 1, 0, 0.503289,-99) , 
10, 0.740833, 0, 0, 0.511579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488902,-99) , 
13, 2.15727, 0, 0, 0.51272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478417,-99) , 
11, -0.221908, 0, 0, 0.486146,-99) , 
10, 0.721149, 1, 0, 0.494547,-99) , 
12, -0.208662, 1, 0, 0.503446,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0299807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492631,-99) , 
1, 0.00243049, 0, 0, 0.50436,-99) , 
NN(
0, 
0, 
-1, 0.428541, 1, -1, 0.48832,-99) , 
10, 0.14287, 0, 0, 0.497146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455567,-99) , 
12, 2.11274, 1, 0, 0.495329,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0404865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05904, 0, 1, 0.515521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451532,-99) , 
10, 1.88399, 0, 0, 0.484552,-99) , 
12, 0.306411, 1, 0, 0.509684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490287,-99) , 
3, 2.82852, 0, 0, 0.499895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443259,-99) , 
13, 3.31374, 1, 0, 0.491008,-99) , 
3, 3.5359, 0, 0, 0.502814,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0177502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490622,-99) , 
13, 1.79604, 1, 0, 0.519924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477258,-99) , 
11, -3.31344, 0, 0, 0.498381,-99) , 
11, -4.07147, 1, 0, 0.500337,-99) , 
6, -0.904749, 1, 0, 0.50252,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0314532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486476,-99) , 
3, 9.73578, 0, 0, 0.509705,-99) , 
6, 0.775379, 1, 0, 0.528997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482505,-99) , 
8, 7.88696, 1, 0, 0.504624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448872,-99) , 
11, -1.15651, 1, 0, 0.471242,-99) , 
10, 1.8571, 1, 0, 0.50174,-99) , 
3, 8.46494, 0, 0, 0.504879,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.028749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490915,-99) , 
11, -1.867, 1, 0, 0.51163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49311,-99) , 
11, -4.2753, 1, 0, 0.495491,-99) , 
10, 1.00001, 0, 0, 0.499841,-99) , 
NN(
0, 
0, 
-1, 9.64371, 0, -1, 0.467536,-99) , 
8, 10.2179, 1, 0, 0.497998,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0423439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491839,-99) , 
10, -0.22477, 0, 0, 0.552492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422963,-99) , 
11, -2.78486, 0, 0, 0.499069,-99) , 
12, -0.956578, 1, 0, 0.505816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527086,-99) , 
NN(
0, 
0, 
-1, -0.795818, 0, -1, 0.467726,-99) , 
12, -0.780699, 0, 0, 0.479778,-99) , 
10, -0.428446, 0, 0, 0.499105,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0366929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482713,-99) , 
5, 0.99998, 0, 0, 0.505402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4443,-99) , 
5, 0.999585, 0, 0, 0.503002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512825,-99) , 
NN(
0, 
0, 
-1, 0.999955, 1, -1, 0.467764,-99) , 
5, 0.999524, 1, 0, 0.478853,-99) , 
6, 0.714245, 1, 0, 0.498054,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0186208);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.437521, 0, 1, 0.535319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4956,-99) , 
12, 1.37907, 0, 0, 0.498537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44719,-99) , 
10, 2.42839, 1, 0, 0.497091,-99) , 
2, 0.20717, 0, 0, 0.499195,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0323228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488915,-99) , 
10, 1.00086, 0, 0, 0.508888,-99) , 
6, 0.775379, 1, 0, 0.527746,-99) , 
NN(
NN(
0, 
0, 
-1, 3.30949, 0, 1, 0.517115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433919,-99) , 
3, 4.32803, 0, 0, 0.494509,-99) , 
8, 4.0158, 1, 0, 0.504183,-99) , 
3, 8.46663, 0, 0, 0.506933,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0342245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479811,-99) , 
3, 5.00915, 0, 0, 0.502648,-99) , 
10, 0.0525615, 0, 0, 0.514769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559845,-99) , 
NN(
0, 
0, 
-1, -2.64286, 0, -1, 0.491002,-99) , 
10, -0.709497, 1, 0, 0.494909,-99) , 
12, -0.81149, 1, 0, 0.501408,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0387854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464322,-99) , 
12, -1.33651, 1, 0, 0.52905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
12, -0.859216, 1, 0, 0.500646,-99) , 
11, -3.09048, 1, 0, 0.504014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471915,-99) , 
9, -949.507, 0, 0, 0.500119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424794,-99) , 
12, -2.29503, 1, 0, 0.462296,-99) , 
13, 5.3039, 1, 0, 0.483037,-99) , 
10, -0.71421, 0, 0, 0.500159,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0274287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.96993, 0, 1, 0.512084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454416,-99) , 
10, 0.712618, 1, 0, 0.48967,-99) , 
8, 2.40541, 0, 0, 0.508024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449562,-99) , 
5, 0.998572, 0, 0, 0.506259,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.016351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498484,-99) , 
3, 8.41771, 0, 0, 0.501704,-99) , 
12, -2.41305, 1, 0, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426724,-99) , 
1, 0.0124237, 1, 0, 0.501072,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0203031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499171,-99) , 
3, 7.47656, 0, 0, 0.503641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41423,-99) , 
5, 0.998572, 0, 0, 0.501101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400944,-99) , 
1, -0.0122449, 0, 0, 0.497921,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0339097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497879,-99) , 
3, 3.24322, 0, 0, 0.511978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478163,-99) , 
11, -2.46376, 0, 0, 0.493503,-99) , 
8, 5.62769, 1, 0, 0.502889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453387,-99) , 
2, 0.214084, 1, 0, 0.500417,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0183066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474528,-99) , 
13, 7.64859, 1, 0, 0.542976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467971,-99) , 
3, 8.94395, 1, 0, 0.497606,-99) , 
11, -3.58461, 1, 0, 0.500579,-99) , 
NN(
0, 
0, 
-1, -0.14293, 1, -1, 0.464326,-99) , 
10, -1.28535, 0, 0, 0.497728,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0351905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495545,-99) , 
2, -0.0778028, 1, 0, 0.508865,-99) , 
2, 0.0717925, 0, 0, 0.517107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486163,-99) , 
11, -2.23004, 1, 0, 0.501175,-99) , 
NN(
0, 
0, 
-1, 0.493419, 0, -1, 0.487945,-99) , 
10, 0.428734, 0, 0, 0.493948,-99) , 
0, 0.502852, 0, 0, 0.497622,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0354737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50348, 0, 1, 0.517174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472159,-99) , 
10, 1.29222, 1, 0, 0.49441,-99) , 
11, -1.42939, 1, 0, 0.5114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495509,-99) , 
0, 0.490472, 1, 0, 0.50546,-99) , 
NN(
0, 
0, 
-1, 0.490065, 0, -1, 0.479001,-99) , 
10, 0.142923, 1, 0, 0.490904,-99) , 
0, 0.496186, 0, 0, 0.504345,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0428471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485258,-99) , 
2, -0.0821376, 0, 0, 0.526653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479518,-99) , 
12, 0.327372, 0, 0, 0.49813,-99) , 
0, 0.499995, 1, 0, 0.516015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488374,-99) , 
12, -1.37314, 1, 0, 0.496013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420168,-99) , 
3, 4.41759, 0, 0, 0.490699,-99) , 
8, 4.31436, 1, 0, 0.500891,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0438772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43578,-99) , 
6, 0.714227, 1, 0, 0.501471,-99) , 
12, 0.459908, 1, 0, 0.52006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494211,-99) , 
3, 4.2217, 0, 0, 0.499881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475256,-99) , 
11, -2.0662, 0, 0, 0.484405,-99) , 
8, 5.49803, 1, 0, 0.492401,-99) , 
10, 1.28571, 0, 0, 0.497914,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0442592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.088349, 0, 1, 0.536246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455022,-99) , 
6, -0.879221, 1, 0, 0.501738,-99) , 
3, 2.23823, 0, 0, 0.514916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499115,-99) , 
10, 0.7666, 0, 0, 0.508419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459698,-99) , 
10, 2.16834, 0, 0, 0.476622,-99) , 
12, 0.0614835, 1, 0, 0.499726,-99) , 
6, -0.619048, 1, 0, 0.504344,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0328852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12545, 1, 1, 0.520878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489852,-99) , 
12, -0.333176, 1, 0, 0.503628,-99) , 
6, -0.428498, 1, 0, 0.508276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448136,-99) , 
10, 0.13968, 0, 0, 0.47377,-99) , 
3, 1.85838, 0, 0, 0.487471,-99) , 
3, 2.04671, 0, 0, 0.505293,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0421279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35581, 0, 1, 0.54353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472446,-99) , 
13, 6.66301, 1, 0, 0.501413,-99) , 
11, -1.97724, 0, 0, 0.519669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459014,-99) , 
12, 1.69651, 1, 0, 0.504214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461236,-99) , 
0, 0.497222, 1, 0, 0.483337,-99) , 
0, 0.498363, 0, 0, 0.49861,-99) , 
0, 0.496186, 1, 0, 0.505852,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.023963);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.683282, 1, 1, 0.52753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493981,-99) , 
12, 0.172426, 1, 0, 0.507503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474872,-99) , 
6, 0.428474, 1, 0, 0.493087,-99) , 
10, 0.428659, 0, 0, 0.499558,-99) , 
3, 8.95866, 0, 0, 0.501726,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0207536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425585,-99) , 
1, 0.0122829, 1, 0, 0.501237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441321,-99) , 
1, -0.0109309, 0, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423569,-99) , 
8, 1.7425, 0, 0, 0.496203,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0371844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.10538, 1, 1, 0.54849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460482,-99) , 
3, 5.11964, 0, 0, 0.503728,-99) , 
6, -0.157559, 1, 0, 0.509737,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471526,-99) , 
12, 0.0262208, 0, 0, 0.499342,-99) , 
NN(
0, 
0, 
-1, 3.00596, 0, -1, 0.459614,-99) , 
13, 2.95013, 1, 0, 0.488516,-99) , 
3, 3.52252, 0, 0, 0.501944,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0283536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00431195, 1, 1, 0.510455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467532,-99) , 
12, 0.0870395, 0, 0, 0.491993,-99) , 
3, 2.67235, 0, 0, 0.505108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457685,-99) , 
6, 0.782782, 1, 0, 0.495038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435504,-99) , 
6, 0.883, 1, 0, 0.473198,-99) , 
8, 9.56224, 1, 0, 0.501878,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0184129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495103,-99) , 
10, -1.56912, 1, 0, 0.497224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446258,-99) , 
8, 1.66857, 0, 0, 0.495701,-99) , 
3, 9.94993, 0, 0, 0.497228,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0356486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492598,-99) , 
11, -1.84057, 1, 0, 0.511598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487942,-99) , 
12, 0.384751, 0, 0, 0.494577,-99) , 
10, 1.00006, 0, 0, 0.499235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456759,-99) , 
8, 10.8717, 1, 0, 0.497887,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.028247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.518769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485669,-99) , 
0, 0.497138, 1, 0, 0.495083,-99) , 
4, 4.1607, 0, 0, 0.4995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441109,-99) , 
4, 8.62065, 1, 0, 0.498014,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0400359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.6537, 1, 1, 0.526704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455681,-99) , 
10, -0.136297, 0, 0, 0.497734,-99) , 
11, -1.91391, 1, 0, 0.51099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487682,-99) , 
11, -1.41743, 0, 0, 0.493514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425175,-99) , 
10, -1.28484, 0, 0, 0.488938,-99) , 
6, -0.142866, 1, 0, 0.498919,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0298338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6216, 1, 1, 0.511106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469279,-99) , 
6, -0.948964, 1, 0, 0.486314,-99) , 
8, 2.41479, 0, 0, 0.506655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453883,-99) , 
10, -1.8567, 0, 0, 0.505156,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0265163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470431,-99) , 
11, -1.91157, 0, 0, 0.499696,-99) , 
12, -1.0619, 1, 0, 0.515946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492058,-99) , 
5, 0.999955, 1, 0, 0.496099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438121,-99) , 
5, 0.999048, 0, 0, 0.494244,-99) , 
8, 9.55955, 0, 0, 0.496448,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0314946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481993,-99) , 
10, 1.86502, 1, 0, 0.539124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495246,-99) , 
10, 1.84612, 0, 0, 0.497901,-99) , 
11, -1.18077, 0, 0, 0.502188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519168,-99) , 
NN(
0, 
0, 
-1, 1.47055, 0, -1, 0.462748,-99) , 
10, -0.429655, 1, 0, 0.481089,-99) , 
8, 2.39446, 0, 0, 0.498509,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.042124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.306001, 1, 1, 0.58733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496938,-99) , 
8, 3.25875, 1, 0, 0.505461,-99) , 
10, 0.636386, 0, 0, 0.515486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492466,-99) , 
12, -0.115293, 1, 0, 0.509296,-99) , 
NN(
0, 
0, 
-1, 0.475983, 0, -1, 0.477016,-99) , 
8, 3.04546, 0, 0, 0.494866,-99) , 
11, -2.23366, 1, 0, 0.505099,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0336725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.11695, 1, 1, 0.543321,-99) , 
NN(
NN(
0, 
0, 
-1, 1.29049, 0, 1, 0.514065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488104,-99) , 
11, -1.5564, 1, 0, 0.49509,-99) , 
12, 0.422538, 1, 0, 0.508719,-99) , 
1, 0.00682455, 0, 0, 0.511506,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0293578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.88277, 1, 1, 0.532538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430831,-99) , 
5, 0.999714, 0, 0, 0.500135,-99) , 
6, 0.618961, 0, 0, 0.505355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465542,-99) , 
10, 1.19289, 1, 0, 0.503879,-99) , 
NN(
0, 
0, 
-1, -1.20762, 1, -1, 0.459943,-99) , 
11, -2.53239, 0, 0, 0.482649,-99) , 
8, 8.91446, 1, 0, 0.501899,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0417362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.42738, 1, 1, 0.518035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489521,-99) , 
10, 0.714405, 0, 0, 0.501321,-99) , 
0, 0.499043, 1, 0, 0.510874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482691,-99) , 
10, -0.529034, 0, 0, 0.520053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451912,-99) , 
11, -0.935896, 0, 0, 0.470246,-99) , 
11, -2.71388, 1, 0, 0.486618,-99) , 
2, -0.0714534, 0, 0, 0.506615,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.025957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477147,-99) , 
0, 0.502852, 1, 0, 0.499817,-99) , 
12, -2.28425, 1, 0, 0.501994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482389,-99) , 
0, 0.49333, 1, 0, 0.494286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438459,-99) , 
6, -0.61905, 0, 0, 0.477506,-99) , 
2, 0.0737786, 1, 0, 0.497671,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0248869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498773,-99) , 
0, 0.498033, 0, 0, 0.504555,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48771,-99) , 
0, 0.499135, 1, 0, 0.496885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436508,-99) , 
10, 0.139915, 0, 0, 0.475722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433995,-99) , 
6, 0.333337, 1, 0, 0.463547,-99) , 
0, 0.491425, 0, 0, 0.493966,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0343858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476938,-99) , 
6, 0.551001, 1, 0, 0.515768,-99) , 
6, 0.809502, 0, 0, 0.523925,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496458, 0, 1, 0.525936,-99) , 
NN(
0, 
0, 
-1, -1.94881, 0, -1, 0.487684,-99) , 
3, 8.97288, 0, 0, 0.490741,-99) , 
0, 0.501899, 0, 0, 0.497982,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0225453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428634, 1, 1, 0.522464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455158,-99) , 
10, -1.57046, 0, 0, 0.501687,-99) , 
0, 0.500539, 0, 0, 0.507217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473505,-99) , 
0, 0.505709, 1, 0, 0.505503,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0280176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496186,-99) , 
12, -1.51931, 1, 0, 0.501353,-99) , 
12, 1.09195, 0, 0, 0.503546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473061,-99) , 
12, 1.34262, 1, 0, 0.490775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402128,-99) , 
10, 2.14645, 1, 0, 0.474192,-99) , 
11, -0.818939, 1, 0, 0.499485,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0397622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453676,-99) , 
12, -0.347926, 0, 0, 0.50294,-99) , 
11, -3.00242, 1, 0, 0.508364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496457,-99) , 
10, -0.908783, 0, 0, 0.52809,-99) , 
NN(
0, 
0, 
-1, -0.4344, 0, -1, 0.485833,-99) , 
12, -1.61314, 1, 0, 0.492995,-99) , 
6, -0.428568, 1, 0, 0.498713,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0398919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447528,-99) , 
10, -0.651162, 0, 0, 0.508819,-99) , 
12, -2.0731, 1, 0, 0.514308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487808,-99) , 
3, 4.36366, 0, 0, 0.494909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432722,-99) , 
13, 6.30039, 1, 0, 0.491244,-99) , 
3, 6.0057, 0, 0, 0.500945,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0342621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493019,-99) , 
13, 6.32045, 1, 0, 0.50387,-99) , 
10, 1.85572, 0, 0, 0.506342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461286,-99) , 
6, -0.904809, 0, 0, 0.488492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413889,-99) , 
10, 2.1454, 1, 0, 0.47374,-99) , 
11, -0.91033, 1, 0, 0.50136,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0361261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.341449, 0, 1, 0.58514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454998,-99) , 
12, -0.983438, 1, 0, 0.504571,-99) , 
10, 0.164211, 0, 0, 0.516064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493692,-99) , 
13, 8.96443, 0, 0, 0.49608,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.454246,-99) , 
3, 8.47176, 1, 0, 0.492222,-99) , 
12, -0.648571, 1, 0, 0.501339,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0388246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72672, 1, 1, 0.590385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439887,-99) , 
13, 6.55648, 1, 0, 0.471389,-99) , 
10, -1.14378, 0, 0, 0.53374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
2, -0.214379, 0, 0, 0.510348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473863,-99) , 
0, 0.490472, 0, 0, 0.508167,-99) , 
11, -3.46721, 1, 0, 0.511352,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0292421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.52749, 0, 1, 0.509196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485093,-99) , 
8, 2.3219, 0, 0, 0.504838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426145,-99) , 
6, -0.0472821, 1, 0, 0.461952,-99) , 
10, 1.57303, 1, 0, 0.488646,-99) , 
11, -1.42361, 1, 0, 0.503905,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0408688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487678,-99) , 
12, 1.64666, 0, 0, 0.50842,-99) , 
10, -0.999588, 1, 0, 0.515125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489521,-99) , 
11, -2.6349, 1, 0, 0.501508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467585,-99) , 
12, -1.65138, 1, 0, 0.483037,-99) , 
10, -0.142597, 0, 0, 0.495412,-99) , 
6, -0.809525, 1, 0, 0.499122,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0290783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 0, 1, 0.521753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441108,-99) , 
10, 1.28819, 1, 0, 0.492935,-99) , 
11, -1.373, 1, 0, 0.514439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470631,-99) , 
8, 9.54502, 1, 0, 0.498331,-99) , 
NN(
0, 
0, 
-1, -3.15874, 0, -1, 0.468251,-99) , 
10, -0.713962, 0, 0, 0.492794,-99) , 
0, 0.500948, 0, 0, 0.498728,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0311489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.736654, 0, 1, 0.545123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473889,-99) , 
6, -0.782352, 0, 0, 0.503554,-99) , 
6, 0.523724, 0, 0, 0.51709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472296,-99) , 
3, 1.72762, 0, 0, 0.502134,-99) , 
NN(
0, 
0, 
-1, -0.998375, 0, -1, 0.482081,-99) , 
6, 0.238066, 1, 0, 0.493397,-99) , 
2, 0.0722807, 0, 0, 0.497751,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0475876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483574,-99) , 
6, -0.523851, 1, 0, 0.492438,-99) , 
10, 1.52461, 0, 0, 0.497024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467739,-99) , 
8, 2.76965, 0, 0, 0.485461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436352,-99) , 
3, 7.48237, 1, 0, 0.479189,-99) , 
11, -1.37365, 1, 0, 0.492731,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0372469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0557017, 0, 1, 0.532492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404365,-99) , 
11, -2.53567, 0, 0, 0.493105,-99) , 
12, -0.748265, 1, 0, 0.510764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49344,-99) , 
3, 4.34863, 0, 0, 0.49771,-99) , 
NN(
0, 
0, 
-1, 5.20211, 0, -1, 0.465244,-99) , 
8, 5.38256, 1, 0, 0.490131,-99) , 
3, 6.46126, 0, 0, 0.497747,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0279401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28596, 0, 1, 0.517476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456035,-99) , 
6, 0.00223561, 1, 0, 0.497772,-99) , 
6, 0.238059, 0, 0, 0.506535,-99) , 
NN(
0, 
0, 
-1, 5.09209, 1, -1, 0.465721,-99) , 
0, 0.490472, 0, 0, 0.503998,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0339205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.853763, 0, 1, 0.534343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478727,-99) , 
8, 8.27551, 1, 0, 0.505237,-99) , 
12, -1.26128, 1, 0, 0.511054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49516,-99) , 
3, 4.82248, 0, 0, 0.500139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473808,-99) , 
5, 0.999524, 1, 0, 0.480472,-99) , 
6, 0.142816, 1, 0, 0.490618,-99) , 
0, 0.499042, 0, 0, 0.499348,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0364518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.524115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470509,-99) , 
3, 6.99497, 1, 0, 0.515173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494887,-99) , 
10, 1.30962, 0, 0, 0.499682,-99) , 
NN(
0, 
0, 
-1, -0.923026, 1, -1, 0.443298,-99) , 
3, 2.56802, 0, 0, 0.492298,-99) , 
12, 0.422538, 0, 0, 0.498949,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0255809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487927,-99) , 
13, 7.35126, 1, 0, 0.527218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49446,-99) , 
6, 0.714264, 0, 0, 0.499585,-99) , 
11, -3.60118, 1, 0, 0.502527,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.46717,-99) , 
10, 2.14285, 1, 0, 0.50068,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0332048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490971,-99) , 
2, 0.0655191, 1, 0, 0.510017,-99) , 
10, 2.14277, 0, 0, 0.512456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497729,-99) , 
3, 4.94413, 0, 0, 0.513952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472973,-99) , 
11, -2.70884, 1, 0, 0.482062,-99) , 
2, -0.0713441, 1, 0, 0.488139,-99) , 
0, 0.499995, 1, 0, 0.503996,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.03265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490056,-99) , 
10, -0.427619, 0, 0, 0.526514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496369,-99) , 
8, 4.73127, 1, 0, 0.503029,-99) , 
0, 0.494281, 1, 0, 0.507695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465155,-99) , 
12, -0.502605, 0, 0, 0.502529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427151,-99) , 
13, 2.94861, 1, 0, 0.490941,-99) , 
3, 3.05498, 0, 0, 0.502484,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0275689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491694,-99) , 
10, 0.45426, 1, 0, 0.531634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482023,-99) , 
6, 0.736584, 1, 0, 0.505728,-99) , 
NN(
0, 
0, 
-1, 5.47409, 1, -1, 0.491734,-99) , 
3, 5.77931, 0, 0, 0.497485,-99) , 
6, 0.904707, 0, 0, 0.4993,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0219369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490565,-99) , 
0, 0.5019, 1, 0, 0.504457,-99) , 
3, 9.45635, 0, 0, 0.506148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458798,-99) , 
8, 10.8654, 1, 0, 0.504714,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0385814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.1842, 1, 1, 0.522175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490026,-99) , 
8, 10.1834, 0, 0, 0.493477,-99) , 
11, -2.72821, 1, 0, 0.500985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535099,-99) , 
NN(
0, 
0, 
-1, -2.25697, 1, -1, 0.444623,-99) , 
11, -2.89383, 0, 0, 0.46874,-99) , 
10, -0.999685, 0, 0, 0.496921,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0249385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478312,-99) , 
11, -4.01269, 0, 0, 0.50445,-99) , 
12, -0.929995, 0, 0, 0.518728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497117,-99) , 
12, -1.07551, 1, 0, 0.502015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461535,-99) , 
10, -0.537101, 0, 0, 0.499884,-99) , 
10, -0.713999, 1, 0, 0.503296,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0228351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.951785, 0, 1, 0.532504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492953,-99) , 
10, 1.14999, 0, 0, 0.49778,-99) , 
12, -1.65709, 1, 0, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452615,-99) , 
10, -1.85697, 0, 0, 0.499727,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0410416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.152833, 1, 1, 0.516288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450271,-99) , 
5, 0.99963, 0, 0, 0.513499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483203,-99) , 
11, -2.75646, 1, 0, 0.501428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453183,-99) , 
10, -0.395767, 0, 0, 0.490534,-99) , 
6, 0.71425, 1, 0, 0.508891,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0471004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.51627, 0, 1, 0.523068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483265,-99) , 
11, -1.77576, 1, 0, 0.498132,-99) , 
10, 0.716906, 1, 0, 0.509801,-99) , 
NN(
NN(
0, 
0, 
-1, -1.11101, 0, 1, 0.543724,-99) , 
NN(
0, 
0, 
-1, 4.22631, 0, -1, 0.475769,-99) , 
8, 4.02085, 1, 0, 0.48867,-99) , 
11, -2.68778, 0, 0, 0.502522,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0311004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486302,-99) , 
10, -0.24043, 0, 0, 0.5554,-99) , 
NN(
0, 
0, 
-1, 8.46542, 0, 1, 0.507049,-99) , 
12, -1.03023, 1, 0, 0.51212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484678,-99) , 
3, 6.27991, 0, 0, 0.492397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455218,-99) , 
6, 0.714135, 1, 0, 0.485658,-99) , 
10, -0.428515, 0, 0, 0.505316,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0689381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.08131, 1, 1, 0.529899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464367,-99) , 
6, 0.387704, 1, 0, 0.503698,-99) , 
6, 0.619027, 0, 0, 0.508951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480731,-99) , 
9, -0.0867779, 0, 0, 0.516894,-99) , 
NN(
0, 
0, 
-1, 0.145077, 1, -1, 0.346247,-99) , 
9, -1.32153, 0, 0, 0.493075,-99) , 
9, -951.286, 1, 0, 0.500203,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0590734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.429823, 0, 1, 0.531198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362215,-99) , 
10, 0.468971, 1, 0, 0.433402,-99) , 
9, -1.03569, 0, 0, 0.51151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490951,-99) , 
6, -0.311409, 1, 0, 0.500963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440374,-99) , 
12, 0.0216797, 0, 0, 0.48375,-99) , 
3, 3.03196, 0, 0, 0.493673,-99) , 
9, -951.286, 0, 0, 0.50346,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0474335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76956, 0, 1, 0.521634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440504,-99) , 
10, 2.26318, 0, 0, 0.478213,-99) , 
12, 0.57657, 1, 0, 0.516253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481157,-99) , 
10, -0.999588, 1, 0, 0.485985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428775,-99) , 
12, -1.81955, 0, 0, 0.48255,-99) , 
3, 5.51564, 0, 0, 0.498176,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0515164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482517,-99) , 
12, -1.11429, 1, 0, 0.571278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482293,-99) , 
0, 0.494283, 1, 0, 0.493525,-99) , 
10, -0.231007, 0, 0, 0.509477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449387,-99) , 
10, 2.42936, 1, 0, 0.502476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471498,-99) , 
10, 1.19423, 0, 0, 0.48036,-99) , 
12, 0.220296, 0, 0, 0.49105,-99) , 
12, -0.963894, 1, 0, 0.496202,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0280036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49848,-99) , 
12, -0.148214, 1, 0, 0.525932,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.494937,-99) , 
6, 0.0160509, 1, 0, 0.50328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515678,-99) , 
NN(
0, 
0, 
-1, 0.619684, 1, -1, 0.477769,-99) , 
12, 1.62668, 0, 0, 0.487161,-99) , 
3, 3.02771, 0, 0, 0.498229,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.047827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.653704, 1, 1, 0.532972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486637,-99) , 
11, -3.82764, 1, 0, 0.493669,-99) , 
10, 0.324122, 0, 0, 0.505305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454448,-99) , 
13, 1.75863, 0, 0, 0.511012,-99) , 
NN(
0, 
0, 
-1, 1.37008, 0, -1, 0.476179,-99) , 
10, 0.71776, 1, 0, 0.486668,-99) , 
12, 0.0872532, 1, 0, 0.498121,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0534448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.256151, 0, 1, 0.533022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411983,-99) , 
10, 0.617284, 0, 0, 0.500163,-99) , 
12, -0.662602, 1, 0, 0.515957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481417,-99) , 
3, 2.71261, 0, 0, 0.495927,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.449075,-99) , 
8, 4.53979, 1, 0, 0.488987,-99) , 
3, 5.0056, 0, 0, 0.502679,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0136975);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
5, 0.999894, 1, 0, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466394,-99) , 
5, 0.999683, 0, 0, 0.498852,-99) , 
5, 0.999048, 1, 0, 0.500936,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0184176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481504,-99) , 
10, -0.999875, 0, 0, 0.501016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437919,-99) , 
3, 1.79856, 0, 0, 0.498243,-99) , 
8, 1.74219, 1, 0, 0.500096,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0275488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.521031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491046,-99) , 
9, -949.507, 0, 0, 0.50126,-99) , 
0, 0.500948, 0, 0, 0.506736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457672,-99) , 
5, 0.999048, 0, 0, 0.504574,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0369738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495659,-99) , 
10, -0.428515, 1, 0, 0.501909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473138,-99) , 
8, 3.38584, 1, 0, 0.482347,-99) , 
11, -2.82161, 0, 0, 0.496003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399726,-99) , 
1, -0.0123422, 0, 0, 0.492999,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0149519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
5, 0.999932, 1, 0, 0.503839,-99) , 
10, 2.42854, 0, 0, 0.505569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446058,-99) , 
5, 0.998572, 0, 0, 0.503839,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0299921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49302,-99) , 
0, 0.495234, 0, 0, 0.526939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476095,-99) , 
12, 0.972197, 1, 0, 0.496759,-99) , 
12, 0.303356, 1, 0, 0.5177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491923,-99) , 
6, 0.809448, 0, 0, 0.495892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454796,-99) , 
8, 10.4666, 1, 0, 0.49401,-99) , 
2, -0.0708962, 1, 0, 0.49831,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0456773);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485494,-99) , 
0, 0.50444, 1, 0, 0.531016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480411,-99) , 
3, 1.98941, 0, 0, 0.509373,-99) , 
3, 5.94805, 0, 0, 0.518431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483061,-99) , 
6, 0.428492, 1, 0, 0.530615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486659,-99) , 
2, 0.0713112, 0, 0, 0.49323,-99) , 
1, 0.00305744, 0, 0, 0.501309,-99) , 
0, 0.498091, 0, 0, 0.509947,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0550688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.664567, 0, 1, 0.528371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447347,-99) , 
10, 1.19291, 0, 0, 0.500066,-99) , 
12, -0.047278, 1, 0, 0.519922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448614,-99) , 
12, -1.00077, 0, 0, 0.510356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434454,-99) , 
12, 1.10358, 0, 0, 0.479074,-99) , 
11, -1.5143, 1, 0, 0.494522,-99) , 
3, 3.5398, 0, 0, 0.510585,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0211546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497812,-99) , 
10, -0.715672, 1, 0, 0.506959,-99) , 
3, 2.58839, 0, 0, 0.516552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449428,-99) , 
12, 0.605161, 1, 0, 0.495329,-99) , 
10, 2.42853, 0, 0, 0.497639,-99) , 
8, 3.06863, 1, 0, 0.502985,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0442337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463224,-99) , 
12, 0.854649, 0, 0, 0.504896,-99) , 
11, -1.97878, 1, 0, 0.514142,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0765416, 1, 1, 0.54679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473295,-99) , 
3, 6.21391, 0, 0, 0.492192,-99) , 
1, -0.00542518, 1, 0, 0.496238,-99) , 
8, 3.0568, 1, 0, 0.501227,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0389011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489069,-99) , 
12, -0.409896, 0, 0, 0.52457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468681,-99) , 
10, 1.28465, 1, 0, 0.515959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487288,-99) , 
10, 2.14189, 0, 0, 0.490259,-99) , 
11, -0.78582, 0, 0, 0.492253,-99) , 
8, 3.03167, 1, 0, 0.498812,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0225469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44888, 0, 1, 0.50734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464653,-99) , 
10, 1.58257, 1, 0, 0.487332,-99) , 
12, 0.873827, 1, 0, 0.503395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456632,-99) , 
6, 0.90469, 1, 0, 0.501073,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0465155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492374, 1, 1, 0.511114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466568,-99) , 
10, -1.28564, 0, 0, 0.50747,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85582, 0, 1, 0.51319,-99) , 
NN(
0, 
0, 
-1, -1.98635, 0, -1, 0.360909,-99) , 
9, -1.29221, 0, 0, 0.490855,-99) , 
9, -9.14007, 1, 0, 0.498325,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0394867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49289,-99) , 
12, -0.131871, 1, 0, 0.527355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432889,-99) , 
8, 3.86424, 1, 0, 0.496014,-99) , 
3, 3.92953, 0, 0, 0.503362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482281,-99) , 
11, -1.50342, 0, 0, 0.488907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403821,-99) , 
12, 0.907778, 1, 0, 0.483281,-99) , 
6, 0.142843, 1, 0, 0.49399,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.020568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492761,-99) , 
11, -4.23433, 1, 0, 0.494155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448213,-99) , 
8, 1.6603, 0, 0, 0.492807,-99) , 
3, 9.95156, 0, 0, 0.494084,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0459954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48103,-99) , 
13, 5.95327, 1, 0, 0.49391,-99) , 
10, 1.84605, 0, 0, 0.496619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457689,-99) , 
9, -951.286, 0, 0, 0.487728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399263,-99) , 
6, 0.619026, 1, 0, 0.477127,-99) , 
11, -1.26687, 1, 0, 0.492465,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0442952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.294049, 0, 1, 0.523663,-99) , 
NN(
0, 
0, 
-1, 1.00419, 0, -1, 0.475605,-99) , 
12, -0.33996, 1, 0, 0.504551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475899,-99) , 
12, 0.0859357, 0, 0, 0.490041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453634,-99) , 
10, 1.56989, 1, 0, 0.485905,-99) , 
3, 5.51347, 0, 0, 0.494503,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0488035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72346, 1, 1, 0.514025,-99) , 
NN(
0, 
0, 
-1, 1.61691, 0, -1, 0.480529,-99) , 
8, 2.3725, 0, 0, 0.505577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493588,-99) , 
10, 1.00004, 0, 0, 0.506965,-99) , 
NN(
0, 
0, 
-1, -2.04363, 0, -1, 0.371581,-99) , 
9, -1.34855, 0, 0, 0.48848,-99) , 
9, -9.14007, 1, 0, 0.496185,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0232761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467007,-99) , 
10, 0.712015, 1, 0, 0.506032,-99) , 
2, 0.0737127, 0, 0, 0.523977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495235,-99) , 
6, 0.904735, 0, 0, 0.4972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463777,-99) , 
2, 0.212365, 1, 0, 0.495591,-99) , 
0, 0.503805, 0, 0, 0.498909,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0405401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.517955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440011,-99) , 
10, 1.73091, 0, 0, 0.48473,-99) , 
12, 0.267261, 1, 0, 0.511309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48901,-99) , 
11, -2.4777, 1, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452405,-99) , 
12, -1.19677, 0, 0, 0.494155,-99) , 
3, 4.03197, 0, 0, 0.504213,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0281528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534448,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.488649,-99) , 
4, 7.96725, 0, 0, 0.490143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440921,-99) , 
5, 0.999048, 0, 0, 0.488081,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0230038);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490195,-99) , 
2, -0.0030854, 1, 0, 0.501189,-99) , 
NN(
0, 
0, 
-1, 8.84432, 1, -1, 0.485347,-99) , 
2, 0.0717208, 1, 0, 0.498414,-99) , 
0, 0.48952, 1, 0, 0.499598,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0204904);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.86606, 1, 1, 0.528056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498316,-99) , 
1, 0.00524329, 0, 0, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0.726812, 1, -1, 0.477977,-99) , 
3, 2.75314, 0, 0, 0.497471,-99) , 
6, -0.904757, 1, 0, 0.501,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0328332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505708, 0, 1, 0.517084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49121,-99) , 
11, -3.39638, 1, 0, 0.496365,-99) , 
4, 3.28187, 1, 0, 0.510668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462894,-99) , 
6, 0.904716, 1, 0, 0.508333,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.028259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488099,-99) , 
8, 6.12329, 1, 0, 0.499871,-99) , 
2, -0.214379, 1, 0, 0.502102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447871,-99) , 
10, 2.14269, 1, 0, 0.499418,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0265774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467423,-99) , 
1, -0.0100178, 0, 0, 0.505966,-99) , 
10, 2.14276, 0, 0, 0.508681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489639,-99) , 
10, 1.12259, 0, 0, 0.49619,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.468924,-99) , 
11, -1.3919, 1, 0, 0.48862,-99) , 
0, 0.500947, 1, 0, 0.503199,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0188483);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494734,-99) , 
6, 0.904683, 0, 0, 0.496753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456886,-99) , 
8, 10.7603, 1, 0, 0.495375,-99) , 
0, 0.48952, 1, 0, 0.497163,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0451828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497599,-99) , 
12, -0.728857, 1, 0, 0.562435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492088,-99) , 
8, 8.10791, 0, 0, 0.500865,-99) , 
11, -2.5078, 1, 0, 0.510961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492477,-99) , 
3, 5.52555, 0, 0, 0.500486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454308,-99) , 
5, 0.999524, 1, 0, 0.471171,-99) , 
6, 0.42844, 1, 0, 0.491043,-99) , 
10, 0.143811, 0, 0, 0.502135,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0341901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.109728, 0, 1, 0.519495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493547,-99) , 
10, -0.142636, 1, 0, 0.499788,-99) , 
11, -2.40543, 1, 0, 0.508145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427196,-99) , 
0, 0.499038, 0, 0, 0.467925,-99) , 
8, 9.98219, 1, 0, 0.505244,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0232142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.00669, 0, 1, 0.51037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475318,-99) , 
5, 0.999683, 0, 0, 0.508571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477889,-99) , 
5, 0.999048, 0, 0, 0.507176,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0358106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00711267, 0, 1, 0.538718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486905,-99) , 
12, 0.306187, 1, 0, 0.507317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47802,-99) , 
11, -1.97559, 0, 0, 0.492729,-99) , 
0, 0.499995, 1, 0, 0.502228,-99) , 
1, -0.00733313, 1, 0, 0.504705,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0382106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00902, 1, 1, 0.512045,-99) , 
NN(
0, 
0, 
-1, -0.897829, 1, -1, 0.469617,-99) , 
8, 2.45614, 0, 0, 0.505219,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.523121,-99) , 
NN(
0, 
0, 
-1, -0.142968, 1, -1, 0.472314,-99) , 
4, 3.84022, 0, 0, 0.484224,-99) , 
10, -0.140622, 0, 0, 0.49781,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0350295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.52471, 1, 1, 0.540489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478452,-99) , 
10, 1.44901, 0, 0, 0.528712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488322,-99) , 
10, -0.34695, 0, 0, 0.498866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455667,-99) , 
12, -1.10701, 1, 0, 0.4801,-99) , 
8, 8.16779, 1, 0, 0.494666,-99) , 
10, 1.28572, 0, 0, 0.501657,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.016595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495995,-99) , 
4, 7.75047, 0, 0, 0.497741,-99) , 
10, 2.42853, 0, 0, 0.499496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445802,-99) , 
5, 0.998571, 0, 0, 0.497966,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0423895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449931,-99) , 
6, -0.741404, 1, 0, 0.502093,-99) , 
10, -0.711536, 1, 0, 0.513586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492252,-99) , 
10, 1.33581, 0, 0, 0.498577,-99) , 
NN(
0, 
0, 
-1, 0.633554, 1, -1, 0.4534,-99) , 
12, 0.462368, 1, 0, 0.491735,-99) , 
8, 3.0568, 1, 0, 0.49789,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0365376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.880155, 0, 1, 0.517208,-99) , 
NN(
0, 
0, 
-1, 6.46925, 1, -1, 0.491939,-99) , 
11, -1.95498, 1, 0, 0.505887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474461,-99) , 
11, -2.91275, 0, 0, 0.506563,-99) , 
NN(
0, 
0, 
-1, -2.27266, 0, -1, 0.470268,-99) , 
12, -0.694877, 1, 0, 0.487951,-99) , 
8, 8.1637, 1, 0, 0.501729,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0133917);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489301,-99) , 
10, -1.36763, 0, 0, 0.527411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471315,-99) , 
5, 0.999048, 0, 0, 0.499729,-99) , 
11, -3.78859, 1, 0, 0.501842,-99) , 
11, -0.0418059, 0, 0, 0.503644,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0272986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497652,-99) , 
8, 2.28147, 1, 0, 0.533779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474629,-99) , 
3, 1.68938, 0, 0, 0.515728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
10, -0.933639, 0, 0, 0.51927,-99) , 
NN(
0, 
0, 
-1, 0.495234, 0, -1, 0.493959,-99) , 
12, -1.65763, 1, 0, 0.49755,-99) , 
6, -0.809508, 1, 0, 0.501082,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.016512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.07626, 0, 1, 0.505952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457077,-99) , 
3, 1.52443, 0, 0, 0.504672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449502,-99) , 
8, 10.8707, 1, 0, 0.502982,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0239103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498648,-99) , 
11, -1.07736, 0, 0, 0.501747,-99) , 
10, 1.79276, 0, 0, 0.505257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487069,-99) , 
2, 0.00686881, 0, 0, 0.502574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395725,-99) , 
3, 4.03329, 1, 0, 0.482727,-99) , 
12, 1.01609, 1, 0, 0.501584,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0275809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46845,-99) , 
11, -0.910481, 1, 0, 0.536167,-99) , 
NN(
NN(
0, 
0, 
-1, -1.52928, 1, 1, 0.50794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474624,-99) , 
10, -1.7868, 1, 0, 0.490048,-99) , 
10, -1.04051, 0, 0, 0.505741,-99) , 
10, 2.14286, 0, 0, 0.507476,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0316409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47422,-99) , 
12, -1.9984, 1, 0, 0.50632,-99) , 
10, -0.617999, 0, 0, 0.524837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478176,-99) , 
10, 0.348018, 0, 0, 0.492201,-99) , 
10, -0.712803, 1, 0, 0.494933,-99) , 
12, -1.43506, 1, 0, 0.499726,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0231716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483449,-99) , 
3, 3.09027, 0, 0, 0.499182,-99) , 
12, 1.21692, 0, 0, 0.50156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474178,-99) , 
10, 0.489546, 0, 0, 0.494071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427477,-99) , 
10, 1.86626, 1, 0, 0.478938,-99) , 
11, -0.697467, 1, 0, 0.498792,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0275493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.441783, 1, 1, 0.50604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472403,-99) , 
13, 2.58847, 1, 0, 0.491859,-99) , 
3, 3.23485, 0, 0, 0.500024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483242,-99) , 
5, 0.999524, 1, 0, 0.497177,-99) , 
NN(
0, 
0, 
-1, 1.674, 0, -1, 0.436945,-99) , 
12, -0.0858477, 1, 0, 0.479822,-99) , 
6, 0.714262, 1, 0, 0.495923,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0194332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485092,-99) , 
0, 0.499995, 1, 0, 0.496381,-99) , 
12, -2.2013, 1, 0, 0.498407,-99) , 
10, -1.85693, 1, 0, 0.500101,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0372926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47736,-99) , 
12, -1.35312, 1, 0, 0.504472,-99) , 
10, -0.00394164, 0, 0, 0.515591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495042,-99) , 
1, 0.00645084, 0, 0, 0.499745,-99) , 
NN(
0, 
0, 
-1, 0.919321, 0, -1, 0.464783,-99) , 
3, 7.47291, 1, 0, 0.492763,-99) , 
12, -0.85763, 1, 0, 0.499961,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0240797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443431,-99) , 
11, -2.54775, 1, 0, 0.478192,-99) , 
0, 0.504757, 1, 0, 0.505435,-99) , 
NN(
0, 
0, 
-1, 1.89506, 1, -1, 0.474758,-99) , 
6, -0.904757, 0, 0, 0.502087,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0210574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4964,-99) , 
10, 1.291, 1, 0, 0.521829,-99) , 
NN(
0, 
0, 
-1, 3.48634, 1, -1, 0.495812,-99) , 
4, 4.27821, 0, 0, 0.500361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508183,-99) , 
NN(
0, 
0, 
-1, 0.499359, 0, -1, 0.470282,-99) , 
0, 0.494281, 1, 0, 0.480155,-99) , 
2, -0.0704645, 0, 0, 0.496706,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0204791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49615,-99) , 
2, -0.0300477, 1, 0, 0.501094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470508,-99) , 
10, 0.428495, 0, 0, 0.48511,-99) , 
0, 0.494281, 0, 0, 0.497736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464315,-99) , 
2, 0.214084, 1, 0, 0.496077,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0346916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.95228, 0, 1, 0.53466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495119,-99) , 
8, 5.00036, 1, 0, 0.504733,-99) , 
0, 0.498136, 1, 0, 0.509144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490109,-99) , 
11, -1.95361, 1, 0, 0.509279,-99) , 
NN(
0, 
0, 
-1, 0.494417, 0, -1, 0.477215,-99) , 
8, 3.63167, 1, 0, 0.488309,-99) , 
0, 0.497138, 0, 0, 0.500454,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.023126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49981,-99) , 
6, -0.968256, 1, 0, 0.523353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494907,-99) , 
3, 3.65337, 0, 0, 0.515622,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.492659,-99) , 
1, 0.00305744, 0, 0, 0.497584,-99) , 
6, -0.904758, 1, 0, 0.500483,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0359249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.98752, 0, 1, 0.532433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471569,-99) , 
10, 1.0033, 1, 0, 0.492562,-99) , 
11, -1.59621, 1, 0, 0.519692,-99) , 
NN(
NN(
0, 
0, 
-1, -0.984596, 1, 1, 0.509597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474886,-99) , 
12, -0.823151, 0, 0, 0.485888,-99) , 
10, -0.428476, 0, 0, 0.503446,-99) , 
0, 0.500947, 0, 0, 0.507898,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0330137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474403,-99) , 
12, 0.287368, 0, 0, 0.502689,-99) , 
11, -2.5464, 1, 0, 0.512847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495866,-99) , 
12, -2.0293, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, -1.60752, 0, -1, 0.471214,-99) , 
3, 4.45813, 0, 0, 0.493179,-99) , 
8, 3.04645, 1, 0, 0.498714,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0265781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482586,-99) , 
12, -1.06579, 1, 0, 0.512057,-99) , 
10, 1.57967, 0, 0, 0.524933,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00631266, 1, 1, 0.505868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475116,-99) , 
3, 1.70679, 0, 0, 0.503461,-99) , 
3, 7.92667, 0, 0, 0.507119,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0144116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477053,-99) , 
6, 0.333341, 1, 0, 0.506705,-99) , 
11, -1.22881, 1, 0, 0.52884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458786,-99) , 
8, 1.71394, 0, 0, 0.498603,-99) , 
5, 0.998572, 1, 0, 0.500541,-99) , 
10, 1.85708, 0, 0, 0.503188,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.016304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.945546, 0, 1, 0.532058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487765,-99) , 
4, 3.26014, 1, 0, 0.497756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458999,-99) , 
0, 0.489521, 0, 0, 0.496296,-99) , 
6, 0.904714, 0, 0, 0.498304,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0291097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484033,-99) , 
12, -0.417056, 1, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 3.86659, 1, -1, 0.487058,-99) , 
3, 4.02413, 0, 0, 0.495122,-99) , 
0, 0.48952, 1, 0, 0.496655,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.030545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500941, 0, 1, 0.528339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461091,-99) , 
11, -2.69247, 1, 0, 0.49126,-99) , 
6, 0.877526, 1, 0, 0.515088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482701,-99) , 
11, -2.71163, 0, 0, 0.498232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431083,-99) , 
5, 0.999631, 0, 0, 0.495596,-99) , 
6, 0.714262, 0, 0, 0.499578,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0309303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472166,-99) , 
5, 0.99991, 0, 0, 0.510524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488008,-99) , 
10, 2.14282, 0, 0, 0.490983,-99) , 
4, 4.12828, 0, 0, 0.495181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464374,-99) , 
5, 0.999048, 0, 0, 0.493829,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0274862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494469,-99) , 
10, 1.63336, 0, 0, 0.505658,-99) , 
11, -3.12423, 1, 0, 0.520553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495081,-99) , 
4, 4.21945, 0, 0, 0.499709,-99) , 
NN(
0, 
0, 
-1, 3.90961, 1, -1, 0.4739,-99) , 
2, 0.0701447, 1, 0, 0.49495,-99) , 
3, 7.98496, 0, 0, 0.49907,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0164389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476597,-99) , 
5, 0.99966, 0, 0, 0.50289,-99) , 
8, 10.7372, 0, 0, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464535,-99) , 
5, 0.998572, 0, 0, 0.503611,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0287108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485309,-99) , 
9, -951.286, 0, 0, 0.522257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489887,-99) , 
0, 0.49945, 1, 0, 0.522557,-99) , 
NN(
0, 
0, 
-1, 0.497818, 0, -1, 0.488863,-99) , 
11, -0.38715, 0, 0, 0.491822,-99) , 
0, 0.490472, 1, 0, 0.493712,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.031046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.168629, 0, 1, 0.519149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496691,-99) , 
10, 0.146527, 1, 0, 0.503851,-99) , 
12, -0.682995, 1, 0, 0.509572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455155,-99) , 
0, 0.489792, 0, 0, 0.495872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447179,-99) , 
10, -0.428571, 0, 0, 0.482267,-99) , 
0, 0.493329, 0, 0, 0.504953,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0169131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554727,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504439, 1, 1, 0.518107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465747,-99) , 
6, -0.904749, 0, 0, 0.498238,-99) , 
0, 0.502852, 0, 0, 0.501424,-99) , 
12, 2.20319, 0, 0, 0.503794,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0306808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.541485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491218,-99) , 
10, -0.414895, 0, 0, 0.501706,-99) , 
12, -1.14927, 0, 0, 0.516852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
12, -0.547746, 1, 0, 0.506139,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.475353,-99) , 
10, 0.156513, 0, 0, 0.501305,-99) , 
10, -0.1428, 1, 0, 0.506684,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.027602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.196275, 0, 1, 0.510386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440626,-99) , 
2, 0.153407, 1, 0, 0.4968,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.46043,-99) , 
2, -0.0710108, 0, 0, 0.486594,-99) , 
4, 4.38175, 1, 0, 0.505804,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0189254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.97579, 1, 1, 0.523687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457261,-99) , 
5, 0.999524, 0, 0, 0.497969,-99) , 
3, 8.47334, 0, 0, 0.501051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447254,-99) , 
6, 0.333328, 1, 0, 0.492759,-99) , 
NN(
0, 
0, 
-1, 6.50425, 0, -1, 0.454814,-99) , 
0, 0.491697, 1, 0, 0.476696,-99) , 
0, 0.49333, 0, 0, 0.497003,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0244573);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455935,-99) , 
12, -1.75662, 0, 0, 0.499116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474387,-99) , 
11, -1.97517, 0, 0, 0.484748,-99) , 
8, 6.58493, 1, 0, 0.493585,-99) , 
3, 9.46205, 0, 0, 0.495017,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0297996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.537265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470404,-99) , 
12, -0.153276, 1, 0, 0.509101,-99) , 
NN(
0, 
0, 
-1, 7.84785, 1, -1, 0.488893,-99) , 
3, 7.9266, 0, 0, 0.492238,-99) , 
10, 2.1433, 0, 0, 0.49487,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0274145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.536126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490982,-99) , 
11, -2.82977, 0, 0, 0.505433,-99) , 
0, 0.505029, 0, 0, 0.507649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456806,-99) , 
0, 0.48952, 0, 0, 0.505758,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0354968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.464065, 0, 1, 0.561924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478746,-99) , 
11, -0.413647, 0, 0, 0.493766,-99) , 
11, -1.63052, 1, 0, 0.512766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480639,-99) , 
12, -0.651732, 1, 0, 0.509193,-99) , 
NN(
0, 
0, 
-1, 6.88647, 1, -1, 0.490829,-99) , 
3, 6.94452, 0, 0, 0.496201,-99) , 
10, 1.28561, 0, 0, 0.499506,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0315047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485769,-99) , 
6, 0.142841, 1, 0, 0.508197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487739,-99) , 
10, 2.14284, 0, 0, 0.49031,-99) , 
0, 0.495234, 1, 0, 0.495054,-99) , 
5, 0.999048, 1, 0, 0.496634,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0246488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496966,-99) , 
8, 7.22702, 1, 0, 0.509138,-99) , 
NN(
0, 
0, 
-1, 3.36138, 1, -1, 0.490756,-99) , 
3, 3.53618, 0, 0, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450344,-99) , 
10, 2.42852, 1, 0, 0.500811,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0406041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488653,-99) , 
0, 0.503805, 1, 0, 0.512505,-99) , 
12, -2.4662, 1, 0, 0.514531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459086,-99) , 
10, 0.710123, 0, 0, 0.49054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417459,-99) , 
10, 1.86175, 1, 0, 0.473041,-99) , 
11, -0.670422, 1, 0, 0.509514,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0335962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.653035, 0, 1, 0.556607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469016,-99) , 
11, -2.17076, 0, 0, 0.50546,-99) , 
12, -0.254416, 1, 0, 0.515101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49462,-99) , 
12, -0.27149, 0, 0, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439994,-99) , 
8, 1.74498, 0, 0, 0.498581,-99) , 
10, 0.428769, 0, 0, 0.506137,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0204936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543822,-99) , 
NN(
NN(
0, 
0, 
-1, 4.88625, 1, 1, 0.517512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493921,-99) , 
8, 10.7338, 0, 0, 0.495236,-99) , 
0, 0.502852, 0, 0, 0.498878,-99) , 
11, -4.02976, 1, 0, 0.500871,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0310726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505437, 0, 1, 0.510426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468295,-99) , 
12, -0.541516, 1, 0, 0.488215,-99) , 
2, -0.0692319, 0, 0, 0.506622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486682,-99) , 
3, 7.91644, 0, 0, 0.490742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431931,-99) , 
8, 9.53279, 1, 0, 0.48495,-99) , 
0, 0.496186, 0, 0, 0.499144,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0260308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.5845, 1, 1, 0.512082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478856,-99) , 
8, 2.63621, 1, 0, 0.493673,-99) , 
3, 3.52754, 0, 0, 0.50503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460385,-99) , 
5, 0.999048, 0, 0, 0.503079,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0222415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500201, 0, 1, 0.554784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487492,-99) , 
0, 0.495233, 0, 0, 0.532363,-99) , 
NN(
NN(
0, 
0, 
-1, 7.28529, 0, 1, 0.512887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472252,-99) , 
8, 8.17328, 1, 0, 0.49427,-99) , 
0, 0.499995, 0, 0, 0.500706,-99) , 
5, 0.999524, 1, 0, 0.503142,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.042707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471477,-99) , 
12, -1.57693, 0, 0, 0.533384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479303,-99) , 
12, 0.260475, 0, 0, 0.496996,-99) , 
11, -2.61566, 1, 0, 0.50609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479341,-99) , 
12, -0.150836, 1, 0, 0.515384,-99) , 
NN(
0, 
0, 
-1, 8.50242, 1, -1, 0.479815,-99) , 
3, 8.81846, 0, 0, 0.485442,-99) , 
6, -0.142876, 1, 0, 0.49492,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0221926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
11, -0.817286, 0, 0, 0.502432,-99) , 
10, 2.4286, 0, 0, 0.504304,-99) , 
NN(
0, 
0, 
-1, -0.96798, 1, -1, 0.463081,-99) , 
3, 2.06204, 0, 0, 0.498289,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.025248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.72987, 0, 1, 0.521043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461004,-99) , 
12, 0.863617, 1, 0, 0.498541,-99) , 
0, 0.500947, 0, 0, 0.504349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494519,-99) , 
0, 0.49809, 1, 0, 0.510834,-99) , 
NN(
0, 
0, 
-1, 0.426394, 1, -1, 0.474797,-99) , 
9, -949.507, 0, 0, 0.488447,-99) , 
3, 2.55047, 0, 0, 0.50049,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0154602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518095,-99) , 
NN(
0, 
0, 
-1, 1.88373, 1, -1, 0.493702,-99) , 
8, 1.73689, 1, 0, 0.494739,-99) , 
12, -2.44454, 1, 0, 0.496006,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0299155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496957,-99) , 
8, 8.47928, 1, 0, 0.512993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484221,-99) , 
4, 2.10995, 1, 0, 0.497056,-99) , 
3, 6.99497, 0, 0, 0.502029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46174,-99) , 
1, 0.00921398, 1, 0, 0.499913,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0290102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.99261, 0, 1, 0.519239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494201,-99) , 
12, -1.1174, 1, 0, 0.502246,-99) , 
0, 0.500948, 0, 0, 0.506973,-99) , 
NN(
0, 
0, 
-1, 8.95238, 0, -1, 0.463725,-99) , 
6, 0.904735, 1, 0, 0.504785,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0367859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471636,-99) , 
10, -0.987333, 0, 0, 0.510504,-99) , 
6, -0.142897, 1, 0, 0.532629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443936,-99) , 
11, -1.09692, 1, 0, 0.514693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470862,-99) , 
4, 4.29913, 1, 0, 0.496271,-99) , 
6, 0.428537, 0, 0, 0.502638,-99) , 
11, -3.41884, 1, 0, 0.5065,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0628359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491325,-99) , 
3, 7.19776, 0, 0, 0.532776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388124,-99) , 
9, -0.71402, 0, 0, 0.495156,-99) , 
9, -951.286, 1, 0, 0.508123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489792,-99) , 
3, 2.78018, 0, 0, 0.502087,-99) , 
NN(
0, 
0, 
-1, 4.71285, 0, -1, 0.480504,-99) , 
6, -0.420499, 1, 0, 0.493236,-99) , 
3, 6.50445, 0, 0, 0.498602,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0234199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548109,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.524905,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.49335,-99) , 
1, 0.00367803, 0, 0, 0.499256,-99) , 
8, 1.73657, 1, 0, 0.501364,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0285891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.760336, 1, 1, 0.527133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477694,-99) , 
0, 0.494281, 0, 0, 0.515999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497274,-99) , 
10, 1.33849, 0, 0, 0.502594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455946,-99) , 
10, 1.74669, 0, 0, 0.475848,-99) , 
12, 0.423273, 1, 0, 0.499014,-99) , 
12, 0.930138, 0, 0, 0.502093,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0244748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469944,-99) , 
6, 0.619326, 1, 0, 0.506366,-99) , 
10, -0.558392, 0, 0, 0.52435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498498,-99) , 
10, 2.04773, 0, 0, 0.501443,-99) , 
10, -0.999685, 1, 0, 0.503231,-99) , 
12, -1.35811, 1, 0, 0.507012,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0416995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.134126, 1, 1, 0.526038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458246,-99) , 
8, 5.20442, 1, 0, 0.509644,-99) , 
3, 5.17646, 0, 0, 0.516184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533529,-99) , 
NN(
0, 
0, 
-1, 8.71168, 0, -1, 0.47314,-99) , 
0, 0.495234, 1, 0, 0.489363,-99) , 
8, 8.91536, 1, 0, 0.512056,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0297966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469407,-99) , 
10, 0.813605, 0, 0, 0.521895,-99) , 
11, -2.90015, 1, 0, 0.535343,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.508074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43421,-99) , 
5, 0.999048, 0, 0, 0.505921,-99) , 
3, 8.46663, 0, 0, 0.509352,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0533616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482844,-99) , 
8, 7.03172, 1, 0, 0.502402,-99) , 
10, 1.53371, 0, 0, 0.508034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469244,-99) , 
8, 2.21512, 0, 0, 0.498618,-99) , 
NN(
0, 
0, 
-1, -0.643602, 0, -1, 0.458696,-99) , 
10, 1.28634, 1, 0, 0.480577,-99) , 
11, -1.43632, 1, 0, 0.500856,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0569697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433853,-99) , 
9, -1.03569, 0, 0, 0.508281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
0, 0.492377, 1, 0, 0.48699,-99) , 
9, -951.286, 0, 0, 0.498619,-99) , 
3, 9.94751, 0, 0, 0.500535,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0199285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.523073,-99) , 
NN(
0, 
0, 
-1, 1.85711, 1, -1, 0.491108,-99) , 
3, 8.96769, 0, 0, 0.493523,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0322452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49595,-99) , 
12, 0.191542, 1, 0, 0.526721,-99) , 
NN(
0, 
0, 
-1, 0.810622, 0, -1, 0.485202,-99) , 
6, 0.766079, 1, 0, 0.510547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533885,-99) , 
NN(
0, 
0, 
-1, 6.01427, 1, -1, 0.491316,-99) , 
0, 0.504757, 0, 0, 0.495234,-99) , 
3, 5.99845, 0, 0, 0.501634,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0228424);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.570581, 0, 1, 0.508795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470216,-99) , 
6, -0.918486, 1, 0, 0.493491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442586,-99) , 
3, 1.52167, 0, 0, 0.484259,-99) , 
3, 2.03844, 0, 0, 0.505341,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0365757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495522,-99) , 
11, -2.73782, 0, 0, 0.530748,-99) , 
NN(
0, 
0, 
-1, 0.0717925, 1, -1, 0.490733,-99) , 
6, 0.782305, 1, 0, 0.514206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497155,-99) , 
12, -0.263446, 0, 0, 0.506619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476396,-99) , 
4, 3.44916, 0, 0, 0.486579,-99) , 
10, 0.428718, 1, 0, 0.498246,-99) , 
6, 0.428552, 0, 0, 0.504016,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0228547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28554, 1, 1, 0.505145,-99) , 
NN(
0, 
0, 
-1, -0.427474, 0, -1, 0.484388,-99) , 
2, -0.0719209, 0, 0, 0.501693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520332,-99) , 
NN(
0, 
0, 
-1, 0.491015, 1, -1, 0.444168,-99) , 
10, 0.716277, 0, 0, 0.469841,-99) , 
0, 0.492377, 0, 0, 0.497782,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0381437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476767,-99) , 
12, -1.40726, 0, 0, 0.507304,-99) , 
3, 5.20841, 0, 0, 0.510901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488455,-99) , 
11, -2.07482, 0, 0, 0.499467,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.457058,-99) , 
12, 0.267261, 1, 0, 0.491257,-99) , 
6, 0.142816, 1, 0, 0.501732,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0402404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.362934, 1, 1, 0.568831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474261,-99) , 
12, -0.898084, 1, 0, 0.496211,-99) , 
10, 0.6315, 0, 0, 0.505339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489872,-99) , 
11, -0.149299, 0, 0, 0.495206,-99) , 
NN(
0, 
0, 
-1, 1.59939, 1, -1, 0.462881,-99) , 
0, 0.494282, 0, 0, 0.488102,-99) , 
12, -0.121981, 1, 0, 0.49763,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.01645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545038,-99) , 
NN(
NN(
0, 
0, 
-1, 4.08969, 1, 1, 0.519785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498691,-99) , 
2, -0.213808, 1, 0, 0.500699,-99) , 
11, -3.0646, 1, 0, 0.504414,-99) , 
10, -1.57101, 1, 0, 0.506312,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0327311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.220886, 1, 1, 0.545665,-99) , 
NN(
NN(
0, 
0, 
-1, 0.54617, 0, 1, 0.51077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484238,-99) , 
10, 0.148564, 1, 0, 0.492797,-99) , 
12, -0.177718, 1, 0, 0.502345,-99) , 
0, 0.490472, 1, 0, 0.504899,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0363925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471955,-99) , 
11, -2.31526, 1, 0, 0.518106,-99) , 
6, 0.854854, 1, 0, 0.537187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491943,-99) , 
11, -2.33241, 0, 0, 0.503989,-99) , 
NN(
0, 
0, 
-1, 3.71097, 1, -1, 0.488003,-99) , 
3, 3.79819, 0, 0, 0.496683,-99) , 
6, 0.809499, 0, 0, 0.502082,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0568685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502262, 0, 1, 0.524798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485635,-99) , 
0, 0.503804, 1, 0, 0.519951,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14279, 0, 1, 0.51897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276629,-99) , 
9, -1.86526, 0, 0, 0.503003,-99) , 
9, -950.08, 1, 0, 0.510659,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0374308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29541, 1, 1, 0.548034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462014,-99) , 
11, -2.76553, 0, 0, 0.504059,-99) , 
12, -0.975559, 1, 0, 0.509329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46341,-99) , 
11, -2.54436, 0, 0, 0.471995,-99) , 
0, 0.503805, 0, 0, 0.479654,-99) , 
10, -0.428476, 0, 0, 0.501699,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0202601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497532,-99) , 
9, -950.08, 1, 0, 0.504382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469533,-99) , 
11, -0.0170143, 1, 0, 0.502382,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.470791,-99) , 
0, 0.504756, 1, 0, 0.499898,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0500928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452184,-99) , 
9, -951.287, 0, 0, 0.485582,-99) , 
11, -1.20238, 1, 0, 0.514012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47984,-99) , 
11, -2.09726, 1, 0, 0.497734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472867,-99) , 
0, 0.493329, 1, 0, 0.479617,-99) , 
8, 5.5921, 1, 0, 0.488952,-99) , 
10, 1.85712, 0, 0, 0.491289,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0310117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492808,-99) , 
6, 0.333077, 0, 0, 0.527721,-99) , 
NN(
0, 
0, 
-1, 0.489092, 0, -1, 0.495979,-99) , 
0, 0.495369, 0, 0, 0.50167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491278,-99) , 
11, -2.9451, 0, 0, 0.508849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481559,-99) , 
11, -3.16915, 1, 0, 0.484792,-99) , 
10, -0.709333, 1, 0, 0.489095,-99) , 
0, 0.496186, 1, 0, 0.493427,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0143921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480828,-99) , 
12, 0.977209, 1, 0, 0.499789,-99) , 
12, 2.1984, 0, 0, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461023,-99) , 
8, 10.8698, 1, 0, 0.499913,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.033325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49994,-99) , 
10, 0.478008, 0, 0, 0.543653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487938,-99) , 
10, 1.09534, 0, 0, 0.502158,-99) , 
12, -0.487647, 1, 0, 0.509173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498404,-99) , 
0, 0.503804, 0, 0, 0.504729,-99) , 
NN(
0, 
0, 
-1, -1.1522, 1, -1, 0.473294,-99) , 
6, 0.333301, 1, 0, 0.493393,-99) , 
10, 0.143038, 0, 0, 0.502177,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_8_12::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_8_12::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_8_12 *ReadBDT_maker_LHC19c2a_8_12(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_8_12(theInpVar);
  }
}
