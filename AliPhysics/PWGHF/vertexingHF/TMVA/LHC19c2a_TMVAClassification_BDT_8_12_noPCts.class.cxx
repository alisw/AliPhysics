#include "LHC19c2a_TMVAClassification_BDT_8_12_noPCts.class.h"

double ReadBDT_LHC19c2a_8_12_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_8_12_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.594327770616508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.835984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238803,-99) , 
4, 0.999524, 0, 0, 0.787294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235616,-99) , 
8, -1.69719, 1, 0, 0.364413,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.0259704,-99) , 
4, 0.999524, 0, 0, 0.298553,-99) , 
8, -2.63065, 1, 0, 0.501638,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.504665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03072, 1, 1, 0.758944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245072,-99) , 
4, 0.999524, 0, 0, 0.713537,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.289,-99) , 
8, -2.44277, 1, 0, 0.48427,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.376063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.60112, 1, 1, 0.714751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228531,-99) , 
4, 0.999977, 0, 0, 0.418591,-99) , 
NN(
0, 
0, 
-1, -1.99713, 1, -1, 0.0457379,-99) , 
4, 0.999524, 0, 0, 0.356931,-99) , 
8, -2.66445, 1, 0, 0.495753,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.310346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.6786, 1, 1, 0.766429,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.384553,-99) , 
8, -3.2149, 1, 0, 0.472897,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.37397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.710457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444184,-99) , 
4, 0.999955, 0, 0, 0.645781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.159593,-99) , 
4, 0.999048, 0, 0, 0.611391,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.329728,-99) , 
8, -2.00879, 1, 0, 0.494334,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.265511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75078, 1, 1, 0.761165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.183464,-99) , 
7, 2.14299, 1, 0, 0.494604,-99) , 
8, -3.28405, 1, 0, 0.55238,-99) , 
NN(
0, 
0, 
-1, -2.57221, 1, -1, 0.148728,-99) , 
4, 0.999524, 0, 0, 0.503823,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.23743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.24898, 1, 1, 0.735824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306048,-99) , 
4, 0.999955, 0, 0, 0.459394,-99) , 
NN(
0, 
0, 
-1, -2.01829, 1, -1, 0.0706956,-99) , 
4, 0.999048, 0, 0, 0.422964,-99) , 
8, -3.32811, 1, 0, 0.482234,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.221445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.85577, 1, 1, 0.678342,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.410028,-99) , 
8, -3.2362, 1, 0, 0.467643,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.226936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75078, 1, 1, 0.620153,-99) , 
NN(
0, 
0, 
-1, 2.42846, 1, -1, 0.433224,-99) , 
8, -2.63065, 1, 0, 0.508604,-99) , 
NN(
0, 
0, 
-1, -2.01771, 1, -1, 0.121039,-99) , 
4, 0.999048, 0, 0, 0.47759,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.158906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.45108, 1, 1, 0.536388,-99) , 
NN(
0, 
0, 
-1, 2.42882, 1, -1, 0.224189,-99) , 
7, 2.14283, 1, 0, 0.513765,-99) , 
NN(
0, 
0, 
-1, -1.98568, 1, -1, 0.123783,-99) , 
4, 0.999048, 0, 0, 0.483467,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.162864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.631638, 0, 1, 0.695742,-99) , 
NN(
0, 
0, 
-1, -0.713999, 0, -1, 0.465481,-99) , 
8, -3.51276, 1, 0, 0.499628,-99) , 
NN(
0, 
0, 
-1, -1.94318, 1, -1, 0.151208,-99) , 
4, 0.999048, 0, 0, 0.472879,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.165847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.08055, 1, 1, 0.542995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196043,-99) , 
8, -1.12413, 1, 0, 0.308504,-99) , 
7, 1.85712, 1, 0, 0.517606,-99) , 
NN(
0, 
0, 
-1, -2.10436, 1, -1, 0.15273,-99) , 
4, 0.999048, 0, 0, 0.489846,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.198562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472081,-99) , 
4, 0.999997, 0, 0, 0.531124,-99) , 
NN(
0, 
0, 
-1, -2.26356, 1, -1, 0.353427,-99) , 
4, 0.999932, 0, 0, 0.495268,-99) , 
NN(
0, 
0, 
-1, 0.110413, 1, -1, 0.110817,-99) , 
4, 0.998572, 0, 0, 0.473912,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.160995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00226719, 1, 1, 0.5441,-99) , 
NN(
0, 
0, 
-1, 1.85867, 1, -1, 0.369605,-99) , 
8, -1.32383, 1, 0, 0.505347,-99) , 
NN(
0, 
0, 
-1, -0.0814423, 1, -1, 0.137322,-99) , 
4, 0.998571, 0, 0, 0.485011,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.119619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.17056, 0, 1, 0.737028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241827,-99) , 
7, -0.998669, 0, 0, 0.477787,-99) , 
8, -3.97577, 1, 0, 0.496494,-99) , 
NN(
0, 
0, 
-1, -1.96091, 1, -1, 0.173322,-99) , 
4, 0.999048, 0, 0, 0.473872,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.13852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15555, 0, 1, 0.727482,-99) , 
NN(
0, 
0, 
-1, -0.714182, 0, -1, 0.460027,-99) , 
8, -4.01102, 1, 0, 0.477883,-99) , 
NN(
0, 
0, 
-1, 1.00969, 1, -1, 0.128134,-99) , 
4, 0.998572, 0, 0, 0.460002,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.166641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475626,-99) , 
4, 0.999996, 0, 0, 0.525713,-99) , 
NN(
0, 
0, 
-1, -2.23822, 1, -1, 0.352649,-99) , 
4, 0.999909, 0, 0, 0.494304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.121505,-99) , 
4, 0.998095, 0, 0, 0.479076,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.121345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12616, 0, 1, 0.718058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309278,-99) , 
7, -0.714175, 0, 0, 0.481121,-99) , 
8, -3.97577, 1, 0, 0.498095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.110417,-99) , 
4, 0.998095, 0, 0, 0.483131,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.1329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.485768, 0, 1, 0.640655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268214,-99) , 
7, -0.68713, 0, 0, 0.47306,-99) , 
8, -3.51832, 1, 0, 0.499493,-99) , 
NN(
0, 
0, 
-1, -1.19133, 1, -1, 0.282354,-99) , 
7, 1.85712, 1, 0, 0.474856,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.127466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11293, 0, 1, 0.701444,-99) , 
NN(
0, 
0, 
-1, 0.999909, 0, -1, 0.461246,-99) , 
8, -3.93746, 1, 0, 0.478779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.126297,-99) , 
4, 0.998095, 0, 0, 0.464857,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.134185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247547,-99) , 
7, 2.42852, 1, 0, 0.517969,-99) , 
NN(
0, 
0, 
-1, -1.98953, 1, -1, 0.346358,-99) , 
4, 0.999887, 0, 0, 0.489952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.101457,-99) , 
4, 0.997619, 0, 0, 0.476837,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.137544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.338151, 0, 1, 0.611754,-99) , 
NN(
0, 
0, 
-1, -0.428321, 0, -1, 0.453925,-99) , 
8, -3.41502, 1, 0, 0.47937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.126193,-99) , 
4, 0.998095, 0, 0, 0.466365,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.187855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00164, 0, 1, 0.678158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359247,-99) , 
8, -1.22721, 1, 0, 0.521295,-99) , 
6, -951.286, 0, 0, 0.608356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416931,-99) , 
8, -2.85043, 1, 0, 0.45298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.123062,-99) , 
4, 0.997619, 0, 0, 0.440899,-99) , 
1, -0.0026657, 1, 0, 0.47988,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.158102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443213,-99) , 
7, -0.142776, 0, 0, 0.518795,-99) , 
NN(
0, 
0, 
-1, -1.70837, 1, -1, 0.378973,-99) , 
4, 0.999887, 0, 0, 0.496254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.116932,-99) , 
4, 0.997619, 0, 0, 0.484668,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0989244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36491,-99) , 
7, -1.19042, 0, 0, 0.503991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254342,-99) , 
7, 2.42842, 1, 0, 0.494071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.155591,-99) , 
4, 0.998095, 0, 0, 0.482198,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0962025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28854, 0, 1, 0.670805,-99) , 
NN(
0, 
0, 
-1, -1.28541, 0, -1, 0.473446,-99) , 
8, -3.97577, 1, 0, 0.486662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199791,-99) , 
4, 0.998572, 0, 0, 0.473905,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.116221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428162,-99) , 
7, -0.414911, 0, 0, 0.500927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25871,-99) , 
7, 2.42842, 1, 0, 0.491663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151441,-99) , 
4, 0.998095, 0, 0, 0.480061,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.13936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455854,-99) , 
6, -949.507, 0, 0, 0.509493,-99) , 
NN(
0, 
0, 
-1, -1.98953, 1, -1, 0.399677,-99) , 
4, 0.999932, 0, 0, 0.487543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20918,-99) , 
4, 0.998571, 0, 0, 0.475385,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0916539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46301, 0, 1, 0.672601,-99) , 
NN(
0, 
0, 
-1, -1.14618, 0, -1, 0.482527,-99) , 
8, -4.04814, 1, 0, 0.49533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543749,-99) , 
NN(
0, 
0, 
-1, 1.52219, 0, -1, 0.237917,-99) , 
8, -1.22881, 1, 0, 0.32851,-99) , 
7, 1.85713, 1, 0, 0.477833,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0701583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.08055, 1, 1, 0.514031,-99) , 
NN(
0, 
0, 
-1, -0.791211, 1, -1, 0.367483,-99) , 
7, 1.85704, 1, 0, 0.499283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196363,-99) , 
4, 0.998095, 0, 0, 0.489392,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0700323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19073, 0, 1, 0.659661,-99) , 
NN(
0, 
0, 
-1, -1.28398, 0, -1, 0.481911,-99) , 
8, -4.01102, 1, 0, 0.49308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18582,-99) , 
4, 0.99762, 0, 0, 0.484548,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0928404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381456,-99) , 
7, -1.19043, 0, 0, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284332,-99) , 
7, 2.42852, 1, 0, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.207797,-99) , 
4, 0.998095, 0, 0, 0.490908,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0963083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386505,-99) , 
7, -1.14958, 0, 0, 0.501681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279321,-99) , 
8, -1.19502, 1, 0, 0.369893,-99) , 
7, 1.85703, 1, 0, 0.48842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.171739,-99) , 
4, 0.99762, 0, 0, 0.480166,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.08879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13351, 0, 1, 0.637139,-99) , 
NN(
0, 
0, 
-1, -1.28071, 0, -1, 0.470571,-99) , 
8, -3.9727, 1, 0, 0.481867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.182027,-99) , 
4, 0.997619, 0, 0, 0.473824,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0728105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22861, 0, 1, 0.635955,-99) , 
NN(
0, 
0, 
-1, -1.28557, 0, -1, 0.479252,-99) , 
8, -3.94337, 1, 0, 0.490251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.183708,-99) , 
4, 0.997619, 0, 0, 0.482246,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0733469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428446, 0, 1, 0.59648,-99) , 
NN(
0, 
0, 
-1, -0.714232, 0, -1, 0.482083,-99) , 
8, -3.45108, 1, 0, 0.499287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.204002,-99) , 
4, 0.99762, 0, 0, 0.491663,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.079058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.686147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382116,-99) , 
8, -0.818939, 1, 0, 0.48866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20716,-99) , 
4, 0.997619, 0, 0, 0.480835,-99) , 
1, 0.00645084, 0, 0, 0.500187,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.12551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.792762, 0, 1, 0.654123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438338,-99) , 
8, -1.31378, 1, 0, 0.552759,-99) , 
6, -951.286, 0, 0, 0.608757,-99) , 
NN(
0, 
0, 
-1, 2.42851, 1, -1, 0.455963,-99) , 
1, -0.00283878, 1, 0, 0.49003,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.119533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465891,-99) , 
4, 0.999987, 0, 0, 0.526009,-99) , 
NN(
0, 
0, 
-1, -1.74797, 1, -1, 0.425812,-99) , 
4, 0.999909, 0, 0, 0.508929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219637,-99) , 
4, 0.998095, 0, 0, 0.500467,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.101493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42368,-99) , 
7, -0.999721, 0, 0, 0.520279,-99) , 
NN(
0, 
0, 
-1, -1.98287, 1, -1, 0.409341,-99) , 
4, 0.999819, 0, 0, 0.507712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25898,-99) , 
4, 0.998095, 0, 0, 0.50034,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0629103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491953,-99) , 
8, -3.76149, 1, 0, 0.504416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351687,-99) , 
7, -1.57128, 0, 0, 0.497176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267877,-99) , 
4, 0.998095, 0, 0, 0.49055,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0786782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498655,-99) , 
0, 0.495234, 1, 0, 0.517884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318684,-99) , 
6, -951.286, 0, 0, 0.417765,-99) , 
8, -0.753887, 1, 0, 0.506441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279149,-99) , 
4, 0.998095, 0, 0, 0.4998,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.109203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29115, 0, 1, 0.633279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429136,-99) , 
7, -0.306055, 0, 0, 0.505517,-99) , 
8, -3.97577, 1, 0, 0.514465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266497,-99) , 
8, -0.950982, 1, 0, 0.360635,-99) , 
7, 2.14282, 1, 0, 0.504616,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0705978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.574323, 0, 1, 0.575805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395962,-99) , 
7, -0.427411, 0, 0, 0.488949,-99) , 
8, -3.36417, 1, 0, 0.503624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263549,-99) , 
4, 0.998095, 0, 0, 0.496802,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0812719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.775996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.729573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485132,-99) , 
8, -4.37443, 1, 0, 0.535667,-99) , 
7, -0.28612, 0, 0, 0.582763,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.473129,-99) , 
8, -3.30267, 1, 0, 0.493159,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.149106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.75857, 1, 1, 0.621566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457051,-99) , 
8, -3.72554, 1, 0, 0.489985,-99) , 
7, 0.473158, 0, 0, 0.526216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424019,-99) , 
6, -951.286, 0, 0, 0.475773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180625,-99) , 
4, 0.999524, 0, 0, 0.451548,-99) , 
8, -1.9821, 1, 0, 0.496896,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0913356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.876511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474584,-99) , 
7, -0.519007, 0, 0, 0.533779,-99) , 
7, 0.473314, 0, 0, 0.56066,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.474418,-99) , 
8, -2.78502, 1, 0, 0.503235,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0881116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37206,-99) , 
7, -1.70735, 0, 0, 0.52497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345959,-99) , 
7, 2.42838, 1, 0, 0.518614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311145,-99) , 
3, 8.33212, 1, 0, 0.511179,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0568153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1292, 1, 1, 0.517368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378159,-99) , 
7, -1.57049, 0, 0, 0.510863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315563,-99) , 
4, 0.998572, 0, 0, 0.503484,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0641214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
2, -0.0732292, 1, 0, 0.512048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329704,-99) , 
8, -1.22881, 1, 0, 0.407758,-99) , 
7, 1.85712, 1, 0, 0.501326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31011,-99) , 
3, 8.64067, 1, 0, 0.495272,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0972206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.62729, 1, 1, 0.52406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341881,-99) , 
8, -4.17819, 1, 0, 0.41776,-99) , 
7, -1.2584, 0, 0, 0.51432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599398,-99) , 
NN(
0, 
0, 
-1, 1.29699, 0, -1, 0.348627,-99) , 
8, -1.47117, 1, 0, 0.418508,-99) , 
7, 1.57136, 1, 0, 0.49994,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.108639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.95984, 1, 1, 0.687302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458361,-99) , 
1, 0.00289285, 0, 0, 0.495351,-99) , 
7, 0.215732, 0, 0, 0.533078,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.465245,-99) , 
8, -2.63586, 1, 0, 0.49149,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.065601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.322039, 0, 1, 0.570144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428764,-99) , 
9, -0.831097, 0, 0, 0.490667,-99) , 
8, -3.30267, 1, 0, 0.505473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293072,-99) , 
4, 0.998096, 0, 0, 0.499794,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0913058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.747549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476469,-99) , 
8, -4.41292, 1, 0, 0.522085,-99) , 
7, -0.320702, 0, 0, 0.5648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478628,-99) , 
2, 0.081045, 0, 0, 0.490727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330248,-99) , 
4, 0.999048, 0, 0, 0.482214,-99) , 
8, -3.32011, 1, 0, 0.496956,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0773547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00133645, 0, 1, 0.566552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482671,-99) , 
2, 0.073954, 0, 0, 0.497694,-99) , 
3, 0.917566, 1, 0, 0.512145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316717,-99) , 
3, 8.62065, 1, 0, 0.506116,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0650577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.740306, 0, 1, 0.53259,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.479272,-99) , 
8, -2.00879, 1, 0, 0.511019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325823,-99) , 
3, 8.43467, 1, 0, 0.505083,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0759269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00855322, 0, 1, 0.529878,-99) , 
NN(
0, 
0, 
-1, 4.21945, 1, -1, 0.450772,-99) , 
4, 0.999932, 0, 0, 0.514323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350594,-99) , 
4, 0.998572, 0, 0, 0.508369,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0640189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.603503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486283,-99) , 
2, -0.0728955, 1, 0, 0.498355,-99) , 
3, 0.52472, 1, 0, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333229,-99) , 
3, 8.44115, 1, 0, 0.500926,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.04126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498969,-99) , 
8, -3.32251, 1, 0, 0.511034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355463,-99) , 
7, -1.85697, 0, 0, 0.506984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33652,-99) , 
3, 8.63683, 1, 0, 0.501852,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0622545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0183687, 0, 1, 0.522899,-99) , 
NN(
0, 
0, 
-1, 4.17451, 1, -1, 0.452898,-99) , 
4, 0.999909, 0, 0, 0.510782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319331,-99) , 
4, 0.998095, 0, 0, 0.505797,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0873916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451326,-99) , 
7, -0.918394, 0, 0, 0.51825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367339,-99) , 
8, -1.17638, 1, 0, 0.436206,-99) , 
7, 1.85704, 1, 0, 0.510122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342742,-99) , 
3, 8.6342, 1, 0, 0.505142,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0796361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468988,-99) , 
3, 4.00497, 1, 0, 0.547815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
2, 0.0823814, 0, 0, 0.48928,-99) , 
2, -0.0668205, 1, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325197,-99) , 
4, 0.998095, 0, 0, 0.495017,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0906758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472055,-99) , 
4, 0.999994, 0, 0, 0.512265,-99) , 
NN(
0, 
0, 
-1, -2.23203, 1, -1, 0.445112,-99) , 
4, 0.999864, 0, 0, 0.503833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364324,-99) , 
4, 0.998572, 0, 0, 0.49898,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0731887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.75655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480573,-99) , 
8, -4.41806, 1, 0, 0.523388,-99) , 
7, -0.335193, 0, 0, 0.565785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446871,-99) , 
9, -0.772308, 0, 0, 0.495706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318372,-99) , 
4, 0.998571, 0, 0, 0.489536,-99) , 
8, -3.35154, 1, 0, 0.502452,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0804435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.723101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479801,-99) , 
8, -3.5641, 1, 0, 0.519034,-99) , 
7, 0.445516, 0, 0, 0.541224,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.475188,-99) , 
8, -2.63065, 1, 0, 0.500753,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0736452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495424,-99) , 
8, -3.06335, 1, 0, 0.515814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366731,-99) , 
7, 1.57355, 1, 0, 0.447146,-99) , 
8, -1.32141, 1, 0, 0.50156,-99) , 
1, 0.0096605, 0, 0, 0.508855,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0678906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.38071, 1, 1, 0.520416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372998,-99) , 
6, -951.286, 0, 0, 0.447468,-99) , 
8, -0.776762, 1, 0, 0.511692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371336,-99) , 
3, 8.34575, 1, 0, 0.507227,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.043374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494872,-99) , 
0, 0.494283, 1, 0, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358706,-99) , 
4, 0.998095, 0, 0, 0.502976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344324,-99) , 
7, -1.85699, 0, 0, 0.498986,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0594164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499325,-99) , 
7, 0.541901, 0, 0, 0.532566,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48447,-99) , 
8, -2.11407, 1, 0, 0.511528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360872,-99) , 
3, 8.17267, 1, 0, 0.506267,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0700089);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.366964, 0, 1, 0.545041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44882,-99) , 
9, -0.364069, 0, 0, 0.500693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369366,-99) , 
4, 0.999048, 0, 0, 0.49408,-99) , 
8, -2.7511, 1, 0, 0.511707,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0697002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.291965, 0, 1, 0.576156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38593,-99) , 
4, 0.999524, 0, 0, 0.49564,-99) , 
8, -2.91749, 1, 0, 0.515938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359385,-99) , 
8, -4.18106, 1, 0, 0.427645,-99) , 
7, -1.28556, 0, 0, 0.50923,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0957594);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.649707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467431,-99) , 
7, 0.0803492, 0, 0, 0.497805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383895,-99) , 
7, 1.29007, 1, 0, 0.442058,-99) , 
8, -1.4611, 1, 0, 0.48456,-99) , 
1, -0.00631266, 1, 0, 0.49895,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0931659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.14134, 1, 1, 0.621722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469616,-99) , 
8, -4.34105, 1, 0, 0.495608,-99) , 
7, -0.110658, 0, 0, 0.536877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46331,-99) , 
6, -949.507, 0, 0, 0.489478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322387,-99) , 
4, 0.999048, 0, 0, 0.481454,-99) , 
8, -2.68351, 1, 0, 0.501802,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0510669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.381536, 0, 1, 0.530286,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.483237,-99) , 
8, -2.66445, 1, 0, 0.500834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360345,-99) , 
3, 8.42112, 1, 0, 0.496434,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0701381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498589,-99) , 
8, -4.28851, 1, 0, 0.512632,-99) , 
7, 0.411318, 0, 0, 0.531515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477268,-99) , 
2, -0.039716, 1, 0, 0.49417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376656,-99) , 
4, 0.999524, 0, 0, 0.485697,-99) , 
8, -2.63865, 1, 0, 0.503217,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0668496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.373919, 0, 1, 0.665762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492214,-99) , 
8, -4.2656, 1, 0, 0.514361,-99) , 
7, 0.0150081, 0, 0, 0.545911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440367,-99) , 
3, 4.12728, 1, 0, 0.491204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344634,-99) , 
4, 0.999048, 0, 0, 0.484611,-99) , 
8, -2.82977, 1, 0, 0.504155,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0511164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494662,-99) , 
8, -3.57668, 1, 0, 0.52079,-99) , 
7, 0.401527, 0, 0, 0.538492,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.485816,-99) , 
8, -2.66677, 1, 0, 0.505549,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0816255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.780283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467355,-99) , 
7, -1.04282, 0, 0, 0.539646,-99) , 
7, 0.161288, 0, 0, 0.563863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467845,-99) , 
9, -0.081044, 0, 0, 0.49246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359678,-99) , 
4, 0.999048, 0, 0, 0.486529,-99) , 
8, -3.02271, 1, 0, 0.50627,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0659444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.149256, 0, 1, 0.545518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445461,-99) , 
3, 4.37807, 1, 0, 0.492496,-99) , 
8, -2.9107, 1, 0, 0.509775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557912,-99) , 
NN(
0, 
0, 
-1, 1.28817, 0, -1, 0.356348,-99) , 
6, -951.287, 0, 0, 0.430174,-99) , 
8, -0.670422, 1, 0, 0.501684,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0567886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.718517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483458,-99) , 
7, -0.506529, 0, 0, 0.520119,-99) , 
7, 0.27231, 0, 0, 0.541416,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.485637,-99) , 
8, -2.82977, 1, 0, 0.503266,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0413682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54412, 1, 1, 0.51329,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.429478,-99) , 
7, -1.2856, 0, 0, 0.506926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377879,-99) , 
3, 8.6342, 1, 0, 0.503176,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.106863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.536, 1, 1, 0.600042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461293,-99) , 
8, -2.32457, 1, 0, 0.509483,-99) , 
9, 0.498387, 0, 0, 0.5171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423502,-99) , 
6, -951.286, 0, 0, 0.503229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35387,-99) , 
9, 1.67554, 0, 0, 0.399164,-99) , 
7, 1.57184, 1, 0, 0.459378,-99) , 
8, -1.32835, 1, 0, 0.504762,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0925408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.56146, 1, 1, 0.590056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417347,-99) , 
0, 0.498091, 1, 0, 0.462224,-99) , 
3, 4.38545, 1, 0, 0.550058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454831,-99) , 
3, 4.16961, 1, 0, 0.525554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465498,-99) , 
2, 0.0285879, 0, 0, 0.476901,-99) , 
2, -0.0782361, 1, 0, 0.486511,-99) , 
2, 0.0713332, 0, 0, 0.498009,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0337765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.747992, 0, 1, 0.591893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377006,-99) , 
3, 8.62065, 1, 0, 0.49928,-99) , 
8, -3.69319, 1, 0, 0.506593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405843,-99) , 
7, -1.57123, 0, 0, 0.502147,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0356155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486314,-99) , 
7, -1.00259, 0, 0, 0.552154,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.492868,-99) , 
8, -3.75667, 1, 0, 0.498637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393875,-99) , 
8, -0.0208373, 1, 0, 0.493489,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0635475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.76274, 1, 1, 0.517778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445068,-99) , 
6, -951.286, 0, 0, 0.506862,-99) , 
NN(
0, 
0, 
-1, 1.2452, 0, -1, 0.402984,-99) , 
7, 1.57563, 1, 0, 0.463288,-99) , 
8, -1.28495, 1, 0, 0.506564,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0518977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48685,-99) , 
8, -4.33898, 1, 0, 0.501502,-99) , 
7, 0.129097, 0, 0, 0.52368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445635,-99) , 
9, -0.508252, 0, 0, 0.488408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384531,-99) , 
4, 0.999048, 0, 0, 0.483518,-99) , 
8, -2.97313, 1, 0, 0.494591,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0390983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.982284, 0, 1, 0.583279,-99) , 
NN(
0, 
0, 
-1, 8.23356, 1, -1, 0.489256,-99) , 
8, -3.74679, 1, 0, 0.495981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404917,-99) , 
7, -1.57123, 0, 0, 0.49183,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0434139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38567,-99) , 
9, -2.15485, 0, 0, 0.503167,-99) , 
8, -4.34716, 1, 0, 0.507184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526947,-99) , 
NN(
0, 
0, 
-1, 0.717622, 0, -1, 0.390918,-99) , 
6, -951.286, 0, 0, 0.443405,-99) , 
8, -0.753887, 1, 0, 0.500097,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0596155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00210728, 0, 1, 0.552796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483104,-99) , 
8, -3.91043, 1, 0, 0.48897,-99) , 
3, 0.844397, 1, 0, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387137,-99) , 
3, 7.85372, 1, 0, 0.496362,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0853619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0742, 0, 1, 0.623473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459104,-99) , 
8, -2.99714, 1, 0, 0.495621,-99) , 
7, 0.564981, 0, 0, 0.520181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42629,-99) , 
4, 0.999977, 0, 0, 0.485897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333213,-99) , 
4, 0.999524, 0, 0, 0.475271,-99) , 
8, -2.16059, 1, 0, 0.499721,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0588619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462539,-99) , 
4, 0.999864, 0, 0, 0.5447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470147,-99) , 
2, 0.00832384, 0, 0, 0.488395,-99) , 
2, -0.0662518, 1, 0, 0.498295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390878,-99) , 
4, 0.998571, 0, 0, 0.494943,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0650513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496709,-99) , 
3, 2.7279, 1, 0, 0.545133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476738,-99) , 
3, 0.861652, 1, 0, 0.48901,-99) , 
2, -0.0696585, 1, 0, 0.498758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391878,-99) , 
3, 7.89162, 1, 0, 0.494713,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0601529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.659042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488651,-99) , 
1, -0.0104735, 1, 0, 0.493044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373271,-99) , 
6, -951.286, 0, 0, 0.42965,-99) , 
8, -0.670422, 1, 0, 0.486913,-99) , 
1, 0.00855322, 0, 0, 0.497105,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0392344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489685,-99) , 
7, -0.537067, 0, 0, 0.544973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393593,-99) , 
4, 0.998572, 0, 0, 0.500372,-99) , 
8, -3.16444, 1, 0, 0.508855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422011,-99) , 
7, -1.57124, 0, 0, 0.505142,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0514899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490234,-99) , 
7, -1.00004, 0, 0, 0.545861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49327,-99) , 
8, -3.79939, 1, 0, 0.499692,-99) , 
0, 0.494284, 1, 0, 0.509317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523035,-99) , 
NN(
0, 
0, 
-1, 0.717622, 0, -1, 0.394903,-99) , 
6, -951.286, 0, 0, 0.445711,-99) , 
8, -0.776762, 1, 0, 0.501899,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0940171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.667262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488489,-99) , 
7, 0.74066, 0, 0, 0.508357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437243,-99) , 
7, 0.71517, 1, 0, 0.462808,-99) , 
8, -1.97724, 1, 0, 0.490844,-99) , 
1, 0.00682455, 0, 0, 0.505966,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0830521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.686384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486007,-99) , 
7, 0.74264, 0, 0, 0.504111,-99) , 
1, -0.00423992, 1, 0, 0.527824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438094,-99) , 
4, 0.999955, 0, 0, 0.498812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303241,-99) , 
4, 0.999524, 0, 0, 0.486413,-99) , 
8, -2.16545, 1, 0, 0.508996,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0601032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00707513, 0, 1, 0.530753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447029,-99) , 
4, 0.999977, 0, 0, 0.489882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334829,-99) , 
4, 0.999524, 0, 0, 0.479317,-99) , 
8, -2.07658, 1, 0, 0.508957,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0724957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.07413, 0, 1, 0.524899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463528,-99) , 
7, 0.429577, 1, 0, 0.485253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371143,-99) , 
6, -951.287, 0, 0, 0.421471,-99) , 
8, -0.539936, 1, 0, 0.473197,-99) , 
8, -2.17315, 1, 0, 0.501147,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0495467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489638,-99) , 
2, 0.0713112, 0, 0, 0.498624,-99) , 
8, -4.35712, 1, 0, 0.502656,-99) , 
NN(
0, 
0, 
-1, 0.305131, 1, -1, 0.433676,-99) , 
8, -0.791893, 1, 0, 0.494403,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.046256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0715338, 1, 1, 0.515921,-99) , 
NN(
0, 
0, 
-1, 0.389322, 0, -1, 0.454064,-99) , 
8, -0.77623, 1, 0, 0.508497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403548,-99) , 
7, -1.57099, 0, 0, 0.503603,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0557864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537349, 0, 1, 0.569459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481046,-99) , 
8, -1.46931, 1, 0, 0.54763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486282,-99) , 
8, -3.08055, 1, 0, 0.497189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411028,-99) , 
7, -1.57127, 0, 0, 0.493489,-99) , 
2, -0.0687878, 1, 0, 0.502997,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0436018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.583644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492564,-99) , 
2, 0.0729874, 0, 0, 0.501825,-99) , 
3, 0.520477, 1, 0, 0.508014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402195,-99) , 
3, 8.43731, 1, 0, 0.504677,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0389841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498082, 1, 1, 0.627618,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00984469, 1, 1, 0.508955,-99) , 
NN(
0, 
0, 
-1, 0.462917, 0, -1, 0.446716,-99) , 
8, -0.697467, 1, 0, 0.502597,-99) , 
1, 0.00921398, 0, 0, 0.509168,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.050183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00283878, 1, 1, 0.563674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452274,-99) , 
7, -0.713078, 0, 0, 0.543218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484874,-99) , 
2, 0.0780476, 0, 0, 0.49134,-99) , 
8, -4.08399, 1, 0, 0.494526,-99) , 
2, -0.0715937, 1, 0, 0.502966,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0440472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12774, 1, 1, 0.530497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489506,-99) , 
8, -3.76149, 1, 0, 0.493707,-99) , 
0, 0.496185, 1, 0, 0.506216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416333,-99) , 
7, -1.57129, 0, 0, 0.502169,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0441037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000970802, 0, 1, 0.538479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453158,-99) , 
7, -0.999839, 0, 0, 0.499183,-99) , 
3, 1.34167, 1, 0, 0.512372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405429,-99) , 
3, 8.63778, 1, 0, 0.509282,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0403242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.150413, 0, 1, 0.627354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496195,-99) , 
9, 0.923462, 0, 0, 0.501435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41541,-99) , 
6, -951.287, 0, 0, 0.450655,-99) , 
8, -0.697467, 1, 0, 0.49637,-99) , 
1, 0.00855322, 0, 0, 0.5042,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0357207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486232,-99) , 
4, 0.999524, 0, 0, 0.548219,-99) , 
NN(
0, 
0, 
-1, 0.914893, 0, 1, 0.505125,-99) , 
2, -0.0715937, 1, 0, 0.512482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521601,-99) , 
NN(
0, 
0, 
-1, 0.723954, 0, -1, 0.425655,-99) , 
6, -951.286, 0, 0, 0.46109,-99) , 
8, -0.730639, 1, 0, 0.506897,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0929901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3474, 1, 1, 0.56798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467879,-99) , 
2, -0.0230042, 1, 0, 0.497087,-99) , 
2, 0.050396, 0, 0, 0.510434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603611,-99) , 
NN(
0, 
0, 
-1, -1.9982, 1, -1, 0.452107,-99) , 
1, 0.00471101, 0, 0, 0.472026,-99) , 
3, 4.36372, 1, 0, 0.503068,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0303349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.18208, 1, 1, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416657,-99) , 
7, 2.4285, 1, 0, 0.507499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408902,-99) , 
8, 0.388298, 1, 0, 0.504453,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0692644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.87315, 1, 1, 0.547081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463116,-99) , 
8, -2.32465, 1, 0, 0.502386,-99) , 
9, 0.198979, 0, 0, 0.509595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450063,-99) , 
6, -951.286, 0, 0, 0.505569,-99) , 
NN(
0, 
0, 
-1, 1.30358, 0, -1, 0.434651,-99) , 
7, 1.57303, 1, 0, 0.475667,-99) , 
8, -1.32835, 1, 0, 0.502438,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0214989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.206995, 1, 1, 0.505629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43003,-99) , 
4, 0.998572, 0, 0, 0.503107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374522,-99) , 
7, -1.85611, 0, 0, 0.49986,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0881957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467129,-99) , 
4, 0.999994, 0, 0, 0.507781,-99) , 
NN(
0, 
0, 
-1, -1.63227, 1, -1, 0.44249,-99) , 
4, 0.999864, 0, 0, 0.499507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41114,-99) , 
4, 0.998572, 0, 0, 0.49666,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0452907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486914,-99) , 
3, 1.33781, 1, 0, 0.501473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424623,-99) , 
3, 8.6342, 1, 0, 0.499173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430221,-99) , 
7, -1.57102, 0, 0, 0.496122,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0315854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389781,-99) , 
7, -1.57128, 0, 0, 0.503412,-99) , 
8, -4.37921, 1, 0, 0.50691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436842,-99) , 
8, -0.0208373, 1, 0, 0.503528,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0539015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489037,-99) , 
2, 0.0305041, 0, 0, 0.50961,-99) , 
NN(
0, 
0, 
-1, -1.28079, 0, -1, 0.477578,-99) , 
3, 2.07981, 1, 0, 0.494144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413404,-99) , 
3, 8.34575, 1, 0, 0.491621,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0768033);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474375,-99) , 
4, 0.99999, 0, 0, 0.510179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371744,-99) , 
4, 0.999505, 1, 0, 0.438089,-99) , 
4, 0.999796, 0, 0, 0.503033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414691,-99) , 
4, 0.998571, 0, 0, 0.500265,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0448296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484675,-99) , 
3, 1.34064, 1, 0, 0.497458,-99) , 
2, -0.208899, 1, 0, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410083,-99) , 
3, 8.63683, 1, 0, 0.498905,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0324966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.04648, 1, 1, 0.555473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476521,-99) , 
8, -1.1172, 1, 0, 0.540989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497677,-99) , 
8, -3.83025, 1, 0, 0.501963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42914,-99) , 
7, -1.56958, 0, 0, 0.498738,-99) , 
2, -0.0715338, 1, 0, 0.506098,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0771882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.92095, 1, 1, 0.65753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483031,-99) , 
8, -2.55687, 1, 0, 0.499847,-99) , 
1, -0.00433779, 1, 0, 0.521129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488707,-99) , 
1, -0.00602228, 1, 0, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384948,-99) , 
8, -1.06421, 1, 0, 0.492668,-99) , 
7, 0.142866, 0, 0, 0.508861,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.054816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.99238, 1, 1, 0.585353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489629,-99) , 
6, -951.286, 1, 0, 0.511425,-99) , 
8, -2.53043, 1, 0, 0.525186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61791,-99) , 
NN(
0, 
0, 
-1, -1.31494, 1, -1, 0.489096,-99) , 
1, 0.00837762, 0, 0, 0.497566,-99) , 
7, 0.143038, 0, 0, 0.513155,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0617879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10289, 1, 1, 0.526097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462584,-99) , 
8, -4.3814, 1, 0, 0.481846,-99) , 
7, -0.714175, 0, 0, 0.518129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427575,-99) , 
4, 0.998571, 0, 0, 0.515379,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0589983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486761,-99) , 
4, 0.99999, 0, 0, 0.514276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401951,-99) , 
4, 0.999505, 1, 0, 0.446903,-99) , 
4, 0.999796, 0, 0, 0.507883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439462,-99) , 
4, 0.998571, 0, 0, 0.505729,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0347927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.44409, 1, 1, 0.573225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465262,-99) , 
2, -0.138443, 1, 0, 0.487262,-99) , 
3, 4.16743, 1, 0, 0.543777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498218,-99) , 
8, -3.43996, 1, 0, 0.503966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439899,-99) , 
8, -0.0170143, 1, 0, 0.500948,-99) , 
2, -0.0704645, 1, 0, 0.50862,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.091422);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477815,-99) , 
3, 4.38545, 1, 0, 0.53312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450757,-99) , 
2, -0.0165184, 1, 0, 0.488217,-99) , 
2, 0.0301127, 0, 0, 0.501573,-99) , 
2, -0.21475, 1, 0, 0.505099,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0356926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569807,-99) , 
NN(
NN(
0, 
0, 
-1, -2.9455, 1, 1, 0.512175,-99) , 
NN(
0, 
0, 
-1, 0.436407, 0, -1, 0.460146,-99) , 
8, -0.697467, 1, 0, 0.50674,-99) , 
2, -0.213808, 1, 0, 0.509934,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0315958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1322, 0, 1, 0.575166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437137,-99) , 
3, 8.63428, 1, 0, 0.506421,-99) , 
8, -3.90206, 1, 0, 0.510378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408797,-99) , 
7, -1.85697, 0, 0, 0.507811,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0421855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.146811, 0, 1, 0.613461,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00747, 0, 1, 0.511376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466054,-99) , 
7, 1.00248, 1, 0, 0.48119,-99) , 
8, -1.95498, 1, 0, 0.499883,-99) , 
1, 0.00855322, 0, 0, 0.506809,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0510632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494487,-99) , 
4, 0.999994, 0, 0, 0.513588,-99) , 
NN(
0, 
0, 
-1, -0.142402, 0, -1, 0.441255,-99) , 
4, 0.999864, 0, 0, 0.504441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430602,-99) , 
4, 0.998571, 0, 0, 0.502104,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0611205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485302,-99) , 
3, 3.98649, 1, 0, 0.538858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472561,-99) , 
2, 0.0128546, 0, 0, 0.494189,-99) , 
2, -0.0614986, 1, 0, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424819,-99) , 
4, 0.998571, 0, 0, 0.499954,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0219045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443051,-99) , 
4, 0.999524, 0, 0, 0.497547,-99) , 
8, -3.98024, 1, 0, 0.500957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409455,-99) , 
7, -1.85697, 0, 0, 0.498669,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0769977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.24332, 1, 1, 0.612682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479551,-99) , 
8, -4.36322, 1, 0, 0.482469,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.438447,-99) , 
8, -0.796064, 1, 0, 0.477717,-99) , 
1, -0.00439438, 1, 0, 0.496764,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0656638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19234, 1, 1, 0.622434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4782,-99) , 
8, -4.33319, 1, 0, 0.493595,-99) , 
7, -0.260131, 0, 0, 0.530608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49386,-99) , 
8, -2.11446, 1, 0, 0.509266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458954,-99) , 
8, -2.47251, 0, 0, 0.483004,-99) , 
9, -0.281915, 0, 0, 0.500366,-99) , 
8, -2.96792, 1, 0, 0.508481,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0670065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17094, 0, 1, 0.586591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458436,-99) , 
9, 0.63311, 0, 0, 0.505228,-99) , 
8, -2.05671, 1, 0, 0.526109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491243,-99) , 
1, -0.00599822, 1, 0, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419222,-99) , 
8, -0.667161, 1, 0, 0.497736,-99) , 
7, 0.714275, 0, 0, 0.508393,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.05556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481487,-99) , 
3, 4.18972, 1, 0, 0.543664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486989,-99) , 
2, -0.00307971, 1, 0, 0.509352,-99) , 
2, 0.0717208, 0, 0, 0.515313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459444,-99) , 
8, -0.0418059, 1, 0, 0.512435,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0357709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.30758, 1, 1, 0.513915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48673,-99) , 
6, -951.286, 0, 0, 0.514742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396818,-99) , 
7, 0.435156, 0, 0, 0.478362,-99) , 
8, -0.668191, 1, 0, 0.5103,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0342541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.01678, 0, 1, 0.512961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478621,-99) , 
9, 1.54893, 0, 0, 0.516268,-99) , 
NN(
0, 
0, 
-1, 0.443252, 0, -1, 0.452063,-99) , 
6, -951.287, 0, 0, 0.477507,-99) , 
8, -0.90616, 1, 0, 0.508179,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0288006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.366757, 1, 1, 0.563761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495794,-99) , 
2, -0.212598, 1, 0, 0.499929,-99) , 
3, 0.517534, 1, 0, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421716,-99) , 
3, 8.43467, 1, 0, 0.50229,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0449629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.724716, 0, 1, 0.621078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449412,-99) , 
4, 0.999524, 0, 0, 0.504711,-99) , 
8, -3.62678, 1, 0, 0.512733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424933,-99) , 
9, -1.98673, 0, 0, 0.458888,-99) , 
7, -1.28558, 0, 0, 0.508699,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0413389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6479, 1, 1, 0.603873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455502,-99) , 
8, -4.28833, 1, 0, 0.491305,-99) , 
7, -0.731961, 0, 0, 0.533254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495639,-99) , 
3, 0.514849, 1, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432157,-99) , 
3, 8.23356, 1, 0, 0.498616,-99) , 
8, -3.36417, 1, 0, 0.504283,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0460426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0327664, 0, 1, 0.53279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492082,-99) , 
2, 0.216433, 0, 0, 0.498084,-99) , 
3, 1.70504, 1, 0, 0.513316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430588,-99) , 
3, 8.43467, 1, 0, 0.510928,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0684521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474571,-99) , 
3, 4.28569, 1, 0, 0.529984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46596,-99) , 
2, -0.015701, 1, 0, 0.49028,-99) , 
2, 0.0309255, 0, 0, 0.501747,-99) , 
2, -0.213862, 1, 0, 0.504425,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0421033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.644076, 0, 1, 0.568658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487616,-99) , 
1, -0.00111011, 1, 0, 0.506679,-99) , 
8, -3.16541, 1, 0, 0.51924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371027,-99) , 
4, 0.999796, 0, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460186,-99) , 
4, 0.999524, 0, 0, 0.496356,-99) , 
0, 0.497138, 1, 0, 0.505857,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0401841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457177,-99) , 
8, -1.578, 1, 0, 0.525761,-99) , 
NN(
0, 
0, 
-1, -0.999839, 0, -1, 0.490773,-99) , 
2, 0.0708577, 0, 0, 0.496995,-99) , 
1, 0.00921398, 0, 0, 0.501886,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0400934);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.147947, 0, 1, 0.576143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492993,-99) , 
3, 1.26026, 1, 0, 0.505233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437233,-99) , 
3, 8.07448, 1, 0, 0.502945,-99) , 
1, -0.00808972, 1, 0, 0.507273,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0490743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35507, 1, 1, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468688,-99) , 
7, -1.28533, 0, 0, 0.518277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479974,-99) , 
1, 0.00328473, 0, 0, 0.509599,-99) , 
NN(
0, 
0, 
-1, 0.123591, 0, -1, 0.480873,-99) , 
8, -2.78502, 1, 0, 0.490448,-99) , 
0, 0.499043, 1, 0, 0.506592,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.024679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.375574, 1, 1, 0.546009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495759,-99) , 
8, -3.3876, 1, 0, 0.500587,-99) , 
3, 0.529995, 1, 0, 0.504173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432961,-99) , 
3, 8.63683, 1, 0, 0.502165,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0855547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.648785, 0, 1, 0.584933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388582,-99) , 
4, 0.999524, 0, 0, 0.50529,-99) , 
8, -2.53043, 1, 0, 0.520265,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499039, 1, 1, 0.577045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452154,-99) , 
8, -4.02353, 1, 0, 0.459783,-99) , 
1, 0.00205527, 0, 0, 0.496229,-99) , 
7, 0.142938, 0, 0, 0.509756,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0261904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.366776, 1, 1, 0.562692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494737,-99) , 
2, -0.217534, 1, 0, 0.497328,-99) , 
3, 0.517575, 1, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440929,-99) , 
3, 8.43467, 1, 0, 0.500449,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0551971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565994,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00484284, 0, 1, 0.529602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471784,-99) , 
2, 0.015895, 0, 0, 0.492485,-99) , 
2, -0.0307519, 1, 0, 0.503134,-99) , 
2, 0.214156, 0, 0, 0.506294,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0490641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410529,-99) , 
4, 0.999841, 0, 0, 0.506077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364346,-99) , 
8, -2.47955, 1, 0, 0.457261,-99) , 
4, 0.999524, 0, 0, 0.503121,-99) , 
2, 0.214584, 0, 0, 0.505904,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0353343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00767955, 0, 1, 0.514337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48439,-99) , 
2, -0.206422, 1, 0, 0.489549,-99) , 
3, 2.13352, 1, 0, 0.502635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434785,-99) , 
3, 8.62065, 1, 0, 0.500689,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0278753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495101,-99) , 
9, 0.846598, 0, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433041,-99) , 
8, 0.292789, 1, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404912,-99) , 
7, -1.85547, 0, 0, 0.496942,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.051153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493266,-99) , 
1, -0.00283878, 1, 0, 0.512009,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.449861,-99) , 
4, 0.999728, 0, 0, 0.507216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441008,-99) , 
4, 0.998571, 0, 0, 0.505247,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0668487);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.293274, 0, 1, 0.53334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384012,-99) , 
4, 0.999524, 0, 0, 0.510403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456159,-99) , 
7, -0.606511, 1, 0, 0.470218,-99) , 
9, -0.0434002, 0, 0, 0.494686,-99) , 
8, -2.77212, 1, 0, 0.507484,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.02435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43446,-99) , 
7, 2.42871, 1, 0, 0.503998,-99) , 
8, -4.36981, 1, 0, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445408,-99) , 
8, -0.0149694, 1, 0, 0.503352,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0346153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48927,-99) , 
7, -0.958045, 0, 0, 0.545903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464789,-99) , 
8, -0.586524, 1, 0, 0.506179,-99) , 
8, -3.45788, 1, 0, 0.511612,-99) , 
NN(
0, 
0, 
-1, -1.28554, 0, -1, 0.484774,-99) , 
0, 0.49809, 1, 0, 0.498094,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.023364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.512143, 1, 1, 0.507512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436133,-99) , 
3, 8.62065, 1, 0, 0.505498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388945,-99) , 
7, -1.85671, 0, 0, 0.50255,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0482571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491822,-99) , 
8, -3.64139, 1, 0, 0.498658,-99) , 
7, 1.53373, 0, 0, 0.505436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456002,-99) , 
7, 1.35441, 1, 0, 0.488133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425929,-99) , 
7, -0.14161, 0, 0, 0.479358,-99) , 
8, -1.42361, 1, 0, 0.499202,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.029473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4949,-99) , 
2, -0.0301421, 1, 0, 0.503552,-99) , 
2, 0.214536, 0, 0, 0.505927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409955,-99) , 
7, -1.85699, 0, 0, 0.503518,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0461507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483837,-99) , 
8, -2.2569, 1, 0, 0.501853,-99) , 
9, 1.02341, 0, 0, 0.505616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382972,-99) , 
7, 2.32176, 1, 0, 0.488467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394109,-99) , 
7, 0.151573, 0, 0, 0.468314,-99) , 
8, -0.916168, 1, 0, 0.50043,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0439514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57574, 1, 1, 0.567332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
9, -0.349125, 0, 0, 0.496422,-99) , 
8, -3.17631, 1, 0, 0.504619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469954,-99) , 
8, -2.24732, 1, 0, 0.509005,-99) , 
NN(
0, 
0, 
-1, -2.19546, 1, -1, 0.445529,-99) , 
9, -1.5791, 0, 0, 0.468034,-99) , 
7, -0.714216, 0, 0, 0.497953,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.014712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499386,-99) , 
2, 0.210723, 0, 0, 0.50198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43252,-99) , 
3, 8.62065, 1, 0, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441584,-99) , 
7, -1.57123, 0, 0, 0.497409,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0930688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473864,-99) , 
1, 0.00477985, 0, 0, 0.499958,-99) , 
2, 0.214156, 0, 0, 0.50234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391465,-99) , 
7, -1.85695, 0, 0, 0.499575,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0297282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.58395, 1, 1, 0.511775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452009,-99) , 
8, 0.256035, 1, 0, 0.509547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446935,-99) , 
7, -1.57108, 0, 0, 0.506828,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0369972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485511,-99) , 
8, -1.56629, 1, 0, 0.558848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497986,-99) , 
7, 1.28098, 0, 0, 0.50335,-99) , 
9, 0.411826, 0, 0, 0.508765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46813,-99) , 
7, 1.23667, 1, 0, 0.48769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435607,-99) , 
7, 0.151495, 0, 0, 0.476945,-99) , 
8, -1.35313, 1, 0, 0.501663,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0456921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.526262, 0, 1, 0.515599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577335,-99) , 
NN(
0, 
0, 
-1, 1.28636, 1, -1, 0.459878,-99) , 
1, 0.0040614, 0, 0, 0.48531,-99) , 
8, -1.35313, 1, 0, 0.508876,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0316721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0362343, 0, 1, 0.555192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452431,-99) , 
4, 0.999048, 0, 0, 0.499029,-99) , 
8, -3.09048, 1, 0, 0.506975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537391,-99) , 
NN(
0, 
0, 
-1, -0.000787352, 1, -1, 0.460309,-99) , 
8, -2.98134, 0, 0, 0.483448,-99) , 
7, -0.714175, 0, 0, 0.502746,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0332464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0517673, 1, 1, 0.51613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484684,-99) , 
8, -2.82977, 1, 0, 0.493764,-99) , 
3, 1.69521, 1, 0, 0.503486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444859,-99) , 
3, 8.35214, 1, 0, 0.501669,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0550823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48164,-99) , 
4, 0.999994, 0, 0, 0.502901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414939,-99) , 
4, 0.999495, 1, 0, 0.449251,-99) , 
4, 0.999864, 0, 0, 0.49604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419876,-99) , 
4, 0.998571, 0, 0, 0.493859,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0477318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488347,-99) , 
8, -2.1951, 1, 0, 0.508657,-99) , 
9, 1.09195, 0, 0, 0.511863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443725,-99) , 
7, 2.13051, 1, 0, 0.490874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421604,-99) , 
7, 0.717619, 0, 0, 0.464201,-99) , 
8, -0.818939, 1, 0, 0.506123,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.047595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466249,-99) , 
8, -1.43667, 1, 0, 0.515012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476263,-99) , 
2, -0.0277702, 1, 0, 0.487147,-99) , 
2, 0.030458, 0, 0, 0.495298,-99) , 
2, -0.214102, 1, 0, 0.498524,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0204328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55789, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44905,-99) , 
8, 0.27225, 1, 0, 0.504246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442533,-99) , 
7, -1.57124, 0, 0, 0.501538,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0194434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459417,-99) , 
9, -1.69701, 0, 0, 0.497649,-99) , 
8, -4.41295, 1, 0, 0.500009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453916,-99) , 
8, -0.0418059, 1, 0, 0.497666,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0140213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441535,-99) , 
8, 0.325731, 1, 0, 0.498685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43098,-99) , 
3, 6.77891, 1, 0, 0.496405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432521,-99) , 
3, 8.34566, 1, 0, 0.494522,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0834423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30685, 0, 1, 0.58915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448421,-99) , 
9, 1.57809, 0, 0, 0.474581,-99) , 
8, -1.84057, 1, 0, 0.507379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456989,-99) , 
6, -951.286, 0, 0, 0.512281,-99) , 
NN(
0, 
0, 
-1, -2.99154, 1, -1, 0.475613,-99) , 
8, -1.87917, 0, 0, 0.483354,-99) , 
7, 1.00012, 0, 0, 0.490184,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0489775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48601,-99) , 
7, -0.442545, 0, 0, 0.521999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488254,-99) , 
9, 1.00796, 0, 0, 0.49391,-99) , 
8, -2.91604, 1, 0, 0.502751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51544,-99) , 
NN(
0, 
0, 
-1, 1.29079, 0, -1, 0.443751,-99) , 
6, -951.286, 0, 0, 0.470193,-99) , 
8, -0.674593, 1, 0, 0.499371,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0400137);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.436375, 0, 1, 0.512649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451326,-99) , 
7, 1.2876, 1, 0, 0.494688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452416,-99) , 
8, -0.135432, 1, 0, 0.483749,-99) , 
8, -1.35313, 1, 0, 0.506345,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0181699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.867582, 0, 1, 0.558521,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.496968,-99) , 
8, -3.72036, 1, 0, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446373,-99) , 
7, -1.57127, 0, 0, 0.498937,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0290633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427041,-99) , 
9, 1.4687, 0, 0, 0.484717,-99) , 
8, -1.20238, 1, 0, 0.530817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498067,-99) , 
4, 0.999048, 1, 0, 0.500852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443131,-99) , 
8, -0.2769, 1, 0, 0.497609,-99) , 
7, 1.85711, 0, 0, 0.500921,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0323877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487175,-99) , 
7, -0.865329, 0, 0, 0.541339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491784,-99) , 
7, 0.388175, 0, 0, 0.503797,-99) , 
8, -3.72404, 1, 0, 0.5065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453481,-99) , 
7, -1.57123, 0, 0, 0.504072,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0372478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0185272, 1, 1, 0.513881,-99) , 
NN(
0, 
0, 
-1, 0.999505, 1, -1, 0.450572,-99) , 
4, 0.999796, 0, 0, 0.507668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44088,-99) , 
4, 0.998571, 0, 0, 0.505675,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0249367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574825,-99) , 
NN(
NN(
0, 
0, 
-1, 0.658113, 0, 1, 0.507256,-99) , 
NN(
0, 
0, 
-1, 0.14609, 0, -1, 0.470561,-99) , 
8, -1.01434, 1, 0, 0.501545,-99) , 
9, -2.43377, 1, 0, 0.503554,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0285666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487899,-99) , 
3, 2.07982, 1, 0, 0.499591,-99) , 
2, -0.204321, 1, 0, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445835,-99) , 
3, 8.34575, 1, 0, 0.500359,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0305227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.55158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49078,-99) , 
9, 0.422538, 0, 0, 0.497241,-99) , 
3, 0.51756, 1, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432328,-99) , 
3, 8.43476, 1, 0, 0.4992,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0169325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.15334, 0, 1, 0.505903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502512,-99) , 
NN(
0, 
0, 
-1, 0.721104, 0, -1, 0.456385,-99) , 
6, -951.286, 0, 0, 0.474015,-99) , 
8, -0.776762, 1, 0, 0.50219,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0410177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495745,-99) , 
7, 1.33849, 0, 0, 0.500693,-99) , 
9, 0.413265, 0, 0, 0.506185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447958,-99) , 
9, 0.827784, 0, 0, 0.503007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444027,-99) , 
6, -951.286, 0, 0, 0.467527,-99) , 
8, -1.03979, 1, 0, 0.479708,-99) , 
8, -1.43632, 1, 0, 0.499821,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0222457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456443,-99) , 
8, -1.23496, 1, 0, 0.499105,-99) , 
9, 1.25975, 0, 0, 0.501331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478671,-99) , 
6, -951.287, 0, 0, 0.499045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408126,-99) , 
7, 0.435156, 0, 0, 0.473187,-99) , 
8, -0.674593, 1, 0, 0.498478,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0234403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532341,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491254,-99) , 
2, 0.132498, 0, 0, 0.493417,-99) , 
2, 0.214156, 0, 0, 0.495962,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0704067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.431738, 0, 1, 0.571444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452256,-99) , 
3, 4.38607, 1, 0, 0.503518,-99) , 
1, -0.00176804, 1, 0, 0.524751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49411,-99) , 
8, -2.29742, 1, 0, 0.508786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454276,-99) , 
1, -0.00233647, 1, 0, 0.486214,-99) , 
2, -0.00458426, 1, 0, 0.498257,-99) , 
2, 0.0701447, 0, 0, 0.502989,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0925957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.144354, 0, 1, 0.563359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439267,-99) , 
7, -1.28543, 0, 0, 0.503584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282526,-99) , 
6, -1.14408, 0, 0, 0.484437,-99) , 
6, -950.08, 1, 0, 0.492612,-99) , 
1, 0.00855322, 0, 0, 0.496887,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0445496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482833,-99) , 
4, 0.999988, 0, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370634,-99) , 
4, 0.999751, 0, 0, 0.496298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372328,-99) , 
9, -0.203147, 1, 0, 0.460999,-99) , 
4, 0.999524, 0, 0, 0.493613,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0383792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478758,-99) , 
4, 0.999974, 0, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.441285,-99) , 
4, 0.999728, 0, 0, 0.49805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423489,-99) , 
4, 0.998572, 0, 0, 0.495846,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.032966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490528,-99) , 
7, 0.42856, 0, 0, 0.510276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479011,-99) , 
2, 0.0260485, 0, 0, 0.485275,-99) , 
0, 0.502852, 0, 0, 0.489124,-99) , 
2, -0.217948, 1, 0, 0.491091,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0284665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496406,-99) , 
2, -0.111397, 1, 0, 0.50145,-99) , 
NN(
0, 
0, 
-1, 0.999504, 1, -1, 0.443021,-99) , 
4, 0.999796, 0, 0, 0.495803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437916,-99) , 
4, 0.998572, 0, 0, 0.494043,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0244691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494208,-99) , 
3, 0.9163, 1, 0, 0.500425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452407,-99) , 
3, 8.43731, 1, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445686,-99) , 
8, 0.383541, 1, 0, 0.497118,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0377512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486144,-99) , 
2, -0.0324291, 1, 0, 0.49584,-99) , 
2, 0.210723, 0, 0, 0.498184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428428,-99) , 
3, 8.6342, 1, 0, 0.496222,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0372828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471229,-99) , 
8, -4.35521, 1, 0, 0.499995,-99) , 
7, -0.611989, 0, 0, 0.529123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362106,-99) , 
4, 0.999751, 0, 0, 0.497126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396374,-99) , 
8, -2.29955, 1, 0, 0.45922,-99) , 
4, 0.999524, 0, 0, 0.494421,-99) , 
8, -3.45788, 1, 0, 0.499301,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0213377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496194,-99) , 
2, -0.214379, 1, 0, 0.498449,-99) , 
8, -4.1008, 1, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441208,-99) , 
8, -0.0418059, 1, 0, 0.498309,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0236832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06509, 1, 1, 0.51924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496832,-99) , 
0, 0.50444, 0, 0, 0.500924,-99) , 
0, 0.494282, 1, 0, 0.504748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417265,-99) , 
7, 1.28034, 0, 0, 0.464745,-99) , 
9, 1.57522, 1, 0, 0.501761,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0246857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.545348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492331,-99) , 
7, 0.428612, 0, 0, 0.530373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
2, -0.0280792, 1, 0, 0.49712,-99) , 
2, 0.12686, 0, 0, 0.49899,-99) , 
2, 0.208227, 0, 0, 0.501343,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0194485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.155973, 0, 1, 0.505441,-99) , 
NN(
0, 
0, 
-1, 4.25419, 0, -1, 0.483222,-99) , 
3, 3.27387, 1, 0, 0.4992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4539,-99) , 
3, 8.42112, 1, 0, 0.497874,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0836439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0829405, 0, 1, 0.649748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47582,-99) , 
7, 1.52468, 0, 0, 0.48043,-99) , 
1, 0.00404169, 0, 0, 0.507528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474762,-99) , 
6, -951.286, 0, 0, 0.49553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431415,-99) , 
7, 2.42908, 1, 0, 0.487251,-99) , 
8, -1.39883, 1, 0, 0.502883,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.046663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496255,-99) , 
4, 0.999994, 0, 0, 0.516437,-99) , 
NN(
0, 
0, 
-1, -0.131649, 0, -1, 0.462051,-99) , 
4, 0.999864, 0, 0, 0.50957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446337,-99) , 
4, 0.998572, 0, 0, 0.507567,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0368066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471297,-99) , 
8, -1.51058, 1, 0, 0.503967,-99) , 
9, 1.23135, 0, 0, 0.506905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461971,-99) , 
6, -951.287, 0, 0, 0.488676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413125,-99) , 
7, 0.448691, 0, 0, 0.466061,-99) , 
8, -0.670422, 1, 0, 0.502716,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0415456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0202245, 0, 1, 0.518907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481187,-99) , 
0, 0.503804, 0, 0, 0.487292,-99) , 
3, 1.97353, 1, 0, 0.503096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446027,-99) , 
3, 7.94826, 1, 0, 0.501101,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0387966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465323,-99) , 
4, 0.999524, 0, 0, 0.517585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471606,-99) , 
2, -0.00991067, 1, 0, 0.488562,-99) , 
2, 0.0249454, 0, 0, 0.497758,-99) , 
2, -0.21905, 1, 0, 0.499652,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0320491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490717,-99) , 
6, -950.08, 1, 0, 0.499193,-99) , 
8, -4.34717, 1, 0, 0.501565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465275,-99) , 
0, 0.497138, 1, 0, 0.497076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43037,-99) , 
7, 0.461028, 0, 0, 0.477161,-99) , 
8, -0.753887, 1, 0, 0.498784,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0297927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.137217, 0, 1, 0.511117,-99) , 
NN(
0, 
0, 
-1, -0.0597867, 1, -1, 0.461476,-99) , 
4, 0.999796, 0, 0, 0.506371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44784,-99) , 
4, 0.998572, 0, 0, 0.504611,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0607405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487212,-99) , 
1, 0.00579008, 0, 0, 0.503165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412692,-99) , 
4, 0.999525, 1, 0, 0.446759,-99) , 
4, 0.999819, 0, 0, 0.497959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439868,-99) , 
4, 0.999048, 0, 0, 0.495385,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0283977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.13125, 0, 1, 0.510684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51661,-99) , 
NN(
0, 
0, 
-1, 0.720082, 0, -1, 0.453781,-99) , 
1, -0.0026657, 1, 0, 0.473005,-99) , 
8, -0.870365, 1, 0, 0.505686,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0601005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496718,-99) , 
3, 2.44482, 1, 0, 0.536167,-99) , 
NN(
0, 
0, 
-1, -0.167242, 1, -1, 0.471288,-99) , 
3, 4.18189, 1, 0, 0.513627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493612,-99) , 
1, 0.00659827, 0, 0, 0.50508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447978,-99) , 
2, 0.0139927, 0, 0, 0.482672,-99) , 
2, -0.00731511, 1, 0, 0.493988,-99) , 
2, 0.0672818, 0, 0, 0.497596,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0242566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487442,-99) , 
0, 0.500948, 1, 0, 0.502071,-99) , 
2, 0.132452, 0, 0, 0.50401,-99) , 
2, 0.214084, 0, 0, 0.506021,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0221663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84638, 1, 1, 0.509071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456122,-99) , 
8, -0.176774, 1, 0, 0.506013,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0266819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494677,-99) , 
2, 0.0321277, 0, 0, 0.502437,-99) , 
2, -0.212144, 1, 0, 0.504839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449597,-99) , 
3, 8.42112, 1, 0, 0.50315,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0224776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493457,-99) , 
2, -0.0315094, 1, 0, 0.498529,-99) , 
2, 0.270681, 0, 0, 0.500372,-99) , 
2, -0.217467, 1, 0, 0.502125,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0171777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490967,-99) , 
6, -0.143139, 0, 0, 0.5471,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.512547,-99) , 
6, -951.286, 0, 0, 0.531758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458431,-99) , 
0, 0.489928, 0, 0, 0.499428,-99) , 
2, -0.21475, 1, 0, 0.501197,-99) , 
0, 0.503805, 0, 0, 0.504671,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0315238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445809,-99) , 
7, -1.08856, 0, 0, 0.509774,-99) , 
8, -4.31105, 1, 0, 0.527571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433483,-99) , 
4, 0.999819, 0, 0, 0.49655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393622,-99) , 
9, -0.211254, 1, 0, 0.46245,-99) , 
4, 0.999524, 0, 0, 0.494088,-99) , 
8, -3.41502, 1, 0, 0.499156,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0318738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488058,-99) , 
8, -4.39003, 1, 0, 0.506454,-99) , 
7, -0.335289, 0, 0, 0.522644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493346,-99) , 
8, -3.0019, 1, 0, 0.496779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442392,-99) , 
8, 0.0782828, 1, 0, 0.49387,-99) , 
8, -3.3261, 1, 0, 0.4988,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.025143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458903,-99) , 
4, 0.999796, 0, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441978,-99) , 
4, 0.998572, 0, 0, 0.499774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453332,-99) , 
7, -1.57123, 0, 0, 0.497751,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0180182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497895,-99) , 
7, 0.116923, 0, 0, 0.511176,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494671,-99) , 
8, -2.9944, 1, 0, 0.499198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462655,-99) , 
9, 2.1719, 1, 0, 0.497905,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0378267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.16587, 1, 1, 0.576248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542028,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.492025,-99) , 
2, -0.216209, 1, 0, 0.494518,-99) , 
1, -0.0043846, 1, 0, 0.505851,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0377979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487611,-99) , 
7, -0.258969, 0, 0, 0.503683,-99) , 
7, 0.385719, 0, 0, 0.515058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435095,-99) , 
4, 0.999819, 0, 0, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437238,-99) , 
4, 0.999524, 0, 0, 0.497448,-99) , 
8, -2.68872, 1, 0, 0.503821,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0380521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479233,-99) , 
9, -2.34614, 1, 0, 0.505535,-99) , 
7, -0.525495, 0, 0, 0.530731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490107,-99) , 
2, 0.13285, 0, 0, 0.492172,-99) , 
2, 0.214512, 0, 0, 0.494297,-99) , 
8, -3.3571, 1, 0, 0.500286,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0396488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65945, 1, 1, 0.589626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443169,-99) , 
9, -2.19836, 1, 0, 0.508618,-99) , 
7, -0.979283, 0, 0, 0.547803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44997,-99) , 
8, 0.385689, 1, 0, 0.505751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444353,-99) , 
3, 8.08, 1, 0, 0.503694,-99) , 
8, -3.45108, 1, 0, 0.509988,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0238619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560148,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472522,-99) , 
9, 0.551358, 1, 0, 0.481882,-99) , 
8, -1.37977, 1, 0, 0.499104,-99) , 
1, 0.00921398, 0, 0, 0.502238,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0480877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53385, 1, 1, 0.5337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49697,-99) , 
0, 0.490064, 0, 0, 0.52284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477977,-99) , 
1, -0.00134846, 1, 0, 0.505089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486106,-99) , 
7, -0.142671, 1, 0, 0.494197,-99) , 
8, -2.68351, 1, 0, 0.498218,-99) , 
0, 0.493329, 1, 0, 0.502218,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0198679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489181,-99) , 
6, -951.287, 1, 0, 0.525733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494857,-99) , 
9, -2.19266, 1, 0, 0.496909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451506,-99) , 
7, -1.77536, 0, 0, 0.495547,-99) , 
7, 2.14282, 0, 0, 0.497371,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.024313);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54246,-99) , 
NN(
NN(
0, 
0, 
-1, -2.25848, 1, 1, 0.542748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492947,-99) , 
2, -0.0180831, 1, 0, 0.498845,-99) , 
2, -0.192877, 1, 0, 0.501463,-99) , 
2, 0.214959, 0, 0, 0.503449,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0839987);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428684, 0, 1, 0.566171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470613,-99) , 
7, -1.07184, 0, 0, 0.530512,-99) , 
NN(
0, 
0, 
-1, 0.42868, 0, -1, 0.472724,-99) , 
8, -3.58766, 1, 0, 0.479571,-99) , 
1, 0.00210728, 0, 0, 0.505933,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0342526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14302, 0, 1, 0.514682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405095,-99) , 
7, -0.113413, 0, 0, 0.47233,-99) , 
4, 0.999796, 0, 0, 0.510513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457043,-99) , 
4, 0.998571, 0, 0, 0.508925,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0322227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490483,-99) , 
6, -951.287, 1, 0, 0.541453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49529,-99) , 
1, -0.00201282, 1, 0, 0.526174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491009,-99) , 
0, 0.500947, 0, 0, 0.496573,-99) , 
8, -3.36717, 1, 0, 0.501582,-99) , 
7, 2.14287, 0, 0, 0.504087,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0458888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67065, 1, 1, 0.566732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440697,-99) , 
9, -2.25505, 1, 0, 0.478638,-99) , 
7, -0.906238, 0, 0, 0.520213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492702,-99) , 
8, -1.88555, 1, 0, 0.505634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473129,-99) , 
7, -0.76326, 1, 0, 0.483286,-99) , 
9, -0.733285, 0, 0, 0.500128,-99) , 
8, -3.36417, 1, 0, 0.503434,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0308231);
  fForest.push_back( 
NN(
0, 
0, 
-1, -3.93746, 1, 1, 0.515407,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0317617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2197, 0, 1, 0.565648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490434,-99) , 
7, -0.00645378, 0, 0, 0.504805,-99) , 
8, -3.86946, 1, 0, 0.508386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428027,-99) , 
7, -1.85675, 0, 0, 0.506352,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0203312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480919,-99) , 
7, 0.144354, 0, 0, 0.528115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495151,-99) , 
8, -3.62112, 1, 0, 0.497175,-99) , 
1, 0.00855322, 0, 0, 0.499022,-99) , 
8, -4.1223, 1, 0, 0.501007,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0190239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05138, 0, 1, 0.535528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469413,-99) , 
4, 0.999524, 0, 0, 0.50147,-99) , 
8, -3.81435, 1, 0, 0.504274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457239,-99) , 
9, 2.27095, 1, 0, 0.502807,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0543752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30525, 0, 1, 0.597093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442013,-99) , 
9, 0.882106, 0, 0, 0.490292,-99) , 
8, -1.88106, 1, 0, 0.517438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493715,-99) , 
8, -1.76221, 0, 0, 0.502206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431767,-99) , 
9, 1.44194, 1, 0, 0.498942,-99) , 
7, 1.00002, 0, 0, 0.504159,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0267146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483351,-99) , 
8, -0.918624, 1, 0, 0.540314,-99) , 
NN(
NN(
0, 
0, 
-1, -2.16516, 1, 1, 0.507874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410023,-99) , 
7, -1.77536, 0, 0, 0.504896,-99) , 
7, 2.1428, 0, 0, 0.507087,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0169242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.2809, 0, 1, 0.545929,-99) , 
NN(
NN(
0, 
0, 
-1, -3.58043, 1, 1, 0.50294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44458,-99) , 
0, 0.505709, 1, 0, 0.500218,-99) , 
9, -1.9356, 1, 0, 0.503684,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0331046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483944,-99) , 
8, -4.41102, 1, 0, 0.49561,-99) , 
7, -0.423747, 0, 0, 0.511241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535668,-99) , 
NN(
0, 
0, 
-1, 0.347986, 0, -1, 0.489237,-99) , 
7, -0.712796, 1, 0, 0.492116,-99) , 
9, -1.32275, 1, 0, 0.495807,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0177618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.982284, 0, 1, 0.547991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457311,-99) , 
4, 0.998572, 0, 0, 0.502689,-99) , 
8, -3.76149, 1, 0, 0.505702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473511,-99) , 
7, -1.57127, 0, 0, 0.50435,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0286922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498421,-99) , 
9, -1.66821, 1, 0, 0.501153,-99) , 
8, -4.04767, 1, 0, 0.505214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491943,-99) , 
6, -951.286, 1, 0, 0.515452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476431,-99) , 
8, -1.68734, 0, 0, 0.485105,-99) , 
7, 1.28579, 0, 0, 0.491273,-99) , 
0, 0.499043, 1, 0, 0.499352,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0419292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435944,-99) , 
9, -1.51992, 1, 0, 0.499052,-99) , 
7, -0.311828, 0, 0, 0.519236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498342,-99) , 
8, -2.94517, 1, 0, 0.504071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453055,-99) , 
6, -949.507, 0, 0, 0.485079,-99) , 
7, 0.143925, 0, 0, 0.498677,-99) , 
9, -1.24063, 1, 0, 0.503138,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0229073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471643,-99) , 
8, -0.930888, 1, 0, 0.531026,-99) , 
NN(
NN(
0, 
0, 
-1, 1.22203, 0, 1, 0.506789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459988,-99) , 
8, 0.0158831, 1, 0, 0.504891,-99) , 
7, 2.14283, 0, 0, 0.506486,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.035699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0310644, 0, 1, 0.524977,-99) , 
NN(
0, 
0, 
-1, -1.28536, 0, -1, 0.489896,-99) , 
3, 1.75139, 1, 0, 0.5056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443675,-99) , 
3, 8.64188, 1, 0, 0.503909,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.035582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.158656, 0, 1, 0.577851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488974,-99) , 
2, 0.112278, 0, 0, 0.492018,-99) , 
2, -0.213989, 1, 0, 0.493925,-99) , 
1, 0.00682455, 0, 0, 0.501028,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.037443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342194,-99) , 
6, -0.432135, 0, 0, 0.495925,-99) , 
6, -951.286, 1, 0, 0.531626,-99) , 
NN(
NN(
0, 
0, 
-1, -4.36224, 1, 1, 0.50516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430908,-99) , 
8, 0.110707, 1, 0, 0.502455,-99) , 
7, 1.85717, 0, 0, 0.505298,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0351356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432099,-99) , 
9, -1.87427, 1, 0, 0.512617,-99) , 
7, -0.58613, 0, 0, 0.534133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410653,-99) , 
4, 0.999751, 0, 0, 0.499899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382916,-99) , 
8, -2.14955, 1, 0, 0.456075,-99) , 
4, 0.999524, 0, 0, 0.49681,-99) , 
8, -3.46721, 1, 0, 0.501953,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0265795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469578,-99) , 
8, -0.942781, 1, 0, 0.545569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49557,-99) , 
9, -2.18594, 1, 0, 0.498585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431537,-99) , 
7, -1.77537, 0, 0, 0.496581,-99) , 
7, 2.14274, 0, 0, 0.499574,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0537912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442684,-99) , 
9, -1.83022, 1, 0, 0.501875,-99) , 
7, -0.612109, 0, 0, 0.523947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489724,-99) , 
8, -1.92323, 1, 0, 0.508583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476776,-99) , 
8, -1.73376, 0, 0, 0.48795,-99) , 
7, 1.00002, 0, 0, 0.494803,-99) , 
8, -3.41884, 1, 0, 0.499082,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0366156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49059,-99) , 
4, 0.999994, 0, 0, 0.504764,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.462076,-99) , 
4, 0.999864, 0, 0, 0.499908,-99) , 
4, 0.999048, 1, 0, 0.502325,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.03779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1102, 0, 1, 0.575739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468629,-99) , 
2, -0.0439518, 1, 0, 0.483791,-99) , 
1, -0.00134846, 1, 0, 0.514344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540787,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495057,-99) , 
7, -0.714034, 1, 0, 0.498388,-99) , 
8, -2.9103, 1, 0, 0.50302,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0256989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498779,-99) , 
7, -0.966259, 0, 0, 0.541707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493032,-99) , 
7, 0.605846, 0, 0, 0.502047,-99) , 
8, -3.73506, 1, 0, 0.504705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4673,-99) , 
7, -1.5713, 0, 0, 0.503038,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0258762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96643, 1, 1, 0.511273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471922,-99) , 
7, -1.57111, 0, 0, 0.509566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468031,-99) , 
0, 0.505709, 1, 0, 0.507625,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0517047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.710815, 0, 1, 0.553366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477341,-99) , 
9, 0.264923, 0, 0, 0.500656,-99) , 
8, -2.4973, 1, 0, 0.511567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48911,-99) , 
8, -2.29237, 0, 0, 0.502782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434092,-99) , 
8, -1.29745, 1, 0, 0.496442,-99) , 
7, 0.142875, 0, 0, 0.504964,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0370678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461101,-99) , 
7, -1.69667, 0, 0, 0.509011,-99) , 
7, 1.56101, 0, 0, 0.512293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481486,-99) , 
7, 1.57893, 1, 0, 0.504634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423112,-99) , 
2, 0.0685537, 1, 0, 0.490159,-99) , 
8, -1.32835, 1, 0, 0.507551,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0597221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.614184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476051,-99) , 
8, -2.3059, 1, 0, 0.493944,-99) , 
1, -0.0046814, 1, 0, 0.508073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487206,-99) , 
8, -2.18853, 0, 0, 0.49573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431545,-99) , 
8, -0.826387, 1, 0, 0.491562,-99) , 
7, 0.428645, 0, 0, 0.499184,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0406822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.201998, 1, 1, 0.584999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495524,-99) , 
8, -3.60175, 1, 0, 0.504461,-99) , 
7, 0.763858, 0, 0, 0.515352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482473,-99) , 
7, 0.429566, 1, 0, 0.491064,-99) , 
1, 0.00682455, 0, 0, 0.495665,-99) , 
8, -2.10327, 1, 0, 0.506802,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0382225);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.483711, 0, 1, 0.516789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477946,-99) , 
6, -951.287, 1, 0, 0.537336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484628,-99) , 
7, 0.183802, 1, 0, 0.492508,-99) , 
7, 2.14286, 0, 0, 0.497753,-99) , 
8, -2.32898, 1, 0, 0.507046,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0596253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90695, 1, 1, 0.594694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446807,-99) , 
9, 1.09739, 0, 0, 0.499381,-99) , 
8, -1.63323, 1, 0, 0.526969,-99) , 
NN(
NN(
0, 
0, 
-1, -2.88551, 1, 1, 0.552291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47996,-99) , 
8, -2.85218, 1, 0, 0.491722,-99) , 
1, -0.00439438, 1, 0, 0.500496,-99) , 
7, 1.28595, 0, 0, 0.506023,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0418006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412971,-99) , 
9, 1.52913, 0, 0, 0.490853,-99) , 
8, -1.17638, 1, 0, 0.534006,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.511834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441756,-99) , 
8, 0.129769, 1, 0, 0.509255,-99) , 
7, 1.85712, 0, 0, 0.51168,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0465363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.52079, 1, 1, 0.552181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494857,-99) , 
7, 0.877619, 0, 0, 0.503297,-99) , 
8, -3.13097, 1, 0, 0.509479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459264,-99) , 
6, -949.507, 0, 0, 0.509397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369785,-99) , 
9, -2.34941, 1, 0, 0.458433,-99) , 
8, -3.89449, 0, 0, 0.49243,-99) , 
7, -0.714175, 0, 0, 0.506414,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.050422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09647, 1, 1, 0.560467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494805,-99) , 
2, -0.0709918, 1, 0, 0.500361,-99) , 
9, -0.787233, 1, 0, 0.508256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477591,-99) , 
8, -2.84187, 0, 0, 0.508259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444452,-99) , 
9, -1.56669, 1, 0, 0.469936,-99) , 
6, -951.286, 0, 0, 0.491133,-99) , 
7, -0.14282, 0, 0, 0.502316,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0360092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407613,-99) , 
9, 1.45827, 0, 0, 0.488204,-99) , 
8, -1.15453, 1, 0, 0.533289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452499,-99) , 
9, 1.89728, 1, 0, 0.506026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462732,-99) , 
7, -1.61198, 0, 0, 0.504088,-99) , 
7, 1.85705, 0, 0, 0.50693,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0292756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14277, 0, 1, 0.50932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40637,-99) , 
4, 0.999728, 0, 0, 0.5059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416522,-99) , 
9, -0.418852, 1, 0, 0.47204,-99) , 
4, 0.999524, 0, 0, 0.503446,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0485636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.533898, 1, 1, 0.545838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481178,-99) , 
6, -951.286, 1, 0, 0.499874,-99) , 
8, -2.29785, 1, 0, 0.50976,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.548199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475674,-99) , 
8, -2.3415, 0, 0, 0.483455,-99) , 
1, 0.00579008, 0, 0, 0.49073,-99) , 
7, 0.428622, 0, 0, 0.499517,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0358423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48745,-99) , 
4, 0.999987, 0, 0, 0.503337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404271,-99) , 
4, 0.999728, 0, 0, 0.500191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383148,-99) , 
8, -2.1456, 1, 0, 0.462861,-99) , 
4, 0.999524, 0, 0, 0.497443,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0128687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492364,-99) , 
8, -0.904565, 1, 0, 0.533411,-99) , 
NN(
0, 
0, 
-1, -1.77535, 0, -1, 0.495885,-99) , 
7, 2.14282, 0, 0, 0.498203,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0228823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.535906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489974,-99) , 
6, -951.286, 0, 0, 0.499672,-99) , 
7, 2.14269, 0, 0, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449654,-99) , 
3, 8.21353, 1, 0, 0.500092,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0410465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14001, 1, 1, 0.558916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454966,-99) , 
9, -1.403, 1, 0, 0.495387,-99) , 
7, -0.20317, 0, 0, 0.510864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480698,-99) , 
7, 2.51079, 1, 0, 0.526717,-99) , 
NN(
0, 
0, 
-1, -2.14338, 1, -1, 0.48681,-99) , 
7, 2.1439, 0, 0, 0.4903,-99) , 
9, -0.904558, 1, 0, 0.496749,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0538272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09486, 0, 1, 0.580963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486357,-99) , 
9, -0.498404, 1, 0, 0.494331,-99) , 
1, -0.00439438, 1, 0, 0.505804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479456,-99) , 
8, -2.48951, 0, 0, 0.492849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430131,-99) , 
8, -1.2179, 1, 0, 0.487443,-99) , 
7, 0.142938, 0, 0, 0.49776,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0366342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.31191, 1, 1, 0.519367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458869,-99) , 
8, -0.813863, 1, 0, 0.505668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44443,-99) , 
7, -0.0613583, 0, 0, 0.46807,-99) , 
2, -0.0701117, 0, 0, 0.499056,-99) , 
7, 0.42857, 0, 0, 0.508491,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0384136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.513102, 1, 1, 0.548863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411861,-99) , 
4, 0.999524, 0, 0, 0.49452,-99) , 
8, -2.23356, 1, 0, 0.5081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490658,-99) , 
1, 0.00478708, 0, 0, 0.503713,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478806,-99) , 
0, 0.499044, 1, 0, 0.493081,-99) , 
7, 0.428622, 0, 0, 0.500003,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0202147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485505,-99) , 
0, 0.498099, 1, 0, 0.528477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496468,-99) , 
9, -1.35814, 1, 0, 0.498573,-99) , 
8, -3.6227, 1, 0, 0.500785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428537,-99) , 
6, -951.286, 0, 0, 0.468861,-99) , 
7, -1.28557, 0, 0, 0.498353,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0316254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.288807, 1, 1, 0.561703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489248,-99) , 
8, -0.463674, 0, 0, 0.498286,-99) , 
8, -2.12388, 1, 0, 0.51209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564879,-99) , 
NN(
0, 
0, 
-1, -0.877446, 0, -1, 0.492864,-99) , 
8, -4.30771, 1, 0, 0.49624,-99) , 
7, 0.71431, 0, 0, 0.5021,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0292316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.510366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471956,-99) , 
3, 4.24186, 1, 0, 0.511018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434169,-99) , 
3, 2.73535, 1, 0, 0.466703,-99) , 
2, -0.139012, 1, 0, 0.489299,-99) , 
2, -0.0710108, 0, 0, 0.506684,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.031066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
9, -0.946262, 1, 0, 0.54288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494274,-99) , 
7, -0.224927, 0, 0, 0.49871,-99) , 
7, -0.0861714, 0, 0, 0.511965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495979,-99) , 
7, 0.36859, 0, 0, 0.524492,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490391,-99) , 
9, -0.494148, 1, 0, 0.496244,-99) , 
8, -2.71731, 1, 0, 0.501793,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0172047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.545625,-99) , 
NN(
NN(
0, 
0, 
-1, -0.722083, 0, 1, 0.504779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4599,-99) , 
9, 1.94956, 1, 0, 0.503017,-99) , 
7, 2.14314, 0, 0, 0.505647,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0328112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.77004, 1, 1, 0.510075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490393,-99) , 
9, -0.964869, 0, 0, 0.510941,-99) , 
NN(
0, 
0, 
-1, -2.86099, 1, -1, 0.468791,-99) , 
6, -949.507, 0, 0, 0.491812,-99) , 
7, -0.142785, 0, 0, 0.503798,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0154021);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499672,-99) , 
2, -0.140359, 1, 0, 0.503194,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.456323,-99) , 
4, 0.999728, 0, 0, 0.499732,-99) , 
4, 0.998572, 1, 0, 0.500911,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0310206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497213,-99) , 
9, -0.287651, 1, 0, 0.548656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495071,-99) , 
9, -0.50698, 0, 0, 0.498387,-99) , 
7, 0.493066, 0, 0, 0.509228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483941,-99) , 
0, 0.499995, 0, 0, 0.491024,-99) , 
9, -0.101498, 1, 0, 0.495991,-99) , 
8, -2.15799, 1, 0, 0.503203,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0337665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493589,-99) , 
6, -950.08, 1, 0, 0.504226,-99) , 
7, 0.91739, 0, 0, 0.509933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483046,-99) , 
9, 0.67317, 0, 0, 0.494533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438156,-99) , 
4, 0.999524, 0, 0, 0.490959,-99) , 
8, -2.23366, 1, 0, 0.500858,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0226237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49198,-99) , 
9, 1.06047, 1, 0, 0.522107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470554,-99) , 
0, 0.506253, 1, 0, 0.513915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49599,-99) , 
9, -0.855546, 1, 0, 0.501028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463234,-99) , 
1, -0.0104141, 0, 0, 0.499504,-99) , 
0, 0.5019, 0, 0, 0.502554,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.021897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479926,-99) , 
9, -1.7123, 0, 0, 0.50549,-99) , 
8, -4.37921, 1, 0, 0.506825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480233,-99) , 
8, -0.0208373, 1, 0, 0.505521,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0186535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931799, 1, 1, 0.507527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477017,-99) , 
8, -3.97334, 0, 0, 0.505963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451474,-99) , 
7, -1.85695, 0, 0, 0.504598,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0343938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494552,-99) , 
8, -3.2083, 0, 0, 0.505782,-99) , 
7, 0.272111, 0, 0, 0.514333,-99) , 
NN(
NN(
0, 
0, 
-1, -1.78245, 1, 1, 0.532844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488473,-99) , 
9, -0.669813, 1, 0, 0.49262,-99) , 
7, -0.427298, 1, 0, 0.497155,-99) , 
8, -2.85565, 1, 0, 0.502348,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0222534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487166,-99) , 
8, -0.897403, 1, 0, 0.535313,-99) , 
NN(
NN(
0, 
0, 
-1, -2.21732, 1, 1, 0.507337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447239,-99) , 
7, -1.77517, 0, 0, 0.50558,-99) , 
7, 2.14277, 0, 0, 0.50739,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0183995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483256,-99) , 
8, -2.96702, 1, 0, 0.512635,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497115,-99) , 
8, -2.7878, 1, 0, 0.502187,-99) , 
0, 0.48952, 1, 0, 0.503513,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0314281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65071, 1, 1, 0.530609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492553,-99) , 
8, -2.76807, 1, 0, 0.504903,-99) , 
7, 1.00002, 0, 0, 0.512228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484192,-99) , 
9, 0.485604, 0, 0, 0.489862,-99) , 
0, 0.49673, 1, 0, 0.492183,-99) , 
0, 0.496186, 1, 0, 0.499024,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0173442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541563,-99) , 
NN(
NN(
0, 
0, 
-1, -1.0057, 0, 1, 0.531674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481153,-99) , 
8, -3.23711, 0, 0, 0.499561,-99) , 
8, -3.76204, 1, 0, 0.502453,-99) , 
8, -0.087632, 0, 0, 0.504649,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0243479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503756, 0, 1, 0.522001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49385,-99) , 
3, 4.09957, 0, 0, 0.499172,-99) , 
2, 0.0712453, 0, 0, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0.48961, 1, -1, 0.479794,-99) , 
0, 0.491424, 0, 0, 0.500998,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0404921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47738,-99) , 
8, -3.89582, 0, 0, 0.506207,-99) , 
7, -0.558221, 0, 0, 0.519508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49622,-99) , 
8, -2.23356, 1, 0, 0.510048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467455,-99) , 
6, -950.08, 0, 0, 0.486737,-99) , 
7, 0.432438, 0, 0, 0.499984,-99) , 
9, -1.35811, 1, 0, 0.50359,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.028356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0452008, 0, 1, 0.515468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486261,-99) , 
2, 0.20774, 1, 0, 0.513992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487834,-99) , 
6, -951.286, 0, 0, 0.50468,-99) , 
NN(
0, 
0, 
-1, -0.997307, 0, -1, 0.489358,-99) , 
0, 0.502716, 0, 0, 0.495335,-99) , 
0, 0.499043, 1, 0, 0.506049,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0511983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.91138, 1, 1, 0.583971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463553,-99) , 
9, 1.48378, 0, 0, 0.490227,-99) , 
8, -1.63752, 1, 0, 0.517316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48528,-99) , 
6, -951.287, 0, 0, 0.522566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47818,-99) , 
8, -2.80267, 1, 0, 0.491754,-99) , 
8, -1.65088, 0, 0, 0.497458,-99) , 
7, 1.28574, 0, 0, 0.501586,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.044031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76003, 1, 1, 0.515558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482625,-99) , 
1, 0.0040832, 0, 0, 0.497637,-99) , 
8, -2.68072, 0, 0, 0.50892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406954,-99) , 
1, -0.012758, 0, 0, 0.506025,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0220669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497913,-99) , 
7, 2.51017, 1, 0, 0.537083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494308,-99) , 
4, 0.999048, 1, 0, 0.496371,-99) , 
7, 2.14285, 0, 0, 0.498848,-99) , 
2, -0.214698, 1, 0, 0.501116,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.112188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.934139, 1, 1, 0.570983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47905,-99) , 
9, -0.0481913, 1, 0, 0.503132,-99) , 
7, 1.57125, 0, 0, 0.513078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485709,-99) , 
6, -0.0756045, 0, 0, 0.543269,-99) , 
NN(
0, 
0, 
-1, 0.170219, 1, -1, 0.330674,-99) , 
6, -1.0365, 0, 0, 0.498853,-99) , 
6, -951.286, 1, 0, 0.50503,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.013348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.518606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47392,-99) , 
7, -1.28533, 0, 0, 0.498434,-99) , 
0, 0.502262, 0, 0, 0.501466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455846,-99) , 
0, 0.505709, 1, 0, 0.499315,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0378891);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.439765, 0, 1, 0.538554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463152,-99) , 
4, 0.999524, 0, 0, 0.513604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487328,-99) , 
1, 0.00682455, 0, 0, 0.492848,-99) , 
2, 0.0310896, 0, 0, 0.498721,-99) , 
2, -0.213672, 1, 0, 0.500738,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.024855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.357657, 1, 1, 0.53471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491861,-99) , 
9, -0.0927102, 0, 0, 0.500038,-99) , 
3, 0.512143, 1, 0, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450952,-99) , 
3, 8.62065, 1, 0, 0.501215,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0501868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51126, 1, 1, 0.544355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4882,-99) , 
7, 1.40823, 1, 0, 0.501183,-99) , 
8, -2.22732, 1, 0, 0.511657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490512,-99) , 
6, -951.286, 0, 0, 0.523547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471301,-99) , 
8, -3.75351, 1, 0, 0.482223,-99) , 
8, -2.33104, 0, 0, 0.493155,-99) , 
7, 0.428612, 0, 0, 0.501622,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0175396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497011,-99) , 
7, 0.151897, 0, 0, 0.522483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494237,-99) , 
2, -0.0301098, 1, 0, 0.498842,-99) , 
2, 0.214655, 0, 0, 0.499869,-99) , 
0, 0.490472, 1, 0, 0.501145,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0315913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47604,-99) , 
9, -2.01727, 1, 0, 0.510178,-99) , 
7, -0.655425, 0, 0, 0.529245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456809,-99) , 
4, 0.999728, 0, 0, 0.503415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45756,-99) , 
4, 0.999048, 0, 0, 0.501464,-99) , 
9, -1.4734, 1, 0, 0.505785,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0216102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468039,-99) , 
7, -0.853375, 0, 0, 0.533543,-99) , 
NN(
0, 
0, 
-1, 0.209164, 0, 1, 0.503955,-99) , 
9, -1.54765, 1, 0, 0.506343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451381,-99) , 
7, -1.33771, 0, 0, 0.478273,-99) , 
9, -2.02636, 0, 0, 0.504394,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0347611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461513,-99) , 
9, -1.85763, 1, 0, 0.496186,-99) , 
7, -0.631152, 0, 0, 0.515483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477083,-99) , 
8, -1.00569, 1, 0, 0.50841,-99) , 
NN(
0, 
0, 
-1, -3.23523, 0, -1, 0.488535,-99) , 
0, 0.499996, 0, 0, 0.49535,-99) , 
9, -1.43506, 1, 0, 0.498656,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0100756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541381,-99) , 
NN(
0, 
0, 
-1, -3.74744, 0, -1, 0.497584,-99) , 
9, -2.20077, 1, 0, 0.498931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441449,-99) , 
7, -1.85693, 0, 0, 0.497442,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0305525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49607,-99) , 
9, -0.619841, 1, 0, 0.503417,-99) , 
1, -0.00798237, 1, 0, 0.507658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53069,-99) , 
NN(
0, 
0, 
-1, -0.903929, 1, -1, 0.477176,-99) , 
1, -0.00439438, 1, 0, 0.485183,-99) , 
0, 0.500947, 1, 0, 0.501523,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.025333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.533547,-99) , 
NN(
NN(
0, 
0, 
-1, -1.77058, 0, 1, 0.507673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48533,-99) , 
8, -2.13769, 1, 0, 0.495206,-99) , 
7, 0.714342, 1, 0, 0.503114,-99) , 
2, -0.214379, 1, 0, 0.504696,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0270688);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.35408, 1, 1, 0.513188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491004,-99) , 
7, -1.42125, 1, 0, 0.494417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435682,-99) , 
7, -1.85678, 0, 0, 0.491593,-99) , 
7, 0.428692, 0, 0, 0.501571,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0242328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.838943, 0, 1, 0.50892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418702,-99) , 
7, -0.142229, 0, 0, 0.477076,-99) , 
4, 0.999864, 0, 0, 0.504952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457972,-99) , 
4, 0.998572, 0, 0, 0.503594,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0230074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
7, 2.46929, 1, 0, 0.524334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
9, -0.619841, 1, 0, 0.492799,-99) , 
7, 2.14275, 0, 0, 0.494684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461837,-99) , 
0, 0.505709, 1, 0, 0.493094,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0706215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473057,-99) , 
8, -1.82925, 1, 0, 0.503134,-99) , 
1, 0.00482365, 0, 0, 0.519353,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0426561, 1, 1, 0.526436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470369,-99) , 
1, -0.00134846, 1, 0, 0.489613,-99) , 
8, -1.88369, 0, 0, 0.497688,-99) , 
7, 0.999869, 0, 0, 0.503822,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0226793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494365,-99) , 
7, 2.51045, 1, 0, 0.527974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458876,-99) , 
7, 0.435735, 0, 0, 0.514373,-99) , 
NN(
0, 
0, 
-1, 0.429726, 1, -1, 0.493522,-99) , 
8, -0.697467, 0, 0, 0.495457,-99) , 
7, 2.14314, 0, 0, 0.497399,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0347024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0200833, 1, 1, 0.516432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478014,-99) , 
3, 4.27623, 0, 0, 0.492525,-99) , 
3, 2.53896, 1, 0, 0.506988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456274,-99) , 
3, 8.62065, 1, 0, 0.505623,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0343615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
7, 0.153831, 0, 0, 0.536245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480951,-99) , 
7, -0.758716, 0, 0, 0.510049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487303,-99) , 
7, 1.28759, 0, 0, 0.491088,-99) , 
9, -1.40817, 1, 0, 0.494445,-99) , 
1, 0.00682455, 0, 0, 0.498036,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0520085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142828, 0, 1, 0.541705,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.482136,-99) , 
1, 0.00210728, 0, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45657,-99) , 
4, 0.999048, 0, 0, 0.498512,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0189148);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.61256, 1, 1, 0.507333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438546,-99) , 
7, -1.77516, 0, 0, 0.487525,-99) , 
7, -1.28538, 0, 0, 0.505858,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0354626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28545, 1, 1, 0.537833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435011,-99) , 
4, 0.999048, 0, 0, 0.501184,-99) , 
8, -2.8779, 1, 0, 0.50712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473272,-99) , 
6, -949.507, 0, 0, 0.501452,-99) , 
NN(
0, 
0, 
-1, -950.08, 0, -1, 0.447238,-99) , 
0, 0.496186, 0, 0, 0.481822,-99) , 
7, -0.428453, 0, 0, 0.500537,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0185017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37433, 1, 1, 0.505962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468935,-99) , 
1, 0.0087983, 1, 0, 0.503884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492464,-99) , 
9, -1.38309, 1, 0, 0.496987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464845,-99) , 
9, -1.85922, 0, 0, 0.493992,-99) , 
0, 0.499995, 1, 0, 0.500483,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0322583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487835,-99) , 
9, -2.44918, 1, 0, 0.498929,-99) , 
7, -0.558461, 0, 0, 0.515817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46793,-99) , 
6, -951.286, 0, 0, 0.53023,-99) , 
NN(
0, 
0, 
-1, -0.100758, 0, -1, 0.494327,-99) , 
7, -0.427203, 1, 0, 0.49822,-99) , 
9, -1.32275, 1, 0, 0.501625,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0509989);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483109,-99) , 
4, 0.999996, 0, 0, 0.503943,-99) , 
NN(
0, 
0, 
-1, -0.426199, 0, -1, 0.464696,-99) , 
4, 0.999909, 0, 0, 0.498216,-99) , 
4, 0.999048, 1, 0, 0.500529,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0241464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474333,-99) , 
9, -1.81174, 1, 0, 0.508684,-99) , 
7, -0.609328, 0, 0, 0.52204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495777,-99) , 
2, 0.194274, 0, 0, 0.497958,-99) , 
2, -0.213672, 1, 0, 0.499685,-99) , 
9, -1.4003, 1, 0, 0.50358,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0244002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490302,-99) , 
8, -0.772465, 1, 0, 0.530586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443319,-99) , 
9, 1.89728, 1, 0, 0.504138,-99) , 
7, 1.91156, 0, 0, 0.506531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468274,-99) , 
7, -1.57124, 0, 0, 0.504809,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0430099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493802,-99) , 
1, -0.0026657, 1, 0, 0.509577,-99) , 
NN(
0, 
0, 
-1, 0.145173, 1, -1, 0.466915,-99) , 
4, 0.999864, 0, 0, 0.504305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451292,-99) , 
4, 0.998572, 0, 0, 0.502745,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0384741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479373,-99) , 
9, -1.72432, 1, 0, 0.535103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477353,-99) , 
8, -3.20048, 0, 0, 0.506223,-99) , 
9, -1.48316, 1, 0, 0.508519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44098,-99) , 
6, -951.287, 0, 0, 0.50922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451051,-99) , 
8, -3.99441, 0, 0, 0.487335,-99) , 
7, -0.999719, 0, 0, 0.506028,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.023676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.139017, 0, 1, 0.544423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498988,-99) , 
7, 0.0733803, 0, 0, 0.505802,-99) , 
NN(
0, 
0, 
-1, 0.043452, 0, -1, 0.490372,-99) , 
9, -0.796833, 1, 0, 0.495853,-99) , 
1, 0.00682455, 0, 0, 0.499881,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0300149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.36802, 1, 1, 0.566276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45111,-99) , 
9, 1.11509, 0, 0, 0.488875,-99) , 
8, -1.61109, 1, 0, 0.513068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556041,-99) , 
NN(
0, 
0, 
-1, -1.16187, 0, -1, 0.494163,-99) , 
9, -2.45575, 1, 0, 0.496218,-99) , 
7, 1.28618, 0, 0, 0.499683,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0244969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.190372, 1, 1, 0.509107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468002,-99) , 
6, -951.286, 1, 0, 0.485882,-99) , 
4, 0.999864, 0, 0, 0.506235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454074,-99) , 
4, 0.998572, 0, 0, 0.504732,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0372037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483204,-99) , 
8, -0.745186, 1, 0, 0.528599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47498,-99) , 
3, 3.28259, 1, 0, 0.497549,-99) , 
3, 1.12033, 1, 0, 0.507675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482617,-99) , 
2, -0.00405391, 0, 0, 0.500014,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.460012,-99) , 
2, 0.0706988, 1, 0, 0.487938,-99) , 
3, 4.36372, 1, 0, 0.503886,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0167434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496186, 0, 1, 0.54386,-99) , 
NN(
0, 
0, 
-1, 2.11274, 1, -1, 0.495067,-99) , 
1, -0.00631266, 1, 0, 0.499375,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0293613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490836,-99) , 
3, 3.99729, 1, 0, 0.507113,-99) , 
0, 0.495823, 1, 0, 0.509764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542945,-99) , 
NN(
0, 
0, 
-1, -0.987956, 1, -1, 0.485742,-99) , 
1, -0.0057274, 1, 0, 0.49163,-99) , 
0, 0.495233, 0, 0, 0.50491,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0278228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.228148, 0, 1, 0.559976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477512,-99) , 
3, 3.57755, 0, 0, 0.490989,-99) , 
1, -0.00134846, 1, 0, 0.513742,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14348, 0, 1, 0.503135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455681,-99) , 
4, 0.999048, 0, 0, 0.501286,-99) , 
8, -2.88424, 1, 0, 0.504949,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0231445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494146,-99) , 
8, -4.39398, 1, 0, 0.508595,-99) , 
7, -0.569214, 0, 0, 0.530116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528895,-99) , 
NN(
0, 
0, 
-1, -0.179728, 0, -1, 0.495828,-99) , 
7, -0.709956, 1, 0, 0.497921,-99) , 
9, -1.35811, 1, 0, 0.503775,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.036576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483429,-99) , 
8, -4.37917, 1, 0, 0.497639,-99) , 
7, -0.543806, 0, 0, 0.516267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485597,-99) , 
2, -0.0311456, 1, 0, 0.49198,-99) , 
2, 0.213662, 0, 0, 0.493842,-99) , 
9, -1.32275, 1, 0, 0.498231,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0359003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.357358, 1, 1, 0.531341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468545,-99) , 
3, 3.22237, 1, 0, 0.494294,-99) , 
3, 1.11131, 1, 0, 0.506507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489959,-99) , 
6, -949.507, 1, 0, 0.506022,-99) , 
NN(
0, 
0, 
-1, -0.541516, 1, -1, 0.442749,-99) , 
2, -0.0710108, 0, 0, 0.488427,-99) , 
3, 4.27821, 1, 0, 0.502943,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0145555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00410023, 0, 1, 0.518232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498236,-99) , 
2, 0.152913, 0, 0, 0.500946,-99) , 
2, -0.071423, 1, 0, 0.503913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478697,-99) , 
0, 0.505709, 1, 0, 0.502695,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0240795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474469,-99) , 
8, -3.91836, 0, 0, 0.503511,-99) , 
7, -0.59588, 0, 0, 0.51804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471424,-99) , 
7, -0.18337, 0, 0, 0.497331,-99) , 
7, -0.71404, 1, 0, 0.499993,-99) , 
9, -1.40817, 1, 0, 0.503057,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0293523);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.35017, 0, 1, 0.550646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498644,-99) , 
7, 0.26004, 0, 0, 0.506759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485916,-99) , 
0, 0.492377, 1, 0, 0.489428,-99) , 
9, -0.555687, 1, 0, 0.496124,-99) , 
9, -2.00485, 1, 0, 0.499819,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.026216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477794,-99) , 
1, -0.00140015, 1, 0, 0.500896,-99) , 
7, -0.796838, 0, 0, 0.524767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498213,-99) , 
9, -1.03521, 1, 0, 0.501847,-99) , 
NN(
0, 
0, 
-1, -1.24695, 0, -1, 0.460958,-99) , 
8, -3.25612, 0, 0, 0.499375,-99) , 
9, -1.45524, 1, 0, 0.503357,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0223795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47071, 1, 1, 0.53777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454235,-99) , 
0, 0.49079, 0, 0, 0.486817,-99) , 
8, -1.86649, 1, 0, 0.518181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497128,-99) , 
9, -1.79842, 1, 0, 0.499192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467564,-99) , 
8, -3.99145, 0, 0, 0.49723,-99) , 
0, 0.494282, 1, 0, 0.50161,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0226157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.76728, 1, 1, 0.522163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479649,-99) , 
7, -0.999845, 0, 0, 0.517072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497657,-99) , 
7, -0.142597, 1, 0, 0.501423,-99) , 
0, 0.489384, 1, 0, 0.502834,-99) , 
0, 0.499995, 0, 0, 0.507714,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.020748);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557975,-99) , 
NN(
NN(
0, 
0, 
-1, -0.99988, 1, 1, 0.507652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450323,-99) , 
8, -4.01028, 0, 0, 0.50568,-99) , 
9, -2.46347, 1, 0, 0.507044,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.015534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480656,-99) , 
8, -0.864137, 1, 0, 0.499609,-99) , 
9, -2.2013, 1, 0, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431725,-99) , 
7, -1.85697, 0, 0, 0.499302,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0259142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556192,-99) , 
NN(
NN(
0, 
0, 
-1, 0.820036, 0, 1, 0.507171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485285,-99) , 
7, 0.431866, 1, 0, 0.493888,-99) , 
8, -2.15741, 1, 0, 0.500859,-99) , 
8, -4.12633, 1, 0, 0.503195,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.041728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496513,-99) , 
3, 4.4024, 1, 0, 0.532021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467746,-99) , 
8, -1.56484, 1, 0, 0.514649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484147,-99) , 
8, -1.05943, 1, 0, 0.50578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486774,-99) , 
8, -1.719, 0, 0, 0.492031,-99) , 
9, 0.520532, 0, 0, 0.495468,-99) , 
2, 0.0702233, 0, 0, 0.498886,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0228955);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552502,-99) , 
NN(
NN(
0, 
0, 
-1, 0.163551, 0, 1, 0.547997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
2, -0.0230423, 1, 0, 0.502241,-99) , 
2, 0.132456, 0, 0, 0.504724,-99) , 
2, 0.214084, 0, 0, 0.507053,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0316677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30684, 0, 1, 0.562552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483574,-99) , 
8, -0.205985, 0, 0, 0.496265,-99) , 
8, -1.87505, 1, 0, 0.513439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498972,-99) , 
8, -1.64156, 0, 0, 0.505078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465293,-99) , 
9, 1.14894, 1, 0, 0.502513,-99) , 
7, 1.00003, 0, 0, 0.505589,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.042956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489908,-99) , 
4, 0.99999, 0, 0, 0.510274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444897,-99) , 
7, 0.722794, 0, 0, 0.478509,-99) , 
4, 0.999796, 0, 0, 0.507266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466862,-99) , 
4, 0.998572, 0, 0, 0.50608,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0341578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452765,-99) , 
9, -0.582876, 1, 0, 0.512142,-99) , 
7, 0.607262, 0, 0, 0.51931,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14541, 0, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45498,-99) , 
4, 0.999524, 0, 0, 0.502511,-99) , 
9, -0.397855, 1, 0, 0.510556,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0226793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.140986, 1, 1, 0.507622,-99) , 
NN(
0, 
0, 
-1, 0.429067, 0, -1, 0.476137,-99) , 
4, 0.999864, 0, 0, 0.503671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429051,-99) , 
4, 0.998571, 0, 0, 0.501629,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0141781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442122,-99) , 
4, 0.999751, 0, 0, 0.500729,-99) , 
4, 0.999524, 1, 0, 0.501947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463105,-99) , 
4, 0.998571, 0, 0, 0.500856,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0216445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49776, 0, 1, 0.517222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458049,-99) , 
8, -0.555934, 1, 0, 0.483101,-99) , 
9, 0.966321, 1, 0, 0.511552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543963,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.494994,-99) , 
4, 0.999048, 1, 0, 0.497021,-99) , 
0, 0.496186, 1, 0, 0.50194,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0124378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498072,-99) , 
2, -0.128772, 1, 0, 0.500281,-99) , 
2, -0.210127, 1, 0, 0.501852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462422,-99) , 
3, 8.6342, 1, 0, 0.500782,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0403573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30624, 1, 1, 0.531137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493888,-99) , 
0, 0.502899, 1, 0, 0.506536,-99) , 
8, -2.70884, 1, 0, 0.514899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483703,-99) , 
2, -0.0724003, 0, 0, 0.519949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482175,-99) , 
7, -1.28395, 1, 0, 0.485404,-99) , 
1, -0.00111011, 1, 0, 0.497949,-99) , 
0, 0.499997, 0, 0, 0.503702,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0245462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497673,-99) , 
8, -2.94716, 1, 0, 0.503784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433639,-99) , 
9, -2.29366, 1, 0, 0.472831,-99) , 
8, -3.95138, 0, 0, 0.501724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494377,-99) , 
0, 0.490881, 0, 0, 0.511778,-99) , 
NN(
0, 
0, 
-1, 0.491968, 1, -1, 0.464001,-99) , 
7, 0.427611, 0, 0, 0.485477,-99) , 
0, 0.493329, 0, 0, 0.499074,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0355768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 0, 1, 0.547049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452454,-99) , 
4, 0.999524, 0, 0, 0.499028,-99) , 
8, -2.18672, 1, 0, 0.504274,-99) , 
NN(
NN(
0, 
0, 
-1, -0.8086, 1, 1, 0.549492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47699,-99) , 
2, -0.0613713, 1, 0, 0.484409,-99) , 
1, -0.00423992, 1, 0, 0.492755,-99) , 
9, -0.252461, 0, 0, 0.498196,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0187249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464439,-99) , 
6, -951.286, 0, 0, 0.489351,-99) , 
0, 0.491424, 0, 0, 0.50597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471002,-99) , 
8, 0.310773, 1, 0, 0.504773,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0436395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01204, 1, 1, 0.545733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481575,-99) , 
1, 0.00461176, 0, 0, 0.494366,-99) , 
7, -0.0624136, 0, 0, 0.508222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469981,-99) , 
8, -1.68757, 1, 0, 0.516063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485435,-99) , 
7, 1.85716, 0, 0, 0.489427,-99) , 
7, -0.428321, 1, 0, 0.492264,-99) , 
8, -2.74543, 1, 0, 0.49772,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0402861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499451, 1, 1, 0.516834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477107,-99) , 
6, -951.286, 1, 0, 0.498053,-99) , 
7, 1.00012, 1, 0, 0.511603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486388,-99) , 
7, -0.131509, 0, 0, 0.509536,-99) , 
NN(
0, 
0, 
-1, -0.143964, 0, -1, 0.465869,-99) , 
0, 0.491697, 1, 0, 0.491199,-99) , 
0, 0.493329, 0, 0, 0.508283,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0222191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.351883, 1, 1, 0.530092,-99) , 
NN(
0, 
0, 
-1, 6.64734, 1, -1, 0.495258,-99) , 
3, 0.917358, 1, 0, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451315,-99) , 
3, 8.43825, 1, 0, 0.501022,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0409809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25309, 0, 1, 0.559731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465921,-99) , 
9, 0.818545, 0, 0, 0.499478,-99) , 
8, -1.82055, 1, 0, 0.516699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484571,-99) , 
2, -0.0205974, 0, 0, 0.515048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491017,-99) , 
8, -1.67617, 0, 0, 0.4967,-99) , 
0, 0.5019, 0, 0, 0.500582,-99) , 
7, 1.00001, 0, 0, 0.505079,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0276953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.78391, 0, 1, 0.510571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475159,-99) , 
7, 1.57195, 1, 0, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455891,-99) , 
2, 0.0691895, 1, 0, 0.493232,-99) , 
8, -1.32383, 1, 0, 0.506834,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0319285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54534, 1, 1, 0.521424,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496149,-99) , 
8, -2.82648, 1, 0, 0.501814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461136,-99) , 
6, -951.286, 0, 0, 0.504531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364071,-99) , 
9, -2.36043, 1, 0, 0.436008,-99) , 
8, -3.92309, 0, 0, 0.481441,-99) , 
7, -0.714175, 0, 0, 0.498082,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0432203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.295568, 1, 1, 0.512668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48869,-99) , 
8, -3.74768, 1, 0, 0.496764,-99) , 
8, -2.62786, 0, 0, 0.506516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365602,-99) , 
6, -1.00162, 0, 0, 0.50613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449162,-99) , 
8, -2.61566, 1, 0, 0.468838,-99) , 
6, -951.286, 0, 0, 0.489758,-99) , 
0, 0.5019, 1, 0, 0.502978,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0708663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495501,-99) , 
9, 1.91673, 1, 0, 0.529154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476775,-99) , 
1, 0.00305744, 0, 0, 0.499304,-99) , 
8, -0.670422, 0, 0, 0.502235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463014,-99) , 
7, 2.4286, 1, 0, 0.501045,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0420057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.6041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485317,-99) , 
2, 0.0660573, 0, 0, 0.497363,-99) , 
1, 0.00381194, 0, 0, 0.515739,-99) , 
NN(
NN(
0, 
0, 
-1, -2.107, 0, 1, 0.505829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445822,-99) , 
8, -0.702912, 1, 0, 0.502274,-99) , 
7, 0.428769, 0, 0, 0.508464,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0977682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476436,-99) , 
6, -0.499059, 0, 0, 0.544535,-99) , 
NN(
0, 
0, 
-1, 0.736742, 1, -1, 0.319283,-99) , 
6, -1.32233, 0, 0, 0.511906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456912,-99) , 
9, 1.5929, 1, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436093,-99) , 
7, -1.28538, 0, 0, 0.496098,-99) , 
6, -951.286, 0, 0, 0.505032,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0352307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446271,-99) , 
9, 1.29229, 0, 0, 0.491041,-99) , 
8, -1.38015, 1, 0, 0.51546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491265,-99) , 
7, -0.447681, 0, 0, 0.506901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47928,-99) , 
6, -950.08, 0, 0, 0.491099,-99) , 
9, -1.2306, 1, 0, 0.495146,-99) , 
7, 1.57142, 0, 0, 0.498021,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0113933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533459,-99) , 
NN(
0, 
0, 
-1, 0.0113528, 1, -1, 0.497616,-99) , 
8, -0.0597612, 0, 0, 0.499543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448533,-99) , 
0, 0.48952, 0, 0, 0.497777,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.077511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479505,-99) , 
6, -0.234588, 0, 0, 0.528356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493142,-99) , 
7, 1.28613, 0, 0, 0.503085,-99) , 
6, -949.507, 0, 0, 0.517129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343817,-99) , 
6, -1.03574, 0, 0, 0.49658,-99) , 
NN(
0, 
0, 
-1, 1.32038, 1, -1, 0.483717,-99) , 
6, -951.286, 0, 0, 0.490968,-99) , 
1, -0.00111011, 1, 0, 0.500617,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0325972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30529, 0, 1, 0.550398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494909,-99) , 
8, -0.284865, 0, 0, 0.509463,-99) , 
8, -1.90321, 1, 0, 0.519268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493723,-99) , 
8, -1.68995, 0, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461121,-99) , 
8, -0.871636, 1, 0, 0.495936,-99) , 
7, 1.00012, 0, 0, 0.502472,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0322188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.30522, 1, 1, 0.517234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496222,-99) , 
7, -0.908866, 0, 0, 0.522334,-99) , 
NN(
0, 
0, 
-1, 4.01368, 1, -1, 0.488657,-99) , 
9, -1.62763, 1, 0, 0.496455,-99) , 
7, 0.428612, 0, 0, 0.506076,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0261382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526021,-99) , 
NN(
NN(
0, 
0, 
-1, 1.84328, 0, 1, 0.509722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394786,-99) , 
7, 2.14533, 1, 0, 0.477375,-99) , 
8, -1.05418, 1, 0, 0.506211,-99) , 
8, -0.129911, 0, 0, 0.507396,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0268587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471853,-99) , 
2, -0.0710706, 0, 0, 0.525878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494858,-99) , 
2, -0.17723, 1, 0, 0.497589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384483,-99) , 
4, 0.999728, 0, 0, 0.494093,-99) , 
4, 0.999524, 1, 0, 0.496456,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0292357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492277,-99) , 
8, -3.7871, 0, 0, 0.511339,-99) , 
7, -0.606545, 0, 0, 0.522416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494697,-99) , 
9, -0.953424, 1, 0, 0.500054,-99) , 
NN(
0, 
0, 
-1, -0.127612, 0, -1, 0.461572,-99) , 
8, -3.1718, 0, 0, 0.497197,-99) , 
9, -1.40817, 1, 0, 0.501508,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0287913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.638168, 0, 1, 0.516928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494751,-99) , 
9, 1.48498, 0, 0, 0.50065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447011,-99) , 
4, 0.999524, 0, 0, 0.497462,-99) , 
9, -0.352671, 1, 0, 0.50716,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0205436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547897,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0686263, 0, 1, 0.508849,-99) , 
NN(
0, 
0, 
-1, -1.26656, 1, -1, 0.491901,-99) , 
7, 0.142875, 0, 0, 0.501829,-99) , 
8, -4.1223, 1, 0, 0.503856,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0746152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711446, 1, 1, 0.523708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482463,-99) , 
9, -1.58443, 1, 0, 0.494878,-99) , 
7, -0.142859, 0, 0, 0.513526,-99) , 
NN(
NN(
0, 
0, 
-1, 0.266464, 0, 1, 0.52915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312882,-99) , 
7, -0.134429, 1, 0, 0.36321,-99) , 
6, -1.13619, 0, 0, 0.49814,-99) , 
6, -20.6011, 1, 0, 0.504913,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0149236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498984,-99) , 
7, 2.14269, 0, 0, 0.501532,-99) , 
NN(
0, 
0, 
-1, 0.0736352, 1, -1, 0.465094,-99) , 
4, 0.999796, 0, 0, 0.498125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455415,-99) , 
4, 0.998572, 0, 0, 0.496929,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0271727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00278473, 0, 1, 0.519981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49206,-99) , 
7, 0.71517, 0, 0, 0.499153,-99) , 
9, -1.2497, 1, 0, 0.503617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385703,-99) , 
1, 0.0124237, 1, 0, 0.499843,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0338994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478233,-99) , 
9, -2.1393, 1, 0, 0.496201,-99) , 
7, -0.618011, 0, 0, 0.513699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490914,-99) , 
7, 0.42868, 1, 0, 0.499633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446035,-99) , 
9, -1.2554, 1, 0, 0.476963,-99) , 
8, -3.14375, 0, 0, 0.497721,-99) , 
9, -1.43506, 1, 0, 0.500394,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0444408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.292713, 1, 1, 0.545036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48603,-99) , 
8, -0.0987428, 0, 0, 0.495872,-99) , 
8, -2.13012, 1, 0, 0.506414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483326,-99) , 
6, -951.286, 0, 0, 0.502767,-99) , 
NN(
0, 
0, 
-1, -0.170025, 0, -1, 0.480304,-99) , 
8, -2.49471, 0, 0, 0.488257,-99) , 
7, 0.714452, 0, 0, 0.4949,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0387534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.36367, 0, 1, 0.531181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499343,-99) , 
2, -0.0768329, 1, 0, 0.505924,-99) , 
0, 0.493964, 0, 0, 0.519251,-99) , 
NN(
NN(
0, 
0, 
-1, 0.149035, 0, 1, 0.546945,-99) , 
NN(
0, 
0, 
-1, -9.14007, 1, -1, 0.486884,-99) , 
1, 0.00403533, 0, 0, 0.497513,-99) , 
0, 0.497138, 1, 0, 0.506499,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0661831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91307, 1, 1, 0.519025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314632,-99) , 
6, -1.49441, 0, 0, 0.503042,-99) , 
6, -951.286, 1, 0, 0.509855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467318,-99) , 
9, 2.11274, 1, 0, 0.508232,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0415967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0788248, 1, 1, 0.528369,-99) , 
NN(
0, 
0, 
-1, 0.428684, 0, -1, 0.473464,-99) , 
2, -0.0708364, 0, 0, 0.512506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489956,-99) , 
8, -1.65763, 1, 0, 0.53091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485241,-99) , 
3, 0.70905, 1, 0, 0.492424,-99) , 
2, -0.0844076, 1, 0, 0.497113,-99) , 
3, 4.23371, 0, 0, 0.500201,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0548198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48818,-99) , 
7, -0.625387, 0, 0, 0.517333,-99) , 
NN(
0, 
0, 
-1, 1.14999, 1, -1, 0.475933,-99) , 
9, 0.967681, 1, 0, 0.508917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499463,-99) , 
7, 1.28576, 0, 0, 0.511513,-99) , 
NN(
0, 
0, 
-1, 0.716274, 1, -1, 0.365453,-99) , 
6, -1.29221, 0, 0, 0.489976,-99) , 
6, -9.14007, 1, 0, 0.498195,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0338439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.113109, 0, 1, 0.515843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448707,-99) , 
2, 0.0711955, 1, 0, 0.485039,-99) , 
3, 4.27831, 1, 0, 0.509888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
2, 0.142973, 0, 0, 0.514131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484702,-99) , 
2, -0.148595, 1, 0, 0.489416,-99) , 
2, 0.0751426, 0, 0, 0.493944,-99) , 
0, 0.499996, 1, 0, 0.504381,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0209726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466442,-99) , 
0, 0.499632, 1, 0, 0.524829,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.495755,-99) , 
4, 0.999524, 1, 0, 0.497735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463418,-99) , 
0, 0.490564, 1, 0, 0.494152,-99) , 
NN(
0, 
0, 
-1, 0.490334, 0, -1, 0.468344,-99) , 
8, -2.16682, 1, 0, 0.481756,-99) , 
0, 0.492377, 0, 0, 0.495824,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0225666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.135292, 1, 1, 0.507626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436917,-99) , 
4, 0.999773, 0, 0, 0.504561,-99) , 
NN(
0, 
0, 
-1, -2.14008, 1, -1, 0.472317,-99) , 
4, 0.999524, 0, 0, 0.502274,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0291121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491001,-99) , 
3, 3.83292, 1, 0, 0.530274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490146,-99) , 
8, -1.92352, 1, 0, 0.503023,-99) , 
0, 0.500948, 0, 0, 0.510358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49674,-99) , 
7, -1.28922, 1, 0, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452999,-99) , 
7, -1.69349, 0, 0, 0.498086,-99) , 
7, 0.428744, 0, 0, 0.503721,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0329272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47947,-99) , 
9, -0.75867, 1, 0, 0.506529,-99) , 
7, 0.59446, 0, 0, 0.512012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457774,-99) , 
3, 3.1619, 1, 0, 0.49804,-99) , 
NN(
0, 
0, 
-1, -0.0715937, 0, -1, 0.476935,-99) , 
3, 4.37807, 1, 0, 0.494196,-99) , 
9, -0.376211, 1, 0, 0.502855,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0107961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540934,-99) , 
NN(
0, 
0, 
-1, -3.95796, 0, -1, 0.497326,-99) , 
8, -4.37307, 1, 0, 0.498576,-99) , 
8, -0.0170143, 0, 0, 0.500467,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0290611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497741,-99) , 
7, 2.46925, 1, 0, 0.530049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477095,-99) , 
8, -1.93537, 1, 0, 0.511952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491844,-99) , 
8, -0.91033, 0, 0, 0.495769,-99) , 
2, 0.0666221, 0, 0, 0.498766,-99) , 
7, 2.14274, 0, 0, 0.500586,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0240976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443913,-99) , 
9, 1.51693, 0, 0, 0.503738,-99) , 
8, -1.19085, 1, 0, 0.528743,-99) , 
NN(
NN(
0, 
0, 
-1, -0.828664, 0, 1, 0.50571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474482,-99) , 
9, 1.80552, 1, 0, 0.5044,-99) , 
7, 1.85713, 0, 0, 0.506691,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0144159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44202,-99) , 
3, 6.46238, 1, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459157,-99) , 
3, 8.44159, 1, 0, 0.500029,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0160294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.173883, 0, 1, 0.504421,-99) , 
NN(
0, 
0, 
-1, 0.15348, 0, -1, 0.479169,-99) , 
4, 0.999864, 0, 0, 0.501258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439191,-99) , 
4, 0.998572, 0, 0, 0.499501,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0130049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.32238, 0, 1, 0.539928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498934,-99) , 
9, -1.64289, 1, 0, 0.501497,-99) , 
7, -1.13579, 1, 0, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471925,-99) , 
7, -1.57128, 0, 0, 0.502135,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0145019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520601,-99) , 
NN(
0, 
0, 
-1, 0.48952, 0, -1, 0.494867,-99) , 
9, 1.3846, 0, 0, 0.496219,-99) , 
8, -0.0208373, 0, 0, 0.498035,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0365307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.23397, 0, 1, 0.546125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455317,-99) , 
9, -1.13014, 1, 0, 0.495769,-99) , 
8, -2.85733, 0, 0, 0.509837,-99) , 
NN(
NN(
0, 
0, 
-1, 0.310741, 0, 1, 0.52131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487885,-99) , 
2, -0.0710108, 1, 0, 0.492028,-99) , 
0, 0.503804, 0, 0, 0.49546,-99) , 
9, -0.629008, 1, 0, 0.501309,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0167783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376964, 1, 1, 0.537842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458416,-99) , 
3, 6.3024, 1, 0, 0.500366,-99) , 
3, 0.512102, 1, 0, 0.503221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461604,-99) , 
3, 8.62065, 1, 0, 0.502046,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0273704);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492772,-99) , 
9, -0.908908, 1, 0, 0.498406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466814,-99) , 
6, -951.286, 1, 0, 0.482427,-99) , 
8, -3.19255, 0, 0, 0.495603,-99) , 
8, -4.15915, 1, 0, 0.496739,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.021644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14277, 0, 1, 0.507041,-99) , 
NN(
0, 
0, 
-1, 0.99972, 0, -1, 0.446846,-99) , 
4, 0.999819, 0, 0, 0.503444,-99) , 
NN(
0, 
0, 
-1, 0.0737127, 1, -1, 0.475946,-99) , 
4, 0.999524, 0, 0, 0.501469,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0369512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471044,-99) , 
2, -0.0755314, 0, 0, 0.504263,-99) , 
8, -1.61853, 1, 0, 0.511647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486366,-99) , 
8, -1.55441, 0, 0, 0.490294,-99) , 
7, 1.30912, 0, 0, 0.49334,-99) , 
9, 0.422538, 0, 0, 0.49831,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0873789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476011,-99) , 
5, 0.00424691, 0, 0, 0.505136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367597,-99) , 
1, 0.0127407, 1, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456666,-99) , 
1, -0.0108299, 0, 0, 0.499306,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0321474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477359,-99) , 
8, -0.687789, 0, 0, 0.498227,-99) , 
8, -1.48523, 1, 0, 0.521924,-99) , 
NN(
NN(
0, 
0, 
-1, 4.17451, 0, 1, 0.510437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467428,-99) , 
7, -0.169566, 0, 0, 0.490767,-99) , 
2, -0.0715937, 0, 0, 0.50701,-99) , 
7, 1.57143, 0, 0, 0.509129,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0338048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482576,-99) , 
7, 0.879029, 1, 0, 0.503332,-99) , 
7, 1.52516, 0, 0, 0.50849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477437,-99) , 
7, 1.31668, 1, 0, 0.501604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452738,-99) , 
2, 0.0673686, 1, 0, 0.492595,-99) , 
8, -1.39431, 1, 0, 0.50488,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.010267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540461,-99) , 
NN(
0, 
0, 
-1, -1.70716, 0, -1, 0.496037,-99) , 
7, 2.42844, 0, 0, 0.497462,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0231201);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487574,-99) , 
2, 0.00325612, 0, 0, 0.49444,-99) , 
2, -0.27645, 1, 0, 0.496201,-99) , 
2, 0.212969, 0, 0, 0.498815,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0250651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467123,-99) , 
9, 1.4826, 0, 0, 0.498157,-99) , 
8, -1.20238, 1, 0, 0.535513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481017,-99) , 
8, -3.85995, 0, 0, 0.50375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479137,-99) , 
8, -0.2769, 1, 0, 0.502309,-99) , 
7, 1.85704, 0, 0, 0.505472,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.020135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.507, 0, 1, 0.526927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496666,-99) , 
7, 2.11594, 0, 0, 0.499562,-99) , 
7, -0.712796, 1, 0, 0.503068,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.467371,-99) , 
8, -3.94337, 0, 0, 0.500663,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0191482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492251,-99) , 
8, -1.39431, 1, 0, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459143,-99) , 
0, 0.506254, 1, 0, 0.500017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484275,-99) , 
2, 0.0156402, 0, 0, 0.496821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449826,-99) , 
3, 4.04178, 1, 0, 0.485903,-99) , 
0, 0.493331, 0, 0, 0.497723,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0165067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498748,-99) , 
9, -1.92921, 1, 0, 0.50155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419434,-99) , 
7, -1.77509, 0, 0, 0.472514,-99) , 
7, -1.28534, 0, 0, 0.499323,-99) , 
8, 0.0648439, 0, 0, 0.501396,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0134794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470729,-99) , 
7, -1.01569, 0, 0, 0.53143,-99) , 
NN(
0, 
0, 
-1, -0.877296, 1, 1, 0.501522,-99) , 
9, -1.71485, 1, 0, 0.503415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438742,-99) , 
0, 0.49714, 0, 0, 0.474825,-99) , 
7, -1.28557, 0, 0, 0.501318,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0312451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489541,-99) , 
9, -1.75708, 1, 0, 0.535744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463755,-99) , 
7, -1.54251, 0, 0, 0.518909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489084,-99) , 
8, -0.859195, 1, 0, 0.522453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492003,-99) , 
4, 0.999524, 1, 0, 0.494357,-99) , 
7, 1.85704, 0, 0, 0.497385,-99) , 
8, -3.50327, 1, 0, 0.500172,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.022048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.00128, 0, 1, 0.507817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533729,-99) , 
NN(
0, 
0, 
-1, 0.0128724, 1, -1, 0.475087,-99) , 
7, 1.28666, 0, 0, 0.487233,-99) , 
2, -0.071946, 0, 0, 0.504331,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0338746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4913,-99) , 
4, 0.999974, 0, 0, 0.508976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421009,-99) , 
4, 0.999534, 1, 0, 0.470465,-99) , 
4, 0.999728, 0, 0, 0.506482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453379,-99) , 
4, 0.999048, 0, 0, 0.50425,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.028935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.186863, 1, 1, 0.550134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492407,-99) , 
7, 1.58545, 0, 0, 0.501883,-99) , 
9, -0.0253707, 1, 0, 0.512387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488574,-99) , 
0, 0.497139, 0, 0, 0.499832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445032,-99) , 
8, -0.614282, 1, 0, 0.496588,-99) , 
7, 0.71502, 0, 0, 0.502344,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0299643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491684,-99) , 
2, -0.0312337, 1, 0, 0.499877,-99) , 
2, 0.213397, 0, 0, 0.501888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484757,-99) , 
0, 0.504348, 0, 0, 0.497136,-99) , 
NN(
0, 
0, 
-1, -1.2308, 1, -1, 0.468617,-99) , 
7, -0.142628, 0, 0, 0.486817,-99) , 
0, 0.5019, 1, 0, 0.498756,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0256944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.900556, 0, 1, 0.539936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485565,-99) , 
9, -0.853151, 0, 0, 0.501519,-99) , 
8, -3.54412, 1, 0, 0.504645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449914,-99) , 
9, -1.96127, 0, 0, 0.474955,-99) , 
7, -1.28392, 0, 0, 0.502448,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0197779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.92845, 1, 1, 0.530202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46442,-99) , 
4, 0.999048, 0, 0, 0.50302,-99) , 
8, -3.48869, 1, 0, 0.505598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461002,-99) , 
8, -3.72187, 0, 0, 0.484148,-99) , 
7, -1.28538, 0, 0, 0.503951,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0257836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495914,-99) , 
9, -0.224281, 1, 0, 0.522037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484503,-99) , 
0, 0.499042, 1, 0, 0.49672,-99) , 
7, 0.740324, 0, 0, 0.501056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471857,-99) , 
7, 1.69443, 1, 0, 0.491572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45585,-99) , 
7, -0.427249, 0, 0, 0.488237,-99) , 
8, -1.95498, 1, 0, 0.496102,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0373053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.422412, 1, 1, 0.506629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485373,-99) , 
8, -3.30267, 0, 0, 0.502865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479949,-99) , 
7, -0.141319, 0, 0, 0.531528,-99) , 
NN(
0, 
0, 
-1, 0.429067, 1, -1, 0.482349,-99) , 
1, 0.00403533, 0, 0, 0.490632,-99) , 
0, 0.500948, 0, 0, 0.493956,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0171749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14289, 0, 1, 0.506086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437045,-99) , 
4, 0.999533, 1, 0, 0.470255,-99) , 
4, 0.999728, 0, 0, 0.503878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468999,-99) , 
4, 0.999048, 0, 0, 0.502396,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0422768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.293196, 0, 1, 0.520327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469744,-99) , 
6, -951.286, 0, 0, 0.495181,-99) , 
9, -0.343217, 1, 0, 0.507683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481864,-99) , 
2, 0.12994, 0, 0, 0.485532,-99) , 
4, 0.999524, 1, 0, 0.48903,-99) , 
0, 0.496186, 1, 0, 0.495358,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0365696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21654, 1, 1, 0.531413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478115,-99) , 
8, -4.1959, 1, 0, 0.491096,-99) , 
7, -0.288338, 0, 0, 0.507139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488303,-99) , 
9, 0.508191, 0, 0, 0.496888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466424,-99) , 
4, 0.999524, 0, 0, 0.494967,-99) , 
8, -2.71731, 1, 0, 0.499219,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0884017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472531,-99) , 
5, 0.00364512, 0, 0, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428055,-99) , 
1, 0.0107095, 1, 0, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419752,-99) , 
1, -0.012758, 0, 0, 0.499417,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0205235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499933,-99) , 
7, -0.892248, 0, 0, 0.533864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496911,-99) , 
7, 1.36753, 0, 0, 0.500101,-99) , 
8, -3.53398, 1, 0, 0.502991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449358,-99) , 
9, -1.98673, 0, 0, 0.48104,-99) , 
7, -1.28536, 0, 0, 0.501316,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0314119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494998,-99) , 
9, -1.48257, 1, 0, 0.511645,-99) , 
7, 0.0524916, 0, 0, 0.520572,-99) , 
NN(
NN(
0, 
0, 
-1, -0.138058, 1, 1, 0.510634,-99) , 
NN(
0, 
0, 
-1, -1.07491, 1, -1, 0.488261,-99) , 
0, 0.497139, 0, 0, 0.50126,-99) , 
9, -0.824476, 1, 0, 0.507825,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0196547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14273, 0, 1, 0.506681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46914,-99) , 
9, 1.53636, 1, 0, 0.481983,-99) , 
8, -0.670422, 1, 0, 0.504081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445507,-99) , 
4, 0.998572, 0, 0, 0.502486,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.022341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498033,-99) , 
0, 0.497333, 1, 0, 0.506125,-99) , 
0, 0.501219, 0, 0, 0.507778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516443,-99) , 
NN(
0, 
0, 
-1, -0.31887, 1, -1, 0.481765,-99) , 
7, 1.5713, 0, 0, 0.486626,-99) , 
0, 0.5019, 1, 0, 0.50329,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0204409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488364,-99) , 
6, -951.286, 0, 0, 0.510783,-99) , 
NN(
0, 
0, 
-1, -4.01102, 0, -1, 0.496229,-99) , 
2, 0.0311037, 0, 0, 0.500429,-99) , 
2, -0.213672, 1, 0, 0.502234,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0354292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473905,-99) , 
8, -1.77409, 1, 0, 0.528559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48784,-99) , 
6, -951.286, 0, 0, 0.498715,-99) , 
7, 1.24184, 0, 0, 0.502694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484073,-99) , 
9, 0.898822, 1, 0, 0.494447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421423,-99) , 
7, -0.138546, 0, 0, 0.484136,-99) , 
8, -1.35313, 1, 0, 0.498591,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0605906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.345567, 0, 1, 0.525811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459771,-99) , 
7, -0.423393, 0, 0, 0.50432,-99) , 
9, -0.615572, 1, 0, 0.512119,-99) , 
NN(
NN(
0, 
0, 
-1, 0.637411, 0, 1, 0.523787,-99) , 
NN(
0, 
0, 
-1, 0.474919, 1, -1, 0.355594,-99) , 
6, -1.34855, 0, 0, 0.500521,-99) , 
6, -949.507, 1, 0, 0.505658,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0238319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.692255, 0, 1, 0.510508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491639,-99) , 
7, 2.14451, 0, 0, 0.494763,-99) , 
9, -0.279592, 1, 0, 0.502957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472725,-99) , 
0, 0.489974, 0, 0, 0.491052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439315,-99) , 
2, -0.065611, 0, 0, 0.476271,-99) , 
0, 0.491424, 0, 0, 0.500549,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0103466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471462,-99) , 
8, -4.08399, 0, 0, 0.498976,-99) , 
NN(
0, 
0, 
-1, 0.439651, 0, -1, 0.462726,-99) , 
4, 0.99966, 0, 0, 0.496739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452742,-99) , 
4, 0.998572, 0, 0, 0.495536,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0278543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492958,-99) , 
7, -0.319913, 0, 0, 0.529821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494414,-99) , 
7, -0.36039, 1, 0, 0.496447,-99) , 
9, -1.22212, 1, 0, 0.500015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485393,-99) , 
8, -3.62102, 1, 0, 0.494509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383681,-99) , 
9, -2.3769, 1, 0, 0.452102,-99) , 
8, -3.938, 0, 0, 0.481075,-99) , 
7, -0.714149, 0, 0, 0.49665,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.032601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48498,-99) , 
7, -0.645885, 0, 0, 0.538451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495024,-99) , 
6, -9.14007, 1, 0, 0.50349,-99) , 
9, -1.45992, 1, 0, 0.506441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459448,-99) , 
6, -951.287, 0, 0, 0.487424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439815,-99) , 
8, -4.08113, 0, 0, 0.471275,-99) , 
7, -0.999948, 0, 0, 0.502177,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0237669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.74803, 1, 1, 0.546682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450297,-99) , 
9, -0.262998, 1, 0, 0.480399,-99) , 
3, 4.03861, 1, 0, 0.522537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498846,-99) , 
0, 0.498091, 1, 0, 0.50442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470889,-99) , 
7, -1.57125, 0, 0, 0.502922,-99) , 
2, -0.075787, 1, 0, 0.50618,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0315289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24258, 1, 1, 0.509879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469231,-99) , 
8, -1.57707, 1, 0, 0.48825,-99) , 
7, 1.28572, 1, 0, 0.505519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459556,-99) , 
8, -1.2558, 1, 0, 0.499609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457028,-99) , 
9, -0.0784883, 0, 0, 0.47443,-99) , 
0, 0.494553, 1, 0, 0.491052,-99) , 
0, 0.496186, 0, 0, 0.500523,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.036219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492204,-99) , 
1, -0.00283878, 1, 0, 0.500904,-99) , 
3, 0.729778, 1, 0, 0.505652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469705,-99) , 
2, -0.0713441, 0, 0, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0.492335, 0, -1, 0.451156,-99) , 
0, 0.495237, 0, 0, 0.490379,-99) , 
3, 4.37797, 1, 0, 0.502733,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0226856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494323,-99) , 
4, 0.999524, 1, 0, 0.496102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45339,-99) , 
4, 0.998572, 0, 0, 0.49491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407145,-99) , 
9, -2.36467, 1, 0, 0.461316,-99) , 
8, -3.9727, 0, 0, 0.492784,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0141369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489143,-99) , 
8, -0.928723, 1, 0, 0.533315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4994,-99) , 
7, -0.719028, 0, 0, 0.515975,-99) , 
NN(
0, 
0, 
-1, -0.795701, 1, 1, 0.502391,-99) , 
9, -1.52345, 1, 0, 0.504472,-99) , 
7, 2.14276, 0, 0, 0.506205,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0123666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54071,-99) , 
NN(
NN(
0, 
0, 
-1, 1.94607, 1, 1, 0.521699,-99) , 
NN(
0, 
0, 
-1, 1.91129, 1, -1, 0.49654,-99) , 
9, 1.34465, 0, 0, 0.498684,-99) , 
7, 2.42852, 0, 0, 0.500059,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0130452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.22631, 0, 1, 0.504275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499779,-99) , 
0, 0.49904, 1, 0, 0.505072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440826,-99) , 
7, 0.720139, 0, 0, 0.480415,-99) , 
8, -0.670422, 1, 0, 0.501802,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0204639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478074,-99) , 
8, -1.05848, 1, 0, 0.525998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
9, -1.81838, 1, 0, 0.502625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447842,-99) , 
0, 0.49809, 0, 0, 0.47837,-99) , 
7, -1.38073, 0, 0, 0.500899,-99) , 
7, 1.85717, 0, 0, 0.503251,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0188664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28716, 0, 1, 0.530929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47942,-99) , 
7, 0.430034, 1, 0, 0.49657,-99) , 
0, 0.495233, 0, 0, 0.521241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498523,-99) , 
4, 0.999048, 1, 0, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469214,-99) , 
7, 2.14287, 1, 0, 0.498685,-99) , 
1, -0.00283878, 1, 0, 0.503647,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0214353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530541,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0149725, 0, 1, 0.533655,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.494279,-99) , 
1, -0.00439438, 1, 0, 0.49996,-99) , 
4, 0.999048, 1, 0, 0.50138,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.01976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492428,-99) , 
0, 0.496188, 0, 0, 0.519262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478358,-99) , 
7, -0.353834, 0, 0, 0.500729,-99) , 
7, -0.706877, 1, 0, 0.503331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437504,-99) , 
8, -4.44027, 1, 0, 0.473895,-99) , 
8, -4.08055, 0, 0, 0.501797,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0230325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0043846, 1, 1, 0.515925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491621,-99) , 
0, 0.503624, 0, 0, 0.501166,-99) , 
0, 0.501628, 1, 0, 0.510217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460947,-99) , 
4, 0.999909, 0, 0, 0.495217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445624,-99) , 
4, 0.999524, 0, 0, 0.491311,-99) , 
0, 0.497138, 0, 0, 0.502276,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0257946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479373,-99) , 
4, 0.999048, 0, 0, 0.505026,-99) , 
7, 2.42838, 0, 0, 0.506492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471298,-99) , 
6, -951.287, 0, 0, 0.509365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440355,-99) , 
8, -3.97613, 0, 0, 0.482453,-99) , 
7, -0.999924, 0, 0, 0.503623,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0187957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490297,-99) , 
7, -1.32714, 0, 0, 0.532851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495027,-99) , 
4, 0.998572, 1, 0, 0.49608,-99) , 
7, -1.28538, 1, 0, 0.497352,-99) , 
9, -1.97318, 1, 0, 0.49985,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0343546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.405931, 1, 1, 0.549398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489913,-99) , 
9, -0.45687, 0, 0, 0.493754,-99) , 
7, 0.564981, 0, 0, 0.503357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484858,-99) , 
7, 0.361483, 1, 0, 0.511436,-99) , 
NN(
0, 
0, 
-1, 0.0713112, 1, -1, 0.487373,-99) , 
9, -0.00524743, 1, 0, 0.491959,-99) , 
8, -2.19214, 1, 0, 0.498036,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0266012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497881,-99) , 
4, 0.999987, 0, 0, 0.508965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436909,-99) , 
4, 0.999728, 0, 0, 0.50663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443258,-99) , 
2, 0.0712453, 1, 0, 0.481507,-99) , 
4, 0.999524, 0, 0, 0.504807,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.012906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.341154, 1, 1, 0.534012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498937,-99) , 
0, 0.490472, 1, 0, 0.501021,-99) , 
3, 0.534168, 1, 0, 0.503697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458664,-99) , 
3, 8.64067, 1, 0, 0.502547,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.02184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494961, 1, 1, 0.513467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486026,-99) , 
0, 0.495777, 0, 0, 0.497609,-99) , 
9, -0.731408, 1, 0, 0.50353,-99) , 
NN(
0, 
0, 
-1, 3.47208, 1, -1, 0.472585,-99) , 
0, 0.504756, 1, 0, 0.501167,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0207968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492207,-99) , 
8, -1.20163, 1, 0, 0.527933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498331,-99) , 
6, -951.286, 1, 0, 0.504157,-99) , 
7, 1.84361, 0, 0, 0.506477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441398,-99) , 
7, -1.85697, 0, 0, 0.504841,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.022969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476403,-99) , 
9, 1.45597, 1, 0, 0.503831,-99) , 
9, -1.82933, 1, 0, 0.507209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497618,-99) , 
9, -0.0218506, 1, 0, 0.508144,-99) , 
NN(
0, 
0, 
-1, 0.0642331, 1, -1, 0.488875,-99) , 
7, 0.71436, 0, 0, 0.495942,-99) , 
0, 0.49809, 0, 0, 0.501588,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0201139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.51015, 1, 1, 0.540074,-99) , 
NN(
NN(
0, 
0, 
-1, 0.30947, 0, 1, 0.512442,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.495747,-99) , 
9, -0.486046, 1, 0, 0.503699,-99) , 
7, 2.14282, 0, 0, 0.505867,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0222236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.207942, 0, 1, 0.508906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461399,-99) , 
4, 0.999728, 0, 0, 0.507292,-99) , 
NN(
0, 
0, 
-1, -2.15495, 1, -1, 0.47248,-99) , 
4, 0.999524, 0, 0, 0.504928,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0157124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57055, 1, 1, 0.505042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464448,-99) , 
6, -951.286, 1, 0, 0.481604,-99) , 
7, -1.28541, 0, 0, 0.503261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478584,-99) , 
0, 0.505981, 1, 0, 0.492196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444283,-99) , 
3, 3.47208, 1, 0, 0.476989,-99) , 
0, 0.504757, 1, 0, 0.501188,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0266145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0759027, 1, 1, 0.506015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456691,-99) , 
1, 0.00152099, 0, 0, 0.475163,-99) , 
3, 3.35009, 1, 0, 0.501936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479049,-99) , 
7, 0.834094, 0, 0, 0.48928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443005,-99) , 
9, 0.518413, 1, 0, 0.479472,-99) , 
3, 4.36372, 1, 0, 0.497639,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0312434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490143,-99) , 
7, 0.607254, 0, 0, 0.497298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478308,-99) , 
8, -1.81997, 1, 0, 0.48682,-99) , 
9, -0.366118, 1, 0, 0.49216,-99) , 
7, 2.4285, 0, 0, 0.493641,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0266396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498555,-99) , 
2, 0.0534168, 0, 0, 0.503487,-99) , 
2, 0.216403, 0, 0, 0.505582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485288,-99) , 
9, -2.19299, 1, 0, 0.489756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423141,-99) , 
1, 0.00858418, 1, 0, 0.485133,-99) , 
7, 0.142866, 0, 0, 0.496556,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0179018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.449986, 1, 1, 0.506414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434319,-99) , 
3, 7.01265, 1, 0, 0.504443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45911,-99) , 
3, 8.63428, 1, 0, 0.50318,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0728842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471498,-99) , 
6, -0.42771, 0, 0, 0.519017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279579,-99) , 
6, -1.86526, 0, 0, 0.503859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487222,-99) , 
7, 1.57121, 0, 0, 0.492542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439456,-99) , 
9, 1.83289, 1, 0, 0.488491,-99) , 
6, -950.08, 0, 0, 0.497081,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0517775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.804563, 0, 1, 0.530792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464737,-99) , 
2, 0.0655259, 1, 0, 0.497371,-99) , 
9, -0.703961, 1, 0, 0.508425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498979,-99) , 
6, 0.736249, 0, 0, 0.514747,-99) , 
NN(
0, 
0, 
-1, 0.435322, 1, -1, 0.366614,-99) , 
6, -1.32159, 0, 0, 0.493693,-99) , 
6, -951.286, 1, 0, 0.50017,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0216279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50598, 1, 1, 0.55092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484241,-99) , 
3, 3.59775, 1, 0, 0.529158,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495, 0, 1, 0.506199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492527,-99) , 
8, -0.149938, 0, 0, 0.495298,-99) , 
0, 0.495777, 1, 0, 0.498944,-99) , 
0, 0.504756, 0, 0, 0.501343,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0301277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495296,-99) , 
7, -0.246147, 0, 0, 0.515858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491239,-99) , 
9, -0.581999, 1, 0, 0.495875,-99) , 
8, -2.91811, 1, 0, 0.500826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445516,-99) , 
8, -3.58178, 0, 0, 0.471513,-99) , 
7, -1.28557, 0, 0, 0.498544,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0484993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49999, 0, 1, 0.542798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480573,-99) , 
7, 0.145629, 0, 0, 0.498028,-99) , 
8, -2.91501, 1, 0, 0.508785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48423,-99) , 
6, -0.349347, 0, 0, 0.5067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330715,-99) , 
6, -1.78276, 0, 0, 0.494042,-99) , 
6, -950.08, 1, 0, 0.500423,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0267131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493808,-99) , 
7, -0.428476, 1, 0, 0.499304,-99) , 
8, -3.59181, 1, 0, 0.501352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448118,-99) , 
7, -1.29707, 0, 0, 0.475475,-99) , 
9, -1.95166, 0, 0, 0.499297,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0308191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.35357, 1, 1, 0.528118,-99) , 
NN(
NN(
0, 
0, 
-1, -0.874648, 1, 1, 0.508792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474769,-99) , 
9, -1.11714, 0, 0, 0.489277,-99) , 
7, -0.142698, 0, 0, 0.501975,-99) , 
0, 0.503805, 0, 0, 0.504943,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0178633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
7, 0.224603, 0, 0, 0.50349,-99) , 
8, -4.07055, 1, 0, 0.504833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457804,-99) , 
7, -1.85697, 0, 0, 0.503616,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0216784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494536,-99) , 
2, 0.133492, 0, 0, 0.497661,-99) , 
2, -0.184758, 1, 0, 0.500219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437745,-99) , 
8, -2.15495, 1, 0, 0.478046,-99) , 
4, 0.999524, 0, 0, 0.498707,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0169851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482205,-99) , 
8, -0.942781, 1, 0, 0.53751,-99) , 
NN(
NN(
0, 
0, 
-1, -4.26037, 1, 1, 0.531526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487841,-99) , 
0, 0.502852, 1, 0, 0.499958,-99) , 
9, -2.09708, 1, 0, 0.501869,-99) , 
7, 2.14282, 0, 0, 0.503943,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0323423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62417, 1, 1, 0.531159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46926,-99) , 
9, -2.23991, 1, 0, 0.487509,-99) , 
7, -0.818029, 0, 0, 0.514678,-99) , 
NN(
NN(
0, 
0, 
-1, 0.244407, 0, 1, 0.522199,-99) , 
NN(
0, 
0, 
-1, -0.239432, 0, -1, 0.491762,-99) , 
9, -0.619684, 1, 0, 0.496672,-99) , 
8, -2.84764, 1, 0, 0.502173,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0179604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498064,-99) , 
2, 0.0381166, 0, 0, 0.503227,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.468956,-99) , 
4, 0.999728, 0, 0, 0.500611,-99) , 
4, 0.998572, 1, 0, 0.501722,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0184934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.31451, 1, 1, 0.521987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497802,-99) , 
8, -0.125344, 0, 0, 0.500382,-99) , 
0, 0.497818, 1, 0, 0.504729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432853,-99) , 
4, 0.999841, 0, 0, 0.494735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430263,-99) , 
4, 0.999524, 0, 0, 0.489358,-99) , 
0, 0.496186, 0, 0, 0.499497,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0189565);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536644,-99) , 
NN(
NN(
0, 
0, 
-1, 4.23371, 0, 1, 0.504829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477296,-99) , 
2, 0.275377, 0, 0, 0.488578,-99) , 
2, 0.0713112, 1, 0, 0.502007,-99) , 
7, 2.42853, 0, 0, 0.503118,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0269525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47457, 0, 1, 0.529447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492981,-99) , 
8, -2.6068, 0, 0, 0.504367,-99) , 
0, 0.502263, 0, 0, 0.508065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472755,-99) , 
0, 0.505709, 1, 0, 0.50641,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0165559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495123,-99) , 
0, 0.495778, 0, 0, 0.498083,-99) , 
NN(
0, 
0, 
-1, -3.71707, 0, -1, 0.470599,-99) , 
7, -0.714175, 0, 0, 0.492904,-99) , 
0, 0.496186, 0, 0, 0.5021,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0268958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00786945, 0, 1, 0.530912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470996,-99) , 
6, -951.286, 1, 0, 0.487606,-99) , 
2, 0.0666913, 1, 0, 0.517983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49485,-99) , 
3, 1.12029, 1, 0, 0.501789,-99) , 
2, 0.195426, 0, 0, 0.503513,-99) , 
3, 4.36372, 0, 0, 0.506302,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0366405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492392,-99) , 
4, 0.999996, 0, 0, 0.507475,-99) , 
NN(
0, 
0, 
-1, 0.143381, 0, -1, 0.468069,-99) , 
4, 0.999909, 0, 0, 0.502795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442286,-99) , 
0, 0.499042, 1, 0, 0.483811,-99) , 
4, 0.999524, 0, 0, 0.501426,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0243176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.74268, 1, 1, 0.517797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484752,-99) , 
2, 0.0745622, 1, 0, 0.503931,-99) , 
7, 0.999964, 0, 0, 0.5076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469131,-99) , 
9, 2.22529, 1, 0, 0.506237,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0144442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499813,-99) , 
2, 0.132243, 0, 0, 0.503151,-99) , 
2, -0.186054, 1, 0, 0.505282,-99) , 
NN(
0, 
0, 
-1, 0.441267, 0, -1, 0.471637,-99) , 
4, 0.999524, 0, 0, 0.502898,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0218707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499714,-99) , 
9, -2.42087, 1, 0, 0.511407,-99) , 
7, -0.773417, 0, 0, 0.527746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49869,-99) , 
9, -0.984512, 1, 0, 0.503194,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.465359,-99) , 
8, -3.20048, 0, 0, 0.500596,-99) , 
9, -1.43506, 1, 0, 0.505078,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0245362);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49942,-99) , 
8, -2.286, 0, 0, 0.50679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487964,-99) , 
9, -0.59434, 1, 0, 0.493251,-99) , 
7, 0.102107, 1, 0, 0.499246,-99) , 
7, 2.42845, 0, 0, 0.50097,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.013469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14631, 1, 1, 0.504182,-99) , 
NN(
0, 
0, 
-1, 0.999401, 1, -1, 0.469929,-99) , 
4, 0.99966, 0, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458829,-99) , 
4, 0.998571, 0, 0, 0.500906,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0321352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493794,-99) , 
3, 2.36971, 1, 0, 0.5361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498627,-99) , 
2, -0.00915256, 1, 0, 0.505214,-99) , 
2, -0.0829343, 1, 0, 0.50925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464198,-99) , 
2, 0.0781158, 1, 0, 0.504493,-99) , 
NN(
0, 
0, 
-1, 0.4981, 1, -1, 0.462582,-99) , 
2, -0.0715338, 0, 0, 0.492311,-99) , 
3, 4.36372, 1, 0, 0.506045,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0172443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474966,-99) , 
8, -3.94061, 0, 0, 0.502818,-99) , 
0, 0.48952, 1, 0, 0.504329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455501,-99) , 
4, 0.998572, 0, 0, 0.502962,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0222318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483358,-99) , 
9, -2.20531, 1, 0, 0.507205,-99) , 
7, -0.740293, 0, 0, 0.526657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474103,-99) , 
7, 2.14284, 1, 0, 0.501542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465648,-99) , 
8, 0.269666, 1, 0, 0.500035,-99) , 
9, -1.54225, 1, 0, 0.503872,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0165764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475507,-99) , 
4, 0.999728, 0, 0, 0.503236,-99) , 
4, 0.999048, 1, 0, 0.504777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469358,-99) , 
7, 2.42851, 1, 0, 0.503749,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0488675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48177,-99) , 
8, -3.89582, 0, 0, 0.50646,-99) , 
7, -0.593766, 0, 0, 0.520346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479144,-99) , 
6, 0.260026, 0, 0, 0.502809,-99) , 
NN(
0, 
0, 
-1, -0.0659424, 0, -1, 0.485319,-99) , 
6, -950.08, 0, 0, 0.494779,-99) , 
9, -1.385, 1, 0, 0.499287,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0293288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0362429, 1, 1, 0.55101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48101,-99) , 
9, 0.86597, 0, 0, 0.504072,-99) , 
8, -1.83455, 1, 0, 0.517113,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0222579, 0, 1, 0.51352,-99) , 
NN(
0, 
0, 
-1, -0.0756546, 0, -1, 0.493987,-99) , 
9, -0.885698, 1, 0, 0.502549,-99) , 
7, 1.00004, 0, 0, 0.506552,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0197144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.84057, 1, 1, 0.512103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494641,-99) , 
4, 0.999048, 1, 0, 0.496347,-99) , 
7, 1.00076, 0, 0, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.459199,-99) , 
1, 0.00921398, 1, 0, 0.498569,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0324814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474254,-99) , 
3, 3.46559, 1, 0, 0.515801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489799,-99) , 
2, -0.09443, 1, 0, 0.494146,-99) , 
2, 0.0529769, 0, 0, 0.497908,-99) , 
2, 0.215908, 0, 0, 0.49959,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0305313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09894, 0, 1, 0.56928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476051,-99) , 
7, -0.976351, 0, 0, 0.500412,-99) , 
6, -951.286, 1, 0, 0.525405,-99) , 
NN(
NN(
0, 
0, 
-1, -1.04272, 1, 1, 0.507212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407153,-99) , 
7, -0.252361, 0, 0, 0.46081,-99) , 
8, -3.23551, 0, 0, 0.504056,-99) , 
9, -1.48573, 1, 0, 0.507349,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0378979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.60263, 1, 1, 0.560959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471243,-99) , 
6, -951.286, 0, 0, 0.496188,-99) , 
7, -0.144142, 0, 0, 0.536757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495415,-99) , 
8, -3.16541, 1, 0, 0.500316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48003,-99) , 
2, 0.0737417, 0, 0, 0.4857,-99) , 
0, 0.498091, 1, 0, 0.492982,-99) , 
1, 0.0040614, 0, 0, 0.500293,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0206906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28975, 0, 1, 0.506684,-99) , 
NN(
0, 
0, 
-1, 0.00980361, 0, -1, 0.471558,-99) , 
1, 0.00855322, 1, 0, 0.504612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515579,-99) , 
NN(
0, 
0, 
-1, 1.51131, 0, -1, 0.454527,-99) , 
8, -1.20238, 1, 0, 0.476912,-99) , 
7, 1.85757, 1, 0, 0.502132,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0233598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136034, 1, 1, 0.510166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456086,-99) , 
4, 0.999728, 0, 0, 0.508557,-99) , 
NN(
0, 
0, 
-1, 0.0706988, 1, -1, 0.481743,-99) , 
4, 0.999524, 0, 0, 0.506634,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.00836942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458732,-99) , 
4, 0.998572, 0, 0, 0.49891,-99) , 
9, -2.2013, 1, 0, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449516,-99) , 
7, -1.85697, 0, 0, 0.499392,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0123854);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460404,-99) , 
4, 0.999388, 0, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464554,-99) , 
4, 0.998571, 0, 0, 0.500355,-99) , 
8, -4.04814, 1, 0, 0.501988,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0194451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466682,-99) , 
7, -1.57099, 0, 0, 0.504168,-99) , 
NN(
0, 
0, 
-1, 0.43085, 1, -1, 0.474499,-99) , 
0, 0.491062, 0, 0, 0.501828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469247,-99) , 
0, 0.505709, 1, 0, 0.500237,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0191891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497545,-99) , 
7, 2.14278, 0, 0, 0.499227,-99) , 
4, 0.999048, 1, 0, 0.500505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485202,-99) , 
0, 0.489248, 1, 0, 0.488683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451948,-99) , 
7, -1.28398, 0, 0, 0.485652,-99) , 
0, 0.496186, 0, 0, 0.49542,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0239964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486071,-99) , 
9, -1.77649, 1, 0, 0.526972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492455,-99) , 
7, 1.16333, 0, 0, 0.496723,-99) , 
8, -3.56041, 1, 0, 0.499154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456615,-99) , 
9, -2.01353, 0, 0, 0.477767,-99) , 
7, -1.28561, 0, 0, 0.497544,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0317472);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475723,-99) , 
7, 1.28625, 1, 0, 0.506295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49126,-99) , 
7, 1.39737, 0, 0, 0.494255,-99) , 
8, -1.63988, 0, 0, 0.497264,-99) , 
8, -0.105119, 0, 0, 0.498517,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0195902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.951472, 0, 1, 0.504745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459634,-99) , 
8, -0.953896, 1, 0, 0.48647,-99) , 
9, 1.01682, 1, 0, 0.502812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471015,-99) , 
9, 1.91827, 1, 0, 0.501276,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0119292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499047,-99) , 
3, 0.386526, 1, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0.162648, 0, -1, 0.463854,-99) , 
3, 5.98201, 1, 0, 0.498998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464793,-99) , 
3, 8.33212, 1, 0, 0.497962,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0271869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49152,-99) , 
7, -0.94901, 0, 0, 0.552255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447675,-99) , 
8, -3.33566, 0, 0, 0.500326,-99) , 
9, -1.69226, 1, 0, 0.503652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449601,-99) , 
9, -2.38373, 1, 0, 0.480226,-99) , 
7, -1.2856, 0, 0, 0.501883,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0135785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497606,-99) , 
2, 0.224224, 0, 0, 0.499384,-99) , 
4, 0.999048, 1, 0, 0.501174,-99) , 
0, 0.48952, 1, 0, 0.502522,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0223378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482314,-99) , 
9, -2.50577, 1, 0, 0.490687,-99) , 
7, -0.595867, 0, 0, 0.512048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528237,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495246,-99) , 
0, 0.505709, 0, 0, 0.496877,-99) , 
9, -1.385, 1, 0, 0.49961,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0244422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.517472, 1, 1, 0.526524,-99) , 
NN(
0, 
0, 
-1, -1.9213, 1, -1, 0.496516,-99) , 
8, -1.68976, 0, 0, 0.502394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529233,-99) , 
NN(
0, 
0, 
-1, 1.13223, 0, -1, 0.470654,-99) , 
9, 0.428885, 1, 0, 0.484631,-99) , 
7, 1.28572, 1, 0, 0.498877,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.015639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475177,-99) , 
8, -3.98736, 0, 0, 0.503924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459092,-99) , 
4, 0.998571, 0, 0, 0.502644,-99) , 
9, -2.50543, 1, 0, 0.503818,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0103467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498657,-99) , 
8, 0.01268, 0, 0, 0.500381,-99) , 
9, -2.26366, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460876,-99) , 
7, -1.85697, 0, 0, 0.50073,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0296175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484038,-99) , 
6, -951.286, 1, 0, 0.502934,-99) , 
7, -0.569201, 0, 0, 0.517938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494005,-99) , 
7, 0.143058, 1, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, -1.15529, 0, -1, 0.460122,-99) , 
8, -3.17074, 0, 0, 0.497382,-99) , 
9, -1.35811, 1, 0, 0.501207,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0365691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464744,-99) , 
9, -1.18165, 1, 0, 0.505817,-99) , 
7, 0.0134006, 0, 0, 0.514471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494893,-99) , 
9, -0.421397, 1, 0, 0.501722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430001,-99) , 
8, -2.89325, 1, 0, 0.470088,-99) , 
8, -2.69905, 0, 0, 0.498785,-99) , 
9, -0.843761, 1, 0, 0.503967,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0285197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.99883, 1, 1, 0.510656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479025,-99) , 
7, -1.4761, 0, 0, 0.508787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455526,-99) , 
9, 1.66179, 0, 0, 0.475146,-99) , 
8, -1.45779, 1, 0, 0.489637,-99) , 
7, 1.57133, 1, 0, 0.506161,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0309866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.91112, 0, 1, 0.514075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485613,-99) , 
7, -0.387793, 0, 0, 0.500824,-99) , 
0, 0.495234, 0, 0, 0.510482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526458,-99) , 
NN(
0, 
0, 
-1, 1.30842, 0, -1, 0.466719,-99) , 
8, -1.45779, 1, 0, 0.484883,-99) , 
7, 1.57135, 1, 0, 0.50701,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0201553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467735,-99) , 
6, -951.287, 0, 0, 0.495641,-99) , 
8, -1.15651, 1, 0, 0.524714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496205,-99) , 
8, -1.96423, 0, 0, 0.500429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474585,-99) , 
8, -0.110042, 1, 0, 0.499161,-99) , 
7, 1.85713, 0, 0, 0.501506,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0223108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496574,-99) , 
3, 2.99366, 1, 0, 0.539251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493111,-99) , 
2, -0.0239962, 1, 0, 0.498837,-99) , 
2, 0.131371, 0, 0, 0.50097,-99) , 
2, 0.212969, 0, 0, 0.502674,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0175147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23758, 0, 1, 0.546375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491697,-99) , 
8, -0.746021, 1, 0, 0.528744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535885,-99) , 
NN(
0, 
0, 
-1, 1.74568, 1, -1, 0.495113,-99) , 
4, 0.999048, 1, 0, 0.496831,-99) , 
7, 1.8572, 0, 0, 0.499762,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0551492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.431037, 0, 1, 0.52706,-99) , 
NN(
0, 
0, 
-1, 0.719846, 1, -1, 0.380833,-99) , 
6, -1.39891, 0, 0, 0.508569,-99) , 
NN(
NN(
0, 
0, 
-1, -1.87143, 0, 1, 0.528363,-99) , 
NN(
0, 
0, 
-1, -0.143001, 0, -1, 0.489329,-99) , 
9, -1.32726, 1, 0, 0.495722,-99) , 
6, -950.08, 0, 0, 0.502865,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.021604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490869,-99) , 
0, 0.5019, 1, 0, 0.503661,-99) , 
7, 2.34681, 0, 0, 0.505159,-99) , 
7, -1.5713, 1, 0, 0.507266,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0274459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499811,-99) , 
9, -0.531292, 1, 0, 0.50613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470722,-99) , 
7, 0.278983, 0, 0, 0.50293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487052,-99) , 
8, -2.49999, 0, 0, 0.497091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450497,-99) , 
8, -1.23388, 1, 0, 0.492982,-99) , 
7, 0.142923, 0, 0, 0.498545,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0262886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503261, 1, 1, 0.540435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49736,-99) , 
0, 0.503623, 0, 0, 0.507219,-99) , 
2, -0.0729802, 1, 0, 0.513179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497066,-99) , 
1, 0.00544174, 0, 0, 0.501369,-99) , 
NN(
0, 
0, 
-1, 0.142624, 0, -1, 0.463432,-99) , 
2, -0.0715338, 0, 0, 0.495019,-99) , 
0, 0.499995, 0, 0, 0.501268,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0222199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482465,-99) , 
7, -1.3034, 0, 0, 0.531426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465377,-99) , 
2, -0.213672, 0, 0, 0.503408,-99) , 
NN(
0, 
0, 
-1, -0.281971, 1, -1, 0.470067,-99) , 
0, 0.490472, 0, 0, 0.501428,-99) , 
9, -1.97318, 1, 0, 0.503573,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0415725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
8, -0.928723, 1, 0, 0.53728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
8, -2.16059, 1, 0, 0.509632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39167,-99) , 
6, -1.32153, 0, 0, 0.493791,-99) , 
6, -951.286, 1, 0, 0.500728,-99) , 
7, 2.14282, 0, 0, 0.502807,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0584401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491837,-99) , 
2, 0.0729315, 1, 0, 0.515117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462936,-99) , 
0, 0.496181, 0, 0, 0.491856,-99) , 
2, -0.0762289, 0, 0, 0.51131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481194,-99) , 
7, 0.429781, 0, 0, 0.505833,-99) , 
NN(
0, 
0, 
-1, 0.435388, 1, -1, 0.399115,-99) , 
6, -1.29221, 0, 0, 0.490394,-99) , 
6, -9.14007, 1, 0, 0.499561,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0169571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.92118, 1, 1, 0.543624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466909,-99) , 
8, -3.40409, 0, 0, 0.500193,-99) , 
9, -1.72561, 1, 0, 0.502772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446534,-99) , 
6, -951.286, 0, 0, 0.480603,-99) , 
7, -1.28486, 0, 0, 0.501114,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0196811);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499047, 0, 1, 0.530385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489025,-99) , 
8, -3.90654, 0, 0, 0.524299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496803,-99) , 
9, -1.77659, 1, 0, 0.498477,-99) , 
7, -0.999645, 1, 0, 0.501651,-99) , 
8, -0.317336, 0, 0, 0.503744,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0249852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477468,-99) , 
3, 2.95357, 1, 0, 0.518122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
7, -0.999877, 1, 0, 0.499866,-99) , 
2, 0.0492764, 0, 0, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462182,-99) , 
2, 0.212365, 1, 0, 0.501352,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0182128);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491489,-99) , 
0, 0.502444, 0, 0, 0.494042,-99) , 
9, -2.44454, 1, 0, 0.494988,-99) , 
0, 0.48952, 1, 0, 0.496112,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0542328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495606,-99) , 
8, -1.56484, 1, 0, 0.543427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438191,-99) , 
7, -0.138724, 0, 0, 0.482277,-99) , 
3, 4.05198, 1, 0, 0.52085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492131,-99) , 
7, 0.42868, 0, 0, 0.50889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460657,-99) , 
2, 0.0121724, 0, 0, 0.487478,-99) , 
2, -0.00911188, 1, 0, 0.497843,-99) , 
2, 0.0653823, 0, 0, 0.502065,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0154872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494006,-99) , 
9, -2.43627, 1, 0, 0.522284,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14282, 0, 1, 0.506215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481044,-99) , 
4, 0.998571, 0, 0, 0.505485,-99) , 
8, -4.02976, 1, 0, 0.506378,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0112772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481466,-99) , 
8, -3.34158, 0, 0, 0.497578,-99) , 
8, -4.37927, 1, 0, 0.498892,-99) , 
8, -0.0208373, 0, 0, 0.500377,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0211336);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490976,-99) , 
4, 0.999932, 0, 0, 0.528557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
1, 0.00579008, 0, 0, 0.503405,-99) , 
0, 0.493329, 1, 0, 0.507453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437474,-99) , 
4, 0.998571, 0, 0, 0.505576,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0185763);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.34537, 0, 1, 0.537502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490196,-99) , 
9, -1.03875, 0, 0, 0.502124,-99) , 
7, -1.28399, 1, 0, 0.503162,-99) , 
9, -2.00485, 1, 0, 0.505509,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.027249);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.46933, 1, 1, 0.540087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48747,-99) , 
2, 0.0749896, 1, 0, 0.514517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494933,-99) , 
9, -0.949562, 1, 0, 0.500053,-99) , 
7, -0.306107, 1, 0, 0.504509,-99) , 
7, 2.1428, 0, 0, 0.506558,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0118595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.98829, 1, 1, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45173,-99) , 
4, 0.999728, 0, 0, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0.0729151, 1, -1, 0.474233,-99) , 
4, 0.999524, 0, 0, 0.499269,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0213347);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.45641, 0, 1, 0.533928,-99) , 
NN(
NN(
0, 
0, 
-1, 1.50947, 1, 1, 0.517688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494151,-99) , 
9, 1.04588, 0, 0, 0.496601,-99) , 
8, -0.792761, 0, 0, 0.499407,-99) , 
9, -2.02636, 1, 0, 0.501654,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0237246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498087, 0, 1, 0.549232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486872,-99) , 
7, 1.16333, 1, 0, 0.503402,-99) , 
7, 2.14286, 0, 0, 0.506057,-99) , 
NN(
0, 
0, 
-1, -0.345105, 1, -1, 0.471241,-99) , 
4, 0.999524, 0, 0, 0.503659,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0144306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497774,-99) , 
0, 0.495551, 1, 0, 0.501709,-99) , 
7, 2.42844, 0, 0, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461881,-99) , 
0, 0.48952, 0, 0, 0.50157,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0134442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459054,-99) , 
7, -1.83046, 0, 0, 0.501841,-99) , 
NN(
0, 
0, 
-1, 2.13297, 0, -1, 0.471946,-99) , 
7, 1.91141, 1, 0, 0.500241,-99) , 
7, 2.42843, 0, 0, 0.501736,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0214949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498105,-99) , 
2, -0.0185272, 1, 0, 0.504964,-99) , 
NN(
0, 
0, 
-1, 0.999534, 1, -1, 0.459848,-99) , 
4, 0.999728, 0, 0, 0.50219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461206,-99) , 
4, 0.999048, 0, 0, 0.500561,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0205122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49202, 0, 1, 0.534141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490179,-99) , 
0, 0.495778, 0, 0, 0.500588,-99) , 
9, -2.06689, 1, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0.506253, 1, -1, 0.472298,-99) , 
0, 0.504757, 1, 0, 0.500199,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0337376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142882, 0, 1, 0.522484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488743,-99) , 
6, 0.887071, 0, 0, 0.500862,-99) , 
6, -950.08, 1, 0, 0.510626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490813,-99) , 
0, 0.501084, 1, 0, 0.505138,-99) , 
NN(
0, 
0, 
-1, -0.823903, 0, -1, 0.483227,-99) , 
1, -0.00101806, 1, 0, 0.491524,-99) , 
0, 0.496186, 1, 0, 0.497936,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0303177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213618, 1, 1, 0.510831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475468,-99) , 
8, -3.84442, 0, 0, 0.503648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479454,-99) , 
9, -1.44863, 1, 0, 0.485932,-99) , 
7, -0.60533, 1, 0, 0.494129,-99) , 
7, 0.142938, 0, 0, 0.503401,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0201268);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.84172, 1, 1, 0.509298,-99) , 
NN(
0, 
0, 
-1, 0.496232, 1, -1, 0.488869,-99) , 
0, 0.497139, 0, 0, 0.500786,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0164444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47933,-99) , 
0, 0.499039, 1, 0, 0.530526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482372,-99) , 
6, -951.286, 0, 0, 0.522907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462887,-99) , 
0, 0.505709, 1, 0, 0.499104,-99) , 
7, -0.998632, 1, 0, 0.501016,-99) , 
8, -3.97577, 1, 0, 0.502687,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0217961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48858,-99) , 
8, -2.44836, 0, 0, 0.497781,-99) , 
8, -4.15208, 1, 0, 0.499805,-99) , 
8, -0.176774, 0, 0, 0.501702,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.026986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.12838, 0, 1, 0.509358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465875,-99) , 
8, -0.730777, 1, 0, 0.506643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490055,-99) , 
3, 3.65758, 1, 0, 0.519428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486729,-99) , 
8, -0.234894, 0, 0, 0.490299,-99) , 
2, 0.0712453, 0, 0, 0.495379,-99) , 
7, 0.42857, 1, 0, 0.501462,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.023432);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436994,-99) , 
4, 0.999728, 0, 0, 0.509453,-99) , 
NN(
0, 
0, 
-1, -0.0105824, 0, -1, 0.493183,-99) , 
2, 0.057156, 0, 0, 0.49635,-99) , 
4, 0.998571, 1, 0, 0.497815,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0139209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498549,-99) , 
8, -0.697467, 0, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.466341,-99) , 
1, 0.00855322, 1, 0, 0.498631,-99) , 
NN(
0, 
0, 
-1, 2.46932, 1, -1, 0.462309,-99) , 
7, 2.14273, 1, 0, 0.496691,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0383661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487683,-99) , 
8, -0.876072, 1, 0, 0.507282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466242,-99) , 
2, -0.0104571, 1, 0, 0.492307,-99) , 
2, 0.00379028, 0, 0, 0.500493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485408,-99) , 
2, -0.203795, 0, 0, 0.511237,-99) , 
NN(
0, 
0, 
-1, 0.499049, 0, -1, 0.455838,-99) , 
2, -0.139011, 1, 0, 0.484243,-99) , 
2, -0.0710108, 0, 0, 0.497662,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0144768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496395,-99) , 
7, 0.432767, 0, 0, 0.518405,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.496298,-99) , 
0, 0.492377, 1, 0, 0.498927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445706,-99) , 
4, 0.998571, 0, 0, 0.497484,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0135845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495215,-99) , 
7, 0.619103, 0, 0, 0.498217,-99) , 
7, 2.42842, 0, 0, 0.499255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433292,-99) , 
4, 0.998571, 0, 0, 0.497477,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0282246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49504,-99) , 
8, -3.70119, 1, 0, 0.504222,-99) , 
7, 0.0528078, 0, 0, 0.510491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493208,-99) , 
9, -0.376411, 1, 0, 0.4991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448096,-99) , 
9, -0.590106, 0, 0, 0.476525,-99) , 
8, -2.65116, 0, 0, 0.496932,-99) , 
9, -0.796833, 1, 0, 0.501656,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0149679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0709319, 1, 1, 0.505438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471099,-99) , 
6, -950.08, 0, 0, 0.488398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454144,-99) , 
2, -0.0768329, 0, 0, 0.480459,-99) , 
0, 0.492377, 0, 0, 0.502442,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0140896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481205,-99) , 
0, 0.50453, 1, 0, 0.501096,-99) , 
NN(
0, 
0, 
-1, 0.113284, 1, -1, 0.481753,-99) , 
0, 0.491424, 0, 0, 0.499435,-99) , 
8, -4.1223, 1, 0, 0.500978,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0305617);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490983,-99) , 
3, 4.18189, 1, 0, 0.513572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488686,-99) , 
2, -0.0366663, 1, 0, 0.49637,-99) , 
2, 0.0331773, 0, 0, 0.501138,-99) , 
2, -0.211254, 1, 0, 0.502922,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0234803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498283,-99) , 
7, -0.143061, 0, 0, 0.508029,-99) , 
9, -0.590711, 0, 0, 0.511547,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00464269, 1, 1, 0.524606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4874,-99) , 
8, -1.69714, 0, 0, 0.495503,-99) , 
7, -0.142627, 1, 0, 0.500159,-99) , 
8, -2.63065, 1, 0, 0.50447,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0152259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.18129, 1, 1, 0.535012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471433,-99) , 
7, -1.76177, 0, 0, 0.519514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498208,-99) , 
2, 0.214084, 0, 0, 0.499532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467515,-99) , 
7, -0.80939, 0, 0, 0.498116,-99) , 
7, -0.999874, 1, 0, 0.500579,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0424671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46504,-99) , 
7, -0.71426, 0, 0, 0.505547,-99) , 
9, -1.95166, 1, 0, 0.508663,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57215, 0, 1, 0.513164,-99) , 
NN(
0, 
0, 
-1, -1.81991, 0, -1, 0.440923,-99) , 
6, -0.935122, 0, 0, 0.496476,-99) , 
6, -9.14007, 1, 0, 0.501832,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0257852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497543,-99) , 
8, -2.1339, 0, 0, 0.501889,-99) , 
7, 0.792639, 0, 0, 0.505588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483973,-99) , 
4, 0.999977, 1, 0, 0.49131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453614,-99) , 
4, 0.999524, 0, 0, 0.489206,-99) , 
9, -0.171012, 1, 0, 0.498271,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0401173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484764,-99) , 
4, 0.999977, 0, 0, 0.50735,-99) , 
4, 0.999524, 1, 0, 0.509695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46631,-99) , 
3, 3.64897, 1, 0, 0.498167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446111,-99) , 
4, 0.999524, 0, 0, 0.489928,-99) , 
2, 0.0712453, 1, 0, 0.506308,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0254594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489226,-99) , 
0, 0.500947, 1, 0, 0.5056,-99) , 
7, 0.621829, 0, 0, 0.508762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485426,-99) , 
7, 1.1408, 0, 0, 0.493191,-99) , 
7, 2.42997, 0, 0, 0.495727,-99) , 
9, -0.352671, 1, 0, 0.502174,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0140196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.503774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43447,-99) , 
2, 0.0749987, 1, 0, 0.480099,-99) , 
4, 0.999864, 0, 0, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458163,-99) , 
4, 0.998571, 0, 0, 0.499708,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0289148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489354,-99) , 
7, -0.210528, 0, 0, 0.50724,-99) , 
NN(
0, 
0, 
-1, 0.455827, 0, -1, 0.490253,-99) , 
9, -1.13439, 1, 0, 0.494178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447223,-99) , 
7, -1.85699, 0, 0, 0.493002,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.036838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492589,-99) , 
9, -0.265735, 1, 0, 0.535239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474621,-99) , 
7, 0.10154, 1, 0, 0.49968,-99) , 
7, 0.618465, 0, 0, 0.506215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470415,-99) , 
2, -0.0755314, 0, 0, 0.502562,-99) , 
NN(
0, 
0, 
-1, -0.0688476, 0, -1, 0.474032,-99) , 
0, 0.499043, 1, 0, 0.490563,-99) , 
8, -2.07046, 1, 0, 0.499546,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.020987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
7, -1.31793, 0, 0, 0.526592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487228,-99) , 
0, 0.506254, 1, 0, 0.510509,-99) , 
NN(
0, 
0, 
-1, 0.499859, 1, -1, 0.493074,-99) , 
0, 0.5019, 0, 0, 0.496729,-99) , 
9, -1.82021, 1, 0, 0.499508,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0173244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479214,-99) , 
0, 0.491424, 0, 0, 0.503207,-99) , 
8, -4.29038, 1, 0, 0.5043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465638,-99) , 
8, 0.325731, 1, 0, 0.502978,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0315598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486316,-99) , 
9, -0.0696605, 1, 0, 0.545139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491951,-99) , 
8, -4.19435, 1, 0, 0.49601,-99) , 
7, 0.880253, 0, 0, 0.501931,-99) , 
NN(
0, 
0, 
-1, -0.0710706, 0, -1, 0.485766,-99) , 
8, -2.00879, 1, 0, 0.495334,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0326452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27803, 1, 1, 0.529289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4902,-99) , 
6, -951.286, 1, 0, 0.500322,-99) , 
8, -2.91068, 1, 0, 0.504751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474512,-99) , 
8, -1.87985, 1, 0, 0.50914,-99) , 
NN(
0, 
0, 
-1, -1.71526, 1, -1, 0.479267,-99) , 
9, -1.2692, 0, 0, 0.488599,-99) , 
7, -0.428387, 0, 0, 0.50063,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0090253);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499563,-99) , 
2, 0.178165, 0, 0, 0.50091,-99) , 
2, -0.132799, 1, 0, 0.502452,-99) , 
2, -0.214433, 1, 0, 0.50378,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0297679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.420686, 0, 1, 0.543545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499006,-99) , 
7, 0.905439, 0, 0, 0.504584,-99) , 
9, 0.214234, 0, 0, 0.508686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488446,-99) , 
9, 0.456453, 1, 0, 0.507946,-99) , 
NN(
0, 
0, 
-1, 1.06856, 0, -1, 0.470927,-99) , 
7, 1.28765, 1, 0, 0.4903,-99) , 
8, -1.57355, 1, 0, 0.503616,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0282789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494782,-99) , 
9, -1.15902, 1, 0, 0.554435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46316,-99) , 
9, -1.49732, 1, 0, 0.505223,-99) , 
7, -0.358713, 0, 0, 0.518753,-99) , 
NN(
NN(
0, 
0, 
-1, -1.49997, 0, 1, 0.518176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465356,-99) , 
0, 0.494554, 0, 0, 0.499494,-99) , 
0, 0.492377, 1, 0, 0.50186,-99) , 
8, -3.08096, 1, 0, 0.505822,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.024045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.67418, 1, 1, 0.514985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496251,-99) , 
0, 0.492379, 1, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454677,-99) , 
4, 0.999524, 0, 0, 0.497515,-99) , 
9, -0.252461, 1, 0, 0.506655,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00862868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536093,-99) , 
NN(
0, 
0, 
-1, -3.99922, 0, -1, 0.497664,-99) , 
8, -4.40873, 1, 0, 0.498699,-99) , 
8, -0.108942, 0, 0, 0.500043,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0278154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487983,-99) , 
4, 0.999864, 0, 0, 0.516048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491146,-99) , 
0, 0.49995, 0, 0, 0.501295,-99) , 
0, 0.495234, 1, 0, 0.505225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464462,-99) , 
4, 0.999048, 0, 0, 0.50356,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0341344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486842,-99) , 
9, -1.00812, 1, 0, 0.539177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463589,-99) , 
8, -2.67158, 0, 0, 0.506195,-99) , 
9, -0.787233, 1, 0, 0.510598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496443,-99) , 
9, -1.11484, 0, 0, 0.50782,-99) , 
NN(
0, 
0, 
-1, 0.148442, 1, -1, 0.469563,-99) , 
2, 0.0810228, 1, 0, 0.501581,-99) , 
7, -0.142776, 0, 0, 0.507504,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0203087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470418,-99) , 
7, 2.45573, 1, 0, 0.50121,-99) , 
8, -1.22881, 1, 0, 0.527945,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470257,-99) , 
9, 1.69896, 1, 0, 0.503564,-99) , 
7, 1.85711, 0, 0, 0.505869,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0177969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479464,-99) , 
9, -1.71352, 1, 0, 0.531824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465512,-99) , 
8, -3.23381, 0, 0, 0.497613,-99) , 
9, -1.52928, 1, 0, 0.499948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474817,-99) , 
9, -2.35699, 1, 0, 0.485471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442289,-99) , 
0, 0.494279, 0, 0, 0.475531,-99) , 
7, -0.999912, 0, 0, 0.497024,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0176219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47841,-99) , 
8, -0.840652, 1, 0, 0.523759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49558,-99) , 
8, -1.08626, 0, 0, 0.498043,-99) , 
7, 2.14275, 0, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46785,-99) , 
4, 0.999048, 0, 0, 0.498155,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.029498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59622, 0, 1, 0.553176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485263,-99) , 
2, 0.072319, 1, 0, 0.506963,-99) , 
7, 0.352366, 0, 0, 0.513863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492692,-99) , 
7, 2.42917, 0, 0, 0.495492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451335,-99) , 
4, 0.999524, 0, 0, 0.492966,-99) , 
9, -0.428799, 1, 0, 0.502763,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0530389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48334,-99) , 
7, 0.431112, 0, 0, 0.522252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401934,-99) , 
6, -1.44721, 0, 0, 0.482115,-99) , 
6, -0.257148, 0, 0, 0.504571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498608,-99) , 
7, 0.651913, 0, 0, 0.504345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475263,-99) , 
8, -0.643327, 0, 0, 0.484512,-99) , 
9, -0.0843309, 1, 0, 0.494956,-99) , 
6, -949.507, 0, 0, 0.500338,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0212873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484634,-99) , 
8, -0.892633, 1, 0, 0.503833,-99) , 
9, -2.22103, 1, 0, 0.505201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441839,-99) , 
7, -1.85693, 0, 0, 0.50357,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0369601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63805, 1, 1, 0.53183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491939,-99) , 
9, -1.33312, 1, 0, 0.503722,-99) , 
9, -0.3771, 0, 0, 0.509713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483309,-99) , 
9, -0.522614, 1, 0, 0.513439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484382,-99) , 
0, 0.504757, 0, 0, 0.487432,-99) , 
8, -2.27142, 1, 0, 0.493165,-99) , 
7, 0.428622, 1, 0, 0.502091,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0245509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.199684, 0, 1, 0.548229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498683,-99) , 
0, 0.493329, 1, 0, 0.502561,-99) , 
1, 0.00524329, 0, 0, 0.507472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543628,-99) , 
NN(
0, 
0, 
-1, 0.494282, 0, -1, 0.48108,-99) , 
9, 0.617587, 1, 0, 0.490216,-99) , 
8, -1.32383, 1, 0, 0.503754,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0497164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496184,-99) , 
9, 0.943601, 1, 0, 0.518863,-99) , 
NN(
0, 
0, 
-1, -1.89986, 1, -1, 0.47781,-99) , 
0, 0.5019, 1, 0, 0.509843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491272,-99) , 
7, 0.430294, 0, 0, 0.50661,-99) , 
NN(
0, 
0, 
-1, 0.430913, 1, -1, 0.393967,-99) , 
6, -1.34855, 0, 0, 0.491919,-99) , 
6, -9.14007, 1, 0, 0.499862,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0102952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.452741, 1, 1, 0.503116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451661,-99) , 
3, 7.01531, 1, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467424,-99) , 
3, 8.63683, 1, 0, 0.500747,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0227689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.100514, 0, 1, 0.517917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48374,-99) , 
2, 0.0734063, 1, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 0.440862, 0, -1, 0.477714,-99) , 
2, -0.0757058, 0, 0, 0.494849,-99) , 
9, -0.763679, 1, 0, 0.50313,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0185257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.42489, 0, 1, 0.533909,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.519299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484805,-99) , 
0, 0.496188, 0, 0, 0.495902,-99) , 
9, 1.37637, 0, 0, 0.498466,-99) , 
9, -2.00485, 1, 0, 0.500808,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0264806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485661,-99) , 
8, -3.96054, 0, 0, 0.515382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491346,-99) , 
3, 1.50724, 1, 0, 0.501103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45078,-99) , 
2, 0.0711955, 1, 0, 0.486286,-99) , 
3, 4.27831, 1, 0, 0.498208,-99) , 
9, -1.88073, 1, 0, 0.499629,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0212896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.108933, 1, 1, 0.514916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468259,-99) , 
4, 0.999524, 0, 0, 0.510823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49393,-99) , 
9, 1.06244, 0, 0, 0.496479,-99) , 
4, 0.999048, 1, 0, 0.497785,-99) , 
0, 0.496188, 1, 0, 0.502188,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0373445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481842,-99) , 
7, -0.141906, 0, 0, 0.499636,-99) , 
8, -3.82747, 1, 0, 0.503086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476396,-99) , 
9, -1.43803, 0, 0, 0.50299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338002,-99) , 
7, 0.469411, 1, 0, 0.416323,-99) , 
6, -1.34855, 0, 0, 0.491657,-99) , 
6, -9.14007, 1, 0, 0.496662,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.022979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489386, 1, 1, 0.533142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496865,-99) , 
9, -0.60548, 1, 0, 0.525917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492476,-99) , 
2, -0.195881, 1, 0, 0.494244,-99) , 
4, 0.999524, 1, 0, 0.496491,-99) , 
0, 0.490475, 1, 0, 0.498593,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0277696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.70143, 0, 1, 0.50598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460976,-99) , 
9, 0.99023, 1, 0, 0.50312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474181,-99) , 
9, -0.244552, 1, 0, 0.510848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475458,-99) , 
9, 0.125549, 1, 0, 0.480265,-99) , 
8, -2.19643, 1, 0, 0.485593,-99) , 
7, 0.714322, 1, 0, 0.496824,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0295668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491519,-99) , 
7, -0.998638, 1, 0, 0.495488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43381,-99) , 
9, -2.3474, 1, 0, 0.469541,-99) , 
8, -3.9727, 0, 0, 0.493871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476444,-99) , 
7, 0.637424, 0, 0, 0.486236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462589,-99) , 
9, 0.504219, 1, 0, 0.480064,-99) , 
0, 0.49333, 0, 0, 0.491653,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0238477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496518,-99) , 
9, -1.49354, 1, 0, 0.51639,-99) , 
7, 0.0509207, 0, 0, 0.522572,-99) , 
NN(
NN(
0, 
0, 
-1, 0.132476, 0, 1, 0.502646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451295,-99) , 
2, 0.214156, 1, 0, 0.50024,-99) , 
9, -0.81149, 1, 0, 0.507934,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0750749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465372,-99) , 
5, 0.00182256, 0, 0, 0.507149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43011,-99) , 
1, 0.0107092, 1, 0, 0.504021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426037,-99) , 
1, -0.012758, 0, 0, 0.501889,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0257161);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.268023, 0, 1, 0.509819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48925,-99) , 
7, 0.429577, 1, 0, 0.497175,-99) , 
NN(
0, 
0, 
-1, 0.740521, 0, -1, 0.471461,-99) , 
0, 0.494282, 0, 0, 0.491665,-99) , 
8, -2.23852, 1, 0, 0.501,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0158256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0760472, 0, 1, 0.517966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496322,-99) , 
9, -2.17838, 1, 0, 0.497525,-99) , 
0, 0.503804, 0, 0, 0.499973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427463,-99) , 
7, -1.85468, 0, 0, 0.498143,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0127454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.56041, 1, 1, 0.505081,-99) , 
NN(
0, 
0, 
-1, 0.499997, 1, -1, 0.477302,-99) , 
7, -1.28538, 0, 0, 0.503044,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.025089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64885, 1, 1, 0.533674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488438,-99) , 
8, -2.00374, 0, 0, 0.49632,-99) , 
8, -3.40458, 1, 0, 0.499611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511985,-99) , 
NN(
0, 
0, 
-1, -2.31364, 1, -1, 0.463923,-99) , 
9, -1.66415, 0, 0, 0.479743,-99) , 
7, -0.999905, 0, 0, 0.497218,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0253586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493662,-99) , 
8, -3.00044, 1, 0, 0.506504,-99) , 
8, -4.3292, 1, 0, 0.510579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487768,-99) , 
7, -0.156324, 1, 0, 0.490642,-99) , 
7, 2.42854, 0, 0, 0.492396,-99) , 
8, -2.68778, 1, 0, 0.498855,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0213756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494978,-99) , 
0, 0.499354, 0, 0, 0.526262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45885,-99) , 
0, 0.500228, 0, 0, 0.499272,-99) , 
0, 0.499859, 1, 0, 0.503448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49023,-99) , 
2, 0.0702233, 0, 0, 0.492979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456289,-99) , 
1, 0.00855322, 1, 0, 0.490828,-99) , 
0, 0.499043, 0, 0, 0.496157,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0263785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477977,-99) , 
3, 4.1686, 1, 0, 0.515017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497474,-99) , 
4, 0.999524, 1, 0, 0.49958,-99) , 
2, -0.0688197, 1, 0, 0.502267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466475,-99) , 
6, -0.143045, 1, 0, 0.498833,-99) , 
NN(
0, 
0, 
-1, -3.55022, 1, -1, 0.443906,-99) , 
6, -951.286, 0, 0, 0.473166,-99) , 
7, -0.999874, 0, 0, 0.498836,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0211721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.991175, 1, 1, 0.50676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470297,-99) , 
0, 0.505709, 1, 0, 0.505067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428555,-99) , 
9, -2.19442, 1, 0, 0.469871,-99) , 
9, -1.69229, 0, 0, 0.487953,-99) , 
7, -0.999636, 0, 0, 0.503008,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0340736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490795,-99) , 
2, -0.0612816, 1, 0, 0.497777,-99) , 
7, 0.0509364, 0, 0, 0.505686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48548,-99) , 
8, -1.81618, 1, 0, 0.494524,-99) , 
NN(
0, 
0, 
-1, -0.486812, 1, -1, 0.473731,-99) , 
9, -0.385288, 0, 0, 0.490071,-99) , 
9, -0.81149, 1, 0, 0.495465,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0247464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493601, 0, 1, 0.511787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480607,-99) , 
7, 0.456339, 1, 0, 0.491689,-99) , 
0, 0.498091, 1, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416175,-99) , 
7, -1.85611, 0, 0, 0.499497,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0272834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498393,-99) , 
8, -1.9283, 1, 0, 0.504922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486423,-99) , 
0, 0.505709, 0, 0, 0.488204,-99) , 
7, 1.00012, 0, 0, 0.492686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456258,-99) , 
4, 0.999048, 0, 0, 0.491148,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0286375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.765659, 0, 1, 0.543615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493882,-99) , 
0, 0.497138, 0, 0, 0.504337,-99) , 
8, -3.47068, 1, 0, 0.508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447438,-99) , 
9, -2.0986, 0, 0, 0.469898,-99) , 
7, -1.28554, 0, 0, 0.505161,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0216047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492658,-99) , 
8, -0.747486, 0, 0, 0.495858,-99) , 
0, 0.500131, 1, 0, 0.504191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494508,-99) , 
0, 0.491425, 1, 0, 0.505036,-99) , 
NN(
0, 
0, 
-1, -0.211304, 0, -1, 0.478143,-99) , 
9, -0.880164, 1, 0, 0.486618,-99) , 
0, 0.493329, 0, 0, 0.501266,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0198676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497167,-99) , 
0, 0.498998, 0, 0, 0.503027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448882,-99) , 
3, 4.11127, 1, 0, 0.48657,-99) , 
2, -0.0715338, 0, 0, 0.500313,-99) , 
0, 0.489521, 1, 0, 0.501672,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0423734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.614948, 1, 1, 0.5259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491351,-99) , 
1, 0.00305744, 0, 0, 0.501217,-99) , 
9, 0.978546, 0, 0, 0.505108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441534,-99) , 
3, 2.62617, 1, 0, 0.496318,-99) , 
NN(
0, 
0, 
-1, 0.143008, 0, -1, 0.455045,-99) , 
3, 4.15845, 1, 0, 0.482217,-99) , 
2, -0.0715937, 0, 0, 0.501232,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0164217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479138,-99) , 
7, -1.28427, 0, 0, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0.501446, 0, -1, 0.488609,-99) , 
0, 0.499995, 1, 0, 0.497067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464311,-99) , 
9, 2.11274, 1, 0, 0.495737,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0183171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466893,-99) , 
7, -1.2856, 0, 0, 0.50078,-99) , 
9, -2.42325, 1, 0, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377613,-99) , 
1, 0.0124237, 1, 0, 0.49851,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0229162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474605,-99) , 
9, -1.75777, 1, 0, 0.507282,-99) , 
7, -0.543888, 0, 0, 0.520693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496394,-99) , 
7, -0.423358, 1, 0, 0.498748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462279,-99) , 
4, 0.999048, 0, 0, 0.497358,-99) , 
9, -1.34866, 1, 0, 0.501694,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0448053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48681,-99) , 
4, 0.999996, 0, 0, 0.506696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470006,-99) , 
6, -951.286, 1, 0, 0.490635,-99) , 
4, 0.999909, 0, 0, 0.504361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474418,-99) , 
4, 0.999048, 0, 0, 0.503091,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0220133);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49567,-99) , 
9, 0.528567, 1, 0, 0.505307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452811,-99) , 
8, -3.97613, 0, 0, 0.49192,-99) , 
7, -0.999839, 0, 0, 0.503664,-99) , 
0, 0.48952, 1, 0, 0.504807,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0117152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448046,-99) , 
4, 0.999728, 0, 0, 0.498868,-99) , 
NN(
0, 
0, 
-1, 0.0702233, 1, -1, 0.465482,-99) , 
4, 0.999524, 0, 0, 0.496597,-99) , 
9, -2.42325, 1, 0, 0.498485,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0305565);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.057949, 0, 1, 0.515374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499343,-99) , 
9, 0.282748, 1, 0, 0.506044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479353,-99) , 
7, 1.13854, 0, 0, 0.488276,-99) , 
8, -1.70336, 0, 0, 0.496119,-99) , 
9, -0.949833, 1, 0, 0.501853,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0290775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53082, 1, 1, 0.530666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494162,-99) , 
7, 0.523905, 0, 0, 0.501352,-99) , 
8, -3.12866, 1, 0, 0.505007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468289,-99) , 
6, -951.287, 0, 0, 0.491392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365633,-99) , 
9, -2.39312, 1, 0, 0.439119,-99) , 
8, -3.938, 0, 0, 0.474784,-99) , 
7, -0.714142, 0, 0, 0.49948,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0216998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.286034, 1, 1, 0.532911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473859,-99) , 
6, -951.286, 0, 0, 0.498755,-99) , 
7, 0.14598, 0, 0, 0.518004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496129,-99) , 
8, -3.85758, 1, 0, 0.498118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4627,-99) , 
7, -1.57126, 0, 0, 0.496508,-99) , 
2, 0.0702233, 0, 0, 0.500368,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0175963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475751,-99) , 
4, 0.999864, 0, 0, 0.501129,-99) , 
2, 0.216437, 0, 0, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44804,-99) , 
4, 0.998572, 0, 0, 0.50112,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0413353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49786,-99) , 
7, -0.306039, 0, 0, 0.511503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484073,-99) , 
1, 0.00276032, 0, 0, 0.495179,-99) , 
7, 0.142923, 1, 0, 0.500661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518224,-99) , 
NN(
0, 
0, 
-1, 0.495233, 1, -1, 0.458841,-99) , 
0, 0.500947, 0, 0, 0.473983,-99) , 
8, -3.32011, 0, 0, 0.495967,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0283107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00596, 1, 1, 0.511074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47309,-99) , 
9, 1.92651, 1, 0, 0.508407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492244,-99) , 
9, -1.37482, 1, 0, 0.501012,-99) , 
NN(
0, 
0, 
-1, -1.61394, 1, -1, 0.475074,-99) , 
8, -3.38269, 0, 0, 0.490351,-99) , 
7, -0.14283, 0, 0, 0.502133,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0196338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0105894, 0, 1, 0.520937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461764,-99) , 
3, 6.18203, 1, 0, 0.497223,-99) , 
3, 1.25615, 1, 0, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45346,-99) , 
3, 8.15265, 1, 0, 0.503055,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0177564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498827,-99) , 
9, 1.46781, 0, 0, 0.513476,-99) , 
NN(
0, 
0, 
-1, -0.263893, 1, -1, 0.49328,-99) , 
7, 1.57142, 0, 0, 0.496196,-99) , 
9, -2.49107, 1, 0, 0.49743,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.031818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490987,-99) , 
8, -1.45256, 0, 0, 0.499804,-99) , 
4, 0.999524, 1, 0, 0.504122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487714,-99) , 
7, -1.10133, 0, 0, 0.510168,-99) , 
NN(
0, 
0, 
-1, -3.18274, 0, -1, 0.485416,-99) , 
9, -1.70634, 1, 0, 0.491725,-99) , 
7, 0.142913, 0, 0, 0.498678,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0267805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.532737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499311,-99) , 
2, -0.0897296, 1, 0, 0.503454,-99) , 
3, 0.736883, 1, 0, 0.508654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47961,-99) , 
9, 0.198296, 1, 0, 0.510214,-99) , 
NN(
0, 
0, 
-1, 0.429801, 0, -1, 0.453086,-99) , 
2, -0.0715937, 0, 0, 0.493737,-99) , 
3, 4.38479, 1, 0, 0.505849,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.019719);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499052,-99) , 
0, 0.49673, 1, 0, 0.503669,-99) , 
NN(
0, 
0, 
-1, 0.490064, 0, -1, 0.477893,-99) , 
0, 0.493329, 0, 0, 0.499433,-99) , 
8, -4.14985, 1, 0, 0.501738,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.045983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.76814, 0, 1, 0.521739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47291,-99) , 
7, 0.843922, 1, 0, 0.485478,-99) , 
9, 0.967681, 1, 0, 0.514307,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57149, 0, 1, 0.511746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387592,-99) , 
7, 0.434932, 1, 0, 0.45692,-99) , 
6, -1.03574, 0, 0, 0.500713,-99) , 
6, -951.286, 1, 0, 0.506724,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0209253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000643858, 1, 1, 0.51613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476343,-99) , 
8, -0.634534, 1, 0, 0.511917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539711,-99) , 
NN(
0, 
0, 
-1, 0.503079, 1, -1, 0.494144,-99) , 
0, 0.506526, 0, 0, 0.495969,-99) , 
0, 0.496186, 1, 0, 0.501304,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0221252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456613,-99) , 
4, 0.999048, 0, 0, 0.500398,-99) , 
9, -1.27794, 1, 0, 0.502509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528973,-99) , 
NN(
0, 
0, 
-1, -4.0171, 0, -1, 0.46346,-99) , 
8, -4.37435, 1, 0, 0.473081,-99) , 
8, -3.30267, 0, 0, 0.497122,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0257717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497899,-99) , 
8, -2.20063, 0, 0, 0.501547,-99) , 
7, 0.638201, 0, 0, 0.505242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487461,-99) , 
2, 0.00329233, 0, 0, 0.49918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437612,-99) , 
7, 1.30147, 0, 0, 0.476188,-99) , 
2, -0.0715338, 0, 0, 0.495468,-99) , 
9, -0.332412, 1, 0, 0.500381,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0120106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498748,-99) , 
9, -1.43655, 1, 0, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470546,-99) , 
7, -1.28537, 0, 0, 0.500054,-99) , 
9, -2.44454, 1, 0, 0.501182,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0227236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459795,-99) , 
3, 6.04507, 1, 0, 0.505354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473075,-99) , 
3, 8.42112, 1, 0, 0.504434,-99) , 
8, -0.0418059, 0, 0, 0.505704,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0241876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490792,-99) , 
3, 0.438695, 1, 0, 0.49291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451928,-99) , 
3, 6.77831, 1, 0, 0.491686,-99) , 
3, 8.34566, 0, 0, 0.492944,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0246707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498345,-99) , 
2, 0.0729151, 0, 0, 0.502937,-99) , 
7, 1.4711, 0, 0, 0.506429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477005,-99) , 
7, 1.28767, 1, 0, 0.493765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444302,-99) , 
2, -0.0728301, 0, 0, 0.485895,-99) , 
8, -1.51271, 1, 0, 0.501141,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0299553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474052,-99) , 
0, 0.505845, 1, 0, 0.512766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493357,-99) , 
0, 0.489429, 1, 0, 0.497839,-99) , 
0, 0.495234, 0, 0, 0.508723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468365,-99) , 
1, 0.00921398, 1, 0, 0.50664,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0156199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497538,-99) , 
2, -0.0709918, 1, 0, 0.500924,-99) , 
8, -4.10077, 1, 0, 0.502637,-99) , 
8, -0.0418059, 0, 0, 0.504119,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0257439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49527,-99) , 
7, -1.32703, 0, 0, 0.532806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498727,-99) , 
7, 0.264266, 0, 0, 0.508844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486833,-99) , 
0, 0.496187, 1, 0, 0.494207,-99) , 
9, -0.0685802, 1, 0, 0.502267,-99) , 
9, -1.97318, 1, 0, 0.504393,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0229045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536983,-99) , 
NN(
NN(
0, 
0, 
-1, 4.12828, 0, 1, 0.509013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450774,-99) , 
9, 0.588913, 1, 0, 0.493087,-99) , 
2, 0.0706988, 1, 0, 0.506186,-99) , 
7, -1.57106, 1, 0, 0.507568,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0158224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496167,-99) , 
8, -0.108942, 0, 0, 0.498013,-99) , 
2, -0.137316, 1, 0, 0.499564,-99) , 
2, -0.218677, 1, 0, 0.501345,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0226024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448911,-99) , 
1, 0.0113528, 1, 0, 0.505383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476014,-99) , 
9, 2.14402, 1, 0, 0.504157,-99) , 
NN(
0, 
0, 
-1, -2.78118, 1, -1, 0.467453,-99) , 
4, 0.999524, 0, 0, 0.501583,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.029477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.261264, 1, 1, 0.523037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478558,-99) , 
0, 0.499041, 0, 0, 0.494748,-99) , 
7, 1.28759, 1, 0, 0.509624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495335,-99) , 
0, 0.493329, 1, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 1.13094, 0, -1, 0.45624,-99) , 
8, -1.92126, 1, 0, 0.495757,-99) , 
8, -1.68976, 0, 0, 0.499997,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0164887);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481887,-99) , 
8, -0.456656, 1, 0, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44366,-99) , 
4, 0.998572, 0, 0, 0.500358,-99) , 
8, -4.25345, 1, 0, 0.502392,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.030255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497411, 1, 1, 0.523959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493788,-99) , 
3, 1.26487, 1, 0, 0.503732,-99) , 
3, 4.16016, 0, 0, 0.507889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486884,-99) , 
6, 0.428698, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, -0.133367, 0, -1, 0.472387,-99) , 
6, -951.286, 0, 0, 0.487125,-99) , 
0, 0.493329, 0, 0, 0.504501,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0297893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.201671, 0, 1, 0.537492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484507,-99) , 
9, -0.799967, 1, 0, 0.507511,-99) , 
8, -2.58182, 0, 0, 0.513431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491087,-99) , 
7, 1.85991, 0, 0, 0.496081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46046,-99) , 
4, 0.999524, 0, 0, 0.494015,-99) , 
9, -0.428799, 1, 0, 0.50317,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.015855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484885,-99) , 
3, 4.15079, 1, 0, 0.499044,-99) , 
9, -2.16763, 1, 0, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44495,-99) , 
7, -1.85699, 0, 0, 0.499043,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0192051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91128, 0, 1, 0.506946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473236,-99) , 
0, 0.503805, 0, 0, 0.490713,-99) , 
0, 0.5019, 1, 0, 0.503513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461937,-99) , 
7, 2.42843, 1, 0, 0.502319,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0191658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
8, -3.09048, 1, 0, 0.50098,-99) , 
NN(
0, 
0, 
-1, -1.8024, 0, -1, 0.486503,-99) , 
7, -0.713999, 0, 0, 0.498405,-99) , 
0, 0.505709, 0, 0, 0.499675,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0327524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470373,-99) , 
1, 0.00645084, 1, 0, 0.507478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486423,-99) , 
0, 0.5019, 0, 0, 0.493753,-99) , 
7, 0.428645, 1, 0, 0.501156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445127,-99) , 
4, 0.999909, 0, 0, 0.495239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438955,-99) , 
4, 0.999524, 0, 0, 0.486595,-99) , 
2, -0.0710706, 0, 0, 0.498647,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0342397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477964,-99) , 
2, 0.07861, 1, 0, 0.521354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493291,-99) , 
2, 0.148553, 0, 0, 0.496443,-99) , 
3, 4.17451, 0, 0, 0.500875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455005,-99) , 
3, 2.98476, 1, 0, 0.497908,-99) , 
NN(
0, 
0, 
-1, -2.49205, 1, -1, 0.453652,-99) , 
3, 4.12025, 1, 0, 0.482486,-99) , 
2, -0.0710108, 0, 0, 0.497729,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0174921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.19441, 0, 1, 0.545721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496437,-99) , 
1, 0.00351359, 0, 0, 0.504481,-99) , 
9, 0.163265, 1, 0, 0.512842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550921,-99) , 
NN(
0, 
0, 
-1, 0.0646563, 1, -1, 0.496504,-99) , 
8, -4.30771, 1, 0, 0.498717,-99) , 
7, 1.00005, 0, 0, 0.502622,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0224982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.518948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489953,-99) , 
3, 2.48218, 1, 0, 0.499952,-99) , 
7, 1.57149, 0, 0, 0.502613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480261,-99) , 
2, 0.00330536, 1, 0, 0.493564,-99) , 
NN(
0, 
0, 
-1, -0.541516, 0, -1, 0.461048,-99) , 
2, -0.0715338, 0, 0, 0.484511,-99) , 
3, 4.26395, 1, 0, 0.498929,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0185567);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.151386, 0, 1, 0.505909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51825,-99) , 
NN(
0, 
0, 
-1, 0.153296, 0, -1, 0.475618,-99) , 
9, -1.57136, 1, 0, 0.481835,-99) , 
3, 4.36372, 1, 0, 0.501295,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0159122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.9796, 0, 1, 0.505629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478911,-99) , 
0, 0.505709, 1, 0, 0.504389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447725,-99) , 
6, -951.286, 0, 0, 0.4777,-99) , 
7, -1.28557, 0, 0, 0.502358,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.038463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474674,-99) , 
0, 0.497138, 0, 0, 0.500937,-99) , 
7, -0.618011, 0, 0, 0.51098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491566,-99) , 
9, 0.858899, 0, 0, 0.496712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460516,-99) , 
9, 1.06486, 1, 0, 0.477552,-99) , 
8, -0.973166, 1, 0, 0.493205,-99) , 
9, -1.43506, 1, 0, 0.496161,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0177856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481717,-99) , 
4, 0.999864, 0, 0, 0.502573,-99) , 
4, 0.998572, 1, 0, 0.503603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456334,-99) , 
7, 2.42855, 1, 0, 0.502259,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0202683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498883,-99) , 
2, -0.130371, 1, 0, 0.500935,-99) , 
2, -0.211964, 1, 0, 0.503558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496942,-99) , 
9, 1.47411, 0, 0, 0.505646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468261,-99) , 
8, -0.277521, 0, 0, 0.476788,-99) , 
7, 1.01553, 1, 0, 0.487356,-99) , 
9, 0.379509, 1, 0, 0.498976,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0295487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477878,-99) , 
9, 0.784258, 1, 0, 0.528655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493214,-99) , 
6, -951.286, 1, 0, 0.502268,-99) , 
2, 0.0717208, 0, 0, 0.506782,-99) , 
NN(
0, 
0, 
-1, -0.0663277, 0, -1, 0.485804,-99) , 
7, 0.14287, 0, 0, 0.497569,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0126871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.07145, 0, 1, 0.530322,-99) , 
NN(
NN(
0, 
0, 
-1, -1.88329, 1, 1, 0.52956,-99) , 
NN(
0, 
0, 
-1, 2.17515, 1, -1, 0.497687,-99) , 
8, -3.57055, 1, 0, 0.500119,-99) , 
7, -1.28537, 1, 0, 0.502392,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0128228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.31697, 1, 1, 0.528298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498922,-99) , 
6, -950.08, 0, 0, 0.513947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462978,-99) , 
8, -3.41409, 0, 0, 0.499769,-99) , 
7, -0.710774, 1, 0, 0.501662,-99) , 
8, -3.94337, 1, 0, 0.503255,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0328751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495525,-99) , 
8, -3.2413, 0, 0, 0.514862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45621,-99) , 
2, -0.0740654, 0, 0, 0.49644,-99) , 
8, -1.56267, 1, 0, 0.509856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47743,-99) , 
0, 0.489973, 0, 0, 0.49248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448928,-99) , 
7, -0.428571, 0, 0, 0.479449,-99) , 
0, 0.491424, 0, 0, 0.50724,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0340018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.507, 0, 1, 0.524094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463084,-99) , 
9, -2.17845, 1, 0, 0.489428,-99) , 
8, -3.50855, 0, 0, 0.512081,-99) , 
NN(
NN(
0, 
0, 
-1, 1.80257, 0, 1, 0.511634,-99) , 
NN(
0, 
0, 
-1, 2.10201, 1, -1, 0.489125,-99) , 
0, 0.496187, 1, 0, 0.496737,-99) , 
7, -0.142785, 1, 0, 0.502004,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0276645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484217,-99) , 
9, 1.08406, 1, 0, 0.511629,-99) , 
9, -1.19748, 1, 0, 0.519513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486248,-99) , 
8, -1.39887, 1, 0, 0.498307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457968,-99) , 
9, -2.27696, 1, 0, 0.47171,-99) , 
8, -3.34856, 0, 0, 0.493668,-99) , 
0, 0.494281, 1, 0, 0.499004,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0163523);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.51017, 1, 1, 0.534212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494835,-99) , 
8, -3.08966, 1, 0, 0.497599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475361,-99) , 
7, -1.53044, 0, 0, 0.496496,-99) , 
7, 2.14283, 0, 0, 0.498661,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0297534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 0, 1, 0.526932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471393,-99) , 
6, -951.286, 0, 0, 0.490117,-99) , 
8, -1.82508, 1, 0, 0.513122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489461,-99) , 
7, 1.28563, 0, 0, 0.494435,-99) , 
4, 0.999048, 1, 0, 0.496159,-99) , 
0, 0.494282, 1, 0, 0.499655,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0239135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490473, 1, 1, 0.507949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442024,-99) , 
4, 0.999909, 0, 0, 0.4993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442896,-99) , 
4, 0.999524, 0, 0, 0.490071,-99) , 
2, -0.0708962, 0, 0, 0.504898,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0286087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.269738, 1, 1, 0.521527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460739,-99) , 
8, -2.23535, 1, 0, 0.50043,-99) , 
8, -2.01699, 0, 0, 0.505312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490404,-99) , 
2, 0.141702, 0, 0, 0.519481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477922,-99) , 
3, 3.96902, 0, 0, 0.486416,-99) , 
2, 0.0737786, 0, 0, 0.491951,-99) , 
7, 0.71445, 1, 0, 0.500452,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0248914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.255336, 1, 1, 0.519977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
1, 0.00682455, 0, 0, 0.498323,-99) , 
2, 0.0717866, 0, 0, 0.502114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480002,-99) , 
9, -2.12416, 1, 0, 0.49589,-99) , 
NN(
0, 
0, 
-1, 0.00011457, 0, -1, 0.463508,-99) , 
0, 0.49904, 1, 0, 0.481698,-99) , 
7, -0.71421, 0, 0, 0.498444,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0402514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444883,-99) , 
6, -1.29221, 0, 0, 0.510185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48714,-99) , 
8, -2.61566, 1, 0, 0.493705,-99) , 
6, -949.507, 0, 0, 0.502853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452998,-99) , 
4, 0.998572, 0, 0, 0.501474,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0158101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478248,-99) , 
7, -0.998662, 0, 0, 0.501239,-99) , 
9, -2.41305, 1, 0, 0.50242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439464,-99) , 
1, 0.0124237, 1, 0, 0.500561,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0184539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493016,-99) , 
0, 0.493331, 0, 0, 0.503671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438324,-99) , 
1, -0.0122449, 0, 0, 0.501704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427715,-99) , 
4, 0.998572, 0, 0, 0.49979,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0213655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487941,-99) , 
6, -9.14007, 1, 0, 0.494187,-99) , 
2, -0.275654, 1, 0, 0.495676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447762,-99) , 
2, 0.214084, 1, 0, 0.493423,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0264832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478642,-99) , 
9, -1.63116, 1, 0, 0.522765,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495381,-99) , 
8, -3.33518, 1, 0, 0.498254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465506,-99) , 
1, 0.00101384, 0, 0, 0.487738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434973,-99) , 
8, -3.98413, 0, 0, 0.467435,-99) , 
7, -0.999676, 0, 0, 0.494472,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0615962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480037,-99) , 
7, 0.145692, 0, 0, 0.518902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451351,-99) , 
7, 0.145203, 1, 0, 0.482016,-99) , 
6, -0.257148, 0, 0, 0.502345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485414,-99) , 
9, -0.450722, 1, 0, 0.495949,-99) , 
NN(
0, 
0, 
-1, -1.57545, 1, -1, 0.470815,-99) , 
7, -0.428541, 0, 0, 0.489299,-99) , 
6, -949.507, 0, 0, 0.49658,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0288709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.92564, 1, 1, 0.511723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453647,-99) , 
0, 0.499994, 1, 0, 0.484819,-99) , 
9, -1.85922, 0, 0, 0.509301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488357,-99) , 
2, -0.145107, 1, 0, 0.516568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476749,-99) , 
7, 0.142923, 1, 0, 0.487422,-99) , 
2, -0.0773559, 1, 0, 0.492717,-99) , 
0, 0.496186, 0, 0, 0.503605,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0248208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.526031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490066,-99) , 
7, 0.434718, 0, 0, 0.515039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491587,-99) , 
9, 0.709898, 0, 0, 0.494572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466404,-99) , 
8, -1.02602, 1, 0, 0.49323,-99) , 
8, -0.749716, 0, 0, 0.49579,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.036132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0867256, 0, 1, 0.507691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473485,-99) , 
4, 0.999524, 0, 0, 0.505216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462215,-99) , 
8, -1.39358, 1, 0, 0.50437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47388,-99) , 
8, -4.36285, 1, 0, 0.479072,-99) , 
8, -2.36669, 0, 0, 0.485311,-99) , 
7, 0.142913, 0, 0, 0.496339,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.021074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481558,-99) , 
8, -3.91984, 0, 0, 0.507339,-99) , 
7, -0.59588, 0, 0, 0.51682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499243,-99) , 
6, -951.287, 0, 0, 0.520119,-99) , 
NN(
0, 
0, 
-1, -0.100794, 0, -1, 0.495213,-99) , 
7, -0.427211, 1, 0, 0.498068,-99) , 
9, -1.385, 1, 0, 0.501364,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0278944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501629, 1, 1, 0.525824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
7, 0.430473, 0, 0, 0.502064,-99) , 
0, 0.49714, 0, 0, 0.516291,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490154, 0, 1, 0.52762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491788,-99) , 
2, -0.106407, 1, 0, 0.494251,-99) , 
0, 0.491424, 1, 0, 0.497165,-99) , 
3, 4.03025, 0, 0, 0.501378,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.012306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441632,-99) , 
7, -1.85669, 0, 0, 0.503198,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0232184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453884,-99) , 
9, 1.29229, 0, 0, 0.495232,-99) , 
8, -1.45779, 1, 0, 0.518536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499177,-99) , 
3, 4.26395, 0, 0, 0.502463,-99) , 
NN(
0, 
0, 
-1, -0.821146, 0, -1, 0.486267,-99) , 
2, -0.0710706, 0, 0, 0.499701,-99) , 
7, 1.57137, 0, 0, 0.502324,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0136974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45793,-99) , 
8, -3.77357, 0, 0, 0.499723,-99) , 
8, -4.15216, 1, 0, 0.501719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476212,-99) , 
8, -0.176774, 1, 0, 0.500214,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0277711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494531,-99) , 
4, 0.999996, 0, 0, 0.506365,-99) , 
NN(
0, 
0, 
-1, -0.428274, 0, -1, 0.481589,-99) , 
4, 0.999909, 0, 0, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469783,-99) , 
4, 0.999048, 0, 0, 0.501456,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0306379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69291, 1, 1, 0.520257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49403,-99) , 
0, 0.49809, 0, 0, 0.504164,-99) , 
2, 0.00828129, 0, 0, 0.510454,-99) , 
NN(
NN(
0, 
0, 
-1, -3.47961, 1, 1, 0.511887,-99) , 
NN(
0, 
0, 
-1, 0.499049, 1, -1, 0.465449,-99) , 
8, -1.9982, 1, 0, 0.494668,-99) , 
3, 4.23371, 1, 0, 0.507351,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0232769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486856,-99) , 
9, 1.18734, 0, 0, 0.508217,-99) , 
8, -1.45719, 1, 0, 0.521598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465468,-99) , 
7, -0.158093, 0, 0, 0.514144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496995,-99) , 
9, -1.92437, 1, 0, 0.499816,-99) , 
8, -1.28975, 0, 0, 0.501914,-99) , 
7, 1.57141, 0, 0, 0.504673,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0231121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458871,-99) , 
7, 2.34688, 1, 0, 0.49578,-99) , 
8, -1.17638, 1, 0, 0.523197,-99) , 
NN(
NN(
0, 
0, 
-1, -0.933205, 0, 1, 0.506518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462141,-99) , 
9, 0.00648274, 1, 0, 0.488854,-99) , 
2, 0.0708577, 1, 0, 0.503366,-99) , 
7, 1.85709, 0, 0, 0.505166,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0213333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237931, 1, 1, 0.517801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47878,-99) , 
0, 0.496415, 0, 0, 0.498493,-99) , 
0, 0.495236, 1, 0, 0.503626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472257,-99) , 
0, 0.499038, 1, 0, 0.495756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443971,-99) , 
8, -3.97892, 0, 0, 0.476024,-99) , 
7, -0.99991, 0, 0, 0.500265,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0260902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469676,-99) , 
6, -951.286, 0, 0, 0.525618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489991,-99) , 
6, -951.286, 1, 0, 0.497613,-99) , 
3, 0.513352, 1, 0, 0.499752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46107,-99) , 
3, 8.34566, 1, 0, 0.498576,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0150917);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492377, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445504,-99) , 
7, -1.8567, 0, 0, 0.504754,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0144384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28615, 0, 1, 0.514702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487121,-99) , 
9, -0.86975, 0, 0, 0.496397,-99) , 
2, -0.08568, 1, 0, 0.498912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469537,-99) , 
4, 0.999048, 0, 0, 0.497712,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0188729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495076,-99) , 
7, 2.1311, 0, 0, 0.497008,-99) , 
8, -0.812236, 0, 0, 0.498502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504652,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.461377,-99) , 
6, -951.287, 0, 0, 0.477777,-99) , 
9, 1.37907, 1, 0, 0.496475,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0231395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.17211, 1, 1, 0.507065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553721,-99) , 
NN(
0, 
0, 
-1, -0.0555669, 0, -1, 0.466773,-99) , 
9, 0.933532, 1, 0, 0.481641,-99) , 
8, -1.0001, 1, 0, 0.503206,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0196252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488544,-99) , 
0, 0.500947, 1, 0, 0.500641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46141,-99) , 
3, 6.54349, 1, 0, 0.499234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438175,-99) , 
3, 8.05829, 1, 0, 0.497211,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0387291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483188,-99) , 
9, -1.01788, 1, 0, 0.533846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47938,-99) , 
1, -0.00134846, 1, 0, 0.493162,-99) , 
7, -0.164211, 0, 0, 0.505035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469155,-99) , 
2, 0.0763198, 1, 0, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0.318634, 0, -1, 0.484028,-99) , 
7, 0.428612, 1, 0, 0.489831,-99) , 
8, -2.79302, 1, 0, 0.494708,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0211738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440656,-99) , 
4, 0.999932, 0, 0, 0.514385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497775,-99) , 
4, 0.999524, 1, 0, 0.499316,-99) , 
8, -3.3571, 1, 0, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449962,-99) , 
4, 0.998572, 0, 0, 0.500304,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0298875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0750156, 0, 1, 0.514853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468298,-99) , 
0, 0.501084, 0, 0, 0.497599,-99) , 
0, 0.499996, 1, 0, 0.50908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485469,-99) , 
8, -2.25289, 0, 0, 0.49261,-99) , 
9, -2.15631, 1, 0, 0.496304,-99) , 
7, 0.429077, 0, 0, 0.502155,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0178168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502117,-99) , 
NN(
0, 
0, 
-1, 0.428495, 1, -1, 0.471992,-99) , 
0, 0.491017, 0, 0, 0.499405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515702,-99) , 
NN(
0, 
0, 
-1, 0.504077, 1, -1, 0.473316,-99) , 
7, -0.99987, 1, 0, 0.478862,-99) , 
0, 0.5019, 1, 0, 0.495001,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0191075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496631,-99) , 
8, -0.986553, 0, 0, 0.499445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463042,-99) , 
8, -0.479923, 1, 0, 0.479843,-99) , 
9, 1.17738, 1, 0, 0.4969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465219,-99) , 
7, -1.57127, 0, 0, 0.495466,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0298482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495897,-99) , 
8, -1.97559, 1, 0, 0.517131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477619,-99) , 
0, 0.506344, 1, 0, 0.512366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488881,-99) , 
0, 0.497773, 1, 0, 0.500675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457287,-99) , 
8, -4.18587, 1, 0, 0.475065,-99) , 
9, -1.59028, 0, 0, 0.497097,-99) , 
0, 0.500947, 0, 0, 0.501274,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0333227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480218,-99) , 
2, 0.0576239, 1, 0, 0.524088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491312,-99) , 
8, -3.84637, 1, 0, 0.494261,-99) , 
1, 0.00305744, 0, 0, 0.500732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472274,-99) , 
8, -0.465982, 1, 0, 0.483927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453106,-99) , 
0, 0.500943, 1, 0, 0.474359,-99) , 
8, -0.818939, 1, 0, 0.497485,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0291212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.835686, 1, 1, 0.549551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494051,-99) , 
1, -0.00381627, 1, 0, 0.500527,-99) , 
7, 0.147691, 0, 0, 0.50727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488412,-99) , 
8, -2.7553, 1, 0, 0.491056,-99) , 
8, -0.0171, 0, 0, 0.493331,-99) , 
9, -0.695197, 1, 0, 0.498631,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0185722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524159,-99) , 
NN(
0, 
0, 
-1, 3.53211, 1, -1, 0.475411,-99) , 
2, -0.276883, 1, 0, 0.483663,-99) , 
2, -0.0730265, 0, 0, 0.502263,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0187932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.66351, 1, 1, 0.505925,-99) , 
NN(
0, 
0, 
-1, 0.496188, 0, -1, 0.473236,-99) , 
7, -1.28554, 0, 0, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43622,-99) , 
8, 0.344794, 1, 0, 0.501179,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0354174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490782,-99) , 
7, -1.03337, 0, 0, 0.518892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480875,-99) , 
6, -951.286, 0, 0, 0.496491,-99) , 
8, -2.84764, 1, 0, 0.503225,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.48162,-99) , 
3, 4.27821, 1, 0, 0.49885,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0166894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.7127, 1, 1, 0.543106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460059,-99) , 
7, -1.51496, 0, 0, 0.522298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499771,-99) , 
2, 0.22303, 0, 0, 0.501234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465861,-99) , 
4, 0.999048, 0, 0, 0.4998,-99) , 
8, -3.46721, 1, 0, 0.502863,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0307536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23378, 0, 1, 0.509974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446975,-99) , 
7, -1.82043, 0, 0, 0.507626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495663,-99) , 
7, 1.8602, 0, 0, 0.512446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471955,-99) , 
8, 0.370959, 0, 0, 0.482843,-99) , 
8, -1.18539, 1, 0, 0.494761,-99) , 
9, 0.338839, 1, 0, 0.503823,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0256668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1286, 0, 1, 0.518627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466962,-99) , 
0, 0.505981, 1, 0, 0.501615,-99) , 
9, -1.24992, 1, 0, 0.505214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485652,-99) , 
7, 1.00633, 1, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0.491697, 1, -1, 0.477208,-99) , 
8, -2.00879, 0, 0, 0.487844,-99) , 
0, 0.496186, 0, 0, 0.49929,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.023534);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499172,-99) , 
7, 0.428634, 0, 0, 0.509122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489586,-99) , 
9, -1.48573, 1, 0, 0.492602,-99) , 
0, 0.500539, 0, 0, 0.496996,-99) , 
0, 0.505709, 0, 0, 0.499259,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0219982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495958,-99) , 
9, 0.577801, 1, 0, 0.529169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497403,-99) , 
9, -0.874648, 1, 0, 0.500813,-99) , 
2, 0.0722807, 0, 0, 0.505705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496235,-99) , 
3, 3.40775, 0, 0, 0.506605,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.4864,-99) , 
0, 0.499045, 0, 0, 0.494937,-99) , 
7, -0.142757, 0, 0, 0.502,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0175145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497678,-99) , 
9, -0.307912, 1, 0, 0.504061,-99) , 
NN(
0, 
0, 
-1, -0.0673739, 0, -1, 0.492064,-99) , 
7, 0.387978, 0, 0, 0.497967,-99) , 
7, -1.57131, 1, 0, 0.499241,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0209325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999036, 0, 1, 0.510685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47553,-99) , 
7, 2.23806, 1, 0, 0.506442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494723,-99) , 
8, -1.68995, 0, 0, 0.498171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471039,-99) , 
8, -0.871636, 1, 0, 0.496028,-99) , 
7, 0.714322, 0, 0, 0.499792,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.043175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465341,-99) , 
9, 1.76319, 1, 0, 0.521624,-99) , 
NN(
0, 
0, 
-1, -1.68463, 0, -1, 0.479569,-99) , 
7, -0.714208, 0, 0, 0.513645,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5716, 0, 1, 0.508317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373902,-99) , 
6, -1.72256, 0, 0, 0.49833,-99) , 
6, -951.286, 1, 0, 0.505062,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0220716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.864145, 0, 1, 0.538079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491202,-99) , 
0, 0.503259, 1, 0, 0.502857,-99) , 
9, -1.26128, 1, 0, 0.509986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517885,-99) , 
NN(
0, 
0, 
-1, 0.495868, 1, -1, 0.491892,-99) , 
7, -1.57046, 1, 0, 0.493041,-99) , 
0, 0.499994, 0, 0, 0.49891,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0429175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472861,-99) , 
7, 0.889495, 0, 0, 0.53119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46307,-99) , 
8, -1.98939, 0, 0, 0.509761,-99) , 
9, 0.0138803, 1, 0, 0.514717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477914,-99) , 
2, 0.0343675, 1, 0, 0.518038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484792,-99) , 
9, 0.115928, 0, 0, 0.490235,-99) , 
1, 0.0040614, 0, 0, 0.495052,-99) , 
7, 0.714322, 0, 0, 0.502143,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0285011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491757,-99) , 
9, -2.04909, 0, 0, 0.520532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492582,-99) , 
8, -2.97048, 0, 0, 0.503549,-99) , 
7, -1.20371, 1, 0, 0.506221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487724,-99) , 
8, -0.911987, 0, 0, 0.492754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455597,-99) , 
7, 2.26533, 1, 0, 0.48941,-99) , 
7, 0.428769, 1, 0, 0.498612,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0233528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14277, 0, 1, 0.512203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4884,-99) , 
6, -951.286, 1, 0, 0.49447,-99) , 
0, 0.499043, 1, 0, 0.504722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461156,-99) , 
1, 0.00921398, 1, 0, 0.502458,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0328631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46559,-99) , 
9, -1.18168, 1, 0, 0.506795,-99) , 
7, 0.00401066, 0, 0, 0.512799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474631,-99) , 
8, -0.928723, 1, 0, 0.525617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48384,-99) , 
7, 0.676241, 0, 0, 0.493304,-99) , 
7, 2.1439, 0, 0, 0.496075,-99) , 
9, -0.843761, 1, 0, 0.501586,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0192423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493127,-99) , 
7, 0.714342, 1, 0, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0.440125, 0, -1, 0.462382,-99) , 
4, 0.99966, 0, 0, 0.499587,-99) , 
4, 0.998571, 1, 0, 0.500828,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0185927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524355,-99) , 
NN(
NN(
0, 
0, 
-1, -0.115159, 1, 1, 0.506645,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.47998,-99) , 
4, 0.999909, 0, 0, 0.502791,-99) , 
4, 0.999048, 1, 0, 0.503772,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0155006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495924,-99) , 
8, -0.822152, 0, 0, 0.497981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470012,-99) , 
7, 2.30611, 1, 0, 0.496873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432429,-99) , 
7, -1.85674, 0, 0, 0.495259,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0259156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.93851, 0, 1, 0.530477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459415,-99) , 
8, -4.26954, 1, 0, 0.488747,-99) , 
8, -3.88928, 0, 0, 0.517722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487458,-99) , 
7, -0.308362, 0, 0, 0.523042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483209,-99) , 
7, 0.347242, 0, 0, 0.494451,-99) , 
9, -1.22212, 1, 0, 0.497449,-99) , 
7, -0.713999, 1, 0, 0.5011,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0321837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.173696, 0, 1, 0.518216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487319,-99) , 
7, -0.468701, 1, 0, 0.490534,-99) , 
9, -1.11288, 1, 0, 0.496866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434189,-99) , 
7, -1.85697, 0, 0, 0.495277,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0177276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476768,-99) , 
7, -0.917966, 0, 0, 0.499753,-99) , 
7, -1.57105, 1, 0, 0.501197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474382,-99) , 
7, -0.0130583, 0, 0, 0.496225,-99) , 
NN(
0, 
0, 
-1, -1.06586, 1, -1, 0.467402,-99) , 
9, 0.274666, 1, 0, 0.487525,-99) , 
2, 0.0717866, 1, 0, 0.498797,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0288514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481247,-99) , 
6, -951.286, 0, 0, 0.509054,-99) , 
8, -2.60555, 1, 0, 0.520505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495937,-99) , 
7, -0.139216, 1, 0, 0.499819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475017,-99) , 
7, -0.0854814, 0, 0, 0.486168,-99) , 
8, -2.68778, 0, 0, 0.494779,-99) , 
0, 0.503804, 0, 0, 0.497755,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0319289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87693, 1, 1, 0.511753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492474,-99) , 
7, 1.5851, 0, 0, 0.49585,-99) , 
0, 0.497138, 1, 0, 0.502439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443879,-99) , 
8, -2.56583, 1, 0, 0.499722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438092,-99) , 
6, -0.426257, 1, 0, 0.466736,-99) , 
6, -951.286, 1, 0, 0.48173,-99) , 
7, -0.71421, 0, 0, 0.4987,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0185545);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494543,-99) , 
8, -2.66445, 0, 0, 0.502887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443259,-99) , 
3, 6.77889, 1, 0, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461124,-99) , 
3, 8.34566, 1, 0, 0.499907,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0231523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0747068, 0, 1, 0.521265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49798,-99) , 
2, -0.214704, 1, 0, 0.500278,-99) , 
3, 1.63612, 1, 0, 0.508995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47751,-99) , 
3, 8.07193, 1, 0, 0.507972,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0328028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.442398, 1, 1, 0.513858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47638,-99) , 
7, -0.864019, 0, 0, 0.492789,-99) , 
9, -1.32241, 0, 0, 0.508474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520838,-99) , 
NN(
0, 
0, 
-1, 1.22437, 0, -1, 0.479847,-99) , 
9, 0.508419, 1, 0, 0.485304,-99) , 
8, -1.42361, 1, 0, 0.503046,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0263579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49747,-99) , 
0, 0.494283, 1, 0, 0.508021,-99) , 
7, -0.0579591, 0, 0, 0.516572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48627,-99) , 
9, 0.220296, 0, 0, 0.493754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457728,-99) , 
4, 0.999524, 0, 0, 0.491597,-99) , 
9, -0.963894, 1, 0, 0.498896,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.016795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.46961, 1, 1, 0.526269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49822,-99) , 
7, -0.242811, 0, 0, 0.509327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485859,-99) , 
0, 0.496186, 0, 0, 0.495905,-99) , 
9, -1.14927, 1, 0, 0.499335,-99) , 
7, 2.14283, 0, 0, 0.500909,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0211558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.45699, 1, 1, 0.508384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490374,-99) , 
2, 0.0867256, 0, 0, 0.494328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456653,-99) , 
4, 0.999524, 0, 0, 0.492179,-99) , 
8, -2.26521, 1, 0, 0.500397,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0180623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.840668, 0, 1, 0.52467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497503,-99) , 
2, 0.0513753, 0, 0, 0.501296,-99) , 
8, -3.48732, 1, 0, 0.504391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469071,-99) , 
2, 0.214584, 1, 0, 0.502745,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0186087);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497805,-99) , 
2, 0.0381166, 0, 0, 0.503627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472929,-99) , 
4, 0.999683, 0, 0, 0.502039,-99) , 
4, 0.999048, 1, 0, 0.50356,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0289904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490917,-99) , 
6, -951.286, 1, 0, 0.500487,-99) , 
7, 0.0508766, 0, 0, 0.507972,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494279, 1, 1, 0.511568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48282,-99) , 
7, 0.269351, 1, 0, 0.489246,-99) , 
7, 1.57349, 0, 0, 0.493961,-99) , 
9, -0.796833, 1, 0, 0.498838,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0341261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.020748, 1, 1, 0.524032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455141,-99) , 
2, -0.0705741, 0, 0, 0.491812,-99) , 
3, 4.04178, 1, 0, 0.516233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465174,-99) , 
2, 0.0734954, 1, 0, 0.508107,-99) , 
NN(
0, 
0, 
-1, -2.22797, 0, -1, 0.491452,-99) , 
7, 0.717205, 1, 0, 0.498945,-99) , 
8, -2.68872, 1, 0, 0.505132,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0570132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466216,-99) , 
5, 0.00117542, 0, 0, 0.507945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454385,-99) , 
1, 0.0111051, 1, 0, 0.505793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419092,-99) , 
1, -0.0123422, 0, 0, 0.503142,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0275866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 1, 1, 0.512757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490494,-99) , 
8, -3.8886, 1, 0, 0.495629,-99) , 
7, 0.71443, 0, 0, 0.501879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449753,-99) , 
4, 0.998572, 0, 0, 0.500466,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0344784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.507447, 0, 1, 0.525449,-99) , 
NN(
0, 
0, 
-1, 0.972197, 1, -1, 0.481474,-99) , 
9, 0.303356, 1, 0, 0.512362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492152,-99) , 
9, -0.518541, 1, 0, 0.509983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483488,-99) , 
9, 1.0974, 0, 0, 0.486517,-99) , 
0, 0.494281, 1, 0, 0.491144,-99) , 
2, -0.0708962, 1, 0, 0.494817,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.027038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491465,-99) , 
7, -0.42851, 0, 0, 0.50812,-99) , 
0, 0.498545, 1, 0, 0.511527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498556,-99) , 
9, -0.730096, 1, 0, 0.516122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489478,-99) , 
3, 4.3879, 0, 0, 0.492491,-99) , 
1, 0.00305744, 0, 0, 0.497681,-99) , 
0, 0.498091, 0, 0, 0.504667,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0326153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50141, 1, 1, 0.518703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494623,-99) , 
7, 1.06586, 0, 0, 0.499248,-99) , 
0, 0.496186, 0, 0, 0.51203,-99) , 
NN(
NN(
0, 
0, 
-1, 0.950627, 0, 1, 0.51449,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.477556,-99) , 
8, -1.07509, 1, 0, 0.492106,-99) , 
9, 0.495247, 1, 0, 0.506907,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0212377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.140986, 1, 1, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447789,-99) , 
4, 0.999728, 0, 0, 0.505743,-99) , 
NN(
0, 
0, 
-1, 0.725638, 0, -1, 0.468292,-99) , 
4, 0.999524, 0, 0, 0.503177,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0223529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498631,-99) , 
1, 0.00381194, 0, 0, 0.506157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488401,-99) , 
8, -3.8474, 1, 0, 0.492049,-99) , 
7, 0.428561, 0, 0, 0.49852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46248,-99) , 
3, 8.62065, 1, 0, 0.497598,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0164045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484187,-99) , 
7, -0.713078, 0, 0, 0.499913,-99) , 
0, 0.48952, 1, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459563,-99) , 
4, 0.999048, 0, 0, 0.499734,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0198381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.69637, 1, 1, 0.512587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470784,-99) , 
8, -3.72441, 0, 0, 0.498978,-99) , 
0, 0.496187, 1, 0, 0.503558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47163,-99) , 
7, 1.00826, 0, 0, 0.491642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452299,-99) , 
8, -0.278871, 0, 0, 0.478317,-99) , 
8, -0.651345, 1, 0, 0.500961,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0246798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711974, 0, 1, 0.527303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483997,-99) , 
6, -0.0132588, 1, 0, 0.499584,-99) , 
6, -950.08, 1, 0, 0.512106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492316,-99) , 
4, 0.999524, 1, 0, 0.494371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461003,-99) , 
2, -0.214093, 0, 0, 0.492977,-99) , 
0, 0.494281, 1, 0, 0.497016,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0237967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480705,-99) , 
7, -1.50488, 0, 0, 0.535027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47457,-99) , 
0, 0.49079, 0, 0, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0.501583, 0, -1, 0.485351,-99) , 
0, 0.500948, 1, 0, 0.497729,-99) , 
9, -2.06689, 1, 0, 0.499856,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0221446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.438, 1, 1, 0.514523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49474,-99) , 
2, -0.122149, 1, 0, 0.496754,-99) , 
3, 4.14675, 0, 0, 0.500372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456548,-99) , 
8, -1.51313, 1, 0, 0.476675,-99) , 
8, -0.487494, 0, 0, 0.483398,-99) , 
7, 1.57137, 1, 0, 0.498068,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0164029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.678926, 0, 1, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470231,-99) , 
0, 0.48952, 0, 0, 0.502177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540772,-99) , 
NN(
0, 
0, 
-1, 2.04762, 0, -1, 0.468978,-99) , 
9, 0.615476, 1, 0, 0.484182,-99) , 
7, 1.57142, 1, 0, 0.499687,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0378536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494813,-99) , 
7, 0.144735, 0, 0, 0.519107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448082,-99) , 
7, 0.714392, 1, 0, 0.485734,-99) , 
6, -0.257148, 0, 0, 0.504141,-99) , 
NN(
0, 
0, 
-1, -0.0755314, 0, -1, 0.489364,-99) , 
6, -949.507, 0, 0, 0.497634,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0364579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.244797, 1, 1, 0.518304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490655,-99) , 
9, -1.9158, 1, 0, 0.497311,-99) , 
7, 0.428523, 0, 0, 0.506829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
6, 0.637434, 0, 0, 0.500306,-99) , 
NN(
0, 
0, 
-1, -2.04363, 0, -1, 0.437697,-99) , 
6, -1.34855, 0, 0, 0.491846,-99) , 
6, -9.14007, 1, 0, 0.498484,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.01262);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55563,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0737127, 0, 1, 0.520536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479815,-99) , 
7, 1.57141, 1, 0, 0.497306,-99) , 
0, 0.503805, 0, 0, 0.499969,-99) , 
9, -2.44454, 1, 0, 0.501449,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0298731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.514549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454543,-99) , 
7, 0.14372, 0, 0, 0.482496,-99) , 
2, -0.075787, 0, 0, 0.509101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499707,-99) , 
2, -0.0692707, 1, 0, 0.505827,-99) , 
NN(
0, 
0, 
-1, -1.94431, 0, -1, 0.436247,-99) , 
6, -1.34855, 0, 0, 0.496435,-99) , 
6, -9.14007, 1, 0, 0.502004,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0255954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48135,-99) , 
9, -1.48506, 1, 0, 0.512627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490769,-99) , 
0, 0.502854, 0, 0, 0.493755,-99) , 
9, -1.34866, 1, 0, 0.497211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447345,-99) , 
4, 0.999048, 0, 0, 0.495287,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0328843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483609,-99) , 
3, 2.63094, 1, 0, 0.525907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493924,-99) , 
2, -0.0127987, 1, 0, 0.502293,-99) , 
2, -0.0858181, 1, 0, 0.505077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49093,-99) , 
6, -951.286, 1, 0, 0.504147,-99) , 
NN(
0, 
0, 
-1, -1.27033, 1, -1, 0.473202,-99) , 
1, -0.00153224, 1, 0, 0.483043,-99) , 
3, 4.14397, 1, 0, 0.500309,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0186398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530964,-99) , 
NN(
NN(
0, 
0, 
-1, -2.03838, 1, 1, 0.507059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453408,-99) , 
2, -0.0709918, 0, 0, 0.494541,-99) , 
0, 0.5019, 1, 0, 0.504405,-99) , 
7, -1.57127, 1, 0, 0.505577,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0297599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494677,-99) , 
7, -0.712853, 0, 0, 0.524448,-99) , 
NN(
0, 
0, 
-1, -1.02715, 0, 1, 0.505483,-99) , 
3, 1.11915, 1, 0, 0.511902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487152,-99) , 
6, -949.507, 1, 0, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0.741156, 0, -1, 0.466659,-99) , 
0, 0.498093, 0, 0, 0.484605,-99) , 
3, 4.28569, 1, 0, 0.506448,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0381933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50076, 0, 1, 0.513894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435786,-99) , 
7, -0.112162, 1, 0, 0.4662,-99) , 
6, -1.03654, 0, 0, 0.504224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487737,-99) , 
8, -1.2627, 0, 0, 0.492828,-99) , 
NN(
0, 
0, 
-1, -0.915394, 1, -1, 0.472704,-99) , 
7, 1.57082, 1, 0, 0.490168,-99) , 
6, -951.286, 0, 0, 0.49798,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.020306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.36458, 1, 1, 0.509218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480581,-99) , 
8, -2.03631, 1, 0, 0.491827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442161,-99) , 
4, 0.999524, 0, 0, 0.488972,-99) , 
0, 0.49809, 1, 0, 0.498999,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0263709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491454,-99) , 
7, -0.714006, 1, 0, 0.495448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44027,-99) , 
9, -2.41451, 1, 0, 0.468702,-99) , 
8, -3.9343, 0, 0, 0.493701,-99) , 
0, 0.48952, 1, 0, 0.495507,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0271853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52029, 0, 1, 0.503851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480812,-99) , 
8, -0.100214, 0, 0, 0.489534,-99) , 
9, 0.632089, 1, 0, 0.500074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45746,-99) , 
9, -1.66657, 1, 0, 0.501201,-99) , 
NN(
0, 
0, 
-1, -2.30477, 1, -1, 0.45987,-99) , 
7, -1.0951, 0, 0, 0.48423,-99) , 
8, -3.36417, 0, 0, 0.497508,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0268817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478089,-99) , 
8, -4.02178, 0, 0, 0.500671,-99) , 
7, -1.00862, 0, 0, 0.519035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49059,-99) , 
7, -0.999874, 1, 0, 0.49227,-99) , 
2, -0.211308, 1, 0, 0.493746,-99) , 
9, -1.72983, 1, 0, 0.496402,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0158919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216987, 0, 1, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479914,-99) , 
4, 0.999048, 0, 0, 0.505512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47647,-99) , 
9, 2.14402, 1, 0, 0.504356,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0197453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00711267, 0, 1, 0.531459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496729,-99) , 
3, 0.722643, 1, 0, 0.500765,-99) , 
NN(
0, 
0, 
-1, 0.493331, 0, -1, 0.483222,-99) , 
3, 4.28503, 1, 0, 0.497283,-99) , 
1, -0.00733313, 1, 0, 0.499614,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0140409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.953909, 1, 1, 0.505737,-99) , 
NN(
0, 
0, 
-1, -0.276585, 1, -1, 0.493254,-99) , 
7, -0.140622, 0, 0, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468606,-99) , 
9, 2.19995, 1, 0, 0.500063,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0275709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492024,-99) , 
7, 1.47619, 0, 0, 0.507572,-99) , 
0, 0.49333, 1, 0, 0.514853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486172,-99) , 
9, -0.00708587, 1, 0, 0.506615,-99) , 
NN(
0, 
0, 
-1, -3.69599, 0, -1, 0.489317,-99) , 
0, 0.495234, 1, 0, 0.493909,-99) , 
7, 1.00002, 0, 0, 0.499635,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0214583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494096,-99) , 
7, -0.264765, 1, 0, 0.502432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48276,-99) , 
7, 0.387893, 0, 0, 0.491338,-99) , 
0, 0.499043, 0, 0, 0.495998,-99) , 
7, -1.57106, 1, 0, 0.497557,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0193333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.48819, 1, 1, 0.507836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468906,-99) , 
9, 2.03256, 1, 0, 0.505145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457586,-99) , 
0, 0.490479, 0, 0, 0.499208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378475,-99) , 
7, 0.715839, 1, 0, 0.450039,-99) , 
6, -1.39891, 0, 0, 0.493247,-99) , 
6, -20.6011, 1, 0, 0.498458,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0241356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493052,-99) , 
7, 0.153404, 1, 0, 0.501552,-99) , 
7, 1.13882, 0, 0, 0.504249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552341,-99) , 
NN(
0, 
0, 
-1, 0.147211, 0, -1, 0.486403,-99) , 
9, -0.111012, 1, 0, 0.492052,-99) , 
8, -1.95498, 1, 0, 0.499509,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0179861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498165,-99) , 
8, -1.29097, 0, 0, 0.501293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424127,-99) , 
8, -0.983306, 1, 0, 0.485891,-99) , 
7, 1.57135, 1, 0, 0.499338,-99) , 
8, -0.0418059, 0, 0, 0.500845,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0280712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28983, 1, 1, 0.520479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46789,-99) , 
2, -0.0770858, 0, 0, 0.512292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491074,-99) , 
3, 7.68593, 0, 0, 0.492623,-99) , 
4, 0.999048, 1, 0, 0.494596,-99) , 
9, 0.381868, 0, 0, 0.499596,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0164276);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498922,-99) , 
7, 1.24967, 0, 0, 0.501247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473394,-99) , 
0, 0.499042, 0, 0, 0.488443,-99) , 
9, 0.338839, 1, 0, 0.497753,-99) , 
7, 2.42851, 0, 0, 0.498801,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0197291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540048,-99) , 
NN(
NN(
0, 
0, 
-1, -0.367471, 0, 1, 0.512212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494404,-99) , 
8, 0.0271608, 0, 0, 0.496595,-99) , 
8, -2.71684, 1, 0, 0.502017,-99) , 
0, 0.48952, 1, 0, 0.503355,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0247823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453136,-99) , 
9, 0.154513, 1, 0, 0.505414,-99) , 
7, 1.25064, 0, 0, 0.508012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485814,-99) , 
9, 1.48999, 0, 0, 0.491536,-99) , 
8, -1.66754, 1, 0, 0.495668,-99) , 
9, 0.381868, 1, 0, 0.504474,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0114095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46429,-99) , 
3, 7.80378, 1, 0, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470308,-99) , 
2, -0.214179, 0, 0, 0.500911,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0150926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491043,-99) , 
7, 1.14966, 1, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46447,-99) , 
4, 0.999048, 0, 0, 0.498874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425969,-99) , 
7, -1.85698, 0, 0, 0.497051,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0244378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499633,-99) , 
7, 0.583359, 0, 0, 0.521843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482772,-99) , 
8, -2.83989, 1, 0, 0.495983,-99) , 
8, -2.44416, 0, 0, 0.501163,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.521212,-99) , 
NN(
0, 
0, 
-1, 0.150185, 0, -1, 0.485142,-99) , 
8, -2.12625, 1, 0, 0.489508,-99) , 
9, -0.214811, 1, 0, 0.495825,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0236031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492089,-99) , 
7, 0.242932, 0, 0, 0.528316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48159,-99) , 
7, 1.50041, 1, 0, 0.503775,-99) , 
4, 0.999524, 1, 0, 0.505673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492294,-99) , 
7, 1.65239, 0, 0, 0.508034,-99) , 
NN(
0, 
0, 
-1, 1.67023, 1, -1, 0.462742,-99) , 
0, 0.498092, 1, 0, 0.485585,-99) , 
9, 1.01609, 1, 0, 0.502669,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0149267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494853,-99) , 
2, -0.218826, 1, 0, 0.495705,-99) , 
7, 2.42844, 0, 0, 0.496772,-99) , 
0, 0.505709, 0, 0, 0.498378,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0125497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499433,-99) , 
8, -1.17137, 0, 0, 0.500839,-99) , 
2, 0.214536, 0, 0, 0.502777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473877,-99) , 
9, 1.69445, 1, 0, 0.492125,-99) , 
NN(
0, 
0, 
-1, 0.493965, 1, -1, 0.471258,-99) , 
0, 0.497139, 0, 0, 0.483802,-99) , 
9, 1.01609, 1, 0, 0.5,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0241152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480698,-99) , 
8, -0.928723, 1, 0, 0.529473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486474,-99) , 
7, 0.918108, 1, 0, 0.511013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48893,-99) , 
3, 1.50717, 1, 0, 0.496074,-99) , 
3, 4.27821, 0, 0, 0.499004,-99) , 
7, 2.14286, 0, 0, 0.500707,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0238568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475252,-99) , 
0, 0.503804, 1, 0, 0.501832,-99) , 
8, -2.28083, 1, 0, 0.504493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524679,-99) , 
NN(
0, 
0, 
-1, -0.824495, 1, -1, 0.487226,-99) , 
7, 0.705609, 0, 0, 0.489924,-99) , 
9, -0.248648, 0, 0, 0.496831,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0276964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44241, 1, 1, 0.536295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464005,-99) , 
4, 0.999796, 0, 0, 0.508246,-99) , 
4, 0.999524, 1, 0, 0.510081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511333,-99) , 
NN(
0, 
0, 
-1, 0.491107, 0, -1, 0.482248,-99) , 
8, -1.27179, 0, 0, 0.488322,-99) , 
0, 0.494282, 0, 0, 0.505483,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0139877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498072,-99) , 
7, -0.999874, 1, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0.441267, 0, -1, 0.469402,-99) , 
4, 0.999524, 0, 0, 0.497803,-99) , 
NN(
0, 
0, 
-1, -3.95574, 0, -1, 0.473934,-99) , 
9, -1.91409, 0, 0, 0.495852,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0239108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453555,-99) , 
3, 3.55711, 1, 0, 0.526109,-99) , 
NN(
0, 
0, 
-1, 0.512203, 1, 1, 0.504469,-99) , 
2, 0.0481053, 0, 0, 0.508612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481328,-99) , 
0, 0.500944, 0, 0, 0.487911,-99) , 
8, -3.37397, 1, 0, 0.492122,-99) , 
3, 4.36372, 1, 0, 0.5055,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.02014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496918,-99) , 
8, -2.07172, 0, 0, 0.503817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438787,-99) , 
4, 0.999533, 1, 0, 0.470551,-99) , 
4, 0.999728, 0, 0, 0.501932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454987,-99) , 
4, 0.999048, 0, 0, 0.500115,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0290044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482318,-99) , 
7, -1.69109, 0, 0, 0.508929,-99) , 
4, 0.998572, 1, 0, 0.510767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481905,-99) , 
9, 1.46059, 0, 0, 0.495215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457845,-99) , 
8, -1.00989, 1, 0, 0.472181,-99) , 
0, 0.498092, 1, 0, 0.483334,-99) , 
9, 0.808574, 1, 0, 0.505618,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0181045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469127,-99) , 
9, 1.53648, 0, 0, 0.500739,-99) , 
8, -1.22881, 1, 0, 0.518177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543278,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.495271,-99) , 
4, 0.998572, 1, 0, 0.496687,-99) , 
7, 1.85708, 0, 0, 0.498683,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0204488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.322685, 1, 1, 0.527456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494346,-99) , 
9, -0.0144831, 1, 0, 0.502198,-99) , 
8, -0.697467, 0, 0, 0.504873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491067,-99) , 
2, -0.0420685, 1, 0, 0.501959,-99) , 
NN(
0, 
0, 
-1, 0.504077, 0, -1, 0.477612,-99) , 
8, -2.09726, 1, 0, 0.49105,-99) , 
0, 0.5019, 1, 0, 0.501973,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0208127);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47903,-99) , 
7, -0.999645, 0, 0, 0.501109,-99) , 
NN(
0, 
0, 
-1, 1.00005, 1, -1, 0.488685,-99) , 
0, 0.498136, 1, 0, 0.494641,-99) , 
0, 0.48952, 1, 0, 0.496734,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0282325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473611,-99) , 
7, 1.65312, 1, 0, 0.514819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468366,-99) , 
3, 3.6536, 1, 0, 0.493028,-99) , 
7, -0.142671, 0, 0, 0.507096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493788,-99) , 
7, -1.28395, 1, 0, 0.495854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464696,-99) , 
7, 0.999421, 0, 0, 0.479084,-99) , 
2, 0.0696692, 1, 0, 0.492999,-99) , 
0, 0.499995, 0, 0, 0.497816,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0113792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
2, -0.15969, 1, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0.49714, 1, -1, 0.471552,-99) , 
4, 0.999728, 0, 0, 0.499072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457529,-99) , 
4, 0.999048, 0, 0, 0.497387,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0262882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495592,-99) , 
3, 3.45828, 0, 0, 0.501338,-99) , 
4, 0.999524, 1, 0, 0.503283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475956,-99) , 
7, -0.492182, 0, 0, 0.501809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450379,-99) , 
7, 1.00228, 0, 0, 0.473565,-99) , 
9, -0.774517, 1, 0, 0.483705,-99) , 
2, 0.0708577, 1, 0, 0.4999,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0154725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462924,-99) , 
4, 0.998572, 0, 0, 0.504691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471756,-99) , 
9, 2.04465, 1, 0, 0.503206,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0181536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495171,-99) , 
9, 0.925798, 0, 0, 0.498533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464032,-99) , 
7, -1.57101, 0, 0, 0.496947,-99) , 
0, 0.490472, 1, 0, 0.498764,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0183609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499131,-99) , 
7, 0.714342, 1, 0, 0.506364,-99) , 
NN(
0, 
0, 
-1, 0.489248, 1, -1, 0.474919,-99) , 
0, 0.490472, 0, 0, 0.504564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467049,-99) , 
2, -0.213808, 0, 0, 0.502837,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0254553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904817, 0, 1, 0.527528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49983,-99) , 
2, 0.154886, 0, 0, 0.504238,-99) , 
2, -0.0692707, 1, 0, 0.508246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479687,-99) , 
8, -3.37734, 0, 0, 0.498875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450123,-99) , 
8, -1.42384, 1, 0, 0.493946,-99) , 
7, -0.142785, 0, 0, 0.503318,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0169412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505282, 0, 1, 0.526178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495967,-99) , 
0, 0.506254, 1, 0, 0.519868,-99) , 
NN(
NN(
0, 
0, 
-1, 0.111476, 0, 1, 0.505248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475889,-99) , 
2, -0.214698, 0, 0, 0.504011,-99) , 
0, 0.502852, 0, 0, 0.506492,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0328718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434526, 1, 1, 0.513569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463704,-99) , 
0, 0.49809, 1, 0, 0.483647,-99) , 
3, 3.36825, 1, 0, 0.509752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545548,-99) , 
NN(
0, 
0, 
-1, 0.722943, 0, -1, 0.478997,-99) , 
8, -3.46873, 1, 0, 0.488171,-99) , 
3, 4.38175, 1, 0, 0.505708,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0118214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490609,-99) , 
7, -0.131511, 0, 0, 0.49817,-99) , 
7, -1.70714, 1, 0, 0.499041,-99) , 
7, 2.42846, 0, 0, 0.499975,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0230326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491367,-99) , 
9, 0.639101, 1, 0, 0.500117,-99) , 
0, 0.492379, 1, 0, 0.505513,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0634012, 0, 1, 0.512382,-99) , 
NN(
0, 
0, 
-1, 0.499859, 1, -1, 0.490618,-99) , 
0, 0.504757, 0, 0, 0.492211,-99) , 
8, -1.4318, 0, 0, 0.495392,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0200734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540016,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49796, 1, 1, 0.537116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484938,-99) , 
6, -951.286, 0, 0, 0.493348,-99) , 
7, 2.1433, 0, 0, 0.495937,-99) , 
0, 0.505709, 0, 0, 0.498101,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0725118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479244,-99) , 
4, 0.999999, 0, 0, 0.511064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449844,-99) , 
8, -2.85218, 0, 0, 0.491971,-99) , 
4, 0.999977, 0, 0, 0.505138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427798,-99) , 
7, 0.155885, 0, 0, 0.473222,-99) , 
4, 0.999524, 0, 0, 0.502892,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0228886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.0255, 1, 1, 0.506759,-99) , 
NN(
0, 
0, 
-1, 0.497145, 0, -1, 0.480464,-99) , 
7, 1.857, 1, 0, 0.504449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481145,-99) , 
9, 0.412057, 1, 0, 0.502809,-99) , 
NN(
0, 
0, 
-1, -0.852717, 1, -1, 0.468963,-99) , 
7, 0.715724, 0, 0, 0.48101,-99) , 
2, -0.0709319, 0, 0, 0.500402,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0257576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484607,-99) , 
9, -0.113375, 1, 0, 0.526419,-99) , 
NN(
0, 
0, 
-1, -2.2588, 1, -1, 0.496015,-99) , 
7, 0.834608, 0, 0, 0.49972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48159,-99) , 
8, -1.18381, 0, 0, 0.493895,-99) , 
NN(
0, 
0, 
-1, -1.25087, 1, -1, 0.462882,-99) , 
7, 0.146517, 0, 0, 0.487698,-99) , 
8, -2.04378, 1, 0, 0.494742,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0214896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04083, 0, 1, 0.529878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491203,-99) , 
6, -951.286, 1, 0, 0.503733,-99) , 
7, -0.42851, 1, 0, 0.510539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493935,-99) , 
7, -0.832027, 0, 0, 0.512986,-99) , 
NN(
0, 
0, 
-1, 1.6139, 1, -1, 0.494268,-99) , 
9, -1.48573, 1, 0, 0.4972,-99) , 
0, 0.500948, 0, 0, 0.500802,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0355913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498129,-99) , 
0, 0.499036, 1, 0, 0.544698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488107,-99) , 
0, 0.503805, 1, 0, 0.512527,-99) , 
9, -2.0669, 1, 0, 0.515665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498591,-99) , 
7, 1.15783, 0, 0, 0.513251,-99) , 
NN(
0, 
0, 
-1, 1.57739, 1, -1, 0.482003,-99) , 
9, 0.405767, 1, 0, 0.491748,-99) , 
8, -1.97724, 1, 0, 0.506224,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0258418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0730265, 1, 1, 0.511666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469183,-99) , 
6, -951.286, 1, 0, 0.486982,-99) , 
0, 0.491424, 0, 0, 0.509582,-99) , 
NN(
0, 
0, 
-1, 0.146811, 0, -1, 0.482668,-99) , 
1, 0.00682455, 1, 0, 0.507261,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.031796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482328,-99) , 
4, 0.999977, 0, 0, 0.502502,-99) , 
NN(
0, 
0, 
-1, -2.24646, 1, -1, 0.46469,-99) , 
4, 0.999524, 0, 0, 0.500019,-99) , 
8, -4.02976, 1, 0, 0.502069,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0201183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
6, -951.286, 1, 0, 0.500152,-99) , 
0, 0.505709, 0, 0, 0.501998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468504,-99) , 
2, -0.139948, 1, 0, 0.49029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441891,-99) , 
0, 0.503803, 1, 0, 0.482963,-99) , 
2, -0.071946, 0, 0, 0.498821,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0106089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.202948, 1, 1, 0.502382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460985,-99) , 
4, 0.998571, 0, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465337,-99) , 
8, -0.176774, 1, 0, 0.499046,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0157174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496611,-99) , 
7, 1.85701, 0, 0, 0.499033,-99) , 
9, -2.26924, 1, 0, 0.500674,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.476763,-99) , 
9, 1.61567, 1, 0, 0.498957,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.024208);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48796,-99) , 
4, 0.999932, 0, 0, 0.505302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441167,-99) , 
7, 0.440286, 0, 0, 0.474248,-99) , 
4, 0.999524, 0, 0, 0.503136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450159,-99) , 
9, -2.42135, 1, 0, 0.477357,-99) , 
9, -1.97318, 0, 0, 0.501212,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.017082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483685,-99) , 
8, -0.910481, 1, 0, 0.526387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495022,-99) , 
2, -0.275605, 1, 0, 0.495882,-99) , 
2, 0.214156, 0, 0, 0.497225,-99) , 
7, 2.14284, 0, 0, 0.498863,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0291063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104002, 1, 1, 0.523879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488225,-99) , 
8, -0.234644, 0, 0, 0.494731,-99) , 
9, 0.444304, 1, 0, 0.504493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489768,-99) , 
7, 1.13882, 0, 0, 0.492701,-99) , 
8, -4.37308, 1, 0, 0.495039,-99) , 
8, -1.97724, 0, 0, 0.49879,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.013142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497513,-99) , 
9, 0.364484, 0, 0, 0.500484,-99) , 
9, -2.2486, 1, 0, 0.501886,-99) , 
NN(
0, 
0, 
-1, 0.206462, 1, -1, 0.47826,-99) , 
9, 1.67116, 1, 0, 0.500285,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0189655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.506367,-99) , 
NN(
0, 
0, 
-1, -0.220886, 1, -1, 0.469618,-99) , 
0, 0.490472, 0, 0, 0.504236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459515,-99) , 
1, 0.00921398, 1, 0, 0.501884,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0318327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0750925, 1, 1, 0.525961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475127,-99) , 
0, 0.50317, 1, 0, 0.496962,-99) , 
6, -951.286, 0, 0, 0.512573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487826,-99) , 
7, -0.141906, 0, 0, 0.505649,-99) , 
NN(
0, 
0, 
-1, -1.39891, 0, -1, 0.488627,-99) , 
6, -950.08, 1, 0, 0.496009,-99) , 
0, 0.500948, 0, 0, 0.500547,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0278121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23822, 1, 1, 0.53843,-99) , 
NN(
NN(
0, 
0, 
-1, -0.197561, 0, 1, 0.513291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490277,-99) , 
9, -0.534422, 1, 0, 0.495913,-99) , 
8, -2.79317, 1, 0, 0.501514,-99) , 
0, 0.490472, 1, 0, 0.503733,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0157596);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497064,-99) , 
2, -0.0710108, 1, 0, 0.49962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439534,-99) , 
8, -4.0297, 0, 0, 0.481685,-99) , 
7, -0.999845, 0, 0, 0.497475,-99) , 
0, 0.505709, 0, 0, 0.498784,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0308215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464275,-99) , 
3, 1.04724, 0, 0, 0.527912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491214,-99) , 
3, 3.34161, 1, 0, 0.518495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494088,-99) , 
6, -951.286, 0, 0, 0.512653,-99) , 
NN(
0, 
0, 
-1, -1.25459, 1, -1, 0.491676,-99) , 
1, -0.000764447, 1, 0, 0.500014,-99) , 
8, -0.697467, 0, 0, 0.502072,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0233521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489074,-99) , 
8, -2.10318, 0, 0, 0.509133,-99) , 
7, -0.428943, 1, 0, 0.518624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494404,-99) , 
0, 0.500978, 1, 0, 0.50671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490347,-99) , 
9, -0.949833, 1, 0, 0.496875,-99) , 
0, 0.495325, 0, 0, 0.503582,-99) , 
0, 0.503804, 0, 0, 0.5053,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0189528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499234,-99) , 
8, -1.54144, 1, 0, 0.51291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454673,-99) , 
7, -1.82047, 0, 0, 0.503286,-99) , 
9, 0.33768, 0, 0, 0.505868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46885,-99) , 
9, 2.20319, 1, 0, 0.504518,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0266657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.162878, 0, 1, 0.525879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49643,-99) , 
9, -0.199872, 0, 0, 0.505444,-99) , 
9, -1.06574, 1, 0, 0.509853,-99) , 
NN(
0, 
0, 
-1, -2.36609, 1, -1, 0.466387,-99) , 
8, -3.97861, 0, 0, 0.507149,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0214959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0622568, 1, 1, 0.527392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
0, 0.498182, 0, 0, 0.505072,-99) , 
0, 0.492378, 1, 0, 0.507686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471694,-99) , 
4, 0.999048, 0, 0, 0.506251,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0355291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29921, 1, 1, 0.537024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486484,-99) , 
9, 0.757507, 1, 0, 0.503902,-99) , 
9, -0.979277, 1, 0, 0.508103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483664,-99) , 
6, -951.286, 0, 0, 0.500917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375997,-99) , 
9, -1.95436, 1, 0, 0.466783,-99) , 
8, -3.65601, 0, 0, 0.488747,-99) , 
7, -0.428484, 0, 0, 0.503094,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0369193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47781,-99) , 
7, -0.713983, 0, 0, 0.51017,-99) , 
NN(
0, 
0, 
-1, 0.755867, 1, -1, 0.468442,-99) , 
6, -1.03569, 0, 0, 0.502006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495122,-99) , 
0, 0.497133, 1, 0, 0.506609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482392,-99) , 
0, 0.492377, 1, 0, 0.485535,-99) , 
9, -1.26862, 1, 0, 0.489232,-99) , 
6, -951.286, 0, 0, 0.496352,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0143877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485584,-99) , 
4, 0.999977, 0, 0, 0.520544,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.497903,-99) , 
0, 0.503804, 0, 0, 0.500451,-99) , 
NN(
0, 
0, 
-1, 0.155885, 0, -1, 0.466111,-99) , 
4, 0.999524, 0, 0, 0.498117,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0236063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498094,-99) , 
3, 1.03567, 0, 0, 0.523542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
3, 3.91181, 1, 0, 0.516194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487225,-99) , 
0, 0.494077, 0, 0, 0.500223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478177,-99) , 
8, -1.41504, 0, 0, 0.485462,-99) , 
0, 0.49995, 1, 0, 0.496867,-99) , 
0, 0.502852, 0, 0, 0.499873,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0102737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.274882, 0, 1, 0.503898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469378,-99) , 
2, -0.21475, 0, 0, 0.502298,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0224231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492323,-99) , 
7, -1.28789, 0, 0, 0.518028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494581,-99) , 
8, -1.13038, 1, 0, 0.507078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493702,-99) , 
9, -1.60845, 1, 0, 0.496779,-99) , 
9, 0.450804, 0, 0, 0.499727,-99) , 
9, -1.95166, 1, 0, 0.501059,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0145535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49812, 1, 1, 0.537475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478411,-99) , 
4, 0.999887, 0, 0, 0.499441,-99) , 
7, 2.14283, 0, 0, 0.501585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453851,-99) , 
9, -0.906096, 1, 0, 0.476007,-99) , 
4, 0.999524, 0, 0, 0.499842,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0251751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
7, 0.429492, 1, 0, 0.507915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489004,-99) , 
3, 4.00669, 0, 0, 0.494311,-99) , 
8, -2.16059, 0, 0, 0.500539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458669,-99) , 
2, 0.216008, 1, 0, 0.498599,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0111664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434946, 1, 1, 0.503919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463552,-99) , 
3, 6.99828, 1, 0, 0.502725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467968,-99) , 
3, 8.62065, 1, 0, 0.501827,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0143572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482736,-99) , 
2, 0.194222, 1, 0, 0.50261,-99) , 
2, -0.213808, 1, 0, 0.503886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493578,-99) , 
7, 0.161966, 1, 0, 0.502501,-99) , 
NN(
0, 
0, 
-1, 0.504659, 1, -1, 0.471,-99) , 
0, 0.505437, 0, 0, 0.486406,-99) , 
0, 0.503804, 1, 0, 0.501906,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0303143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46121,-99) , 
7, -1.47585, 0, 0, 0.51474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466644,-99) , 
2, -0.0676659, 0, 0, 0.496015,-99) , 
1, 0.000424074, 0, 0, 0.504877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493263,-99) , 
0, 0.496185, 1, 0, 0.501801,-99) , 
NN(
0, 
0, 
-1, -1.51724, 0, -1, 0.470975,-99) , 
7, 1.47627, 0, 0, 0.488588,-99) , 
7, 1.00004, 1, 0, 0.500384,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0335304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48689,-99) , 
4, 0.999909, 0, 0, 0.523932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481699,-99) , 
4, 0.999524, 0, 0, 0.517269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486849,-99) , 
8, -1.70284, 1, 0, 0.498968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477988,-99) , 
8, -3.02047, 1, 0, 0.488293,-99) , 
9, -0.20129, 0, 0, 0.493118,-99) , 
2, 0.0666221, 0, 0, 0.497559,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.012405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546815,-99) , 
NN(
NN(
0, 
0, 
-1, 1.50947, 1, 1, 0.523331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
8, -3.78848, 1, 0, 0.500824,-99) , 
8, -0.697467, 0, 0, 0.503025,-99) , 
7, 2.42843, 0, 0, 0.504408,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0290544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.975559, 1, 1, 0.508811,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.476007,-99) , 
0, 0.503804, 1, 0, 0.505156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524444,-99) , 
NN(
0, 
0, 
-1, -1.04074, 0, -1, 0.473496,-99) , 
0, 0.503805, 0, 0, 0.479518,-99) , 
7, -0.428476, 0, 0, 0.498615,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0283825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470906,-99) , 
8, -0.670422, 1, 0, 0.50932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483726,-99) , 
0, 0.500209, 0, 0, 0.495403,-99) , 
0, 0.49741, 1, 0, 0.501987,-99) , 
NN(
0, 
0, 
-1, -2.55546, 1, -1, 0.473767,-99) , 
0, 0.504756, 1, 0, 0.499769,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0304932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483171,-99) , 
9, 1.53307, 0, 0, 0.499818,-99) , 
8, -1.20238, 1, 0, 0.517665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494407,-99) , 
9, -0.881799, 1, 0, 0.506999,-99) , 
NN(
0, 
0, 
-1, -1.53337, 1, -1, 0.486279,-99) , 
0, 0.493329, 1, 0, 0.489669,-99) , 
7, 1.85712, 0, 0, 0.492219,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0167485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.132736, 0, 1, 0.526188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486212,-99) , 
0, 0.499859, 1, 0, 0.497486,-99) , 
0, 0.504756, 0, 0, 0.499604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460937,-99) , 
9, 2.22529, 1, 0, 0.498306,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0154191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.132735, 1, 1, 0.502748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475553,-99) , 
2, 0.0280936, 0, 0, 0.48764,-99) , 
8, -3.28961, 0, 0, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461323,-99) , 
2, -0.214379, 0, 0, 0.498273,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0192863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499611,-99) , 
0, 0.49605, 1, 0, 0.503769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452492,-99) , 
6, -951.286, 0, 0, 0.48498,-99) , 
0, 0.491424, 0, 0, 0.502098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481011,-99) , 
7, -0.804416, 0, 0, 0.494777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460308,-99) , 
8, -3.45542, 1, 0, 0.487436,-99) , 
8, -3.30369, 0, 0, 0.49949,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_8_12_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_8_12_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_8_12_noPCts *ReadBDT_maker_LHC19c2a_8_12_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_8_12_noPCts(theInpVar);
  }
}
