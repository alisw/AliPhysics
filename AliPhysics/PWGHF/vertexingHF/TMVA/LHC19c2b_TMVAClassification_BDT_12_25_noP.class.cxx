#include "LHC19c2b_TMVAClassification_BDT_12_25_noP.class.h"

double ReadBDT_LHC19c2b_12_25_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_12_25_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.882691984983817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.836751, 0, 1, 0.860104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29405,-99) , 
10, 0.449003, 1, 0, 0.7922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177693,-99) , 
5, 0.863829, 1, 0, 0.309222,-99) , 
NN(
0, 
0, 
-1, 1.49095, 1, -1, 0.0497796,-99) , 
8, 0.737311, 1, 0, 0.142463,-99) , 
5, 0.714269, 1, 0, 0.501938,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.753134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2868, 1, 1, 0.852768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297067,-99) , 
7, -951.286, 0, 0, 0.426021,-99) , 
5, -0.768692, 0, 0, 0.77268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300093,-99) , 
5, 0.76406, 1, 0, 0.385313,-99) , 
NN(
0, 
0, 
-1, 0.818609, 1, -1, 0.0926526,-99) , 
8, 0.768007, 1, 0, 0.212774,-99) , 
5, 0.619025, 1, 0, 0.49298,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.574171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.754972, 0, 1, 0.807845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330328,-99) , 
10, 0.630477, 1, 0, 0.468554,-99) , 
10, -0.197782, 1, 0, 0.715491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334762,-99) , 
8, -0.171413, 1, 0, 0.418482,-99) , 
NN(
0, 
0, 
-1, 1.58332, 1, -1, 0.113881,-99) , 
8, 0.7131, 1, 0, 0.236576,-99) , 
5, 0.714283, 1, 0, 0.499192,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.472983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362372,-99) , 
5, -0.827441, 0, 0, 0.686041,-99) , 
NN(
0, 
0, 
-1, 0.763024, 1, -1, 0.388122,-99) , 
10, -0.155162, 1, 0, 0.59793,-99) , 
NN(
0, 
0, 
-1, 1.28371, 1, -1, 0.217202,-99) , 
5, 0.809508, 1, 0, 0.46221,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.404259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28656, 1, 1, 0.72958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372816,-99) , 
5, -0.896269, 0, 0, 0.45694,-99) , 
5, -0.78218, 0, 0, 0.670489,-99) , 
NN(
0, 
0, 
-1, 1.5799, 1, -1, 0.316988,-99) , 
5, 0.523785, 1, 0, 0.473038,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.356582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441689,-99) , 
5, -0.727888, 0, 0, 0.609742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341938,-99) , 
5, 0.904685, 1, 0, 0.562898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.13444,-99) , 
5, 0.238255, 1, 0, 0.216394,-99) , 
8, 1.5719, 1, 0, 0.487373,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.297576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494259,-99) , 
5, -0.69162, 0, 0, 0.651331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.702964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463665,-99) , 
8, -0.958164, 1, 0, 0.48858,-99) , 
5, 0.618998, 1, 0, 0.578358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378571,-99) , 
6, 0.00298179, 0, 0, 0.44564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.104543,-99) , 
5, 0.809526, 1, 0, 0.286827,-99) , 
8, 1.28604, 1, 0, 0.496902,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.269835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523769, 0, 1, 0.646795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409944,-99) , 
5, 0.918221, 1, 0, 0.514754,-99) , 
5, 0.428494, 1, 0, 0.576934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380565,-99) , 
5, 0.378611, 1, 0, 0.449526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.130039,-99) , 
5, 0.809536, 1, 0, 0.298916,-99) , 
8, 1.28609, 1, 0, 0.499652,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.289015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.455842, 0, 1, 0.670725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399264,-99) , 
8, 0.699908, 1, 0, 0.495141,-99) , 
5, 0.428456, 1, 0, 0.569706,-99) , 
NN(
0, 
0, 
-1, 0.619429, 1, -1, 0.227436,-99) , 
8, 1.85568, 1, 0, 0.512563,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.202129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.455697, 0, 1, 0.624442,-99) , 
NN(
0, 
0, 
-1, 1.25145, 1, -1, 0.460981,-99) , 
5, 0.428585, 1, 0, 0.527771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208811,-99) , 
10, 0.835691, 1, 0, 0.489913,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.182537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470681,-99) , 
5, 0.428492, 1, 0, 0.520474,-99) , 
NN(
0, 
0, 
-1, 0.204602, 1, -1, 0.368267,-99) , 
2, 0.0823977, 1, 0, 0.496664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.182261,-99) , 
10, 0.95171, 1, 0, 0.467649,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.233919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458422,-99) , 
5, 0.904736, 1, 0, 0.567919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267959,-99) , 
2, 0.192465, 1, 0, 0.550722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.186371,-99) , 
10, 0.961669, 1, 0, 0.513298,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.177176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454986,-99) , 
5, -0.523669, 0, 0, 0.546745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401355,-99) , 
10, -1.45878, 1, 0, 0.443026,-99) , 
0, 0.500947, 1, 0, 0.517291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299377,-99) , 
8, 1.85748, 1, 0, 0.487891,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.171354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470249,-99) , 
6, 0.00426051, 0, 0, 0.507179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268062,-99) , 
6, 0.0127885, 1, 0, 0.49587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228721,-99) , 
8, 2.1431, 1, 0, 0.470953,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.145844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473433,-99) , 
10, -0.348649, 1, 0, 0.529275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366789,-99) , 
6, 0.00284583, 0, 0, 0.411,-99) , 
2, -0.0649142, 0, 0, 0.508096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259857,-99) , 
10, 0.957881, 1, 0, 0.486581,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.186445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423136,-99) , 
2, 0.0741869, 1, 0, 0.54339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366648,-99) , 
6, 0.00251033, 0, 0, 0.423853,-99) , 
2, -0.0737556, 0, 0, 0.525081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26007,-99) , 
10, 1.0017, 1, 0, 0.503027,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.149942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366735,-99) , 
9, -4.82371, 0, 0, 0.528298,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.365694,-99) , 
2, -0.0994913, 0, 0, 0.507056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266128,-99) , 
8, 2.1431, 1, 0, 0.484571,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.162582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409506,-99) , 
5, -0.809419, 0, 0, 0.533073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316333,-99) , 
9, -2.34398, 0, 0, 0.445873,-99) , 
8, 0.918723, 1, 0, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284393,-99) , 
8, 2.14293, 1, 0, 0.484452,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.192511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408553,-99) , 
5, -0.569192, 0, 0, 0.51331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264758,-99) , 
4, 0.999906, 0, 0, 0.496108,-99) , 
NN(
0, 
0, 
-1, 1.29773, 1, -1, 0.380082,-99) , 
5, 0.809506, 1, 0, 0.457101,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.189836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440148,-99) , 
6, 0.00274305, 0, 0, 0.491729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286613,-99) , 
6, 0.011521, 1, 0, 0.48094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296099,-99) , 
8, 2.14289, 1, 0, 0.46511,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.173476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493271,-99) , 
5, 0.523822, 1, 0, 0.546856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326425,-99) , 
9, -4.02421, 0, 0, 0.457558,-99) , 
2, -0.0184968, 0, 0, 0.515317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289736,-99) , 
9, -2.31543, 0, 0, 0.49218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232697,-99) , 
5, 0.809216, 1, 0, 0.395471,-99) , 
8, 1.28609, 1, 0, 0.482179,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.180983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31491,-99) , 
2, -0.177755, 0, 0, 0.54506,-99) , 
NN(
0, 
0, 
-1, -0.427836, 0, -1, 0.434545,-99) , 
2, 0.040277, 1, 0, 0.515826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406953,-99) , 
2, -0.00119166, 0, 0, 0.48104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256123,-99) , 
5, 0.714304, 1, 0, 0.369765,-99) , 
8, 1.57042, 1, 0, 0.487295,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0775136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494794,-99) , 
9, -4.38445, 1, 0, 0.505752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387507,-99) , 
10, 0.603873, 1, 0, 0.4894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308056,-99) , 
10, -2.80305, 0, 0, 0.478587,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.208617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333376, 1, 1, 0.610137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403685,-99) , 
8, -0.42269, 1, 0, 0.446768,-99) , 
7, 0.146832, 0, 0, 0.512729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413261,-99) , 
10, -1.45757, 1, 0, 0.437973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286491,-99) , 
0, 0.492377, 0, 0, 0.414863,-99) , 
7, -951.286, 0, 0, 0.475507,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.151912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471739,-99) , 
0, 0.495102, 0, 0, 0.529028,-99) , 
NN(
0, 
0, 
-1, -3.52024, 0, -1, 0.421954,-99) , 
0, 0.501901, 1, 0, 0.504582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334591,-99) , 
9, -2.22929, 0, 0, 0.4921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295075,-99) , 
5, 0.809521, 1, 0, 0.418161,-99) , 
8, 1.28615, 1, 0, 0.481554,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.154166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486434,-99) , 
10, -0.171248, 1, 0, 0.543242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354066,-99) , 
8, 0.203342, 1, 0, 0.459457,-99) , 
9, -2.69378, 0, 0, 0.4896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337454,-99) , 
10, 0.85551, 1, 0, 0.474424,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.126291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444637,-99) , 
2, -0.0813434, 0, 0, 0.533626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383505,-99) , 
10, 0.95282, 1, 0, 0.520512,-99) , 
NN(
0, 
0, 
-1, -2.99791, 1, -1, 0.331945,-99) , 
10, -2.71153, 0, 0, 0.508682,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.106948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809386, 1, 1, 0.534461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390345,-99) , 
0, 0.503261, 1, 0, 0.427444,-99) , 
0, 0.5019, 1, 0, 0.509771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36303,-99) , 
10, 0.85551, 1, 0, 0.496427,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.140832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00614, 1, 1, 0.52386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40495,-99) , 
5, 0.904744, 1, 0, 0.496654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421172,-99) , 
8, -0.454061, 1, 0, 0.531862,-99) , 
NN(
0, 
0, 
-1, 0.15312, 1, -1, 0.381188,-99) , 
0, 0.49619, 1, 0, 0.424495,-99) , 
9, -3.297, 0, 0, 0.469089,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.197276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498693,-99) , 
5, 0.795806, 1, 0, 0.639531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331347,-99) , 
3, 2.06503, 1, 0, 0.458175,-99) , 
5, -0.428523, 0, 0, 0.577702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247548,-99) , 
10, -2.82047, 0, 0, 0.514218,-99) , 
NN(
0, 
0, 
-1, -2.63801, 0, -1, 0.425609,-99) , 
8, 0.145477, 1, 0, 0.458476,-99) , 
1, -0.00165388, 1, 0, 0.487184,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0794572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489376,-99) , 
1, 0.00545767, 0, 0, 0.498973,-99) , 
NN(
0, 
0, 
-1, 0.504529, 0, -1, 0.383962,-99) , 
0, 0.503804, 1, 0, 0.484176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313693,-99) , 
2, 0.209197, 1, 0, 0.475222,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.131692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438958,-99) , 
0, 0.5019, 1, 0, 0.51644,-99) , 
NN(
0, 
0, 
-1, -3.02606, 0, -1, 0.438497,-99) , 
2, -0.0350475, 0, 0, 0.496112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151934,-99) , 
8, -1.41861, 1, 0, 0.336183,-99) , 
10, -2.51668, 0, 0, 0.481291,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.203645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.95161, 0, 1, 0.57079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299133,-99) , 
5, 0.619028, 1, 0, 0.447266,-99) , 
10, 0.335516, 1, 0, 0.539962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338237,-99) , 
8, -0.794653, 1, 0, 0.479976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247391,-99) , 
5, -0.617822, 0, 0, 0.440033,-99) , 
10, -1.7874, 0, 0, 0.518027,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0888532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99889, 1, 1, 0.518449,-99) , 
NN(
0, 
0, 
-1, -0.0421403, 0, -1, 0.450848,-99) , 
0, 0.497138, 1, 0, 0.476799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332106,-99) , 
2, 0.195755, 1, 0, 0.469101,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0968456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459967,-99) , 
9, -2.65613, 0, 0, 0.487394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401492,-99) , 
10, 0.895552, 1, 0, 0.479959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356413,-99) , 
2, 0.207353, 1, 0, 0.473816,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0762158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385604,-99) , 
5, -0.904637, 0, 0, 0.502598,-99) , 
9, -4.23566, 1, 0, 0.513105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224866,-99) , 
8, -1.44326, 1, 0, 0.39017,-99) , 
10, -2.51857, 0, 0, 0.502825,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.130364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339852,-99) , 
7, -1.2794, 0, 0, 0.527509,-99) , 
NN(
0, 
0, 
-1, 0.00942951, 1, -1, 0.447246,-99) , 
7, -951.286, 0, 0, 0.496982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326162,-99) , 
10, -2.94585, 0, 0, 0.489984,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.168668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353068,-99) , 
10, -2.46194, 0, 0, 0.561046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294459,-99) , 
8, -0.171817, 0, 0, 0.415394,-99) , 
5, -0.795921, 0, 0, 0.513948,-99) , 
NN(
NN(
0, 
0, 
-1, -1.14258, 1, 1, 0.576283,-99) , 
NN(
0, 
0, 
-1, -1.77689, 0, -1, 0.429179,-99) , 
8, -0.707521, 1, 0, 0.446164,-99) , 
5, 0.428557, 1, 0, 0.473173,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0650563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47839, 0, 1, 0.513448,-99) , 
NN(
0, 
0, 
-1, -1.59598, 1, -1, 0.376016,-99) , 
10, -2.57802, 0, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365093,-99) , 
10, 0.895552, 1, 0, 0.490005,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.114201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46637,-99) , 
1, 0.00309911, 0, 0, 0.485541,-99) , 
9, -1.62179, 0, 0, 0.497664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3847,-99) , 
10, 0.961669, 1, 0, 0.488505,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.107367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460887,-99) , 
9, -2.71191, 0, 0, 0.487019,-99) , 
NN(
0, 
0, 
-1, 0.714531, 1, -1, 0.415976,-99) , 
8, 1.47676, 1, 0, 0.471714,-99) , 
8, -1.56983, 1, 0, 0.477589,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.110482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419736,-99) , 
10, -2.63249, 0, 0, 0.541538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386625,-99) , 
9, -2.41105, 0, 0, 0.466467,-99) , 
10, -0.629676, 1, 0, 0.50576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335883,-99) , 
3, 8.20208, 1, 0, 0.496491,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.147272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.150645, 1, 1, 0.643569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396377,-99) , 
8, 0.12341, 0, 0, 0.471383,-99) , 
5, -0.410329, 0, 0, 0.534092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469093,-99) , 
9, -1.80214, 0, 0, 0.486234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344389,-99) , 
10, 0.532585, 1, 0, 0.467709,-99) , 
5, 0.238144, 1, 0, 0.489711,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0943114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502853, 0, 1, 0.546036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416718,-99) , 
9, -2.41929, 0, 0, 0.477843,-99) , 
10, -0.707594, 1, 0, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362817,-99) , 
3, 7.04715, 1, 0, 0.500674,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0698697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.734499,-99) , 
NN(
0, 
0, 
-1, -2.4911, 0, -1, 0.479357,-99) , 
8, -1.56983, 1, 0, 0.487807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265148,-99) , 
1, 0.010139, 1, 0, 0.480118,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.113473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484543,-99) , 
10, -1.15022, 1, 0, 0.534169,-99) , 
NN(
0, 
0, 
-1, -0.0153422, 1, -1, 0.45549,-99) , 
1, -0.00124541, 1, 0, 0.480392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311743,-99) , 
10, -2.80305, 0, 0, 0.47036,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.140463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238002, 0, 1, 0.721376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413445,-99) , 
5, -0.428351, 0, 0, 0.516231,-99) , 
1, -0.00408005, 1, 0, 0.530966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384215,-99) , 
9, -1.85856, 0, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37835,-99) , 
5, 0.714272, 1, 0, 0.450453,-99) , 
10, 0.119413, 1, 0, 0.512488,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0706359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417291,-99) , 
10, 0.0420949, 1, 0, 0.497829,-99) , 
9, -1.46981, 0, 0, 0.505152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399996,-99) , 
10, 0.85551, 1, 0, 0.495841,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.121953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484232,-99) , 
5, 0.714148, 1, 0, 0.613887,-99) , 
NN(
0, 
0, 
-1, 0.238173, 0, -1, 0.463826,-99) , 
6, 0.00314676, 0, 0, 0.497473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342008,-99) , 
6, 0.0110203, 1, 0, 0.489804,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0489722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
8, -1.03297, 1, 0, 0.508434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3426,-99) , 
10, -3.03696, 0, 0, 0.502693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367855,-99) , 
5, -0.904763, 0, 0, 0.492802,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.137573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19962, 1, 1, 0.540856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349484,-99) , 
8, -0.289086, 0, 0, 0.426151,-99) , 
5, -0.714158, 0, 0, 0.524919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4273,-99) , 
5, 0.714294, 1, 0, 0.518222,-99) , 
NN(
0, 
0, 
-1, -0.238235, 1, -1, 0.36833,-99) , 
9, -1.77265, 0, 0, 0.450286,-99) , 
10, -0.0778726, 1, 0, 0.503305,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.156634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461506,-99) , 
5, -0.71361, 0, 0, 0.654523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265852,-99) , 
8, -1.29823, 1, 0, 0.478165,-99) , 
10, -2.42208, 0, 0, 0.583301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452509,-99) , 
7, -951.286, 0, 0, 0.509652,-99) , 
NN(
0, 
0, 
-1, -3.36984, 1, -1, 0.417671,-99) , 
9, -3.14825, 0, 0, 0.484589,-99) , 
8, -0.427382, 1, 0, 0.503422,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0686464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69305, 0, 1, 0.522521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410653,-99) , 
10, 0.988876, 1, 0, 0.514338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272358,-99) , 
8, -1.51333, 1, 0, 0.407715,-99) , 
10, -2.54945, 0, 0, 0.506378,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0802621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494092,-99) , 
5, 0.233522, 0, 0, 0.516209,-99) , 
0, 0.49143, 1, 0, 0.526803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395027,-99) , 
5, 0.945573, 1, 0, 0.480937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370611,-99) , 
10, -1.98888, 0, 0, 0.463798,-99) , 
5, 0.619036, 1, 0, 0.49335,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.109089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443534,-99) , 
5, -0.618899, 0, 0, 0.531072,-99) , 
NN(
0, 
0, 
-1, -1.78355, 0, -1, 0.459331,-99) , 
6, 0.00182596, 0, 0, 0.493674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332163,-99) , 
6, 0.0127885, 1, 0, 0.487736,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.138063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455218,-99) , 
5, -0.877564, 0, 0, 0.557824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476469,-99) , 
8, -0.437172, 1, 0, 0.486701,-99) , 
5, -0.142866, 1, 0, 0.503911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.705302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342468,-99) , 
9, -4.83486, 0, 0, 0.467902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228326,-99) , 
8, -1.02268, 1, 0, 0.378815,-99) , 
10, -2.1324, 0, 0, 0.485723,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.154883);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477728,-99) , 
10, -2.10945, 0, 0, 0.579686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372189,-99) , 
8, 0.174471, 1, 0, 0.440781,-99) , 
7, -0.707412, 0, 0, 0.54079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484351,-99) , 
5, 0.0477314, 1, 0, 0.510679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336911,-99) , 
10, -0.930445, 0, 0, 0.422977,-99) , 
3, 3.19812, 1, 0, 0.483017,-99) , 
7, -951.286, 0, 0, 0.518675,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0944262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488796,-99) , 
7, -951.286, 0, 0, 0.611633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255799,-99) , 
10, -1.89112, 0, 0, 0.506654,-99) , 
8, -0.694129, 1, 0, 0.519369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38166,-99) , 
10, -3.0293, 0, 0, 0.514913,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0988779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.113325, 1, 1, 0.585813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465315,-99) , 
8, -1.17094, 1, 0, 0.474916,-99) , 
9, -1.88064, 0, 0, 0.490194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389341,-99) , 
10, 0.99234, 1, 0, 0.483353,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0561059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492597,-99) , 
5, -0.523562, 0, 0, 0.607289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321784,-99) , 
10, -1.93338, 0, 0, 0.492528,-99) , 
8, -0.833653, 1, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379118,-99) , 
10, -2.87726, 0, 0, 0.497449,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.105689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618979, 0, 1, 0.608987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427105,-99) , 
2, 0.067462, 1, 0, 0.568833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483494,-99) , 
10, -1.13403, 1, 0, 0.498768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296916,-99) , 
10, -1.59804, 0, 0, 0.483579,-99) , 
8, -0.427612, 1, 0, 0.501098,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0436175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497951,-99) , 
9, -1.88266, 0, 0, 0.510477,-99) , 
1, -0.00766176, 1, 0, 0.514822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382814,-99) , 
0, 0.489524, 0, 0, 0.50975,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0832162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476765,-99) , 
8, 0.012418, 0, 0, 0.575399,-99) , 
10, -1.83867, 1, 0, 0.596809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437293,-99) , 
5, 0.904743, 1, 0, 0.491017,-99) , 
8, -1.2849, 1, 0, 0.498908,-99) , 
1, -0.00229635, 1, 0, 0.51715,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0700517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47062,-99) , 
5, -0.619079, 0, 0, 0.517072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405222,-99) , 
3, 8.18935, 1, 0, 0.510958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354927,-99) , 
1, 0.0103789, 1, 0, 0.506151,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.100862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475388,-99) , 
10, -2.86784, 0, 0, 0.619694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472087,-99) , 
8, 0.143407, 1, 0, 0.49344,-99) , 
NN(
0, 
0, 
-1, -2.20035, 0, -1, 0.353137,-99) , 
10, -2.0184, 0, 0, 0.484692,-99) , 
8, -0.999272, 1, 0, 0.495722,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.141423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537336, 0, 1, 0.627197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446612,-99) , 
8, 1.27314, 0, 0, 0.480331,-99) , 
3, 1.56909, 0, 0, 0.556115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455435,-99) , 
10, -1.26929, 0, 0, 0.504496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425785,-99) , 
10, 0.361088, 1, 0, 0.491373,-99) , 
5, 0.619057, 1, 0, 0.522013,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0822958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390819,-99) , 
10, -2.3945, 0, 0, 0.518044,-99) , 
8, -1.56998, 1, 0, 0.52389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348603,-99) , 
2, -0.206407, 0, 0, 0.515072,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0956294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.739911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440928,-99) , 
9, -4.70394, 1, 0, 0.535863,-99) , 
0, 0.497132, 1, 0, 0.606359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397173,-99) , 
10, 0.974888, 1, 0, 0.505133,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.4373,-99) , 
9, -3.28203, 0, 0, 0.484606,-99) , 
9, -4.37573, 1, 0, 0.494262,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.137037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483388,-99) , 
3, 3.1244, 1, 0, 0.55768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40682,-99) , 
0, 0.491429, 0, 0, 0.544014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471405,-99) , 
7, 0.553956, 0, 0, 0.510098,-99) , 
NN(
0, 
0, 
-1, -1.60605, 0, -1, 0.31745,-99) , 
7, -1.27966, 0, 0, 0.48528,-99) , 
7, -951.286, 1, 0, 0.50635,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0837323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.47323, 0, 1, 0.591174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452601,-99) , 
9, -3.30085, 1, 0, 0.572242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347076,-99) , 
0, 0.490473, 0, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, 0.429626, 0, -1, 0.408657,-99) , 
2, 0.0741566, 1, 0, 0.483916,-99) , 
8, -0.427469, 1, 0, 0.501548,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.137496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4838,-99) , 
9, -1.73831, 1, 0, 0.567651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466388,-99) , 
3, 3.29018, 0, 0, 0.495478,-99) , 
8, 0.428102, 0, 0, 0.530609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406865,-99) , 
5, -0.713998, 0, 0, 0.522908,-99) , 
NN(
0, 
0, 
-1, -1.68698, 0, -1, 0.374004,-99) , 
7, -0.708907, 0, 0, 0.477691,-99) , 
7, -951.286, 1, 0, 0.496598,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.134046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422363,-99) , 
10, -0.701105, 1, 0, 0.518992,-99) , 
10, 0.4097, 0, 0, 0.541046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459851,-99) , 
8, -0.75515, 1, 0, 0.472585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336399,-99) , 
10, -2.80607, 0, 0, 0.46442,-99) , 
5, 0.142822, 1, 0, 0.487461,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0611478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447746,-99) , 
5, -0.142835, 0, 0, 0.58047,-99) , 
NN(
0, 
0, 
-1, -1.92344, 0, -1, 0.485203,-99) , 
8, -0.998607, 1, 0, 0.493873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34652,-99) , 
0, 0.489522, 0, 0, 0.487164,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.118436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505619, 1, 1, 0.616629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406602,-99) , 
0, 0.501493, 1, 0, 0.520003,-99) , 
0, 0.503805, 0, 0, 0.529162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444139,-99) , 
9, -1.96135, 0, 0, 0.495842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322014,-99) , 
0, 0.492393, 0, 0, 0.471925,-99) , 
10, -0.364011, 1, 0, 0.506933,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0760297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28846, 0, 1, 0.539679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472809,-99) , 
8, -0.998736, 1, 0, 0.483095,-99) , 
2, 0.031136, 0, 0, 0.495591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398146,-99) , 
2, 0.187629, 1, 0, 0.49041,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.11888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.031358, 1, 1, 0.620451,-99) , 
NN(
NN(
0, 
0, 
-1, -1.43166, 0, 1, 0.546499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40754,-99) , 
9, -2.4141, 0, 0, 0.481337,-99) , 
8, 0.43153, 1, 0, 0.510233,-99) , 
1, -0.00408005, 1, 0, 0.519461,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.105403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450561,-99) , 
9, -3.48821, 1, 0, 0.585955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372161,-99) , 
10, -1.35032, 0, 0, 0.487676,-99) , 
8, -0.402922, 1, 0, 0.50199,-99) , 
NN(
0, 
0, 
-1, -1.47923, 1, -1, 0.315941,-99) , 
10, -2.51857, 0, 0, 0.485486,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.12252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440336,-99) , 
5, -0.523569, 0, 0, 0.512452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344103,-99) , 
5, 0.809519, 1, 0, 0.455592,-99) , 
10, 0.0435291, 1, 0, 0.494453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365965,-99) , 
5, -0.237201, 0, 0, 0.521195,-99) , 
NN(
0, 
0, 
-1, -2.31919, 0, -1, 0.369704,-99) , 
8, -1.23625, 1, 0, 0.415804,-99) , 
10, -1.7853, 0, 0, 0.477812,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.136258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45188,-99) , 
5, -0.428443, 0, 0, 0.617271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306791,-99) , 
8, -1.53099, 1, 0, 0.445694,-99) , 
10, -2.55923, 0, 0, 0.558055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458573,-99) , 
0, 0.499042, 0, 0, 0.486994,-99) , 
NN(
0, 
0, 
-1, -0.248111, 1, -1, 0.336591,-99) , 
10, -1.54731, 0, 0, 0.473165,-99) , 
8, -0.427493, 1, 0, 0.489698,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.130476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480077,-99) , 
3, 2.29449, 1, 0, 0.6028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372231,-99) , 
8, 0.0273895, 0, 0, 0.492369,-99) , 
9, -3.34809, 1, 0, 0.52985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458103,-99) , 
1, -0.000403889, 1, 0, 0.493702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37436,-99) , 
5, 0.945552, 1, 0, 0.46646,-99) , 
5, 0.619028, 1, 0, 0.495765,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.104896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424148,-99) , 
10, -2.60723, 0, 0, 0.531914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472012,-99) , 
8, -0.264122, 1, 0, 0.478878,-99) , 
8, -0.427382, 1, 0, 0.489378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429137,-99) , 
5, 0.45595, 1, 0, 0.456991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320875,-99) , 
5, -0.428617, 0, 0, 0.422206,-99) , 
2, 0.067462, 1, 0, 0.477432,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.14288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424065,-99) , 
10, -2.59969, 0, 0, 0.543045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408525,-99) , 
5, -0.863638, 1, 0, 0.458069,-99) , 
5, -0.428351, 0, 0, 0.519966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460929,-99) , 
10, 0.0910441, 1, 0, 0.542199,-99) , 
NN(
0, 
0, 
-1, -0.812983, 0, -1, 0.435076,-99) , 
5, -0.0474027, 1, 0, 0.458272,-99) , 
8, 0.429213, 1, 0, 0.486703,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0960902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499039, 1, 1, 0.691842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432731,-99) , 
5, 0.713334, 1, 0, 0.580602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471074,-99) , 
5, 0.714257, 0, 0, 0.500056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368248,-99) , 
10, -1.95132, 0, 0, 0.494223,-99) , 
9, -4.06066, 1, 0, 0.504642,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0618826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.80219, 0, 1, 0.632194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494157,-99) , 
5, -0.428539, 0, 0, 0.588555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428204,-99) , 
9, -3.70266, 0, 0, 0.497209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315702,-99) , 
10, -2.07672, 0, 0, 0.488179,-99) , 
8, -0.998804, 1, 0, 0.496707,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0915209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433418,-99) , 
8, 1.07931, 0, 0, 0.588695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449804,-99) , 
10, -0.248029, 1, 0, 0.512903,-99) , 
9, -1.98268, 0, 0, 0.521454,-99) , 
NN(
0, 
0, 
-1, 0.52386, 1, -1, 0.438786,-99) , 
10, 0.51739, 1, 0, 0.509,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.128817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76075, 1, 1, 0.617346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40864,-99) , 
2, 0.0130934, 1, 0, 0.494633,-99) , 
5, 0.428624, 1, 0, 0.547651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424395,-99) , 
3, 3.35005, 1, 0, 0.488183,-99) , 
NN(
0, 
0, 
-1, -0.193792, 1, -1, 0.411356,-99) , 
10, -1.28859, 0, 0, 0.46096,-99) , 
1, 0.00145893, 0, 0, 0.484476,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0650545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.332778, 1, 1, 0.616962,-99) , 
NN(
0, 
0, 
-1, -2.07081, 0, -1, 0.4744,-99) , 
9, -4.32773, 1, 0, 0.485138,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0948544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0798403, 1, 1, 0.583431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468977,-99) , 
5, 0.809407, 1, 0, 0.535171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387361,-99) , 
5, -0.334031, 0, 0, 0.566942,-99) , 
NN(
0, 
0, 
-1, -4.2603, 0, -1, 0.469508,-99) , 
8, -1.19888, 1, 0, 0.478035,-99) , 
9, -2.16914, 0, 0, 0.493799,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.089616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714239, 1, 1, 0.55377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33701,-99) , 
10, -0.794163, 0, 0, 0.500781,-99) , 
8, 0.492819, 1, 0, 0.524815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398672,-99) , 
10, -2.80305, 0, 0, 0.519025,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0554795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.80219, 0, 1, 0.677858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456605,-99) , 
0, 0.50094, 1, 0, 0.601218,-99) , 
NN(
0, 
0, 
-1, -2.10818, 0, -1, 0.481787,-99) , 
8, -0.999603, 1, 0, 0.491821,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0917129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55692, 0, 1, 0.550791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437662,-99) , 
10, -1.21597, 0, 0, 0.489059,-99) , 
5, 0.619028, 1, 0, 0.516838,-99) , 
NN(
0, 
0, 
-1, 0.0467316, 0, -1, 0.364492,-99) , 
8, -1.57028, 0, 0, 0.508029,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0716158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480532,-99) , 
0, 0.503268, 1, 0, 0.587618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465623,-99) , 
0, 0.4924, 0, 0, 0.569375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488518,-99) , 
9, -4.16838, 1, 0, 0.49735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384675,-99) , 
10, -2.71153, 0, 0, 0.490776,-99) , 
1, -0.00229635, 1, 0, 0.505192,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.103028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
8, 0.834514, 1, 0, 0.513738,-99) , 
NN(
0, 
0, 
-1, -0.0760057, 1, -1, 0.442765,-99) , 
10, -1.17702, 0, 0, 0.486599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262713,-99) , 
1, 0.010139, 1, 0, 0.477394,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0586318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498104, 1, 1, 0.588912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492023,-99) , 
9, -3.34162, 1, 0, 0.506409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333958,-99) , 
10, -2.16949, 0, 0, 0.500802,-99) , 
8, -0.998422, 1, 0, 0.508452,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.11777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489827,-99) , 
5, -0.618971, 0, 0, 0.555959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432845,-99) , 
0, 0.499973, 1, 0, 0.498572,-99) , 
10, 0.0939794, 1, 0, 0.540678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409384,-99) , 
3, 8.18935, 1, 0, 0.533339,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0976234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.936813, 1, 1, 0.5727,-99) , 
NN(
0, 
0, 
-1, -3.99858, 1, -1, 0.443667,-99) , 
8, -0.709996, 0, 0, 0.543488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421872,-99) , 
5, 0.943801, 1, 0, 0.502807,-99) , 
NN(
0, 
0, 
-1, 0.496189, 0, -1, 0.415499,-99) , 
5, 0.410494, 0, 0, 0.489903,-99) , 
5, 0.04765, 1, 0, 0.504678,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.114031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83217, 1, 1, 0.586767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460751,-99) , 
7, -951.286, 0, 0, 0.502716,-99) , 
3, 1.84917, 1, 0, 0.539335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435177,-99) , 
10, -1.59944, 0, 0, 0.492768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424254,-99) , 
9, -2.3337, 1, 0, 0.467084,-99) , 
5, 0.809506, 1, 0, 0.51243,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0768318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333355, 1, 1, 0.535358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397651,-99) , 
5, 0.618725, 1, 0, 0.459967,-99) , 
10, 0.449003, 1, 0, 0.522267,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0966922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.7888, 0, 1, 0.674855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443496,-99) , 
5, -0.523653, 0, 0, 0.594021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468851,-99) , 
8, -0.234817, 1, 0, 0.477996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231397,-99) , 
10, -2.16949, 0, 0, 0.46803,-99) , 
8, -0.996528, 1, 0, 0.478042,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0713168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483579,-99) , 
5, 0.713331, 1, 0, 0.551792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352864,-99) , 
8, -0.513924, 0, 0, 0.506621,-99) , 
9, -3.39191, 1, 0, 0.51875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385845,-99) , 
10, -3.07519, 0, 0, 0.515251,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0822821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.46753, 0, 1, 0.672216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472477,-99) , 
8, -1.75796, 0, 0, 0.599449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474066,-99) , 
0, 0.504756, 0, 0, 0.481482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331768,-99) , 
10, -2.16825, 0, 0, 0.477111,-99) , 
8, -0.996893, 1, 0, 0.487327,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0429166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.7565, 0, 1, 0.614223,-99) , 
NN(
0, 
0, 
-1, -2.07089, 0, -1, 0.486564,-99) , 
8, -0.995378, 1, 0, 0.496708,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0832553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.23358, 0, 1, 0.551482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478247,-99) , 
9, -2.00603, 0, 0, 0.491027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410603,-99) , 
10, 0.559674, 1, 0, 0.482141,-99) , 
5, 0.523818, 1, 0, 0.510718,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0978451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.363981, 1, 1, 0.66487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424895,-99) , 
0, 0.503802, 1, 0, 0.514759,-99) , 
1, -0.00408005, 1, 0, 0.525077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374576,-99) , 
5, -0.904741, 0, 0, 0.512998,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.132392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0702345, 1, 1, 0.547301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372501,-99) , 
10, -3.08328, 0, 0, 0.536877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34129,-99) , 
8, 0.423915, 0, 0, 0.516503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343848,-99) , 
8, 0.568479, 1, 0, 0.408071,-99) , 
9, -2.44389, 0, 0, 0.482615,-99) , 
9, -2.84487, 1, 0, 0.507277,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0518584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484601,-99) , 
5, 0.429844, 1, 0, 0.570263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496631,-99) , 
8, -0.599272, 1, 0, 0.50651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358997,-99) , 
8, -0.137707, 0, 0, 0.450862,-99) , 
5, -0.523636, 0, 0, 0.494884,-99) , 
9, -4.51381, 1, 0, 0.499517,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0745516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405954,-99) , 
10, 0.198236, 1, 0, 0.50725,-99) , 
9, -1.52345, 0, 0, 0.516096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423051,-99) , 
10, 0.987492, 1, 0, 0.509094,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.098452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469088,-99) , 
10, -0.964542, 0, 0, 0.506566,-99) , 
0, 0.505981, 0, 0, 0.543033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415985,-99) , 
5, 0.904596, 1, 0, 0.497987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436955,-99) , 
8, -0.988834, 1, 0, 0.453168,-99) , 
9, -2.83147, 0, 0, 0.475036,-99) , 
0, 0.503805, 0, 0, 0.482076,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0982058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470033,-99) , 
9, -3.31981, 1, 0, 0.48785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352923,-99) , 
8, -0.991717, 1, 0, 0.43166,-99) , 
10, -1.85118, 0, 0, 0.477478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398307,-99) , 
9, -1.08366, 1, 0, 0.471562,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.118144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.715199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484484,-99) , 
10, -2.45939, 0, 0, 0.611495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443199,-99) , 
5, -0.618953, 0, 0, 0.565336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489377,-99) , 
10, 0.133227, 1, 0, 0.533416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438392,-99) , 
7, -951.286, 1, 0, 0.464714,-99) , 
9, -2.60377, 0, 0, 0.499443,-99) , 
8, -0.427715, 1, 0, 0.511588,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0768536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453387,-99) , 
5, -0.80952, 0, 0, 0.54221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405958,-99) , 
0, 0.493603, 0, 0, 0.456768,-99) , 
2, 0.0824921, 1, 0, 0.529119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411925,-99) , 
9, -4.03043, 0, 0, 0.4973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260188,-99) , 
8, -1.19512, 1, 0, 0.400189,-99) , 
10, -2.21147, 0, 0, 0.486924,-99) , 
0, 0.498091, 1, 0, 0.507434,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0510029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421152,-99) , 
10, -2.3824, 0, 0, 0.495234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346565,-99) , 
10, -0.531102, 0, 0, 0.429683,-99) , 
0, 0.503803, 1, 0, 0.487511,-99) , 
1, 0.00663906, 0, 0, 0.492412,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0794427);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.95171, 1, -1, 0.460362,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.109784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479026,-99) , 
3, 3.51416, 0, 0, 0.526034,-99) , 
0, 0.499988, 0, 0, 0.571597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451805,-99) , 
9, -2.06145, 1, 0, 0.515362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430763,-99) , 
2, 0.0240442, 0, 0, 0.453446,-99) , 
0, 0.499995, 1, 0, 0.493079,-99) , 
2, 0.0954584, 0, 0, 0.502596,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.121519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440634,-99) , 
8, 0.863929, 0, 0, 0.573166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39379,-99) , 
9, -1.40394, 0, 0, 0.481253,-99) , 
10, 0.408927, 1, 0, 0.515369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440485,-99) , 
8, -0.371112, 1, 0, 0.458613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285472,-99) , 
0, 0.489526, 0, 0, 0.450071,-99) , 
9, -2.06583, 0, 0, 0.466233,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0984228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266609,-99) , 
10, -2.3527, 0, 0, 0.506921,-99) , 
8, -1.25034, 1, 0, 0.528341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463077,-99) , 
1, 0.000727097, 0, 0, 0.484432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310836,-99) , 
8, -0.513079, 0, 0, 0.476586,-99) , 
9, -3.34809, 1, 0, 0.491638,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.10009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238009, 0, 1, 0.657378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451164,-99) , 
0, 0.502719, 0, 0, 0.510084,-99) , 
0, 0.499046, 1, 0, 0.58775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425853,-99) , 
10, 0.68003, 1, 0, 0.507884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398914,-99) , 
10, -1.60554, 0, 0, 0.501064,-99) , 
8, -0.42758, 1, 0, 0.515613,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.105823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.471106, 1, 1, 0.520521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416129,-99) , 
8, 0.0494015, 0, 0, 0.511559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453708,-99) , 
3, 3.2545, 0, 0, 0.489195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299508,-99) , 
8, 0.762766, 0, 0, 0.350002,-99) , 
8, 0.265451, 1, 0, 0.450583,-99) , 
9, -2.95451, 0, 0, 0.48287,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.06488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.079319, 0, 1, 0.525509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475747,-99) , 
8, -1.28444, 1, 0, 0.482149,-99) , 
5, 0.333311, 1, 0, 0.496582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332826,-99) , 
1, 0.0098602, 1, 0, 0.490969,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.106727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445674,-99) , 
10, -1.89676, 0, 0, 0.512268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442502,-99) , 
5, 0.333229, 1, 0, 0.466408,-99) , 
8, 0.429213, 1, 0, 0.487467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333145,-99) , 
1, 0.0098602, 1, 0, 0.482371,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0440651);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.32685, 1, 1, 0.594104,-99) , 
NN(
0, 
0, 
-1, -0.904741, 0, -1, 0.48259,-99) , 
9, -4.52524, 1, 0, 0.48929,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0767418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463605,-99) , 
9, -2.75026, 0, 0, 0.517905,-99) , 
8, -0.420482, 1, 0, 0.534276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606308,-99) , 
NN(
0, 
0, 
-1, 0.0098602, 1, -1, 0.476048,-99) , 
3, 0.424222, 1, 0, 0.483319,-99) , 
3, 3.27652, 0, 0, 0.498185,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0786766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.729371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478269,-99) , 
10, -2.74345, 0, 0, 0.595715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431106,-99) , 
5, -0.904763, 0, 0, 0.516652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360174,-99) , 
10, -2.15216, 0, 0, 0.510179,-99) , 
9, -4.37573, 1, 0, 0.516635,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0760323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.98389, 0, 1, 0.594602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497321,-99) , 
10, 0.589916, 1, 0, 0.545845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487669,-99) , 
5, 0.428527, 1, 0, 0.510011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376057,-99) , 
8, 1.08194, 1, 0, 0.498071,-99) , 
8, 1.28629, 0, 0, 0.510734,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0964025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.528351, 1, 1, 0.580503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407608,-99) , 
2, 0.00890195, 1, 0, 0.494661,-99) , 
5, -0.238103, 0, 0, 0.556152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427992,-99) , 
5, 0.142916, 0, 0, 0.480685,-99) , 
1, -0.0049088, 1, 0, 0.491326,-99) , 
0, 0.499996, 0, 0, 0.512665,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0537047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0892361, 1, 1, 0.516241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403758,-99) , 
2, -0.167734, 0, 0, 0.509555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494659,-99) , 
0, 0.49206, 1, 0, 0.528727,-99) , 
NN(
0, 
0, 
-1, -0.144556, 0, -1, 0.447848,-99) , 
2, 0.0338413, 0, 0, 0.468793,-99) , 
0, 0.494282, 0, 0, 0.500583,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0958415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478724,-99) , 
10, 0.00748565, 1, 0, 0.517148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219611,-99) , 
8, 0.0503911, 1, 0, 0.46263,-99) , 
10, -1.26715, 0, 0, 0.499096,-99) , 
NN(
0, 
0, 
-1, -0.144051, 1, -1, 0.354524,-99) , 
1, 0.00702288, 1, 0, 0.491316,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.145568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370216,-99) , 
2, -0.146592, 0, 0, 0.554685,-99) , 
NN(
0, 
0, 
-1, 0.13099, 0, -1, 0.414988,-99) , 
2, 0.0839716, 1, 0, 0.533845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448949,-99) , 
5, 0.863814, 1, 0, 0.508607,-99) , 
NN(
0, 
0, 
-1, 0.863782, 0, -1, 0.424793,-99) , 
9, -2.48498, 0, 0, 0.456844,-99) , 
5, 0.523686, 1, 0, 0.486911,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0896929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.471783, 1, 1, 0.618096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485516,-99) , 
10, -1.02466, 0, 0, 0.553667,-99) , 
5, 0.238896, 1, 0, 0.577515,-99) , 
NN(
0, 
0, 
-1, -2.83228, 0, -1, 0.464238,-99) , 
0, 0.494282, 1, 0, 0.484521,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.11474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487954,-99) , 
1, -0.000912327, 1, 0, 0.517936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358045,-99) , 
6, 0.00635233, 1, 0, 0.51087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395872,-99) , 
8, 0.984327, 0, 0, 0.432775,-99) , 
0, 0.491428, 1, 0, 0.448412,-99) , 
5, 0.238004, 0, 0, 0.488465,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0975275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475368,-99) , 
2, -0.0220814, 0, 0, 0.572889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459342,-99) , 
7, -951.286, 0, 0, 0.510722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446172,-99) , 
9, -1.70625, 0, 0, 0.46021,-99) , 
5, 0.714233, 0, 0, 0.484913,-99) , 
1, 0.0045751, 0, 0, 0.491218,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0462738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482562,-99) , 
8, 0.13228, 0, 0, 0.568026,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00672367, 0, 1, 0.51178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405436,-99) , 
6, 0.00941501, 1, 0, 0.506698,-99) , 
5, -0.809367, 1, 0, 0.513316,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0396563);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.592124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390417,-99) , 
10, -2.28301, 0, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425765,-99) , 
5, -0.904765, 0, 0, 0.495958,-99) , 
9, -4.61715, 1, 0, 0.501038,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.086054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33327, 1, 1, 0.568744,-99) , 
NN(
0, 
0, 
-1, 0.546134, 1, -1, 0.477928,-99) , 
10, -0.654678, 0, 0, 0.502528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466954,-99) , 
9, -1.54044, 0, 0, 0.496153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376061,-99) , 
9, -1.09399, 1, 0, 0.459241,-99) , 
10, 0.0424959, 1, 0, 0.491143,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.105808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00223106, 0, 1, 0.584804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449742,-99) , 
5, 0.800323, 0, 0, 0.511122,-99) , 
5, 0.618904, 1, 0, 0.542557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372415,-99) , 
8, 0.876205, 0, 0, 0.475877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378177,-99) , 
5, 0.904743, 1, 0, 0.459517,-99) , 
10, -0.523643, 1, 0, 0.505106,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0756396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435603,-99) , 
3, 3.13716, 1, 0, 0.510819,-99) , 
10, -1.39354, 1, 0, 0.552339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489295,-99) , 
8, -0.713603, 1, 0, 0.49906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416321,-99) , 
0, 0.50095, 0, 0, 0.443119,-99) , 
5, -0.238004, 0, 0, 0.487109,-99) , 
1, -0.00229635, 1, 0, 0.498381,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0757531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477566,-99) , 
5, 0.5238, 0, 0, 0.507922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405094,-99) , 
10, 0.969935, 1, 0, 0.499544,-99) , 
9, -4.69801, 1, 0, 0.506504,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0814129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0268927, 1, 1, 0.623337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445017,-99) , 
9, -3.26439, 1, 0, 0.500925,-99) , 
7, -951.286, 0, 0, 0.558361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488944,-99) , 
8, -0.887926, 1, 0, 0.496165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391168,-99) , 
10, -2.6355, 0, 0, 0.490247,-99) , 
5, -0.142892, 1, 0, 0.506108,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.085481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497909,-99) , 
8, 0.143604, 1, 0, 0.52216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329736,-99) , 
6, 0.00941501, 1, 0, 0.512568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460301,-99) , 
10, -0.0511744, 1, 0, 0.507832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360684,-99) , 
8, -0.153671, 0, 0, 0.445051,-99) , 
5, -0.714269, 0, 0, 0.501303,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.13154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.469411, 1, 1, 0.54896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420482,-99) , 
8, -0.115186, 1, 0, 0.451657,-99) , 
0, 0.494283, 0, 0, 0.528544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416927,-99) , 
5, -0.745844, 1, 0, 0.492851,-99) , 
NN(
0, 
0, 
-1, -3.5093, 1, -1, 0.376126,-99) , 
8, -0.143647, 0, 0, 0.444567,-99) , 
5, -0.238026, 0, 0, 0.506257,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.10853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42855, 1, 1, 0.560102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460312,-99) , 
9, -1.54559, 0, 0, 0.476939,-99) , 
1, 0.00145893, 0, 0, 0.499313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317499,-99) , 
9, -5.15327, 0, 0, 0.492849,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0904163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486971,-99) , 
8, -0.429788, 0, 0, 0.560434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4078,-99) , 
1, 0.00119678, 1, 0, 0.480681,-99) , 
0, 0.49524, 0, 0, 0.537608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49443,-99) , 
7, 1.04278, 0, 0, 0.512056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307208,-99) , 
7, -1.56486, 0, 0, 0.495379,-99) , 
7, -951.286, 1, 0, 0.510334,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0900552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00634337, 0, 1, 0.529436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354508,-99) , 
0, 0.489523, 0, 0, 0.522168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464892,-99) , 
0, 0.498083, 1, 0, 0.517453,-99) , 
NN(
0, 
0, 
-1, 1.32998, 0, -1, 0.4229,-99) , 
5, 0.523792, 0, 0, 0.471126,-99) , 
10, -0.2525, 1, 0, 0.503902,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0913324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.35469, 1, 1, 0.583499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421842,-99) , 
9, -3.75407, 0, 0, 0.5425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465528,-99) , 
10, -0.350112, 1, 0, 0.509922,-99) , 
NN(
0, 
0, 
-1, -2.29912, 0, -1, 0.465229,-99) , 
0, 0.497818, 1, 0, 0.491198,-99) , 
0, 0.5019, 0, 0, 0.501382,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0528755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.702173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489876,-99) , 
5, 0.237017, 0, 0, 0.594858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
8, -0.0594302, 1, 0, 0.512903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370694,-99) , 
10, -2.2812, 0, 0, 0.507801,-99) , 
8, -1.28356, 1, 0, 0.51278,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0461391);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684802,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492377, 1, 1, 0.514035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397018,-99) , 
2, 0.200071, 1, 0, 0.508604,-99) , 
8, -1.57036, 1, 0, 0.513775,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0666606);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489205,-99) , 
10, 0.765914, 1, 0, 0.551539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481627,-99) , 
5, -0.523835, 1, 0, 0.492581,-99) , 
8, 1.57093, 0, 0, 0.503494,-99) , 
0, 0.489526, 1, 0, 0.507321,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0779885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432558,-99) , 
8, -1.63719, 0, 0, 0.601054,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.510658,-99) , 
5, 0.809117, 1, 0, 0.567476,-99) , 
NN(
NN(
0, 
0, 
-1, -1.07209, 1, 1, 0.51323,-99) , 
NN(
0, 
0, 
-1, 0.0305968, 1, -1, 0.367759,-99) , 
10, -1.28949, 0, 0, 0.498746,-99) , 
8, -0.141285, 1, 0, 0.515338,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.104639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.554691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466463,-99) , 
3, 4.16874, 0, 0, 0.490133,-99) , 
5, 0.523692, 1, 0, 0.514144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475643,-99) , 
9, -3.55625, 0, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334667,-99) , 
9, -3.21521, 1, 0, 0.464992,-99) , 
8, -0.142183, 0, 0, 0.499738,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.074532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482675,-99) , 
7, -951.286, 0, 0, 0.514898,-99) , 
3, 0.436735, 1, 0, 0.521458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436243,-99) , 
3, 6.62512, 1, 0, 0.513025,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.10918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.768775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466004,-99) , 
8, -1.11852, 1, 0, 0.536329,-99) , 
8, -0.530883, 0, 0, 0.582698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463221,-99) , 
10, 0.681792, 1, 0, 0.528943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445394,-99) , 
8, 0.382111, 1, 0, 0.475222,-99) , 
9, -1.91462, 0, 0, 0.488253,-99) , 
9, -3.9575, 1, 0, 0.501402,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0578382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491827,-99) , 
0, 0.496188, 0, 0, 0.611648,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490474, 1, 1, 0.514642,-99) , 
NN(
0, 
0, 
-1, 0.0632024, 1, -1, 0.443022,-99) , 
9, -3.68235, 0, 0, 0.502681,-99) , 
8, -0.996466, 1, 0, 0.51078,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.106043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.827597, 1, 1, 0.563075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367477,-99) , 
8, 1.11547, 0, 0, 0.474244,-99) , 
9, -1.93975, 1, 0, 0.516758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42767,-99) , 
5, -0.71419, 0, 0, 0.510426,-99) , 
NN(
0, 
0, 
-1, -1.2703, 0, -1, 0.426526,-99) , 
8, 0.00497759, 1, 0, 0.470449,-99) , 
9, -2.6692, 0, 0, 0.490005,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.122775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709949, 1, 1, 0.599024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32363,-99) , 
3, 3.61866, 1, 0, 0.501892,-99) , 
5, -0.306134, 0, 0, 0.548211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470594,-99) , 
5, 0.792683, 1, 0, 0.485713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361541,-99) , 
5, 0.665692, 1, 0, 0.423595,-99) , 
5, 0.727901, 0, 0, 0.474428,-99) , 
5, 0.619032, 1, 0, 0.506581,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.111526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0790365, 1, 1, 0.540694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36143,-99) , 
8, 0.128736, 0, 0, 0.464185,-99) , 
5, -0.619051, 0, 0, 0.52614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472364,-99) , 
0, 0.498084, 1, 0, 0.503879,-99) , 
NN(
0, 
0, 
-1, -0.142308, 0, -1, 0.435898,-99) , 
1, -0.00179254, 1, 0, 0.44933,-99) , 
2, -0.0350475, 0, 0, 0.505378,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0429829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437154,-99) , 
5, 0.238718, 1, 0, 0.561584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49567,-99) , 
8, -1.10738, 1, 0, 0.499061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405014,-99) , 
10, -2.71153, 0, 0, 0.494424,-99) , 
1, 0.00388765, 0, 0, 0.500618,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0881213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87924, 0, 1, 0.585065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48508,-99) , 
0, 0.498104, 1, 0, 0.505092,-99) , 
7, -951.286, 0, 0, 0.556277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479774,-99) , 
5, 0.904737, 0, 0, 0.497153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399814,-99) , 
5, 0.0474547, 1, 0, 0.429378,-99) , 
2, 0.0890586, 1, 0, 0.485166,-99) , 
2, -0.0573264, 1, 0, 0.498233,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0753148);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.59217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47854,-99) , 
10, -1.09669, 1, 0, 0.49837,-99) , 
NN(
0, 
0, 
-1, 0.0280699, 1, -1, 0.405049,-99) , 
10, -2.40886, 0, 0, 0.490813,-99) , 
0, 0.504756, 0, 0, 0.497536,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.105911);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.237721, 1, 1, 0.595584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464638,-99) , 
5, 0.142848, 0, 0, 0.517587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340801,-99) , 
8, -1.06249, 1, 0, 0.43161,-99) , 
10, -1.92546, 0, 0, 0.503704,-99) , 
0, 0.491426, 1, 0, 0.509961,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.102727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00329164, 0, 1, 0.545777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413672,-99) , 
6, 0.0115215, 1, 0, 0.540706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475323,-99) , 
5, 0.428536, 1, 0, 0.528205,-99) , 
NN(
0, 
0, 
-1, -1.92995, 0, -1, 0.438377,-99) , 
10, -0.481343, 1, 0, 0.487148,-99) , 
0, 0.500949, 1, 0, 0.525396,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.108647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41596, 0, 1, 0.663896,-99) , 
NN(
0, 
0, 
-1, -1.25765, 0, -1, 0.407415,-99) , 
5, -0.332382, 0, 0, 0.557813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464714,-99) , 
2, -0.066125, 1, 0, 0.477114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318685,-99) , 
10, -1.89112, 0, 0, 0.470042,-99) , 
8, -0.713192, 1, 0, 0.481004,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.10946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495149,-99) , 
3, 3.38891, 1, 0, 0.542235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407181,-99) , 
8, 0.61152, 0, 0, 0.528718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466411,-99) , 
9, -4.36511, 1, 0, 0.482979,-99) , 
NN(
0, 
0, 
-1, -0.785282, 0, -1, 0.340258,-99) , 
8, 0.54727, 1, 0, 0.461415,-99) , 
10, -0.619346, 0, 0, 0.492282,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0949611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709051, 0, 1, 0.633483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482587,-99) , 
7, -951.286, 0, 0, 0.5212,-99) , 
1, 0.00388765, 0, 0, 0.538668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480232,-99) , 
5, 0.773196, 0, 0, 0.547259,-99) , 
NN(
0, 
0, 
-1, -0.98627, 0, -1, 0.462577,-99) , 
7, -951.286, 1, 0, 0.489118,-99) , 
5, 0.523748, 1, 0, 0.508758,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0822209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33176, 1, 1, 0.584129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472353,-99) , 
8, 0.725883, 1, 0, 0.501975,-99) , 
0, 0.502852, 0, 0, 0.51347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309531,-99) , 
10, -3.05602, 0, 0, 0.50748,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0880846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470193,-99) , 
10, -0.0468435, 1, 0, 0.512277,-99) , 
NN(
0, 
0, 
-1, -1.0478, 1, -1, 0.373168,-99) , 
10, -2.09048, 0, 0, 0.503866,-99) , 
9, -4.52524, 1, 0, 0.511165,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.123937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493339, 1, 1, 0.578333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465934,-99) , 
8, 1.28651, 1, 0, 0.51294,-99) , 
5, 0.809506, 1, 0, 0.552343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45679,-99) , 
0, 0.504349, 1, 0, 0.545109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384224,-99) , 
9, -3.32364, 1, 0, 0.456095,-99) , 
0, 0.499045, 0, 0, 0.490654,-99) , 
8, 0.429371, 0, 0, 0.523578,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.116548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.32374, 1, 1, 0.546592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402406,-99) , 
8, 0.427124, 0, 0, 0.452173,-99) , 
5, -0.428577, 0, 0, 0.525056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2124,-99) , 
8, -1.419, 1, 0, 0.392068,-99) , 
10, -2.4903, 0, 0, 0.515804,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.14843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344331,-99) , 
7, -1.27777, 0, 0, 0.563056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456809,-99) , 
0, 0.500943, 0, 0, 0.490928,-99) , 
7, -951.286, 0, 0, 0.528806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437006,-99) , 
5, 0.863936, 1, 0, 0.532865,-99) , 
NN(
0, 
0, 
-1, -2.31278, 0, -1, 0.44286,-99) , 
9, -2.00783, 0, 0, 0.465803,-99) , 
5, 0.523822, 1, 0, 0.489934,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.073516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00640754, 0, 1, 0.518749,-99) , 
NN(
0, 
0, 
-1, -3.18201, 0, -1, 0.424794,-99) , 
6, 0.000609044, 0, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301443,-99) , 
6, 0.0127887, 1, 0, 0.492133,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0985443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491308,-99) , 
0, 0.501083, 1, 0, 0.530583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243679,-99) , 
8, -0.834639, 1, 0, 0.460098,-99) , 
10, -2.05012, 0, 0, 0.52231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440592,-99) , 
0, 0.490791, 0, 0, 0.483676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389378,-99) , 
8, -0.139674, 0, 0, 0.455778,-99) , 
0, 0.492379, 0, 0, 0.513973,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0656166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428112,-99) , 
9, -3.22584, 1, 0, 0.576832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357608,-99) , 
10, -1.52169, 0, 0, 0.49179,-99) , 
8, -0.338816, 1, 0, 0.504223,-99) , 
NN(
0, 
0, 
-1, 0.496206, 0, -1, 0.356533,-99) , 
10, -2.51668, 0, 0, 0.493992,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0611235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493773,-99) , 
0, 0.503986, 0, 0, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406863,-99) , 
0, 0.505709, 1, 0, 0.496112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442258,-99) , 
0, 0.501632, 1, 0, 0.478455,-99) , 
NN(
0, 
0, 
-1, 0.00217041, 0, -1, 0.408699,-99) , 
0, 0.497153, 0, 0, 0.446981,-99) , 
10, -0.150075, 1, 0, 0.479444,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0816823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458167,-99) , 
8, 0.547281, 0, 0, 0.534351,-99) , 
10, -1.18918, 1, 0, 0.560909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480597,-99) , 
5, 0.754868, 1, 0, 0.539713,-99) , 
NN(
0, 
0, 
-1, -3.84626, 0, -1, 0.476379,-99) , 
8, -0.141572, 1, 0, 0.490736,-99) , 
5, -0.714269, 1, 0, 0.500088,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.134676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.62897, 1, 1, 0.567827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373071,-99) , 
7, -951.286, 1, 0, 0.434272,-99) , 
10, -1.58353, 0, 0, 0.533625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458352,-99) , 
3, 4.18524, 0, 0, 0.492483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435163,-99) , 
5, 0.682504, 1, 0, 0.452852,-99) , 
8, 0.733516, 0, 0, 0.470923,-99) , 
5, 0.523784, 1, 0, 0.494579,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0551497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00075811, 1, 1, 0.618905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466053,-99) , 
0, 0.498094, 0, 0, 0.49581,-99) , 
2, 0.134728, 1, 0, 0.55652,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489796, 0, 1, 0.606935,-99) , 
NN(
0, 
0, 
-1, 0.00740437, 1, -1, 0.487194,-99) , 
0, 0.491429, 1, 0, 0.494785,-99) , 
2, 0.067462, 0, 0, 0.504417,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.118738);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00314484, 1, 1, 0.55363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449076,-99) , 
5, 0.891166, 1, 0, 0.522686,-99) , 
NN(
0, 
0, 
-1, 0.079327, 1, -1, 0.430278,-99) , 
5, 0.61902, 0, 0, 0.474265,-99) , 
10, -0.378879, 1, 0, 0.520568,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0615137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523569, 0, 1, 0.580268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443085,-99) , 
9, -3.59506, 0, 0, 0.491541,-99) , 
6, 0.00487084, 0, 0, 0.500555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34052,-99) , 
6, 0.0127887, 1, 0, 0.49486,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.10059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.854881, 1, 1, 0.552555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430994,-99) , 
9, -3.97981, 1, 0, 0.464527,-99) , 
10, -1.11829, 0, 0, 0.517476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425067,-99) , 
8, -0.14177, 0, 0, 0.478554,-99) , 
NN(
0, 
0, 
-1, 0.508967, 0, -1, 0.393403,-99) , 
5, 0.464726, 1, 0, 0.463487,-99) , 
5, 0.619051, 0, 0, 0.492141,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0680195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473158,-99) , 
0, 0.499994, 0, 0, 0.489933,-99) , 
9, -1.62179, 0, 0, 0.497193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433362,-99) , 
10, 0.85551, 1, 0, 0.490948,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.110117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00217, 0, 1, 0.5591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465024,-99) , 
5, -0.238092, 1, 0, 0.484355,-99) , 
8, 0.549158, 1, 0, 0.508777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451316,-99) , 
9, -3.78212, 0, 0, 0.473553,-99) , 
NN(
0, 
0, 
-1, -4.06773, 0, -1, 0.354432,-99) , 
8, -0.370867, 1, 0, 0.442305,-99) , 
10, -1.50917, 0, 0, 0.491819,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0715421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428546,-99) , 
10, -1.97204, 0, 0, 0.508167,-99) , 
NN(
0, 
0, 
-1, -0.0370722, 0, -1, 0.455044,-99) , 
5, 0.523794, 0, 0, 0.486045,-99) , 
8, -1.56988, 1, 0, 0.490569,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0539846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00408005, 1, 1, 0.522333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412507,-99) , 
0, 0.498091, 1, 0, 0.463047,-99) , 
10, 0.449003, 1, 0, 0.511537,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0728993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.21967, 0, 1, 0.587458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419043,-99) , 
5, -0.428577, 0, 0, 0.484084,-99) , 
9, -3.8995, 1, 0, 0.494802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235443,-99) , 
8, -1.53969, 1, 0, 0.390048,-99) , 
10, -2.51668, 0, 0, 0.487761,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.109126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441415,-99) , 
10, -2.22348, 0, 0, 0.526653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408572,-99) , 
0, 0.501899, 0, 0, 0.436036,-99) , 
2, 0.0741869, 1, 0, 0.50897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290625,-99) , 
5, 0.237174, 1, 0, 0.367723,-99) , 
3, 3.61383, 0, 0, 0.430107,-99) , 
2, -0.0737556, 0, 0, 0.496241,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.139158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431916,-99) , 
0, 0.505392, 1, 0, 0.528669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422146,-99) , 
9, -2.22635, 1, 0, 0.493378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443162,-99) , 
0, 0.497139, 1, 0, 0.503498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42274,-99) , 
0, 0.490793, 1, 0, 0.429441,-99) , 
1, -0.00129495, 1, 0, 0.449876,-99) , 
0, 0.500948, 0, 0, 0.460764,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.110358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.402695, 1, 1, 0.628545,-99) , 
NN(
0, 
0, 
-1, 4.44314, 1, -1, 0.475049,-99) , 
5, 0.31066, 0, 0, 0.506963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464307,-99) , 
3, 3.62948, 1, 0, 0.500548,-99) , 
NN(
0, 
0, 
-1, -3.99408, 1, -1, 0.430908,-99) , 
2, 0.0357786, 0, 0, 0.448625,-99) , 
5, 0.619057, 1, 0, 0.473671,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.110543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463838,-99) , 
0, 0.500946, 1, 0, 0.571388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27474,-99) , 
5, 0.00199095, 1, 0, 0.470783,-99) , 
5, 0.238033, 0, 0, 0.528378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482854,-99) , 
5, -0.14268, 1, 0, 0.498484,-99) , 
NN(
0, 
0, 
-1, 0.333891, 1, -1, 0.356594,-99) , 
10, -0.989239, 0, 0, 0.479986,-99) , 
8, 0.143842, 1, 0, 0.496438,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0459991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606691,-99) , 
NN(
0, 
0, 
-1, -3.08497, 0, -1, 0.492358,-99) , 
9, -1.59325, 0, 0, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400036,-99) , 
10, 0.995992, 1, 0, 0.496036,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0862083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499363, 1, 1, 0.534927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466271,-99) , 
10, 0.557433, 1, 0, 0.524794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494752,-99) , 
2, 0.0771948, 1, 0, 0.549205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407088,-99) , 
3, 3.27471, 0, 0, 0.43933,-99) , 
2, 0.0123252, 0, 0, 0.479073,-99) , 
0, 0.494286, 0, 0, 0.514708,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0771307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09506, 1, 1, 0.606889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369022,-99) , 
10, -3.1046, 0, 0, 0.557028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448704,-99) , 
10, 0.733154, 1, 0, 0.506934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326782,-99) , 
10, -1.96498, 0, 0, 0.499807,-99) , 
9, -4.0747, 1, 0, 0.506841,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.128268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386937,-99) , 
10, -1.45483, 0, 0, 0.591019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45728,-99) , 
9, -2.20523, 0, 0, 0.499308,-99) , 
8, 0.306981, 1, 0, 0.515465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465555,-99) , 
1, 0.00254534, 0, 0, 0.493099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334199,-99) , 
10, -1.26373, 1, 0, 0.470412,-99) , 
8, -0.141872, 0, 0, 0.502757,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.106534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30229, 0, 1, 0.535541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448031,-99) , 
3, 4.84451, 0, 0, 0.465661,-99) , 
7, -951.286, 0, 0, 0.508436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467734,-99) , 
0, 0.506186, 1, 0, 0.550563,-99) , 
NN(
0, 
0, 
-1, -0.00577632, 0, -1, 0.414238,-99) , 
0, 0.504891, 0, 0, 0.454206,-99) , 
0, 0.501898, 1, 0, 0.497002,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.10798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456026,-99) , 
0, 0.501908, 1, 0, 0.587102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468747,-99) , 
1, 0.00192135, 0, 0, 0.494371,-99) , 
1, -0.00375019, 1, 0, 0.502801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368187,-99) , 
1, 0.00815977, 1, 0, 0.497029,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0782608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454965,-99) , 
0, 0.501907, 1, 0, 0.564933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441428,-99) , 
10, -2.25236, 0, 0, 0.506223,-99) , 
1, -0.0022244, 1, 0, 0.515727,-99) , 
NN(
0, 
0, 
-1, -0.14586, 0, -1, 0.399925,-99) , 
5, -0.809406, 0, 0, 0.500091,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0674578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485238,-99) , 
5, 0.61914, 1, 0, 0.537447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487927,-99) , 
8, -0.999272, 1, 0, 0.496081,-99) , 
2, 0.0255077, 0, 0, 0.507093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407341,-99) , 
3, 6.87778, 1, 0, 0.497804,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0894588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713578, 1, 1, 0.582863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409515,-99) , 
10, -3.05738, 0, 0, 0.556258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482163,-99) , 
0, 0.495238, 1, 0, 0.498753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324927,-99) , 
10, -1.62139, 0, 0, 0.486969,-99) , 
8, -0.427382, 1, 0, 0.499698,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0673903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.801446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494991,-99) , 
10, -2.67927, 0, 0, 0.623835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416774,-99) , 
9, -3.81463, 0, 0, 0.503117,-99) , 
NN(
0, 
0, 
-1, -0.76845, 1, -1, 0.375628,-99) , 
10, -1.84306, 0, 0, 0.49009,-99) , 
9, -4.3643, 1, 0, 0.499288,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0791859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473489,-99) , 
10, -2.61701, 0, 0, 0.583775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404743,-99) , 
2, 0.161972, 1, 0, 0.504227,-99) , 
8, -0.424466, 1, 0, 0.517506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383093,-99) , 
10, -0.719736, 1, 0, 0.420067,-99) , 
5, -0.809505, 0, 0, 0.504026,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0879147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0457555, 0, 1, 0.683154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498713,-99) , 
8, -1.47386, 1, 0, 0.518883,-99) , 
1, -0.00179254, 1, 0, 0.553203,-99) , 
NN(
0, 
0, 
-1, -0.0585956, 0, -1, 0.459975,-99) , 
9, -3.43881, 1, 0, 0.483795,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0605106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42465,-99) , 
9, -5.03664, 0, 0, 0.582851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491148,-99) , 
0, 0.505709, 0, 0, 0.495666,-99) , 
NN(
0, 
0, 
-1, 0.0477444, 0, -1, 0.448993,-99) , 
3, 4.14964, 1, 0, 0.48534,-99) , 
9, -4.33387, 1, 0, 0.49285,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.106085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345385,-99) , 
7, -1.27794, 0, 0, 0.600245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461593,-99) , 
5, -0.292474, 0, 0, 0.502487,-99) , 
7, -951.286, 0, 0, 0.549052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497641,-99) , 
1, -0.00102379, 1, 0, 0.517928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302683,-99) , 
6, 0.00715696, 1, 0, 0.509614,-99) , 
5, 0.238179, 1, 0, 0.521516,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0710561);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.6318, 0, 1, 0.620408,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.585934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458941,-99) , 
2, -0.0750248, 0, 0, 0.512244,-99) , 
0, 0.504757, 0, 0, 0.517605,-99) , 
9, -4.39116, 1, 0, 0.524646,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0982335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497941,-99) , 
5, 0.954603, 1, 0, 0.533155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498127,-99) , 
9, -3.8887, 1, 0, 0.52523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442306,-99) , 
2, 0.0321932, 0, 0, 0.47515,-99) , 
5, -0.00216775, 1, 0, 0.491515,-99) , 
5, 0.904716, 0, 0, 0.500611,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.109127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455989,-99) , 
5, -0.904741, 0, 0, 0.546271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456802,-99) , 
3, 6.62752, 1, 0, 0.537988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469195,-99) , 
5, 0.236668, 1, 0, 0.509769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410583,-99) , 
8, 0.765398, 1, 0, 0.465198,-99) , 
0, 0.503805, 1, 0, 0.52908,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0909935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475058,-99) , 
0, 0.496498, 0, 0, 0.590095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486043,-99) , 
5, 0.904733, 0, 0, 0.496285,-99) , 
0, 0.497819, 1, 0, 0.514464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454944,-99) , 
0, 0.493057, 1, 0, 0.494717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286925,-99) , 
0, 0.495778, 1, 0, 0.469703,-99) , 
0, 0.496187, 0, 0, 0.499152,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0588601);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0476088, 1, 1, 0.558095,-99) , 
NN(
NN(
0, 
0, 
-1, -0.713115, 1, 1, 0.514728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38,-99) , 
7, -951.286, 1, 0, 0.45602,-99) , 
5, -0.714271, 0, 0, 0.505893,-99) , 
0, 0.502852, 0, 0, 0.513666,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0988119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394999,-99) , 
0, 0.489526, 0, 0, 0.529366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452838,-99) , 
10, 0.797474, 1, 0, 0.520441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421533,-99) , 
9, -5.17591, 0, 0, 0.525063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.22437,-99) , 
8, -1.28255, 1, 0, 0.415935,-99) , 
10, -2.39655, 0, 0, 0.511696,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0847307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.522426, 1, 1, 0.627565,-99) , 
NN(
NN(
0, 
0, 
-1, 2.2423, 1, 1, 0.540327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456109,-99) , 
5, -0.0476483, 1, 0, 0.469793,-99) , 
8, 1.86332, 0, 0, 0.479813,-99) , 
9, -4.45106, 1, 0, 0.488336,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0815897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462429,-99) , 
9, -3.11976, 0, 0, 0.502089,-99) , 
9, -4.45337, 1, 0, 0.509219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410737,-99) , 
9, -3.25142, 1, 0, 0.442948,-99) , 
3, 3.40864, 0, 0, 0.46501,-99) , 
5, 0.809475, 1, 0, 0.49197,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.120275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.58433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456546,-99) , 
10, 0.236475, 1, 0, 0.551131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460612,-99) , 
7, -951.286, 1, 0, 0.486502,-99) , 
NN(
0, 
0, 
-1, 1.008, 0, -1, 0.410192,-99) , 
5, 0.0476268, 0, 0, 0.463799,-99) , 
0, 0.500949, 0, 0, 0.485838,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.109951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.30594, 1, 1, 0.575727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421644,-99) , 
10, -2.12661, 0, 0, 0.495387,-99) , 
5, 0.428476, 1, 0, 0.523685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397207,-99) , 
8, 0.453263, 0, 0, 0.51263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382249,-99) , 
9, -1.78918, 0, 0, 0.447354,-99) , 
8, 1.05505, 1, 0, 0.464547,-99) , 
9, -2.54087, 1, 0, 0.497788,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0838053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490182,-99) , 
0, 0.499046, 1, 0, 0.540843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478099,-99) , 
8, -0.707492, 1, 0, 0.48866,-99) , 
5, 0.333279, 1, 0, 0.505841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466666,-99) , 
5, 0.755168, 1, 0, 0.487444,-99) , 
NN(
0, 
0, 
-1, 2.2799, 1, -1, 0.39962,-99) , 
5, 0.428638, 0, 0, 0.450017,-99) , 
2, -0.0413661, 0, 0, 0.492432,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0868116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477712,-99) , 
3, 3.21151, 1, 0, 0.52294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378063,-99) , 
1, 0.00743191, 1, 0, 0.516252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481695,-99) , 
2, 0.0487769, 0, 0, 0.505801,-99) , 
NN(
0, 
0, 
-1, 1.48733, 0, -1, 0.440377,-99) , 
9, -2.42811, 1, 0, 0.479941,-99) , 
0, 0.497141, 0, 0, 0.501094,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0531973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.519141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448311,-99) , 
10, 0.793057, 1, 0, 0.511225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338427,-99) , 
10, -3.06288, 0, 0, 0.506501,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0678169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496085, 1, 1, 0.513851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37806,-99) , 
8, 0.448436, 1, 0, 0.453486,-99) , 
0, 0.492699, 0, 0, 0.504671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455434,-99) , 
0, 0.505348, 1, 0, 0.488433,-99) , 
NN(
0, 
0, 
-1, 0.142337, 0, -1, 0.425058,-99) , 
0, 0.504214, 0, 0, 0.462005,-99) , 
0, 0.502854, 1, 0, 0.497744,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0506869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502445, 0, 1, 0.530679,-99) , 
NN(
0, 
0, 
-1, -0.0911691, 0, -1, 0.486333,-99) , 
5, 0.619045, 1, 0, 0.505106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363149,-99) , 
0, 0.489524, 0, 0, 0.499656,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0844962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469367,-99) , 
0, 0.501897, 1, 0, 0.596064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42993,-99) , 
9, -3.36369, 1, 0, 0.565278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487946,-99) , 
0, 0.490474, 1, 0, 0.494272,-99) , 
NN(
0, 
0, 
-1, -0.424864, 0, -1, 0.411163,-99) , 
9, -3.39438, 0, 0, 0.479528,-99) , 
8, -0.427402, 1, 0, 0.493785,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.104458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809508, 1, 1, 0.552356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433831,-99) , 
8, 1.09178, 1, 0, 0.486035,-99) , 
0, 0.494285, 0, 0, 0.536688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454557,-99) , 
5, 0.809558, 0, 0, 0.483753,-99) , 
1, -0.00408005, 1, 0, 0.491325,-99) , 
9, -2.74014, 0, 0, 0.512526,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.065009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.63783, 0, 1, 0.631297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470668,-99) , 
5, -0.332719, 0, 0, 0.569598,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0778832, 0, 1, 0.531469,-99) , 
NN(
0, 
0, 
-1, 0.499678, 1, -1, 0.478174,-99) , 
0, 0.500947, 0, 0, 0.492327,-99) , 
8, -0.713115, 1, 0, 0.501534,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0992998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486819,-99) , 
0, 0.501498, 1, 0, 0.552618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423931,-99) , 
0, 0.493339, 0, 0, 0.530355,-99) , 
NN(
NN(
0, 
0, 
-1, -3.57804, 1, 1, 0.547502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460939,-99) , 
3, 0.456625, 1, 0, 0.469229,-99) , 
0, 0.49428, 1, 0, 0.484801,-99) , 
3, 3.58524, 0, 0, 0.497251,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.055655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483877,-99) , 
8, -1.64159, 0, 0, 0.588267,-99) , 
NN(
NN(
0, 
0, 
-1, -2.888, 1, 1, 0.529522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39152,-99) , 
9, -2.24852, 1, 0, 0.492751,-99) , 
8, 0.726505, 0, 0, 0.510524,-99) , 
9, -4.39662, 1, 0, 0.515637,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0692396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48045,-99) , 
8, 0.555271, 1, 0, 0.499616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292015,-99) , 
8, -0.687141, 1, 0, 0.415676,-99) , 
10, -1.91285, 0, 0, 0.491681,-99) , 
8, -1.28442, 1, 0, 0.497943,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.064327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.467211, 1, 1, 0.549832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491547,-99) , 
5, -0.809387, 1, 0, 0.504099,-99) , 
9, -2.28419, 0, 0, 0.519101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399093,-99) , 
0, 0.489522, 0, 0, 0.514679,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0706568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.72797, 1, 1, 0.532642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363534,-99) , 
0, 0.496189, 0, 0, 0.448026,-99) , 
2, -0.110919, 0, 0, 0.522673,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0733479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494661, 1, 1, 0.52251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321647,-99) , 
10, -2.06435, 1, 0, 0.439156,-99) , 
8, -0.713248, 0, 0, 0.50947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448789,-99) , 
5, 0.819121, 1, 0, 0.479264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344829,-99) , 
5, 0.240566, 0, 0, 0.456078,-99) , 
3, 4.14964, 1, 0, 0.497353,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0856829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.68247, 0, 1, 0.520466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432064,-99) , 
5, 0.945555, 1, 0, 0.504816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431381,-99) , 
5, -0.877448, 1, 0, 0.471941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296516,-99) , 
3, 4.02989, 1, 0, 0.454199,-99) , 
5, -0.142779, 0, 0, 0.491352,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.106879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492538,-99) , 
0, 0.499363, 1, 0, 0.518926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414468,-99) , 
8, 0.238916, 0, 0, 0.458538,-99) , 
0, 0.495238, 0, 0, 0.501242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482312,-99) , 
10, 0.5693, 1, 0, 0.523077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38699,-99) , 
9, -2.60757, 1, 0, 0.426278,-99) , 
9, -1.84359, 0, 0, 0.470209,-99) , 
8, 1.00048, 1, 0, 0.48932,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0898607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483072,-99) , 
8, 0.414125, 0, 0, 0.533896,-99) , 
5, -0.301618, 0, 0, 0.556141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483699,-99) , 
9, -1.35041, 0, 0, 0.492258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381358,-99) , 
0, 0.499992, 0, 0, 0.427178,-99) , 
2, 0.0591154, 1, 0, 0.478223,-99) , 
5, 0.0476088, 1, 0, 0.497748,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0846346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504349, 0, 1, 0.527845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417697,-99) , 
2, 0.00116899, 1, 0, 0.472042,-99) , 
10, -0.113216, 1, 0, 0.509347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457783,-99) , 
5, 0.523768, 1, 0, 0.477948,-99) , 
NN(
0, 
0, 
-1, -0.0434699, 1, -1, 0.425564,-99) , 
10, -1.13893, 0, 0, 0.459281,-99) , 
0, 0.499044, 0, 0, 0.479108,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0491479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49946,-99) , 
7, 1.56826, 0, 0, 0.516538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454685,-99) , 
8, 0.71526, 0, 0, 0.476621,-99) , 
7, -951.286, 0, 0, 0.500919,-99) , 
0, 0.505708, 0, 0, 0.505041,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0723636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.95364, 1, 1, 0.586509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396038,-99) , 
8, 0.179037, 0, 0, 0.496037,-99) , 
9, -3.50955, 1, 0, 0.516012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443049,-99) , 
10, -1.4487, 0, 0, 0.487266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383324,-99) , 
0, 0.497641, 0, 0, 0.478728,-99) , 
0, 0.497142, 1, 0, 0.493773,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.103711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503534, 1, 1, 0.633313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47164,-99) , 
9, -3.83211, 1, 0, 0.501906,-99) , 
0, 0.501902, 0, 0, 0.525721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46303,-99) , 
8, 0.519268, 1, 0, 0.474198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310398,-99) , 
8, -0.0649717, 0, 0, 0.462921,-99) , 
9, -2.93788, 1, 0, 0.489939,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0503895);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603745,-99) , 
NN(
NN(
0, 
0, 
-1, -3.87167, 1, 1, 0.516517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371646,-99) , 
5, 0.713119, 1, 0, 0.44434,-99) , 
8, -0.617048, 0, 0, 0.507328,-99) , 
10, -2.73509, 1, 0, 0.510555,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0622572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472373,-99) , 
9, -4.95231, 0, 0, 0.588713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490494,-99) , 
6, 0.00438846, 0, 0, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370075,-99) , 
6, 0.011521, 1, 0, 0.498203,-99) , 
8, -0.998674, 1, 0, 0.505365,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0737132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16172, 1, 1, 0.544182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453244,-99) , 
5, 0.954642, 1, 0, 0.497771,-99) , 
5, 0.809522, 1, 0, 0.525432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412908,-99) , 
8, -1.85296, 0, 0, 0.521925,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0737858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0311119, 0, 1, 0.53055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423953,-99) , 
5, 0.5238, 0, 0, 0.468019,-99) , 
2, 0.0425185, 1, 0, 0.514679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362476,-99) , 
2, -0.19705, 0, 0, 0.50634,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0680661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462464,-99) , 
8, -0.486543, 0, 0, 0.544895,-99) , 
NN(
0, 
0, 
-1, -2.53411, 0, -1, 0.475649,-99) , 
5, -0.714271, 1, 0, 0.48514,-99) , 
8, -1.56917, 1, 0, 0.490607,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0796609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438831,-99) , 
0, 0.491427, 0, 0, 0.522722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407374,-99) , 
8, -0.777557, 1, 0, 0.465969,-99) , 
10, -1.70238, 0, 0, 0.511735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383001,-99) , 
1, 0.0103789, 1, 0, 0.507912,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0965957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477082,-99) , 
7, -951.286, 0, 0, 0.555093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418703,-99) , 
10, -2.79453, 0, 0, 0.533334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437454,-99) , 
10, 0.819037, 1, 0, 0.505014,-99) , 
NN(
0, 
0, 
-1, -1.42419, 0, -1, 0.422991,-99) , 
10, -0.954616, 0, 0, 0.486742,-99) , 
8, -0.141381, 1, 0, 0.498655,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.064644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460805,-99) , 
0, 0.496189, 0, 0, 0.52098,-99) , 
NN(
0, 
0, 
-1, -1.22848, 0, -1, 0.478616,-99) , 
8, -0.141872, 1, 0, 0.489688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360074,-99) , 
1, 0.0098602, 1, 0, 0.485332,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.108795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.583311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435873,-99) , 
3, 1.60399, 1, 0, 0.485208,-99) , 
5, 0.61896, 0, 0, 0.536929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457305,-99) , 
5, 0.714269, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0.326357, 0, -1, 0.458377,-99) , 
10, -0.996326, 1, 0, 0.474384,-99) , 
2, -0.0304532, 1, 0, 0.490162,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0948206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.42806, 0, 1, 0.627169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499801,-99) , 
0, 0.500133, 0, 0, 0.520002,-99) , 
0, 0.493332, 1, 0, 0.535384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493816,-99) , 
9, -2.04836, 0, 0, 0.530054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388545,-99) , 
8, 1.80341, 0, 0, 0.440164,-99) , 
5, 0.523794, 0, 0, 0.495151,-99) , 
8, 0.715419, 1, 0, 0.516149,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.052941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0836038, 1, 1, 0.518872,-99) , 
NN(
0, 
0, 
-1, -0.383233, 1, -1, 0.471425,-99) , 
5, -0.238103, 0, 0, 0.506961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410877,-99) , 
2, -0.161821, 0, 0, 0.499681,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.106791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000623044, 0, 1, 0.620914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443374,-99) , 
1, 0.00176389, 1, 0, 0.505293,-99) , 
9, -3.12626, 1, 0, 0.546095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336021,-99) , 
5, -0.140115, 0, 0, 0.520872,-99) , 
NN(
0, 
0, 
-1, -1.5619, 0, -1, 0.462546,-99) , 
3, 3.33695, 0, 0, 0.479527,-99) , 
0, 0.495234, 1, 0, 0.496419,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0728161);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.45112, 0, 1, 0.553925,-99) , 
NN(
NN(
0, 
0, 
-1, -0.274015, 1, 1, 0.518586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387796,-99) , 
7, -951.286, 0, 0, 0.449767,-99) , 
5, -0.714288, 0, 0, 0.507686,-99) , 
9, -3.56838, 1, 0, 0.51828,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0460088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368823,-99) , 
0, 0.504846, 1, 0, 0.505685,-99) , 
0, 0.505708, 0, 0, 0.510245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439599,-99) , 
10, 0.956949, 1, 0, 0.503978,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0804599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454489,-99) , 
9, -1.22093, 0, 0, 0.480019,-99) , 
10, 0.521185, 1, 0, 0.520246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412764,-99) , 
0, 0.502841, 1, 0, 0.497259,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.457697,-99) , 
3, 3.33912, 0, 0, 0.469206,-99) , 
8, 1.57088, 0, 0, 0.479308,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0414082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456858,-99) , 
2, 0.0354547, 1, 0, 0.491522,-99) , 
0, 0.489521, 1, 0, 0.494645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397029,-99) , 
2, -0.205264, 0, 0, 0.489636,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0889612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405474,-99) , 
8, -1.32252, 0, 0, 0.519533,-99) , 
NN(
0, 
0, 
-1, 1.11672, 0, -1, 0.463652,-99) , 
10, -0.364011, 1, 0, 0.496007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377071,-99) , 
3, 8.18935, 1, 0, 0.488956,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.104096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3989,-99) , 
8, -0.244534, 0, 0, 0.511786,-99) , 
9, -4.13326, 1, 0, 0.52698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479717,-99) , 
10, -0.886192, 0, 0, 0.51067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396834,-99) , 
8, 0.149021, 1, 0, 0.431044,-99) , 
0, 0.499994, 1, 0, 0.485617,-99) , 
5, 0.142846, 1, 0, 0.497438,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0795524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.87512, 1, 1, 0.593937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479556,-99) , 
0, 0.5019, 0, 0, 0.496305,-99) , 
NN(
0, 
0, 
-1, -0.313815, 1, -1, 0.427947,-99) , 
10, -1.60653, 0, 0, 0.486275,-99) , 
8, -0.999094, 1, 0, 0.493864,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0683637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413729,-99) , 
3, 6.60289, 1, 0, 0.505625,-99) , 
9, -1.82683, 0, 0, 0.512105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384274,-99) , 
5, 0.523848, 1, 0, 0.457124,-99) , 
10, 0.449003, 1, 0, 0.502563,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0480514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495116,-99) , 
6, 0.00669736, 0, 0, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365321,-99) , 
6, 0.0127887, 1, 0, 0.496613,-99) , 
NN(
0, 
0, 
-1, 0.502717, 0, -1, 0.439806,-99) , 
0, 0.501901, 1, 0, 0.484384,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0441692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474774,-99) , 
8, -0.123606, 0, 0, 0.57174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497515,-99) , 
10, -1.07096, 1, 0, 0.505201,-99) , 
NN(
0, 
0, 
-1, -0.0338938, 1, -1, 0.467974,-99) , 
10, -1.28859, 0, 0, 0.4938,-99) , 
1, -0.00408005, 1, 0, 0.499496,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.105313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464273,-99) , 
0, 0.495222, 0, 0, 0.567343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427144,-99) , 
0, 0.499997, 1, 0, 0.495322,-99) , 
2, 0.0126069, 0, 0, 0.519556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476667,-99) , 
7, 1.47695, 0, 0, 0.491993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299278,-99) , 
7, -1.56501, 0, 0, 0.477038,-99) , 
7, -951.286, 1, 0, 0.492347,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0361551);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238486, 0, 1, 0.587279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497782,-99) , 
8, -0.427353, 1, 0, 0.503534,-99) , 
NN(
0, 
0, 
-1, -0.305844, 1, -1, 0.442899,-99) , 
9, -3.9359, 0, 0, 0.497326,-99) , 
8, -0.998736, 1, 0, 0.503734,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0747718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457545,-99) , 
5, 0.238064, 0, 0, 0.520351,-99) , 
6, 0.00439463, 0, 0, 0.543732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455663,-99) , 
8, 0.755915, 0, 0, 0.484536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307192,-99) , 
10, -1.46386, 0, 0, 0.476079,-99) , 
8, -0.14177, 1, 0, 0.492497,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0839723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40783,-99) , 
0, 0.505709, 1, 0, 0.52508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338944,-99) , 
7, -1.56281, 0, 0, 0.511627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452579,-99) , 
0, 0.497143, 0, 0, 0.490478,-99) , 
NN(
0, 
0, 
-1, 0.00171732, 1, -1, 0.42411,-99) , 
10, -1.56535, 0, 0, 0.476115,-99) , 
7, -951.286, 0, 0, 0.497509,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.123485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.45584, 1, 1, 0.54208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414751,-99) , 
6, 0.00453757, 0, 0, 0.464135,-99) , 
5, -0.428343, 0, 0, 0.526628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479878,-99) , 
0, 0.504712, 1, 0, 0.582543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400849,-99) , 
7, -951.286, 1, 0, 0.439622,-99) , 
5, -0.047635, 1, 0, 0.47589,-99) , 
0, 0.499996, 1, 0, 0.509665,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0906741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406795,-99) , 
10, -1.13809, 1, 0, 0.569063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42731,-99) , 
9, -2.95084, 0, 0, 0.485633,-99) , 
8, -0.00519698, 1, 0, 0.505207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245746,-99) , 
8, -1.37995, 1, 0, 0.413025,-99) , 
10, -2.43277, 0, 0, 0.499092,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.125984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372324,-99) , 
8, -1.40615, 0, 0, 0.539701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444541,-99) , 
10, -1.04804, 0, 0, 0.473342,-99) , 
5, 0.523853, 1, 0, 0.499029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552458,-99) , 
NN(
0, 
0, 
-1, -0.142772, 1, -1, 0.438646,-99) , 
9, -2.88671, 1, 0, 0.4486,-99) , 
8, 0.715294, 1, 0, 0.474683,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0823075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84511, 1, 1, 0.536361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419639,-99) , 
8, -1.56645, 0, 0, 0.530432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470917,-99) , 
8, 0.237698, 0, 0, 0.500723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440145,-99) , 
8, 0.999134, 1, 0, 0.478158,-99) , 
5, 0.809497, 1, 0, 0.509285,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0871126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49368,-99) , 
3, 1.8583, 1, 0, 0.554365,-99) , 
NN(
0, 
0, 
-1, 0.00576031, 1, -1, 0.484679,-99) , 
5, 0.333328, 1, 0, 0.505096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494868,-99) , 
10, -0.850589, 1, 0, 0.543907,-99) , 
NN(
0, 
0, 
-1, -1.20793, 1, -1, 0.364369,-99) , 
0, 0.492378, 1, 0, 0.448049,-99) , 
0, 0.494282, 0, 0, 0.492573,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.111436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0862378, 1, 1, 0.556347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395785,-99) , 
3, 3.26663, 1, 0, 0.47668,-99) , 
9, -4.01861, 0, 0, 0.53061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461119,-99) , 
5, 0.619065, 0, 0, 0.519705,-99) , 
NN(
0, 
0, 
-1, 0.170793, 0, -1, 0.439102,-99) , 
3, 4.17042, 0, 0, 0.455308,-99) , 
9, -2.9085, 1, 0, 0.488195,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0680628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439436,-99) , 
8, -0.10625, 1, 0, 0.558883,-99) , 
NN(
0, 
0, 
-1, -0.119311, 0, -1, 0.486949,-99) , 
10, -1.32016, 1, 0, 0.502247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325677,-99) , 
1, -0.000711809, 0, 0, 0.426001,-99) , 
10, -2.3824, 0, 0, 0.496568,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0529948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.41767, 0, 1, 0.602639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496976,-99) , 
8, -0.427612, 1, 0, 0.506417,-99) , 
5, -0.22434, 1, 0, 0.514804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390974,-99) , 
0, 0.499999, 0, 0, 0.430942,-99) , 
3, 2.44397, 0, 0, 0.460385,-99) , 
5, -0.714072, 0, 0, 0.506533,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0728005);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593453,-99) , 
NN(
NN(
0, 
0, 
-1, 0.332991, 1, 1, 0.54881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470029,-99) , 
10, -0.47448, 0, 0, 0.495027,-99) , 
9, -3.57841, 1, 0, 0.507982,-99) , 
9, -1.27817, 0, 0, 0.516531,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0990047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.52363, 0, 1, 0.556666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432666,-99) , 
5, 0.523003, 1, 0, 0.477029,-99) , 
3, 3.33912, 1, 0, 0.533318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440092,-99) , 
9, -4.23708, 0, 0, 0.519789,-99) , 
NN(
0, 
0, 
-1, 0.238106, 0, -1, 0.393151,-99) , 
7, -1.27966, 0, 0, 0.502559,-99) , 
7, -951.286, 1, 0, 0.513445,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0973178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470997,-99) , 
5, 0.891145, 1, 0, 0.510599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420163,-99) , 
3, 2.89382, 0, 0, 0.451148,-99) , 
5, 0.238083, 0, 0, 0.49213,-99) , 
1, -0.00593158, 1, 0, 0.49642,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0988343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.040277, 0, 1, 0.532206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246556,-99) , 
8, -1.3777, 1, 0, 0.410965,-99) , 
10, -2.39655, 0, 0, 0.523057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379314,-99) , 
5, -0.521924, 0, 0, 0.493431,-99) , 
NN(
0, 
0, 
-1, -0.57176, 0, -1, 0.406548,-99) , 
9, -3.02472, 1, 0, 0.441388,-99) , 
1, -0.002621, 0, 0, 0.509354,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0764389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440293,-99) , 
10, -1.90995, 0, 0, 0.506864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44109,-99) , 
9, -3.79166, 1, 0, 0.461365,-99) , 
3, 4.14964, 1, 0, 0.496231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279988,-99) , 
5, -0.0460913, 1, 0, 0.400264,-99) , 
1, 0.00663906, 1, 0, 0.490929,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.102551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464073,-99) , 
10, -1.94217, 0, 0, 0.523864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354734,-99) , 
6, 0.00869129, 1, 0, 0.517551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430687,-99) , 
0, 0.498094, 0, 0, 0.490976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321915,-99) , 
3, 3.09139, 1, 0, 0.451161,-99) , 
5, -0.428561, 0, 0, 0.502917,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0871333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447195,-99) , 
9, -2.10751, 1, 0, 0.530013,-99) , 
NN(
0, 
0, 
-1, -1.56465, 0, -1, 0.47288,-99) , 
7, -951.286, 1, 0, 0.493123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396884,-99) , 
10, 0.956949, 1, 0, 0.484726,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0813638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619842,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0014123, 1, 1, 0.532226,-99) , 
NN(
0, 
0, 
-1, 0.492695, 0, -1, 0.46265,-99) , 
0, 0.502849, 0, 0, 0.472587,-99) , 
8, -1.28401, 1, 0, 0.47962,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.132341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.251663, 1, 1, 0.565035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325079,-99) , 
5, -0.700682, 1, 0, 0.451373,-99) , 
5, -0.428529, 0, 0, 0.533764,-99) , 
NN(
NN(
0, 
0, 
-1, 1.15634, 1, 1, 0.583962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432779,-99) , 
9, -1.37316, 0, 0, 0.457563,-99) , 
5, -0.33334, 1, 0, 0.477345,-99) , 
8, 0.429371, 1, 0, 0.500921,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.11871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424395,-99) , 
10, -0.424687, 1, 0, 0.503355,-99) , 
10, 0.273529, 0, 0, 0.521066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444505,-99) , 
9, -2.13165, 1, 0, 0.495797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418656,-99) , 
9, -4.07646, 1, 0, 0.447257,-99) , 
9, -2.95451, 0, 0, 0.474974,-99) , 
0, 0.49619, 1, 0, 0.489865,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.130562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420994,-99) , 
7, -0.987626, 0, 0, 0.529836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465155,-99) , 
9, -3.42162, 1, 0, 0.477714,-99) , 
7, -951.286, 0, 0, 0.509663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407493,-99) , 
10, -2.28502, 0, 0, 0.464427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245561,-99) , 
8, -0.468479, 1, 0, 0.413122,-99) , 
10, -1.71303, 0, 0, 0.490813,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0546914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344016,-99) , 
10, -2.23326, 0, 0, 0.492947,-99) , 
8, -1.28436, 1, 0, 0.500466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434263,-99) , 
5, -0.922301, 0, 0, 0.493115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370274,-99) , 
5, -0.83675, 1, 0, 0.446591,-99) , 
5, -0.71429, 0, 0, 0.492016,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.104516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415598,-99) , 
8, 0.37787, 0, 0, 0.525028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4479,-99) , 
9, -4.39757, 1, 0, 0.463739,-99) , 
10, -0.881275, 0, 0, 0.496089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40801,-99) , 
10, 0.95171, 1, 0, 0.488076,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.090677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453022,-99) , 
0, 0.493335, 0, 0, 0.524092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390003,-99) , 
0, 0.497153, 1, 0, 0.447555,-99) , 
3, 3.73673, 1, 0, 0.509208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540184,-99) , 
NN(
0, 
0, 
-1, 0.315637, 1, -1, 0.460227,-99) , 
8, -0.705656, 1, 0, 0.467792,-99) , 
5, 0.619036, 1, 0, 0.485458,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0552999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.23348, 1, 1, 0.505218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396887,-99) , 
10, -2.51857, 0, 0, 0.498709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379893,-99) , 
8, -0.118697, 0, 0, 0.480894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361136,-99) , 
0, 0.493829, 0, 0, 0.398185,-99) , 
0, 0.492378, 1, 0, 0.437756,-99) , 
0, 0.494282, 0, 0, 0.485259,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0990268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436768,-99) , 
9, -2.32625, 0, 0, 0.486972,-99) , 
9, -2.94835, 1, 0, 0.499771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456426,-99) , 
5, 0.523987, 1, 0, 0.515177,-99) , 
NN(
0, 
0, 
-1, -0.142859, 0, -1, 0.4421,-99) , 
2, 0.0338413, 0, 0, 0.459512,-99) , 
8, 0.714992, 0, 0, 0.477893,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0912493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.83617, 1, 1, 0.589794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386877,-99) , 
8, -0.431074, 0, 0, 0.491617,-99) , 
0, 0.493787, 0, 0, 0.522574,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0019967, 1, -1, 0.477034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392544,-99) , 
8, 1.00844, 0, 0, 0.427219,-99) , 
5, 0.142836, 0, 0, 0.461914,-99) , 
0, 0.495238, 1, 0, 0.477068,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0726935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432113,-99) , 
8, -1.14597, 1, 0, 0.496717,-99) , 
10, -1.93511, 0, 0, 0.53499,-99) , 
NN(
0, 
0, 
-1, -0.904599, 0, -1, 0.471065,-99) , 
9, -3.9825, 1, 0, 0.478909,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0768832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427961,-99) , 
3, 4.0501, 1, 0, 0.542767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373877,-99) , 
10, 0.51637, 1, 0, 0.489749,-99) , 
5, 0.428595, 1, 0, 0.5072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349956,-99) , 
8, -1.85296, 0, 0, 0.502453,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0808557);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458682,-99) , 
9, -3.3673, 0, 0, 0.502872,-99) , 
NN(
0, 
0, 
-1, 2.1782, 0, -1, 0.448049,-99) , 
10, 0.423081, 1, 0, 0.492233,-99) , 
8, -1.28442, 1, 0, 0.499637,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.102518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462649,-99) , 
9, -2.2145, 1, 0, 0.521209,-99) , 
NN(
0, 
0, 
-1, -1.27504, 0, -1, 0.47152,-99) , 
7, -951.286, 1, 0, 0.489426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406868,-99) , 
8, -1.41273, 0, 0, 0.479374,-99) , 
NN(
0, 
0, 
-1, -0.930745, 0, -1, 0.338269,-99) , 
8, -1.03968, 1, 0, 0.414584,-99) , 
8, -0.71322, 0, 0, 0.478441,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0389252);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498164,-99) , 
9, -4.06243, 1, 0, 0.50454,-99) , 
NN(
0, 
0, 
-1, -2.41829, 0, -1, 0.356455,-99) , 
10, -2.15568, 0, 0, 0.496375,-99) , 
8, -1.28436, 1, 0, 0.501152,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.102362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473717,-99) , 
8, 1.5717, 1, 0, 0.532341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359982,-99) , 
6, 0.0115213, 1, 0, 0.525486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449234,-99) , 
10, -1.67511, 0, 0, 0.503258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359684,-99) , 
9, -2.6529, 0, 0, 0.444735,-99) , 
8, 0.145226, 1, 0, 0.463293,-99) , 
2, 0.0385174, 1, 0, 0.509687,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0811028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42323,-99) , 
0, 0.48943, 0, 0, 0.51483,-99) , 
0, 0.500312, 0, 0, 0.522046,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.535002,-99) , 
NN(
0, 
0, 
-1, 0.502851, 0, -1, 0.394886,-99) , 
10, -0.71198, 0, 0, 0.46268,-99) , 
0, 0.500947, 1, 0, 0.505275,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0771626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49129, 0, 1, 0.528857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433635,-99) , 
10, 1.00902, 1, 0, 0.517695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466871,-99) , 
0, 0.499043, 0, 0, 0.495204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350646,-99) , 
8, -0.121461, 1, 0, 0.470882,-99) , 
10, -1.39439, 0, 0, 0.50551,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0576082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 1, 1, 0.63339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367485,-99) , 
6, 0.00715696, 1, 0, 0.499967,-99) , 
5, -0.156457, 1, 0, 0.509134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385548,-99) , 
8, -0.723214, 0, 0, 0.48202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329615,-99) , 
3, 0.679352, 0, 0, 0.443585,-99) , 
5, -0.619044, 0, 0, 0.497569,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0991237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714356, 1, 1, 0.562823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419234,-99) , 
9, -3.44313, 0, 0, 0.480344,-99) , 
7, -951.286, 0, 0, 0.531452,-99) , 
NN(
0, 
0, 
-1, 1.01958, 0, -1, 0.4675,-99) , 
10, -0.478232, 1, 0, 0.501098,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0937589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0806992, 1, 1, 0.661639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461764,-99) , 
5, 0.142861, 1, 0, 0.503498,-99) , 
2, 0.0269396, 0, 0, 0.54182,-99) , 
NN(
0, 
0, 
-1, -1.29878, 0, -1, 0.467438,-99) , 
9, -3.42179, 1, 0, 0.487084,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0984957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496199, 1, 1, 0.565723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478989,-99) , 
9, -3.30941, 1, 0, 0.507803,-99) , 
8, 1.28656, 0, 0, 0.525094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464617,-99) , 
0, 0.500927, 0, 0, 0.499563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319085,-99) , 
9, -3.99598, 0, 0, 0.466418,-99) , 
2, 0.055291, 1, 0, 0.513098,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.063119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.94463, 0, 1, 0.576568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409595,-99) , 
5, -0.714302, 0, 0, 0.533886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495077,-99) , 
0, 0.504757, 0, 0, 0.499772,-99) , 
NN(
0, 
0, 
-1, -0.0487182, 1, -1, 0.400583,-99) , 
10, -1.34263, 0, 0, 0.485429,-99) , 
8, -0.427469, 1, 0, 0.493346,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.104464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.21034, 1, 1, 0.542412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482076,-99) , 
9, -3.26881, 0, 0, 0.511591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425828,-99) , 
0, 0.492394, 1, 0, 0.441896,-99) , 
8, 0.333876, 1, 0, 0.479409,-99) , 
9, -2.20387, 0, 0, 0.498545,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0367605);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458738,-99) , 
2, -0.0357458, 0, 0, 0.490363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422124,-99) , 
5, -0.904741, 0, 0, 0.484835,-99) , 
0, 0.490474, 1, 0, 0.488733,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0790385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496156,-99) , 
0, 0.495237, 1, 0, 0.519594,-99) , 
3, 4.78182, 0, 0, 0.532715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480585,-99) , 
2, 0.00326845, 0, 0, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411581,-99) , 
0, 0.495236, 0, 0, 0.478675,-99) , 
5, 0.71426, 1, 0, 0.504189,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0911373);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434385,-99) , 
8, -0.44537, 0, 0, 0.544924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358121,-99) , 
10, 0.370074, 1, 0, 0.489873,-99) , 
5, 0.0476625, 1, 0, 0.50393,-99) , 
9, -1.0028, 0, 0, 0.511,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0777692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427721,-99) , 
0, 0.502848, 1, 0, 0.525153,-99) , 
1, -0.0044658, 1, 0, 0.546209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552519,-99) , 
NN(
0, 
0, 
-1, 0.191167, 1, -1, 0.476015,-99) , 
9, -1.29454, 0, 0, 0.484143,-99) , 
5, -0.0475451, 1, 0, 0.498845,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.110611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408894,-99) , 
8, -0.662392, 0, 0, 0.572846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289904,-99) , 
8, -0.839309, 1, 0, 0.46869,-99) , 
10, -2.07146, 0, 0, 0.539029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487151,-99) , 
8, 0.824518, 1, 0, 0.502675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351065,-99) , 
8, 0.277038, 1, 0, 0.407035,-99) , 
10, -0.950909, 0, 0, 0.488654,-99) , 
8, 0.143749, 1, 0, 0.504777,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0838924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618086, 1, 1, 0.535323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345626,-99) , 
8, -0.0730071, 1, 0, 0.482352,-99) , 
10, -1.33773, 0, 0, 0.520531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532913,-99) , 
NN(
0, 
0, 
-1, 0.523706, 0, -1, 0.424067,-99) , 
0, 0.490791, 1, 0, 0.449314,-99) , 
0, 0.494283, 0, 0, 0.50475,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0947623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497272,-99) , 
9, -2.06679, 1, 0, 0.534216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411945,-99) , 
10, -2.46364, 0, 0, 0.526116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450055,-99) , 
0, 0.502218, 1, 0, 0.488151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394498,-99) , 
9, -3.72621, 1, 0, 0.433417,-99) , 
9, -2.74014, 0, 0, 0.458964,-99) , 
0, 0.500948, 1, 0, 0.507068,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0886617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461099,-99) , 
9, -1.45743, 0, 0, 0.526039,-99) , 
9, -2.22929, 1, 0, 0.544472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590457,-99) , 
NN(
0, 
0, 
-1, -2.29973, 0, -1, 0.470959,-99) , 
8, -1.36684, 1, 0, 0.477776,-99) , 
8, 1.28376, 0, 0, 0.495994,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0676677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.462878, 0, 1, 0.524759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463926,-99) , 
8, 0.326976, 1, 0, 0.481178,-99) , 
5, 0.809521, 1, 0, 0.507098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246411,-99) , 
8, -1.57542, 1, 0, 0.408679,-99) , 
10, -2.54145, 0, 0, 0.501433,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0558757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424245,-99) , 
5, -0.0451734, 0, 0, 0.51738,-99) , 
0, 0.503803, 0, 0, 0.532492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498134,-99) , 
3, 1.17831, 1, 0, 0.508558,-99) , 
NN(
0, 
0, 
-1, -3.83122, 0, -1, 0.462589,-99) , 
3, 0.932811, 0, 0, 0.494942,-99) , 
3, 3.51043, 0, 0, 0.505336,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0910593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.776811, 0, 1, 0.58014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441494,-99) , 
9, -2.41647, 0, 0, 0.49631,-99) , 
9, -2.86204, 1, 0, 0.50912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470487,-99) , 
0, 0.500945, 0, 0, 0.491876,-99) , 
NN(
0, 
0, 
-1, 0.254298, 0, -1, 0.357527,-99) , 
10, -0.944805, 1, 0, 0.46911,-99) , 
8, 0.429255, 0, 0, 0.490952,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0817744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136721, 1, 1, 0.529318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41375,-99) , 
6, 0.00167984, 0, 0, 0.458281,-99) , 
2, 0.0595711, 1, 0, 0.515402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426283,-99) , 
3, 1.79964, 1, 0, 0.469814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311264,-99) , 
3, 4.03148, 1, 0, 0.452429,-99) , 
5, -0.142866, 0, 0, 0.499109,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.109725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.98831, 0, 1, 0.5541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439033,-99) , 
10, 0.987881, 1, 0, 0.482676,-99) , 
10, 0.349463, 1, 0, 0.524933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462067,-99) , 
10, -1.90977, 0, 0, 0.519288,-99) , 
NN(
0, 
0, 
-1, -1.3326, 0, -1, 0.432618,-99) , 
8, -0.0449454, 1, 0, 0.475051,-99) , 
9, -2.74014, 0, 0, 0.499215,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0761849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0116503, 0, 1, 0.551531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461508,-99) , 
8, 0.59028, 1, 0, 0.499044,-99) , 
9, -2.16914, 0, 0, 0.514788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49587,-99) , 
0, 0.498088, 0, 0, 0.530096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413678,-99) , 
2, 0.148939, 1, 0, 0.464129,-99) , 
2, 0.0823977, 1, 0, 0.507549,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0857903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499048, 1, 1, 0.629068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388285,-99) , 
2, 0.0415752, 1, 0, 0.507891,-99) , 
3, 1.63786, 1, 0, 0.558773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489244,-99) , 
8, -0.713751, 1, 0, 0.497371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437836,-99) , 
5, 0.950085, 1, 0, 0.488189,-99) , 
5, -0.0476333, 1, 0, 0.504692,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.091457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00482223, 0, 1, 0.546423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473753,-99) , 
5, 0.523742, 1, 0, 0.495093,-99) , 
10, -0.537358, 1, 0, 0.521724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443403,-99) , 
0, 0.503261, 1, 0, 0.473597,-99) , 
NN(
0, 
0, 
-1, -0.00181671, 1, -1, 0.365615,-99) , 
9, -3.6103, 0, 0, 0.443681,-99) , 
0, 0.5019, 1, 0, 0.504245,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0808569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00123584, 1, 1, 0.52939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377131,-99) , 
5, 0.510045, 0, 0, 0.458903,-99) , 
9, -3.67025, 0, 0, 0.512496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515167,-99) , 
NN(
0, 
0, 
-1, 0.553577, 0, -1, 0.417254,-99) , 
9, -3.22177, 1, 0, 0.443332,-99) , 
5, -0.714152, 0, 0, 0.501472,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.067646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477755,-99) , 
10, -0.819578, 1, 0, 0.497484,-99) , 
NN(
0, 
0, 
-1, 0.497145, 0, -1, 0.416831,-99) , 
2, -0.129286, 0, 0, 0.489129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408045,-99) , 
2, 0.186305, 1, 0, 0.484057,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0705569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454771,-99) , 
7, -951.286, 0, 0, 0.489917,-99) , 
10, -1.99502, 1, 0, 0.495616,-99) , 
NN(
0, 
0, 
-1, -1.71236, 1, -1, 0.370745,-99) , 
10, -2.54145, 0, 0, 0.48766,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0902378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499007,-99) , 
5, 0.56485, 1, 0, 0.52855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434208,-99) , 
0, 0.499046, 1, 0, 0.479218,-99) , 
7, -951.286, 1, 0, 0.494523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428485,-99) , 
7, -951.287, 0, 0, 0.474228,-99) , 
NN(
0, 
0, 
-1, -0.795756, 1, -1, 0.368376,-99) , 
8, -0.143647, 0, 0, 0.432851,-99) , 
5, -0.523636, 0, 0, 0.482326,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.119254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488686,-99) , 
8, -0.0283191, 0, 0, 0.558544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456906,-99) , 
9, -1.85141, 0, 0, 0.484004,-99) , 
8, 0.496054, 1, 0, 0.506829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450977,-99) , 
8, -0.77934, 1, 0, 0.526721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366018,-99) , 
5, 0.714816, 1, 0, 0.431576,-99) , 
10, -1.65055, 0, 0, 0.492257,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0813557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.853387, 1, 1, 0.516386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401554,-99) , 
8, -0.119671, 0, 0, 0.509866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435043,-99) , 
10, -1.94142, 0, 0, 0.490341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304382,-99) , 
8, -0.0492879, 1, 0, 0.453132,-99) , 
10, -1.28859, 0, 0, 0.493058,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.080099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.12547, 0, 1, 0.530289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474407,-99) , 
5, -0.237994, 1, 0, 0.49025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403471,-99) , 
0, 0.492517, 1, 0, 0.425128,-99) , 
3, 3.59089, 1, 0, 0.471558,-99) , 
0, 0.499044, 0, 0, 0.495066,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0763761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488072,-99) , 
2, 0.0150866, 0, 0, 0.523232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468929,-99) , 
2, -0.0782733, 1, 0, 0.481417,-99) , 
1, -0.00129495, 1, 0, 0.493306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396694,-99) , 
0, 0.489526, 0, 0, 0.490229,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0903696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59347, 0, 1, 0.615314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489791,-99) , 
5, -0.523864, 0, 0, 0.588073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465413,-99) , 
3, 3.56867, 1, 0, 0.52343,-99) , 
NN(
0, 
0, 
-1, 0.142846, 0, -1, 0.464533,-99) , 
0, 0.498093, 1, 0, 0.492514,-99) , 
9, -3.9825, 1, 0, 0.50405,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.106499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426443,-99) , 
10, -1.97642, 0, 0, 0.523341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428502,-99) , 
5, 0.659883, 1, 0, 0.453121,-99) , 
0, 0.495237, 0, 0, 0.504276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417392,-99) , 
7, -951.286, 1, 0, 0.471869,-99) , 
NN(
0, 
0, 
-1, 1.74162, 0, -1, 0.403235,-99) , 
0, 0.499045, 1, 0, 0.439786,-99) , 
5, -0.428463, 0, 0, 0.489941,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0702491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00124805, 0, 1, 0.562774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478079,-99) , 
7, -951.286, 1, 0, 0.497196,-99) , 
0, 0.502853, 0, 0, 0.50638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419905,-99) , 
10, 0.95171, 1, 0, 0.498882,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.106977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.99972, 0, 1, 0.523817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414356,-99) , 
5, -0.14287, 1, 0, 0.452129,-99) , 
10, 0.294587, 1, 0, 0.503597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424087,-99) , 
5, 0.714077, 1, 0, 0.488308,-99) , 
NN(
0, 
0, 
-1, -1.58114, 0, -1, 0.369338,-99) , 
8, -0.405845, 1, 0, 0.437577,-99) , 
10, -1.35847, 0, 0, 0.485171,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0588483);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457143,-99) , 
5, 0.238118, 0, 0, 0.488239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399078,-99) , 
5, 0.142441, 1, 0, 0.437656,-99) , 
9, -1.82277, 1, 0, 0.479978,-99) , 
9, -1.01389, 0, 0, 0.485734,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.122749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619025, 1, 1, 0.546144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329343,-99) , 
7, -1.55706, 0, 0, 0.527637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461574,-99) , 
5, 0.523836, 1, 0, 0.537239,-99) , 
NN(
0, 
0, 
-1, 0.706074, 0, -1, 0.437069,-99) , 
0, 0.499994, 0, 0, 0.468809,-99) , 
7, -951.286, 0, 0, 0.50494,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.054105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490152,-99) , 
3, 3.49386, 0, 0, 0.501862,-99) , 
0, 0.506072, 0, 0, 0.506104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32899,-99) , 
9, -2.77333, 1, 0, 0.410222,-99) , 
0, 0.491426, 0, 0, 0.498383,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.110665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443714,-99) , 
9, -2.92131, 1, 0, 0.482203,-99) , 
9, -1.86189, 0, 0, 0.497866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470617,-99) , 
5, 0.206371, 0, 0, 0.519886,-99) , 
NN(
0, 
0, 
-1, 0.878115, 0, -1, 0.435388,-99) , 
8, -0.427501, 1, 0, 0.449106,-99) , 
5, 0.809497, 0, 0, 0.467777,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0757863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0279381, 0, 1, 0.545619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460867,-99) , 
8, 1.56518, 1, 0, 0.527213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483373,-99) , 
5, 0.564635, 1, 0, 0.492784,-99) , 
NN(
0, 
0, 
-1, 0.500133, 0, -1, 0.442284,-99) , 
5, 0.238077, 0, 0, 0.476248,-99) , 
0, 0.49714, 1, 0, 0.496174,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.083296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493332, 1, 1, 0.539671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448487,-99) , 
0, 0.500949, 0, 0, 0.47272,-99) , 
2, -0.00858989, 0, 0, 0.509936,-99) , 
NN(
0, 
0, 
-1, 0.76878, 1, -1, 0.463915,-99) , 
5, 0.904743, 1, 0, 0.499238,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0530572);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.14284, 1, 1, 0.607935,-99) , 
NN(
NN(
0, 
0, 
-1, -2.05308, 1, 1, 0.52343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448649,-99) , 
0, 0.499855, 1, 0, 0.487531,-99) , 
5, 0.714236, 1, 0, 0.504237,-99) , 
0, 0.504757, 0, 0, 0.511409,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0845156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.941301, 1, 1, 0.53473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464311,-99) , 
6, 0.00219445, 0, 0, 0.493582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379129,-99) , 
6, 0.011521, 1, 0, 0.488714,-99) , 
8, 1.57212, 0, 0, 0.498333,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0591178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393251,-99) , 
5, 0.427944, 1, 0, 0.577061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416542,-99) , 
3, 6.90202, 1, 0, 0.494608,-99) , 
NN(
0, 
0, 
-1, -0.0104216, 0, -1, 0.431571,-99) , 
5, -0.619033, 0, 0, 0.484622,-99) , 
1, -0.0039028, 1, 0, 0.491205,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0787305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472537,-99) , 
3, 0.851268, 0, 0, 0.588028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496268,-99) , 
8, -0.998781, 1, 0, 0.502964,-99) , 
5, -0.14287, 1, 0, 0.519925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449388,-99) , 
5, -0.428382, 0, 0, 0.504179,-99) , 
NN(
0, 
0, 
-1, -0.857905, 1, -1, 0.369406,-99) , 
0, 0.502218, 0, 0, 0.459474,-99) , 
0, 0.500948, 1, 0, 0.502587,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0651105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.511678, 0, 1, 0.561596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484814,-99) , 
8, 1.29402, 1, 0, 0.538262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489215,-99) , 
3, 6.58082, 0, 0, 0.496948,-99) , 
NN(
0, 
0, 
-1, -3.77546, 0, -1, 0.440362,-99) , 
0, 0.497592, 0, 0, 0.482661,-99) , 
0, 0.495234, 1, 0, 0.496779,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0922611);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.02815, 1, 1, 0.530282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435512,-99) , 
8, -0.39945, 0, 0, 0.554371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457084,-99) , 
5, -0.33336, 1, 0, 0.472154,-99) , 
7, 0.721117, 0, 0, 0.491404,-99) , 
7, -951.286, 1, 0, 0.505587,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.118621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470304,-99) , 
3, 0.960075, 0, 0, 0.541174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370205,-99) , 
10, -0.669756, 0, 0, 0.4602,-99) , 
3, 3.63661, 1, 0, 0.5222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411537,-99) , 
6, 0.0022388, 1, 0, 0.485701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405123,-99) , 
10, 0.24218, 1, 0, 0.47073,-99) , 
5, 0.714291, 1, 0, 0.495398,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0809564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448855,-99) , 
0, 0.493739, 0, 0, 0.519369,-99) , 
0, 0.491426, 1, 0, 0.525141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57933,-99) , 
NN(
0, 
0, 
-1, 0.492388, 0, -1, 0.454342,-99) , 
8, -0.429788, 1, 0, 0.47304,-99) , 
2, -0.0350475, 0, 0, 0.511563,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0756928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488702,-99) , 
5, 0.546433, 1, 0, 0.504868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322867,-99) , 
5, -0.20197, 1, 0, 0.463654,-99) , 
5, 0.0475976, 0, 0, 0.494297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535677,-99) , 
NN(
0, 
0, 
-1, -0.428707, 0, -1, 0.418601,-99) , 
0, 0.505981, 0, 0, 0.44013,-99) , 
0, 0.5019, 1, 0, 0.482666,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0753132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.117684, 1, 1, 0.523726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457074,-99) , 
8, -0.462657, 1, 0, 0.476588,-99) , 
0, 0.496187, 0, 0, 0.507684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432669,-99) , 
10, 0.615228, 1, 0, 0.496095,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0581171);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4971,-99) , 
0, 0.496189, 1, 0, 0.515104,-99) , 
NN(
0, 
0, 
-1, -0.428409, 0, -1, 0.453654,-99) , 
9, -3.70176, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397867,-99) , 
2, 0.200071, 1, 0, 0.496623,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0754824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.42641, 1, 1, 0.519167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420233,-99) , 
5, 0.333406, 1, 0, 0.470965,-99) , 
0, 0.5019, 1, 0, 0.508789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426429,-99) , 
0, 0.496183, 0, 0, 0.499768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313366,-99) , 
5, 0.240741, 0, 0, 0.466645,-99) , 
3, 4.16304, 1, 0, 0.499148,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0555409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.80847, 0, 1, 0.612986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495689,-99) , 
0, 0.49995, 0, 0, 0.507596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425144,-99) , 
8, -0.0333464, 1, 0, 0.445844,-99) , 
0, 0.502852, 1, 0, 0.49731,-99) , 
9, -4.39116, 1, 0, 0.503792,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0828661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142608, 1, 1, 0.548609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477452,-99) , 
9, -1.35678, 1, 0, 0.529615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424794,-99) , 
8, 0.0936205, 1, 0, 0.465019,-99) , 
0, 0.504755, 0, 0, 0.474543,-99) , 
10, -0.478232, 0, 0, 0.498598,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0960445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454652,-99) , 
10, -2.65685, 0, 0, 0.544994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432724,-99) , 
5, -0.809421, 0, 0, 0.524272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468384,-99) , 
5, 0.904751, 0, 0, 0.48411,-99) , 
NN(
0, 
0, 
-1, 0.497129, 1, -1, 0.407237,-99) , 
2, 0.0810016, 1, 0, 0.472374,-99) , 
8, 0.143749, 1, 0, 0.488582,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0743425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.22278, 1, 1, 0.5272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397525,-99) , 
8, 0.42411, 0, 0, 0.458921,-99) , 
5, -0.238159, 0, 0, 0.511821,-99) , 
NN(
0, 
0, 
-1, 0.500359, 0, -1, 0.468947,-99) , 
0, 0.499996, 1, 0, 0.496816,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0551979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714297, 1, 1, 0.547588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492097,-99) , 
5, -0.0476456, 1, 0, 0.504418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391958,-99) , 
9, -2.66168, 1, 0, 0.455716,-99) , 
0, 0.494284, 0, 0, 0.494173,-99) , 
8, 1.57186, 0, 0, 0.504762,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0921191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9991, 0, 1, 0.566381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481869,-99) , 
0, 0.496164, 1, 0, 0.506792,-99) , 
10, 0.309091, 1, 0, 0.540812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40002,-99) , 
3, 6.58624, 1, 0, 0.494968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378814,-99) , 
2, 0.0204335, 0, 0, 0.420632,-99) , 
5, -0.523632, 0, 0, 0.477454,-99) , 
8, 0.714063, 0, 0, 0.50633,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0735029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468174,-99) , 
2, -0.00363884, 1, 0, 0.495369,-99) , 
NN(
0, 
0, 
-1, 0.495779, 1, -1, 0.45672,-99) , 
0, 0.496187, 0, 0, 0.482317,-99) , 
8, 2.142, 0, 0, 0.488318,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0764047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487775,-99) , 
9, -4.7794, 0, 0, 0.549164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456619,-99) , 
0, 0.499994, 1, 0, 0.499437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451421,-99) , 
0, 0.502852, 0, 0, 0.467268,-99) , 
5, 0.619065, 0, 0, 0.486045,-99) , 
9, -4.34435, 1, 0, 0.490589,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0917768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0117575, 1, 1, 0.546191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476409,-99) , 
0, 0.492403, 1, 0, 0.487495,-99) , 
5, 0.809506, 0, 0, 0.511464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454799,-99) , 
10, -1.44679, 0, 0, 0.487612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300822,-99) , 
9, -2.43066, 1, 0, 0.470355,-99) , 
8, 0.429616, 0, 0, 0.493664,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0828265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386533,-99) , 
10, -1.72765, 0, 0, 0.525295,-99) , 
9, -4.15272, 1, 0, 0.534573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481215,-99) , 
9, -3.28273, 1, 0, 0.517648,-99) , 
NN(
0, 
0, 
-1, 0.490337, 0, -1, 0.47019,-99) , 
1, 0.00191959, 0, 0, 0.480849,-99) , 
0, 0.499043, 0, 0, 0.502796,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0939392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0568836, 0, 1, 0.568059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4586,-99) , 
10, -0.0272117, 1, 0, 0.504157,-99) , 
5, 0.238096, 1, 0, 0.52123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44284,-99) , 
0, 0.504893, 0, 0, 0.476078,-99) , 
NN(
0, 
0, 
-1, 0.504346, 1, -1, 0.384693,-99) , 
5, -0.428358, 0, 0, 0.449722,-99) , 
0, 0.5019, 1, 0, 0.505433,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0681266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06396, 0, 1, 0.571185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495219,-99) , 
10, -0.043455, 1, 0, 0.545912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485142,-99) , 
10, 0.0736502, 0, 0, 0.502053,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.398331,-99) , 
1, 0.0045751, 1, 0, 0.493371,-99) , 
0, 0.494286, 1, 0, 0.503039,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0791179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431082,-99) , 
10, -2.1302, 0, 0, 0.521069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419403,-99) , 
2, 0.146588, 1, 0, 0.512203,-99) , 
NN(
0, 
0, 
-1, -2.45964, 1, -1, 0.458439,-99) , 
5, 0.904749, 1, 0, 0.499956,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0855661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458707,-99) , 
10, -2.50171, 0, 0, 0.57172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344595,-99) , 
8, -0.563121, 1, 0, 0.527581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481361,-99) , 
8, -0.202536, 1, 0, 0.486298,-99) , 
NN(
0, 
0, 
-1, -1.53677, 1, -1, 0.368181,-99) , 
8, -0.362783, 0, 0, 0.476433,-99) , 
10, -1.84159, 1, 0, 0.48288,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.100691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483514,-99) , 
10, 0.0174699, 1, 0, 0.519707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349797,-99) , 
10, -1.45226, 0, 0, 0.437904,-99) , 
10, -1.24224, 0, 0, 0.511305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469935,-99) , 
5, 0.714351, 1, 0, 0.525616,-99) , 
NN(
0, 
0, 
-1, -3.31563, 0, -1, 0.36982,-99) , 
10, -1.60498, 1, 0, 0.473277,-99) , 
8, -0.141867, 0, 0, 0.50147,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0784896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462205,-99) , 
10, -2.49733, 0, 0, 0.578633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400455,-99) , 
9, -2.95048, 1, 0, 0.556508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44023,-99) , 
10, -1.23263, 0, 0, 0.507748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35717,-99) , 
10, -1.45835, 0, 0, 0.50164,-99) , 
8, -0.141872, 1, 0, 0.514088,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0894876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454803,-99) , 
6, 0.00268961, 0, 0, 0.474579,-99) , 
6, 0.00941483, 0, 0, 0.478287,-99) , 
9, -1.31401, 0, 0, 0.485486,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.107628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499989,-99) , 
0, 0.500929, 1, 0, 0.55765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463734,-99) , 
5, 0.904734, 1, 0, 0.537516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44846,-99) , 
9, -3.11257, 1, 0, 0.507457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424113,-99) , 
2, 0.067462, 0, 0, 0.447308,-99) , 
0, 0.49619, 0, 0, 0.487385,-99) , 
8, 0.714867, 0, 0, 0.510843,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0942279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450462,-99) , 
2, 0.1601, 1, 0, 0.531815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45402,-99) , 
0, 0.500951, 0, 0, 0.474632,-99) , 
1, 0.00145893, 1, 0, 0.514946,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498079, 1, 1, 0.544476,-99) , 
NN(
0, 
0, 
-1, -0.14211, 0, -1, 0.422622,-99) , 
7, -951.286, 1, 0, 0.460191,-99) , 
2, -0.0573264, 0, 0, 0.503971,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.116242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904588, 1, 1, 0.563372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341217,-99) , 
7, -1.56288, 0, 0, 0.543798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480834,-99) , 
8, 1.58434, 1, 0, 0.519686,-99) , 
NN(
0, 
0, 
-1, 0.503801, 1, -1, 0.465364,-99) , 
8, 0.713998, 0, 0, 0.489791,-99) , 
7, -951.286, 0, 0, 0.523072,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0975927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.621543, 1, 1, 0.593615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443669,-99) , 
0, 0.499048, 0, 0, 0.500974,-99) , 
10, -0.795619, 1, 0, 0.540724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494396,-99) , 
7, -951.286, 1, 0, 0.541338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466245,-99) , 
9, -1.35711, 0, 0, 0.474856,-99) , 
5, -0.809382, 1, 0, 0.484462,-99) , 
3, 3.2797, 0, 0, 0.501256,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0594717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495281, 1, 1, 0.549248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472448,-99) , 
5, -0.142794, 0, 0, 0.507096,-99) , 
2, 0.0595711, 0, 0, 0.514548,-99) , 
NN(
0, 
0, 
-1, 0.489431, 1, -1, 0.421051,-99) , 
0, 0.491426, 0, 0, 0.506862,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0451228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569555,-99) , 
NN(
NN(
0, 
0, 
-1, -1.83263, 0, 1, 0.509526,-99) , 
NN(
0, 
0, 
-1, -0.142961, 1, -1, 0.434925,-99) , 
10, 0.251627, 1, 0, 0.496747,-99) , 
9, -1.02109, 0, 0, 0.501798,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0775165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479165,-99) , 
8, -0.0444165, 1, 0, 0.497209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311326,-99) , 
10, -2.47459, 0, 0, 0.490699,-99) , 
8, -1.56919, 1, 0, 0.495023,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0977685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475765,-99) , 
4, 0.999996, 0, 0, 0.530931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349428,-99) , 
4, 0.999906, 0, 0, 0.51698,-99) , 
NN(
0, 
0, 
-1, -0.495352, 0, -1, 0.465827,-99) , 
5, 0.809506, 1, 0, 0.495435,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0866319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.729377, 1, 1, 0.541434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460097,-99) , 
7, -951.286, 1, 0, 0.49106,-99) , 
3, 1.45022, 0, 0, 0.517327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442523,-99) , 
10, -0.0715333, 1, 0, 0.493377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333583,-99) , 
5, -0.238104, 0, 0, 0.470946,-99) , 
3, 3.59089, 1, 0, 0.50367,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0756768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493334, 1, 1, 0.531376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452598,-99) , 
8, 2.14748, 1, 0, 0.523329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52914,-99) , 
NN(
0, 
0, 
-1, 0.499046, 0, -1, 0.412987,-99) , 
8, -1.2395, 1, 0, 0.453258,-99) , 
9, -4.02802, 0, 0, 0.513514,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0704897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.910769, 1, 1, 0.52947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474016,-99) , 
5, 0.618536, 1, 0, 0.531647,-99) , 
NN(
0, 
0, 
-1, -3.0363, 1, -1, 0.467915,-99) , 
0, 0.49333, 1, 0, 0.476376,-99) , 
9, -1.49815, 0, 0, 0.48359,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0678832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499109,-99) , 
8, 2.18203, 0, 0, 0.506752,-99) , 
8, 0.5505, 1, 0, 0.516125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423432,-99) , 
5, -0.523685, 0, 0, 0.511076,-99) , 
NN(
0, 
0, 
-1, -2.97984, 0, -1, 0.431151,-99) , 
9, -3.40426, 1, 0, 0.477938,-99) , 
8, 0.428102, 0, 0, 0.499384,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0784845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488932,-99) , 
10, 0.223428, 1, 0, 0.526558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4126,-99) , 
10, -0.595433, 0, 0, 0.516403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454643,-99) , 
0, 0.50095, 1, 0, 0.497709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347055,-99) , 
10, -0.466796, 1, 0, 0.483369,-99) , 
8, 0.714895, 0, 0, 0.49899,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.115717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452246,-99) , 
10, 0.722985, 1, 0, 0.544514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482802,-99) , 
5, 0.523748, 1, 0, 0.520884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442695,-99) , 
0, 0.495234, 1, 0, 0.459616,-99) , 
1, 0.000677622, 0, 0, 0.483505,-99) , 
8, 1.57199, 0, 0, 0.497023,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0991573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60321, 0, 1, 0.570624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435756,-99) , 
2, 0.0676617, 1, 0, 0.520897,-99) , 
0, 0.499039, 0, 0, 0.542133,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501084, 1, 1, 0.545146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460371,-99) , 
5, -0.714106, 1, 0, 0.470998,-99) , 
0, 0.499996, 0, 0, 0.49421,-99) , 
10, -0.707594, 0, 0, 0.519649,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0838985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473147,-99) , 
8, 2.18449, 0, 0, 0.527335,-99) , 
10, 0.458699, 1, 0, 0.54989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492933,-99) , 
5, -0.80941, 1, 0, 0.50147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415817,-99) , 
8, -0.169238, 1, 0, 0.451617,-99) , 
0, 0.49619, 0, 0, 0.484501,-99) , 
8, 1.5719, 0, 0, 0.497817,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0493819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.7144, 1, 1, 0.558954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494732,-99) , 
0, 0.504757, 0, 0, 0.502146,-99) , 
9, -2.12824, 0, 0, 0.513726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449333,-99) , 
10, 0.85551, 1, 0, 0.506866,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0683538);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.147837, 0, 1, 0.568301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453256,-99) , 
8, -0.711161, 0, 0, 0.531579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482792,-99) , 
8, 1.85735, 0, 0, 0.491652,-99) , 
2, -0.00732045, 1, 0, 0.504465,-99) , 
2, -0.0809292, 1, 0, 0.512989,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0544236);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.28442, 1, 1, 0.527185,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0984395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467875,-99) , 
10, 0.301446, 1, 0, 0.52283,-99) , 
8, -1.28442, 1, 0, 0.529567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522319,-99) , 
NN(
0, 
0, 
-1, 0.495238, 1, -1, 0.407608,-99) , 
8, 0.972604, 0, 0, 0.439027,-99) , 
5, -0.238103, 0, 0, 0.507804,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0590682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 0, 1, 0.582533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413351,-99) , 
10, -1.77689, 0, 0, 0.503691,-99) , 
8, -0.713192, 1, 0, 0.511473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45278,-99) , 
10, -0.666167, 1, 0, 0.48288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389456,-99) , 
2, -0.00650641, 0, 0, 0.441054,-99) , 
5, -0.714161, 0, 0, 0.500775,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0677138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465014,-99) , 
10, -1.59725, 1, 0, 0.587463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432857,-99) , 
10, -1.43666, 0, 0, 0.505488,-99) , 
8, -0.265159, 1, 0, 0.518021,-99) , 
NN(
0, 
0, 
-1, -1.41716, 1, -1, 0.404405,-99) , 
10, -2.43088, 0, 0, 0.509958,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0625088);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49095,-99) , 
10, -0.955325, 0, 0, 0.512342,-99) , 
NN(
0, 
0, 
-1, 0.780897, 0, -1, 0.472812,-99) , 
10, -0.546836, 1, 0, 0.493489,-99) , 
5, -0.90454, 1, 0, 0.500337,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.049541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415164,-99) , 
8, -0.916935, 0, 0, 0.51324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384804,-99) , 
10, -2.3945, 0, 0, 0.508406,-99) , 
8, -1.5699, 1, 0, 0.510886,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0911808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.727665, 1, 1, 0.554573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394676,-99) , 
3, 1.62761, 1, 0, 0.455729,-99) , 
5, -0.428497, 0, 0, 0.525584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46572,-99) , 
5, 0.71415, 1, 0, 0.486384,-99) , 
NN(
0, 
0, 
-1, -1.52954, 1, -1, 0.425814,-99) , 
8, -0.142004, 0, 0, 0.469222,-99) , 
1, 0.00145893, 0, 0, 0.48517,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0846811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425903,-99) , 
0, 0.49238, 0, 0, 0.506612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41005,-99) , 
9, -4.82708, 0, 0, 0.498548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444954,-99) , 
0, 0.498085, 1, 0, 0.482364,-99) , 
NN(
0, 
0, 
-1, 0.977962, 0, -1, 0.406946,-99) , 
9, -2.47351, 0, 0, 0.460339,-99) , 
8, 0.715066, 1, 0, 0.479679,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0626343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.8856, 1, 1, 0.592792,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00182141, 1, 1, 0.522047,-99) , 
NN(
0, 
0, 
-1, -0.244175, 1, -1, 0.471845,-99) , 
8, 1.47574, 0, 0, 0.484458,-99) , 
8, -0.999163, 1, 0, 0.492081,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0707725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.587111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446744,-99) , 
5, 0.333256, 1, 0, 0.56425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468004,-99) , 
3, 3.35005, 0, 0, 0.480868,-99) , 
1, -0.00354631, 1, 0, 0.487486,-99) , 
8, -1.28444, 1, 0, 0.492647,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0581125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494364,-99) , 
5, -0.428573, 1, 0, 0.513801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446909,-99) , 
8, 0.71526, 0, 0, 0.47283,-99) , 
7, -951.286, 0, 0, 0.497553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418366,-99) , 
2, -0.177818, 0, 0, 0.492365,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0648933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51867, 0, 1, 0.554685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420918,-99) , 
0, 0.49143, 0, 0, 0.50923,-99) , 
5, 0.142911, 1, 0, 0.520766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436764,-99) , 
9, -1.35711, 1, 0, 0.510891,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0975192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472959,-99) , 
9, -2.28419, 1, 0, 0.516247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400328,-99) , 
2, -0.0930267, 1, 0, 0.453085,-99) , 
2, -0.0413451, 0, 0, 0.50435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42837,-99) , 
0, 0.494283, 1, 0, 0.4463,-99) , 
9, -3.78124, 1, 0, 0.463863,-99) , 
3, 3.37305, 1, 0, 0.491832,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0767031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493892,-99) , 
7, 1.57364, 0, 0, 0.501658,-99) , 
1, -0.00408005, 1, 0, 0.511201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472232,-99) , 
0, 0.495235, 1, 0, 0.495136,-99) , 
NN(
0, 
0, 
-1, -0.646093, 1, -1, 0.403332,-99) , 
5, 0.238062, 0, 0, 0.454315,-99) , 
7, -951.286, 0, 0, 0.489106,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0997154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44983, 0, 1, 0.548728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442387,-99) , 
5, 0.714172, 0, 0, 0.47364,-99) , 
8, 1.00158, 1, 0, 0.51864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461738,-99) , 
7, -951.286, 1, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, -1.51653, 1, -1, 0.42205,-99) , 
9, -2.83272, 0, 0, 0.464314,-99) , 
3, 3.56867, 1, 0, 0.502484,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.095802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469099,-99) , 
5, -0.428398, 0, 0, 0.519812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465189,-99) , 
2, -0.0811765, 1, 0, 0.483578,-99) , 
7, -951.286, 1, 0, 0.496622,-99) , 
NN(
0, 
0, 
-1, 1.57169, 0, -1, 0.441621,-99) , 
0, 0.496187, 0, 0, 0.477654,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0918677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.57326, 0, 1, 0.646431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47944,-99) , 
5, -0.142791, 0, 0, 0.579864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455338,-99) , 
2, -0.0557161, 0, 0, 0.51919,-99) , 
NN(
0, 
0, 
-1, 0.293126, 1, -1, 0.453486,-99) , 
10, -0.95909, 0, 0, 0.498561,-99) , 
8, -0.713603, 1, 0, 0.507471,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0991803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86758, 1, 1, 0.563459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438336,-99) , 
9, -2.30246, 0, 0, 0.500453,-99) , 
10, -0.497295, 1, 0, 0.529754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428753,-99) , 
2, 0.0122014, 0, 0, 0.454985,-99) , 
3, 4.2015, 0, 0, 0.472811,-99) , 
5, 0.714269, 1, 0, 0.499208,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0795797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.539535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415159,-99) , 
7, -1.56288, 0, 0, 0.529774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486632,-99) , 
0, 0.495369, 1, 0, 0.500488,-99) , 
NN(
0, 
0, 
-1, -0.0478083, 1, -1, 0.41057,-99) , 
0, 0.493329, 0, 0, 0.485826,-99) , 
7, -951.286, 0, 0, 0.512978,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0820628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.85997, 0, 1, 0.601256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49592,-99) , 
10, -1.67583, 0, 0, 0.535944,-99) , 
8, -0.946767, 1, 0, 0.555942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483466,-99) , 
8, 0.549158, 1, 0, 0.499882,-99) , 
NN(
0, 
0, 
-1, -0.178018, 1, -1, 0.398164,-99) , 
10, -1.19811, 0, 0, 0.487655,-99) , 
9, -3.514, 1, 0, 0.503033,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0757464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494522,-99) , 
6, 0.000981002, 1, 0, 0.529223,-99) , 
6, 0.00514825, 0, 0, 0.540748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482275,-99) , 
8, 1.65387, 0, 0, 0.49893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306521,-99) , 
10, -1.43273, 0, 0, 0.393025,-99) , 
10, -1.25304, 0, 0, 0.488285,-99) , 
8, -0.141285, 1, 0, 0.500633,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0630395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616619,-99) , 
NN(
NN(
0, 
0, 
-1, -0.26403, 1, 1, 0.521914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29085,-99) , 
10, -2.37434, 0, 0, 0.514926,-99) , 
8, -1.28422, 1, 0, 0.519383,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0976214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.149127, 1, 1, 0.58929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487874,-99) , 
8, 1.28625, 0, 0, 0.506585,-99) , 
5, 0.428564, 1, 0, 0.52301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389397,-99) , 
3, 0.805899, 0, 0, 0.517355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411882,-99) , 
3, 2.15453, 1, 0, 0.476918,-99) , 
5, -0.71429, 0, 0, 0.515858,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0493053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72501, 1, 1, 0.515543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40731,-99) , 
10, -2.81256, 0, 0, 0.510979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418795,-99) , 
10, 0.995992, 1, 0, 0.502359,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.116149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390935,-99) , 
7, -1.54995, 0, 0, 0.53914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450155,-99) , 
1, -0.00229635, 1, 0, 0.478638,-99) , 
7, -951.286, 0, 0, 0.511975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444808,-99) , 
8, 0.767656, 1, 0, 0.506806,-99) , 
NN(
0, 
0, 
-1, 2.11894, 0, -1, 0.446217,-99) , 
5, 0.909233, 0, 0, 0.47888,-99) , 
5, 0.809452, 1, 0, 0.497698,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0724096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46626,-99) , 
8, 1.16214, 1, 0, 0.507255,-99) , 
NN(
0, 
0, 
-1, -0.42858, 0, -1, 0.465805,-99) , 
0, 0.499996, 1, 0, 0.493137,-99) , 
8, -1.28403, 1, 0, 0.499524,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0647768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.368884, 1, 1, 0.526448,-99) , 
NN(
0, 
0, 
-1, -0.0606428, 0, -1, 0.430804,-99) , 
0, 0.491428, 0, 0, 0.519229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44755,-99) , 
10, 0.787514, 1, 0, 0.51083,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.103139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523836, 0, 1, 0.565135,-99) , 
NN(
0, 
0, 
-1, 0.499051, 1, -1, 0.447419,-99) , 
3, 3.11391, 1, 0, 0.52455,-99) , 
NN(
0, 
0, 
-1, -1.56465, 0, -1, 0.453896,-99) , 
7, -951.286, 1, 0, 0.479286,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0884991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.7093, 0, 1, 0.559398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416541,-99) , 
0, 0.498093, 0, 0, 0.460566,-99) , 
5, -0.238083, 0, 0, 0.530037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465254,-99) , 
0, 0.496174, 0, 0, 0.504734,-99) , 
NN(
0, 
0, 
-1, 0.469302, 1, -1, 0.451234,-99) , 
5, 0.714263, 0, 0, 0.47925,-99) , 
8, 0.143643, 1, 0, 0.495108,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0934733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09985, 0, 1, 0.600421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385013,-99) , 
10, -1.18918, 0, 0, 0.488348,-99) , 
3, 1.8199, 1, 0, 0.541696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476754,-99) , 
0, 0.502849, 0, 0, 0.485976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285779,-99) , 
10, -1.23582, 0, 0, 0.421108,-99) , 
5, 0.410432, 0, 0, 0.475439,-99) , 
5, -0.238088, 1, 0, 0.4885,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0628675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477835,-99) , 
8, 0.15499, 1, 0, 0.490426,-99) , 
NN(
0, 
0, 
-1, -1.10273, 1, -1, 0.416586,-99) , 
9, -4.21815, 0, 0, 0.482827,-99) , 
9, -1.03474, 0, 0, 0.488747,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.091893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488921,-99) , 
0, 0.494512, 0, 0, 0.544633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413448,-99) , 
0, 0.505709, 1, 0, 0.53858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457589,-99) , 
10, -0.219115, 1, 0, 0.470218,-99) , 
8, 2.03487, 0, 0, 0.484672,-99) , 
10, -0.364011, 1, 0, 0.514762,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0632549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.718495, 1, 1, 0.558034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427513,-99) , 
5, 0.706311, 0, 0, 0.497871,-99) , 
5, 0.637183, 1, 0, 0.519222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428703,-99) , 
5, -0.904763, 0, 0, 0.511824,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0650164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589397,-99) , 
NN(
NN(
0, 
0, 
-1, -3.48626, 1, 1, 0.5234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454908,-99) , 
2, 0.00125028, 1, 0, 0.49202,-99) , 
2, 0.074051, 0, 0, 0.496942,-99) , 
9, -1.08366, 0, 0, 0.504275,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0712891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57617, 0, 1, 0.515049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442206,-99) , 
10, -0.408912, 0, 0, 0.47523,-99) , 
7, -951.286, 0, 0, 0.501702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400297,-99) , 
3, 2.61142, 1, 0, 0.474363,-99) , 
NN(
0, 
0, 
-1, 1.78227, 0, -1, 0.354646,-99) , 
5, -0.6372, 1, 0, 0.436677,-99) , 
5, -0.238092, 0, 0, 0.486355,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0508471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904348, 0, 1, 0.571724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387067,-99) , 
10, -1.65179, 1, 0, 0.536123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443319,-99) , 
8, -0.114119, 0, 0, 0.497662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363784,-99) , 
10, -1.67098, 0, 0, 0.490031,-99) , 
9, -3.85736, 1, 0, 0.496701,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0659533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49534,-99) , 
10, -0.683248, 1, 0, 0.527243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384942,-99) , 
9, -3.87909, 0, 0, 0.476734,-99) , 
5, 0.269909, 0, 0, 0.506745,-99) , 
NN(
0, 
0, 
-1, 0.95917, 1, -1, 0.455805,-99) , 
5, 0.904755, 1, 0, 0.494896,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0806607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.709398, 0, 1, 0.629549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499482,-99) , 
5, 0.714269, 1, 0, 0.565881,-99) , 
NN(
0, 
0, 
-1, -2.45565, 0, -1, 0.465803,-99) , 
0, 0.5019, 0, 0, 0.4846,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0777332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42811, 0, 1, 0.523315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351264,-99) , 
6, 0.00869172, 1, 0, 0.516598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38555,-99) , 
2, 0.0127089, 1, 0, 0.462325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324524,-99) , 
8, -0.704227, 0, 0, 0.4282,-99) , 
5, -0.619051, 0, 0, 0.500647,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0602307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.569758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389688,-99) , 
3, 1.27693, 0, 0, 0.465916,-99) , 
8, 0.131263, 0, 0, 0.52437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472485,-99) , 
8, 1.00013, 1, 0, 0.493647,-99) , 
NN(
0, 
0, 
-1, -0.316409, 1, -1, 0.416195,-99) , 
5, -0.160924, 0, 0, 0.488279,-99) , 
5, -0.523814, 1, 0, 0.494654,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0891928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489549,-99) , 
9, -3.55323, 1, 0, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389514,-99) , 
9, -4.37973, 0, 0, 0.494706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418188,-99) , 
7, -951.286, 0, 0, 0.470646,-99) , 
NN(
0, 
0, 
-1, 3.89866, 1, -1, 0.399159,-99) , 
8, 0.427202, 0, 0, 0.435304,-99) , 
5, 0.428595, 0, 0, 0.473625,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0655323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480605,-99) , 
8, -0.220496, 1, 0, 0.493271,-99) , 
10, 0.487344, 0, 0, 0.503217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425859,-99) , 
10, 1.02529, 1, 0, 0.496894,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0860391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.38857, 0, 1, 0.532527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458082,-99) , 
5, 0.795946, 1, 0, 0.470636,-99) , 
5, 0.714233, 1, 0, 0.497924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400272,-99) , 
10, 0.995992, 1, 0, 0.489434,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0947829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383224,-99) , 
10, -2.40979, 0, 0, 0.51498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421025,-99) , 
9, -3.64827, 1, 0, 0.447864,-99) , 
5, -0.333204, 0, 0, 0.501027,-99) , 
NN(
0, 
0, 
-1, 4.16874, 1, -1, 0.419181,-99) , 
0, 0.502852, 1, 0, 0.487474,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0790631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00160285, 0, 1, 0.521178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375695,-99) , 
6, 0.00560937, 1, 0, 0.513094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452342,-99) , 
5, -0.700435, 0, 0, 0.491066,-99) , 
NN(
0, 
0, 
-1, 0.63112, 1, -1, 0.380886,-99) , 
3, 1.00603, 0, 0, 0.454513,-99) , 
5, 0.0477549, 0, 0, 0.496983,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.108581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408394,-99) , 
5, -0.809531, 0, 0, 0.535114,-99) , 
NN(
0, 
0, 
-1, -1.30198, 0, -1, 0.467735,-99) , 
10, 0.490916, 1, 0, 0.515858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604522,-99) , 
NN(
0, 
0, 
-1, 0.618889, 0, -1, 0.441837,-99) , 
0, 0.492381, 1, 0, 0.454318,-99) , 
9, -3.15426, 0, 0, 0.493399,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.074379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.51673, 1, 1, 0.5983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434575,-99) , 
0, 0.50326, 1, 0, 0.484786,-99) , 
8, 0.447961, 0, 0, 0.54609,-99) , 
NN(
NN(
0, 
0, 
-1, 2.77723, 0, 1, 0.534883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439998,-99) , 
7, -951.286, 0, 0, 0.480812,-99) , 
5, -0.238143, 1, 0, 0.490769,-99) , 
0, 0.5019, 0, 0, 0.501595,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0864654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0150866, 0, 1, 0.5353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393121,-99) , 
10, -2.26215, 0, 0, 0.523206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485233,-99) , 
6, 0.00572155, 0, 0, 0.518878,-99) , 
NN(
0, 
0, 
-1, 0.292667, 0, -1, 0.45563,-99) , 
5, -0.2379, 1, 0, 0.467313,-99) , 
0, 0.499993, 0, 0, 0.485514,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0562081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492383, 0, 1, 0.586251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457672,-99) , 
3, 1.43611, 1, 0, 0.490729,-99) , 
5, 0.523713, 0, 0, 0.546408,-99) , 
NN(
NN(
0, 
0, 
-1, 3.22094, 1, 1, 0.555011,-99) , 
NN(
0, 
0, 
-1, 0.904693, 1, -1, 0.487219,-99) , 
2, 0.111756, 0, 0, 0.494191,-99) , 
0, 0.494284, 1, 0, 0.505063,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.076499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47765,-99) , 
9, -1.65541, 0, 0, 0.492037,-99) , 
9, -4.81074, 1, 0, 0.496862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39842,-99) , 
2, -0.171362, 0, 0, 0.488976,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0859166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498099, 0, 1, 0.616315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492503,-99) , 
9, -2.18762, 1, 0, 0.529853,-99) , 
1, 0.00145893, 0, 0, 0.555124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486761,-99) , 
7, 1.0028, 0, 0, 0.503939,-99) , 
NN(
0, 
0, 
-1, -0.713699, 0, -1, 0.41849,-99) , 
1, 0.00286996, 1, 0, 0.492019,-99) , 
7, -951.286, 1, 0, 0.514919,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0804961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413873,-99) , 
0, 0.493334, 0, 0, 0.531375,-99) , 
2, 0.0622161, 0, 0, 0.55333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494071,-99) , 
7, 0.143044, 0, 0, 0.524211,-99) , 
NN(
0, 
0, 
-1, 0.49333, 0, -1, 0.47677,-99) , 
7, -951.286, 0, 0, 0.505551,-99) , 
9, -3.42179, 1, 0, 0.517488,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.107559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499181,-99) , 
5, -0.522924, 0, 0, 0.593105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430834,-99) , 
10, -1.41413, 0, 0, 0.523909,-99) , 
8, -0.713072, 1, 0, 0.53093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468222,-99) , 
8, 0.137626, 0, 0, 0.525446,-99) , 
NN(
0, 
0, 
-1, 3.35966, 1, -1, 0.435644,-99) , 
5, -0.142246, 1, 0, 0.46011,-99) , 
0, 0.494283, 0, 0, 0.516474,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0725908);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426526,-99) , 
0, 0.506253, 1, 0, 0.521974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407252,-99) , 
5, 0.429157, 0, 0, 0.469204,-99) , 
0, 0.49333, 0, 0, 0.513861,-99) , 
9, -4.52584, 1, 0, 0.51861,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0721362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.412613, 1, 1, 0.55815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413624,-99) , 
0, 0.498087, 1, 0, 0.469312,-99) , 
7, -951.286, 0, 0, 0.520026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562196,-99) , 
NN(
0, 
0, 
-1, 0.492518, 0, -1, 0.475419,-99) , 
0, 0.504757, 0, 0, 0.481297,-99) , 
9, -2.14628, 0, 0, 0.492724,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0597289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494284, 1, 1, 0.572181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
5, -0.904539, 1, 0, 0.506301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357784,-99) , 
10, -1.51136, 0, 0, 0.498307,-99) , 
9, -3.56838, 1, 0, 0.513184,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.091405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.17186, 0, 1, 0.54447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439023,-99) , 
2, -0.0337783, 0, 0, 0.505674,-99) , 
10, -0.467395, 0, 0, 0.522974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4239,-99) , 
5, -0.904763, 0, 0, 0.514989,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0606199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489427,-99) , 
8, -0.0596045, 1, 0, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312977,-99) , 
10, -2.23703, 0, 0, 0.49507,-99) , 
8, -1.28403, 1, 0, 0.500047,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.103543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.408832, 1, 1, 0.539904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422957,-99) , 
0, 0.497112, 1, 0, 0.463762,-99) , 
10, 0.278556, 1, 0, 0.51806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586147,-99) , 
NN(
0, 
0, 
-1, -2.38567, 0, -1, 0.427796,-99) , 
8, -1.36734, 1, 0, 0.455727,-99) , 
9, -3.62367, 0, 0, 0.504187,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0726009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.536452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338468,-99) , 
10, -0.827809, 1, 0, 0.493044,-99) , 
8, 0.429186, 0, 0, 0.515939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452632,-99) , 
8, 2.14289, 1, 0, 0.509793,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0663888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4862,-99) , 
3, 0.748853, 0, 0, 0.584979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389623,-99) , 
10, -1.52958, 1, 0, 0.456692,-99) , 
8, -0.147197, 0, 0, 0.536038,-99) , 
NN(
0, 
0, 
-1, 0.00869129, 1, -1, 0.47984,-99) , 
5, -0.333325, 1, 0, 0.490705,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0742293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478775,-99) , 
7, -951.286, 0, 0, 0.512092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427015,-99) , 
5, 0.954631, 1, 0, 0.473277,-99) , 
5, 0.904739, 1, 0, 0.502417,-99) , 
0, 0.490474, 1, 0, 0.506998,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0716427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.30108, 1, 1, 0.524989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442547,-99) , 
3, 3.50725, 0, 0, 0.468065,-99) , 
1, -0.000712534, 0, 0, 0.503074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440121,-99) , 
0, 0.495263, 0, 0, 0.490558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424215,-99) , 
2, 0.0272707, 1, 0, 0.472788,-99) , 
10, -0.211822, 1, 0, 0.491892,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0523158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494283, 1, 1, 0.521745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422393,-99) , 
3, 5.35471, 1, 0, 0.516859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459295,-99) , 
3, 6.59017, 1, 0, 0.511031,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0385971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427602,-99) , 
0, 0.503805, 1, 0, 0.493107,-99) , 
9, -4.1968, 1, 0, 0.498949,-99) , 
NN(
0, 
0, 
-1, -1.37748, 1, -1, 0.411194,-99) , 
10, -2.3433, 0, 0, 0.493257,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.101044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492318, 1, 1, 0.57792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498798,-99) , 
0, 0.490156, 0, 0, 0.562309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438526,-99) , 
6, 0.00164554, 0, 0, 0.472722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293501,-99) , 
6, 0.011521, 1, 0, 0.463998,-99) , 
0, 0.494282, 1, 0, 0.482588,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0777111);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4545,-99) , 
10, -0.904969, 0, 0, 0.514074,-99) , 
NN(
0, 
0, 
-1, -0.133907, 0, -1, 0.467222,-99) , 
3, 4.14964, 0, 0, 0.477298,-99) , 
1, -0.0066626, 1, 0, 0.480411,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0947925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523808, 1, 1, 0.536363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454458,-99) , 
0, 0.497592, 1, 0, 0.528841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435323,-99) , 
8, -0.142827, 0, 0, 0.522504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45025,-99) , 
9, -3.81006, 1, 0, 0.471278,-99) , 
7, -951.286, 1, 0, 0.490803,-99) , 
0, 0.498092, 1, 0, 0.509179,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0548074);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460555,-99) , 
1, -0.000171771, 0, 0, 0.525941,-99) , 
NN(
0, 
0, 
-1, 0.00925156, 1, -1, 0.478357,-99) , 
5, -0.809511, 1, 0, 0.483357,-99) , 
8, -1.57036, 1, 0, 0.485591,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.063086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0207174, 0, 1, 0.543412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488985,-99) , 
0, 0.502843, 0, 0, 0.501194,-99) , 
5, 0.428595, 1, 0, 0.514561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526644,-99) , 
NN(
0, 
0, 
-1, 0.140997, 1, -1, 0.447168,-99) , 
5, -0.333387, 1, 0, 0.460398,-99) , 
2, 0.0741566, 1, 0, 0.505308,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.076754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473554,-99) , 
9, -1.83792, 0, 0, 0.520281,-99) , 
9, -2.22285, 1, 0, 0.542187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479368,-99) , 
5, 0.809384, 1, 0, 0.532456,-99) , 
NN(
0, 
0, 
-1, -1.51481, 0, -1, 0.474503,-99) , 
8, -0.345854, 1, 0, 0.489417,-99) , 
8, 1.28629, 0, 0, 0.504898,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0631097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456205,-99) , 
1, -0.00129495, 0, 0, 0.541485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427933,-99) , 
5, 0.274374, 0, 0, 0.494511,-99) , 
5, -0.523816, 1, 0, 0.502246,-99) , 
0, 0.505707, 0, 0, 0.50689,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.054566);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
8, 0.850421, 0, 0, 0.512456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432258,-99) , 
10, 1.00911, 1, 0, 0.505332,-99) , 
NN(
0, 
0, 
-1, -1.69388, 1, -1, 0.408913,-99) , 
10, -2.54145, 0, 0, 0.50021,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0785438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.67624, 1, 1, 0.561551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425809,-99) , 
8, -0.71117, 0, 0, 0.494283,-99) , 
0, 0.497142, 1, 0, 0.52094,-99) , 
NN(
0, 
0, 
-1, -2.70221, 1, -1, 0.443399,-99) , 
5, 0.904737, 1, 0, 0.501891,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.100603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906534, 1, 1, 0.543419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341043,-99) , 
8, -1.69397, 1, 0, 0.422956,-99) , 
10, -2.51275, 0, 0, 0.526218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429219,-99) , 
0, 0.498104, 0, 0, 0.527011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451768,-99) , 
8, 1.18382, 1, 0, 0.474188,-99) , 
5, -0.33334, 1, 0, 0.485476,-99) , 
10, -0.770518, 1, 0, 0.503184,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0787611);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.58524, 0, 1, 0.53794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446597,-99) , 
10, 0.995992, 1, 0, 0.529909,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0801686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478565,-99) , 
5, 0.618659, 1, 0, 0.501482,-99) , 
8, 0.855963, 0, 0, 0.514229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484948,-99) , 
8, 1.85898, 1, 0, 0.512102,-99) , 
NN(
0, 
0, 
-1, 0.269385, 1, -1, 0.453771,-99) , 
9, -1.53182, 0, 0, 0.470839,-99) , 
9, -2.72726, 1, 0, 0.491896,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0840055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.63759, 0, 1, 0.532819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465867,-99) , 
5, 0.9365, 1, 0, 0.516568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377088,-99) , 
5, 0.0794469, 1, 0, 0.494554,-99) , 
NN(
0, 
0, 
-1, -0.809307, 0, -1, 0.412796,-99) , 
10, -0.536352, 0, 0, 0.454767,-99) , 
5, 0.333404, 0, 0, 0.496128,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0612747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49215,-99) , 
8, 1.85909, 0, 0, 0.502523,-99) , 
NN(
0, 
0, 
-1, 0.188149, 1, -1, 0.430997,-99) , 
2, -0.137098, 0, 0, 0.494774,-99) , 
NN(
0, 
0, 
-1, 0.618874, 0, -1, 0.421339,-99) , 
2, 0.082476, 1, 0, 0.483149,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0937794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409875,-99) , 
3, 0.559485, 0, 0, 0.509386,-99) , 
3, 0.41943, 1, 0, 0.515394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450554,-99) , 
0, 0.497136, 1, 0, 0.51717,-99) , 
NN(
0, 
0, 
-1, 0.714236, 0, -1, 0.413649,-99) , 
7, -951.286, 1, 0, 0.446194,-99) , 
3, 3.35966, 1, 0, 0.492857,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0918724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459386,-99) , 
3, 4.66566, 0, 0, 0.47103,-99) , 
5, 0.904696, 0, 0, 0.485234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447887,-99) , 
9, -2.44873, 0, 0, 0.49023,-99) , 
NN(
0, 
0, 
-1, 0.502833, 1, -1, 0.388167,-99) , 
0, 0.503533, 0, 0, 0.444749,-99) , 
0, 0.5019, 1, 0, 0.476781,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0748167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.6185, 1, 1, 0.562167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461371,-99) , 
5, -0.714139, 0, 0, 0.526804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478845,-99) , 
1, -0.00408005, 1, 0, 0.4872,-99) , 
7, -951.286, 1, 0, 0.501835,-99) , 
0, 0.49333, 1, 0, 0.509814,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0740841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476983,-99) , 
8, -0.142668, 0, 0, 0.520891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442575,-99) , 
10, -0.353682, 1, 0, 0.478402,-99) , 
0, 0.49809, 0, 0, 0.49967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407204,-99) , 
5, -0.427582, 1, 0, 0.478822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319656,-99) , 
10, -1.35548, 0, 0, 0.434694,-99) , 
1, 0.00388765, 1, 0, 0.493457,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.073432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6925, 0, 1, 0.611003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43417,-99) , 
0, 0.499998, 1, 0, 0.48994,-99) , 
7, -951.286, 1, 0, 0.531548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484554,-99) , 
8, 1.52438, 0, 0, 0.497464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420745,-99) , 
8, 2.20564, 1, 0, 0.489931,-99) , 
9, -3.514, 1, 0, 0.499273,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0775058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497146,-99) , 
3, 3.49386, 0, 0, 0.513867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458697,-99) , 
2, -0.00681739, 0, 0, 0.478176,-99) , 
2, 0.000228645, 0, 0, 0.498456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431461,-99) , 
0, 0.499045, 0, 0, 0.495137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382039,-99) , 
2, -0.208268, 0, 0, 0.460607,-99) , 
2, -0.0737556, 0, 0, 0.492244,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0769546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478913,-99) , 
5, -0.401427, 1, 0, 0.579241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461261,-99) , 
8, 0.715777, 0, 0, 0.499901,-99) , 
7, -951.286, 0, 0, 0.536118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498884,-99) , 
6, 0.0025691, 0, 0, 0.523942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452785,-99) , 
7, -0.131574, 1, 0, 0.479727,-99) , 
7, -951.286, 1, 0, 0.493461,-99) , 
5, 0.0476123, 1, 0, 0.503435,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0645296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.22114, 0, 1, 0.616059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458789,-99) , 
10, -2.45674, 0, 0, 0.519741,-99) , 
5, 0.428538, 1, 0, 0.555732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487733,-99) , 
8, 1.85762, 0, 0, 0.499191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421872,-99) , 
0, 0.504756, 1, 0, 0.493166,-99) , 
8, -0.426971, 1, 0, 0.503419,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.076126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.134728, 1, 1, 0.572096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481881,-99) , 
0, 0.494963, 0, 0, 0.518608,-99) , 
2, 0.067462, 0, 0, 0.527153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407877,-99) , 
8, 0.438736, 1, 0, 0.458882,-99) , 
0, 0.504757, 1, 0, 0.521782,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0594571);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492433,-99) , 
0, 0.505165, 0, 0, 0.500008,-99) , 
NN(
0, 
0, 
-1, -1.89783, 0, -1, 0.456546,-99) , 
10, -0.150075, 1, 0, 0.485405,-99) , 
0, 0.490478, 1, 0, 0.492686,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0986952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486743,-99) , 
8, -0.0109216, 1, 0, 0.604971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406563,-99) , 
8, 0.103557, 0, 0, 0.516818,-99) , 
10, -1.26488, 1, 0, 0.527576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45438,-99) , 
8, -0.656781, 1, 0, 0.520376,-99) , 
NN(
0, 
0, 
-1, -0.829979, 1, -1, 0.389597,-99) , 
0, 0.496187, 0, 0, 0.474046,-99) , 
10, -1.74372, 0, 0, 0.518654,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0338565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.45809, 0, 1, 0.506524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419992,-99) , 
10, 0.986297, 1, 0, 0.498538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412281,-99) , 
10, -2.6334, 0, 0, 0.494347,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0374227);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495381,-99) , 
8, -0.258947, 1, 0, 0.504149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408172,-99) , 
10, -2.23264, 0, 0, 0.49919,-99) , 
8, -1.56919, 1, 0, 0.502192,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.129643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429216,-99) , 
3, 0.540672, 0, 0, 0.57036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46715,-99) , 
0, 0.496198, 1, 0, 0.507484,-99) , 
3, 3.04142, 1, 0, 0.549059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385247,-99) , 
10, -2.48507, 0, 0, 0.523482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422913,-99) , 
8, -0.112299, 1, 0, 0.455765,-99) , 
7, -0.416199, 0, 0, 0.497588,-99) , 
7, -951.286, 1, 0, 0.516728,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0619997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457143,-99) , 
9, -3.3441, 0, 0, 0.496376,-99) , 
NN(
0, 
0, 
-1, 0.523828, 1, -1, 0.451502,-99) , 
10, 0.531478, 1, 0, 0.488555,-99) , 
9, -4.74381, 1, 0, 0.492667,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0529146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.21573, 0, 1, 0.513586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427237,-99) , 
9, -1.2312, 0, 0, 0.466862,-99) , 
10, 0.181158, 1, 0, 0.501653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402537,-99) , 
10, -2.96122, 0, 0, 0.49843,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0885192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.17376, 0, 1, 0.60465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46807,-99) , 
5, 0.23932, 1, 0, 0.494966,-99) , 
0, 0.49111, 0, 0, 0.565564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481919,-99) , 
3, 1.98943, 1, 0, 0.519959,-99) , 
NN(
0, 
0, 
-1, -1.91709, 1, -1, 0.466851,-99) , 
5, 0.714279, 1, 0, 0.490233,-99) , 
0, 0.494284, 1, 0, 0.504556,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0693064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449884,-99) , 
2, 0.0378608, 1, 0, 0.588211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460337,-99) , 
7, -951.286, 0, 0, 0.492175,-99) , 
9, -3.6103, 1, 0, 0.511678,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00222997, 0, 1, 0.532726,-99) , 
NN(
0, 
0, 
-1, 6.19031, 1, -1, 0.472464,-99) , 
2, -0.0809292, 1, 0, 0.480626,-99) , 
0, 0.499046, 0, 0, 0.493083,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0582261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403424,-99) , 
0, 0.505709, 1, 0, 0.505094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387682,-99) , 
9, -1.52688, 0, 0, 0.452659,-99) , 
8, 1.61252, 1, 0, 0.493773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346068,-99) , 
8, -1.85564, 0, 0, 0.489618,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0530365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495383, 1, 1, 0.547319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388317,-99) , 
10, -1.2521, 0, 0, 0.491865,-99) , 
8, -0.138202, 1, 0, 0.504297,-99) , 
NN(
0, 
0, 
-1, 0.489253, 1, -1, 0.406844,-99) , 
0, 0.490478, 0, 0, 0.498806,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0304463);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.8896, 1, 1, 0.607777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391058,-99) , 
8, -0.694129, 0, 0, 0.494875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397286,-99) , 
10, -2.18317, 0, 0, 0.491522,-99) , 
9, -4.46508, 1, 0, 0.497576,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0806569);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496573,-99) , 
5, -0.0476117, 1, 0, 0.518058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410055,-99) , 
8, -1.00058, 0, 0, 0.508518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470463,-99) , 
7, -1.27255, 1, 0, 0.483745,-99) , 
NN(
0, 
0, 
-1, 1.57168, 0, -1, 0.429089,-99) , 
10, -0.000371967, 1, 0, 0.467955,-99) , 
7, -951.286, 1, 0, 0.482508,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.107969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470873,-99) , 
3, 1.21297, 0, 0, 0.538722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470912,-99) , 
9, -3.45591, 1, 0, 0.482109,-99) , 
5, 0.333413, 1, 0, 0.496846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381531,-99) , 
5, -0.618994, 0, 0, 0.508772,-99) , 
NN(
0, 
0, 
-1, -1.65272, 1, -1, 0.37928,-99) , 
7, -951.286, 0, 0, 0.452116,-99) , 
8, -0.141872, 0, 0, 0.485624,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0632631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428554, 1, 1, 0.522469,-99) , 
NN(
0, 
0, 
-1, 3.33948, 1, -1, 0.460607,-99) , 
0, 0.501896, 1, 0, 0.509535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377151,-99) , 
2, 0.207157, 1, 0, 0.501904,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0550637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.56867, 0, 1, 0.518962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413786,-99) , 
2, 0.147482, 1, 0, 0.463893,-99) , 
2, 0.0810016, 1, 0, 0.51065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416369,-99) , 
0, 0.489521, 0, 0, 0.507128,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0823936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46366,-99) , 
5, -0.618847, 0, 0, 0.523194,-99) , 
NN(
0, 
0, 
-1, 0.500262, 1, -1, 0.458439,-99) , 
10, -0.201558, 1, 0, 0.499066,-99) , 
0, 0.490474, 1, 0, 0.50566,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0745124);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
7, -951.286, 1, 0, 0.488478,-99) , 
NN(
0, 
0, 
-1, 0.498101, 0, -1, 0.431917,-99) , 
9, -1.50224, 1, 0, 0.479617,-99) , 
8, -1.28472, 1, 0, 0.48525,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0750447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.78353, 1, 1, 0.572389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463947,-99) , 
5, 0.714366, 1, 0, 0.506149,-99) , 
9, -2.40519, 1, 0, 0.52166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424646,-99) , 
8, 0.61971, 1, 0, 0.48905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38742,-99) , 
9, -2.08486, 1, 0, 0.479601,-99) , 
8, 1.00061, 0, 0, 0.49585,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.095884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24147, 1, 1, 0.544694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429305,-99) , 
10, -0.146968, 0, 0, 0.518875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463524,-99) , 
5, -0.523624, 1, 0, 0.475178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362633,-99) , 
10, -0.248639, 1, 0, 0.465977,-99) , 
8, 1.00062, 0, 0, 0.486227,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0703754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476664,-99) , 
8, 0.855012, 0, 0, 0.563302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464322,-99) , 
8, 0.27419, 1, 0, 0.488248,-99) , 
9, -2.13512, 0, 0, 0.495237,-99) , 
NN(
0, 
0, 
-1, 0.714184, 1, -1, 0.443893,-99) , 
10, 0.137926, 1, 0, 0.481954,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0646649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809526, 1, 1, 0.516166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45515,-99) , 
0, 0.499905, 0, 0, 0.479485,-99) , 
10, -0.584266, 0, 0, 0.49674,-99) , 
NN(
0, 
0, 
-1, -0.800527, 1, -1, 0.430153,-99) , 
0, 0.491427, 0, 0, 0.491491,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0703918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22336, 0, 1, 0.531379,-99) , 
NN(
0, 
0, 
-1, 0.872301, 0, -1, 0.467985,-99) , 
5, -0.14279, 0, 0, 0.516869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464293,-99) , 
8, -0.278403, 0, 0, 0.48923,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.422363,-99) , 
9, -3.35902, 1, 0, 0.476035,-99) , 
9, -3.19473, 0, 0, 0.503124,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.100836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238078, 1, 1, 0.559445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413771,-99) , 
8, 0.143306, 0, 0, 0.474863,-99) , 
7, -951.286, 0, 0, 0.525367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466489,-99) , 
5, 0.333399, 1, 0, 0.519609,-99) , 
NN(
0, 
0, 
-1, -0.143327, 0, -1, 0.451186,-99) , 
0, 0.504077, 0, 0, 0.459763,-99) , 
0, 0.495235, 1, 0, 0.476221,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0983811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471506,-99) , 
3, 0.978695, 0, 0, 0.540698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449332,-99) , 
8, 0.956806, 1, 0, 0.47745,-99) , 
5, 0.809506, 1, 0, 0.513065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43734,-99) , 
10, -2.53331, 0, 0, 0.500049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383846,-99) , 
9, -3.12391, 0, 0, 0.434111,-99) , 
9, -3.35369, 1, 0, 0.47751,-99) , 
9, -3.00907, 0, 0, 0.498591,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0809198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492063,-99) , 
0, 0.50054, 0, 0, 0.525473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411988,-99) , 
0, 0.499997, 1, 0, 0.473348,-99) , 
8, 1.28609, 1, 0, 0.509857,-99) , 
NN(
0, 
0, 
-1, 0.809492, 0, -1, 0.466464,-99) , 
0, 0.496187, 0, 0, 0.494952,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0440052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488171,-99) , 
3, 0.403003, 1, 0, 0.576825,-99) , 
NN(
0, 
0, 
-1, 0.861114, 0, -1, 0.485843,-99) , 
3, 0.494657, 1, 0, 0.491378,-99) , 
3, 8.18935, 0, 0, 0.496229,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0603606);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.03748, 0, 1, 0.559552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491361,-99) , 
9, -4.3567, 1, 0, 0.496265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409263,-99) , 
2, -0.111828, 0, 0, 0.490694,-99) , 
3, 3.35966, 0, 0, 0.511449,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.105469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809526, 1, 1, 0.552926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42467,-99) , 
8, 0.198976, 0, 0, 0.543855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45259,-99) , 
0, 0.494284, 0, 0, 0.518514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393172,-99) , 
8, 0.19869, 1, 0, 0.499889,-99) , 
10, -1.02535, 0, 0, 0.528359,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0957057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.567699, 1, 1, 0.537181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414541,-99) , 
3, 3.29018, 1, 0, 0.481605,-99) , 
7, -951.286, 0, 0, 0.515485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445704,-99) , 
7, -951.286, 1, 0, 0.494735,-99) , 
NN(
0, 
0, 
-1, 0.0979079, 0, -1, 0.40677,-99) , 
9, -4.01617, 1, 0, 0.451733,-99) , 
9, -3.57804, 0, 0, 0.500199,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0668078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.655141, 1, 1, 0.539708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457902,-99) , 
5, -0.809323, 0, 0, 0.52658,-99) , 
NN(
0, 
0, 
-1, -0.837251, 0, -1, 0.470997,-99) , 
8, 0.429255, 1, 0, 0.49281,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0482023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496607,-99) , 
8, 0.699799, 0, 0, 0.553523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470938,-99) , 
10, -0.0218577, 1, 0, 0.496741,-99) , 
0, 0.502307, 0, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0.506251, 1, -1, 0.433915,-99) , 
0, 0.504755, 1, 0, 0.497061,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0766507);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.53631, 1, 1, 0.556896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48802,-99) , 
3, 0.446096, 1, 0, 0.495943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431865,-99) , 
0, 0.50381, 0, 0, 0.4449,-99) , 
3, 3.38518, 1, 0, 0.479775,-99) , 
9, -1.75169, 0, 0, 0.494599,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0807243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471592,-99) , 
10, 0.982301, 1, 0, 0.542731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472418,-99) , 
7, -951.286, 1, 0, 0.491053,-99) , 
9, -2.23663, 0, 0, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383195,-99) , 
6, 0.0127885, 1, 0, 0.503444,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.081623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238844, 0, 1, 0.560889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483346,-99) , 
8, -0.903793, 1, 0, 0.49505,-99) , 
5, 0.238057, 1, 0, 0.513663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411499,-99) , 
0, 0.493064, 0, 0, 0.501378,-99) , 
NN(
0, 
0, 
-1, 1.38143, 0, -1, 0.439707,-99) , 
0, 0.499042, 1, 0, 0.475017,-99) , 
8, 1.00048, 1, 0, 0.498016,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.074457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440921,-99) , 
3, 6.63247, 1, 0, 0.543734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463136,-99) , 
7, -951.286, 0, 0, 0.498292,-99) , 
5, 0.71426, 1, 0, 0.518663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407258,-99) , 
9, -4.81074, 0, 0, 0.513773,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0603312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.53748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45337,-99) , 
0, 0.49619, 0, 0, 0.490025,-99) , 
8, 0.993407, 0, 0, 0.506257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435578,-99) , 
9, -1.08366, 1, 0, 0.500551,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0744732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00447675, 0, 1, 0.512553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307248,-99) , 
6, 0.00855065, 1, 0, 0.505457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358682,-99) , 
8, -0.439321, 0, 0, 0.534294,-99) , 
NN(
0, 
0, 
-1, -0.714099, 1, -1, 0.41375,-99) , 
7, -951.286, 0, 0, 0.461312,-99) , 
5, -0.333175, 0, 0, 0.496145,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0512927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499849,-99) , 
0, 0.498096, 0, 0, 0.560096,-99) , 
NN(
0, 
0, 
-1, 0.00344913, 1, -1, 0.484149,-99) , 
6, 0.00426072, 0, 0, 0.493384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350307,-99) , 
6, 0.0127885, 1, 0, 0.488513,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0720216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488658,-99) , 
5, -0.619023, 0, 0, 0.598433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399527,-99) , 
10, -2.75284, 1, 0, 0.485598,-99) , 
10, -2.44279, 0, 0, 0.556269,-99) , 
NN(
NN(
0, 
0, 
-1, -1.25013, 0, 1, 0.517713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419581,-99) , 
10, -0.666704, 1, 0, 0.453236,-99) , 
2, -0.0498117, 0, 0, 0.504726,-99) , 
8, -0.427166, 1, 0, 0.512604,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0841078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49807,-99) , 
3, 4.79639, 0, 0, 0.524523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452257,-99) , 
0, 0.494391, 1, 0, 0.472812,-99) , 
0, 0.497776, 0, 0, 0.491045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508298,-99) , 
NN(
0, 
0, 
-1, -2.77789, 0, -1, 0.407458,-99) , 
8, -0.427612, 1, 0, 0.423398,-99) , 
0, 0.50095, 1, 0, 0.472746,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.070368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430565,-99) , 
5, -0.333282, 0, 0, 0.500961,-99) , 
6, 0.00514809, 0, 0, 0.513883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44018,-99) , 
8, -0.144269, 0, 0, 0.487553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358959,-99) , 
7, -1.56465, 0, 0, 0.476246,-99) , 
7, -951.286, 1, 0, 0.489677,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0979449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495238, 1, 1, 0.539688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382011,-99) , 
0, 0.499046, 0, 0, 0.451226,-99) , 
2, 0.0793056, 1, 0, 0.524733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459203,-99) , 
7, -951.286, 0, 0, 0.512719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414816,-99) , 
5, 0.836874, 1, 0, 0.444023,-99) , 
0, 0.49714, 0, 0, 0.482577,-99) , 
5, 0.714256, 1, 0, 0.501085,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.106098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483862,-99) , 
8, -0.899759, 1, 0, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416016,-99) , 
9, -4.94402, 0, 0, 0.49171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449955,-99) , 
5, 0.0476088, 1, 0, 0.472975,-99) , 
NN(
0, 
0, 
-1, -0.500255, 1, -1, 0.429045,-99) , 
0, 0.498091, 0, 0, 0.450062,-99) , 
8, 0.142761, 1, 0, 0.463067,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0979095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48679,-99) , 
0, 0.492109, 0, 0, 0.572065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441916,-99) , 
10, 0.583899, 1, 0, 0.497432,-99) , 
9, -2.89975, 1, 0, 0.528307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480147,-99) , 
3, 5.95885, 0, 0, 0.496043,-99) , 
NN(
0, 
0, 
-1, 0.445913, 0, -1, 0.424184,-99) , 
10, -0.0256339, 1, 0, 0.473096,-99) , 
0, 0.498091, 1, 0, 0.499346,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.060621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494004,-99) , 
0, 0.5019, 0, 0, 0.506487,-99) , 
0, 0.490474, 1, 0, 0.510904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45047,-99) , 
5, 0.728659, 1, 0, 0.490039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384997,-99) , 
5, 0.0476537, 0, 0, 0.458917,-99) , 
9, -1.71823, 1, 0, 0.500911,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0680716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490204,-99) , 
5, -0.524009, 0, 0, 0.567404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483957,-99) , 
10, -0.226582, 1, 0, 0.507705,-99) , 
2, -0.0447777, 1, 0, 0.518186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371388,-99) , 
2, -0.205264, 0, 0, 0.510369,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0433437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492458,-99) , 
3, 4.65129, 0, 0, 0.498498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417016,-99) , 
3, 5.40509, 1, 0, 0.492603,-99) , 
3, 7.05193, 0, 0, 0.498193,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0465583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438756,-99) , 
0, 0.492378, 0, 0, 0.500355,-99) , 
8, -1.28436, 1, 0, 0.504714,-99) , 
5, -0.904763, 1, 0, 0.51174,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0789014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.710395, 1, 1, 0.528673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396161,-99) , 
8, -0.316714, 1, 0, 0.481875,-99) , 
10, -1.44569, 0, 0, 0.517607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466192,-99) , 
10, -0.330689, 1, 0, 0.500994,-99) , 
NN(
0, 
0, 
-1, -1.36199, 1, -1, 0.409902,-99) , 
8, 0.179183, 0, 0, 0.469022,-99) , 
0, 0.500947, 1, 0, 0.504425,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0935435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487541,-99) , 
9, -2.13499, 0, 0, 0.574622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419111,-99) , 
9, -1.9304, 0, 0, 0.496154,-99) , 
10, 0.00397113, 1, 0, 0.514123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38366,-99) , 
10, -0.842419, 1, 0, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0.822724, 0, -1, 0.416683,-99) , 
8, 0.491184, 1, 0, 0.46904,-99) , 
9, -2.32602, 0, 0, 0.484488,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0961843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402838,-99) , 
10, -1.9863, 0, 0, 0.550212,-99) , 
NN(
0, 
0, 
-1, -0.364868, 1, -1, 0.436057,-99) , 
5, 0.33341, 0, 0, 0.510922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539765,-99) , 
NN(
0, 
0, 
-1, -0.464775, 0, -1, 0.463564,-99) , 
5, -0.809422, 1, 0, 0.471418,-99) , 
0, 0.496187, 1, 0, 0.484592,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0919015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00572029, 0, 1, 0.575242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417622,-99) , 
0, 0.494284, 0, 0, 0.492251,-99) , 
3, 2.14177, 1, 0, 0.535496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460539,-99) , 
10, -1.76571, 0, 0, 0.518153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430022,-99) , 
0, 0.493509, 1, 0, 0.451773,-99) , 
0, 0.497135, 0, 0, 0.489023,-99) , 
5, 0.619045, 1, 0, 0.506812,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0638502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459981,-99) , 
3, 2.26791, 1, 0, 0.496482,-99) , 
0, 0.490474, 1, 0, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0.492379, 0, -1, 0.448019,-99) , 
3, 3.58524, 1, 0, 0.485515,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0872705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4346,-99) , 
10, -2.10988, 0, 0, 0.534837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475033,-99) , 
8, -0.995378, 1, 0, 0.483757,-99) , 
2, 0.013015, 0, 0, 0.501346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424505,-99) , 
5, -0.143488, 0, 0, 0.469026,-99) , 
NN(
0, 
0, 
-1, -0.129335, 0, -1, 0.401399,-99) , 
7, -951.286, 1, 0, 0.426312,-99) , 
0, 0.493335, 0, 0, 0.489173,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.072991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50095, 0, 1, 0.535644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478423,-99) , 
0, 0.496865, 0, 0, 0.508065,-99) , 
NN(
0, 
0, 
-1, 3.21722, 1, -1, 0.462015,-99) , 
0, 0.49904, 1, 0, 0.488988,-99) , 
5, 0.238085, 1, 0, 0.501509,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0802455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498363, 1, 1, 0.548524,-99) , 
NN(
0, 
0, 
-1, 0.0974103, 1, -1, 0.478813,-99) , 
0, 0.496187, 0, 0, 0.523391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525702,-99) , 
NN(
0, 
0, 
-1, 0.428624, 1, -1, 0.444115,-99) , 
0, 0.496152, 1, 0, 0.473406,-99) , 
8, 1.57088, 1, 0, 0.51267,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0531199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495575,-99) , 
8, -0.428803, 1, 0, 0.506826,-99) , 
NN(
0, 
0, 
-1, -2.49202, 1, -1, 0.454573,-99) , 
5, 0.904731, 1, 0, 0.493126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352827,-99) , 
6, 0.0127894, 1, 0, 0.4886,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0691543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482692,-99) , 
5, -0.428482, 0, 0, 0.519725,-99) , 
0, 0.489521, 1, 0, 0.523062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308798,-99) , 
10, -3.11231, 0, 0, 0.51698,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0914497);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594919,-99) , 
NN(
NN(
0, 
0, 
-1, 1.54004, 0, 1, 0.528746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455808,-99) , 
8, -0.436037, 1, 0, 0.468509,-99) , 
5, 0.238125, 1, 0, 0.4845,-99) , 
9, -1.08366, 0, 0, 0.492892,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0879362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.53793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402772,-99) , 
6, 0.00283841, 1, 0, 0.485234,-99) , 
0, 0.497135, 0, 0, 0.515873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474764,-99) , 
0, 0.495234, 1, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, -1.42735, 0, -1, 0.40914,-99) , 
10, -0.587727, 0, 0, 0.456168,-99) , 
5, 0.523794, 0, 0, 0.493691,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0876695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.776436, 0, 1, 0.555884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461239,-99) , 
5, 0.809271, 1, 0, 0.496405,-99) , 
0, 0.497142, 1, 0, 0.520511,-99) , 
NN(
0, 
0, 
-1, 0.498076, 0, -1, 0.454813,-99) , 
10, 0.53383, 1, 0, 0.509859,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0646868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0804598, 0, 1, 0.576396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487098,-99) , 
5, -0.333003, 0, 0, 0.568354,-99) , 
NN(
0, 
0, 
-1, 0.501774, 1, -1, 0.47797,-99) , 
0, 0.503986, 0, 0, 0.487151,-99) , 
0, 0.492378, 1, 0, 0.495702,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.074809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.22571, 1, 1, 0.520682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321026,-99) , 
8, -1.45332, 1, 0, 0.427645,-99) , 
10, -2.24151, 0, 0, 0.511165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506784,-99) , 
NN(
0, 
0, 
-1, 0.575608, 1, -1, 0.428375,-99) , 
9, -1.11192, 0, 0, 0.456387,-99) , 
10, 0.294554, 1, 0, 0.499339,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0730723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00173218, 1, 1, 0.522507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350584,-99) , 
6, 0.00726488, 1, 0, 0.516439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445708,-99) , 
10, -1.82068, 1, 0, 0.459168,-99) , 
6, 0.00889921, 0, 0, 0.475569,-99) , 
5, 0.142942, 0, 0, 0.505264,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0747133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.160825, 0, 1, 0.562124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379634,-99) , 
8, -1.27905, 0, 0, 0.545817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499781,-99) , 
9, -4.36084, 1, 0, 0.50539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373722,-99) , 
10, 0.445005, 1, 0, 0.487724,-99) , 
5, 0.523681, 1, 0, 0.507346,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0504085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.417015, 1, 1, 0.583539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486484,-99) , 
0, 0.490473, 1, 0, 0.49041,-99) , 
3, 0.508602, 1, 0, 0.495999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399458,-99) , 
3, 8.20208, 1, 0, 0.490105,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0991036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.570012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455358,-99) , 
2, 0.084704, 1, 0, 0.552109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47671,-99) , 
5, -0.809221, 1, 0, 0.483624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364652,-99) , 
8, -1.58062, 0, 0, 0.47504,-99) , 
10, -0.530523, 0, 0, 0.510391,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0424812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.38083, 1, 1, 0.51479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443674,-99) , 
3, 5.3979, 1, 0, 0.510439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431402,-99) , 
3, 7.04556, 1, 0, 0.504432,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.095702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427251,-99) , 
2, 0.112748, 1, 0, 0.54199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457659,-99) , 
5, 0.61902, 0, 0, 0.498144,-99) , 
0, 0.49714, 1, 0, 0.515427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412087,-99) , 
0, 0.499025, 0, 0, 0.4639,-99) , 
10, 0.538784, 1, 0, 0.506338,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0862763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12045, 1, 1, 0.531353,-99) , 
NN(
0, 
0, 
-1, -0.71899, 0, -1, 0.45916,-99) , 
5, -0.333299, 0, 0, 0.517492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434728,-99) , 
9, -1.51022, 0, 0, 0.473182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414217,-99) , 
10, 1.00791, 1, 0, 0.452242,-99) , 
10, 0.166182, 1, 0, 0.500242,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0692569);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477041,-99) , 
3, 2.81631, 0, 0, 0.49757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409069,-99) , 
3, 8.20208, 1, 0, 0.492489,-99) , 
5, -0.904763, 1, 0, 0.498416,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.091545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.795942, 1, 1, 0.55165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381393,-99) , 
9, -2.8994, 0, 0, 0.469362,-99) , 
5, -0.428389, 0, 0, 0.526415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488322,-99) , 
5, 0.333425, 1, 0, 0.503567,-99) , 
NN(
0, 
0, 
-1, 0.000539889, 0, -1, 0.37043,-99) , 
7, -1.26769, 0, 0, 0.483989,-99) , 
7, -951.286, 1, 0, 0.499887,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.07725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.736304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459587,-99) , 
5, 0.937782, 1, 0, 0.504055,-99) , 
5, 0.564604, 1, 0, 0.51641,-99) , 
NN(
0, 
0, 
-1, 0.721223, 0, -1, 0.456277,-99) , 
5, 0.42855, 0, 0, 0.496264,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0570805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21132, 1, 1, 0.585486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4599,-99) , 
8, -0.696209, 0, 0, 0.558664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429368,-99) , 
5, 0.115726, 0, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, -2.83763, 0, -1, 0.407104,-99) , 
9, -4.41053, 0, 0, 0.493248,-99) , 
5, -0.428409, 1, 0, 0.505075,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0688556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484383,-99) , 
0, 0.500642, 0, 0, 0.545982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485468,-99) , 
0, 0.495553, 1, 0, 0.492177,-99) , 
2, 0.0676617, 0, 0, 0.49997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537133,-99) , 
NN(
0, 
0, 
-1, 0.61915, 0, -1, 0.42374,-99) , 
2, -0.0527543, 1, 0, 0.44635,-99) , 
0, 0.494283, 0, 0, 0.488236,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0848895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.721921, 1, 1, 0.592707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486244,-99) , 
5, -0.850354, 0, 0, 0.548755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427521,-99) , 
0, 0.494282, 0, 0, 0.496095,-99) , 
NN(
0, 
0, 
-1, -1.06249, 1, -1, 0.381321,-99) , 
10, -1.97642, 0, 0, 0.481362,-99) , 
5, 0.0476088, 1, 0, 0.497057,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.059895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488211,-99) , 
8, -0.996466, 1, 0, 0.495594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408624,-99) , 
5, -0.904741, 0, 0, 0.487711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381983,-99) , 
3, 8.18935, 1, 0, 0.481385,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.101144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502853, 1, 1, 0.578895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429899,-99) , 
0, 0.503804, 1, 0, 0.523255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383107,-99) , 
9, -1.93133, 0, 0, 0.450942,-99) , 
10, -0.285533, 1, 0, 0.495372,-99) , 
5, -0.619035, 1, 0, 0.508677,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.110563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.586377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400442,-99) , 
9, -3.64291, 0, 0, 0.476413,-99) , 
3, 1.46449, 1, 0, 0.51479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441704,-99) , 
7, -951.286, 0, 0, 0.510407,-99) , 
NN(
0, 
0, 
-1, 0.931963, 1, -1, 0.438966,-99) , 
8, 0.141125, 1, 0, 0.458928,-99) , 
5, 0.523824, 1, 0, 0.478166,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0928728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497753,-99) , 
8, 1.71307, 1, 0, 0.537991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451032,-99) , 
8, 1.06925, 0, 0, 0.526131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476457,-99) , 
5, -0.333212, 0, 0, 0.526421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443745,-99) , 
8, -0.214482, 1, 0, 0.456865,-99) , 
9, -3.32953, 1, 0, 0.487177,-99) , 
10, -0.257977, 0, 0, 0.501585,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0680276);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335618,-99) , 
10, -1.90332, 0, 0, 0.512534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300931,-99) , 
10, -1.91512, 1, 0, 0.436036,-99) , 
8, -0.704811, 0, 0, 0.505351,-99) , 
9, -4.84147, 1, 0, 0.508882,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0754662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495285, 1, 1, 0.556692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452565,-99) , 
0, 0.492382, 0, 0, 0.540405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461298,-99) , 
1, 0.000301186, 1, 0, 0.491785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390583,-99) , 
6, 0.00635231, 1, 0, 0.486687,-99) , 
5, -0.333387, 1, 0, 0.497515,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0786847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.28452, 1, 1, 0.622764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451244,-99) , 
0, 0.500938, 1, 0, 0.504489,-99) , 
9, -3.6863, 1, 0, 0.526964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47273,-99) , 
1, -0.000725807, 1, 0, 0.487154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330353,-99) , 
1, -0.00403656, 0, 0, 0.479081,-99) , 
5, 0.428595, 1, 0, 0.49358,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0881984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421251,-99) , 
8, -0.673013, 0, 0, 0.541929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483623,-99) , 
8, -0.278181, 1, 0, 0.493727,-99) , 
5, -0.0475056, 1, 0, 0.504513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376463,-99) , 
3, 1.97213, 1, 0, 0.458942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302074,-99) , 
9, -4.29988, 1, 0, 0.40822,-99) , 
10, -2.1324, 0, 0, 0.494773,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0579091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490968,-99) , 
3, 3.0089, 0, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, -1.16445, 0, -1, 0.459405,-99) , 
3, 4.16304, 1, 0, 0.491286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39641,-99) , 
10, 0.963366, 1, 0, 0.482511,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0980581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0830605, 1, 1, 0.535433,-99) , 
NN(
0, 
0, 
-1, -2.33643, 0, -1, 0.461977,-99) , 
2, -0.066125, 0, 0, 0.522091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435134,-99) , 
10, -1.44451, 0, 0, 0.472231,-99) , 
NN(
0, 
0, 
-1, -2.64105, 0, -1, 0.371895,-99) , 
10, -0.899042, 1, 0, 0.457537,-99) , 
8, 0.429454, 0, 0, 0.494091,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0921445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493609, 0, 1, 0.598176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442695,-99) , 
8, 0.27172, 0, 0, 0.496094,-99) , 
9, -3.58338, 1, 0, 0.515212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419671,-99) , 
9, -3.44961, 0, 0, 0.508419,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.435814,-99) , 
5, 0.618946, 0, 0, 0.47619,-99) , 
0, 0.499046, 1, 0, 0.4985,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0900807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 0, 1, 0.622803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473435,-99) , 
10, -1.25549, 0, 0, 0.514257,-99) , 
2, -0.0878907, 1, 0, 0.52838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484227,-99) , 
9, -2.06557, 1, 0, 0.498613,-99) , 
NN(
0, 
0, 
-1, -0.619112, 1, -1, 0.430577,-99) , 
8, 1.38986, 0, 0, 0.477896,-99) , 
10, -0.226582, 1, 0, 0.509089,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0820242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619717, 1, 1, 0.554093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457565,-99) , 
2, 0.126483, 1, 0, 0.48374,-99) , 
2, 0.0595711, 1, 0, 0.532572,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499048, 0, 1, 0.537167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450211,-99) , 
0, 0.499996, 0, 0, 0.469254,-99) , 
3, 0.738667, 1, 0, 0.482302,-99) , 
3, 3.33695, 0, 0, 0.497287,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0782195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498773, 1, 1, 0.543327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45193,-99) , 
8, 0.687773, 0, 0, 0.494309,-99) , 
8, 0.143643, 1, 0, 0.509464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417488,-99) , 
10, -2.1191, 0, 0, 0.519273,-99) , 
NN(
0, 
0, 
-1, 0.49451, 1, -1, 0.438487,-99) , 
10, -1.42897, 1, 0, 0.455806,-99) , 
0, 0.495235, 0, 0, 0.495079,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0858489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457903,-99) , 
0, 0.491289, 0, 0, 0.555343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395286,-99) , 
10, -2.50652, 0, 0, 0.499498,-99) , 
0, 0.496186, 1, 0, 0.518029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494898,-99) , 
8, 0.448377, 1, 0, 0.517199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409633,-99) , 
5, 0.238704, 1, 0, 0.428037,-99) , 
2, -0.0585956, 1, 0, 0.452788,-99) , 
3, 3.26313, 1, 0, 0.496316,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0918725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.401344, 0, 1, 0.611333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471953,-99) , 
7, -951.286, 1, 0, 0.490412,-99) , 
5, 0.619032, 1, 0, 0.512749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336275,-99) , 
2, -0.0807555, 0, 0, 0.478978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265393,-99) , 
5, -0.265345, 1, 0, 0.45591,-99) , 
5, -0.14287, 0, 0, 0.499037,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0371277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.63712, 1, 1, 0.506313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399827,-99) , 
3, 1.58457, 1, 0, 0.450769,-99) , 
5, -0.809509, 0, 0, 0.499729,-99) , 
NN(
0, 
0, 
-1, -0.23901, 0, -1, 0.414113,-99) , 
0, 0.504754, 1, 0, 0.492913,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0782397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470837,-99) , 
10, -0.782901, 1, 0, 0.510632,-99) , 
NN(
0, 
0, 
-1, 0.918369, 1, -1, 0.462274,-99) , 
5, -0.238143, 1, 0, 0.471885,-99) , 
8, 2.14295, 0, 0, 0.478139,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.105948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.84569, 0, 1, 0.570891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452783,-99) , 
9, -1.9554, 1, 0, 0.504488,-99) , 
5, 0.795913, 1, 0, 0.528286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409137,-99) , 
0, 0.504893, 1, 0, 0.505918,-99) , 
NN(
0, 
0, 
-1, -0.0748215, 1, -1, 0.396746,-99) , 
0, 0.498094, 0, 0, 0.44621,-99) , 
5, 0.142897, 0, 0, 0.505743,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0654513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495992,-99) , 
5, 0.428842, 1, 0, 0.537776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475785,-99) , 
5, 0.904588, 0, 0, 0.49075,-99) , 
0, 0.494282, 1, 0, 0.499025,-99) , 
NN(
0, 
0, 
-1, 0.496171, 1, -1, 0.45704,-99) , 
10, 0.0939794, 1, 0, 0.486935,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.073208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3095, 1, 1, 0.570697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466067,-99) , 
2, -0.190401, 0, 0, 0.537792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487823,-99) , 
9, -4.40138, 1, 0, 0.495026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436635,-99) , 
6, 0.00427526, 0, 0, 0.450132,-99) , 
0, 0.499996, 1, 0, 0.480402,-99) , 
2, -0.0573264, 1, 0, 0.490484,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0617655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488318,-99) , 
9, -2.81305, 1, 0, 0.514322,-99) , 
9, -1.85577, 0, 0, 0.522038,-99) , 
NN(
0, 
0, 
-1, 0.333258, 1, -1, 0.468756,-99) , 
10, 0.53383, 1, 0, 0.513059,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0807359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483798,-99) , 
2, -0.0298414, 0, 0, 0.55474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458581,-99) , 
10, 0.947432, 1, 0, 0.52158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414325,-99) , 
0, 0.491974, 0, 0, 0.4937,-99) , 
NN(
0, 
0, 
-1, -0.00065851, 1, -1, 0.449769,-99) , 
0, 0.499045, 1, 0, 0.47498,-99) , 
9, -2.06583, 0, 0, 0.488017,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0916372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489614,-99) , 
0, 0.493556, 0, 0, 0.515749,-99) , 
0, 0.490473, 1, 0, 0.538234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471116,-99) , 
2, 0.163981, 1, 0, 0.525849,-99) , 
NN(
0, 
0, 
-1, 0.5238, 0, -1, 0.457247,-99) , 
2, 0.0989369, 0, 0, 0.464955,-99) , 
0, 0.494281, 1, 0, 0.478807,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0858674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498819, 0, 1, 0.536384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444994,-99) , 
9, -2.96944, 0, 0, 0.502454,-99) , 
0, 0.499998, 1, 0, 0.524532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396335,-99) , 
3, 5.97037, 1, 0, 0.518003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322161,-99) , 
8, -0.0303133, 1, 0, 0.487413,-99) , 
10, -1.32574, 0, 0, 0.515132,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.102414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488099,-99) , 
10, -0.102759, 0, 0, 0.567909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430048,-99) , 
8, 2.20804, 0, 0, 0.495532,-99) , 
10, 0.548717, 1, 0, 0.528278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452656,-99) , 
8, -0.655079, 0, 0, 0.515542,-99) , 
NN(
0, 
0, 
-1, -0.0462086, 0, -1, 0.469801,-99) , 
8, 0.0771768, 1, 0, 0.488466,-99) , 
9, -2.14628, 0, 0, 0.500834,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.067712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.162301, 0, 1, 0.602706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492125,-99) , 
7, 1.00968, 0, 0, 0.506028,-99) , 
0, 0.493334, 1, 0, 0.518805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435539,-99) , 
9, -1.59415, 1, 0, 0.484895,-99) , 
NN(
0, 
0, 
-1, 0.501898, 1, -1, 0.439578,-99) , 
10, -0.791187, 0, 0, 0.466439,-99) , 
7, -951.286, 0, 0, 0.498816,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0643127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.73581, 1, 1, 0.566176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48223,-99) , 
1, 0.000677622, 0, 0, 0.501633,-99) , 
3, 4.35951, 0, 0, 0.510513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417005,-99) , 
3, 8.21106, 1, 0, 0.505211,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0811682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237721, 1, 1, 0.605551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456041,-99) , 
0, 0.493738, 0, 0, 0.525164,-99) , 
0, 0.491425, 1, 0, 0.530678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448703,-99) , 
3, 8.18935, 1, 0, 0.526068,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0853937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498817, 0, 1, 0.540285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408213,-99) , 
7, -0.983245, 0, 0, 0.48579,-99) , 
0, 0.499996, 1, 0, 0.521966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463394,-99) , 
0, 0.500945, 0, 0, 0.489281,-99) , 
NN(
0, 
0, 
-1, -0.646306, 1, -1, 0.423067,-99) , 
5, -0.428478, 0, 0, 0.468658,-99) , 
7, -951.286, 0, 0, 0.501306,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.108536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.615996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445139,-99) , 
0, 0.498912, 0, 0, 0.510633,-99) , 
0, 0.49619, 1, 0, 0.545314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467406,-99) , 
9, -3.25667, 1, 0, 0.49061,-99) , 
NN(
0, 
0, 
-1, 0.714216, 0, -1, 0.441902,-99) , 
0, 0.499044, 0, 0, 0.461563,-99) , 
5, -0.142775, 1, 0, 0.478857,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.107516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0334697, 1, 1, 0.567849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44037,-99) , 
7, -951.286, 1, 0, 0.475572,-99) , 
10, -2.0015, 0, 0, 0.547124,-99) , 
NN(
NN(
0, 
0, 
-1, 1.50538, 1, 1, 0.532655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451843,-99) , 
5, 0.33327, 1, 0, 0.483627,-99) , 
9, -1.87687, 0, 0, 0.505685,-99) , 
10, -0.584266, 1, 0, 0.525733,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.094742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468385,-99) , 
7, -951.286, 0, 0, 0.590807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434016,-99) , 
10, -1.20635, 0, 0, 0.506854,-99) , 
8, -0.71276, 1, 0, 0.514848,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.440383,-99) , 
5, -0.809526, 0, 0, 0.506435,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0689134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460571,-99) , 
5, -0.0475739, 0, 0, 0.56047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454141,-99) , 
1, -0.00229635, 0, 0, 0.503711,-99) , 
0, 0.49333, 1, 0, 0.511539,-99) , 
NN(
0, 
0, 
-1, 0.496177, 1, -1, 0.441801,-99) , 
8, 1.57251, 1, 0, 0.496537,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0571545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.78921, 0, 1, 0.574225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488617,-99) , 
5, 0.904714, 0, 0, 0.502823,-99) , 
NN(
0, 
0, 
-1, 0.00322206, 1, -1, 0.45655,-99) , 
0, 0.500944, 1, 0, 0.490855,-99) , 
9, -4.37633, 1, 0, 0.495582,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0383159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459845,-99) , 
3, 2.59064, 1, 0, 0.572512,-99) , 
NN(
0, 
0, 
-1, -1.90995, 0, -1, 0.487121,-99) , 
1, -0.00408005, 1, 0, 0.492892,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0771458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96656, 1, 1, 0.588853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475265,-99) , 
9, -4.01929, 0, 0, 0.520837,-99) , 
0, 0.503803, 0, 0, 0.528247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510046,-99) , 
NN(
0, 
0, 
-1, -1.42608, 0, -1, 0.430901,-99) , 
0, 0.499037, 0, 0, 0.461224,-99) , 
10, 0.137926, 1, 0, 0.509938,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0475684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563955,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0204335, 0, 1, 0.552103,-99) , 
NN(
0, 
0, 
-1, 0.374048, 1, -1, 0.48582,-99) , 
5, -0.714289, 1, 0, 0.495085,-99) , 
8, 2.14326, 0, 0, 0.501721,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0751969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0919577, 0, 1, 0.534421,-99) , 
NN(
0, 
0, 
-1, -0.361151, 1, -1, 0.467107,-99) , 
10, -1.55225, 0, 0, 0.515068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468933,-99) , 
8, 1.30006, 1, 0, 0.484768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38966,-99) , 
8, 0.76742, 0, 0, 0.472179,-99) , 
9, -2.14628, 1, 0, 0.50198,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0706516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.116397, 0, 1, 0.604049,-99) , 
NN(
0, 
0, 
-1, -0.0471891, 1, -1, 0.471836,-99) , 
7, -951.286, 0, 0, 0.548902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473986,-99) , 
8, -0.995913, 1, 0, 0.47942,-99) , 
3, 6.60991, 0, 0, 0.485202,-99) , 
0, 0.493334, 1, 0, 0.493809,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0538062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485842,-99) , 
0, 0.499998, 1, 0, 0.55368,-99) , 
NN(
0, 
0, 
-1, -0.238108, 0, -1, 0.484375,-99) , 
9, -3.94451, 1, 0, 0.494412,-99) , 
9, -1.3545, 0, 0, 0.501795,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0549911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9668, 1, 1, 0.522387,-99) , 
NN(
0, 
0, 
-1, -3.07027, 0, -1, 0.430799,-99) , 
10, -2.51857, 0, 0, 0.51686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423567,-99) , 
1, 0.00702288, 1, 0, 0.512751,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.042736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492851,-99) , 
0, 0.493742, 0, 0, 0.518896,-99) , 
NN(
0, 
0, 
-1, -0.809526, 0, -1, 0.485229,-99) , 
0, 0.49619, 1, 0, 0.496027,-99) , 
8, -1.56998, 1, 0, 0.499544,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0840177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.22278, 1, 1, 0.547745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490268,-99) , 
5, 0.904711, 1, 0, 0.532008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469861,-99) , 
0, 0.504122, 0, 0, 0.502958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420665,-99) , 
8, 1.29453, 1, 0, 0.479796,-99) , 
0, 0.500948, 1, 0, 0.517517,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0715726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.066066, 0, 1, 0.530504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474628,-99) , 
2, -0.0686447, 1, 0, 0.489899,-99) , 
0, 0.496187, 1, 0, 0.502477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423083,-99) , 
9, -0.9926, 1, 0, 0.496296,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0532377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.32919, 1, 1, 0.639468,-99) , 
NN(
NN(
0, 
0, 
-1, 1.69775, 0, 1, 0.5184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462381,-99) , 
10, 1.00508, 1, 0, 0.513054,-99) , 
9, -4.39116, 1, 0, 0.519796,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0706362);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447366,-99) , 
0, 0.49714, 0, 0, 0.535424,-99) , 
NN(
0, 
0, 
-1, -3.83508, 0, -1, 0.4821,-99) , 
10, -1.59114, 1, 0, 0.492602,-99) , 
9, -1.3545, 0, 0, 0.502027,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0553788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.21174, 0, 1, 0.597225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448986,-99) , 
8, -1.2983, 1, 0, 0.492017,-99) , 
10, -2.23713, 0, 0, 0.55088,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.511131,-99) , 
NN(
0, 
0, 
-1, -1.60633, 0, -1, 0.414931,-99) , 
10, -1.34216, 0, 0, 0.500461,-99) , 
9, -3.72463, 1, 0, 0.508751,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0566344);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636477,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0877707, 1, 1, 0.527195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44966,-99) , 
9, -3.17249, 1, 0, 0.477799,-99) , 
10, -0.442334, 0, 0, 0.500396,-99) , 
10, -2.73351, 1, 0, 0.504458,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0760427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142148, 1, 1, 0.529427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399933,-99) , 
3, 2.14673, 1, 0, 0.470791,-99) , 
5, -0.333338, 0, 0, 0.516382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456256,-99) , 
0, 0.498088, 0, 0, 0.483709,-99) , 
NN(
0, 
0, 
-1, -0.357721, 1, -1, 0.401279,-99) , 
9, -3.02871, 0, 0, 0.449928,-99) , 
2, -0.0750248, 0, 0, 0.505062,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0823806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0035283, 0, 1, 0.595284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401172,-99) , 
0, 0.499997, 1, 0, 0.499538,-99) , 
3, 3.07718, 1, 0, 0.56315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436991,-99) , 
0, 0.503802, 1, 0, 0.502728,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.401847,-99) , 
10, -1.24978, 0, 0, 0.493029,-99) , 
8, -0.141417, 1, 0, 0.509437,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.109236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495531,-99) , 
0, 0.499046, 1, 0, 0.56557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399765,-99) , 
10, -2.76214, 0, 0, 0.527345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460293,-99) , 
3, 6.56809, 0, 0, 0.467856,-99) , 
NN(
0, 
0, 
-1, -1.0532, 1, -1, 0.410044,-99) , 
2, -0.0649142, 0, 0, 0.457076,-99) , 
8, -0.42694, 1, 0, 0.46769,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0508984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49333, 1, 1, 0.522161,-99) , 
NN(
0, 
0, 
-1, -0.0683448, 0, -1, 0.478128,-99) , 
3, 1.67501, 0, 0, 0.503697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426034,-99) , 
3, 8.2136, 1, 0, 0.498631,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.072271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479377,-99) , 
0, 0.498094, 1, 0, 0.522063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467381,-99) , 
5, 0.958967, 1, 0, 0.500202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453758,-99) , 
8, 1.57042, 0, 0, 0.465789,-99) , 
5, 0.913808, 0, 0, 0.474057,-99) , 
5, -0.809526, 1, 0, 0.479226,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.080154);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.6634, 0, 1, 0.631304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478903,-99) , 
9, -2.84873, 0, 0, 0.546351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474879,-99) , 
1, 0.00545767, 0, 0, 0.481733,-99) , 
0, 0.502853, 0, 0, 0.491096,-99) , 
9, -4.33232, 1, 0, 0.499213,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0882716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477765,-99) , 
8, 0.933047, 1, 0, 0.51986,-99) , 
8, 1.8574, 0, 0, 0.528258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440988,-99) , 
8, 1.28751, 0, 0, 0.466044,-99) , 
5, -0.809367, 1, 0, 0.478941,-99) , 
7, -951.286, 0, 0, 0.509607,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.084928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.542519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438884,-99) , 
0, 0.505618, 1, 0, 0.533377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432076,-99) , 
0, 0.490792, 1, 0, 0.449534,-99) , 
5, 0.809492, 0, 0, 0.472951,-99) , 
0, 0.497139, 0, 0, 0.507774,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0841524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00984316, 1, 1, 0.604553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441329,-99) , 
3, 5.01921, 1, 0, 0.514334,-99) , 
7, -951.286, 1, 0, 0.543395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409961,-99) , 
8, 0.203893, 0, 0, 0.508727,-99) , 
NN(
0, 
0, 
-1, 0.4956, 1, -1, 0.457698,-99) , 
0, 0.498093, 0, 0, 0.482601,-99) , 
10, -1.28859, 1, 0, 0.49732,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.091966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.21278, 1, 1, 0.544977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439537,-99) , 
2, -0.0791068, 0, 0, 0.526025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477761,-99) , 
8, 0.429522, 1, 0, 0.518718,-99) , 
NN(
0, 
0, 
-1, 0.497595, 0, -1, 0.454972,-99) , 
2, -0.0304532, 1, 0, 0.470395,-99) , 
0, 0.495238, 1, 0, 0.483804,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0749984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.915383, 1, 1, 0.535894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474751,-99) , 
0, 0.495282, 1, 0, 0.491817,-99) , 
10, -1.35723, 0, 0, 0.525077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414478,-99) , 
9, -2.77454, 1, 0, 0.45815,-99) , 
0, 0.492379, 0, 0, 0.517831,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0805168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.77207, 0, 1, 0.531282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458346,-99) , 
9, -1.51436, 1, 0, 0.520332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452009,-99) , 
0, 0.492653, 1, 0, 0.468471,-99) , 
NN(
0, 
0, 
-1, 0.015637, 0, -1, 0.405527,-99) , 
0, 0.490883, 0, 0, 0.456986,-99) , 
0, 0.496188, 0, 0, 0.498937,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0800021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.87294, 0, 1, 0.630318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419306,-99) , 
2, 0.082476, 1, 0, 0.494861,-99) , 
5, -0.61893, 1, 0, 0.510939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464942,-99) , 
8, -0.144404, 1, 0, 0.489204,-99) , 
NN(
0, 
0, 
-1, -0.33334, 0, -1, 0.419751,-99) , 
0, 0.502853, 0, 0, 0.458252,-99) , 
0, 0.500948, 1, 0, 0.496258,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0849366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451037,-99) , 
5, -0.428409, 0, 0, 0.521447,-99) , 
NN(
0, 
0, 
-1, -0.778997, 0, -1, 0.477387,-99) , 
8, 0.422957, 1, 0, 0.497429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396108,-99) , 
9, -1.38378, 1, 0, 0.484609,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0529272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0469265, 0, 1, 0.515976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421407,-99) , 
10, -2.80305, 0, 0, 0.512809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394838,-99) , 
5, 0.618696, 1, 0, 0.430725,-99) , 
2, -0.0984693, 0, 0, 0.502256,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0737263);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460282,-99) , 
8, 1.57084, 1, 0, 0.516183,-99) , 
NN(
0, 
0, 
-1, 0.496593, 1, -1, 0.479442,-99) , 
0, 0.498089, 0, 0, 0.497571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483383,-99) , 
5, -0.0753132, 0, 0, 0.538005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393826,-99) , 
5, 0.618712, 1, 0, 0.446093,-99) , 
2, -0.0750248, 0, 0, 0.48948,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0569749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477604,-99) , 
2, 0.0810799, 0, 0, 0.484507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391089,-99) , 
10, -2.33767, 0, 0, 0.480704,-99) , 
8, -1.57004, 1, 0, 0.483904,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.081817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619161, 1, 1, 0.584692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455991,-99) , 
8, 0.877007, 0, 0, 0.52341,-99) , 
10, -0.463771, 1, 0, 0.536137,-99) , 
NN(
NN(
0, 
0, 
-1, 0.000169801, 1, 1, 0.56832,-99) , 
NN(
0, 
0, 
-1, -2.12469, 0, -1, 0.471452,-99) , 
8, -1.12931, 1, 0, 0.484212,-99) , 
10, -0.857259, 0, 0, 0.514895,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0709408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487763,-99) , 
10, -0.769906, 1, 0, 0.511352,-99) , 
NN(
0, 
0, 
-1, 0.494508, 1, -1, 0.469909,-99) , 
0, 0.495234, 0, 0, 0.500497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444243,-99) , 
3, 2.35321, 0, 0, 0.486386,-99) , 
NN(
0, 
0, 
-1, 0.162342, 1, -1, 0.396728,-99) , 
3, 3.4331, 1, 0, 0.438252,-99) , 
2, 0.0755527, 1, 0, 0.490437,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0783518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0810016, 1, 1, 0.553197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498837,-99) , 
8, 1.12561, 1, 0, 0.539216,-99) , 
NN(
0, 
0, 
-1, 0.49782, 0, -1, 0.476652,-99) , 
9, -2.74014, 0, 0, 0.508617,-99) , 
0, 0.496188, 1, 0, 0.523193,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0872991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523794, 1, 1, 0.545397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407081,-99) , 
10, -2.60814, 0, 0, 0.537334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462726,-99) , 
2, -0.0572402, 1, 0, 0.474889,-99) , 
0, 0.489616, 1, 0, 0.480779,-99) , 
0, 0.498094, 0, 0, 0.507832,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0974344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434146,-99) , 
10, -1.50484, 0, 0, 0.518681,-99) , 
8, -0.998354, 1, 0, 0.523671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462171,-99) , 
5, 0.809256, 1, 0, 0.516095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413676,-99) , 
9, -3.36477, 1, 0, 0.441517,-99) , 
0, 0.500359, 0, 0, 0.486284,-99) , 
0, 0.498092, 1, 0, 0.504778,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0603273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453544,-99) , 
5, -0.809505, 0, 0, 0.50714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410703,-99) , 
8, 0.299916, 1, 0, 0.447252,-99) , 
2, 0.0591154, 1, 0, 0.496352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369955,-99) , 
9, -4.74381, 0, 0, 0.491084,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0791209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36803, 1, 1, 0.577572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435028,-99) , 
8, -1.20275, 0, 0, 0.500391,-99) , 
8, 0.143842, 0, 0, 0.547962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416748,-99) , 
6, 0.00351972, 1, 0, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423023,-99) , 
8, 1.85794, 1, 0, 0.49146,-99) , 
5, 0.523768, 1, 0, 0.509534,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0467039);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00388765, 0, 1, 0.519263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437778,-99) , 
9, -2.68563, 0, 0, 0.474176,-99) , 
5, 0.90473, 1, 0, 0.507284,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0893791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445009,-99) , 
9, -1.95685, 1, 0, 0.508952,-99) , 
9, -3.84296, 1, 0, 0.524012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45339,-99) , 
10, -1.55771, 0, 0, 0.52321,-99) , 
NN(
0, 
0, 
-1, 0.144283, 0, -1, 0.458176,-99) , 
2, 0.0556148, 0, 0, 0.47011,-99) , 
0, 0.500949, 0, 0, 0.483583,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0678928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473806,-99) , 
0, 0.493741, 0, 0, 0.541695,-99) , 
NN(
0, 
0, 
-1, 0.950036, 1, -1, 0.486053,-99) , 
5, -0.0476456, 1, 0, 0.496584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405386,-99) , 
9, -3.55009, 0, 0, 0.47915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39781,-99) , 
8, 1.00043, 1, 0, 0.445881,-99) , 
0, 0.5019, 1, 0, 0.486237,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.093894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551008, 1, 1, 0.555689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468417,-99) , 
10, 0.243952, 0, 0, 0.493845,-99) , 
5, 0.206363, 0, 0, 0.524732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541026,-99) , 
NN(
0, 
0, 
-1, 0.930947, 1, -1, 0.452418,-99) , 
5, 0.854886, 1, 0, 0.467929,-99) , 
5, 0.809509, 1, 0, 0.499391,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0862445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.43079, 1, 1, 0.532747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432977,-99) , 
3, 7.05311, 1, 0, 0.523938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457138,-99) , 
0, 0.503193, 1, 0, 0.494149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392541,-99) , 
1, -0.000317821, 1, 0, 0.43896,-99) , 
0, 0.50181, 0, 0, 0.472115,-99) , 
0, 0.499996, 1, 0, 0.505637,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0683523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.45075, 0, 1, 0.525694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408011,-99) , 
8, 1.262, 0, 0, 0.475485,-99) , 
10, -0.330234, 1, 0, 0.501862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466262,-99) , 
8, -1.46085, 1, 0, 0.509388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294528,-99) , 
8, -0.979942, 1, 0, 0.435714,-99) , 
10, -2.1324, 0, 0, 0.496026,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0623398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492608,-99) , 
0, 0.502852, 0, 0, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461367,-99) , 
5, 0.90473, 1, 0, 0.491244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403293,-99) , 
10, 0.85551, 1, 0, 0.479877,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0621789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.454772, 1, 1, 0.568858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611467,-99) , 
NN(
0, 
0, 
-1, 3.33901, 1, -1, 0.478882,-99) , 
9, -4.52584, 1, 0, 0.484754,-99) , 
2, -0.0737556, 1, 0, 0.496157,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0719504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392988,-99) , 
10, -0.755237, 0, 0, 0.510614,-99) , 
8, 0.551852, 1, 0, 0.519138,-99) , 
NN(
NN(
0, 
0, 
-1, -1.88651, 0, -1, 0.477573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310907,-99) , 
9, -2.88299, 0, 0, 0.421921,-99) , 
10, -1.03442, 1, 0, 0.466417,-99) , 
8, 0.429371, 0, 0, 0.496555,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0748734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333257, 0, 1, 0.55236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477802,-99) , 
5, -0.809511, 1, 0, 0.487537,-99) , 
8, -0.427493, 1, 0, 0.497224,-99) , 
NN(
0, 
0, 
-1, -0.825853, 0, -1, 0.42253,-99) , 
2, 0.106828, 1, 0, 0.487622,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0588381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.41466, 1, 1, 0.522446,-99) , 
NN(
0, 
0, 
-1, 0.500722, 0, -1, 0.480456,-99) , 
0, 0.499996, 1, 0, 0.508314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431735,-99) , 
2, -0.131722, 0, 0, 0.474358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378183,-99) , 
9, -3.6517, 0, 0, 0.451791,-99) , 
2, -0.0648558, 0, 0, 0.498316,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0707884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0448312, 1, 1, 0.523397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368632,-99) , 
3, 2.29452, 1, 0, 0.453524,-99) , 
5, -0.618843, 0, 0, 0.509912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294053,-99) , 
8, -1.15461, 1, 0, 0.41931,-99) , 
10, -2.1904, 0, 0, 0.502121,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0790231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460013,-99) , 
8, 0.314188, 1, 0, 0.492265,-99) , 
9, -2.16982, 0, 0, 0.497407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420841,-99) , 
9, -1.68584, 0, 0, 0.484069,-99) , 
NN(
0, 
0, 
-1, 1.31078, 0, -1, 0.40999,-99) , 
10, 0.176053, 0, 0, 0.460781,-99) , 
10, -0.150075, 1, 0, 0.484151,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0462885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490641,-99) , 
3, 0.432513, 1, 0, 0.495741,-99) , 
3, 6.60289, 0, 0, 0.502891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41564,-99) , 
2, -0.206407, 0, 0, 0.49817,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0879402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.556528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467084,-99) , 
7, -951.286, 1, 0, 0.492223,-99) , 
10, -0.654651, 0, 0, 0.513743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466198,-99) , 
10, 0.728048, 1, 0, 0.494689,-99) , 
NN(
0, 
0, 
-1, 0.498096, 0, -1, 0.420735,-99) , 
5, -0.0475417, 0, 0, 0.467549,-99) , 
10, 0.0424959, 1, 0, 0.500173,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0772958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411101,-99) , 
10, -2.65945, 1, 0, 0.480489,-99) , 
8, -0.920005, 0, 0, 0.542465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467507,-99) , 
7, -951.286, 0, 0, 0.510928,-99) , 
NN(
0, 
0, 
-1, 0.691599, 0, -1, 0.475831,-99) , 
5, 0.619025, 1, 0, 0.488604,-99) , 
9, -3.97968, 1, 0, 0.494808,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0542422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00229635, 1, 1, 0.532572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443581,-99) , 
0, 0.494286, 0, 0, 0.494532,-99) , 
7, -951.286, 1, 0, 0.5083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352838,-99) , 
10, -3.05755, 0, 0, 0.504162,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0921741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.126533, 1, 1, 0.560256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399261,-99) , 
2, 0.0705504, 1, 0, 0.5251,-99) , 
NN(
0, 
0, 
-1, 0.401825, 1, -1, 0.461345,-99) , 
0, 0.495235, 1, 0, 0.476638,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0711836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472349,-99) , 
10, -1.92428, 0, 0, 0.525891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477228,-99) , 
10, 0.615228, 1, 0, 0.517666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521835,-99) , 
NN(
0, 
0, 
-1, 2.44277, 0, -1, 0.417036,-99) , 
3, 3.57003, 0, 0, 0.46835,-99) , 
2, 0.074585, 1, 0, 0.50954,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0771231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19302, 1, 1, 0.524541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381354,-99) , 
9, -3.22758, 0, 0, 0.45513,-99) , 
5, -0.523732, 0, 0, 0.514423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523759,-99) , 
NN(
0, 
0, 
-1, 0.497768, 1, -1, 0.447175,-99) , 
0, 0.50094, 0, 0, 0.465778,-99) , 
10, 0.0424959, 1, 0, 0.500309,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0738688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000228993, 0, 1, 0.575015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443169,-99) , 
8, -0.119671, 0, 0, 0.514,-99) , 
2, -0.0720295, 1, 0, 0.523589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467239,-99) , 
8, -0.649355, 1, 0, 0.523279,-99) , 
NN(
0, 
0, 
-1, 0.496462, 0, -1, 0.440731,-99) , 
0, 0.499998, 0, 0, 0.466342,-99) , 
10, -1.43407, 0, 0, 0.510555,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0639143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485931,-99) , 
0, 0.499044, 1, 0, 0.59288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488922,-99) , 
5, 0.387801, 1, 0, 0.494364,-99) , 
1, 0.00262265, 0, 0, 0.505302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544599,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.450281,-99) , 
3, 3.32189, 0, 0, 0.464229,-99) , 
5, 0.142897, 0, 0, 0.49402,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0821882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468651,-99) , 
2, 0.128442, 1, 0, 0.551246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398066,-99) , 
10, -1.78116, 0, 0, 0.457813,-99) , 
2, -0.0577676, 0, 0, 0.533496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470254,-99) , 
9, -3.3128, 1, 0, 0.476408,-99) , 
5, -0.714141, 1, 0, 0.484233,-99) , 
8, 0.143078, 1, 0, 0.498706,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0782412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69111, 0, 1, 0.561217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448126,-99) , 
9, -3.451, 1, 0, 0.538642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488776,-99) , 
8, 1.09581, 1, 0, 0.504492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430287,-99) , 
10, -0.552791, 0, 0, 0.445343,-99) , 
9, -2.78667, 0, 0, 0.48663,-99) , 
10, -1.36007, 1, 0, 0.497904,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0699838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0113909, 0, 1, 0.593355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425757,-99) , 
5, 0.613069, 0, 0, 0.505441,-99) , 
5, 0.492062, 1, 0, 0.518663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409816,-99) , 
0, 0.50181, 1, 0, 0.475794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373801,-99) , 
0, 0.49238, 0, 0, 0.458071,-99) , 
5, -0.333343, 0, 0, 0.505811,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.084501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463176,-99) , 
0, 0.499972, 1, 0, 0.530954,-99) , 
NN(
0, 
0, 
-1, -1.74016, 1, -1, 0.483901,-99) , 
5, 0.809508, 0, 0, 0.503539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414279,-99) , 
2, -0.148238, 0, 0, 0.479337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37943,-99) , 
9, -2.49666, 1, 0, 0.437757,-99) , 
2, -0.0813434, 0, 0, 0.493358,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0817153);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3928,-99) , 
7, 1.85831, 1, 0, 0.51458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445111,-99) , 
9, -3.25473, 1, 0, 0.466919,-99) , 
7, -951.286, 0, 0, 0.496589,-99) , 
10, 0.879764, 0, 0, 0.506263,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0974531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56417, 1, 1, 0.570148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44828,-99) , 
8, -1.23977, 1, 0, 0.495459,-99) , 
9, -3.98254, 0, 0, 0.542166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48204,-99) , 
10, -0.0037923, 1, 0, 0.527567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460217,-99) , 
8, 1.64879, 0, 0, 0.476362,-99) , 
7, -951.286, 1, 0, 0.495537,-99) , 
9, -3.10406, 1, 0, 0.511105,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0801907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65217, 1, 1, 0.536655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464583,-99) , 
10, -0.70876, 0, 0, 0.501453,-99) , 
5, 0.8095, 1, 0, 0.520753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512389,-99) , 
NN(
0, 
0, 
-1, -0.322477, 1, -1, 0.432172,-99) , 
8, 1.00591, 0, 0, 0.459833,-99) , 
2, -0.0358026, 0, 0, 0.505194,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0844429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476122,-99) , 
9, -3.52934, 0, 0, 0.516184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428786,-99) , 
5, 0.428858, 1, 0, 0.45811,-99) , 
8, 1.5717, 1, 0, 0.503076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.489349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374812,-99) , 
0, 0.495226, 1, 0, 0.418333,-99) , 
3, 4.26094, 0, 0, 0.445416,-99) , 
2, -0.0750248, 0, 0, 0.493678,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0594012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494156,-99) , 
0, 0.496193, 0, 0, 0.546444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458191,-99) , 
3, 2.2504, 1, 0, 0.49359,-99) , 
3, 3.56867, 0, 0, 0.507896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337663,-99) , 
10, -3.11231, 0, 0, 0.503604,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0780556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00208772, 1, 1, 0.546595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
5, 0.809518, 1, 0, 0.524263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456072,-99) , 
0, 0.501902, 1, 0, 0.535163,-99) , 
NN(
0, 
0, 
-1, 0.496187, 1, -1, 0.460353,-99) , 
2, 0.074051, 0, 0, 0.471199,-99) , 
8, 1.2862, 0, 0, 0.486284,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0839494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490569,-99) , 
8, 0.747904, 0, 0, 0.572786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437619,-99) , 
8, 0.877647, 1, 0, 0.511444,-99) , 
9, -2.16632, 0, 0, 0.518422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568785,-99) , 
NN(
0, 
0, 
-1, 1.69437, 0, -1, 0.451755,-99) , 
9, -2.309, 1, 0, 0.469064,-99) , 
8, 1.28625, 1, 0, 0.503044,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0622936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47825,-99) , 
2, -0.0630777, 0, 0, 0.564883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
9, -2.52, 0, 0, 0.504522,-99) , 
0, 0.502853, 0, 0, 0.512385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410431,-99) , 
1, -0.00138307, 0, 0, 0.471993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401473,-99) , 
8, 1.01034, 1, 0, 0.444657,-99) , 
2, 0.067462, 1, 0, 0.500259,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0933732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.73326, 0, 1, 0.556014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45503,-99) , 
5, -0.331967, 0, 0, 0.538705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446274,-99) , 
8, 0.26525, 1, 0, 0.482046,-99) , 
0, 0.490475, 1, 0, 0.489376,-99) , 
8, 1.28514, 0, 0, 0.503886,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.073836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714036, 1, 1, 0.535616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42854,-99) , 
0, 0.503052, 0, 0, 0.47717,-99) , 
0, 0.501627, 1, 0, 0.513328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472932,-99) , 
0, 0.493511, 1, 0, 0.49377,-99) , 
NN(
0, 
0, 
-1, -1.84579, 1, -1, 0.408996,-99) , 
8, -0.410095, 0, 0, 0.477703,-99) , 
0, 0.497138, 0, 0, 0.498198,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.044042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435914,-99) , 
9, -4.41363, 1, 0, 0.514976,-99) , 
3, 2.46325, 0, 0, 0.552051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570356,-99) , 
NN(
0, 
0, 
-1, -0.904637, 0, -1, 0.489094,-99) , 
0, 0.505707, 0, 0, 0.493042,-99) , 
9, -4.05077, 1, 0, 0.499177,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0707671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440996,-99) , 
8, 1.69052, 1, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0.0467794, 1, -1, 0.462773,-99) , 
0, 0.49714, 1, 0, 0.4783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364708,-99) , 
8, -1.57003, 0, 0, 0.474233,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.11499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.09625, 1, 1, 0.548278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43208,-99) , 
10, 0.673151, 1, 0, 0.531506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626744,-99) , 
NN(
0, 
0, 
-1, 0.00223186, 1, -1, 0.426672,-99) , 
6, 0.00426799, 0, 0, 0.452426,-99) , 
0, 0.494282, 0, 0, 0.514843,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0601453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488028,-99) , 
5, 0.61902, 1, 0, 0.504272,-99) , 
NN(
0, 
0, 
-1, -0.634069, 1, -1, 0.436175,-99) , 
0, 0.492382, 0, 0, 0.496813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343657,-99) , 
10, -2.80305, 0, 0, 0.490267,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.110176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47795,-99) , 
3, 3.04713, 0, 0, 0.504565,-99) , 
0, 0.501584, 1, 0, 0.522529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468673,-99) , 
5, -0.428409, 1, 0, 0.494168,-99) , 
NN(
0, 
0, 
-1, 1.28731, 1, -1, 0.436603,-99) , 
0, 0.495236, 1, 0, 0.456154,-99) , 
0, 0.500949, 0, 0, 0.471816,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0544657);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474243,-99) , 
5, 0.428659, 0, 0, 0.551051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489239,-99) , 
9, -3.73532, 1, 0, 0.496864,-99) , 
2, -0.0644139, 1, 0, 0.505885,-99) , 
10, -2.73351, 1, 0, 0.509567,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0980857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618877, 1, 1, 0.544316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420916,-99) , 
0, 0.505706, 1, 0, 0.53796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38244,-99) , 
10, -2.59589, 0, 0, 0.481949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345145,-99) , 
8, -0.0303133, 1, 0, 0.457203,-99) , 
10, -1.29142, 0, 0, 0.515747,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0898877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136818, 0, 1, 0.539778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386145,-99) , 
0, 0.505709, 1, 0, 0.53041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49077,-99) , 
0, 0.49714, 1, 0, 0.525811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44412,-99) , 
9, -4.02468, 1, 0, 0.455425,-99) , 
8, 0.999608, 0, 0, 0.481296,-99) , 
7, -951.286, 0, 0, 0.511151,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.083817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.782317, 0, 1, 0.590162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433813,-99) , 
8, -0.997586, 0, 0, 0.567561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483187,-99) , 
3, 3.58777, 1, 0, 0.515818,-99) , 
NN(
0, 
0, 
-1, 0.495221, 0, -1, 0.401301,-99) , 
5, 0.0476232, 0, 0, 0.50666,-99) , 
5, -0.428561, 1, 0, 0.517588,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0734954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01343, 1, 1, 0.573859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468187,-99) , 
10, -2.77102, 0, 0, 0.545373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484048,-99) , 
0, 0.499041, 0, 0, 0.506673,-99) , 
NN(
0, 
0, 
-1, -2.72274, 1, -1, 0.441326,-99) , 
8, 0.158248, 0, 0, 0.491634,-99) , 
9, -3.92394, 1, 0, 0.497933,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0741692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582546,-99) , 
NN(
NN(
0, 
0, 
-1, 1.54902, 0, 1, 0.548324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478349,-99) , 
10, -0.379462, 1, 0, 0.510669,-99) , 
5, 0.238045, 1, 0, 0.520171,-99) , 
9, -1.31401, 0, 0, 0.527636,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0615602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481865,-99) , 
5, -0.637116, 1, 0, 0.487506,-99) , 
NN(
0, 
0, 
-1, -0.0221024, 0, -1, 0.433787,-99) , 
5, -0.809525, 0, 0, 0.481218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347504,-99) , 
8, -1.8556, 0, 0, 0.477766,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0812768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468846,-99) , 
0, 0.492516, 0, 0, 0.527482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449362,-99) , 
8, 0.552462, 0, 0, 0.492635,-99) , 
0, 0.499044, 1, 0, 0.512946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440795,-99) , 
8, -1.21449, 0, 0, 0.484864,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.399695,-99) , 
8, -0.794838, 1, 0, 0.447298,-99) , 
8, -0.427469, 0, 0, 0.501777,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0618106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492732,-99) , 
7, -951.286, 1, 0, 0.506865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428247,-99) , 
1, -0.00154384, 1, 0, 0.462716,-99) , 
2, 0.0741294, 1, 0, 0.499697,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.437296,-99) , 
9, -3.80523, 0, 0, 0.488928,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.078634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470331,-99) , 
8, -0.135903, 0, 0, 0.546796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437873,-99) , 
10, -1.02918, 1, 0, 0.495086,-99) , 
0, 0.49523, 0, 0, 0.531413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437321,-99) , 
6, 0.00296582, 1, 0, 0.490275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376196,-99) , 
6, 0.00889904, 1, 0, 0.485095,-99) , 
7, -951.286, 1, 0, 0.502297,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0716615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00460469, 0, 1, 0.509059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418211,-99) , 
0, 0.504122, 0, 0, 0.466122,-99) , 
0, 0.500948, 1, 0, 0.497587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400494,-99) , 
7, -951.286, 1, 0, 0.458474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354588,-99) , 
3, 2.98199, 1, 0, 0.433515,-99) , 
5, -0.523814, 0, 0, 0.48601,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0683188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475379,-99) , 
7, -951.286, 1, 0, 0.491563,-99) , 
8, -1.28361, 1, 0, 0.497103,-99) , 
NN(
0, 
0, 
-1, 2.19481, 0, -1, 0.435258,-99) , 
5, -0.714153, 0, 0, 0.487527,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.077795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457545,-99) , 
2, -0.0319154, 0, 0, 0.53876,-99) , 
9, -3.58338, 1, 0, 0.569041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455727,-99) , 
1, -0.00127619, 0, 0, 0.533943,-99) , 
NN(
0, 
0, 
-1, -2.46699, 0, -1, 0.479115,-99) , 
2, -0.0750248, 1, 0, 0.487844,-99) , 
5, -0.142852, 1, 0, 0.503997,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.101704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492382, 1, 1, 0.542876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397154,-99) , 
10, -1.89112, 0, 0, 0.537083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455862,-99) , 
8, -1.59671, 0, 0, 0.517698,-99) , 
NN(
0, 
0, 
-1, -0.850772, 1, -1, 0.373482,-99) , 
8, -1.03734, 1, 0, 0.448381,-99) , 
8, -0.711007, 0, 0, 0.526989,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0851626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463789,-99) , 
5, 0.333419, 0, 0, 0.51582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42087,-99) , 
1, -0.00408005, 0, 0, 0.509154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458531,-99) , 
9, -1.81575, 0, 0, 0.485145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407287,-99) , 
10, 0.99103, 1, 0, 0.468161,-99) , 
10, -0.364011, 1, 0, 0.491743,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0826654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.654581, 1, 1, 0.561911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457023,-99) , 
5, -0.809493, 0, 0, 0.541607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453795,-99) , 
8, 0.556297, 1, 0, 0.474588,-99) , 
8, 1.95269, 0, 0, 0.4844,-99) , 
8, -0.141872, 1, 0, 0.49685,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0838049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491463,-99) , 
8, 0.755996, 0, 0, 0.519217,-99) , 
8, -1.28401, 1, 0, 0.523822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427207,-99) , 
0, 0.501688, 0, 0, 0.499284,-99) , 
NN(
0, 
0, 
-1, 0.725206, 0, -1, 0.423757,-99) , 
0, 0.503169, 1, 0, 0.459915,-99) , 
0, 0.500947, 1, 0, 0.506232,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0898282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46455,-99) , 
9, -3.97827, 1, 0, 0.469515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357245,-99) , 
9, -4.24535, 0, 0, 0.464656,-99) , 
9, -4.52584, 1, 0, 0.470629,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0706103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.229184, 0, 1, 0.524262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460725,-99) , 
10, 0.873219, 1, 0, 0.516325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573636,-99) , 
NN(
0, 
0, 
-1, -1.03974, 1, -1, 0.415589,-99) , 
5, 0.0481937, 1, 0, 0.447683,-99) , 
10, -1.69765, 0, 0, 0.505176,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.061191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481318,-99) , 
0, 0.493738, 0, 0, 0.511634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462291,-99) , 
0, 0.50054, 0, 0, 0.483387,-99) , 
0, 0.496187, 1, 0, 0.492465,-99) , 
8, -1.56983, 1, 0, 0.495465,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0713592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494774,-99) , 
8, 1.82671, 0, 0, 0.563737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492955,-99) , 
10, 0.939974, 1, 0, 0.536796,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491249, 0, 1, 0.54117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469004,-99) , 
0, 0.504712, 0, 0, 0.475136,-99) , 
0, 0.492382, 1, 0, 0.481643,-99) , 
8, 1.57121, 0, 0, 0.493504,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0678559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475633,-99) , 
8, -0.94643, 0, 0, 0.52888,-99) , 
NN(
0, 
0, 
-1, -1.57317, 0, -1, 0.476578,-99) , 
8, -0.30528, 1, 0, 0.486775,-99) , 
8, 2.1431, 0, 0, 0.496263,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0865293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452177,-99) , 
9, -2.72414, 0, 0, 0.528602,-99) , 
9, -3.6863, 1, 0, 0.547757,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490561, 0, 1, 0.535239,-99) , 
NN(
0, 
0, 
-1, 0.497458, 0, -1, 0.467352,-99) , 
0, 0.492378, 1, 0, 0.473118,-99) , 
5, 0.0476845, 1, 0, 0.489452,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0379828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495722,-99) , 
3, 4.72081, 0, 0, 0.501624,-99) , 
3, 7.02741, 0, 0, 0.507258,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.444321,-99) , 
0, 0.503801, 1, 0, 0.500308,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.103029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.20388, 0, 1, 0.623123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478083,-99) , 
5, -0.782401, 0, 0, 0.526981,-99) , 
10, -0.416799, 1, 0, 0.569575,-99) , 
NN(
NN(
0, 
0, 
-1, -0.570415, 1, 1, 0.521486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428192,-99) , 
0, 0.494284, 1, 0, 0.448373,-99) , 
10, -1.11046, 0, 0, 0.496619,-99) , 
5, 0.523792, 1, 0, 0.519108,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0716162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.60289, 0, 1, 0.529521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449791,-99) , 
8, 0.714895, 0, 0, 0.493714,-99) , 
0, 0.501447, 1, 0, 0.520258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42606,-99) , 
5, 0.143635, 1, 0, 0.468197,-99) , 
0, 0.491426, 0, 0, 0.516522,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0828009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.152048, 1, 1, 0.549289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475038,-99) , 
0, 0.499181, 0, 0, 0.490287,-99) , 
5, 0.714256, 1, 0, 0.514012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458842,-99) , 
5, -0.142866, 1, 0, 0.488382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406041,-99) , 
0, 0.502717, 0, 0, 0.464773,-99) , 
0, 0.501901, 1, 0, 0.503358,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0822706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.540315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470231,-99) , 
7, -951.286, 1, 0, 0.503395,-99) , 
8, 1.16351, 1, 0, 0.529961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453735,-99) , 
8, 2.14295, 1, 0, 0.522098,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0946444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470026,-99) , 
0, 0.501897, 1, 0, 0.600785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348186,-99) , 
8, -0.514265, 1, 0, 0.497498,-99) , 
10, -1.77821, 0, 0, 0.543391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482938,-99) , 
0, 0.499994, 0, 0, 0.503071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407136,-99) , 
2, -0.0298414, 1, 0, 0.444249,-99) , 
3, 3.56867, 1, 0, 0.486053,-99) , 
10, -1.28859, 1, 0, 0.500457,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0772743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451545,-99) , 
0, 0.491426, 0, 0, 0.533854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456706,-99) , 
8, 2.01384, 0, 0, 0.488862,-99) , 
10, 0.355781, 1, 0, 0.52367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428145,-99) , 
2, 0.20868, 1, 0, 0.518614,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.109397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809475, 0, 1, 0.551052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442859,-99) , 
0, 0.493738, 1, 0, 0.482915,-99) , 
0, 0.496186, 0, 0, 0.528081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47724,-99) , 
10, 0.830889, 1, 0, 0.531581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438827,-99) , 
9, -2.98027, 1, 0, 0.449935,-99) , 
9, -1.58515, 0, 0, 0.474802,-99) , 
8, 0.714992, 1, 0, 0.501143,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.064067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409696,-99) , 
10, -2.02977, 0, 0, 0.501303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366639,-99) , 
8, 0.601269, 0, 0, 0.441248,-99) , 
2, -0.0649142, 0, 0, 0.490466,-99) , 
NN(
0, 
0, 
-1, -1.62736, 1, -1, 0.312169,-99) , 
10, -2.6334, 0, 0, 0.480942,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0569712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602435,-99) , 
NN(
NN(
0, 
0, 
-1, 0.429906, 1, 1, 0.547866,-99) , 
NN(
0, 
0, 
-1, -0.547471, 0, -1, 0.476734,-99) , 
9, -4.13255, 1, 0, 0.482875,-99) , 
0, 0.490474, 1, 0, 0.487631,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0785794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496189, 1, 1, 0.522293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452025,-99) , 
10, 0.931557, 1, 0, 0.510727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331207,-99) , 
10, -1.29098, 1, 0, 0.498929,-99) , 
NN(
0, 
0, 
-1, -1.29563, 0, -1, 0.418576,-99) , 
8, 0.0270343, 1, 0, 0.465887,-99) , 
9, -2.95551, 0, 0, 0.492226,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0846664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499238, 0, 1, 0.509667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443186,-99) , 
6, 0.00455222, 0, 0, 0.463404,-99) , 
0, 0.49469, 0, 0, 0.493873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408665,-99) , 
8, 1.53481, 1, 0, 0.471841,-99) , 
NN(
0, 
0, 
-1, 0.500721, 0, -1, 0.390415,-99) , 
8, 0.43535, 0, 0, 0.437875,-99) , 
0, 0.499996, 1, 0, 0.474663,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.107013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489695,-99) , 
5, 0.809263, 1, 0, 0.530919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367542,-99) , 
9, -2.64811, 1, 0, 0.516219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467299,-99) , 
0, 0.501892, 0, 0, 0.483949,-99) , 
NN(
0, 
0, 
-1, 0.497139, 1, -1, 0.416154,-99) , 
10, -0.434024, 0, 0, 0.458569,-99) , 
8, 0.14522, 1, 0, 0.475312,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0715175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.49675, 1, 1, 0.552452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463424,-99) , 
5, 0.333788, 1, 0, 0.492717,-99) , 
0, 0.499019, 1, 0, 0.526777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382693,-99) , 
3, 6.43206, 1, 0, 0.489231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3878,-99) , 
8, 0.81012, 1, 0, 0.476519,-99) , 
8, 1.00061, 0, 0, 0.49612,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0952197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41457,-99) , 
10, 0.403099, 1, 0, 0.503848,-99) , 
9, -1.42244, 0, 0, 0.530401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499411,-99) , 
10, -0.668296, 0, 0, 0.522588,-99) , 
NN(
0, 
0, 
-1, 0.500135, 0, -1, 0.454842,-99) , 
0, 0.497142, 1, 0, 0.481964,-99) , 
8, 0.998944, 0, 0, 0.50118,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0788265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493335, 1, 1, 0.533189,-99) , 
NN(
0, 
0, 
-1, -2.37176, 0, -1, 0.476795,-99) , 
10, -0.740737, 1, 0, 0.498821,-99) , 
NN(
0, 
0, 
-1, 0.498041, 1, -1, 0.42658,-99) , 
5, 0.904685, 1, 0, 0.479749,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0816549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63427, 1, 1, 0.604684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431278,-99) , 
8, -0.164201, 0, 0, 0.524407,-99) , 
8, -0.322429, 1, 0, 0.532641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475318,-99) , 
0, 0.498091, 0, 0, 0.494041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367443,-99) , 
2, -0.019856, 0, 0, 0.447103,-99) , 
9, -4.24711, 0, 0, 0.525318,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0830592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492157,-99) , 
2, 0.00737252, 0, 0, 0.521072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396458,-99) , 
0, 0.49714, 1, 0, 0.438422,-99) , 
2, -0.066125, 0, 0, 0.506429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460405,-99) , 
9, -3.30048, 1, 0, 0.475697,-99) , 
NN(
0, 
0, 
-1, -4.2494, 0, -1, 0.39554,-99) , 
8, -0.713047, 0, 0, 0.465365,-99) , 
7, -951.286, 0, 0, 0.490319,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0588003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40985,-99) , 
5, -0.618348, 1, 0, 0.489464,-99) , 
5, 0.333513, 0, 0, 0.565898,-99) , 
NN(
NN(
0, 
0, 
-1, 0.710845, 1, 1, 0.543542,-99) , 
NN(
0, 
0, 
-1, 0.494693, 0, -1, 0.489309,-99) , 
8, 1.57212, 0, 0, 0.500372,-99) , 
0, 0.493332, 1, 0, 0.50975,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0687284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491109,-99) , 
0, 0.500947, 1, 0, 0.53806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451848,-99) , 
10, 0.644906, 1, 0, 0.513746,-99) , 
NN(
0, 
0, 
-1, -1.82056, 0, -1, 0.475883,-99) , 
10, -0.629676, 0, 0, 0.495032,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0428781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.706201, 1, 1, 0.524091,-99) , 
NN(
0, 
0, 
-1, -2.69161, 0, -1, 0.491299,-99) , 
0, 0.499045, 0, 0, 0.50425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411302,-99) , 
5, -0.904748, 0, 0, 0.495892,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0976216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493866,-99) , 
7, -951.286, 0, 0, 0.532415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396527,-99) , 
10, -0.122438, 1, 0, 0.458419,-99) , 
2, -0.0585956, 0, 0, 0.51746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454136,-99) , 
10, -2.37386, 0, 0, 0.515761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272119,-99) , 
9, -3.76964, 0, 0, 0.396351,-99) , 
10, -2.04353, 1, 0, 0.459537,-99) , 
8, -0.427501, 0, 0, 0.50716,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0789375);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478446,-99) , 
8, -0.386742, 0, 0, 0.510819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441676,-99) , 
9, -1.64854, 0, 0, 0.471118,-99) , 
8, 0.918908, 1, 0, 0.495907,-99) , 
8, 2.14295, 0, 0, 0.502351,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.07516);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.569327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443378,-99) , 
2, -0.0845259, 0, 0, 0.524732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4601,-99) , 
3, 3.35558, 0, 0, 0.475685,-99) , 
0, 0.494963, 1, 0, 0.488139,-99) , 
0, 0.504757, 0, 0, 0.493169,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0605719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477759,-99) , 
0, 0.500949, 1, 0, 0.523459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442865,-99) , 
2, -0.0557161, 0, 0, 0.492695,-99) , 
10, -0.317653, 1, 0, 0.510227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41825,-99) , 
9, -4.59497, 0, 0, 0.505592,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0724094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.39662, 1, 1, 0.523837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409006,-99) , 
1, 0.00815977, 1, 0, 0.519136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475132,-99) , 
2, 0.114094, 1, 0, 0.514022,-99) , 
NN(
0, 
0, 
-1, 0.499141, 0, -1, 0.413651,-99) , 
0, 0.497142, 1, 0, 0.451383,-99) , 
2, 0.0483677, 1, 0, 0.504389,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0920898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494943,-99) , 
1, 0.00014972, 1, 0, 0.565515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410764,-99) , 
0, 0.494632, 1, 0, 0.506735,-99) , 
0, 0.495371, 0, 0, 0.519011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457104,-99) , 
10, -0.165005, 0, 0, 0.509477,-99) , 
NN(
0, 
0, 
-1, -0.0982572, 1, -1, 0.458339,-99) , 
5, 0.0476034, 1, 0, 0.46965,-99) , 
0, 0.496187, 1, 0, 0.485742,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0259212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503034, 0, 1, 0.510277,-99) , 
NN(
0, 
0, 
-1, 0.143009, 0, -1, 0.465493,-99) , 
0, 0.503805, 1, 0, 0.505322,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0999408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0044658, 1, 1, 0.551621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479839,-99) , 
8, -0.14202, 1, 0, 0.49827,-99) , 
5, 0.809383, 1, 0, 0.526143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41562,-99) , 
8, 1.45805, 0, 0, 0.499651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396739,-99) , 
10, 1.00824, 1, 0, 0.453949,-99) , 
9, -1.75169, 1, 0, 0.510711,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0796721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.841273, 1, 1, 0.572272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490487,-99) , 
8, -1.09418, 1, 0, 0.499686,-99) , 
8, 1.00048, 0, 0, 0.528886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473127,-99) , 
2, -0.0413451, 1, 0, 0.490663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404316,-99) , 
3, 4.38981, 1, 0, 0.480342,-99) , 
5, 0.5238, 0, 0, 0.513072,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.108388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39709,-99) , 
9, -4.40649, 0, 0, 0.494368,-99) , 
5, 0.430898, 1, 0, 0.533632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381455,-99) , 
9, -3.52161, 0, 0, 0.499891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447744,-99) , 
7, 1.57282, 0, 0, 0.457854,-99) , 
7, -951.286, 1, 0, 0.473158,-99) , 
10, -1.7874, 1, 0, 0.480936,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0792665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.394156, 0, 1, 0.568015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
10, 0.0736502, 1, 0, 0.546637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468759,-99) , 
9, -3.5888, 0, 0, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0.71415, 1, -1, 0.458789,-99) , 
10, -0.619346, 1, 0, 0.481096,-99) , 
0, 0.500948, 0, 0, 0.498451,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0775836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.746035, 1, 1, 0.535666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476005,-99) , 
1, -0.0039028, 1, 0, 0.493509,-99) , 
5, 0.619051, 0, 0, 0.519829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441173,-99) , 
9, -1.29454, 1, 0, 0.509872,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0301581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.77646, 0, 1, 0.512445,-99) , 
NN(
0, 
0, 
-1, -0.426769, 0, -1, 0.450368,-99) , 
0, 0.491426, 0, 0, 0.508056,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0662285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.60455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481799,-99) , 
3, 1.7567, 0, 0, 0.506196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424955,-99) , 
3, 7.02741, 1, 0, 0.499269,-99) , 
1, 0.00388765, 0, 0, 0.507801,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0918239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428326,-99) , 
5, -0.523728, 0, 0, 0.505695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34136,-99) , 
5, 0.238034, 1, 0, 0.419579,-99) , 
10, 0.325553, 1, 0, 0.491556,-99) , 
9, -1.02109, 0, 0, 0.497472,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0798026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405893,-99) , 
10, -1.88732, 0, 0, 0.551074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444007,-99) , 
3, 1.63, 1, 0, 0.474376,-99) , 
5, -0.460254, 0, 0, 0.512799,-99) , 
NN(
0, 
0, 
-1, 0.494286, 0, -1, 0.471866,-99) , 
5, 0.619054, 1, 0, 0.486766,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0578246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499046, 0, 1, 0.56461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559065,-99) , 
NN(
0, 
0, 
-1, 0.00539043, 1, -1, 0.475827,-99) , 
5, -0.904763, 1, 0, 0.481322,-99) , 
8, -0.999142, 1, 0, 0.486573,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0683062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.332227, 1, 1, 0.589354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470576,-99) , 
3, 3.35241, 1, 0, 0.504821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42291,-99) , 
5, -0.142408, 1, 0, 0.442522,-99) , 
0, 0.494286, 0, 0, 0.492427,-99) , 
1, 0.0045751, 0, 0, 0.498539,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0726496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.7327, 0, 1, 0.62629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456674,-99) , 
5, -0.619084, 0, 0, 0.573474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465437,-99) , 
0, 0.499995, 1, 0, 0.498807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326147,-99) , 
10, -1.90668, 0, 0, 0.492606,-99) , 
8, -0.711726, 1, 0, 0.501156,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.074098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502741, 0, 1, 0.581695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458359,-99) , 
7, -951.286, 0, 0, 0.50724,-99) , 
0, 0.50326, 1, 0, 0.534374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460507,-99) , 
10, 0.761971, 1, 0, 0.50026,-99) , 
NN(
0, 
0, 
-1, 0.558411, 1, -1, 0.451624,-99) , 
10, -0.707594, 0, 0, 0.478054,-99) , 
0, 0.5019, 0, 0, 0.489038,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0822022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496632,-99) , 
7, -951.286, 0, 0, 0.526756,-99) , 
NN(
0, 
0, 
-1, 0.00642165, 0, -1, 0.439152,-99) , 
0, 0.505256, 1, 0, 0.51876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438718,-99) , 
0, 0.490523, 0, 0, 0.521789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422265,-99) , 
5, 0.714269, 1, 0, 0.465204,-99) , 
0, 0.495237, 0, 0, 0.505539,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0864985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.34491, 1, 1, 0.613476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487717,-99) , 
0, 0.499996, 1, 0, 0.560743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465274,-99) , 
0, 0.500947, 0, 0, 0.481536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394331,-99) , 
5, -0.904612, 0, 0, 0.474314,-99) , 
9, -3.96135, 1, 0, 0.484144,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0467551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495178,-99) , 
8, -0.125476, 1, 0, 0.509215,-99) , 
NN(
0, 
0, 
-1, 0.00213319, 1, -1, 0.444679,-99) , 
9, -4.44972, 0, 0, 0.504448,-99) , 
NN(
0, 
0, 
-1, 2.2383, 0, -1, 0.456342,-99) , 
8, 1.85731, 1, 0, 0.496942,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0751187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482021,-99) , 
5, -0.80954, 0, 0, 0.522826,-99) , 
NN(
0, 
0, 
-1, 0.000650406, 1, -1, 0.471928,-99) , 
5, -0.428594, 1, 0, 0.480449,-99) , 
9, -1.38378, 0, 0, 0.493253,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0687021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.51094, 1, 1, 0.523278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437425,-99) , 
10, 0.982678, 1, 0, 0.513612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436883,-99) , 
8, -0.550085, 1, 0, 0.487651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394056,-99) , 
5, -0.80926, 0, 0, 0.468235,-99) , 
8, -0.141872, 0, 0, 0.502829,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.07194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.52396, 1, 1, 0.582829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488392,-99) , 
9, -4.35599, 1, 0, 0.505006,-99) , 
8, 0.361232, 0, 0, 0.522736,-99) , 
NN(
0, 
0, 
-1, 0.0741566, 1, -1, 0.465956,-99) , 
8, 0.714867, 1, 0, 0.493723,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0750634);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00260292, 0, 1, 0.537068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588761,-99) , 
NN(
0, 
0, 
-1, 0.326941, 0, -1, 0.470016,-99) , 
0, 0.493329, 1, 0, 0.486034,-99) , 
9, -2.54087, 1, 0, 0.513305,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0662999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459109,-99) , 
8, 0.992953, 1, 0, 0.576496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49241,-99) , 
5, 0.619025, 0, 0, 0.516931,-99) , 
1, 0.00388765, 0, 0, 0.521929,-99) , 
NN(
0, 
0, 
-1, -1.38917, 1, -1, 0.423289,-99) , 
10, -2.39655, 0, 0, 0.515448,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0856958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523753, 1, 1, 0.537152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395189,-99) , 
0, 0.505255, 0, 0, 0.469611,-99) , 
0, 0.503803, 1, 0, 0.529256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414976,-99) , 
8, -0.061163, 1, 0, 0.506142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398572,-99) , 
2, -0.0758946, 0, 0, 0.485326,-99) , 
10, -1.29142, 0, 0, 0.517578,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0886661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88825, 1, 1, 0.543485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437431,-99) , 
10, -1.01349, 0, 0, 0.492765,-99) , 
2, -0.0189959, 0, 0, 0.531656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45557,-99) , 
6, 0.00251033, 0, 0, 0.485407,-99) , 
2, -0.0911691, 0, 0, 0.525126,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0725439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.76781, 0, 1, 0.518739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464502,-99) , 
5, 0.904741, 1, 0, 0.504291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475028,-99) , 
8, -0.587702, 1, 0, 0.5341,-99) , 
NN(
0, 
0, 
-1, -0.49903, 0, -1, 0.438633,-99) , 
9, -3.55742, 1, 0, 0.455393,-99) , 
0, 0.496187, 0, 0, 0.487733,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0669379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491996,-99) , 
2, -0.0631775, 0, 0, 0.567771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461262,-99) , 
9, -3.0582, 1, 0, 0.497372,-99) , 
3, 1.69794, 0, 0, 0.531973,-99) , 
NN(
0, 
0, 
-1, -2.59728, 0, -1, 0.475575,-99) , 
5, 0.238077, 1, 0, 0.489677,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0748924);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.427382, 1, 1, 0.530612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470186,-99) , 
0, 0.49818, 1, 0, 0.498411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443255,-99) , 
0, 0.495234, 0, 0, 0.484637,-99) , 
5, 0.714276, 1, 0, 0.504031,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.106135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714078, 1, 1, 0.557755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439111,-99) , 
10, -1.61641, 0, 0, 0.476856,-99) , 
0, 0.494284, 0, 0, 0.540999,-99) , 
NN(
NN(
0, 
0, 
-1, 1.36664, 1, 1, 0.545301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418839,-99) , 
5, 0.714775, 0, 0, 0.482227,-99) , 
9, -2.16989, 0, 0, 0.509921,-99) , 
8, 0.143473, 1, 0, 0.519157,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.104215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.5878, 1, 1, 0.575307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450641,-99) , 
0, 0.49349, 1, 0, 0.513644,-99) , 
0, 0.494873, 0, 0, 0.538824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41132,-99) , 
8, -0.737713, 0, 0, 0.551111,-99) , 
NN(
0, 
0, 
-1, 0.499136, 0, -1, 0.467246,-99) , 
5, 0.142921, 1, 0, 0.485941,-99) , 
0, 0.49714, 1, 0, 0.507283,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0823478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489008,-99) , 
0, 0.499639, 1, 0, 0.526639,-99) , 
NN(
0, 
0, 
-1, 3.45255, 1, -1, 0.474712,-99) , 
5, 0.809509, 0, 0, 0.496888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542216,-99) , 
NN(
0, 
0, 
-1, -0.359179, 0, -1, 0.444252,-99) , 
8, -0.713248, 1, 0, 0.453619,-99) , 
0, 0.497142, 0, 0, 0.478684,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0621364);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463538,-99) , 
8, 2.18367, 1, 0, 0.513819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370512,-99) , 
0, 0.498094, 0, 0, 0.453822,-99) , 
9, -4.03053, 0, 0, 0.509157,-99) , 
8, -1.28444, 1, 0, 0.512596,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.088943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4981, 0, 1, 0.560278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452541,-99) , 
5, 0.143179, 0, 0, 0.508285,-99) , 
1, 0.00145893, 0, 0, 0.522308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5446,-99) , 
NN(
0, 
0, 
-1, -2.11958, 0, -1, 0.427159,-99) , 
9, -4.56134, 1, 0, 0.449527,-99) , 
8, -0.141867, 0, 0, 0.504612,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0946559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77646, 0, 1, 0.542765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448125,-99) , 
8, 0.714867, 0, 0, 0.485518,-99) , 
5, 0.619065, 1, 0, 0.506464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443348,-99) , 
9, -4.00644, 0, 0, 0.51002,-99) , 
NN(
0, 
0, 
-1, 0.495597, 1, -1, 0.452151,-99) , 
10, -1.4896, 1, 0, 0.462755,-99) , 
0, 0.498092, 0, 0, 0.484556,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0836315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0219744, 0, 1, 0.569709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467198,-99) , 
5, 0.523676, 1, 0, 0.490536,-99) , 
9, -2.88114, 1, 0, 0.521683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
0, 0.504118, 0, 0, 0.509987,-99) , 
NN(
0, 
0, 
-1, 0.0394716, 1, -1, 0.458054,-99) , 
7, -951.286, 1, 0, 0.477719,-99) , 
0, 0.497141, 1, 0, 0.495164,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0671418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.18, 1, 1, 0.519087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364951,-99) , 
10, -1.91991, 0, 0, 0.51421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451436,-99) , 
9, -4.85046, 0, 0, 0.525078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330658,-99) , 
10, -2.16915, 1, 0, 0.441189,-99) , 
8, -0.710073, 0, 0, 0.505608,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0922188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00195615, 0, 1, 0.538036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411413,-99) , 
9, -2.39458, 0, 0, 0.451395,-99) , 
0, 0.492605, 0, 0, 0.512702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454597,-99) , 
8, 0.155337, 0, 0, 0.539877,-99) , 
NN(
0, 
0, 
-1, 0.0423733, 1, -1, 0.458188,-99) , 
0, 0.50462, 0, 0, 0.468469,-99) , 
0, 0.497139, 1, 0, 0.486001,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0882373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0383387, 0, 1, 0.57798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469004,-99) , 
0, 0.506405, 0, 0, 0.504087,-99) , 
0, 0.505075, 1, 0, 0.559456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47784,-99) , 
2, -0.00858989, 1, 0, 0.511315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396713,-99) , 
9, -2.40684, 0, 0, 0.469269,-99) , 
9, -2.80839, 1, 0, 0.487964,-99) , 
0, 0.50095, 0, 0, 0.505896,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0784869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400968,-99) , 
7, -1.56127, 0, 0, 0.504948,-99) , 
5, -0.714154, 1, 0, 0.517498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424483,-99) , 
0, 0.501898, 1, 0, 0.503939,-99) , 
NN(
0, 
0, 
-1, 2.00009, 1, -1, 0.426416,-99) , 
5, -0.333165, 0, 0, 0.479547,-99) , 
7, -951.286, 0, 0, 0.502438,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.088615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463587,-99) , 
5, 0.714034, 0, 0, 0.525373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464771,-99) , 
5, -0.714069, 1, 0, 0.473123,-99) , 
8, -0.0141141, 1, 0, 0.484293,-99) , 
NN(
0, 
0, 
-1, 0.499034, 0, -1, 0.410881,-99) , 
10, -2.3824, 0, 0, 0.479734,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0675899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238064, 0, 1, 0.59302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494191,-99) , 
7, -951.286, 1, 0, 0.516483,-99) , 
NN(
0, 
0, 
-1, 1.71385, 0, -1, 0.466419,-99) , 
10, 0.115004, 1, 0, 0.500625,-99) , 
8, -0.713115, 1, 0, 0.509767,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.10594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.258005, 1, 1, 0.570597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41795,-99) , 
8, -1.06195, 1, 0, 0.492562,-99) , 
10, -1.9809, 0, 0, 0.540149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465821,-99) , 
8, 0.634123, 1, 0, 0.488693,-99) , 
NN(
0, 
0, 
-1, 0.495235, 0, -1, 0.452375,-99) , 
7, -951.286, 0, 0, 0.473827,-99) , 
10, -1.18457, 1, 0, 0.491535,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0721189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502853, 0, 1, 0.529569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40264,-99) , 
3, 2.06773, 1, 0, 0.463536,-99) , 
5, -0.71429, 0, 0, 0.519358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384708,-99) , 
10, -2.80305, 0, 0, 0.514605,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.081207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.118748, 0, 1, 0.550597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456897,-99) , 
5, 0.427142, 1, 0, 0.490139,-99) , 
7, -951.286, 0, 0, 0.526488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490385,-99) , 
5, 0.714283, 1, 0, 0.520607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456058,-99) , 
5, 0.904579, 0, 0, 0.472486,-99) , 
3, 3.49386, 0, 0, 0.4858,-99) , 
0, 0.499996, 0, 0, 0.498884,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0812316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494768, 0, 1, 0.585643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445738,-99) , 
9, -2.95455, 1, 0, 0.487965,-99) , 
0, 0.494146, 0, 0, 0.51419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540148,-99) , 
NN(
0, 
0, 
-1, 0.523815, 1, -1, 0.469353,-99) , 
3, 6.58082, 0, 0, 0.47565,-99) , 
0, 0.495235, 1, 0, 0.485249,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0636739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500131, 1, 1, 0.565268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485575,-99) , 
0, 0.497638, 1, 0, 0.494693,-99) , 
2, -0.038041, 1, 0, 0.510933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417415,-99) , 
9, -1.59343, 1, 0, 0.491261,-99) , 
NN(
0, 
0, 
-1, -0.238009, 0, -1, 0.425841,-99) , 
8, -0.410095, 0, 0, 0.479857,-99) , 
0, 0.497139, 0, 0, 0.498011,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0900834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36723, 1, 1, 0.552483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462535,-99) , 
5, 0.38776, 0, 0, 0.486315,-99) , 
8, 0.143612, 0, 0, 0.530441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483063,-99) , 
10, -1.44855, 0, 0, 0.515139,-99) , 
NN(
0, 
0, 
-1, -0.241578, 0, -1, 0.45412,-99) , 
10, -0.902192, 1, 0, 0.479086,-99) , 
5, 0.714272, 1, 0, 0.501283,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0755255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.34816, 1, 1, 0.622601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451066,-99) , 
10, -2.739, 1, 0, 0.504271,-99) , 
10, -2.2738, 0, 0, 0.572617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479789,-99) , 
6, 0.00219423, 0, 0, 0.497683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372404,-99) , 
6, 0.0115213, 1, 0, 0.493722,-99) , 
8, -0.427253, 1, 0, 0.505399,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0785149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.549624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456401,-99) , 
5, 0.904609, 1, 0, 0.501892,-99) , 
7, -951.286, 1, 0, 0.519914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400912,-99) , 
2, -0.205264, 0, 0, 0.513896,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0706293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.5635, 1, 1, 0.59815,-99) , 
NN(
NN(
0, 
0, 
-1, -3.0745, 1, 1, 0.526551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413718,-99) , 
0, 0.495779, 1, 0, 0.483583,-99) , 
0, 0.497139, 0, 0, 0.508943,-99) , 
9, -4.11922, 1, 0, 0.51651,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0748946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.097785, 0, 1, 0.638857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493756,-99) , 
2, -0.202307, 0, 0, 0.514603,-99) , 
2, -0.138955, 0, 0, 0.568961,-99) , 
NN(
NN(
0, 
0, 
-1, 0.429338, 1, 1, 0.524388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401665,-99) , 
10, -1.12267, 0, 0, 0.471064,-99) , 
0, 0.497142, 0, 0, 0.502715,-99) , 
2, -0.0724437, 1, 0, 0.513252,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0825143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.750317, 1, 1, 0.528378,-99) , 
NN(
0, 
0, 
-1, -2.73868, 0, -1, 0.423363,-99) , 
8, 0.405397, 0, 0, 0.517702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450051,-99) , 
0, 0.499046, 0, 0, 0.479825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370052,-99) , 
8, 0.287765, 1, 0, 0.463145,-99) , 
10, -0.942613, 0, 0, 0.49754,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0810963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619044, 1, 1, 0.586919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428573,-99) , 
8, 0.0834232, 1, 0, 0.508776,-99) , 
10, -0.993544, 0, 0, 0.530114,-99) , 
NN(
0, 
0, 
-1, 0.00869154, 1, -1, 0.473479,-99) , 
10, -0.619346, 1, 0, 0.499711,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0491854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475513,-99) , 
1, 0.00034301, 1, 0, 0.514914,-99) , 
2, -0.0838636, 1, 0, 0.528147,-99) , 
NN(
0, 
0, 
-1, -1.49668, 0, -1, 0.481928,-99) , 
9, -3.514, 1, 0, 0.491475,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0972334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427465,-99) , 
10, -1.64078, 1, 0, 0.521222,-99) , 
9, -3.25286, 0, 0, 0.536101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460922,-99) , 
0, 0.494284, 1, 0, 0.474765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276598,-99) , 
10, -1.45835, 0, 0, 0.466911,-99) , 
8, -0.140234, 1, 0, 0.481612,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0612483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714418, 1, 1, 0.523556,-99) , 
NN(
0, 
0, 
-1, -0.0816406, 0, -1, 0.461752,-99) , 
2, -0.0567665, 0, 0, 0.511944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427003,-99) , 
0, 0.490791, 0, 0, 0.470464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41386,-99) , 
7, -951.286, 0, 0, 0.445136,-99) , 
0, 0.492378, 0, 0, 0.504773,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0401654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489557,-99) , 
8, 1.88705, 0, 0, 0.497559,-99) , 
8, -0.89528, 1, 0, 0.501359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417237,-99) , 
10, -2.81164, 0, 0, 0.498745,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0690657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49162, 0, 1, 0.555838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470467,-99) , 
10, 1.02057, 1, 0, 0.534016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499582,-99) , 
3, 3.26816, 0, 0, 0.531256,-99) , 
NN(
0, 
0, 
-1, -1.42841, 0, -1, 0.473793,-99) , 
9, -3.75706, 1, 0, 0.486253,-99) , 
10, -0.106128, 0, 0, 0.501768,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0901803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.623231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422995,-99) , 
0, 0.490156, 1, 0, 0.469698,-99) , 
0, 0.49206, 0, 0, 0.543935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47295,-99) , 
5, 0.523836, 1, 0, 0.491519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405538,-99) , 
3, 6.58082, 1, 0, 0.482895,-99) , 
0, 0.494282, 1, 0, 0.493666,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0778079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461448,-99) , 
8, -0.31266, 0, 0, 0.532987,-99) , 
NN(
0, 
0, 
-1, -0.624033, 1, -1, 0.469141,-99) , 
10, -1.70983, 0, 0, 0.522029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44725,-99) , 
10, 0.929733, 1, 0, 0.51415,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0834507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71415, 0, 1, 0.536864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43368,-99) , 
5, 0.809371, 1, 0, 0.478637,-99) , 
1, -0.000712534, 0, 0, 0.514944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436475,-99) , 
3, 3.35804, 1, 0, 0.481757,-99) , 
NN(
0, 
0, 
-1, 0.503174, 1, -1, 0.40378,-99) , 
5, -0.428495, 0, 0, 0.460854,-99) , 
0, 0.500948, 1, 0, 0.499866,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.121511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415085,-99) , 
8, -1.36592, 0, 0, 0.558864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429706,-99) , 
10, -0.498932, 0, 0, 0.505979,-99) , 
8, 0.429296, 1, 0, 0.526356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453812,-99) , 
3, 3.2315, 0, 0, 0.489727,-99) , 
NN(
0, 
0, 
-1, 0.494871, 0, -1, 0.43516,-99) , 
5, 0.714165, 1, 0, 0.457416,-99) , 
0, 0.497139, 0, 0, 0.497011,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0543002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535622,-99) , 
NN(
0, 
0, 
-1, 1.1621, 1, -1, 0.475516,-99) , 
9, -1.52043, 0, 0, 0.480871,-99) , 
8, 2.14293, 0, 0, 0.486787,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0827863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490493,-99) , 
0, 0.499996, 0, 0, 0.510143,-99) , 
9, -2.35885, 0, 0, 0.517722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439887,-99) , 
5, -0.333324, 0, 0, 0.50106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380454,-99) , 
7, -0.128605, 0, 0, 0.436991,-99) , 
7, -951.286, 1, 0, 0.464191,-99) , 
10, -0.226582, 1, 0, 0.497615,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.047597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400415,-99) , 
1, 0.00883347, 1, 0, 0.504617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414294,-99) , 
0, 0.498092, 0, 0, 0.46669,-99) , 
1, -0.00229635, 0, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435034,-99) , 
8, 2.14313, 1, 0, 0.492337,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0787939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.891166, 0, 1, 0.557588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438139,-99) , 
5, 0.945552, 1, 0, 0.504776,-99) , 
NN(
0, 
0, 
-1, 0.156465, 1, -1, 0.447613,-99) , 
5, 0.428575, 0, 0, 0.49357,-99) , 
5, -0.71429, 1, 0, 0.50242,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0924433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489254,-99) , 
5, 0.90462, 1, 0, 0.532714,-99) , 
NN(
0, 
0, 
-1, 0.0474461, 0, -1, 0.459056,-99) , 
0, 0.499998, 1, 0, 0.506868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482874,-99) , 
5, -0.755297, 0, 0, 0.51713,-99) , 
NN(
0, 
0, 
-1, -1.84616, 0, -1, 0.43862,-99) , 
5, -0.142981, 1, 0, 0.460444,-99) , 
10, -0.201558, 1, 0, 0.489402,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0901186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465145,-99) , 
0, 0.495238, 0, 0, 0.59872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490545,-99) , 
8, -0.112229, 1, 0, 0.507863,-99) , 
2, -0.0737556, 1, 0, 0.522549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416998,-99) , 
0, 0.495229, 0, 0, 0.489045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407877,-99) , 
5, -0.618375, 1, 0, 0.436911,-99) , 
8, 0.427118, 0, 0, 0.465859,-99) , 
7, -951.286, 0, 0, 0.500284,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.043547);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00445201, 1, 1, 0.579056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493358,-99) , 
5, 0.954631, 1, 0, 0.529256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462271,-99) , 
10, -1.77674, 0, 0, 0.500702,-99) , 
5, 0.904742, 0, 0, 0.508528,-99) , 
0, 0.491426, 1, 0, 0.51338,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.079728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13833, 0, 1, 0.523194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455617,-99) , 
5, 0.546469, 1, 0, 0.477477,-99) , 
10, -0.772571, 1, 0, 0.497621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394594,-99) , 
5, -0.904599, 0, 0, 0.488855,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0881075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93922, 0, 1, 0.539134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481538,-99) , 
5, -0.142857, 1, 0, 0.497537,-99) , 
10, 0.200875, 1, 0, 0.521673,-99) , 
NN(
NN(
0, 
0, 
-1, -2.71918, 0, 1, 0.592138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449842,-99) , 
8, 0.785736, 0, 0, 0.463085,-99) , 
8, -1.05995, 1, 0, 0.479679,-99) , 
9, -2.93546, 0, 0, 0.504402,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0662473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.15091, 0, 1, 0.541434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49241,-99) , 
0, 0.50054, 0, 0, 0.502605,-99) , 
NN(
0, 
0, 
-1, 4.07943, 1, -1, 0.445701,-99) , 
0, 0.501901, 1, 0, 0.487943,-99) , 
5, 0.809497, 0, 0, 0.512478,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0676842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450812,-99) , 
5, 0.238488, 1, 0, 0.508254,-99) , 
3, 4.1948, 0, 0, 0.542312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445853,-99) , 
10, -0.0224576, 1, 0, 0.490888,-99) , 
9, -1.08854, 0, 0, 0.497177,-99) , 
2, -0.0750248, 1, 0, 0.504106,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0684873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.50375, 1, 1, 0.536509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469807,-99) , 
5, -0.455796, 1, 0, 0.481061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394657,-99) , 
0, 0.505709, 1, 0, 0.475535,-99) , 
5, 0.904733, 0, 0, 0.491426,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0901849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50955, 1, 1, 0.53455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380566,-99) , 
0, 0.501901, 0, 0, 0.463158,-99) , 
0, 0.500948, 1, 0, 0.515985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445278,-99) , 
2, -0.0580509, 1, 0, 0.460817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30054,-99) , 
3, 4.43496, 1, 0, 0.445851,-99) , 
5, 0.238189, 0, 0, 0.49654,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0843683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.23347, 0, 1, 0.558964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444241,-99) , 
0, 0.50093, 0, 0, 0.474766,-99) , 
9, -2.28419, 1, 0, 0.523677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54927,-99) , 
NN(
0, 
0, 
-1, 0.00222677, 1, -1, 0.468267,-99) , 
1, 0.00235271, 0, 0, 0.477427,-99) , 
5, 0.619057, 1, 0, 0.493948,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0633777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.31271, 0, 1, 0.548563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477911,-99) , 
0, 0.498092, 0, 0, 0.498313,-99) , 
9, -3.09355, 1, 0, 0.510598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554785,-99) , 
NN(
0, 
0, 
-1, -0.974233, 1, -1, 0.433182,-99) , 
10, -2.10556, 0, 0, 0.467995,-99) , 
10, -1.84159, 0, 0, 0.505103,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0407917);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.874745, 0, 1, 0.576371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558672,-99) , 
NN(
0, 
0, 
-1, -0.523716, 0, -1, 0.488805,-99) , 
10, 0.897228, 0, 0, 0.495875,-99) , 
0, 0.491426, 1, 0, 0.501722,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0794383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472015,-99) , 
10, -1.11046, 0, 0, 0.514567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427136,-99) , 
7, -1.56196, 0, 0, 0.507605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464578,-99) , 
5, 0.52356, 1, 0, 0.491328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397275,-99) , 
10, -0.701508, 1, 0, 0.442287,-99) , 
0, 0.500946, 1, 0, 0.477632,-99) , 
7, -951.286, 0, 0, 0.49646,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.090622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.984204, 0, 1, 0.529296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386575,-99) , 
10, -0.244609, 0, 0, 0.487091,-99) , 
10, -0.416799, 1, 0, 0.509728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464137,-99) , 
0, 0.502715, 0, 0, 0.497148,-99) , 
NN(
0, 
0, 
-1, 0.0243814, 1, -1, 0.37882,-99) , 
5, -0.332108, 0, 0, 0.467226,-99) , 
0, 0.499044, 1, 0, 0.491437,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0923614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473185,-99) , 
0, 0.50068, 0, 0, 0.553366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484275,-99) , 
9, -3.01508, 1, 0, 0.506912,-99) , 
2, 0.0150866, 0, 0, 0.524257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454104,-99) , 
10, 0.431948, 1, 0, 0.50125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422099,-99) , 
8, -0.875977, 1, 0, 0.441365,-99) , 
8, 0.429616, 0, 0, 0.476551,-99) , 
0, 0.499045, 0, 0, 0.495456,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0840725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472429,-99) , 
2, 0.0676617, 1, 0, 0.526004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416483,-99) , 
0, 0.49907, 0, 0, 0.452301,-99) , 
5, 0.74604, 0, 0, 0.513099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444791,-99) , 
5, -0.229016, 0, 0, 0.468808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370533,-99) , 
3, 5.18404, 1, 0, 0.460067,-99) , 
5, 0.619062, 0, 0, 0.493121,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0888367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485608,-99) , 
10, -1.46936, 0, 0, 0.530645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463904,-99) , 
5, 0.931943, 1, 0, 0.515153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423001,-99) , 
0, 0.497458, 1, 0, 0.451884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359078,-99) , 
0, 0.49238, 0, 0, 0.436217,-99) , 
5, -0.428565, 0, 0, 0.499302,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0817136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494697, 1, 1, 0.535717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446748,-99) , 
0, 0.491702, 1, 0, 0.478951,-99) , 
0, 0.493335, 0, 0, 0.527097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477257,-99) , 
0, 0.498085, 1, 0, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379975,-99) , 
0, 0.499047, 0, 0, 0.428929,-99) , 
9, -2.58691, 0, 0, 0.482147,-99) , 
8, 0.429255, 1, 0, 0.49927,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0599669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469161,-99) , 
8, 0.979474, 1, 0, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0.0150866, 1, -1, 0.461983,-99) , 
0, 0.500948, 1, 0, 0.492084,-99) , 
NN(
0, 
0, 
-1, 0.898412, 0, -1, 0.450841,-99) , 
10, 0.180798, 1, 0, 0.482149,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0483319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.31078, 0, 1, 0.51327,-99) , 
NN(
0, 
0, 
-1, 0.714312, 1, -1, 0.469031,-99) , 
10, 0.0169046, 1, 0, 0.498885,-99) , 
NN(
0, 
0, 
-1, -1.78316, 0, -1, 0.396187,-99) , 
10, -2.43088, 0, 0, 0.492682,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0394705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493641,-99) , 
0, 0.495663, 1, 0, 0.501677,-99) , 
0, 0.506163, 0, 0, 0.504968,-99) , 
NN(
0, 
0, 
-1, -0.823806, 1, -1, 0.435766,-99) , 
0, 0.492382, 0, 0, 0.498068,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0767195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.116397, 0, 1, 0.579522,-99) , 
NN(
0, 
0, 
-1, 0.491153, 1, -1, 0.46499,-99) , 
7, -951.286, 0, 0, 0.531621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485693,-99) , 
10, -0.885475, 0, 0, 0.502076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443111,-99) , 
5, 0.619032, 1, 0, 0.464769,-99) , 
9, -3.01894, 1, 0, 0.478427,-99) , 
0, 0.49333, 1, 0, 0.485763,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0802566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.209537, 1, 1, 0.533485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432336,-99) , 
10, -2.05232, 0, 0, 0.522886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478625,-99) , 
9, -2.48969, 1, 0, 0.505057,-99) , 
NN(
0, 
0, 
-1, -3.08316, 1, -1, 0.457656,-99) , 
8, 1.0014, 0, 0, 0.476476,-99) , 
0, 0.499044, 0, 0, 0.494916,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0914061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.727903, 1, 1, 0.534662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448801,-99) , 
0, 0.493328, 0, 0, 0.522896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461813,-99) , 
10, 0.383318, 0, 0, 0.495828,-99) , 
NN(
0, 
0, 
-1, 1.2569, 0, -1, 0.386039,-99) , 
5, 0.0883985, 1, 0, 0.471545,-99) , 
5, 0.428617, 0, 0, 0.506422,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0652359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.22444, 0, 1, 0.578767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495952,-99) , 
8, 0.426557, 1, 0, 0.516223,-99) , 
0, 0.498815, 0, 0, 0.525005,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502172, 1, 1, 0.538913,-99) , 
NN(
0, 
0, 
-1, 0.237801, 0, -1, 0.46139,-99) , 
2, -0.0326202, 1, 0, 0.482644,-99) , 
0, 0.499994, 1, 0, 0.510588,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0749393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628652,-99) , 
NN(
NN(
0, 
0, 
-1, -0.778376, 1, 1, 0.536535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469189,-99) , 
0, 0.491426, 1, 0, 0.474893,-99) , 
5, -0.714089, 1, 0, 0.482741,-99) , 
8, -1.28395, 1, 0, 0.488634,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0901966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49711, 0, 1, 0.582235,-99) , 
NN(
NN(
0, 
0, 
-1, 0.238059, 1, 1, 0.554879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473384,-99) , 
9, -3.99237, 1, 0, 0.485655,-99) , 
0, 0.49333, 1, 0, 0.494588,-99) , 
8, 1.57175, 0, 0, 0.513172,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.105185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166404, 1, 1, 0.601816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444237,-99) , 
0, 0.503805, 1, 0, 0.521819,-99) , 
9, -2.26724, 0, 0, 0.541653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425143,-99) , 
8, 1.85898, 1, 0, 0.473329,-99) , 
9, -1.49815, 1, 0, 0.531592,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0627935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49053,-99) , 
8, 0.715248, 0, 0, 0.509572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402398,-99) , 
0, 0.506253, 1, 0, 0.505437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377183,-99) , 
3, 2.29607, 0, 0, 0.419523,-99) , 
3, 3.61398, 0, 0, 0.445138,-99) , 
0, 0.49333, 0, 0, 0.495769,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0893762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.69735, 0, 1, 0.566997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464603,-99) , 
10, 0.167956, 1, 0, 0.521234,-99) , 
5, -0.0475517, 1, 0, 0.530824,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.532471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364871,-99) , 
8, -0.253024, 1, 0, 0.42461,-99) , 
10, -0.778882, 0, 0, 0.484647,-99) , 
0, 0.493331, 0, 0, 0.523714,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0839693);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467037,-99) , 
9, -2.32387, 0, 0, 0.483921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427609,-99) , 
10, 0.326956, 1, 0, 0.47602,-99) , 
9, -1.29454, 0, 0, 0.482993,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0818457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904614, 0, 1, 0.536534,-99) , 
NN(
0, 
0, 
-1, -0.0485425, 0, -1, 0.47826,-99) , 
0, 0.496458, 0, 0, 0.510734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447347,-99) , 
7, -951.286, 0, 0, 0.512177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358807,-99) , 
0, 0.502442, 1, 0, 0.407129,-99) , 
0, 0.503803, 0, 0, 0.457917,-99) , 
0, 0.501898, 1, 0, 0.499631,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0838899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00987682, 1, 1, 0.603187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456254,-99) , 
8, -0.696044, 1, 0, 0.556097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357665,-99) , 
5, 0.240679, 0, 0, 0.524564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459483,-99) , 
3, 1.28324, 1, 0, 0.479999,-99) , 
3, 4.16874, 0, 0, 0.489764,-99) , 
9, -4.11922, 1, 0, 0.49554,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0941743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464619,-99) , 
0, 0.494291, 0, 0, 0.544382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461097,-99) , 
5, 0.523681, 1, 0, 0.482816,-99) , 
9, -2.96313, 1, 0, 0.50397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38364,-99) , 
10, -2.6334, 0, 0, 0.49854,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0668118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.712525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463938,-99) , 
0, 0.495798, 1, 0, 0.58953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406132,-99) , 
0, 0.495001, 1, 0, 0.506034,-99) , 
0, 0.495371, 0, 0, 0.522703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488994,-99) , 
9, -4.13255, 1, 0, 0.496785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373203,-99) , 
2, 0.148588, 1, 0, 0.485224,-99) , 
0, 0.496187, 1, 0, 0.497476,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0854793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.818614, 1, 1, 0.548398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415751,-99) , 
3, 0.784151, 0, 0, 0.490223,-99) , 
5, 0.619025, 0, 0, 0.524807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45433,-99) , 
0, 0.495237, 0, 0, 0.548166,-99) , 
NN(
0, 
0, 
-1, -1.97418, 0, -1, 0.463862,-99) , 
9, -4.05997, 1, 0, 0.482982,-99) , 
10, -0.770518, 0, 0, 0.506902,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0533331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415729,-99) , 
0, 0.490476, 0, 0, 0.510191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444508,-99) , 
9, -1.13595, 1, 0, 0.503363,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.402749,-99) , 
10, -2.43088, 0, 0, 0.497344,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.111828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.03756, 0, 1, 0.557793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455971,-99) , 
8, 1.95749, 0, 0, 0.499015,-99) , 
9, -2.49904, 1, 0, 0.532855,-99) , 
NN(
NN(
0, 
0, 
-1, 0.717921, 1, 1, 0.554767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454403,-99) , 
2, 0.0820364, 0, 0, 0.472327,-99) , 
1, 0.00195615, 0, 0, 0.489503,-99) , 
7, -951.286, 0, 0, 0.516507,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0811306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97886, 0, 1, 0.572769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465813,-99) , 
5, 0.714258, 0, 0, 0.495619,-99) , 
8, 1.5709, 0, 0, 0.511703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516186,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.392184,-99) , 
0, 0.494293, 1, 0, 0.41842,-99) , 
1, 0.00309911, 1, 0, 0.500136,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0528567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46489,-99) , 
5, -0.523728, 0, 0, 0.507809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413474,-99) , 
0, 0.490065, 0, 0, 0.50353,-99) , 
NN(
0, 
0, 
-1, 0.443706, 0, -1, 0.425627,-99) , 
0, 0.504756, 1, 0, 0.497532,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.057832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481333,-99) , 
0, 0.50444, 0, 0, 0.560182,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.503205,-99) , 
9, -2.82693, 1, 0, 0.527187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588757,-99) , 
NN(
0, 
0, 
-1, 0.501609, 1, -1, 0.47427,-99) , 
0, 0.489794, 1, 0, 0.47813,-99) , 
0, 0.502852, 0, 0, 0.485165,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0674166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490842,-99) , 
5, 0.723329, 0, 0, 0.533927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391294,-99) , 
7, -1.27949, 0, 0, 0.483617,-99) , 
7, -951.286, 1, 0, 0.503619,-99) , 
NN(
0, 
0, 
-1, 0.76878, 1, -1, 0.454766,-99) , 
5, 0.904733, 1, 0, 0.491069,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0865801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.628107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380392,-99) , 
10, -2.52347, 0, 0, 0.502184,-99) , 
5, 0.0475293, 1, 0, 0.529258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475145,-99) , 
8, 0.567699, 1, 0, 0.485861,-99) , 
NN(
0, 
0, 
-1, 0.735467, 1, -1, 0.416063,-99) , 
0, 0.493328, 0, 0, 0.475285,-99) , 
9, -3.03465, 1, 0, 0.494389,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0739708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441004,-99) , 
0, 0.503805, 1, 0, 0.508008,-99) , 
2, -0.172613, 1, 0, 0.514937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475518,-99) , 
5, 0.909282, 0, 0, 0.499748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423685,-99) , 
10, -1.15514, 0, 0, 0.470998,-99) , 
5, 0.809508, 1, 0, 0.494487,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0848769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473472,-99) , 
10, -0.769906, 1, 0, 0.501555,-99) , 
2, 0.0778832, 0, 0, 0.517385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473008,-99) , 
0, 0.491429, 1, 0, 0.480104,-99) , 
NN(
0, 
0, 
-1, 0.523686, 0, -1, 0.419588,-99) , 
2, 0.066066, 1, 0, 0.468672,-99) , 
7, -951.286, 1, 0, 0.486863,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0477898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497712,-99) , 
8, 0.143306, 0, 0, 0.539817,-99) , 
5, -0.564613, 0, 0, 0.555451,-99) , 
NN(
0, 
0, 
-1, 0.490473, 0, -1, 0.484168,-99) , 
5, -0.238026, 1, 0, 0.498061,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0333253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496368,-99) , 
9, -4.24711, 1, 0, 0.502323,-99) , 
0, 0.505891, 0, 0, 0.506671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377144,-99) , 
0, 0.489524, 0, 0, 0.502586,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0438696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0335976, 1, 1, 0.518694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353729,-99) , 
8, 0.76742, 0, 0, 0.484026,-99) , 
9, -2.14628, 1, 0, 0.506719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428489,-99) , 
2, 0.20868, 1, 0, 0.502152,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0515973);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603275,-99) , 
NN(
0, 
0, 
-1, -4.02802, 0, -1, 0.478024,-99) , 
1, -0.00487853, 1, 0, 0.483878,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0684896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85898, 0, 1, 0.573994,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500676, 1, 1, 0.536803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395407,-99) , 
9, -4.17985, 0, 0, 0.498224,-99) , 
0, 0.499043, 0, 0, 0.513849,-99) , 
9, -1.48772, 0, 0, 0.522633,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0799639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472431,-99) , 
0, 0.497145, 0, 0, 0.545624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474593,-99) , 
0, 0.496187, 1, 0, 0.490852,-99) , 
9, -1.58413, 0, 0, 0.501345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415752,-99) , 
9, -4.7344, 0, 0, 0.474252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329663,-99) , 
8, -0.785308, 1, 0, 0.438471,-99) , 
10, -1.99004, 0, 0, 0.494833,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0668805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414139,-99) , 
10, -2.08922, 0, 0, 0.515912,-99) , 
8, -1.28401, 1, 0, 0.519568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466289,-99) , 
0, 0.505194, 1, 0, 0.509533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406458,-99) , 
0, 0.503984, 0, 0, 0.472701,-99) , 
0, 0.502851, 1, 0, 0.512475,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0639391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499436, 0, 1, 0.54354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488508,-99) , 
9, -4.38191, 1, 0, 0.495699,-99) , 
10, 0.119413, 0, 0, 0.508478,-99) , 
NN(
0, 
0, 
-1, 0.619058, 0, -1, 0.424912,-99) , 
0, 0.49333, 0, 0, 0.495667,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0850435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659084, 1, 1, 0.561146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486425,-99) , 
10, -0.274262, 1, 0, 0.493681,-99) , 
9, -2.26465, 1, 0, 0.512706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463906,-99) , 
0, 0.499042, 0, 0, 0.507347,-99) , 
NN(
0, 
0, 
-1, -1.31749, 0, -1, 0.442084,-99) , 
8, -0.0254347, 1, 0, 0.472402,-99) , 
9, -2.69413, 0, 0, 0.492555,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0633918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495995,-99) , 
8, 0.477508, 0, 0, 0.538534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485377,-99) , 
0, 0.500947, 0, 0, 0.527951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478283,-99) , 
0, 0.492382, 1, 0, 0.484143,-99) , 
2, 0.0693158, 0, 0, 0.491418,-99) , 
5, 0.90473, 0, 0, 0.504138,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.095746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492878,-99) , 
10, -0.787037, 1, 0, 0.548844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408307,-99) , 
8, -0.32985, 1, 0, 0.495352,-99) , 
10, -1.48618, 0, 0, 0.526622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473431,-99) , 
7, -951.286, 1, 0, 0.495049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379156,-99) , 
8, 1.14994, 1, 0, 0.41438,-99) , 
0, 0.495243, 0, 0, 0.474903,-99) , 
8, 0.714821, 1, 0, 0.499953,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.109753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498184, 1, 1, 0.531561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400168,-99) , 
0, 0.492382, 0, 0, 0.516088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423636,-99) , 
10, 1.01646, 1, 0, 0.530797,-99) , 
NN(
0, 
0, 
-1, 3.33901, 1, -1, 0.447719,-99) , 
9, -2.01241, 0, 0, 0.482576,-99) , 
8, 0.429616, 1, 0, 0.495672,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0873224);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473735,-99) , 
10, -1.69329, 0, 0, 0.542786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478342,-99) , 
9, -2.52199, 1, 0, 0.50434,-99) , 
5, 0.809506, 1, 0, 0.526269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45375,-99) , 
2, 0.066066, 0, 0, 0.487286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348377,-99) , 
9, -4.08877, 0, 0, 0.470473,-99) , 
3, 4.16621, 1, 0, 0.513976,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0689024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435717,-99) , 
10, -1.94485, 0, 0, 0.518385,-99) , 
NN(
0, 
0, 
-1, 1.36799, 1, -1, 0.467029,-99) , 
5, 0.0476088, 0, 0, 0.505456,-99) , 
8, -1.28436, 1, 0, 0.51075,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0545786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.7393, 0, 1, 0.522601,-99) , 
NN(
0, 
0, 
-1, 0.498073, 1, -1, 0.470924,-99) , 
5, 0.904751, 1, 0, 0.508604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407983,-99) , 
10, -2.6334, 0, 0, 0.50428,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0611647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499449,-99) , 
2, 0.00123723, 1, 0, 0.522422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441185,-99) , 
8, 0.134109, 1, 0, 0.480708,-99) , 
2, 0.074051, 1, 0, 0.515918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417337,-99) , 
0, 0.489522, 0, 0, 0.513131,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0863162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.032462, 1, 1, 0.560955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412505,-99) , 
0, 0.497392, 1, 0, 0.495692,-99) , 
0, 0.499021, 0, 0, 0.522485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475286,-99) , 
5, 0.428599, 1, 0, 0.494426,-99) , 
NN(
0, 
0, 
-1, -2.48829, 0, -1, 0.42983,-99) , 
10, -0.567698, 1, 0, 0.481178,-99) , 
8, 0.999917, 0, 0, 0.497774,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0826079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493167,-99) , 
9, -3.56838, 0, 0, 0.563116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456391,-99) , 
0, 0.499047, 1, 0, 0.508485,-99) , 
2, 0.00795385, 1, 0, 0.538991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540198,-99) , 
NN(
0, 
0, 
-1, 0.910885, 0, -1, 0.475879,-99) , 
3, 4.18007, 0, 0, 0.491339,-99) , 
5, 0.714147, 1, 0, 0.51169,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0719262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437666,-99) , 
10, -1.50426, 0, 0, 0.532098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480392,-99) , 
9, -2.97037, 1, 0, 0.493338,-99) , 
0, 0.496732, 1, 0, 0.503633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475244,-99) , 
0, 0.489599, 0, 0, 0.530325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349709,-99) , 
0, 0.492242, 1, 0, 0.462744,-99) , 
0, 0.49333, 0, 0, 0.49784,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.113949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477104,-99) , 
10, -0.050807, 1, 0, 0.543073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428098,-99) , 
0, 0.495238, 1, 0, 0.464178,-99) , 
10, -1.48626, 0, 0, 0.521833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466869,-99) , 
5, 0.428631, 1, 0, 0.488868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389158,-99) , 
8, 1.6012, 0, 0, 0.461304,-99) , 
10, 0.188702, 1, 0, 0.505976,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0820954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.719213, 0, 1, 0.530106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465819,-99) , 
10, 0.347448, 0, 0, 0.485475,-99) , 
7, -951.286, 0, 0, 0.512676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361673,-99) , 
5, 0.240698, 0, 0, 0.469284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324469,-99) , 
10, -2.11583, 1, 0, 0.416991,-99) , 
8, -0.713606, 0, 0, 0.501034,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.105701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82312, 1, 1, 0.53907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370155,-99) , 
10, -0.872722, 0, 0, 0.524762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426959,-99) , 
5, -0.619039, 0, 0, 0.558285,-99) , 
NN(
0, 
0, 
-1, -1.87294, 0, -1, 0.451455,-99) , 
8, -0.712953, 1, 0, 0.47801,-99) , 
8, 0.429458, 0, 0, 0.506184,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0675122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397164,-99) , 
3, 2.42744, 1, 0, 0.53295,-99) , 
3, 2.96881, 0, 0, 0.560995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392642,-99) , 
5, 0.251725, 0, 0, 0.499645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351348,-99) , 
6, 0.00635226, 1, 0, 0.49274,-99) , 
5, -0.0476284, 1, 0, 0.506563,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0597138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498364, 1, 1, 0.51691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451631,-99) , 
10, -1.17191, 1, 0, 0.472689,-99) , 
0, 0.496187, 0, 0, 0.502075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411443,-99) , 
2, -0.194297, 0, 0, 0.496633,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0987566);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420945,-99) , 
5, -0.714306, 0, 0, 0.506864,-99) , 
NN(
0, 
0, 
-1, 0.809522, 0, -1, 0.457177,-99) , 
6, 0.00262412, 0, 0, 0.469953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349194,-99) , 
6, 0.0110205, 1, 0, 0.465412,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0955554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238368, 1, 1, 0.563357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493861,-99) , 
9, -2.07944, 1, 0, 0.542237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45596,-99) , 
2, -0.0498117, 0, 0, 0.511559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440466,-99) , 
5, -0.617556, 1, 0, 0.454613,-99) , 
9, -2.42535, 0, 0, 0.477564,-99) , 
0, 0.5019, 0, 0, 0.490214,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.078572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0307261, 1, 1, 0.555826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438215,-99) , 
1, 0.00254534, 1, 0, 0.536964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469475,-99) , 
8, 0.326587, 1, 0, 0.476775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398545,-99) , 
8, -0.119311, 0, 0, 0.472639,-99) , 
10, -1.35723, 1, 0, 0.48664,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0681893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07195, 0, 1, 0.527324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473523,-99) , 
5, -0.809406, 1, 0, 0.486833,-99) , 
10, -0.481693, 1, 0, 0.507417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450769,-99) , 
3, 2.67029, 0, 0, 0.501444,-99) , 
NN(
0, 
0, 
-1, 0.496322, 1, -1, 0.434685,-99) , 
0, 0.499044, 0, 0, 0.461968,-99) , 
2, 0.067462, 1, 0, 0.499443,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0716584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361851,-99) , 
8, -0.599167, 0, 0, 0.517256,-99) , 
9, -4.07399, 1, 0, 0.530654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459706,-99) , 
5, 0.943851, 1, 0, 0.496024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419692,-99) , 
0, 0.496195, 1, 0, 0.445743,-99) , 
5, 0.705235, 0, 0, 0.488097,-99) , 
5, 0.5238, 1, 0, 0.501108,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.059796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619535,-99) , 
NN(
0, 
0, 
-1, 1.058, 1, -1, 0.482417,-99) , 
9, -1.6728, 0, 0, 0.490714,-99) , 
NN(
0, 
0, 
-1, -1.19082, 0, -1, 0.439467,-99) , 
10, 0.575185, 1, 0, 0.4822,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0631579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496731,-99) , 
2, 0.0155913, 0, 0, 0.508418,-99) , 
9, -1.3994, 0, 0, 0.518906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560718,-99) , 
NN(
0, 
0, 
-1, -4.28134, 1, -1, 0.350047,-99) , 
8, -1.38817, 1, 0, 0.428099,-99) , 
10, -2.10334, 0, 0, 0.510438,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0834853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.527609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385417,-99) , 
9, -4.32423, 1, 0, 0.465958,-99) , 
10, -2.04193, 0, 0, 0.520522,-99) , 
NN(
0, 
0, 
-1, -1.31682, 1, -1, 0.414576,-99) , 
10, 0.498741, 1, 0, 0.500882,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0825119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502849, 0, 1, 0.569885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374702,-99) , 
7, -1.28023, 0, 0, 0.485514,-99) , 
7, -951.286, 1, 0, 0.521936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458664,-99) , 
0, 0.498086, 1, 0, 0.482045,-99) , 
NN(
0, 
0, 
-1, 0.498071, 1, -1, 0.421412,-99) , 
5, 0.809554, 0, 0, 0.469719,-99) , 
5, 0.714269, 1, 0, 0.491383,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_12_25_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_12_25_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_12_25_noP *ReadBDT_maker_LHC19c2b_12_25_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_12_25_noP(theInpVar);
  }
}
