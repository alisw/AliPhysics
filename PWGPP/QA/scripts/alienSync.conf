# this is the configuration file for the automatic alien to local
# sync of files.

#this has to produce a list of alien files
#alien_find is used by default, it is also possible to download the files listed in a (group of)
#xml colletion using the internal command "listCollectionContents", see example below
alienFindCommand="alien_find /alice/data/2012/ OCDB/root_archive.zip"
#alienFindCommand="listCollectionContents /alice/cern.ch/user/a/alitrain/PWGPP/AdHocCalibration merge/Stage_1.xml"
#this one skips the alienFindCommand and uses the existing localAlienDatabase.list file
#useExistingAlienFileDatabase=1

localPathPrefix="/hera/alice/alien"

logOutputPath="/hera/alice/aux/logs/alienSync/alienSync.2012.CalibObjects.root.logs"

alienUserName="mkrzewic"

# set to 1 for a cron job - all stdout and stderr redirected to a log file
allOutputToLog=1
# set to 1 if you want to unzip the zip files
unzipFiles=0

#force local md5 recalculation instead of getting the md5 from database
#(note that removing the localAlienDatabase.list file in the log directory will force this)
#forceLocalMD5recalculation=1

#create a symlink to the file to handle name changes transparently for
#scripts relying on consistent naming
#softLinkName=""

#put a time stamp in the log at the beginning of every iteration
#timeStampInLog=1

#number of seconds to Suicide
secondsToSuicide=$(( 10*3600 ))

#all files will be in the specified group:
#alienSyncFilesGroupOwnership="z2"

#execute in the destination directory after the file has been downloaded
#one can use the internal variable ${destination} to access the file
#example:
#postCommand="ls -lh ${destination}"

#how to copy, default (empty string) uses alien_cp
#copyMethod=tfilecp
#copyScript=/hera/alice/aux/scripts/cron_scripts/alienSync/copyAlienFile.C

#copyTimeout=600
#copyTimeoutHard=1200

#the path can be modified for various purposes, has take stdin and output to stdout
#destinationModifyCommand="sed s|PWGPP/AdHocCalibration/[0-9]*_[0-9]*-[0-9]*/||"

#execute at the end - for example to process the newly downloaded files 
#${updatedFilesList}=${newFilesList}+${redoneFilesList}
#executeEnd='$ALICE_ROOT/QA/scripts/runQA.sh configFile=someConfig.file inputList=${updatedFilesList}'
